From L.C.L.Kats at tudelft.nl  Tue Sep  1 12:00:25 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 01 Sep 2009 10:00:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19908 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.generator/src/sdf2imp
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
Message-ID: <200909010959.n819xiQC022600@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-01 10:00:25 +0000 (Tue, 01 Sep 2009)
New Revision: 19908

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19908&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-def-file.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java

Log:
Fixed various random glitches in project creation, rebuilding, and reloading.

All .def files are now generated into the /include/ directory to ensure
Eclipse doesn't delete them.


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-09-01 10:00:25 UTC (rev 19908)
@@ -55,7 +55,7 @@
     with(<chdir> <dirname>; <chdir> "..");
     guarantee-extension(|"def"); // remove .main.esv
     base-filename;
-    (file-exists <+ <conc-strings> ("syntax/", <id>));
+    (file-exists <+ <conc-strings> ("include/", <id>));
     if not(file-exists) then
       fatal-err(|"Accompanying .def file not found.")
     end;
@@ -139,5 +139,6 @@
   pack-sdf:
     FILE(sdf) -> FILE(def)
     with
-      def := <guarantee-extension(|"def")> sdf;
+      def := <conc-strings> ("include/", <get-sdf-main-module>, ".def");
+      <file-exists <+ mkdir> "include";
       <xtc-command(!"pack-sdf")> ["-i", sdf, "-o", def | <pass-verbose>]

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-def-file.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-def-file.str	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-def-file.str	2009-09-01 10:00:25 UTC (rev 19908)
@@ -6,7 +6,7 @@
 strategies
 
   copy-def-file =
-    if NoExistingDescriptor; InputFile; not(<file-exists> "syntax") then
-      <mkdir> "syntax";
-      <copy-file> (<InputFile>, "syntax")
+    if NoExistingDescriptor; InputFile; not(<file-exists> "include") then
+      <mkdir> "include";
+      <copy-file> (<InputFile>, "include")
     end
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-01 10:00:25 UTC (rev 19908)
@@ -69,26 +69,26 @@
                 <arg value="-m"/>
                 <arg value="${sdfmodule}"/>
                 
-                <fileset file="${syntax}/${sdfmodule}-Permissive.gendef"/>
-                <mapper type="glob" from="*-Permissive.gendef" to="*.tbl"/>
+                <fileset file="include/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
             </apply>
         </target>
         
         <target name="make-permissive" depends="pack-sdf">
             <dependset>
-                <srcfileset    file="${build}/${sdfmodule}.def"/>
-                <targetfileset file="${syntax}/${sdfmodule}-Permissive.gendef"/>
+                <srcfileset    file="include/${sdfmodule}.def"/>
+                <targetfileset file="include/${sdfmodule}-Permissive.def"/>
             </dependset>
             <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
                 <arg value="-i"/>
-                <arg value="${build}/${sdfmodule}.def"/>
+                <arg value="${basedir}/include/${sdfmodule}.def"/>
                 <arg value="-o"/>
-            	<arg value="${syntax}/${sdfmodule}-Permissive.gendef"/>
+            	<arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
             </java>
         </target>
 
         <target name="pack-sdf" depends="init">
-            <available property="source-sdf-exists" resource="${syntax}/${sdfmodule}.sdf"/>
+            <available property="source-sdf-exists" file="${syntax}/${sdfmodule}.sdf"/>
         	<antcall target="pack-sdf.real"/>
         	<antcall target="pack-sdf.copy"/>
         </target>
@@ -98,7 +98,7 @@
                 <srcfilelist dir="${syntax}" files="**/*.sdf"/>
                 <targetfileset file="${syntax}/${sdfmodule}.def"/>
             </dependset>
-            <apply executable="${build.strategoxt}/pack-sdf" dest="${build}" failonerror="true">
+            <apply executable="${build.strategoxt}/pack-sdf" failonerror="true" dest="include">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-o"/>
@@ -115,7 +115,8 @@
         </target>
 	
 	    <target name="pack-sdf.copy" depends="init" unless="source-sdf-exists">
-            <copy file="${syntax}/${sdfmodule}.def" todir="${build}"/>
+        	<echo message="Could not find ${syntax}/${sdfmodule}.sdf" level="warning" />
+            <copy file="${syntax}/${sdfmodule}.def" todir="include"/>
         </target>
     
         <target name="rtg2sig" depends="init,sdf2rtg">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2009-09-01 10:00:25 UTC (rev 19908)
@@ -7,7 +7,8 @@
 
   create-builder-xml =
     // The XML pretty printer has problems with this file, so it's printed as text instead.
-    // Also, ${project_name} and ${project_loc} don't seem to always work properly...?
+    // Half the time ${project_name} and ${project_loc} don't work, so
+    // we're using name instead
     name := <ProjectName <+ get-sdf-main-module>; 
     
     <output-text-file(|[".externalToolBuilders"], "Ant Builder.launch")>
@@ -37,14 +38,14 @@
 <listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;\"/>
 <listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
 <listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
-<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.jdt.launching.classpathentry.variableClasspathEntry&quot;&gt;&#10;&lt;memento path=&quot;3&quot; variableString=&quot;${project_loc}/aux/make_permissive.jar&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
-<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.jdt.launching.classpathentry.variableClasspathEntry&quot;&gt;&#10;&lt;memento path=&quot;3&quot; variableString=&quot;${project_loc}/aux/strategoxt.jar&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
+<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.jdt.launching.classpathentry.variableClasspathEntry&quot;&gt;&#10;&lt;memento path=&quot;3&quot; variableString=&quot;", name, "/aux/make_permissive.jar&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
+<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.jdt.launching.classpathentry.variableClasspathEntry&quot;&gt;&#10;&lt;memento path=&quot;3&quot; variableString=&quot;", name, "/aux/strategoxt.jar&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
 </listAttribute>
 <stringAttribute key=\"org.eclipse.jdt.launching.CLASSPATH_PROVIDER\" value=\"org.eclipse.ant.ui.AntClasspathProvider\"/>
 <booleanAttribute key=\"org.eclipse.jdt.launching.DEFAULT_CLASSPATH\" value=\"false\"/>
-<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_LOCATION\" value=\"${project_loc}/build.xml\"/>
+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_LOCATION\" value=\"${workspace_loc:/", name, "/build.xml}\"/>
 <stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS\" value=\"full,incremental,\"/>
 <booleanAttribute key=\"org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED\" value=\"true\"/>
-<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY\" value=\"${project_loc}\"/>
+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY\" value=\"${workspace_loc:/", name, "}\"/>
 </launchConfiguration>"
 )
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str	2009-09-01 10:00:25 UTC (rev 19908)
@@ -51,7 +51,7 @@
 
   permissive-grammar-target =
     <file-exists <+ mkdir> "include";
-    <conc-strings> ("include/", <get-sdf-main-module>, "-Permissive.gendef")
+    <conc-strings> ("include/", <get-sdf-main-module>, "-Permissive.def")
 
   parse-table-target =
     <file-exists <+ mkdir> "include";

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java	2009-09-01 10:00:25 UTC (rev 19908)
@@ -35,28 +35,41 @@
  */
 public class DynamicDescriptorUpdater implements IResourceChangeListener {
 	
-	private DynamicDescriptorBuilder builder;
+	private static final DynamicDescriptorUpdater instance = new DynamicDescriptorUpdater();
 	
-	private static Set<IResource> updateOnly =
+	private final Set<IResource> asyncIgnoreOnce =
 		Collections.synchronizedSet(new HashSet<IResource>());
 	
-	private final AstMessageHandler messageHandler =
+	private final AstMessageHandler asyncMessageHandler =
 		new AstMessageHandler(AstMessageHandler.ANALYSIS_MARKER_TYPE);
 	
+	private DynamicDescriptorBuilder asyncBuilder;
+	
 	private DynamicDescriptorBuilder getBuilder() {
-		if (builder == null)
-			builder = new DynamicDescriptorBuilder(this);
-		return builder;
+		Environment.assertLock();
+		if (asyncBuilder == null)
+			asyncBuilder = new DynamicDescriptorBuilder(this);
+		return asyncBuilder;
 	}
 	
+	private DynamicDescriptorUpdater() {
+		// use getInstance() instead
+	}
+	
+	public static DynamicDescriptorUpdater getInstance() {
+		return instance;
+	}
+	
 	/**
-	 * Schedules a file to be updated (not built)
-	 * for the next time a matching resource event
-	 * is received.
+	 * Loads the editor for the specified descriptor,
+	 * and ignore it the next resource event arrives.
 	 */
-	public static void scheduleUpdate(IResource resource) {
-		assert resource.toString().endsWith(".packed.esv");
-		updateOnly.add(resource);
+	public void forceUpdate(IResource resource) {
+		synchronized (Environment.getSyncRoot()) {
+			assert resource.toString().endsWith(".packed.esv");
+			asyncIgnoreOnce.add(resource);
+			loadPackedDescriptor(resource);
+		}
 	}
 
 	public void resourceChanged(final IResourceChangeEvent event) {
@@ -101,12 +114,17 @@
 	}
 	
 	public void updateResource(IResource resource, IProgressMonitor monitor, boolean startup) {
+		Environment.assertLock();
+		
 		if (resource.getName().endsWith(".packed.esv")) {
 			IResource source = getSourceDescriptor(resource);
 			
-			boolean isUpdateOnly = updateOnly.contains(resource);
+			if (asyncIgnoreOnce.contains(resource)) {
+				asyncIgnoreOnce.remove(resource);
+				return;
+			}
 			
-			if (!source.equals(resource) && source.exists() && !isUpdateOnly && !startup) {
+			if (!source.equals(resource) && source.exists() && !startup) {
 				// Try to build using the .main.esv instead;
 				// the build.xml file may touch the .packed.esv file
 				// to signal a rebuild is necessary
@@ -115,7 +133,6 @@
 			} else if (resource.exists()) {
 				monitor.subTask("Loading " + resource.getName());
 				loadPackedDescriptor(resource);
-				if (isUpdateOnly) updateOnly.remove(resource);
 			}
 		} else if (!startup) {
 			// Re-build descriptor if resource changed (but not if we're starting up)
@@ -124,10 +141,12 @@
 	}
 
 	public void loadPackedDescriptor(IResource descriptor) {
+		Environment.assertLock();
+		
 		// TODO2: Properly trace back descriptor errors to their original source
 		IResource source = getSourceDescriptor(descriptor);
 		try {
-			messageHandler.clearMarkers(source);
+			asyncMessageHandler.clearMarkers(source);
 			
 			IFile file = descriptor.getProject().getFile(descriptor.getProjectRelativePath());
 			DescriptorFactory.load(file);
@@ -166,36 +185,40 @@
 	}
 	
 	private void reportError(final IResource descriptor, final String message) {
+		Environment.assertLock();
+		
 		if (ResourcesPlugin.getWorkspace().isTreeLocked()) {
 			Job job = new WorkspaceJob("Add error marker") {
 				{ setSystem(true); } // don't show to user
 				@Override
 				public IStatus runInWorkspace(IProgressMonitor monitor) {
-					messageHandler.addMarkerFirstLine(descriptor, message, SEVERITY_ERROR);
+					asyncMessageHandler.addMarkerFirstLine(descriptor, message, SEVERITY_ERROR);
 					return Status.OK_STATUS;
 				}
 			};
 			job.setRule(descriptor);
 			job.schedule();
 		} else {
-			messageHandler.addMarkerFirstLine(descriptor, message, SEVERITY_ERROR);
+			asyncMessageHandler.addMarkerFirstLine(descriptor, message, SEVERITY_ERROR);
 		}
 	}
 	
 	private void reportError(final IResource descriptor, final IStrategoTerm offendingTerm, final String message) {
+		Environment.assertLock();
+
 		if (ResourcesPlugin.getWorkspace().isTreeLocked()) {
 			Job job = new WorkspaceJob("Add error marker") {
 				{ setSystem(true); } // don't show to user
 				@Override
 				public IStatus runInWorkspace(IProgressMonitor monitor) {
-					messageHandler.addMarker(descriptor, offendingTerm, message, SEVERITY_ERROR);
+					asyncMessageHandler.addMarker(descriptor, offendingTerm, message, SEVERITY_ERROR);
 					return Status.OK_STATUS;
 				}
 			};
 			job.setRule(descriptor);
 			job.schedule();
 		} else {
-			messageHandler.addMarkerFirstLine(descriptor, message, SEVERITY_ERROR);
+			asyncMessageHandler.addMarkerFirstLine(descriptor, message, SEVERITY_ERROR);
 		}
 	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java	2009-09-01 10:00:25 UTC (rev 19908)
@@ -30,7 +30,7 @@
 			if (didInitialize) return;
 			didInitialize = true;
 			
-			loader = new DynamicDescriptorUpdater();
+			loader = DynamicDescriptorUpdater.getInstance();
 		
 			loadAllServices();
 			

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-01 10:00:25 UTC (rev 19908)
@@ -10,6 +10,8 @@
 import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.jface.dialogs.MessageDialog;
 import org.eclipse.jface.operation.IRunnableWithProgress;
@@ -92,17 +94,17 @@
 		return true;
 	}
 	
-	private void doFinish(String languageName, String projectName, String packageName, String extensions, IProgressMonitor monitor) throws IOException, CoreException {
-		final int TASK_COUNT = 5;
+ 	private void doFinish(String languageName, String projectName, String packageName, String extensions, IProgressMonitor monitor) throws IOException, CoreException {
+		final int TASK_COUNT = 6;
 		monitor.beginTask("Creating " + languageName + " project", TASK_COUNT);
 		
-		monitor.setTaskName("Preparing project builder...");
+		monitor.setTaskName("Preparing project builder");
 		EditorIOAgent agent = new EditorIOAgent();		
 		Context context = new Context(Environment.getTermFactory(), agent);
 		sdf2imp.init(context);
-		monitor.worked(1);
+		monitor.worked(3);
 
-		monitor.setTaskName("Creating project...");
+		monitor.setTaskName("Creating project");
 		IWorkspace workspace = ResourcesPlugin.getWorkspace();
 		IProject project = workspace.getRoot().getProject(projectName);
 		project.create(null);
@@ -117,30 +119,46 @@
 				sdf2imp.mainNoExit(context, "-m", languageName, "-pn", projectName, "-n", packageName, "-e", extensions, "-jar", jar1, jar2);
 			} catch (StrategoErrorExit e) {
 				Environment.logException(e);
-				throw new StrategoErrorExit("Project builder failed: " + e.getMessage());
+				throw new StrategoException("Project builder failed: " + e.getMessage(), e);
 			} catch (StrategoExit e) {
 				if (e.getValue() != 0) {
 					throw new StrategoException("Project builder failed. Log follows\n\n"
 							+ agent.getLog(), e);
 				}
 			}
-			project.refreshLocal(IResource.DEPTH_INFINITE, monitor);
-			monitor.worked(1);
+
+			monitor.setTaskName("Acquiring project lock");
+			Job.getJobManager().beginRule(project, monitor);  // avoid ant builder launching
+			try {
+				// FIXME: 
+				monitor.setTaskName("Acquiring environment lock");
+				synchronized (Environment.getSyncRoot()) { // avoid background editor loading
+					monitor.setTaskName("Loading new resources");
+					project.refreshLocal(IResource.DEPTH_INFINITE, new NullProgressMonitor());
+					monitor.worked(1);
+					
+					monitor.setTaskName("Loading the new editor");
+					IResource descriptor = project.findMember("include/" + languageName + ".packed.esv");
+					DynamicDescriptorUpdater.getInstance().forceUpdate(descriptor);
+				}
+				monitor.worked(1);
+			} finally {
+				Job.getJobManager().endRule(project);
+			}
 			
-			monitor.setTaskName("Opening files for editing...");
+			monitor.setTaskName("Opening files for editing");
 			openEditor(project, "/editor/" + languageName +  ".main.esv", true);
 			openEditor(project, "/syntax/" + languageName +  ".sdf", true);
 			openEditor(project, "/test/example." + extensions.split(",")[0], false);
 			
 			monitor.worked(1);
-			DynamicDescriptorUpdater.scheduleUpdate(project.findMember("include/" + languageName + ".packed.esv"));
 			monitor.done();
 			
 			success = true;
 			
 		} finally {
 			if (!success) {
-				monitor.setTaskName("Undoing workspace operations...");
+				monitor.setTaskName("Undoing workspace operations");
 				project.delete(true, null);
 			}
 		}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-09-01 10:00:25 UTC (rev 19908)
@@ -48,12 +48,10 @@
 	
 	private final static Map<String, ParseTable> parseTables;
 	
-	private final static Map<String, Descriptor> descriptors;
+	private final static Map<String, Descriptor> asyncDescriptors;
 	
 	private final static WrappedAstNodeFactory wrappedAstNodeFactory;
 	
-	private final static Object syncRoot = Environment.class;
-	
 	private static Thread mainThread;
 	
 	static {
@@ -61,7 +59,7 @@
 		factory = new PureFactory();
 		parseTableManager = new ParseTableManager(factory);
 		parseTables = new HashMap<String, ParseTable>();
-		descriptors = Collections.synchronizedMap(new HashMap<String, Descriptor>());
+		asyncDescriptors = Collections.synchronizedMap(new HashMap<String, Descriptor>());
 		wrappedAstNodeFactory = new WrappedAstNodeFactory();
 	}
 	
@@ -74,7 +72,7 @@
 	 * between the main thread and the workspace thread.
 	 */
 	public static Object getSyncRoot() {
-		return syncRoot;
+		return Environment.class;
 	}
 	
 	public static void assertLock() {
@@ -128,7 +126,6 @@
 			}
 		};
 
-		// TODO: Clean up Spoofax/IMP operator registries; remove overlap with STRJ runtime
 		result.addOperatorRegistry(new IMPJSGLRLibrary());
 		result.addOperatorRegistry(new IMPLibrary());
 		result.setIOAgent(new EditorIOAgent());
@@ -159,18 +156,18 @@
 		}
 	}
 	
-	public static synchronized void registerDescriptor(Language language, Descriptor descriptor) {
+	public synchronized static void registerDescriptor(Language language, Descriptor descriptor) {
 		Descriptor oldDescriptor = getDescriptor(language);
 		
 		if (oldDescriptor != null) {
 			oldDescriptor.uninitialize();
 		}
 		
-		descriptors.put(language.getName(), descriptor);
+		asyncDescriptors.put(language.getName(), descriptor);
 	}
 	
-	public static Descriptor getDescriptor(Language language) {
-		return descriptors.get(language.getName());
+	public synchronized static Descriptor getDescriptor(Language language) {
+		return asyncDescriptors.get(language.getName());
 	}
 	
 	// ERROR HANDLING

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2009-09-01 10:00:25 UTC (rev 19908)
@@ -35,7 +35,7 @@
 	protected static final Language DESCRIPTOR_LANGUAGE =
 		new Language("EditorService-builtin", "org.strategoxt.imp.builtin.editorservice", "", ROOT_LANGUAGE, "", "", "", null);
 	
-	private final List<AbstractService> services = new ArrayList<AbstractService>();
+	private final Set<AbstractService> services = new HashSet<AbstractService>();
 	
 	private final List<AbstractServiceFactory> serviceFactories = new ArrayList<AbstractServiceFactory>();
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	2009-09-01 10:00:25 UTC (rev 19908)
@@ -78,7 +78,8 @@
 	
 	@Override
 	public IParseController getWrapped() {
-		if (!isInitialized())
+		// Reinitalize path etc. if descriptor was reloaded
+		if (super.getWrapped().getProject() == null)
 			initialize(null, null, null);
 		return super.getWrapped();
 	}
@@ -121,9 +122,9 @@
 		// (Re)store these inputs in case the parse controller has been dynamically reloaded
 		if (filePath == null) filePath = this.filePath;
 		else this.filePath = filePath;
-		if (filePath == null) project = this.project;
+		if (project == null) project = this.project;
 		else this.project = project;
-		if (filePath == null) handler = this.handler;
+		if (handler == null) handler = this.handler;
 		else this.handler = handler;
 		
 		super.getWrapped().initialize(filePath, project, handler);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2009-08-31 12:13:18 UTC (rev 19907)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2009-09-01 10:00:25 UTC (rev 19908)
@@ -130,14 +130,13 @@
     	
     	ParseTable table = Environment.getParseTable(language);
 		parser = new JSGLRI(table, startSymbol, this, tokenManager);
-		// TODO: Do something useful with ambiguities
-		parser.setKeepAmbiguities(false); // not interested in ambiguities in the editor
-		// parser.setRecoverHandler(new CoarseGrainedRecovery());
+		parser.setKeepAmbiguities(true);
 		parser.setRecoverHandler(new StructureRecoveryAlgorithm());
     }
 
     public void initialize(IPath filePath, ISourceProject project,
     		IMessageHandler messages) {
+    	
 		this.path = filePath;
 		this.project = project;
 		this.errorHandler.setMessages(messages);
@@ -162,6 +161,7 @@
 			
 			Debug.startTimer();
 			
+			// TODO: Do not fail or complain on empty input?
 			char[] inputChars = input.toCharArray();
 				
 			if (monitor.isCanceled()) return null;



From L.C.L.Kats at tudelft.nl  Tue Sep  1 17:14:47 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 01 Sep 2009 15:14:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19909 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <200909011514.n81FE64L026843@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-01 15:14:47 +0000 (Tue, 01 Sep 2009)
New Revision: 19909

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19909&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str

Log:
Added a new build.xml property to specify a pre-packed .def file.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml	2009-09-01 10:00:25 UTC (rev 19908)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml	2009-09-01 15:14:47 UTC (rev 19909)
@@ -2,7 +2,7 @@
 
 <project name="SDF" default="standalone">
     
-        <!-- Project directories -->
+         <!-- Project directories -->
         <property name="trans" location="trans"/>
         <property name="syntax" location="syntax"/>
         <property name="editor" location="editor"/>
@@ -16,9 +16,12 @@
         <property name="strmodule" location="sdf"/>
 	    <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
         
+        <!-- Pre-built .def location -->
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        
         <!-- Environment configuration -->
         <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
-        <property name="build.strategoxt.sdf.imports" value=""/>
+        <property name="build.strategoxt.sdf.imports"  value=""/>
         <property name="build.strategoxt.strc.imports" value=""/>
         
         <!-- Default target for building within Eclipse -->
@@ -34,9 +37,10 @@
         
         <target name="sdf2imp-eclipse" depends="sdf2table">
             <!-- HACK: Trigger the Eclipse builder rather than build it here -->
+            <!-- (if we did built it here, we'd have to use the -p option to -->
+            <!--  specify the parse table, and put the table in another dir  -->
             <touch file="include/${esvmodule}.packed.esv"/>
             <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
-        	<echo message="Refreshed include/${esvmodule}.packed.esv"/>
         </target>
         
         <target name="sdf2imp-standalone" depends="sdf2table">
@@ -44,7 +48,7 @@
         </target>
     
         <target name="sdf2table" depends="make-permissive">
-            <apply executable="${build.strategoxt}/sdf2table" dest="include" failonerror="true">
+            <apply executable="${build.strategoxt}/sdf2table" dest="${dist}" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-o"/>
@@ -52,36 +56,30 @@
                 <arg value="-m"/>
                 <arg value="${sdfmodule}"/>
                 
-                <fileset file="${syntax}/${sdfmodule}-Permissive.gendef"/>
-                <mapper type="glob" from="*-Permissive.gendef" to="*.tbl"/>
+                <fileset file="include/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
             </apply>
         </target>
         
-        <target name="make-permissive" depends="pack-sdf">
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
-                <srcfileset file="${build}/${sdfmodule}.def"/>
-                <targetfileset file="${syntax}/${sdfmodule}-Permissive.gendef"/>
+                <srcfileset    file="include/${sdfmodule}.def"/>
+                <targetfileset file="include/${sdfmodule}-Permissive.def"/>
             </dependset>
             <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
                 <arg value="-i"/>
-                <arg value="${build}/${sdfmodule}.def"/>
+                <arg value="${basedir}/include/${sdfmodule}.def"/>
                 <arg value="-o"/>
-            	<arg value="${syntax}/${sdfmodule}-Permissive.gendef"/>
+            	<arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
             </java>
         </target>
-
-        <target name="pack-sdf" depends="init">
-            <available property="source-sdf-exists" resource="${syntax}/${sdfmodule}.sdf"/>
-        	<antcall target="pack-sdf.real"/>
-        	<antcall target="pack-sdf.copy"/>
-        </target>
     
-        <target name="pack-sdf.real" depends="init" if="source-sdf-exists">
+        <target name="pack-sdf" depends="init" unless="externaldef">
             <dependset>
                 <srcfilelist dir="${syntax}" files="**/*.sdf"/>
                 <targetfileset file="${syntax}/${sdfmodule}.def"/>
             </dependset>
-            <apply executable="${build.strategoxt}/pack-sdf" dest="${build}" failonerror="true">
+            <apply executable="${build.strategoxt}/pack-sdf" failonerror="true" dest="include">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-o"/>
@@ -97,8 +95,8 @@
             </apply>
         </target>
 	
-	    <target name="pack-sdf.copy" depends="init" unless="source-sdf-exists">
-            <copy file="${syntax}/${sdfmodule}.def" todir="${build}"/>
+	    <target name="copy-sdf" depends="init" if="externaldef">
+            <copy file="${externaldef}" todir="include"/>
         </target>
     
         <target name="rtg2sig" depends="init,sdf2rtg">
@@ -118,7 +116,7 @@
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-m"/>
-                <arg value="${sdfmodule}"/>
+            	<arg value="${sdfmodule}"/>
                 <arg value="-o"/>
                 <targetfile/>
                 
@@ -153,9 +151,9 @@
         
         <target name="strc-call" depends="init,rtg2sig">
             <dependset>
-                <srcfilelist dir="${trans}" files="**/*.str"/> <!-- */-->
-                <srcfilelist dir="${build}" files="**/*.str"/> <!-- */-->
-                <targetfileset dir="${dist}" includes="**/*"/> <!-- */-->
+                <srcfilelist dir="${trans}" files="**/*.str"/>
+                <srcfilelist dir="${build}" files="**/*.str"/>
+                <targetfileset dir="${dist}" includes="**/*"/>
             </dependset>
             <apply executable="${build.strategoxt}/{strcExecutable}" dest="${dist}" failonerror="true">
                 <arg value=".str"/>
@@ -194,10 +192,10 @@
             <!-- Remove any intermediate files -->
             <delete>
                 <fileset dir="${dist}">
-                    <include name="**/*.c"/>   <!-- */ -->
-                    <include name="**/*.dep"/> <!-- */ -->
-                    <include name="**/*.lo"/>  <!-- */ -->
-                    <include name="**/*.o"/>   <!-- */ -->
+                    <include name="**/*.c"/>
+                    <include name="**/*.dep"/>
+                    <include name="**/*.lo"/>
+                    <include name="**/*.o"/>
                 </fileset>
             </delete>
         </target>
@@ -205,4 +203,4 @@
         <target name="clean" description="clean up">
             <delete dir="${build}"/>
         </target>
-    </project>
\ No newline at end of file
+    </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-01 10:00:25 UTC (rev 19908)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-01 15:14:47 UTC (rev 19909)
@@ -32,6 +32,10 @@
         <property name="strmodule" location="<%= name' %>"/>
 	    <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
         
+        <!-- External .def location (optional)
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        -->
+        
         <!-- Environment configuration -->
         <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
         <property name="build.strategoxt.sdf.imports"  value=""/>
@@ -74,7 +78,7 @@
             </apply>
         </target>
         
-        <target name="make-permissive" depends="pack-sdf">
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
                 <srcfileset    file="include/${sdfmodule}.def"/>
                 <targetfileset file="include/${sdfmodule}-Permissive.def"/>
@@ -86,14 +90,8 @@
             	<arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
             </java>
         </target>
-
-        <target name="pack-sdf" depends="init">
-            <available property="source-sdf-exists" file="${syntax}/${sdfmodule}.sdf"/>
-        	<antcall target="pack-sdf.real"/>
-        	<antcall target="pack-sdf.copy"/>
-        </target>
     
-        <target name="pack-sdf.real" depends="init" if="source-sdf-exists">
+        <target name="pack-sdf" depends="init" unless="externaldef">
             <dependset>
                 <srcfilelist dir="${syntax}" files="**/*.sdf"/>
                 <targetfileset file="${syntax}/${sdfmodule}.def"/>
@@ -114,9 +112,8 @@
             </apply>
         </target>
 	
-	    <target name="pack-sdf.copy" depends="init" unless="source-sdf-exists">
-        	<echo message="Could not find ${syntax}/${sdfmodule}.sdf" level="warning" />
-            <copy file="${syntax}/${sdfmodule}.def" todir="include"/>
+	    <target name="copy-sdf" depends="init" if="externaldef">
+            <copy file="${externaldef}" todir="include"/>
         </target>
     
         <target name="rtg2sig" depends="init,sdf2rtg">



From L.C.L.Kats at tudelft.nl  Wed Sep  2 10:06:02 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 02 Sep 2009 08:06:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19910 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
Message-ID: <200909020805.n8285KDl006300@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-02 08:06:02 +0000 (Wed, 02 Sep 2009)
New Revision: 19910

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19910&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java

Log:
Report forced reduction parse errors.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-01 15:14:47 UTC (rev 19909)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-02 08:06:02 UTC (rev 19910)
@@ -95,21 +95,23 @@
 	}
 	
  	private void doFinish(String languageName, String projectName, String packageName, String extensions, IProgressMonitor monitor) throws IOException, CoreException {
-		final int TASK_COUNT = 6;
+		final int TASK_COUNT = 11;
+		boolean success = false;
 		monitor.beginTask("Creating " + languageName + " project", TASK_COUNT);
 		
 		monitor.setTaskName("Preparing project builder");
 		EditorIOAgent agent = new EditorIOAgent();		
 		Context context = new Context(Environment.getTermFactory(), agent);
 		sdf2imp.init(context);
-		monitor.worked(3);
+		monitor.worked(1);
 
 		monitor.setTaskName("Creating project");
 		IWorkspace workspace = ResourcesPlugin.getWorkspace();
 		IProject project = workspace.getRoot().getProject(projectName);
 		project.create(null);
 		project.open(null);
-		boolean success = false;
+		monitor.worked(1);
+
 		try {
 			agent.setWorkingDir(project.getLocation().toOSString());
 			try {
@@ -126,12 +128,13 @@
 							+ agent.getLog(), e);
 				}
 			}
+			monitor.worked(3);
 
 			monitor.setTaskName("Acquiring project lock");
 			Job.getJobManager().beginRule(project, monitor);  // avoid ant builder launching
 			try {
-				// FIXME: 
 				monitor.setTaskName("Acquiring environment lock");
+				monitor.worked(1);
 				synchronized (Environment.getSyncRoot()) { // avoid background editor loading
 					monitor.setTaskName("Loading new resources");
 					project.refreshLocal(IResource.DEPTH_INFINITE, new NullProgressMonitor());
@@ -148,9 +151,10 @@
 			
 			monitor.setTaskName("Opening files for editing");
 			openEditor(project, "/editor/" + languageName +  ".main.esv", true);
+			monitor.worked(1);
 			openEditor(project, "/syntax/" + languageName +  ".sdf", true);
+			monitor.worked(1);
 			openEditor(project, "/test/example." + extensions.split(",")[0], false);
-			
 			monitor.worked(1);
 			monitor.done();
 			

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2009-09-01 15:14:47 UTC (rev 19909)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2009-09-02 08:06:02 UTC (rev 19910)
@@ -2,6 +2,7 @@
 
 import static org.spoofax.jsglr.Term.*;
 import lpg.runtime.IToken;
+
 import org.eclipse.core.resources.IMarker;
 import org.eclipse.imp.parser.IMessageHandler;
 import org.spoofax.jsglr.BadTokenException;
@@ -185,6 +186,7 @@
 	
 	private void reportSkippedFragments(SGLRTokenizer tokenizer) {
 		char[] inputChars = tokenizer.getLexStream().getInputChars();
+
 		for (int i = 0; i < inputChars.length; i++) {
 			char c = inputChars[i];
 			if (c == SKIPPED_CHAR) {
@@ -201,6 +203,13 @@
 				reportErrorAtTokens(token, token, "Could not parse this fragment");
 			}
 		}
+		
+		// Report forced reductions
+		int treeEnd = tokenizer.getParseStream().getTokenAt(tokenizer.getParseStream().getStreamLength() - 1).getEndOffset();
+		if (treeEnd < inputChars.length) {
+			IToken token = tokenizer.makeErrorToken(treeEnd + 1, inputChars.length);
+			reportErrorAtTokens(token, token, "Could not parse this fragment");
+		}
 	}
 	
 		
@@ -227,7 +236,7 @@
 	 
 	public void reportError(SGLRTokenizer tokenizer, Exception exception) {
 		String message = "Internal parsing error: " + exception;
-		Environment.logException("Internal parsing error", exception);
+		Environment.logException("Error while reporting parse errors", exception);
 		reportErrorAtFirstLine(message);
 	}
 	



From L.C.L.Kats at tudelft.nl  Wed Sep  2 10:21:35 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 02 Sep 2009 08:21:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19911 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.generator/src/syntax
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
Message-ID: <200909020820.n828KrPP006397@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-02 08:21:35 +0000 (Wed, 02 Sep 2009)
New Revision: 19911

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19911&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-activator.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java

Log:
Added a couple of checks to not overwrite existing project files.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-activator.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-activator.str	2009-09-02 08:06:02 UTC (rev 19910)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-activator.str	2009-09-02 08:21:35 UTC (rev 19911)
@@ -5,7 +5,8 @@
 
 strategies
 
-  create-activator =  
+  create-activator =
+    // TODO: never overwrite existing activator
     name    := <get-main-class-name>;
     pkgname := <get-package-name>;
     

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str	2009-09-02 08:06:02 UTC (rev 19910)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str	2009-09-02 08:21:35 UTC (rev 19911)
@@ -6,6 +6,8 @@
 strategies
 
   create-classpath =
+    <file-exists> ".classpath"
+  <+
     <output-xml-file(|[], ".classpath")>
     %><?xml version="1.0" encoding="UTF-8"?>
 <classpath>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str	2009-09-02 08:06:02 UTC (rev 19910)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str	2009-09-02 08:21:35 UTC (rev 19911)
@@ -14,6 +14,7 @@
     <conc-strings> (<get-main-class-name>, "ParseController")
 
   create-parse-controller =
+    // TODO: do not overwrite existing parse controller
     x_name  := <get-parse-controller-name>;
     pkgname := <get-package-name>;
     table   := <get-sdf-main-module>;

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str	2009-09-02 08:06:02 UTC (rev 19910)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str	2009-09-02 08:21:35 UTC (rev 19911)
@@ -6,6 +6,8 @@
 strategies
 
   create-project-file =
+    <file-exists> ".project"
+  <+
     package := <BasePackage <+ default-package-name>;
     
     <output-xml-file(|[], ".project")>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf	2009-09-02 08:06:02 UTC (rev 19910)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf	2009-09-02 08:21:35 UTC (rev 19911)
@@ -7,7 +7,7 @@
   
   EditorService
   
-  Comments[Section]
+%%Comments[Section]
   Comments[SemanticRule]
   Comments[ColorRule]
   Comments[OutlineRule]

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-02 08:06:02 UTC (rev 19910)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-02 08:21:35 UTC (rev 19911)
@@ -110,6 +110,7 @@
 		IProject project = workspace.getRoot().getProject(projectName);
 		project.create(null);
 		project.open(null);
+		project.findMember(".project").delete(true, new NullProgressMonitor()); // ensure new one is created
 		monitor.worked(1);
 
 		try {
@@ -156,6 +157,7 @@
 			monitor.worked(1);
 			openEditor(project, "/test/example." + extensions.split(",")[0], false);
 			monitor.worked(1);
+			openEditor(project, "/syntax/" + languageName +  ".sdf", true); // honestly, give this one focus
 			monitor.done();
 			
 			success = true;



From L.C.L.Kats at tudelft.nl  Wed Sep  2 12:00:57 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 02 Sep 2009 10:00:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19913 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.generator/src/sdf2imp/util
Message-ID: <200909021000.n82A0FAM008222@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-02 10:00:57 +0000 (Wed, 02 Sep 2009)
New Revision: 19913

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19913&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-packed-descriptor-file.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/output.str

Log:
- Create a uniquely named .launch file that is now also used when build.xml is launched manually
- Replaced some risky calls by fatal-err for better error reporting

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile	2009-09-02 09:23:00 UTC (rev 19912)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile	2009-09-02 10:00:57 UTC (rev 19913)
@@ -15,7 +15,7 @@
 
 include/$(SYNTAX).packed.esv : $(SYNTAX).def $(SDF2IMP) Makefile $(ESVS)
 	$(SDF2IMP) -i $< -pn org.strategoxt.imp.editors.editorservice -m $(SYNTAX) --verbose 2
-	rm build.xml ".externalToolBuilders/Ant Builder.launch"
+	rm -f build.xml .externalToolBuilders/*.launch # not used for this project
 
 # We need a better solution for this
 include/EditorService-pretty.pp.af : $(PPAF)

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2009-09-02 09:23:00 UTC (rev 19912)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2009-09-02 10:00:57 UTC (rev 19913)
@@ -5,47 +5,50 @@
 
 strategies
 
+  builder-xml-name =
+    // Note that we cannot use ProjectName here since
+    // it may not be set after the first time this runs
+    <conc-strings> (<get-sdf-main-module>, " build.xml.launch")
+
   create-builder-xml =
-    // The XML pretty printer has problems with this file, so it's printed as text instead.
-    // Half the time ${project_name} and ${project_loc} don't work, so
-    // we're using name instead
-    name := <ProjectName <+ get-sdf-main-module>; 
+    <file-exists> <conc-strings> (".externalToolBuilders/", <builder-xml-name>)
+  <+
+    // We use plain text since the XML pretty printer has problems with this file.
+    // Also, half the time ${project_name} and ${project_loc} don't work,
+    // so we're using a compile-time 'project-name' variable instead.
+    project-name := <ProjectName <+ get-sdf-main-module>;
     
-    <output-text-file(|[".externalToolBuilders"], "Ant Builder.launch")>
+    <output-text-file(|[".externalToolBuilders"], <builder-xml-name>)>
     <conc-strings>
 (
 "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>
-<launchConfiguration type=\"org.eclipse.ant.AntBuilderLaunchConfigurationType\">
-<stringAttribute key=\"org.eclipse.ant.ui.ATTR_ANT_AFTER_CLEAN_TARGETS\" value=\"from-eclipse,\"/>
-<stringAttribute key=\"org.eclipse.ant.ui.ATTR_ANT_MANUAL_TARGETS\" value=\"from-eclipse,\"/>
-<booleanAttribute key=\"org.eclipse.ant.ui.ATTR_TARGETS_UPDATED\" value=\"true\"/>
+<launchConfiguration type=\"org.eclipse.ant.AntLaunchConfigurationType\">
+<stringAttribute key=\"bad_container_name\" value=\".externalToolBuilders\"/>
 <booleanAttribute key=\"org.eclipse.ant.ui.DEFAULT_VM_INSTALL\" value=\"false\"/>
-<stringAttribute key=\"org.eclipse.debug.core.ATTR_REFRESH_SCOPE\" value=\"${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", name, "/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}\"/>
-
-<!--
-  <listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_PATHS\">
-  <listEntry value=\"", name, "/build.xml\"/>
-  </listAttribute>
-  <listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_TYPES\">
-  <listEntry value=\"1\"/>
-  </listAttribute>
--->
-<listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_PATHS\"/>
-<listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_TYPES\"/>
-
+<stringAttribute key=\"org.eclipse.debug.core.ATTR_REFRESH_SCOPE\" value=\"${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", project-name, "/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}\"/>
+<listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_PATHS\">
+<listEntry value=\"/", project-name, "/build.xml\"/>
+</listAttribute>
+<listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_TYPES\">
+<listEntry value=\"1\"/>
+</listAttribute>
 <booleanAttribute key=\"org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND\" value=\"false\"/>
 <listAttribute key=\"org.eclipse.jdt.launching.CLASSPATH\">
-<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;\"/>
+<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;\"/>
 <listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
 <listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
-<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.jdt.launching.classpathentry.variableClasspathEntry&quot;&gt;&#10;&lt;memento path=&quot;3&quot; variableString=&quot;", name, "/aux/make_permissive.jar&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
-<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.jdt.launching.classpathentry.variableClasspathEntry&quot;&gt;&#10;&lt;memento path=&quot;3&quot; variableString=&quot;", name, "/aux/strategoxt.jar&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
+<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/", project-name, "/aux/make_permissive.jar&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;\"/>
+<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/", project-name, "/aux/strategoxt.jar&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;\"/>
 </listAttribute>
 <stringAttribute key=\"org.eclipse.jdt.launching.CLASSPATH_PROVIDER\" value=\"org.eclipse.ant.ui.AntClasspathProvider\"/>
 <booleanAttribute key=\"org.eclipse.jdt.launching.DEFAULT_CLASSPATH\" value=\"false\"/>
-<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_LOCATION\" value=\"${workspace_loc:/", name, "/build.xml}\"/>
-<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS\" value=\"full,incremental,\"/>
-<booleanAttribute key=\"org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED\" value=\"true\"/>
-<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY\" value=\"${workspace_loc:/", name, "}\"/>
-</launchConfiguration>"
-)
\ No newline at end of file
+<stringAttribute key=\"org.eclipse.jdt.launching.PROJECT_ATTR\" value=\"", project-name, "\"/>
+<stringAttribute key=\"org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER\" value=\"org.eclipse.ant.ui.AntClasspathProvider\"/>
+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_ANT_TARGETS\" value=\"from-eclipse,\"/>
+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE\" value=\"${project}\"/>
+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_LOCATION\" value=\"${workspace_loc:/", project-name, "/build.xml}\"/>
+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY\" value=\"${workspace_loc:/", project-name, "}\"/>
+<stringAttribute key=\"process_factory_id\" value=\"org.eclipse.ant.ui.remoteAntProcessFactory\"/>
+</launchConfiguration>
+"
+)

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-packed-descriptor-file.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-packed-descriptor-file.str	2009-09-02 09:23:00 UTC (rev 19912)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-packed-descriptor-file.str	2009-09-02 10:00:57 UTC (rev 19913)
@@ -9,16 +9,15 @@
 
   create-packed-descriptor-file =
     {| InputDirPrefix:
-      risky(
-        <add-input-dir-prefix> "editor/";
-        filename := <packed-descriptor-file-name>;
-        main     := <main-descriptor-name>;
-        
-        <input-descriptor-file> main;
-        remove-empty-sections;        
-        output-packed-descriptor-file(|filename)
-      | "Could not pack descriptor files"
-      )
+      <add-input-dir-prefix> "editor/";
+      filename := <packed-descriptor-file-name>;
+      main     := <main-descriptor-name>;
+      
+      <input-descriptor-file> main;
+      remove-empty-sections;        
+      output-packed-descriptor-file(|filename)
+    <+
+      fatal-err-msg(|"Could not pack descriptor files")
     |}
   
   remove-empty-sections =

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str	2009-09-02 09:23:00 UTC (rev 19912)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str	2009-09-02 10:00:57 UTC (rev 19913)
@@ -8,7 +8,8 @@
   create-project-file =
     <file-exists> ".project"
   <+
-    package := <BasePackage <+ default-package-name>;
+    package     := <BasePackage <+ default-package-name>;
+    builder-xml := <conc-strings> ("&lt;project&gt;/.externalToolBuilders/", <builder-xml-name>);
     
     <output-xml-file(|[], ".project")>
     %>
@@ -23,7 +24,7 @@
 			<arguments>
 				<dictionary>
 					<key>LaunchConfigHandle</key>
-					<value>&lt;project&gt;/.externalToolBuilders/Ant Builder.launch</value>
+					<value><%= builder-xml::cdata %></value>
 				</dictionary>
 			</arguments>
 		</buildCommand>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/output.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/output.str	2009-09-02 09:23:00 UTC (rev 19912)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/output.str	2009-09-02 10:00:57 UTC (rev 19913)
@@ -63,10 +63,11 @@
     
     if ResetFiles <+ <condition> fullpath then
       new-contents;
-      risky(
+      (
         ?Module(name, _ ,_);
         pp-descriptor-to-string
-      | "Illegal editor service descriptor output"
+      <+
+        fatal-err(|"Illegal editor service descriptor output")
       );
       output-text-file'(|[path], filename)
     else
@@ -106,9 +107,10 @@
   output-java-file(|filename) =
     print-filename(|["editor", "java" | <package-name>], <base-filename> filename);
     
-    risky(
+    (
       text := <pp-java-string <+ pp-java-string-fallback>
-    | "Illegal Java output"
+    <+
+      fatal-err(|"Illegal Java output")
     );
     
     output-text-file'(|filename)
@@ -116,9 +118,10 @@
   output-xml-file(|pathparts, filename) =
     print-filename(|pathparts, filename);
     
-    risky(
+    (
       xml-doc2abox; box2text-string(|80)
-    | "Illegal XML output"
+    <+
+      fatal-err(|"Illegal XML output")
     );
     
     output-text-file'(|pathparts, filename)



From L.C.L.Kats at tudelft.nl  Wed Sep  2 12:40:59 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 02 Sep 2009 10:40:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19914 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <200909021040.n82AeHeg008811@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-02 10:40:59 +0000 (Wed, 02 Sep 2009)
New Revision: 19914

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19914&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_at_end_1_0.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/StrategoErrorExit.java

Log:


Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_at_end_1_0.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_at_end_1_0.java	2009-09-02 10:00:57 UTC (rev 19913)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_at_end_1_0.java	2009-09-02 10:40:59 UTC (rev 19914)
@@ -57,7 +57,7 @@
 			return tail != null && checkListTail(tail) != null ? (IStrategoList) tail : null;
 		} else {
 			IStrategoList tail = atEndMaintainAnnos(context, list.tail(), s);
-			if (list == null) return null;
+			if (tail == null) return null;
 			IStrategoTerm result = context.getFactory().makeList(list.head(), tail);
 			return (IStrategoList) context.getFactory().annotateTerm(result, list.getAnnotations());
 		}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/StrategoErrorExit.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/StrategoErrorExit.java	2009-09-02 10:00:57 UTC (rev 19913)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/StrategoErrorExit.java	2009-09-02 10:40:59 UTC (rev 19914)
@@ -23,4 +23,9 @@
 	public IStrategoTerm getTerm() {
 		return term;
 	}
+	
+	@Override
+	public String getLocalizedMessage() { // used for toString() and stacktraces
+		return getMessage() + (getTerm() == null ? "" : "\n\t" + getTerm());
+	}
 }



From L.C.L.Kats at tudelft.nl  Wed Sep  2 15:29:35 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 02 Sep 2009 13:29:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19915 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
Message-ID: <200909021328.n82DSrbb011763@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-02 13:29:35 +0000 (Wed, 02 Sep 2009)
New Revision: 19915

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19915&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java

Log:
Using a couple of synchronized collections in favor of synchronization using the global Environment sync root.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-09-02 10:40:59 UTC (rev 19914)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-09-02 13:29:35 UTC (rev 19915)
@@ -48,7 +48,7 @@
 	
 	private final static Map<String, ParseTable> parseTables;
 	
-	private final static Map<String, Descriptor> asyncDescriptors;
+	private final static Map<String, Descriptor> descriptors;
 	
 	private final static WrappedAstNodeFactory wrappedAstNodeFactory;
 	
@@ -58,8 +58,8 @@
 		wrappedFactory = new UnsharedWrappedATermFactory();
 		factory = new PureFactory();
 		parseTableManager = new ParseTableManager(factory);
-		parseTables = new HashMap<String, ParseTable>();
-		asyncDescriptors = Collections.synchronizedMap(new HashMap<String, Descriptor>());
+		parseTables = Collections.synchronizedMap(new HashMap<String, ParseTable>());
+		descriptors = Collections.synchronizedMap(new HashMap<String, Descriptor>());
 		wrappedAstNodeFactory = new WrappedAstNodeFactory();
 	}
 	
@@ -144,30 +144,26 @@
 	}
 	
 	public static ParseTable getParseTable(Language language) {
-		// UNDONE: assertMainThread();
+		ParseTable table = parseTables.get(language.getName());
 		
-		synchronized (getSyncRoot()) { // synchronized on registration
-			ParseTable table = parseTables.get(language.getName());
+		if (table == null)
+			throw new IllegalStateException("Parse table not available: " + language.getName());
 			
-			if (table == null)
-				throw new IllegalStateException("Parse table not available: " + language.getName());
-			
-			return table;
-		}
+		return table;
 	}
 	
-	public synchronized static void registerDescriptor(Language language, Descriptor descriptor) {
+	public static void registerDescriptor(Language language, Descriptor descriptor) {
 		Descriptor oldDescriptor = getDescriptor(language);
 		
 		if (oldDescriptor != null) {
 			oldDescriptor.uninitialize();
 		}
 		
-		asyncDescriptors.put(language.getName(), descriptor);
+		descriptors.put(language.getName(), descriptor);
 	}
 	
-	public synchronized static Descriptor getDescriptor(Language language) {
-		return asyncDescriptors.get(language.getName());
+	public static Descriptor getDescriptor(Language language) {
+		return descriptors.get(language.getName());
 	}
 	
 	// ERROR HANDLING



From L.C.L.Kats at tudelft.nl  Wed Sep  2 16:26:10 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 02 Sep 2009 14:26:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19916 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms
	strc-java/trunk/java
	strc-java/trunk/java/runtime/org/strategoxt/lang/terms
	strc-java/trunk/trans
Message-ID: <200909021425.n82EPSXL012713@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-02 14:26:09 +0000 (Wed, 02 Sep 2009)
New Revision: 19916

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19916&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicStrategoTerm.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java
   strc-java/trunk/java/spoofax-libs.jar
   strc-java/trunk/trans/Makefile.am

Log:
Fixed annotation pretty printing.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicStrategoTerm.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicStrategoTerm.java	2009-09-02 13:29:35 UTC (rev 19915)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicStrategoTerm.java	2009-09-02 14:26:09 UTC (rev 19916)
@@ -44,9 +44,9 @@
         
         sb.append('{');
         sb.append(annos.get(0));
-        for (int i = 1; i < annos.size(); i++) {
-            sb.append(",");
-            sb.append(annos.toString());
+        for (annos = annos.tail(); !annos.isEmpty(); annos = annos.tail()) {
+            sb.append(',');
+            sb.append(annos.head().toString());         
         }
         sb.append('}');
     }
@@ -56,10 +56,10 @@
         if (annos.size() == 0) return;
         
         pp.print("{");
-        annos.get(0).prettyPrint(pp);
-        for (int i = 1; i < annos.size(); i++) {
-            pp.print(", ");
-            pp.print(annos.toString());
+        annos.head().prettyPrint(pp);
+        for (annos = annos.tail(); !annos.isEmpty(); annos = annos.tail()) {
+            pp.print(",");
+            annos.head().prettyPrint(pp);           
         }
         pp.print("}");
     }

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java	2009-09-02 13:29:35 UTC (rev 19915)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java	2009-09-02 14:26:09 UTC (rev 19916)
@@ -125,9 +125,9 @@
         
         sb.append('{');
         sb.append(annos.get(0));
-        for (int i = 1; i < annos.size(); i++) {
-            sb.append(",");
-            sb.append(annos.toString());
+        for (annos = annos.tail(); !annos.isEmpty(); annos = annos.tail()) {
+            sb.append(',');
+            sb.append(annos.head().toString());        	
         }
         sb.append('}');
     }
@@ -137,10 +137,10 @@
         if (annos.size() == 0) return;
         
         pp.print("{");
-        annos.get(0).prettyPrint(pp);
-        for (int i = 1; i < annos.size(); i++) {
-            pp.print(",");
-            pp.print(annos.toString());
+        annos.head().prettyPrint(pp);
+        for (annos = annos.tail(); !annos.isEmpty(); annos = annos.tail()) {
+        	pp.print(",");
+        	annos.head().prettyPrint(pp);        	
         }
         pp.print("}");
     }

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)

Modified: strc-java/trunk/trans/Makefile.am
===================================================================
--- strc-java/trunk/trans/Makefile.am	2009-09-02 13:29:35 UTC (rev 19915)
+++ strc-java/trunk/trans/Makefile.am	2009-09-02 14:26:09 UTC (rev 19916)
@@ -21,7 +21,7 @@
 XTC_IMPORT = $(JAVA_FRONT_XTC)
 LDADD     += $(JAVA_FRONT_LIBS)
 
-CLASSPATH=../java/spoofax-libs.jar:../java/bin:.
+CLASSPATH=.:../java/spoofax-libs.jar:../java/bin:../java/strategoxt.jar
 JAVACFLAGS=-J-Xmx256m -cp $(CLASSPATH) -source 5 -nowarn
 JAVAC=`if which ecj >/dev/null; then echo ecj; else echo javac; fi`
 



From L.C.L.Kats at tudelft.nl  Wed Sep  2 17:00:04 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 02 Sep 2009 15:00:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19917 - LennartKats -
	strategoxt/trunk/strc-core/tools
Message-ID: <200909021459.n82ExLVO012914@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-02 15:00:04 +0000 (Wed, 02 Sep 2009)
New Revision: 19917

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19917&view=rev

Modified:
   strategoxt/trunk/strc-core/tools/str

Log:
Proper exit code if compiler succeeds but executed program fails.

Changes:

Modified: strategoxt/trunk/strc-core/tools/str
===================================================================
--- strategoxt/trunk/strc-core/tools/str	2009-09-02 14:26:09 UTC (rev 19916)
+++ strategoxt/trunk/strc-core/tools/str	2009-09-02 15:00:04 UTC (rev 19917)
@@ -118,8 +118,10 @@
     echo 'run
           backtrace' > $TEMPFILE.gdb
     gdb -batch -x $TEMPFILE.gdb $TEMPFILE.out
+    RET=$?
   else
     $TEMPFILE.out
+    RET=$?
   fi
 elif [ "$COPTION" ]; then
   cat $TEMPFILE.c



From L.C.L.Kats at tudelft.nl  Wed Sep  2 17:01:06 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 02 Sep 2009 15:01:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19918 - LennartKats -
	aster/trunk/runtime/aster/lang
	spoofax-imp/trunk/org.strategoxt.imp.generator/lib
Message-ID: <200909021500.n82F0OZC013084@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-02 15:01:06 +0000 (Wed, 02 Sep 2009)
New Revision: 19918

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19918&view=rev

Modified:
   aster/trunk/runtime/aster/lang/annotations.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar

Log:
Proper aster-is-anno check for Java.

Changes:

Modified: aster/trunk/runtime/aster/lang/annotations.str
===================================================================
--- aster/trunk/runtime/aster/lang/annotations.str	2009-09-02 15:00:04 UTC (rev 19917)
+++ aster/trunk/runtime/aster/lang/annotations.str	2009-09-02 15:01:06 UTC (rev 19918)
@@ -192,6 +192,11 @@
    * @see aster-is-initialized
    */
   aster-is-anno =
-    is-string
     // TODO: Is this a sensible optimization?
+    if-java-platform(
+      is-int
+    );
+    if-c-platform(
+      is-string
     // ; explode-string => ['@' | _]
+    )

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Thu Sep  3 10:01:46 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 03 Sep 2009 08:01:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19919 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.generator/src/sdf2imp
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.generator/src/sdf2imp/services
	org.strategoxt.imp.generator/src/sdf2imp/util
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
	org.strategoxt.imp.runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
Message-ID: <200909030801.n83811W8026376@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-03 08:01:45 +0000 (Thu, 03 Sep 2009)
New Revision: 19919

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19919&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-jars.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-plugin-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/input.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizardPage.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java

Log:
- Various changes to the build system to suit the WebDSL editors
- Improved error reporting
- sdf2imp no longer builds the parse table and permissive grammar
  when called from Eclipse; the Ant file can handle this


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-09-03 08:01:45 UTC (rev 19919)
@@ -41,7 +41,10 @@
       file-exists
     ; not(<get-config> SdfMainModuleFlag()) // (should be read from the file)
     where
-      rules(InputFile := esv);
+      rules(
+        InputFile := esv
+        IsLaunchedFromEclipse: _ 
+      );
       <sdf2imp> FILE(esv)
   
   // FIXME: dirty hack for getting the .def file
@@ -89,7 +92,12 @@
   
     configure-main-descriptor;
     <sdf2rtg> input;
-    <copy-or-create-parse-table> input;
+    
+    if not(IsLaunchedFromEclipse) then
+      // We could build the table here, but doing it from ant is more customizable
+      // (also, this way we don't expose our xtc underbelly)
+      <copy-or-create-parse-table> input
+    end;
   
     if NoExistingDescriptor then
       create-main-descriptor

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-jars.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-jars.str	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/copy-jars.str	2009-09-03 08:01:45 UTC (rev 19919)
@@ -4,6 +4,15 @@
   libstratego-lib
 
 strategies
+
+  /* TODO: instead of copying jar files, use an Ant task to download them
+  <copy todir="dest" flatten="true">
+      <resources>
+      <file file="src_dir/file1.txt"/>
+      <url url="http://ant.apache.org/index.html"/>
+    </resources>
+  </copy>
+  */  
   
   copy-jars =
     if JarLocations then

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-03 08:01:45 UTC (rev 19919)
@@ -65,7 +65,7 @@
         </target>
     
         <target name="sdf2table" depends="make-permissive">
-            <apply executable="${build.strategoxt}/sdf2table" dest="${dist}" failonerror="true">
+            <apply executable="${build.strategoxt}/sdf2table" dest="include" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-o"/>
@@ -116,7 +116,7 @@
             <copy file="${externaldef}" todir="include"/>
         </target>
     
-        <target name="rtg2sig" depends="init,sdf2rtg">
+        <target name="rtg2sig" depends="init,sdf2rtg" if="strmodule.present" unless="external-def">
             <apply executable="${build.strategoxt}/rtg2sig" dest="${build}" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
@@ -128,7 +128,7 @@
             </apply>
         </target>
         
-        <target name="sdf2rtg" depends="init,pack-sdf">
+        <target name="sdf2rtg" depends="init,pack-sdf" if="strmodule.present" unless="external-def">
             <apply executable="${build.strategoxt}/sdf2rtg" dest="${build}" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
@@ -172,7 +172,7 @@
                 <srcfilelist dir="${build}" files="**/*.str"/>
                 <targetfileset dir="${dist}" includes="**/*"/>
             </dependset>
-            <apply executable="${build.strategoxt}/{strcExecutable}" dest="${dist}" failonerror="true">
+            <apply executable="${build.strategoxt}/{strcExecutable}" dest="include" failonerror="true">
                 <arg value=".str"/>
                 <arg value="-i"/>
                 <srcfile/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-plugin-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-plugin-xml.str	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-plugin-xml.str	2009-09-03 08:01:45 UTC (rev 19919)
@@ -6,6 +6,7 @@
 strategies
 
   create-plugin-xml =
+    // TODO: if there is an existing plugin.xml, we should check if the extensions/language/derivedFrom settings are still okay
     <file-exists> "plugin.xml"
   <+
     name       := <get-sdf-main-module>;

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/configure-main-descriptor.str	2009-09-03 08:01:45 UTC (rev 19919)
@@ -53,24 +53,22 @@
        rules(
          OnImportFailure:
            Import(m) -> Module("", NoImports(), [])
-           where
-             if <eq> (<main-descriptor-name>, m) then
-               fail
+           with
+             if <has-extension(|"esv")> <InputFile> then
+               fatal-err-msg(|["Could not import module ", m])
              end
+           where
+             not(<eq> (<main-descriptor-name>, m)) // silently ignore non-main import fails
        );
-       verbosity-scope(
-         main-descriptor-name;
-         input-descriptor-file
-       | -1
-       );
+       main-descriptor-name;
+       input-descriptor-file;
        verbose-msg(!"Existing descriptor determines generated services:", main-descriptor-name)
      |}
    <+
      // Could not read the existing file: use the defaults instead, but don't overwrite the file
-     verbose-msg(
-       !"No legal existing descriptor file found"
-     , <conc-strings> ("(editor/", <main-descriptor-name>, ")")
-     );
+     main-descriptor := <conc-strings> ("(editor/", <main-descriptor-name>, ")");
+     <warn(|"Error opening existing descriptor file; attempting to use defaults instead")> main-descriptor;
+          
      rules(NoExistingDescriptor: _);
      default-main-descriptor
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/input.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/input.str	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/input.str	2009-09-03 08:01:45 UTC (rev 19919)
@@ -44,11 +44,16 @@
       fatal-err(|"Parsed module has ambiguities")
     end;
     
-    risky(
+    (
       ?Module(name, _, _)
     <+
       try(<OnImportFailure> Import(name)); fail // trigger failure event
-    |"Module name does not match file name"
+    <+
+      if <has-extension(|"esv")> <InputFile> then
+        fatal-err(|"Module name does not match file name")
+      else
+        err(|"Module name does not match file name")
+      end
     )
   <+
     ?ImportRenamed(name, tail);

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-09-03 08:01:45 UTC (rev 19919)
@@ -113,6 +113,9 @@
 		
 		try {
 			Debug.startTimer();
+			// UNDONE: setting the exceptionhandler has no effect,
+			//         other than making eclipse not release the locks
+			//context.getExceptionHandler().setEnabled(true);
 			return sdf2imp_jvm_0_0.instance.invoke(context, input);
 		} catch (StrategoErrorExit e) {
 			Environment.logException("Fatal error exit in dynamic builder", e);
@@ -124,6 +127,7 @@
 			messageHandler.addMarkerFirstLine(mainFile, "Error building descriptor:" + e + "\n" + agent.getLog(), SEVERITY_ERROR);
 			return null;
 		} finally {
+			//context.getExceptionHandler().setEnabled(false);
 			Debug.stopTimer("Invoked descriptor builder for " + mainFile.getName());
 			dr_scope_all_end_0_0.instance.invoke(context, input);
 		}

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java	2009-09-03 08:01:45 UTC (rev 19919)
@@ -128,15 +128,12 @@
 				// Try to build using the .main.esv instead;
 				// the build.xml file may touch the .packed.esv file
 				// to signal a rebuild is necessary
-				// TODO: Prevent duplicate builds triggered this way...
+				// TODO: Prevent duplicate builds triggered this way...?
 				getBuilder().updateResource(source, monitor);
 			} else if (resource.exists()) {
 				monitor.subTask("Loading " + resource.getName());
 				loadPackedDescriptor(resource);
 			}
-		} else if (!startup) {
-			// Re-build descriptor if resource changed (but not if we're starting up)
-			getBuilder().updateResource(resource, monitor);
 		}
 	}
 
@@ -147,12 +144,14 @@
 		IResource source = getSourceDescriptor(descriptor);
 		try {
 			asyncMessageHandler.clearMarkers(source);
+			asyncMessageHandler.clearMarkers(descriptor);
 			
 			IFile file = descriptor.getProject().getFile(descriptor.getProjectRelativePath());
 			DescriptorFactory.load(file);
 			
 		} catch (BadDescriptorException e) {
 			Environment.logException("Error in descriptor " + descriptor, e);
+			reportError(source, "Error in descriptor: " + e.getMessage());
 			reportError(descriptor, e.getOffendingTerm(), "Error in descriptor: " + e.getMessage());
 		} catch (IOException e) {
 			Environment.logException("Error reading descriptor " + descriptor, e);

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizardPage.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizardPage.java	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizardPage.java	2009-09-03 08:01:45 UTC (rev 19919)
@@ -102,7 +102,7 @@
 			}
 		});
 		
-		new Label(container, SWT.NULL).setText("&Plugin ID:");
+		new Label(container, SWT.NULL).setText("&Plugin ID and package name:");
 		inputPackageName = new Text(container, SWT.BORDER | SWT.SINGLE);
 		inputPackageName.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
 		inputPackageName.addModifyListener(new ModifyListener() {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	2009-09-03 08:01:45 UTC (rev 19919)
@@ -20,7 +20,7 @@
 <stringAttribute key="org.eclipse.jdt.launching.JRE_CONTAINER" value="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="-os ${target.os} -ws ${target.ws} -arch ${target.arch} -nl ${target.nl}"/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.pde.ui.workbenchClasspathProvider"/>
-<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-server -Xmx1024m -Xms256m -XX:MaxPermSize=256M -Xverify:none -ea:org.strategoxt.imp.runtime.Debug -ea:org.strategoxt.imp... -ea:org.spoofax..."/>
+<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-server -Xmx1024m -Xms256m -XX:MaxPermSize=256M -Xverify:none -ea:org.strategoxt.imp.runtime.Debug -ea:org.strategoxt.imp... -ea:org.spoofax... -Xss4m"/>
 <stringAttribute key="pde.version" value="3.3"/>
 <stringAttribute key="product" value="org.eclipse.sdk.ide"/>
 <booleanAttribute key="show_selected_only" value="false"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2009-09-03 08:01:45 UTC (rev 19919)
@@ -154,7 +154,7 @@
 		try {
 			return openAttachment(getParseTableName(), false);
 		} catch (FileNotFoundException e) {
-			throw new BadDescriptorException(e);
+			throw new BadDescriptorException("Could not open parse table", e);
 		}
 	}
 
@@ -162,7 +162,7 @@
 		try {
 			return openAttachment(getPPTableName(), false);
 		} catch (FileNotFoundException e) {
-			throw new BadDescriptorException(e);
+			throw new BadDescriptorException("Could not pretty printing table", e);
 		}
 	}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2009-09-02 15:01:06 UTC (rev 19918)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2009-09-03 08:01:45 UTC (rev 19919)
@@ -143,6 +143,9 @@
     }
 
 	public AstNode parse(String input, boolean scanOnly, IProgressMonitor monitor) {
+		if (input.length() == 0)
+			return currentAst = null;
+		
 		if (getPath() == null)
 		    throw new IllegalStateException("SGLR parse controller not initialized");
 
@@ -161,7 +164,6 @@
 			
 			Debug.startTimer();
 			
-			// TODO: Do not fail or complain on empty input?
 			char[] inputChars = input.toCharArray();
 				
 			if (monitor.isCanceled()) return null;
@@ -261,7 +263,9 @@
 	public Iterator<IToken> getTokenIterator(IRegion region) {
 		PrsStream stream = forceGetParseStream();
 		
-		if (stream == null || stream.getTokens().size() == 0 || getCurrentAst() == null) {
+		if (stream == null) {
+			return null;
+		} else if (stream.getTokens().size() == 0 || getCurrentAst() == null) {
 			// Parse hasn't succeeded yet, consider the entire stream as one big token
 			stream.addToken(new SGLRToken(stream, region.getOffset(), stream.getStreamLength() - 1,
 					TokenKind.TK_UNKNOWN.ordinal()));



From L.C.L.Kats at tudelft.nl  Thu Sep  3 11:09:30 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 03 Sep 2009 09:09:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19920 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast
Message-ID: <200909030908.n8398kef027456@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-03 09:09:30 +0000 (Thu, 03 Sep 2009)
New Revision: 19920

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19920&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java

Log:
Added a work-around for an imploder caching issue.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2009-09-03 08:01:45 UTC (rev 19919)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2009-09-03 09:09:30 UTC (rev 19920)
@@ -76,7 +76,8 @@
 		// TODO: Return null if imploded tree has null constructor??
 		
 		AstNode result = implodedCache.get(asfix);
-		if (result != null) return result;
+		if (result != null && tokenizer.getStartOffset() != 0) // HACK: tokenizer is sometimes cached empty?
+			return result;
 		
 		Debug.startTimer();
 



From L.C.L.Kats at tudelft.nl  Thu Sep  3 13:23:39 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 03 Sep 2009 11:23:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19921 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <200909031122.n83BMs6M029319@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-03 11:23:38 +0000 (Thu, 03 Sep 2009)
New Revision: 19921

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19921&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str

Log:
Lazily make permissive grammars.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-03 09:09:30 UTC (rev 19920)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-03 11:23:38 UTC (rev 19921)
@@ -80,17 +80,22 @@
         
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
-                <srcfileset    file="include/${sdfmodule}.def"/>
+                <srcfileset file="include/${sdfmodule}.def"/>
                 <targetfileset file="include/${sdfmodule}-Permissive.def"/>
             </dependset>
-            <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
-                <arg value="-i"/>
-                <arg value="${basedir}/include/${sdfmodule}.def"/>
-                <arg value="-o"/>
-            	<arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
-            </java>
+        	<available file="include/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.real"/>
         </target>
     
+       <target name="make-permissive.real" unless="permissive-grammar.available">
+        <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
+            <arg value="-i"/>
+            <arg value="${basedir}/include/${sdfmodule}.def"/>
+            <arg value="-o"/>
+        	<arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
+        </java>
+       	</target>
+    
         <target name="pack-sdf" depends="init" unless="externaldef">
             <dependset>
                 <srcfilelist dir="${syntax}" files="**/*.sdf"/>



From L.C.L.Kats at tudelft.nl  Thu Sep  3 13:51:01 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 03 Sep 2009 11:51:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19922 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <200909031150.n83BoGHC029661@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-03 11:51:01 +0000 (Thu, 03 Sep 2009)
New Revision: 19922

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19922&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str

Log:
Added a new ant target to automatically download the required jar files.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-03 11:23:38 UTC (rev 19921)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-03 11:51:01 UTC (rev 19922)
@@ -30,7 +30,7 @@
         <property name="sdfmodule" value="<%= name %>"/>
         <property name="esvmodule" value="<%= name %>"/>
         <property name="strmodule" location="<%= name' %>"/>
-	    <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
+        <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
         
         <!-- External .def location (optional)
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
@@ -83,18 +83,24 @@
                 <srcfileset file="include/${sdfmodule}.def"/>
                 <targetfileset file="include/${sdfmodule}-Permissive.def"/>
             </dependset>
-        	<available file="include/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <available file="include/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
             <antcall target="make-permissive.real"/>
         </target>
     
-       <target name="make-permissive.real" unless="permissive-grammar.available">
-        <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
-            <arg value="-i"/>
-            <arg value="${basedir}/include/${sdfmodule}.def"/>
-            <arg value="-o"/>
-        	<arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
-        </java>
-       	</target>
+        <target name="make-permissive.real" unless="permissive-grammar.available" depends="aux-files">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/include/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
+            </java>
+        </target>
+
+        <target name="aux-files">
+            <property name="site" value="http://www.st.ewi.tudelft.nl/~kats/strategoxt/18a"/>
+            <get src="${site}/strategoxt.jar" dest="aux/strategoxt.jar" usetimestamp="true" ignoreerrors="true"/>
+            <get src="${site}/make_permissive.jar" dest="aux/make_permissive.jar" usetimestamp="true" ignoreerrors="true"/>
+        </target>
     
         <target name="pack-sdf" depends="init" unless="externaldef">
             <dependset>
@@ -116,8 +122,8 @@
                 <mapper type="glob" from="*.sdf" to="*.def"/>
             </apply>
         </target>
-	
-	    <target name="copy-sdf" depends="init" if="externaldef">
+    
+        <target name="copy-sdf" depends="init" if="externaldef">
             <copy file="${externaldef}" todir="include"/>
         </target>
     
@@ -138,7 +144,7 @@
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-m"/>
-            	<arg value="${sdfmodule}"/>
+                <arg value="${sdfmodule}"/>
                 <arg value="-o"/>
                 <targetfile/>
                 

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2009-09-03 11:23:38 UTC (rev 19921)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2009-09-03 11:51:01 UTC (rev 19922)
@@ -25,7 +25,7 @@
 <launchConfiguration type=\"org.eclipse.ant.AntLaunchConfigurationType\">
 <stringAttribute key=\"bad_container_name\" value=\".externalToolBuilders\"/>
 <booleanAttribute key=\"org.eclipse.ant.ui.DEFAULT_VM_INSTALL\" value=\"false\"/>
-<stringAttribute key=\"org.eclipse.debug.core.ATTR_REFRESH_SCOPE\" value=\"${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", project-name, "/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}\"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", project-name, "/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", project-name, "/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", project-name, "/aux&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
 <listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_PATHS\">
 <listEntry value=\"/", project-name, "/build.xml\"/>
 </listAttribute>
@@ -37,8 +37,6 @@
 <listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;\"/>
 <listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
 <listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;\"/>
-<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/", project-name, "/aux/make_permissive.jar&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;\"/>
-<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/", project-name, "/aux/strategoxt.jar&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;\"/>
 </listAttribute>
 <stringAttribute key=\"org.eclipse.jdt.launching.CLASSPATH_PROVIDER\" value=\"org.eclipse.ant.ui.AntClasspathProvider\"/>
 <booleanAttribute key=\"org.eclipse.jdt.launching.DEFAULT_CLASSPATH\" value=\"false\"/>



From L.C.L.Kats at tudelft.nl  Thu Sep  3 14:05:12 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 03 Sep 2009 12:05:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19923 - LennartKats -
	in strc-java/trunk: META-INF java/runtime/org/strategoxt/lang
Message-ID: <200909031204.n83C4RlT029983@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-03 12:05:12 +0000 (Thu, 03 Sep 2009)
New Revision: 19923

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19923&view=rev

Modified:
   strc-java/trunk/META-INF/MANIFEST.MF
   strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java

Log:


Changes:

Modified: strc-java/trunk/META-INF/MANIFEST.MF
===================================================================
--- strc-java/trunk/META-INF/MANIFEST.MF	2009-09-03 11:51:01 UTC (rev 19922)
+++ strc-java/trunk/META-INF/MANIFEST.MF	2009-09-03 12:05:12 UTC (rev 19923)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Stratego/XT Java runtime
 Bundle-SymbolicName: org.strategoxt.strj;singleton:=true
-Bundle-Version: 0.1
+Bundle-Version: 0.1.1
 Export-Package: org.strategoxt,
  org.strategoxt.lang,
  org.strategoxt.lang.compat,

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java	2009-09-03 11:51:01 UTC (rev 19922)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java	2009-09-03 12:05:12 UTC (rev 19923)
@@ -81,7 +81,7 @@
 				if (isStackTuned()) {
 					System.err.println("Stack overflow.");
 				} else {
-					System.err.println("Stack overflow (use java -Xss4m to increase the stack size)");
+					System.err.println("Stack overflow (use java -ss4m to increase the stack size)");
 				}
 			} else {
 				dumpError("Fatal error at");
@@ -90,7 +90,7 @@
 
 		private boolean isStackTuned() {
 			for (String arg : ManagementFactory.getRuntimeMXBean().getInputArguments()) {
-				if (arg.startsWith("-Xss")) return true;
+				if (arg.startsWith("-Xss") || arg.startsWith("-ss")) return true;
 			}
 			return false;
 		}



From L.C.L.Kats at tudelft.nl  Thu Sep  3 14:32:19 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 03 Sep 2009 12:32:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19924 - LennartKats -
	strategoxt/trunk/strc-core/lib/stratego/strc/front
Message-ID: <200909031231.n83CVYDs030314@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-03 12:32:19 +0000 (Thu, 03 Sep 2009)
New Revision: 19924

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19924&view=rev

Modified:
   strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str

Log:
Added early desugaring of if-c-platform...

Changes:

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str	2009-09-03 12:05:12 UTC (rev 19923)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str	2009-09-03 12:32:19 UTC (rev 19924)
@@ -369,6 +369,11 @@
     CallT(SVar("if-java-platform"), [s], []) -> s
     where
       <get-config> "JAVA_PLATFORM"; not(<get-config> "-F")
+  
+  Desugar :
+    CallT(SVar("if-c-platform"), [s], []) -> Id()
+    where
+      <get-config> "JAVA_PLATFORM"; not(<get-config> "-F")
 
   DesugarOnce :
     PrimNoArgs(f) -> PrimT(<try(un-double-quote)>f, [], [])



From L.C.L.Kats at tudelft.nl  Thu Sep  3 14:33:27 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 03 Sep 2009 12:33:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19925 - LennartKats -
	in strategoxt/trunk: asfix-tools/xtc
	strc-core/lib/stratego/strc/parse
Message-ID: <200909031232.n83CWh46030320@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-03 12:33:27 +0000 (Thu, 03 Sep 2009)
New Revision: 19925

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19925&view=rev

Modified:
   strategoxt/trunk/asfix-tools/xtc/sglri.str
   strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str

Log:
Added "Comment" to the list of constructors considered for --preserve-comments.

Changes:

Modified: strategoxt/trunk/asfix-tools/xtc/sglri.str
===================================================================
--- strategoxt/trunk/asfix-tools/xtc/sglri.str	2009-09-03 12:32:19 UTC (rev 19924)
+++ strategoxt/trunk/asfix-tools/xtc/sglri.str	2009-09-03 12:33:27 UTC (rev 19925)
@@ -51,7 +51,7 @@
         )
 
       ; if must-preserve-comments then
-          asfix-anno-comments(| [ "ShortCom", "LongCom"] )
+          asfix-anno-comments(| [ "ShortCom", "LongCom", "Comment" ] )
         end
   
       ; if must-preserve-positions then

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str	2009-09-03 12:32:19 UTC (rev 19924)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str	2009-09-03 12:33:27 UTC (rev 19925)
@@ -140,7 +140,7 @@
     ; <parse-xtc-file-pt(err(|["cannot open file ", path]), strsglr-report-parse-error | tbl, srt, path)> file
 
     ; if <ps-must-preserve-comments> meta then
-        asfix-anno-comments(| [ "ShortCom", "LongCom"] )
+        asfix-anno-comments(| [ "ShortCom", "LongCom", "Comment" ] )
       end
   
     ; if <ps-must-preserve-positions> meta then



From L.C.L.Kats at tudelft.nl  Thu Sep  3 17:14:42 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 03 Sep 2009 15:14:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19926 - LennartKats -
	in spoofax-imp/trunk: . org.strategoxt.imp.stratego_editor
	org.strategoxt.imp.stratego_editor/.externalToolBuilders
	org.strategoxt.imp.stratego_editor/META-INF
	org.strategoxt.imp.stratego_editor/editor
	org.strategoxt.imp.stratego_editor/syntax
Message-ID: <200909031513.n83FDwZX032537@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-03 15:14:42 +0000 (Thu, 03 Sep 2009)
New Revision: 19926

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19926&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego build.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.project
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/META-INF/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/aux/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar-Colorer.esv
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar.main.esv
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/include/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def

Log:
New (uncustomized) Stratego editor.

Changes (first 1000 lines of the diffs):

Added: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.classpath
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.classpath	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.classpath	2009-09-03 15:14:42 UTC (rev 19926)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego build.xml.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego build.xml.launch	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego build.xml.launch	2009-09-03 15:14:42 UTC (rev 19926)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/aux&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
+<listEntry value="/org.strategoxt.imp.stratego_editor/build.xml"/>
+</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
+<listEntry value="1"/>
+</listAttribute>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.stratego_editor"/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="from-eclipse,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.stratego_editor/build.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.stratego_editor}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.project
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.project	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.project	2009-09-03 15:14:42 UTC (rev 19926)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>org.strategoxt.imp.stratego_editor</name>
+      <comment></comment>
+      <buildSpec>
+		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&lt;project&gt;/.externalToolBuilders/Stratego build.xml.launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/META-INF/MANIFEST.MF	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/META-INF/MANIFEST.MF	2009-09-03 15:14:42 UTC (rev 19926)
@@ -0,0 +1,20 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Stratego Plug-in
+Bundle-SymbolicName: org.strategoxt.imp.stratego_editor; singleton:=true
+Bundle-Version: 1.0.0
+Bundle-Activator: org.strategoxt.imp.stratego_editor.Activator
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+  org.eclipse.core.resources,
+  org.eclipse.imp.runtime,
+  org.eclipse.ui,
+  lpg.runtime,
+  org.eclipse.jface.text,
+  org.eclipse.ui.editors,
+  org.eclipse.ui.workbench.texteditor,
+  org.strategoxt.imp.runtime,
+  org.spoofax.aterm,
+  org.spoofax.jsglr
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Export-Package: org.strategoxt.imp.stratego_editor

Added: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml	2009-09-03 15:14:42 UTC (rev 19926)
@@ -0,0 +1,222 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="Stratego" default="standalone">
+    
+        <property name="externaldef" location="syntax/Stratego-Sugar.def"/>
+    
+        <!-- (standard build.xml below this line) -->
+    
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="syntax" location="syntax"/>
+        <property name="editor" location="editor"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="Stratego-Sugar"/>
+        <property name="esvmodule" value="Stratego-Sugar"/>
+        <property name="strmodule" location="stratego-sugar"/>
+        <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
+        
+        <!-- External .def location (optional)
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        -->
+        
+        <!-- Environment configuration -->
+        <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
+        <property name="build.strategoxt.sdf.imports" value=""/>
+        <property name="build.strategoxt.strc.imports" value=""/>
+        
+        <!-- Default target for building within Eclipse -->
+        <target name="from-eclipse" depends="strc,sdf2table,sdf2imp-eclipse"/>
+        
+        <!-- Default target for building outside of Eclipse -->
+        <target name="standalone" depends="strc,sdf2table,sdf2imp-standalone"/>
+        
+        <target name="init">
+            <mkdir dir="${build}"/>
+            <mkdir dir="${dist}"/>
+        </target>
+        
+        <target name="sdf2imp-eclipse" depends="sdf2table">
+            <!-- HACK: Trigger the Eclipse builder rather than build it here -->
+            <!-- (if we did built it here, we'd have to use the -p option to -->
+            <!--  specify the parse table, and put the table in another dir  -->
+            <touch file="include/${esvmodule}.packed.esv"/>
+            <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
+        </target>
+        
+        <target name="sdf2imp-standalone" depends="sdf2table">
+            <echo message="Only building from within Eclipse is implemented at this time"/>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt}/sdf2table" dest="include" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="include/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="include/${sdfmodule}.def"/>
+                <targetfileset file="include/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="include/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.real"/>
+        </target>
+    
+        <target name="make-permissive.real" unless="permissive-grammar.available" depends="aux-files">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/include/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
+            </java>
+        </target>
+
+        <target name="aux-files">
+            <property name="site" value="http://www.st.ewi.tudelft.nl/~kats/strategoxt/18a"/>
+            <get src="${site}/strategoxt.jar" dest="aux/strategoxt.jar" usetimestamp="true" ignoreerrors="true"/>
+            <get src="${site}/make_permissive.jar" dest="aux/make_permissive.jar" usetimestamp="true" ignoreerrors="true"/>
+        </target>
+    
+        <target name="pack-sdf" depends="init" unless="externaldef">
+            <dependset>
+                <srcfilelist dir="${syntax}" files="**/*.sdf"/>
+                <targetfileset file="${syntax}/${sdfmodule}.def"/>
+            </dependset>
+            <apply executable="${build.strategoxt}/pack-sdf" failonerror="true" dest="include">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-I"/>
+                <arg value="${trans}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${build.strategoxt.sdf.imports}"/>
+                
+                <fileset file="${syntax}/${sdfmodule}.sdf"/>
+                <mapper type="glob" from="*.sdf" to="*.def"/>
+            </apply>
+        </target>
+    
+        <target name="copy-sdf" depends="init" if="externaldef">
+            <copy file="${externaldef}" todir="include"/>
+        </target>
+    
+        <target name="rtg2sig" depends="init,sdf2rtg" if="strmodule.present" unless="external-def">
+            <apply executable="${build.strategoxt}/rtg2sig" dest="${build}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                
+                <fileset file="${syntax}/${sdfmodule}.rtg"/>
+                <mapper type="glob" from="*.rtg" to="*.str"/>
+            </apply>
+        </target>
+        
+        <target name="sdf2rtg" depends="init,pack-sdf" if="strmodule.present" unless="external-def">
+            <apply executable="${build.strategoxt}/sdf2rtg" dest="${build}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <targetfile/>
+                
+                <fileset file="${syntax}/${sdfmodule}.str"/>
+                <mapper type="glob" from="*.def" to="*.rtg"/>
+            </apply>
+        </target>
+    
+        <target name="strc" depends="init,rtg2sig" if="strmodule.present">
+            <antcall target="strc-call">
+                <param name="build.strategoxt.strc.params" value=""/>
+                <param name="build.strategoxt.strc.extension" value="*"/>
+                <param name="strcExecutable" value="strc"/>
+            </antcall>
+        </target>
+    
+        <target name="strj" depends="init,rtg2sig" if="strmodule.present">
+            <antcall target="strc-call">
+                <param name="build.strategoxt.strc.params" value=""/>
+                <param name="build.strategoxt.strc.extension" value="*.java"/>
+                <param name="strcExecutable" value="strj"/>
+            </antcall>
+        </target>
+        
+        <target name="strji" depends="init,rtg2sig" if="strmodule.present">
+            <antcall target="strc-call">
+                <param name="build.strategoxt.strc.params" value="-F --library"/>
+                <param name="build.strategoxt.strc.extension" value="*.ctree"/>
+                <param name="strcExecutable" value="strc"/>
+            </antcall>
+        </target>
+        
+        <target name="strc-call" depends="init,rtg2sig">
+            <dependset>
+                <srcfilelist dir="${trans}" files="**/*.str"/>
+                <srcfilelist dir="${build}" files="**/*.str"/>
+                <targetfileset dir="${dist}" includes="**/*"/>
+            </dependset>
+            <apply executable="${build.strategoxt}/{strcExecutable}" dest="include" failonerror="true">
+                <arg value=".str"/>
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="-S"/> <!-- (Silent mode) -->
+                <arg value="-I"/>
+                <arg value="${trans}"/>
+                <arg value="-I"/>
+                <arg value="${build}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg value="-I"/>
+                <arg value="${user.home}/.nix-profile/share/java-front"/>
+                <arg value="-la"/>
+                <arg value="stratego-lib"/>
+                <arg value="-la"/>
+                <arg value="${user.home}/.nix-profile/lib/libjava-front.la"/>
+                <arg value="-la"/>
+                <arg value="stratego-sglr"/>
+                <arg value="-la"/>
+                <arg value="stratego-gpp"/>
+                <arg value="-la"/>
+                <arg value="stratego-xtc"/>
+                
+                <arg line="${build.strategoxt.strc.params}"/>
+                <arg line="${build.strategoxt.strc.imports}"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="${build.strategoxt.strc.extension}"/>
+            </apply>
+            
+            <!-- Remove any intermediate files -->
+            <delete>
+                <fileset dir="${dist}">
+                    <include name="**/*.c"/>
+                    <include name="**/*.dep"/>
+                    <include name="**/*.lo"/>
+                    <include name="**/*.o"/>
+                </fileset>
+            </delete>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+        </target>
+    </project>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar-Colorer.esv
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar-Colorer.esv	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar-Colorer.esv	2009-09-03 15:14:42 UTC (rev 19926)
@@ -0,0 +1,15 @@
+module Stratego-Sugar-Colorer
+
+imports Stratego-Sugar-Colorer.generated
+
+colorer Extension
+  
+              _.ToMetaExpr:   _ 255 255 255 bold
+  environment _.ToMetaExpr:   _ 210 230 220
+  environment _.FromMetaExpr: _ 255 255 255
+  
+  environment var:
+    0 128 64
+    255 255 255
+    italic
+

Added: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar.main.esv
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar.main.esv	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar.main.esv	2009-09-03 15:14:42 UTC (rev 19926)
@@ -0,0 +1,16 @@
+module Stratego-Sugar.main
+
+imports Stratego-Sugar-Analysis Stratego-Colorer Stratego-Folding Stratego-Occurrences Stratego-Outliner Stratego-References Stratego-Syntax
+
+language General properties
+                  
+  name          : Stratego-Sugar
+  id            : org.strategoxt.imp.stratego_editor
+  extends       : Root
+                  
+  description   : "Spoofax/IMP-generated editor for the Stratego-Sugar language"
+  url           : http://strategoxt.org
+                  
+  extensions    : str
+  table         : include/Stratego-Sugar.tbl
+  start symbols : Module
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/plugin.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/plugin.xml	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/plugin.xml	2009-09-03 15:14:42 UTC (rev 19926)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="str" description="Stratego" language="Stratego" derivedFrom="DynamicRoot"></language>
+       </extension>
+       <extension id="org.strategoxt.imp.stratego_editor.parser" name="Stratego Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="org.strategoxt.imp.stratego_editor.StrategoParseController" language="Stratego">
+          </parser>
+       </extension>    
+    </plugin>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def	2009-09-03 15:14:42 UTC (rev 19926)
@@ -0,0 +1,764 @@
+definition
+module Stratego-Sugar-Overlays
+imports
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Terms
+
+exports
+  sorts Overlay
+  context-free syntax
+    Id 			 "=" Term 	-> Overlay {cons("OverlayNoArgs")}
+    Id "(" {Id ","}* ")" "=" Term 	-> Overlay {cons("Overlay")}
+
+module Stratego-Sugar-DynamicRules
+imports
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Rules
+
+exports
+ 
+  sorts ScopeLabels
+  context-free syntax
+
+    "{|" ScopeLabels ":" Strategy "|}" -> Strategy {cons("DynRuleScope")}
+
+    {DynRuleScopeId ","}*   -> ScopeLabels
+    "~" Term		    -> ScopeLabels {cons("ScopeLabels")}
+
+  sorts DynRuleDef DynRuleId DynRuleScopeId RuleDec
+  context-free syntax
+
+    "rules" "(" DynRuleDef* ")" -> Strategy {cons("GenDynRules")}
+
+    Id "+" Term                 -> DynRuleDef {cons("AddScopeLabel")} 
+    DynRuleId ":-"  Term        -> DynRuleDef {cons("UndefineDynRule")}
+    DynRuleId ":"   Rule        -> DynRuleDef {cons("SetDynRule")}
+    DynRuleId ":+"  Rule        -> DynRuleDef {cons("AddDynRule")}
+    DynRuleId ":"   Term        -> DynRuleDef {cons("SetDynRuleMatch")}
+
+    DynRuleId ":="  Term        -> DynRuleDef {cons("DynRuleAssign")}
+    DynRuleId ":+="  Term       -> DynRuleDef {cons("DynRuleAssignAdd")}
+
+    DynRuleId ":"   Rule "depends" "on" Term -> DynRuleDef {cons("SetDynRuleDepends")}
+
+    RuleDec "." Term            -> DynRuleId {cons("LabeledDynRuleId")}
+    RuleDec "+" Term            -> DynRuleId {cons("AddLabelDynRuleId")}
+    RuleDec                     -> DynRuleId {cons("DynRuleId")}
+
+    Id "." Term                 -> DynRuleScopeId {cons("LabeledDynRuleScopeId")}
+    Id                          -> DynRuleScopeId {cons("DynRuleScopeId")}
+
+  context-free syntax
+
+    Id                          -> RuleDec {cons("RDecNoArgs")}
+    Id "(" {Typedid ","}* ")"   -> RuleDec {cons("RDec")}
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"   -> RuleDec {cons("RDecT")}
+
+  sorts RuleNames
+  context-free syntax
+    {Id ","}*				  -> RuleNames
+    "~" Term				  -> RuleNames {cons("RuleNames")}
+
+    "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
+
+  syntax
+    %% no space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% 1 space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% no space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    %% 1 space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+
+  context-free syntax
+    Strategy "/" RuleNames"\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
+    Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
+
+    Strategy "/" RuleNames "\\" 
+                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
+
+  priorities
+    <StrategyAngle-CF> <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("BA")}
+  > {
+
+    %% no space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% 1 space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% no space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    %% 1 space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    }
+  > <Strategy-CF> <LAYOUT?-CF> "=>" <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("AM")}
+
+  context-free priorities
+    StrategyAngle Term 		          -> Strategy {cons("BA")}
+  > "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
+  > Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
+  > Strategy "/" RuleNames "\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
+  > Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
+  > Strategy "/" RuleNames "\\" 
+                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
+  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+
+module Stratego-Sugar-Rules
+imports Stratego-Sugar-Strategies
+exports
+
+  sorts RuleDef
+  context-free syntax
+    Id ":" Rule 				-> RuleDef {cons("RDefNoArgs")}
+    
+    Anno+ RuleDef               -> Def {cons("AnnoDef")}
+
+    Id "(" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDef")}
+
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDefT")}
+
+  sorts Rule RuleCond
+  context-free syntax
+    Term "->" Term           	    -> Rule {cons("RuleNoCond")} %% backward comp.
+    Term "->" Term "where" Strategy -> Rule {cons("Rule")}       %% backward comp.
+    Term "->" Term RuleCond+	    -> Rule {cons("Rule"), avoid}
+
+    "where" Strategy -> RuleCond {cons("WhereClause")}
+    "with"  Strategy -> RuleCond {cons("WithClause")}
+
+module Stratego-Sugar-Strategies
+imports
+  Stratego-Core-Strategies
+  Stratego-Sugar-Terms
+  Stratego-Sugar-Constants
+  Stratego-Sugar-Signatures
+
+exports
+  context-free syntax
+    Id  		      "=" Strategy -> StrategyDef {cons("SDefNoArgs")}
+    Id "(" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDef")}
+
+  context-free syntax
+    ID 				  	  -> Typedid {cons("DefaultVarDec")}
+
+  sorts Rule
+
+  sorts StrategyParen StrategyCurly StrategyAngle
+  context-free syntax
+
+    %% Abstraction
+
+    SVar "(" {Strategy ","}* ")" 	  -> Strategy {cons("Call")}
+
+    %% Match and build
+
+    "{" Strategy "}" 			  -> Strategy {cons("ScopeDefault")}
+
+     %%"<" Strategy ">" Term 		  -> Strategy {cons("BA")}
+     StrategyAngle Term 		  -> Strategy {cons("BA")}
+     "<" Strategy ">"			  -> StrategyAngle {bracket} %% {cons("AngleStrat")}
+
+    %% Combinators
+
+    Strategy "<+" Strategy 		  -> Strategy {cons("LChoice"),right}
+
+    "rec" Id "(" Strategy ")" 		  -> Strategy {cons("Rec")}
+
+    "not"   "(" Strategy ")" 		  -> Strategy {cons("Not")}
+    "where" "(" Strategy ")" 		  -> Strategy {cons("Where")}
+    "with"  "(" Strategy ")" 		  -> Strategy {cons("With"), prefer}
+    "test"  "(" Strategy ")" 		  -> Strategy {cons("Test")}
+
+    %% Primitives
+
+    "prim" "(" String ")" 		  -> Strategy {cons("PrimNoArgs")}
+    "prim" "(" String "," {Term ","}* ")" -> Strategy {cons("Prim")}
+
+    %% Congruence operators
+
+    String 				  -> Strategy {cons("StrCong")}
+    Int 				  -> Strategy {cons("IntCong")}
+    Real 				  -> Strategy {cons("RealCong")}
+    Char 			 	  -> Strategy {cons("CharCong")}
+
+    String "(" {Strategy ","}* ")" 	  -> Strategy {cons("CongQ")}
+
+    %%"(" {Strategy ","}* ")" 		  -> Strategy {cons("TupleCong"),avoid}
+
+    Strategy StrategyCurly		  -> Strategy {cons("AnnoCong")}
+    
+    "{" Strategy "}"		  	  -> StrategyCurly {cons("StrategyCurly")}
+
+    "("  ")" 		  		  -> Strategy {cons("EmptyTupleCong")}
+   "(" Strategy  ")" 		          -> Strategy {bracket}
+    "(" Strategy "," {Strategy ","}+ ")"  -> Strategy {cons("TupleCong")}
+
+%%    Mod 	  			  -> Strategy {cons("ModCongNoArgs")}
+%%    Mod "(" {Strategy ","}* ")"	  	  -> Strategy {cons("ModCong")}
+%%    Id "^" Id				  -> Mod {cons("Mod")}
+    "[" {Strategy ","}* "]" 		  -> Strategy {cons("ListCongNoTail")}
+    "[" {Strategy ","}* "|" Strategy "]"  -> Strategy {cons("ListCong")}
+
+%%    Strategy "#" "(" StrategyInj ")" 	  -> Strategy {cons("ExplodeCong")}
+%%    Strategy "#" "(" Strategy ")" 	  -> Strategy {cons("ExplodeCong")}
+    Strategy "#" StrategyParen	  	  -> Strategy {cons("ExplodeCong")}
+
+  %% Syntactic sugar sugar
+
+  sorts SwitchCase
+  context-free syntax
+
+    SVar  		  		  -> Strategy {cons("CallNoArgs")}
+    "\\" Rule "\\" 			  -> Strategy {cons("LRule")}
+    "(" Rule ")" 			  -> Strategy {cons("SRule")}
+    Strategy "+" Strategy 		  -> Strategy {cons("Choice"),right} 
+    Strategy "+>" Strategy 		  -> Strategy {cons("RChoice"),right}
+
+    "if" Strategy "then" Strategy 
+                  "else" Strategy "end"   -> Strategy {cons("CondChoice")}
+    "if" Strategy "then" Strategy "end"   -> Strategy {cons("IfThen")}
+
+    "switch" Strategy SwitchCase* "end"   -> Strategy {cons("SwitchChoiceNoOtherwise")}
+    "switch" Strategy SwitchCase*
+         "otherwise" ":" Strategy "end"   -> Strategy {cons("SwitchChoice")}
+
+    "case" Strategy ":" Strategy          -> SwitchCase {cons("SwitchCase")}
+
+    Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
+
+    Term ":=" Term			  -> Strategy {cons("Assign")}
+
+  %% Priorities
+
+  context-free priorities
+    { Strategy StrategyCurly		  -> Strategy
+      Strategy "#" StrategyParen          -> Strategy
+    }
+  > { "!" Term 				  -> Strategy
+      "?" Term 				  -> Strategy
+    }
+  > StrategyAngle Term 		          -> Strategy
+  > Strategy "=>" Term 		  	  -> Strategy
+  > Strategy ";" Strategy 		  -> Strategy
+  > {right: 
+     Strategy "+" Strategy 		  -> Strategy
+     Strategy "<+" Strategy 		  -> Strategy
+     Strategy "+>" Strategy 		  -> Strategy
+     
+     Strategy "<" StrategyMid 
+              "+" Strategy 		  -> Strategy
+    }
+
+  context-free priorities
+    Strategy 				  -> StrategyMid
+  > Strategy "+" Strategy 		  -> Strategy
+
+  context-free priorities
+    { Strategy StrategyCurly      -> Strategy
+      Strategy "#" StrategyParen  -> Strategy
+    }
+    .> Term ":=" Term -> Strategy
+
+
+module Stratego-Sugar-Terms
+imports
+  Stratego-Core-Terms
+  Stratego-Sugar-Strategies
+
+exports
+  sorts LID
+  context-free syntax
+    LId 			-> LID  {cons("ListVar")}
+    LID				-> Var  {cons("Var")}
+    LID				-> ID
+
+  context-free syntax
+    "_" PreTerm 		 -> PreTerm {cons("BuildDefaultPT")}
+    "_" Term 			 -> Term {cons("BuildDefault"),prefer}
+
+    Char 			 -> PreTerm {cons("Char")}
+
+    PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
+    PreTerm                      -> Term {cons("NoAnnoList")}
+
+    "<" Strategy ">" Term 	 -> PreTerm {cons("App")}
+    "<" Strategy ">" Term 	 -> Term {cons("App"),prefer}
+
+    StrategyAngle		 -> PreTerm {cons("RootApp")}
+    StrategyAngle		 -> Term {cons("RootApp"),prefer}
+
+    "(" {Term ","}* ")" 	 -> PreTerm {cons("Tuple")}
+    "[" {Term ","}* "]" 	 -> PreTerm {cons("List")}
+    "[" {Term ","}* "|" Term "]" -> PreTerm {cons("ListTail")}
+
+  context-free priorities
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+  > PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
+  > Var "@" Term 		 -> Term {cons("As")}
+
+module Stratego-Sugar-Signatures
+imports
+  Stratego-Core-Signatures
+  Stratego-Sugar-Constants
+
+exports
+
+  sorts Sort
+  context-free syntax
+    "[" {Sort ","}* "]"		 -> Sort {cons("SortList")}
+    "[" {Sort ","}* "|" Sort "]" -> Sort {cons("SortListTl")}
+    "(" {Sort ","}* ")"		 -> Sort {cons("SortTuple")}
+
+  sorts Kind
+  context-free syntax
+    "*" 			-> Kind {cons("Star")}
+    "**" 			-> Kind {cons("StarStar")}
+
+module Stratego-Core-Signatures
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+exports
+  sorts Sdecl
+  context-free syntax
+    "sorts" Sort* 		-> Sdecl {cons("Sorts")}
+    "constructors" Opdecl* 	-> Sdecl {cons("Constructors")}
+
+  sorts Sort
+  context-free syntax
+    LCID 			 -> Sort {cons("SortVar")}
+    UCID 			 -> Sort {cons("SortNoArgs")}
+    Id "(" {Sort ","}* ")" 	 -> Sort {cons("Sort")}
+
+  sorts Opdecl
+  context-free syntax
+    Id     ":" Type 		-> Opdecl {cons("OpDecl")}
+    String ":" Type 		-> Opdecl {cons("OpDeclQ")}
+           ":" Type 		-> Opdecl {cons("OpDeclInj")}
+
+  context-free syntax
+    "external" Id     ":" Type 	-> Opdecl {cons("ExtOpDecl")}
+    "external" String ":" Type 	-> Opdecl {cons("ExtOpDeclQ")}
+    "external"        ":" Type 	-> Opdecl {cons("ExtOpDeclInj")}
+
+  sorts Type ArgType ConstType FunType RetType
+  context-free syntax
+    Sort	                -> ConstType {cons("ConstType")}
+    {ArgType "*"}+ "->" RetType -> FunType {cons("FunType")}
+    "(" Type ")"                -> ArgType {bracket}
+    ConstType			-> ArgType
+    Type	                -> RetType
+    FunType			-> RetType {reject}
+
+    FunType			-> Type
+    ConstType			-> Type
+
+  %%%
+   %% Restriction is required for the Sort* in Sdecl: List(a) is
+   %% ambiguous.
+   %%%
+  context-free restrictions
+    Sort -/- [\(]
+
+module Stratego-Core-Terms
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+
+exports
+  sorts ID Var Wld
+  context-free syntax
+    Id 				-> Var  {cons("Var")}
+    Id				-> ID
+    %% ":" Var                  -> Var  {cons("SeqVar")}
+
+  sorts Term PreTerm
+  context-free syntax
+    Var 			 -> PreTerm 
+    Var 			 -> Term {prefer}
+
+    "_" 			 -> Wld {cons("Wld")}
+    Wld 			 -> PreTerm
+    Wld 			 -> Term {prefer}
+
+    Int 			 -> PreTerm {cons("Int")}
+    Real 			 -> PreTerm {cons("Real")}
+    String 			 -> PreTerm {cons("Str")}
+
+    Id "(" {Term ","}* ")" 	 -> PreTerm {cons("Op")}
+    String "(" {Term ","}* ")" 	 -> PreTerm {cons("OpQ")}
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+
+    PreTerm "{^" PreTerm "}"	 -> Term {cons("Anno")}
+
+    Var "@" Term 		 -> Term {cons("As"),prefer}
+    Var "@" PreTerm 		 -> PreTerm {cons("As")}
+
+  context-free priorities
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+  > Var "@" Term 		 -> Term {cons("As")}
+
+module Stratego-Core-Strategies
+imports
+  Stratego-Core-Terms
+  Stratego-Core-Constants
+  Stratego-Core-Signatures
+
+exports
+  sorts Def
+  context-free syntax
+    StrategyDef					 -> Def 
+    Id						 -> SVar {cons("SVar")}
+    "let" Def* "in" Strategy "end"		 -> Strategy {cons("Let")}
+    SVar "(" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallT")}
+
+    "call" "(" Term "|" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallDynamic")}
+
+
+  sorts StrategyDef
+  context-free syntax
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDefT")}
+
+    Anno+ StrategyDef -> Def {cons("AnnoDef")}
+
+    "external"
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("ExtSDefInl")}
+
+    "external"
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"		   -> StrategyDef {cons("ExtSDef")}
+
+
+  sorts Anno
+  context-free syntax
+    "extend"      -> Anno {cons("Extend")}
+    "override"    -> Anno {cons("Override")}
+    "internal"    -> Anno {cons("Internal")}
+%%  "sealed"      -> Anno {cons("Sealed")}
+%%  "extensible"  -> Anno {cons("Extensible")}
+%%  "overridable" -> Anno {cons("Overridable")}
+
+  lexical syntax
+    
+    "extend"      -> Keyword
+    "override"    -> Keyword
+    "internal"    -> Keyword
+    "sealed"      -> Keyword
+    "extensible"  -> Keyword
+    "overridable" -> Keyword
+
+  lexical restrictions
+  
+    "extend"
+    "override"
+    "internal"
+    "sealed"
+    "extensible"
+    "overridable" -/- [a-zA-Z0-9\'\-\_]
+
+  sorts Typedid
+  context-free syntax
+    ID ":" Type 			  -> Typedid {cons("VarDec")}
+
+
+  sorts Strategy SVar StrategyParen StrategyMid 
+  context-free syntax
+    "(" Strategy ")"			  -> StrategyParen {cons("ParenStrat")}
+
+    "fail" 				  -> Strategy {cons("Fail")}
+    "id" 				  -> Strategy {cons("Id")}
+    "override" 			  -> Strategy {cons("Override")}
+
+    %% Match and build
+
+    "?" Term 				  -> Strategy {cons("Match")}
+    "!" Term 				  -> Strategy {cons("Build")}
+    "{" {ID ","}* ":" Strategy "}" 	  -> Strategy {cons("Scope")}
+
+    %% Combinators
+
+    Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+    Strategy "<" StrategyMid 
+             "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
+    Strategy 				  -> StrategyMid
+
+    %% Primitives
+
+    "prim" "(" String "," {Strategy ","}* "|" {Term ","}*")"  -> Strategy {cons("PrimT")}
+
+    %% Traversal
+
+    "some" "(" Strategy ")" 		  -> Strategy {cons("Some")}
+    "one" "(" Strategy ")" 		  -> Strategy {cons("One")}
+    "all" "(" Strategy ")" 		  -> Strategy {cons("All")}
+
+  %% Priorities
+
+  context-free priorities
+    { "!" Term 				  -> Strategy {cons("Build")}
+      "?" Term 				  -> Strategy {cons("Match")}
+    }
+  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+  > {right: 
+     Strategy "<" StrategyMid 
+              "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
+    }
+
+  context-free syntax
+    "import-term" "(" ModName ")" -> Strategy {cons("ImportTerm")}
+
+module Stratego-Core-Modules
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Strategies
+  Stratego-Core-Signatures
+
+exports 
+  sorts Module
+  context-free syntax
+    "module" ModName Decl* 	 -> Module {cons("Module")}
+    "specification" Decl*	 -> Module {cons("Specification")}
+
+  sorts Decl 
+  context-free syntax
+    "imports" ImportModName* 	-> Decl {cons("Imports")}
+    "strategies" Def* 		-> Decl {cons("Strategies")}
+    "signature" Sdecl*  	-> Decl {cons("Signature")}
+
+  sorts ImportModName
+  context-free syntax
+    ModName              -> ImportModName {cons("Import")}
+  syntax
+    <ModName-CF> "/" "-" -> <ImportModName-CF> {cons("ImportWildcard")}
+
+module Stratego-Sugar-Modules
+imports
+  Stratego-Core-Modules
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Signatures
+  Stratego-Sugar-Overlays
+  Stratego-Sugar-Rules
+
+exports 
+
+  sorts Decl Def
+  context-free syntax
+    "rules" Def* 		-> Decl {cons("Rules")}
+    "overlays" Overlay* 	-> Decl {cons("Overlays")}
+
+    RuleDef 			-> Def 
+
+
+module Stratego-Core-Constants
+exports
+  sorts Int Real String StrChar
+  lexical syntax
+    [\-]? [0-9]+ 		-> Int
+    [\-]? [0-9]+ [\.] [0-9]+ 	-> Real
+    "\"" StrChar* "\"" 		-> String
+    ~[\"\\] 			-> StrChar

(182 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Thu Sep  3 17:35:51 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 03 Sep 2009 15:35:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19927 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.editors.editorservice/META-INF
	org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.sdf/META-INF org.strategoxt.imp.feature
	org.strategoxt.imp.generator/META-INF
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.metatooling/META-INF
	org.strategoxt.imp.runtime/META-INF
	org.strategoxt.imp.stratego_editor/META-INF
	org.strategoxt.imp.updatesite org.strategoxt.imp.updatesite/features
	org.strategoxt.imp.updatesite/plugins
Message-ID: <200909031535.n83FZ6tw032687@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-03 15:35:51 +0000 (Thu, 03 Sep 2009)
New Revision: 19927

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19927&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.project
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/features/org.strategoxt.imp_0.1.0.2700.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/com.ibm.wala.shrike_1.1.3.200909031718.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.aterm_0.2.2.200909031718.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.compiler_0.3.9.200909031718.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.adapter.aterm_0.3.11.200909031718.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.core_0.3.13.200909031718.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.library.jsglr_0.3.9.200909031718.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter_0.3.11.200909031718.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.jsglr_0.2.1.200909031718.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.editorservice_0.1.0.2700.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.sdf_0.1.0.2700.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.generator_0.1.0.2700.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.metatooling_0.1.0.2700.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.runtime_0.1.0.2700.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.stratego_editor_0.1.0.2700.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.strj_0.1.1.jar
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/lpg.runtime_2.0.16.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg.metatooling_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg.runtime_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.metatooling_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.preferences_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.prefspecs_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.presentation_0.1.1.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.runtime_0.1.88.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.smapi_0.1.86.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.smapifier_0.1.86.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.xform_0.1.87.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
New update site (updated dependencies and version numbers).

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF	2009-09-03 15:14:42 UTC (rev 19926)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF	2009-09-03 15:35:51 UTC (rev 19927)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: EditorService Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.editors.editorservice; singleton:=true
-Bundle-Version: 0.1.0.2600
+Bundle-Version: 0.1.0.2700
 Bundle-Activator: org.strategoxt.imp.editors.editorservice.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.project
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.project	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.project	2009-09-03 15:35:51 UTC (rev 19927)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>org.strategoxt.imp.editors.sdf</name>
+      <comment></comment>
+      <buildSpec>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/META-INF/MANIFEST.MF	2009-09-03 15:14:42 UTC (rev 19926)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/META-INF/MANIFEST.MF	2009-09-03 15:35:51 UTC (rev 19927)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: SDF Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.editors.sdf; singleton:=true
-Bundle-Version: 1.0.0
+Bundle-Version: 0.1.0.2700
 Bundle-Activator: org.strategoxt.imp.editors.sdf.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-09-03 15:14:42 UTC (rev 19926)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-09-03 15:35:51 UTC (rev 19927)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.1.0.2600"
+      version="0.1.0.2700"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://www.lclnet.nl/software/sdf2imp/">
@@ -25,20 +25,22 @@
          id="org.strategoxt.imp.metatooling"
          download-size="0"
          install-size="0"
-         version="0.1.0.2505"/>
+         version="0.1.0.2700"
+         unpack="false"/>
 
    <plugin
          id="org.strategoxt.imp.runtime"
          download-size="0"
          install-size="0"
-         version="0.1.0.2505"
+         version="0.1.0.2700"
          unpack="false"/>
 
    <plugin
          id="org.spoofax.aterm"
          download-size="0"
          install-size="0"
-         version="0.2.2.qualifier"/>
+         version="0.2.2.qualifier"
+         unpack="false"/>
 
    <plugin
          id="org.spoofax.compiler"
@@ -107,7 +109,8 @@
          id="lpg.runtime"
          download-size="0"
          install-size="0"
-         version="2.0.16"/>
+         version="2.0.16"
+         unpack="false"/>
 
    <plugin
          id="org.eclipse.imp.smapi"
@@ -134,7 +137,7 @@
          id="org.strategoxt.imp.editors.editorservice"
          download-size="0"
          install-size="0"
-         version="0.1.0.2505"
+         version="0.1.0.2700"
          unpack="false"/>
 
    <plugin
@@ -183,7 +186,27 @@
          id="org.strategoxt.strj"
          download-size="0"
          install-size="0"
-         version="0.1.0"
+         version="0.1.1"
          unpack="false"/>
 
+   <plugin
+         id="org.strategoxt.imp.generator"
+         download-size="0"
+         install-size="0"
+         version="0.1.0.2700"/>
+
+   <plugin
+         id="org.strategoxt.imp.editors.sdf"
+         download-size="0"
+         install-size="0"
+         version="0.1.0.2700"
+         unpack="false"/>
+
+   <plugin
+         id="org.strategoxt.imp.stratego_editor"
+         download-size="0"
+         install-size="0"
+         version="0.1.0.2700"
+         unpack="false"/>
+
 </feature>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF	2009-09-03 15:14:42 UTC (rev 19926)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF	2009-09-03 15:35:51 UTC (rev 19927)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Spoofax/IMP Metatooling
 Bundle-SymbolicName: org.strategoxt.imp.generator;singleton:=true
-Bundle-Version: 0.1.0.2600
+Bundle-Version: 0.1.0.2700
 Bundle-ClassPath: lib/make_permissive.jar,
  lib/sdf2imp.jar
 Require-Bundle: org.spoofax.aterm,

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-03 15:14:42 UTC (rev 19926)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-03 15:35:51 UTC (rev 19927)
@@ -55,7 +55,7 @@
         <target name="sdf2imp-eclipse" depends="sdf2table">
             <!-- HACK: Trigger the Eclipse builder rather than build it here -->
             <!-- (if we did built it here, we'd have to use the -p option to -->
-            <!--  specify the parse table, and put the table in another dir  -->
+            <!--  specify the parse table, and put the table in another dir) -->
             <touch file="include/${esvmodule}.packed.esv"/>
             <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2009-09-03 15:14:42 UTC (rev 19926)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2009-09-03 15:35:51 UTC (rev 19927)
@@ -25,7 +25,7 @@
 <launchConfiguration type=\"org.eclipse.ant.AntLaunchConfigurationType\">
 <stringAttribute key=\"bad_container_name\" value=\".externalToolBuilders\"/>
 <booleanAttribute key=\"org.eclipse.ant.ui.DEFAULT_VM_INSTALL\" value=\"false\"/>
-<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", project-name, "/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", project-name, "/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", project-name, "/aux&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<stringAttribute key=\"org.eclipse.debug.core.ATTR_REFRESH_SCOPE\" value=\"${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", project-name, "/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", project-name, "/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/", project-name, "/aux&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}\"/>
 <listAttribute key=\"org.eclipse.debug.core.MAPPED_RESOURCE_PATHS\">
 <listEntry value=\"/", project-name, "/build.xml\"/>
 </listAttribute>

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF	2009-09-03 15:14:42 UTC (rev 19926)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF	2009-09-03 15:35:51 UTC (rev 19927)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Spoofax/IMP Metatooling
 Bundle-SymbolicName: org.strategoxt.imp.metatooling;singleton:=true
-Bundle-Version: 0.1.0.2600
+Bundle-Version: 0.1.0.2700
 Bundle-ClassPath: org.strategoxt.imp.metatooling/
 Require-Bundle: org.strategoxt.imp.runtime,
  org.strategoxt.imp.generator,
@@ -24,7 +24,9 @@
  org.eclipse.ui,
  org.spoofax.compiler,
  org.eclipse.ui.ide,
- org.strategoxt.strj
+ org.strategoxt.strj,
+ org.strategoxt.imp.editors.editorservice,
+ org.strategoxt.imp.editors.sdf
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Bundle-Activator: org.strategoxt.imp.metatooling.MetatoolingActivator
 Bundle-ActivationPolicy: lazy

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF	2009-09-03 15:14:42 UTC (rev 19926)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF	2009-09-03 15:35:51 UTC (rev 19927)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Spoofax/IMP Runtime
 Bundle-SymbolicName: org.strategoxt.imp.runtime;singleton:=true
-Bundle-Version: 0.1.0.2600
+Bundle-Version: 0.1.0.2700
 Require-Bundle: org.eclipse.imp.runtime,
  org.spoofax.aterm,
  org.spoofax.jsglr,

Modified: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/META-INF/MANIFEST.MF	2009-09-03 15:14:42 UTC (rev 19926)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/META-INF/MANIFEST.MF	2009-09-03 15:35:51 UTC (rev 19927)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Stratego Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.stratego_editor; singleton:=true
-Bundle-Version: 1.0.0
+Bundle-Version: 0.1.0.2700
 Bundle-Activator: org.strategoxt.imp.stratego_editor.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/features/org.strategoxt.imp_0.1.0.2700.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/features/org.strategoxt.imp_0.1.0.2700.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/com.ibm.wala.shrike_1.1.3.200909031718.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/com.ibm.wala.shrike_1.1.3.200909031718.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/lpg.runtime_2.0.16.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg.metatooling_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg.runtime_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.metatooling_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.preferences_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.prefspecs_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.presentation_0.1.1.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.runtime_0.1.88.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.smapi_0.1.86.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.smapifier_0.1.86.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.xform_0.1.87.jar
===================================================================
(Binary files differ)

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.aterm_0.2.2.200909031718.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.aterm_0.2.2.200909031718.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.compiler_0.3.9.200909031718.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.compiler_0.3.9.200909031718.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.adapter.aterm_0.3.11.200909031718.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.adapter.aterm_0.3.11.200909031718.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.core_0.3.13.200909031718.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.core_0.3.13.200909031718.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.library.jsglr_0.3.9.200909031718.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.library.jsglr_0.3.9.200909031718.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter_0.3.11.200909031718.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter_0.3.11.200909031718.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.jsglr_0.2.1.200909031718.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.jsglr_0.2.1.200909031718.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.editorservice_0.1.0.2700.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.editorservice_0.1.0.2700.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.sdf_0.1.0.2700.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.sdf_0.1.0.2700.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.generator_0.1.0.2700.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.generator_0.1.0.2700.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.metatooling_0.1.0.2700.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.metatooling_0.1.0.2700.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.runtime_0.1.0.2700.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.runtime_0.1.0.2700.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.stratego_editor_0.1.0.2700.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.stratego_editor_0.1.0.2700.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.strj_0.1.1.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.strj_0.1.1.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2009-09-03 15:14:42 UTC (rev 19926)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2009-09-03 15:35:51 UTC (rev 19927)
@@ -1,10 +1,13 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <site>
    <description url="http://www.lclnet.nl/update/0.1.x">
-      sdfimp update site
+      Spoofax/IMP update site
    </description>
    <feature url="features/org.strategoxt.imp_0.1.0.2505.jar" id="org.strategoxt.imp" version="0.1.0.2505">
       <category name="Spoofax/IMP"/>
    </feature>
+   <feature url="features/org.strategoxt.imp_0.1.0.2700.jar" id="org.strategoxt.imp" version="0.1.0.2700">
+      <category name="Spoofax/IMP"/>
+   </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP"/>
 </site>



From L.C.L.Kats at tudelft.nl  Fri Sep  4 10:28:48 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 04 Sep 2009 08:28:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19928 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice: .
	.externalToolBuilders
Message-ID: <200909040828.n848S2Tg012911@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-04 08:28:48 +0000 (Fri, 04 Sep 2009)
New Revision: 19928

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19928&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/Ant Builder.xml

Log:
Missing file.

Changes:

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/Ant Builder.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/Ant Builder.xml	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/Ant Builder.xml	2009-09-04 08:28:48 UTC (rev 19928)
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.editorservice/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
+<listEntry value="/org.strategoxt.imp.editors.editorservice/build.xml"/>
+</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
+<listEntry value="1"/>
+</listAttribute>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/org.strategoxt.imp.editors.editorservice/aux/make_permissive.jar&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/org.strategoxt.imp.editors.editorservice/aux/strategoxt.jar&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.editors.editorservice"/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="from-eclipse,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.editorservice/build.xml}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.editors.editorservice}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>



From L.C.L.Kats at tudelft.nl  Fri Sep  4 10:54:35 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 04 Sep 2009 08:54:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19929 - LennartKats -
	in spoofax-imp/trunk: . org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.editorservice/.externalToolBuilders
	org.strategoxt.imp.editors.editorservice/editor
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.stratego_editor
Message-ID: <200909040853.n848rnUI013157@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-04 08:54:35 +0000 (Fri, 04 Sep 2009)
New Revision: 19929

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19929&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/
Removed:
   spoofax-imp/trunk/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/Ant Builder.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile
Modified:
   spoofax-imp/trunk/INSTALL
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.project
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml

Log:
Replaced org.strategoxt.imp.editors.editorservice Makefile with a ant build file.

Changes:

Modified: spoofax-imp/trunk/INSTALL
===================================================================
--- spoofax-imp/trunk/INSTALL	2009-09-04 08:28:48 UTC (rev 19928)
+++ spoofax-imp/trunk/INSTALL	2009-09-04 08:54:35 UTC (rev 19929)
@@ -1,24 +1 @@
-* Install IMP
-  - Preferably from source: http://eclipse-imp.sourceforge.net/developers/
-  - May require Wine:
-    http://eclipse-imp.sourceforge.net/jikespg/index.html#LPG_Troubleshooting
-  - Building it is probably easiest when copying the IMP jars from an existing
-    (Windows) installation
-  - As of this writing, the current version that is known to work
-    is IMP r20408 / v0.1.88
-
-* Patch the WebDSL syntax for jsglr compatibility (known bug):
-  - Change the following line in WebDSL.sdf  (by default in
-    ../../webdsls/trunk/src/org/webdsl/dsl/syntax/WebDSL.sdf):
-       LAYOUT? -/- [\/].[\/] to 
-    to   
-       %% HACK: JSGLR doesn't accept this atm
-       %% LAYOUT? -/- [\/].[\/]
-
-* Build the WebDSL syntax (by default in ../../webdsls/trunk/):
-  $ make syntax
-
-* Launch the plugin Makefiles:
-  $ make
-
-* Continue building the plugins in an IMP-enabled Eclipse instance.
+To install Spoofax/IMP from source, load the plugin into Eclipse and then load all projects into this directory into your workspace.

Deleted: spoofax-imp/trunk/Makefile
===================================================================
--- spoofax-imp/trunk/Makefile	2009-09-04 08:28:48 UTC (rev 19928)
+++ spoofax-imp/trunk/Makefile	2009-09-04 08:54:35 UTC (rev 19929)
@@ -1,13 +0,0 @@
-all :
-	$(MAKE) -C org.strategoxt.imp.generator all
-	$(MAKE) -C org.strategoxt.imp.editors.editorservice all
-
-check : all
-	$(MAKE) -C org.strategoxt.imp.generator check
-
-clean :
-	$(MAKE) -C org.strategoxt.imp.generator clean
-	$(MAKE) -C org.strategoxt.imp.editors.editorservice clean
-
-new-libs :
-	$(MAKE) -C org.strategoxt.imp.generator new-libs

Deleted: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/Ant Builder.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/Ant Builder.xml	2009-09-04 08:28:48 UTC (rev 19928)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/Ant Builder.xml	2009-09-04 08:54:35 UTC (rev 19929)
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
-<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
-<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
-<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.editorservice/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
-<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
-<listEntry value="/org.strategoxt.imp.editors.editorservice/build.xml"/>
-</listAttribute>
-<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
-<listEntry value="1"/>
-</listAttribute>
-<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
-<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
-<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
-<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
-<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
-<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/org.strategoxt.imp.editors.editorservice/aux/make_permissive.jar&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;"/>
-<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/org.strategoxt.imp.editors.editorservice/aux/strategoxt.jar&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;"/>
-</listAttribute>
-<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
-<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
-<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.editors.editorservice"/>
-<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="from-eclipse,"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.editorservice/build.xml}"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.editors.editorservice}"/>
-<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
-</launchConfiguration>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.project
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.project	2009-09-04 08:28:48 UTC (rev 19928)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.project	2009-09-04 08:54:35 UTC (rev 19929)
@@ -1,37 +1,39 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-
+<?xml version="1.0" encoding="UTF-8"?>
 <projectDescription>
-      <name>org.strategoxt.imp.editors.editorservice</name>
-      <comment></comment>
-      <buildSpec>
+	<name>org.strategoxt.imp.editors.editorservice</name>
+	<comment></comment>
+	<projects>
+		<project>org.strategoxt.imp.generator</project>
+	</projects>
+	<buildSpec>
 		<buildCommand>
 			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
 			<triggers>full,incremental,</triggers>
 			<arguments>
 				<dictionary>
 					<key>LaunchConfigHandle</key>
-					<value>&lt;project&gt;/.externalToolBuilders/Ant Builder.launch</value>
+					<value>&lt;project&gt;/.externalToolBuilders/EditorService build.xml.launch</value>
 				</dictionary>
 			</arguments>
 		</buildCommand>
-        <buildCommand>
-          <name>org.eclipse.jdt.core.javabuilder</name>
-          <arguments>
-          </arguments>
-        </buildCommand>
-        <buildCommand>
-          <name>org.eclipse.pde.ManifestBuilder</name>
-          <arguments>
-          </arguments>
-        </buildCommand>
-        <buildCommand>
-          <name>org.eclipse.pde.SchemaBuilder</name>
-          <arguments>
-          </arguments>
-        </buildCommand>
-      </buildSpec>
-      <natures>
-        <nature>org.eclipse.pde.PluginNature</nature>
-        <nature>org.eclipse.jdt.core.javanature</nature>
-      </natures>
-    </projectDescription>
\ No newline at end of file
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

Deleted: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile	2009-09-04 08:28:48 UTC (rev 19928)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/Makefile	2009-09-04 08:54:35 UTC (rev 19929)
@@ -1,25 +0,0 @@
-SYNTAX     = EditorService
-SOURCE     = ../org.strategoxt.imp.generator/src/syntax/$(SYNTAX).def
-PPAF       = ../org.strategoxt.imp.generator/src/syntax/$(SYNTAX)-pretty.pp.af
-
-SDF2IMP    = ../org.strategoxt.imp.generator/sdf2imp
-STRJAR     = `strj-jar -p || echo strategoxt.jar`
-ESVS       = ${wildcard src/*.esv}
-
-all : include/$(SYNTAX).packed.esv include/rtg.tbl include/EditorService-pretty.pp.af
-
-clean :
-	rm -f src/parser/$(SYNTAX)ParseController.java bin/$(SYNTAX).packed.esv
-	rm -rf src/parser/ast
-	# ...
-
-include/$(SYNTAX).packed.esv : $(SYNTAX).def $(SDF2IMP) Makefile $(ESVS)
-	$(SDF2IMP) -i $< -pn org.strategoxt.imp.editors.editorservice -m $(SYNTAX) --verbose 2
-	rm -f build.xml .externalToolBuilders/*.launch # not used for this project
-
-# We need a better solution for this
-include/EditorService-pretty.pp.af : $(PPAF)
-	cp $< $@
-
-include/rtg.tbl : ~/.nix-profile/share/sdf/stratego-regular/rtg.tbl
-	baf2trm -i $< -o $@ # workaround for some BAFReader issue(?)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml	2009-09-04 08:54:35 UTC (rev 19929)
@@ -0,0 +1,219 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="EditorService" default="standalone">
+    
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="syntax" location="syntax"/>
+        <property name="editor" location="editor"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="EditorService"/>
+        <property name="esvmodule" value="EditorService"/>
+        <property name="strmodule" location="editorservice"/>
+        <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
+        
+        <!-- External .def location (optional)
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        -->
+        
+        <!-- Environment configuration -->
+        <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
+        <property name="build.strategoxt.sdf.imports" value=""/>
+        <property name="build.strategoxt.strc.imports" value=""/>
+        
+        <!-- Default target for building within Eclipse -->
+        <target name="from-eclipse" depends="strc,sdf2table,sdf2imp-eclipse"/>
+        
+        <!-- Default target for building outside of Eclipse -->
+        <target name="standalone" depends="strc,sdf2table,sdf2imp-standalone"/>
+        
+        <target name="init">
+            <mkdir dir="${build}"/>
+            <mkdir dir="${dist}"/>
+        </target>
+        
+        <target name="sdf2imp-eclipse" depends="sdf2table">
+            <!-- HACK: Trigger the Eclipse builder rather than build it here -->
+            <!-- (if we did built it here, we'd have to use the -p option to -->
+            <!--  specify the parse table, and put the table in another dir  -->
+            <touch file="include/${esvmodule}.packed.esv"/>
+            <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
+        </target>
+        
+        <target name="sdf2imp-standalone" depends="sdf2table">
+            <echo message="Only building from within Eclipse is implemented at this time"/>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt}/sdf2table" dest="include" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="include/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="include/${sdfmodule}.def"/>
+                <targetfileset file="include/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="include/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.real"/>
+        </target>
+    
+        <target name="make-permissive.real" unless="permissive-grammar.available" depends="aux-files">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/include/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
+            </java>
+        </target>
+
+        <target name="aux-files">
+            <mkdir dir="aux"/>
+            <property name="site" value="http://www.st.ewi.tudelft.nl/~kats/strategoxt/18a"/>
+            <get src="${site}/strategoxt.jar" dest="aux/strategoxt.jar" usetimestamp="true" ignoreerrors="true"/>
+            <get src="${site}/make_permissive.jar" dest="aux/make_permissive.jar" usetimestamp="true" ignoreerrors="true"/>
+        </target>
+    
+        <target name="pack-sdf" depends="init" unless="externaldef">
+            <dependset>
+                <srcfilelist dir="${syntax}" files="**/*.sdf"/>
+                <targetfileset file="${syntax}/${sdfmodule}.def"/>
+            </dependset>
+            <apply executable="${build.strategoxt}/pack-sdf" failonerror="true" dest="include">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-I"/>
+                <arg value="${trans}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${build.strategoxt.sdf.imports}"/>
+                
+                <fileset file="${syntax}/${sdfmodule}.sdf"/>
+                <mapper type="glob" from="*.sdf" to="*.def"/>
+            </apply>
+        </target>
+    
+        <target name="copy-sdf" depends="init" if="externaldef">
+            <copy file="${externaldef}" todir="include"/>
+        </target>
+    
+        <target name="rtg2sig" depends="init,sdf2rtg" if="strmodule.present" unless="external-def">
+            <apply executable="${build.strategoxt}/rtg2sig" dest="${build}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                
+                <fileset file="${syntax}/${sdfmodule}.rtg"/>
+                <mapper type="glob" from="*.rtg" to="*.str"/>
+            </apply>
+        </target>
+        
+        <target name="sdf2rtg" depends="init,pack-sdf" if="strmodule.present" unless="external-def">
+            <apply executable="${build.strategoxt}/sdf2rtg" dest="${build}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <targetfile/>
+                
+                <fileset file="${syntax}/${sdfmodule}.str"/>
+                <mapper type="glob" from="*.def" to="*.rtg"/>
+            </apply>
+        </target>
+    
+        <target name="strc" depends="init,rtg2sig" if="strmodule.present">
+            <antcall target="strc-call">
+                <param name="build.strategoxt.strc.params" value=""/>
+                <param name="build.strategoxt.strc.extension" value="*"/>
+                <param name="strcExecutable" value="strc"/>
+            </antcall>
+        </target>
+    
+        <target name="strj" depends="init,rtg2sig" if="strmodule.present">
+            <antcall target="strc-call">
+                <param name="build.strategoxt.strc.params" value=""/>
+                <param name="build.strategoxt.strc.extension" value="*.java"/>
+                <param name="strcExecutable" value="strj"/>
+            </antcall>
+        </target>
+        
+        <target name="strji" depends="init,rtg2sig" if="strmodule.present">
+            <antcall target="strc-call">
+                <param name="build.strategoxt.strc.params" value="-F --library"/>
+                <param name="build.strategoxt.strc.extension" value="*.ctree"/>
+                <param name="strcExecutable" value="strc"/>
+            </antcall>
+        </target>
+        
+        <target name="strc-call" depends="init,rtg2sig">
+            <dependset>
+                <srcfilelist dir="${trans}" files="**/*.str"/>
+                <srcfilelist dir="${build}" files="**/*.str"/>
+                <targetfileset dir="${dist}" includes="**/*"/>
+            </dependset>
+            <apply executable="${build.strategoxt}/{strcExecutable}" dest="include" failonerror="true">
+                <arg value=".str"/>
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="-S"/> <!-- (Silent mode) -->
+                <arg value="-I"/>
+                <arg value="${trans}"/>
+                <arg value="-I"/>
+                <arg value="${build}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg value="-I"/>
+                <arg value="${user.home}/.nix-profile/share/java-front"/>
+                <arg value="-la"/>
+                <arg value="stratego-lib"/>
+                <arg value="-la"/>
+                <arg value="${user.home}/.nix-profile/lib/libjava-front.la"/>
+                <arg value="-la"/>
+                <arg value="stratego-sglr"/>
+                <arg value="-la"/>
+                <arg value="stratego-gpp"/>
+                <arg value="-la"/>
+                <arg value="stratego-xtc"/>
+                
+                <arg line="${build.strategoxt.strc.params}"/>
+                <arg line="${build.strategoxt.strc.imports}"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="${build.strategoxt.strc.extension}"/>
+            </apply>
+            
+            <!-- Remove any intermediate files -->
+            <delete>
+                <fileset dir="${dist}">
+                    <include name="**/*.c"/>
+                    <include name="**/*.dep"/>
+                    <include name="**/*.lo"/>
+                    <include name="**/*.o"/>
+                </fileset>
+            </delete>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+        </target>
+    </project>
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-04 08:28:48 UTC (rev 19928)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-04 08:54:35 UTC (rev 19929)
@@ -98,6 +98,7 @@
 
         <target name="aux-files">
             <property name="site" value="http://www.st.ewi.tudelft.nl/~kats/strategoxt/18a"/>
+            <mkdir dir="aux"/>
             <get src="${site}/strategoxt.jar" dest="aux/strategoxt.jar" usetimestamp="true" ignoreerrors="true"/>
             <get src="${site}/make_permissive.jar" dest="aux/make_permissive.jar" usetimestamp="true" ignoreerrors="true"/>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml	2009-09-04 08:28:48 UTC (rev 19928)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml	2009-09-04 08:54:35 UTC (rev 19929)
@@ -2,10 +2,6 @@
 
 <project name="Stratego" default="standalone">
     
-        <property name="externaldef" location="syntax/Stratego-Sugar.def"/>
-    
-        <!-- (standard build.xml below this line) -->
-    
         <!-- Project directories -->
         <property name="trans" location="trans"/>
         <property name="syntax" location="syntax"/>



From L.C.L.Kats at tudelft.nl  Fri Sep  4 14:10:07 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 04 Sep 2009 12:10:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19930 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr
	strc-java/trunk/java
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr
	strc-java/trunk/trans
Message-ID: <200909041209.n84C9L9l016296@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-04 12:10:07 +0000 (Fri, 04 Sep 2009)
New Revision: 19930

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19930&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java
   strc-java/trunk/java/spoofax-libs.jar
   strc-java/trunk/trans/strj.str

Log:
Now using inheritance instead of aggregation to extend JSGLR_parse_string_pt and other minor changes.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java	2009-09-04 08:54:35 UTC (rev 19929)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java	2009-09-04 12:10:07 UTC (rev 19930)
@@ -27,11 +27,16 @@
 	
 	private String lastPath;
 
-	protected JSGLR_parse_string_pt(WrappedATermFactory termFactory) {
+	protected JSGLR_parse_string_pt(WrappedATermFactory factory) {
 		super("JSGLR_parse_string_pt", 1, 4);
-		this.factory = termFactory;
+		this.factory = factory;
 	}
 	
+	protected JSGLR_parse_string_pt(WrappedATermFactory factory, String name, int svars, int tvars) {
+		super(name, svars, tvars);
+		this.factory = factory;
+	}
+	
 	public String getLastPath() {
 		return lastPath;
 	}

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-04 08:54:35 UTC (rev 19929)
+++ strc-java/trunk/java/Makefile.am	2009-09-04 12:10:07 UTC (rev 19930)
@@ -87,7 +87,9 @@
 	rm -rf spoofax-libs-tmp
 	mv spoofax-libs.jar.tmp spoofax-libs.jar
 
-.ALLCLASSES : $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(COMPILERJAVAS)
+.ALLCLASSES : bin/org/strategoxt/strj/Main.class
+
+bin/org/strategoxt/strj/Main.class : $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(COMPILERJAVAS)
 	if ! which ecj >/dev/null; \
 	  then echo "WARNING: ecj is not installed; using the (much) slower javac compiler instead" >&2; \
 	fi

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java	2009-09-04 08:54:35 UTC (rev 19929)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java	2009-09-04 12:10:07 UTC (rev 19930)
@@ -2,7 +2,6 @@
 
 import static org.spoofax.interpreter.core.Tools.*;
 
-import java.io.IOException;
 import java.lang.reflect.Field;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java	2009-09-04 08:54:35 UTC (rev 19929)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java	2009-09-04 12:10:07 UTC (rev 19930)
@@ -1,59 +1,38 @@
 package org.strategoxt.lang.compat.sglr;
 
 import org.spoofax.interpreter.adapter.aterm.WrappedATermFactory;
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.core.InterpreterException;
-import org.spoofax.interpreter.library.AbstractPrimitive;
 import org.spoofax.interpreter.library.jsglr.JSGLR_parse_string_pt;
-import org.spoofax.interpreter.stratego.Strategy;
-import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.Disambiguator;
 import org.spoofax.jsglr.ParseTable;
 import org.spoofax.jsglr.SGLR;
-import org.spoofax.jsglr.SGLRException;
+import org.strategoxt.lang.compat.override.jsglr_parser_compat.jsglr_parser_compat;
 
 import aterm.ATermFactory;
 
 /**
+ * Extends the JSGLR_parse_string_pt primitive with support
+ * for filter settings.
+ * 
+ * @see jsglr_parser_compat
+ * 
  * @author Lennart Kats <lennart add lclnet.nl>
  */
-public class JSGLR_parse_string_pt_compat extends AbstractPrimitive {
+public class JSGLR_parse_string_pt_compat extends JSGLR_parse_string_pt {
 	
 	public static final String NAME = "JSGLR_parse_string_pt_compat"; 
 	
 	private final Disambiguator filterSettings;
-	
-	private final JSGLR_parse_string_pt parser;	
-	
-	public SGLRException getLastException() {
-		return parser.getLastException();
-	}
-	
-	public void clearLastException() {
-		parser.clearLastException();
-	}
-	
-	public String getLastPath() {
-		return parser.getLastPath();
-	}
 
-	protected JSGLR_parse_string_pt_compat(WrappedATermFactory termFactory, Disambiguator filterSettings) {
-		super(NAME, 0, 0);
-		
+	protected JSGLR_parse_string_pt_compat(WrappedATermFactory factory, Disambiguator filterSettings) {
+		super(factory, NAME, 0, 0);
 		this.filterSettings = filterSettings;
-		parser = new JSGLR_parse_string_pt(termFactory) {
-			@Override
-			protected SGLR makeSGLR(ATermFactory factory, ParseTable table) {
-				SGLR result = new SGLR(factory, table);
-				result.setDisambiguator(JSGLR_parse_string_pt_compat.this.filterSettings);
-				return result;		
-			}
-		};
 	}
 
 	@Override
-	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) throws InterpreterException {
-		return parser.call(env, svars, tvars);
+	protected SGLR makeSGLR(ATermFactory factory, ParseTable table) {
+		SGLR result = new SGLR(factory, table);
+		result.setDisambiguator(JSGLR_parse_string_pt_compat.this.filterSettings);
+		return result;		
 	}
 
 }

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)

Modified: strc-java/trunk/trans/strj.str
===================================================================
--- strc-java/trunk/trans/strj.str	2009-09-04 08:54:35 UTC (rev 19929)
+++ strc-java/trunk/trans/strj.str	2009-09-04 12:10:07 UTC (rev 19930)
@@ -66,7 +66,8 @@
     end
   
   delete-java-files-in-dir =
-    with(olddir := <getcwd>)
+    log(|Info(), ["Deleting existing java files in output directory ", <id>])
+  ; with(olddir := <getcwd>)
   ; finally(
       chdir
     ; <readdir> "."



From L.C.L.Kats at tudelft.nl  Fri Sep  4 15:01:34 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 04 Sep 2009 13:01:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19931 - LennartKats -
	in spoofax-imp/trunk: . org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.editorservice/.externalToolBuilders
	org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.generator/.externalToolBuilders
	org.strategoxt.imp.metatooling
	org.strategoxt.imp.stratego_editor/editor
	org.strategoxt.imp.stratego_editor/syntax
Message-ID: <200909041300.n84D0m6k016731@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-04 13:01:34 +0000 (Fri, 04 Sep 2009)
New Revision: 19931

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19931&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/EditorService build.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/include/
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def
Modified:
   spoofax-imp/trunk/INSTALL
   spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar.main.esv

Log:
Updated source building instructions and fixes to make things buildable elsewhere again.

Changes:

Modified: spoofax-imp/trunk/INSTALL
===================================================================
--- spoofax-imp/trunk/INSTALL	2009-09-04 12:10:07 UTC (rev 19930)
+++ spoofax-imp/trunk/INSTALL	2009-09-04 13:01:34 UTC (rev 19931)
@@ -1 +1,19 @@
-To install Spoofax/IMP from source, load the plugin into Eclipse and then load all projects into this directory into your workspace.
+Please install Spoofax/IMP from http://strategoxt.org/Stratego/Spoofax-IMP.
+
+To build Spoofax/IMP from source, install the binary plugin and then load the following
+projects into your workspace:
+
+  - All projects in https://svn.strategoxt.org/repos/StrategoXT/spoofax-imp/trunk
+
+  - The STRJ plugin: https://svn.strategoxt.org/repos/StrategoXT/strc-java/trunk
+
+  - The ATerm plugin: https://svn.strategoxt.org/repos/StrategoXT/spoofax/trunk/spoofax/org.spoofax.aterm
+
+  - In some cases, you may also need updated versions of the core Spoofax plugins.
+    These are available from https://svn.strategoxt.org/repos/StrategoXT/spoofax/trunk
+    (Note that you only need the org.spoofax.* projects and should ignore the
+     org.spoofax.interpreter.adapter.asm, org.spoofax.interpreter.adapter.ecj,
+     and all -feature projects.)
+    Alternatively, you can change the dependency order of the org.strategoxt.imp plugins
+    to list org.strategoxt.strj first. This project contains most of the Spoofax plugins in
+    binary form, and may just have the required version of the classes.

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.classpath
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.classpath	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.classpath	2009-09-04 13:01:34 UTC (rev 19931)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/EditorService build.xml.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/EditorService build.xml.launch	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/EditorService build.xml.launch	2009-09-04 13:01:34 UTC (rev 19931)
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.editorservice/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.editorservice/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
+<listEntry value="/org.strategoxt.imp.editors.editorservice/build.xml"/>
+</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
+<listEntry value="1"/>
+</listAttribute>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.editors.editorservice"/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<mapAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_PROPERTIES">
+<mapEntry key="eclipse.running" value="true"/>
+<mapEntry key="externaldef" value="${workspace_loc:/org.strategoxt.imp.generator}/src/syntax/EditorService.def"/>
+<mapEntry key="eclipse.pdebuild.templates" value="/home/lk/opt/eclipse-3.4.2/plugins/org.eclipse.pde.build_3.4.1.R34x_v20081217/templates/"/>
+<mapEntry key="eclipse.home" value="/home/lk/opt/eclipse-3.4.2"/>
+<mapEntry key="eclipse.pdebuild.scripts" value="/home/lk/opt/eclipse-3.4.2/plugins/org.eclipse.pde.build_3.4.1.R34x_v20081217/scripts/"/>
+<mapEntry key="eclipse.pdebuild.home" value="/home/lk/opt/eclipse-3.4.2/plugins/org.eclipse.pde.build_3.4.1.R34x_v20081217/./"/>
+</mapAttribute>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="from-eclipse,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.editorservice/build.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.editors.editorservice}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath	2009-09-04 13:01:34 UTC (rev 19931)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch	2009-09-04 12:10:07 UTC (rev 19930)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/.externalToolBuilders/Makefile for Spoofax-IMP generator.launch	2009-09-04 13:01:34 UTC (rev 19931)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no"?>
 <launchConfiguration type="org.eclipse.ui.externaltools.ProgramBuilderLaunchConfigurationType">
-<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src-gen&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/lib&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src-gen&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
 <booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>
 <booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="true"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_BUILD_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;str in metatooling&quot; name=&quot;str in metatooling&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/syntax&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp.str&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.generator/src/sdf2imp&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/.classpath
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/.classpath	2009-09-04 12:10:07 UTC (rev 19930)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/.classpath	2009-09-04 13:01:34 UTC (rev 19931)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry kind="src" path="src"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="src" path="src"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

Modified: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar.main.esv
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar.main.esv	2009-09-04 12:10:07 UTC (rev 19930)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar.main.esv	2009-09-04 13:01:34 UTC (rev 19931)
@@ -1,6 +1,6 @@
 module Stratego-Sugar.main
 
-imports Stratego-Sugar-Analysis Stratego-Colorer Stratego-Folding Stratego-Occurrences Stratego-Outliner Stratego-References Stratego-Syntax
+imports Stratego-Sugar-Analysis Stratego-Sugar-Colorer Stratego-Sugar-Folding Stratego-Sugar-Occurrences Stratego-Sugar-Outliner Stratego-Sugar-References Stratego-Sugar-Syntax
 
 language General properties
                   

Deleted: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def	2009-09-04 12:10:07 UTC (rev 19930)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def	2009-09-04 13:01:34 UTC (rev 19931)
@@ -1,764 +0,0 @@
-definition
-module Stratego-Sugar-Overlays
-imports
-  Stratego-Core-Identifiers
-  Stratego-Sugar-Terms
-
-exports
-  sorts Overlay
-  context-free syntax
-    Id 			 "=" Term 	-> Overlay {cons("OverlayNoArgs")}
-    Id "(" {Id ","}* ")" "=" Term 	-> Overlay {cons("Overlay")}
-
-module Stratego-Sugar-DynamicRules
-imports
-  Stratego-Core-Identifiers
-  Stratego-Sugar-Strategies
-  Stratego-Sugar-Rules
-
-exports
- 
-  sorts ScopeLabels
-  context-free syntax
-
-    "{|" ScopeLabels ":" Strategy "|}" -> Strategy {cons("DynRuleScope")}
-
-    {DynRuleScopeId ","}*   -> ScopeLabels
-    "~" Term		    -> ScopeLabels {cons("ScopeLabels")}
-
-  sorts DynRuleDef DynRuleId DynRuleScopeId RuleDec
-  context-free syntax
-
-    "rules" "(" DynRuleDef* ")" -> Strategy {cons("GenDynRules")}
-
-    Id "+" Term                 -> DynRuleDef {cons("AddScopeLabel")} 
-    DynRuleId ":-"  Term        -> DynRuleDef {cons("UndefineDynRule")}
-    DynRuleId ":"   Rule        -> DynRuleDef {cons("SetDynRule")}
-    DynRuleId ":+"  Rule        -> DynRuleDef {cons("AddDynRule")}
-    DynRuleId ":"   Term        -> DynRuleDef {cons("SetDynRuleMatch")}
-
-    DynRuleId ":="  Term        -> DynRuleDef {cons("DynRuleAssign")}
-    DynRuleId ":+="  Term       -> DynRuleDef {cons("DynRuleAssignAdd")}
-
-    DynRuleId ":"   Rule "depends" "on" Term -> DynRuleDef {cons("SetDynRuleDepends")}
-
-    RuleDec "." Term            -> DynRuleId {cons("LabeledDynRuleId")}
-    RuleDec "+" Term            -> DynRuleId {cons("AddLabelDynRuleId")}
-    RuleDec                     -> DynRuleId {cons("DynRuleId")}
-
-    Id "." Term                 -> DynRuleScopeId {cons("LabeledDynRuleScopeId")}
-    Id                          -> DynRuleScopeId {cons("DynRuleScopeId")}
-
-  context-free syntax
-
-    Id                          -> RuleDec {cons("RDecNoArgs")}
-    Id "(" {Typedid ","}* ")"   -> RuleDec {cons("RDec")}
-    Id "(" {Typedid ","}* 
-       "|" {Typedid ","}* ")"   -> RuleDec {cons("RDecT")}
-
-  sorts RuleNames
-  context-free syntax
-    {Id ","}*				  -> RuleNames
-    "~" Term				  -> RuleNames {cons("RuleNames")}
-
-    "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
-
-  syntax
-    %% no space after RuleNames
-    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
-      -> <Strategy-CF> {cons("DynRuleUnionFix")}
-
-    %% 1 space after RuleNames
-    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
-      -> <Strategy-CF> {cons("DynRuleUnionFix")}
-
-    %% no space after RuleNames
-    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
-        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
-      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
-
-    %% 1 space after RuleNames
-    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
-        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
-      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
-
-
-  context-free syntax
-    Strategy "/" RuleNames"\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
-    Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
-
-    Strategy "/" RuleNames "\\" 
-                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
-
-  priorities
-    <StrategyAngle-CF> <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("BA")}
-  > {
-
-    %% no space after RuleNames
-    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
-      -> <Strategy-CF> {cons("DynRuleUnionFix")}
-
-    %% 1 space after RuleNames
-    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
-      -> <Strategy-CF> {cons("DynRuleUnionFix")}
-
-    %% no space after RuleNames
-    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
-        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
-      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
-
-    %% 1 space after RuleNames
-    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
-        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
-      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
-
-    }
-  > <Strategy-CF> <LAYOUT?-CF> "=>" <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("AM")}
-
-  context-free priorities
-    StrategyAngle Term 		          -> Strategy {cons("BA")}
-  > "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
-  > Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
-  > Strategy "/" RuleNames "\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
-  > Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
-  > Strategy "/" RuleNames "\\" 
-                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
-  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
-
-module Stratego-Sugar-Rules
-imports Stratego-Sugar-Strategies
-exports
-
-  sorts RuleDef
-  context-free syntax
-    Id ":" Rule 				-> RuleDef {cons("RDefNoArgs")}
-    
-    Anno+ RuleDef               -> Def {cons("AnnoDef")}
-
-    Id "(" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDef")}
-
-    Id "(" {Typedid ","}* 
-       "|" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDefT")}
-
-  sorts Rule RuleCond
-  context-free syntax
-    Term "->" Term           	    -> Rule {cons("RuleNoCond")} %% backward comp.
-    Term "->" Term "where" Strategy -> Rule {cons("Rule")}       %% backward comp.
-    Term "->" Term RuleCond+	    -> Rule {cons("Rule"), avoid}
-
-    "where" Strategy -> RuleCond {cons("WhereClause")}
-    "with"  Strategy -> RuleCond {cons("WithClause")}
-
-module Stratego-Sugar-Strategies
-imports
-  Stratego-Core-Strategies
-  Stratego-Sugar-Terms
-  Stratego-Sugar-Constants
-  Stratego-Sugar-Signatures
-
-exports
-  context-free syntax
-    Id  		      "=" Strategy -> StrategyDef {cons("SDefNoArgs")}
-    Id "(" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDef")}
-
-  context-free syntax
-    ID 				  	  -> Typedid {cons("DefaultVarDec")}
-
-  sorts Rule
-
-  sorts StrategyParen StrategyCurly StrategyAngle
-  context-free syntax
-
-    %% Abstraction
-
-    SVar "(" {Strategy ","}* ")" 	  -> Strategy {cons("Call")}
-
-    %% Match and build
-
-    "{" Strategy "}" 			  -> Strategy {cons("ScopeDefault")}
-
-     %%"<" Strategy ">" Term 		  -> Strategy {cons("BA")}
-     StrategyAngle Term 		  -> Strategy {cons("BA")}
-     "<" Strategy ">"			  -> StrategyAngle {bracket} %% {cons("AngleStrat")}
-
-    %% Combinators
-
-    Strategy "<+" Strategy 		  -> Strategy {cons("LChoice"),right}
-
-    "rec" Id "(" Strategy ")" 		  -> Strategy {cons("Rec")}
-
-    "not"   "(" Strategy ")" 		  -> Strategy {cons("Not")}
-    "where" "(" Strategy ")" 		  -> Strategy {cons("Where")}
-    "with"  "(" Strategy ")" 		  -> Strategy {cons("With"), prefer}
-    "test"  "(" Strategy ")" 		  -> Strategy {cons("Test")}
-
-    %% Primitives
-
-    "prim" "(" String ")" 		  -> Strategy {cons("PrimNoArgs")}
-    "prim" "(" String "," {Term ","}* ")" -> Strategy {cons("Prim")}
-
-    %% Congruence operators
-
-    String 				  -> Strategy {cons("StrCong")}
-    Int 				  -> Strategy {cons("IntCong")}
-    Real 				  -> Strategy {cons("RealCong")}
-    Char 			 	  -> Strategy {cons("CharCong")}
-
-    String "(" {Strategy ","}* ")" 	  -> Strategy {cons("CongQ")}
-
-    %%"(" {Strategy ","}* ")" 		  -> Strategy {cons("TupleCong"),avoid}
-
-    Strategy StrategyCurly		  -> Strategy {cons("AnnoCong")}
-    
-    "{" Strategy "}"		  	  -> StrategyCurly {cons("StrategyCurly")}
-
-    "("  ")" 		  		  -> Strategy {cons("EmptyTupleCong")}
-   "(" Strategy  ")" 		          -> Strategy {bracket}
-    "(" Strategy "," {Strategy ","}+ ")"  -> Strategy {cons("TupleCong")}
-
-%%    Mod 	  			  -> Strategy {cons("ModCongNoArgs")}
-%%    Mod "(" {Strategy ","}* ")"	  	  -> Strategy {cons("ModCong")}
-%%    Id "^" Id				  -> Mod {cons("Mod")}
-    "[" {Strategy ","}* "]" 		  -> Strategy {cons("ListCongNoTail")}
-    "[" {Strategy ","}* "|" Strategy "]"  -> Strategy {cons("ListCong")}
-
-%%    Strategy "#" "(" StrategyInj ")" 	  -> Strategy {cons("ExplodeCong")}
-%%    Strategy "#" "(" Strategy ")" 	  -> Strategy {cons("ExplodeCong")}
-    Strategy "#" StrategyParen	  	  -> Strategy {cons("ExplodeCong")}
-
-  %% Syntactic sugar sugar
-
-  sorts SwitchCase
-  context-free syntax
-
-    SVar  		  		  -> Strategy {cons("CallNoArgs")}
-    "\\" Rule "\\" 			  -> Strategy {cons("LRule")}
-    "(" Rule ")" 			  -> Strategy {cons("SRule")}
-    Strategy "+" Strategy 		  -> Strategy {cons("Choice"),right} 
-    Strategy "+>" Strategy 		  -> Strategy {cons("RChoice"),right}
-
-    "if" Strategy "then" Strategy 
-                  "else" Strategy "end"   -> Strategy {cons("CondChoice")}
-    "if" Strategy "then" Strategy "end"   -> Strategy {cons("IfThen")}
-
-    "switch" Strategy SwitchCase* "end"   -> Strategy {cons("SwitchChoiceNoOtherwise")}
-    "switch" Strategy SwitchCase*
-         "otherwise" ":" Strategy "end"   -> Strategy {cons("SwitchChoice")}
-
-    "case" Strategy ":" Strategy          -> SwitchCase {cons("SwitchCase")}
-
-    Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
-
-    Term ":=" Term			  -> Strategy {cons("Assign")}
-
-  %% Priorities
-
-  context-free priorities
-    { Strategy StrategyCurly		  -> Strategy
-      Strategy "#" StrategyParen          -> Strategy
-    }
-  > { "!" Term 				  -> Strategy
-      "?" Term 				  -> Strategy
-    }
-  > StrategyAngle Term 		          -> Strategy
-  > Strategy "=>" Term 		  	  -> Strategy
-  > Strategy ";" Strategy 		  -> Strategy
-  > {right: 
-     Strategy "+" Strategy 		  -> Strategy
-     Strategy "<+" Strategy 		  -> Strategy
-     Strategy "+>" Strategy 		  -> Strategy
-     
-     Strategy "<" StrategyMid 
-              "+" Strategy 		  -> Strategy
-    }
-
-  context-free priorities
-    Strategy 				  -> StrategyMid
-  > Strategy "+" Strategy 		  -> Strategy
-
-  context-free priorities
-    { Strategy StrategyCurly      -> Strategy
-      Strategy "#" StrategyParen  -> Strategy
-    }
-    .> Term ":=" Term -> Strategy
-
-
-module Stratego-Sugar-Terms
-imports
-  Stratego-Core-Terms
-  Stratego-Sugar-Strategies
-
-exports
-  sorts LID
-  context-free syntax
-    LId 			-> LID  {cons("ListVar")}
-    LID				-> Var  {cons("Var")}
-    LID				-> ID
-
-  context-free syntax
-    "_" PreTerm 		 -> PreTerm {cons("BuildDefaultPT")}
-    "_" Term 			 -> Term {cons("BuildDefault"),prefer}
-
-    Char 			 -> PreTerm {cons("Char")}
-
-    PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
-    PreTerm                      -> Term {cons("NoAnnoList")}
-
-    "<" Strategy ">" Term 	 -> PreTerm {cons("App")}
-    "<" Strategy ">" Term 	 -> Term {cons("App"),prefer}
-
-    StrategyAngle		 -> PreTerm {cons("RootApp")}
-    StrategyAngle		 -> Term {cons("RootApp"),prefer}
-
-    "(" {Term ","}* ")" 	 -> PreTerm {cons("Tuple")}
-    "[" {Term ","}* "]" 	 -> PreTerm {cons("List")}
-    "[" {Term ","}* "|" Term "]" -> PreTerm {cons("ListTail")}
-
-  context-free priorities
-    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
-  > PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
-  > Var "@" Term 		 -> Term {cons("As")}
-
-module Stratego-Sugar-Signatures
-imports
-  Stratego-Core-Signatures
-  Stratego-Sugar-Constants
-
-exports
-
-  sorts Sort
-  context-free syntax
-    "[" {Sort ","}* "]"		 -> Sort {cons("SortList")}
-    "[" {Sort ","}* "|" Sort "]" -> Sort {cons("SortListTl")}
-    "(" {Sort ","}* ")"		 -> Sort {cons("SortTuple")}
-
-  sorts Kind
-  context-free syntax
-    "*" 			-> Kind {cons("Star")}
-    "**" 			-> Kind {cons("StarStar")}
-
-module Stratego-Core-Signatures
-imports
-  Stratego-Core-Identifiers
-  Stratego-Core-Constants
-exports
-  sorts Sdecl
-  context-free syntax
-    "sorts" Sort* 		-> Sdecl {cons("Sorts")}
-    "constructors" Opdecl* 	-> Sdecl {cons("Constructors")}
-
-  sorts Sort
-  context-free syntax
-    LCID 			 -> Sort {cons("SortVar")}
-    UCID 			 -> Sort {cons("SortNoArgs")}
-    Id "(" {Sort ","}* ")" 	 -> Sort {cons("Sort")}
-
-  sorts Opdecl
-  context-free syntax
-    Id     ":" Type 		-> Opdecl {cons("OpDecl")}
-    String ":" Type 		-> Opdecl {cons("OpDeclQ")}
-           ":" Type 		-> Opdecl {cons("OpDeclInj")}
-
-  context-free syntax
-    "external" Id     ":" Type 	-> Opdecl {cons("ExtOpDecl")}
-    "external" String ":" Type 	-> Opdecl {cons("ExtOpDeclQ")}
-    "external"        ":" Type 	-> Opdecl {cons("ExtOpDeclInj")}
-
-  sorts Type ArgType ConstType FunType RetType
-  context-free syntax
-    Sort	                -> ConstType {cons("ConstType")}
-    {ArgType "*"}+ "->" RetType -> FunType {cons("FunType")}
-    "(" Type ")"                -> ArgType {bracket}
-    ConstType			-> ArgType
-    Type	                -> RetType
-    FunType			-> RetType {reject}
-
-    FunType			-> Type
-    ConstType			-> Type
-
-  %%%
-   %% Restriction is required for the Sort* in Sdecl: List(a) is
-   %% ambiguous.
-   %%%
-  context-free restrictions
-    Sort -/- [\(]
-
-module Stratego-Core-Terms
-imports
-  Stratego-Core-Identifiers
-  Stratego-Core-Constants
-
-exports
-  sorts ID Var Wld
-  context-free syntax
-    Id 				-> Var  {cons("Var")}
-    Id				-> ID
-    %% ":" Var                  -> Var  {cons("SeqVar")}
-
-  sorts Term PreTerm
-  context-free syntax
-    Var 			 -> PreTerm 
-    Var 			 -> Term {prefer}
-
-    "_" 			 -> Wld {cons("Wld")}
-    Wld 			 -> PreTerm
-    Wld 			 -> Term {prefer}
-
-    Int 			 -> PreTerm {cons("Int")}
-    Real 			 -> PreTerm {cons("Real")}
-    String 			 -> PreTerm {cons("Str")}
-
-    Id "(" {Term ","}* ")" 	 -> PreTerm {cons("Op")}
-    String "(" {Term ","}* ")" 	 -> PreTerm {cons("OpQ")}
-    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
-
-    PreTerm "{^" PreTerm "}"	 -> Term {cons("Anno")}
-
-    Var "@" Term 		 -> Term {cons("As"),prefer}
-    Var "@" PreTerm 		 -> PreTerm {cons("As")}
-
-  context-free priorities
-    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
-  > Var "@" Term 		 -> Term {cons("As")}
-
-module Stratego-Core-Strategies
-imports
-  Stratego-Core-Terms
-  Stratego-Core-Constants
-  Stratego-Core-Signatures
-
-exports
-  sorts Def
-  context-free syntax
-    StrategyDef					 -> Def 
-    Id						 -> SVar {cons("SVar")}
-    "let" Def* "in" Strategy "end"		 -> Strategy {cons("Let")}
-    SVar "(" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallT")}
-
-    "call" "(" Term "|" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallDynamic")}
-
-
-  sorts StrategyDef
-  context-free syntax
-    Id "(" {Typedid ","}* 
-       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDefT")}
-
-    Anno+ StrategyDef -> Def {cons("AnnoDef")}
-
-    "external"
-    Id "(" {Typedid ","}* 
-       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("ExtSDefInl")}
-
-    "external"
-    Id "(" {Typedid ","}* 
-       "|" {Typedid ","}* ")"		   -> StrategyDef {cons("ExtSDef")}
-
-
-  sorts Anno
-  context-free syntax
-    "extend"      -> Anno {cons("Extend")}
-    "override"    -> Anno {cons("Override")}
-    "internal"    -> Anno {cons("Internal")}
-%%  "sealed"      -> Anno {cons("Sealed")}
-%%  "extensible"  -> Anno {cons("Extensible")}
-%%  "overridable" -> Anno {cons("Overridable")}
-
-  lexical syntax
-    
-    "extend"      -> Keyword
-    "override"    -> Keyword
-    "internal"    -> Keyword
-    "sealed"      -> Keyword
-    "extensible"  -> Keyword
-    "overridable" -> Keyword
-
-  lexical restrictions
-  
-    "extend"
-    "override"
-    "internal"
-    "sealed"
-    "extensible"
-    "overridable" -/- [a-zA-Z0-9\'\-\_]
-
-  sorts Typedid
-  context-free syntax
-    ID ":" Type 			  -> Typedid {cons("VarDec")}
-
-
-  sorts Strategy SVar StrategyParen StrategyMid 
-  context-free syntax
-    "(" Strategy ")"			  -> StrategyParen {cons("ParenStrat")}
-
-    "fail" 				  -> Strategy {cons("Fail")}
-    "id" 				  -> Strategy {cons("Id")}
-    "override" 			  -> Strategy {cons("Override")}
-
-    %% Match and build
-
-    "?" Term 				  -> Strategy {cons("Match")}
-    "!" Term 				  -> Strategy {cons("Build")}
-    "{" {ID ","}* ":" Strategy "}" 	  -> Strategy {cons("Scope")}
-
-    %% Combinators
-
-    Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
-    Strategy "<" StrategyMid 
-             "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
-    Strategy 				  -> StrategyMid
-
-    %% Primitives
-
-    "prim" "(" String "," {Strategy ","}* "|" {Term ","}*")"  -> Strategy {cons("PrimT")}
-
-    %% Traversal
-
-    "some" "(" Strategy ")" 		  -> Strategy {cons("Some")}
-    "one" "(" Strategy ")" 		  -> Strategy {cons("One")}
-    "all" "(" Strategy ")" 		  -> Strategy {cons("All")}
-
-  %% Priorities
-
-  context-free priorities
-    { "!" Term 				  -> Strategy {cons("Build")}
-      "?" Term 				  -> Strategy {cons("Match")}
-    }
-  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
-  > {right: 
-     Strategy "<" StrategyMid 
-              "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
-    }
-
-  context-free syntax
-    "import-term" "(" ModName ")" -> Strategy {cons("ImportTerm")}
-
-module Stratego-Core-Modules
-imports
-  Stratego-Core-Identifiers
-  Stratego-Core-Strategies
-  Stratego-Core-Signatures
-
-exports 
-  sorts Module
-  context-free syntax
-    "module" ModName Decl* 	 -> Module {cons("Module")}
-    "specification" Decl*	 -> Module {cons("Specification")}
-
-  sorts Decl 
-  context-free syntax
-    "imports" ImportModName* 	-> Decl {cons("Imports")}
-    "strategies" Def* 		-> Decl {cons("Strategies")}
-    "signature" Sdecl*  	-> Decl {cons("Signature")}
-
-  sorts ImportModName
-  context-free syntax
-    ModName              -> ImportModName {cons("Import")}
-  syntax
-    <ModName-CF> "/" "-" -> <ImportModName-CF> {cons("ImportWildcard")}
-
-module Stratego-Sugar-Modules
-imports
-  Stratego-Core-Modules
-  Stratego-Sugar-Strategies
-  Stratego-Sugar-Signatures
-  Stratego-Sugar-Overlays
-  Stratego-Sugar-Rules
-
-exports 
-
-  sorts Decl Def
-  context-free syntax
-    "rules" Def* 		-> Decl {cons("Rules")}
-    "overlays" Overlay* 	-> Decl {cons("Overlays")}
-
-    RuleDef 			-> Def 
-
-
-module Stratego-Core-Constants
-exports
-  sorts Int Real String StrChar
-  lexical syntax
-    [\-]? [0-9]+ 		-> Int
-    [\-]? [0-9]+ [\.] [0-9]+ 	-> Real
-    "\"" StrChar* "\"" 		-> String
-    ~[\"\\] 			-> StrChar
-    [\\] [\"tnr\\] 		-> StrChar
-
-
-module Stratego-Sugar-Constants
-imports Stratego-Core-Identifiers Stratego-Core-Constants
-exports
-  sorts Char CharChar
-  lexical syntax
-    "'" CharChar "'"		-> Char
-    ~[\']			-> CharChar
-    [\\] [\'ntr\ ]		-> CharChar
-    Char		 	-> Id {reject}
-
-module Stratego-Core-Identifiers
-exports
-  sorts ModName ModNamePart
-  lexical syntax
-    {ModNamePart "/"}+ -> ModName
-    [a-zA-Z\.\_] [a-zA-Z0-9\'\.\-\_]* -> ModNamePart
-  lexical restrictions
-    ModName -/- [a-zA-Z0-9\'\.\-\_]
-  lexical syntax
-    "imports" 		-> ModName {reject}
-    "overlays" 		-> ModName {reject}
-    "rules" 		-> ModName {reject}
-    "signature" 	-> ModName {reject}
-    "strategies" 	-> ModName {reject}
-
-  sorts Id LId LCID UCID Wld
-  lexical syntax
-    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]*     -> Id
-    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]* "*" -> LId
-    [\'] [a-z]+                       -> Id
-
-    [a-z] [a-zA-Z0-9\'\-\_]*  -> LCID
-    [A-Z] [a-zA-Z0-9\'\-\_]*  -> UCID
-
-  lexical restrictions
-    Id   -/- [a-zA-Z0-9\'\-\_\*]
-    LId  -/- [a-zA-Z0-9\'\-\_]
-    LCID -/- [a-zA-Z0-9\'\-\_]
-    UCID -/- [a-zA-Z0-9\'\-\_]
-
-  lexical syntax
-    "_"     -> Id {reject}
-    "'"     -> Id {reject}
-
-    Keyword -> Id   {reject}
-    Keyword -> LId  {reject}
-    Keyword -> LCID {reject}
-    Keyword -> UCID {reject}
-
-  lexical restrictions
-    "all"
-    "case" %% not reserved kw
-    "constructors"
-    "else" %% not reserved kw
-    "end" %% not reserved kw
-    "external" %% not reserved kw
-    "fail"
-    "id"
-    "if" %% not reserved kw
-    "in"
-    "imports" %% not reserved kw
-    "let"
-    "module"
-    "not"
-    "one"
-    "overlays"
-    "otherwise" %% not reserved kw
-    "prim"
-    "rec" %% not reserved kw
-    "rules"
-    "script"
-    "signature"
-    "some"
-    "sorts"
-    "strategies"
-    "stratego"
-    "switch" %% not reserved kw
-    "test"
-    "then" %% not reserved kw
-    "where"
-    "import-term"
-      -/- [a-zA-Z0-9\'\-\_]
-  
-  context-free restrictions
-    Wld -/- [a-zA-Z0-9\'\-\_]
-
-  sorts Keyword
-  lexical syntax
-    "all"               -> Keyword
-    "constructors" 	-> Keyword
-    "fail" 		-> Keyword
-    "id" 		-> Keyword
-    "in" 		-> Keyword
-    "let" 		-> Keyword
-    "module" 		-> Keyword
-    "not" 		-> Keyword
-    "one" 		-> Keyword
-    "overlays" 		-> Keyword
-    "prim" 		-> Keyword
-    "rules" 		-> Keyword
-    "script" 		-> Keyword
-    "signature" 	-> Keyword
-    "some" 		-> Keyword
-    "sorts" 		-> Keyword
-    "strategies" 	-> Keyword
-    "stratego" 		-> Keyword
-    "test" 		-> Keyword
-    "where" 		-> Keyword
-    "import-term"	-> Keyword
-
-
-module Stratego-Core-Layout
-exports
-  sorts Ws ShortCom LongCom CommChar Asterisk Eof 
-  lexical syntax
-    [\t\ \n\r]			-> Ws
-
-    "//" ~[\n]* ([\n] | Eof)	-> ShortCom
-    "/*" CommChar* "*/"	-> LongCom
-				-> Eof  
-
-    ~[\*]     -> CommChar
-
-    "*"       -> Asterisk
-    Asterisk  -> CommChar
-
-  lexical restrictions
-    Asterisk -/- [\/]
-    Eof      -/- ~[]
-
-  lexical syntax
-    ShortCom 	-> LAYOUT
-    LongCom 	-> LAYOUT
-    Ws 		-> LAYOUT
-
-  context-free restrictions
-    LAYOUT? -/- [\ \t\n\r]
-    LAYOUT? -/- [\/].[\*]
-    LAYOUT? -/- [\/].[\/]
-
-module Stratego-Sugar-Layout
-imports Stratego-Core-Layout
-%%exports
-%%  sorts VeryLongCom Eof VLCchar Backslash
-%%  lexical syntax
-%%    "\\end{code}" VLCchar* "\\begin{code}" -> VeryLongCom
-%%    "\\begin{code}" 			   -> VeryLongCom
-%%    "\\end{code}" VLCchar* Eof 		   -> VeryLongCom
-%%    "\\literate" VLCchar* "\\begin{code}"  -> VeryLongCom
-%%    ~[\\] 				   -> VLCchar
-%%    Backslash 				   -> VLCchar
-%%    [\\] 				   -> Backslash
-
-%%  lexical restrictions
-%%    Backslash -/- [b].[e].[g].[i].[n].[\{].[c].[o].[d].[e].[\}]
-%%    Eof -/- ~[]
-
-%%  lexical syntax
-%%    VeryLongCom -> LAYOUT
-
-
-
-module Stratego-Sugar
-imports
-  Stratego-Sugar-Layout
-  Stratego-Core-Identifiers
-  Stratego-Sugar-Constants 
-  Stratego-Sugar-Modules
-  Stratego-Sugar-Signatures
-  Stratego-Sugar-Terms
-  Stratego-Sugar-Strategies
-  Stratego-Sugar-Rules
-  Stratego-Sugar-DynamicRules
-  Stratego-Sugar-Overlays
-
-hiddens
-  context-free start-symbols Module
\ No newline at end of file



From L.C.L.Kats at tudelft.nl  Fri Sep  4 16:13:49 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 04 Sep 2009 14:13:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19932 - LennartKats -
	in spoofax-imp/trunk: .
	org.strategoxt.imp.editors.editorservice/editor/java
	org.strategoxt.imp.editors.editorservice/editor/java/org
	org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt
	org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp
	org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors
	org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice
	org.strategoxt.imp.stratego_editor/editor/java
	org.strategoxt.imp.stratego_editor/editor/java/org
	org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt
	org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp
	org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor
	org.strategoxt.imp.stratego_editor/syntax
Message-ID: <200909041413.n84EDnfk017964@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-04 14:13:48 +0000 (Fri, 04 Sep 2009)
New Revision: 19932

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19932&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/Activator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/Activator.java
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/StrategoParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def
Modified:
   spoofax-imp/trunk/INSTALL

Log:
Further revised the INSTALL instructions and process; added a couple of generated files to the repository to help smoothen the process.

Changes (first 1000 lines of the diffs):

Modified: spoofax-imp/trunk/INSTALL
===================================================================
--- spoofax-imp/trunk/INSTALL	2009-09-04 13:01:34 UTC (rev 19931)
+++ spoofax-imp/trunk/INSTALL	2009-09-04 14:13:48 UTC (rev 19932)
@@ -1,5 +1,9 @@
+STANDARD INSTALLATION
+
 Please install Spoofax/IMP from http://strategoxt.org/Stratego/Spoofax-IMP.
 
+BUILDING FROM SOURCE
+
 To build Spoofax/IMP from source, install the binary plugin and then load the following
 projects into your workspace:
 
@@ -9,11 +13,19 @@
 
   - The ATerm plugin: https://svn.strategoxt.org/repos/StrategoXT/spoofax/trunk/spoofax/org.spoofax.aterm
 
-  - In some cases, you may also need updated versions of the core Spoofax plugins.
-    These are available from https://svn.strategoxt.org/repos/StrategoXT/spoofax/trunk
-    (Note that you only need the org.spoofax.* projects and should ignore the
-     org.spoofax.interpreter.adapter.asm, org.spoofax.interpreter.adapter.ecj,
-     and all -feature projects.)
-    Alternatively, you can change the dependency order of the org.strategoxt.imp plugins
-    to list org.strategoxt.strj first. This project contains most of the Spoofax plugins in
-    binary form, and may just have the required version of the classes.
+After loading these projects into the workspace, some may require you
+to issue a manual 'Project > Build Project' or 'Project Build All'  command.
+(At the time of writing this is required for the org.strategoxt.imp.generator
+project.)
+
+Since Spoofax/IMP relies on the STRJ project, you may need to add the 
+strj and strj-jar executables on your path.
+
+In some cases, you may need updated versions of the core Spoofax plugins.
+These are available from https://svn.strategoxt.org/repos/StrategoXT/spoofax/trunk
+(Note that you only need the org.spoofax.* projects and should ignore the
+org.spoofax.interpreter.adapter.asm, org.spoofax.interpreter.adapter.ecj,
+and all -feature projects.)
+Alternatively, you can change the dependency order of the org.strategoxt.imp plugins
+to list org.strategoxt.strj first. This project contains most of the Spoofax plugins in
+binary form, and may just have the required version of the classes.

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/Activator.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/Activator.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/Activator.java	2009-09-04 14:13:48 UTC (rev 19932)
@@ -0,0 +1,50 @@
+package org.strategoxt.imp.editors.editorservice;
+
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "EditorService";
+
+  public static final String kLanguageName = "EditorService";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  protected static PreferencesService preferencesService = null;
+
+  public static PreferencesService getPreferencesService()
+  { 
+    if(preferencesService == null)
+    { 
+      preferencesService = new PreferencesService(ResourcesPlugin.getWorkspace().getRoot().getProject());
+      preferencesService.setLanguageName(kLanguageName);
+    }
+    return preferencesService;
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceParseController.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceParseController.java	2009-09-04 14:13:48 UTC (rev 19932)
@@ -0,0 +1,84 @@
+package org.strategoxt.imp.editors.editorservice;
+
+import java.io.InputStream;
+import java.io.IOException;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class EditorServiceParseController extends DynamicParseController 
+{ 
+  private static final String LANGUAGE = "EditorService";
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  private static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = EditorServiceParseController.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = EditorServiceParseController.class.getResourceAsStream(TABLE);
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin)");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin)");
+      descriptor = DescriptorFactory.load(descriptorStream, table, null);
+      descriptor.setAttachmentProvider(EditorServiceParseController.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/Activator.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/Activator.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/Activator.java	2009-09-04 14:13:48 UTC (rev 19932)
@@ -0,0 +1,50 @@
+package org.strategoxt.imp.stratego_editor;
+
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "Stratego";
+
+  public static final String kLanguageName = "Stratego";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  protected static PreferencesService preferencesService = null;
+
+  public static PreferencesService getPreferencesService()
+  { 
+    if(preferencesService == null)
+    { 
+      preferencesService = new PreferencesService(ResourcesPlugin.getWorkspace().getRoot().getProject());
+      preferencesService.setLanguageName(kLanguageName);
+    }
+    return preferencesService;
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/StrategoParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/StrategoParseController.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/StrategoParseController.java	2009-09-04 14:13:48 UTC (rev 19932)
@@ -0,0 +1,84 @@
+package org.strategoxt.imp.stratego_editor;
+
+import java.io.InputStream;
+import java.io.IOException;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class StrategoParseController extends DynamicParseController 
+{ 
+  private static final String LANGUAGE = "Stratego";
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  private static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = StrategoParseController.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = StrategoParseController.class.getResourceAsStream(TABLE);
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin)");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin)");
+      descriptor = DescriptorFactory.load(descriptorStream, table, null);
+      descriptor.setAttachmentProvider(StrategoParseController.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Copied: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def (from rev 19926, spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/syntax/Stratego-Sugar.def	2009-09-04 14:13:48 UTC (rev 19932)
@@ -0,0 +1,764 @@
+definition
+module Stratego-Sugar-Overlays
+imports
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Terms
+
+exports
+  sorts Overlay
+  context-free syntax
+    Id 			 "=" Term 	-> Overlay {cons("OverlayNoArgs")}
+    Id "(" {Id ","}* ")" "=" Term 	-> Overlay {cons("Overlay")}
+
+module Stratego-Sugar-DynamicRules
+imports
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Rules
+
+exports
+ 
+  sorts ScopeLabels
+  context-free syntax
+
+    "{|" ScopeLabels ":" Strategy "|}" -> Strategy {cons("DynRuleScope")}
+
+    {DynRuleScopeId ","}*   -> ScopeLabels
+    "~" Term		    -> ScopeLabels {cons("ScopeLabels")}
+
+  sorts DynRuleDef DynRuleId DynRuleScopeId RuleDec
+  context-free syntax
+
+    "rules" "(" DynRuleDef* ")" -> Strategy {cons("GenDynRules")}
+
+    Id "+" Term                 -> DynRuleDef {cons("AddScopeLabel")} 
+    DynRuleId ":-"  Term        -> DynRuleDef {cons("UndefineDynRule")}
+    DynRuleId ":"   Rule        -> DynRuleDef {cons("SetDynRule")}
+    DynRuleId ":+"  Rule        -> DynRuleDef {cons("AddDynRule")}
+    DynRuleId ":"   Term        -> DynRuleDef {cons("SetDynRuleMatch")}
+
+    DynRuleId ":="  Term        -> DynRuleDef {cons("DynRuleAssign")}
+    DynRuleId ":+="  Term       -> DynRuleDef {cons("DynRuleAssignAdd")}
+
+    DynRuleId ":"   Rule "depends" "on" Term -> DynRuleDef {cons("SetDynRuleDepends")}
+
+    RuleDec "." Term            -> DynRuleId {cons("LabeledDynRuleId")}
+    RuleDec "+" Term            -> DynRuleId {cons("AddLabelDynRuleId")}
+    RuleDec                     -> DynRuleId {cons("DynRuleId")}
+
+    Id "." Term                 -> DynRuleScopeId {cons("LabeledDynRuleScopeId")}
+    Id                          -> DynRuleScopeId {cons("DynRuleScopeId")}
+
+  context-free syntax
+
+    Id                          -> RuleDec {cons("RDecNoArgs")}
+    Id "(" {Typedid ","}* ")"   -> RuleDec {cons("RDec")}
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"   -> RuleDec {cons("RDecT")}
+
+  sorts RuleNames
+  context-free syntax
+    {Id ","}*				  -> RuleNames
+    "~" Term				  -> RuleNames {cons("RuleNames")}
+
+    "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
+
+  syntax
+    %% no space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% 1 space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% no space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    %% 1 space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+
+  context-free syntax
+    Strategy "/" RuleNames"\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
+    Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
+
+    Strategy "/" RuleNames "\\" 
+                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
+
+  priorities
+    <StrategyAngle-CF> <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("BA")}
+  > {
+
+    %% no space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% 1 space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% no space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    %% 1 space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    }
+  > <Strategy-CF> <LAYOUT?-CF> "=>" <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("AM")}
+
+  context-free priorities
+    StrategyAngle Term 		          -> Strategy {cons("BA")}
+  > "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
+  > Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
+  > Strategy "/" RuleNames "\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
+  > Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
+  > Strategy "/" RuleNames "\\" 
+                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
+  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+
+module Stratego-Sugar-Rules
+imports Stratego-Sugar-Strategies
+exports
+
+  sorts RuleDef
+  context-free syntax
+    Id ":" Rule 				-> RuleDef {cons("RDefNoArgs")}
+    
+    Anno+ RuleDef               -> Def {cons("AnnoDef")}
+
+    Id "(" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDef")}
+
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDefT")}
+
+  sorts Rule RuleCond
+  context-free syntax
+    Term "->" Term           	    -> Rule {cons("RuleNoCond")} %% backward comp.
+    Term "->" Term "where" Strategy -> Rule {cons("Rule")}       %% backward comp.
+    Term "->" Term RuleCond+	    -> Rule {cons("Rule"), avoid}
+
+    "where" Strategy -> RuleCond {cons("WhereClause")}
+    "with"  Strategy -> RuleCond {cons("WithClause")}
+
+module Stratego-Sugar-Strategies
+imports
+  Stratego-Core-Strategies
+  Stratego-Sugar-Terms
+  Stratego-Sugar-Constants
+  Stratego-Sugar-Signatures
+
+exports
+  context-free syntax
+    Id  		      "=" Strategy -> StrategyDef {cons("SDefNoArgs")}
+    Id "(" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDef")}
+
+  context-free syntax
+    ID 				  	  -> Typedid {cons("DefaultVarDec")}
+
+  sorts Rule
+
+  sorts StrategyParen StrategyCurly StrategyAngle
+  context-free syntax
+
+    %% Abstraction
+
+    SVar "(" {Strategy ","}* ")" 	  -> Strategy {cons("Call")}
+
+    %% Match and build
+
+    "{" Strategy "}" 			  -> Strategy {cons("ScopeDefault")}
+
+     %%"<" Strategy ">" Term 		  -> Strategy {cons("BA")}
+     StrategyAngle Term 		  -> Strategy {cons("BA")}
+     "<" Strategy ">"			  -> StrategyAngle {bracket} %% {cons("AngleStrat")}
+
+    %% Combinators
+
+    Strategy "<+" Strategy 		  -> Strategy {cons("LChoice"),right}
+
+    "rec" Id "(" Strategy ")" 		  -> Strategy {cons("Rec")}
+
+    "not"   "(" Strategy ")" 		  -> Strategy {cons("Not")}
+    "where" "(" Strategy ")" 		  -> Strategy {cons("Where")}
+    "with"  "(" Strategy ")" 		  -> Strategy {cons("With"), prefer}
+    "test"  "(" Strategy ")" 		  -> Strategy {cons("Test")}
+
+    %% Primitives
+
+    "prim" "(" String ")" 		  -> Strategy {cons("PrimNoArgs")}
+    "prim" "(" String "," {Term ","}* ")" -> Strategy {cons("Prim")}
+
+    %% Congruence operators
+
+    String 				  -> Strategy {cons("StrCong")}
+    Int 				  -> Strategy {cons("IntCong")}
+    Real 				  -> Strategy {cons("RealCong")}
+    Char 			 	  -> Strategy {cons("CharCong")}
+
+    String "(" {Strategy ","}* ")" 	  -> Strategy {cons("CongQ")}
+
+    %%"(" {Strategy ","}* ")" 		  -> Strategy {cons("TupleCong"),avoid}
+
+    Strategy StrategyCurly		  -> Strategy {cons("AnnoCong")}
+    
+    "{" Strategy "}"		  	  -> StrategyCurly {cons("StrategyCurly")}
+
+    "("  ")" 		  		  -> Strategy {cons("EmptyTupleCong")}
+   "(" Strategy  ")" 		          -> Strategy {bracket}
+    "(" Strategy "," {Strategy ","}+ ")"  -> Strategy {cons("TupleCong")}
+
+%%    Mod 	  			  -> Strategy {cons("ModCongNoArgs")}
+%%    Mod "(" {Strategy ","}* ")"	  	  -> Strategy {cons("ModCong")}
+%%    Id "^" Id				  -> Mod {cons("Mod")}
+    "[" {Strategy ","}* "]" 		  -> Strategy {cons("ListCongNoTail")}
+    "[" {Strategy ","}* "|" Strategy "]"  -> Strategy {cons("ListCong")}
+
+%%    Strategy "#" "(" StrategyInj ")" 	  -> Strategy {cons("ExplodeCong")}
+%%    Strategy "#" "(" Strategy ")" 	  -> Strategy {cons("ExplodeCong")}
+    Strategy "#" StrategyParen	  	  -> Strategy {cons("ExplodeCong")}
+
+  %% Syntactic sugar sugar
+
+  sorts SwitchCase
+  context-free syntax
+
+    SVar  		  		  -> Strategy {cons("CallNoArgs")}
+    "\\" Rule "\\" 			  -> Strategy {cons("LRule")}
+    "(" Rule ")" 			  -> Strategy {cons("SRule")}
+    Strategy "+" Strategy 		  -> Strategy {cons("Choice"),right} 
+    Strategy "+>" Strategy 		  -> Strategy {cons("RChoice"),right}
+
+    "if" Strategy "then" Strategy 
+                  "else" Strategy "end"   -> Strategy {cons("CondChoice")}
+    "if" Strategy "then" Strategy "end"   -> Strategy {cons("IfThen")}
+
+    "switch" Strategy SwitchCase* "end"   -> Strategy {cons("SwitchChoiceNoOtherwise")}
+    "switch" Strategy SwitchCase*
+         "otherwise" ":" Strategy "end"   -> Strategy {cons("SwitchChoice")}
+
+    "case" Strategy ":" Strategy          -> SwitchCase {cons("SwitchCase")}
+
+    Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
+
+    Term ":=" Term			  -> Strategy {cons("Assign")}
+
+  %% Priorities
+
+  context-free priorities
+    { Strategy StrategyCurly		  -> Strategy
+      Strategy "#" StrategyParen          -> Strategy
+    }
+  > { "!" Term 				  -> Strategy
+      "?" Term 				  -> Strategy
+    }
+  > StrategyAngle Term 		          -> Strategy
+  > Strategy "=>" Term 		  	  -> Strategy
+  > Strategy ";" Strategy 		  -> Strategy
+  > {right: 
+     Strategy "+" Strategy 		  -> Strategy
+     Strategy "<+" Strategy 		  -> Strategy
+     Strategy "+>" Strategy 		  -> Strategy
+     
+     Strategy "<" StrategyMid 
+              "+" Strategy 		  -> Strategy
+    }
+
+  context-free priorities
+    Strategy 				  -> StrategyMid
+  > Strategy "+" Strategy 		  -> Strategy
+
+  context-free priorities
+    { Strategy StrategyCurly      -> Strategy
+      Strategy "#" StrategyParen  -> Strategy
+    }
+    .> Term ":=" Term -> Strategy
+
+
+module Stratego-Sugar-Terms
+imports
+  Stratego-Core-Terms
+  Stratego-Sugar-Strategies
+
+exports
+  sorts LID
+  context-free syntax
+    LId 			-> LID  {cons("ListVar")}
+    LID				-> Var  {cons("Var")}
+    LID				-> ID
+
+  context-free syntax
+    "_" PreTerm 		 -> PreTerm {cons("BuildDefaultPT")}
+    "_" Term 			 -> Term {cons("BuildDefault"),prefer}
+
+    Char 			 -> PreTerm {cons("Char")}
+
+    PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
+    PreTerm                      -> Term {cons("NoAnnoList")}
+
+    "<" Strategy ">" Term 	 -> PreTerm {cons("App")}
+    "<" Strategy ">" Term 	 -> Term {cons("App"),prefer}
+
+    StrategyAngle		 -> PreTerm {cons("RootApp")}
+    StrategyAngle		 -> Term {cons("RootApp"),prefer}
+
+    "(" {Term ","}* ")" 	 -> PreTerm {cons("Tuple")}
+    "[" {Term ","}* "]" 	 -> PreTerm {cons("List")}
+    "[" {Term ","}* "|" Term "]" -> PreTerm {cons("ListTail")}
+
+  context-free priorities
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+  > PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
+  > Var "@" Term 		 -> Term {cons("As")}
+
+module Stratego-Sugar-Signatures
+imports
+  Stratego-Core-Signatures
+  Stratego-Sugar-Constants
+
+exports
+
+  sorts Sort
+  context-free syntax
+    "[" {Sort ","}* "]"		 -> Sort {cons("SortList")}
+    "[" {Sort ","}* "|" Sort "]" -> Sort {cons("SortListTl")}
+    "(" {Sort ","}* ")"		 -> Sort {cons("SortTuple")}
+
+  sorts Kind
+  context-free syntax
+    "*" 			-> Kind {cons("Star")}
+    "**" 			-> Kind {cons("StarStar")}
+
+module Stratego-Core-Signatures
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+exports
+  sorts Sdecl
+  context-free syntax
+    "sorts" Sort* 		-> Sdecl {cons("Sorts")}
+    "constructors" Opdecl* 	-> Sdecl {cons("Constructors")}
+
+  sorts Sort
+  context-free syntax
+    LCID 			 -> Sort {cons("SortVar")}
+    UCID 			 -> Sort {cons("SortNoArgs")}
+    Id "(" {Sort ","}* ")" 	 -> Sort {cons("Sort")}
+
+  sorts Opdecl
+  context-free syntax
+    Id     ":" Type 		-> Opdecl {cons("OpDecl")}
+    String ":" Type 		-> Opdecl {cons("OpDeclQ")}
+           ":" Type 		-> Opdecl {cons("OpDeclInj")}
+
+  context-free syntax
+    "external" Id     ":" Type 	-> Opdecl {cons("ExtOpDecl")}
+    "external" String ":" Type 	-> Opdecl {cons("ExtOpDeclQ")}
+    "external"        ":" Type 	-> Opdecl {cons("ExtOpDeclInj")}
+
+  sorts Type ArgType ConstType FunType RetType
+  context-free syntax
+    Sort	                -> ConstType {cons("ConstType")}
+    {ArgType "*"}+ "->" RetType -> FunType {cons("FunType")}
+    "(" Type ")"                -> ArgType {bracket}
+    ConstType			-> ArgType
+    Type	                -> RetType
+    FunType			-> RetType {reject}
+
+    FunType			-> Type
+    ConstType			-> Type
+
+  %%%
+   %% Restriction is required for the Sort* in Sdecl: List(a) is
+   %% ambiguous.
+   %%%
+  context-free restrictions
+    Sort -/- [\(]
+
+module Stratego-Core-Terms
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+
+exports
+  sorts ID Var Wld
+  context-free syntax
+    Id 				-> Var  {cons("Var")}
+    Id				-> ID
+    %% ":" Var                  -> Var  {cons("SeqVar")}
+
+  sorts Term PreTerm
+  context-free syntax
+    Var 			 -> PreTerm 
+    Var 			 -> Term {prefer}
+
+    "_" 			 -> Wld {cons("Wld")}
+    Wld 			 -> PreTerm
+    Wld 			 -> Term {prefer}
+
+    Int 			 -> PreTerm {cons("Int")}
+    Real 			 -> PreTerm {cons("Real")}
+    String 			 -> PreTerm {cons("Str")}
+
+    Id "(" {Term ","}* ")" 	 -> PreTerm {cons("Op")}
+    String "(" {Term ","}* ")" 	 -> PreTerm {cons("OpQ")}
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+
+    PreTerm "{^" PreTerm "}"	 -> Term {cons("Anno")}
+
+    Var "@" Term 		 -> Term {cons("As"),prefer}
+    Var "@" PreTerm 		 -> PreTerm {cons("As")}
+
+  context-free priorities
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+  > Var "@" Term 		 -> Term {cons("As")}
+
+module Stratego-Core-Strategies
+imports
+  Stratego-Core-Terms
+  Stratego-Core-Constants
+  Stratego-Core-Signatures
+
+exports
+  sorts Def
+  context-free syntax
+    StrategyDef					 -> Def 
+    Id						 -> SVar {cons("SVar")}
+    "let" Def* "in" Strategy "end"		 -> Strategy {cons("Let")}
+    SVar "(" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallT")}
+
+    "call" "(" Term "|" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallDynamic")}
+
+
+  sorts StrategyDef
+  context-free syntax
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDefT")}
+
+    Anno+ StrategyDef -> Def {cons("AnnoDef")}
+
+    "external"
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("ExtSDefInl")}
+
+    "external"
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"		   -> StrategyDef {cons("ExtSDef")}
+
+
+  sorts Anno
+  context-free syntax
+    "extend"      -> Anno {cons("Extend")}
+    "override"    -> Anno {cons("Override")}
+    "internal"    -> Anno {cons("Internal")}
+%%  "sealed"      -> Anno {cons("Sealed")}
+%%  "extensible"  -> Anno {cons("Extensible")}
+%%  "overridable" -> Anno {cons("Overridable")}
+
+  lexical syntax
+    
+    "extend"      -> Keyword
+    "override"    -> Keyword
+    "internal"    -> Keyword
+    "sealed"      -> Keyword
+    "extensible"  -> Keyword
+    "overridable" -> Keyword
+
+  lexical restrictions
+  
+    "extend"
+    "override"
+    "internal"
+    "sealed"
+    "extensible"
+    "overridable" -/- [a-zA-Z0-9\'\-\_]
+
+  sorts Typedid
+  context-free syntax
+    ID ":" Type 			  -> Typedid {cons("VarDec")}
+
+
+  sorts Strategy SVar StrategyParen StrategyMid 
+  context-free syntax
+    "(" Strategy ")"			  -> StrategyParen {cons("ParenStrat")}
+
+    "fail" 				  -> Strategy {cons("Fail")}
+    "id" 				  -> Strategy {cons("Id")}
+    "override" 			  -> Strategy {cons("Override")}
+
+    %% Match and build
+
+    "?" Term 				  -> Strategy {cons("Match")}
+    "!" Term 				  -> Strategy {cons("Build")}
+    "{" {ID ","}* ":" Strategy "}" 	  -> Strategy {cons("Scope")}
+
+    %% Combinators
+
+    Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+    Strategy "<" StrategyMid 
+             "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
+    Strategy 				  -> StrategyMid
+
+    %% Primitives
+
+    "prim" "(" String "," {Strategy ","}* "|" {Term ","}*")"  -> Strategy {cons("PrimT")}
+
+    %% Traversal
+
+    "some" "(" Strategy ")" 		  -> Strategy {cons("Some")}
+    "one" "(" Strategy ")" 		  -> Strategy {cons("One")}
+    "all" "(" Strategy ")" 		  -> Strategy {cons("All")}
+
+  %% Priorities
+
+  context-free priorities
+    { "!" Term 				  -> Strategy {cons("Build")}
+      "?" Term 				  -> Strategy {cons("Match")}
+    }
+  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+  > {right: 
+     Strategy "<" StrategyMid 
+              "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
+    }
+
+  context-free syntax
+    "import-term" "(" ModName ")" -> Strategy {cons("ImportTerm")}
+
+module Stratego-Core-Modules
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Strategies
+  Stratego-Core-Signatures
+
+exports 
+  sorts Module
+  context-free syntax
+    "module" ModName Decl* 	 -> Module {cons("Module")}
+    "specification" Decl*	 -> Module {cons("Specification")}
+
+  sorts Decl 
+  context-free syntax
+    "imports" ImportModName* 	-> Decl {cons("Imports")}
+    "strategies" Def* 		-> Decl {cons("Strategies")}
+    "signature" Sdecl*  	-> Decl {cons("Signature")}
+
+  sorts ImportModName
+  context-free syntax
+    ModName              -> ImportModName {cons("Import")}
+  syntax
+    <ModName-CF> "/" "-" -> <ImportModName-CF> {cons("ImportWildcard")}
+
+module Stratego-Sugar-Modules
+imports
+  Stratego-Core-Modules
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Signatures
+  Stratego-Sugar-Overlays
+  Stratego-Sugar-Rules
+
+exports 
+
+  sorts Decl Def
+  context-free syntax
+    "rules" Def* 		-> Decl {cons("Rules")}
+    "overlays" Overlay* 	-> Decl {cons("Overlays")}
+
+    RuleDef 			-> Def 
+
+
+module Stratego-Core-Constants
+exports
+  sorts Int Real String StrChar
+  lexical syntax
+    [\-]? [0-9]+ 		-> Int
+    [\-]? [0-9]+ [\.] [0-9]+ 	-> Real
+    "\"" StrChar* "\"" 		-> String
+    ~[\"\\] 			-> StrChar
+    [\\] [\"tnr\\] 		-> StrChar
+
+
+module Stratego-Sugar-Constants
+imports Stratego-Core-Identifiers Stratego-Core-Constants
+exports
+  sorts Char CharChar
+  lexical syntax
+    "'" CharChar "'"		-> Char
+    ~[\']			-> CharChar
+    [\\] [\'ntr\ ]		-> CharChar
+    Char		 	-> Id {reject}
+
+module Stratego-Core-Identifiers
+exports
+  sorts ModName ModNamePart
+  lexical syntax
+    {ModNamePart "/"}+ -> ModName
+    [a-zA-Z\.\_] [a-zA-Z0-9\'\.\-\_]* -> ModNamePart
+  lexical restrictions
+    ModName -/- [a-zA-Z0-9\'\.\-\_]
+  lexical syntax
+    "imports" 		-> ModName {reject}
+    "overlays" 		-> ModName {reject}
+    "rules" 		-> ModName {reject}
+    "signature" 	-> ModName {reject}
+    "strategies" 	-> ModName {reject}
+
+  sorts Id LId LCID UCID Wld
+  lexical syntax
+    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]*     -> Id
+    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]* "*" -> LId
+    [\'] [a-z]+                       -> Id
+
+    [a-z] [a-zA-Z0-9\'\-\_]*  -> LCID
+    [A-Z] [a-zA-Z0-9\'\-\_]*  -> UCID
+
+  lexical restrictions
+    Id   -/- [a-zA-Z0-9\'\-\_\*]
+    LId  -/- [a-zA-Z0-9\'\-\_]
+    LCID -/- [a-zA-Z0-9\'\-\_]
+    UCID -/- [a-zA-Z0-9\'\-\_]
+
+  lexical syntax
+    "_"     -> Id {reject}
+    "'"     -> Id {reject}
+
+    Keyword -> Id   {reject}
+    Keyword -> LId  {reject}
+    Keyword -> LCID {reject}
+    Keyword -> UCID {reject}
+
+  lexical restrictions
+    "all"
+    "case" %% not reserved kw
+    "constructors"
+    "else" %% not reserved kw
+    "end" %% not reserved kw
+    "external" %% not reserved kw
+    "fail"
+    "id"
+    "if" %% not reserved kw
+    "in"
+    "imports" %% not reserved kw
+    "let"
+    "module"
+    "not"
+    "one"
+    "overlays"
+    "otherwise" %% not reserved kw
+    "prim"
+    "rec" %% not reserved kw

(110 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Mon Sep  7 11:04:39 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Sep 2009 09:04:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19933 - LennartKats -
	in strc-java/trunk/java/runtime/org/strategoxt/lang: .
	parallel parallel/collections parallel/libstratego_parallel
Message-ID: <200909070904.n8794dLk010596@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-07 09:04:39 +0000 (Mon, 07 Sep 2009)
New Revision: 19933

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19933&view=rev

Added:
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/Main.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelAll.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelContext.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelJob.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelJobAbortedException.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelJobExecutor.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/PureOperatorSet.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/libstratego_parallel.java
Removed:
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelAll.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelContext.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJob.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJobAbortedException.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJobExecutor.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/PureOperatorSet.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel.java
Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelCollectionLibrary.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelRead.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelSetCreate.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelTableCreate.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelWrite.java

Log:
Moved parallel library to a separate package.

Changes (first 1000 lines of the diffs):

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -66,12 +66,11 @@
         compat.init();
     }
     
-    protected Context(ITermFactory factory, IOAgent ioAgent, Map<String, IOperatorRegistry> operatorRegistryMap, List<IOperatorRegistry> operatorRegistries) {
+    protected Context(ITermFactory factory, Map<String, IOperatorRegistry> operatorRegistryMap, List<IOperatorRegistry> operatorRegistries, boolean skipCompat) {
     	this.factory = factory;
     	this.operatorRegistryMap = operatorRegistryMap;
     	this.operatorRegistries = operatorRegistries;
-    	if (ioAgent != null) setIOAgent(ioAgent);
-    	compat.init();
+    	if (!skipCompat) compat.init();
     }
 	
 	public final ITermFactory getFactory() {

Deleted: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelAll.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelAll.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelAll.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -1,246 +0,0 @@
-package org.strategoxt.lang.parallel;
-
-import static java.lang.Math.*;
-import static org.spoofax.interpreter.terms.IStrategoTerm.*;
-import static org.strategoxt.lang.parallel.ParallelJob.*;
-
-import java.util.WeakHashMap;
-import java.util.concurrent.atomic.AtomicBoolean;
-import java.util.concurrent.atomic.AtomicInteger;
-import java.util.concurrent.atomic.AtomicReference;
-
-import org.spoofax.interpreter.terms.IStrategoList;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.lang.Context;
-import org.strategoxt.lang.SRTS_all;
-import org.strategoxt.lang.StrategoException;
-import org.strategoxt.lang.StrategoExit;
-import org.strategoxt.lang.Strategy;
-
-import static org.strategoxt.lang.parallel.libstratego_parallel.*;
-
-/**
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class ParallelAll extends SRTS_all {
-
-	/**
-	 * Gets the active ParallelAll instance, or null.
-	 * Is set by {@link libstratego_parallel#init(Context)}.
-	 */
-	public static ParallelAll instance;
-	
-	private static final WeakHashMap<IStrategoTerm, Integer> termSizes =
-		new WeakHashMap<IStrategoTerm, Integer>();
-	
-	private final ParallelJobExecutor executor = new ParallelJobExecutor();
-	
-	private int termSizeThreshold = DEFAULT_TERM_SIZE_THRESHOLD;
-
-	private int subtermCountThreshold = DEFAULT_SUBTERM_COUNT_THRESHOLD;
-	
-	private double jobLengthMultiplier = DEFAULT_JOB_LENGTH_MULTIPLIER;
-
-	private AtomicInteger parallelismLevel = new AtomicInteger(0);
-	
-	private volatile boolean allowUnorderedOnce;
-	
-	@Override
-	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s) {
-		// TODO: The focus thread could actually start more jobs, given a priority job queue
-		// TODO: Only trigger invokeParallel if synchronous execution takes longer than a certain threshold
-		if (ENABLED && (ALLOW_NESTED_JOBS || !libstratego_parallel.isActive()) && isCandidateTerm(context, current)) {
-			context.push("<parallel>");
-			IStrategoTerm result = invokeParallel(context, current, s);
-			
-			if (result == null) context.popOnFailure();
-			else context.popOnSuccess();
-			
-			return result;
-		} else {
-			return super.invoke(context, current, s);
-		}
-	}
-
-	public IStrategoTerm invokeParallel(final Context context, final IStrategoTerm current, final Strategy s) {
-		// TODO: Cleanup - method got too long!!
-		final IStrategoTerm[] inputs = current.getAllSubterms();
-		final IStrategoTerm[] outputs = new IStrategoTerm[inputs.length];
-		final AtomicInteger focusIndex = new AtomicInteger(0); // index of the job with side effects
-		final AtomicBoolean isAborted = new AtomicBoolean(false);
-		final AtomicReference<String> lastSynchronousOperation = DIAGNOSE_SYNCHRONOUS_OPERATIONS ? new AtomicReference<String>() : null;
-		final AtomicReference<Throwable> exception = new AtomicReference<Throwable>();
-		final Object notifier = new Object();
-		final boolean allowUnordered;
-		
-		ParallelJob firstJob = null;
-		
-		if (ALLOW_NESTED_JOBS) {
-			int level = parallelismLevel.incrementAndGet();
-			// We can only do this if there are no other parallel jobs active,
-			// otherwise we'd get confused about the place unordered is allowed
-			allowUnordered = level == 1 && allowUnorderedOnce;
-			allowUnorderedOnce = false;
-		} else {
-			libstratego_parallel.setActive(true);
-			allowUnordered = allowUnorderedOnce;
-			allowUnorderedOnce = false;
-		}
-		
-		try {
-			double jobLengthPrecise = (double) inputs.length / (executor.getMaximumPoolSize() + 1) * jobLengthMultiplier;
-			int jobLength = max(1, (int) jobLengthPrecise);
-			
-			if (VERBOSE)
-				System.out.print("<" + inputs.length / jobLength);
-			
-			// Populate thread pool
-			for (int i = 0; i < inputs.length; i += jobLength) {
-				final int index = i;
-				ParallelJob job = new ParallelJob(inputs, outputs, index, jobLength, parallelismLevel.get(), focusIndex, notifier) {
-					@Override
-					public IStrategoTerm execute(IStrategoTerm input) {
-						if (isAborted.get()) return null;
-
-						IStrategoTerm result = null;
-						try {
-							ParallelContext parallelContext = new ParallelContext(context, executor, this, isAborted, allowUnordered);
-							if (DIAGNOSE_SYNCHRONOUS_OPERATIONS)
-								parallelContext.setLastSynchronousOperation(lastSynchronousOperation);
-							result = s.invoke(parallelContext, input);
-							
-						} catch (ParallelJobAbortedException e) {
-							// Fine here
-						} catch (RuntimeException e) {
-							exception.set(e);
-						} catch (Error e) {
-							exception.set(e);
-						}
-						
-						if (result == null) {
-							isAborted.set(true);
-							getFocusIndex().set(COMPLETED_FOCUS_INDEX);
-							executor.getQueue().clear();
-							synchronized (notifier) {
-								if (VERBOSE) System.out.print("!>");
-								notifier.notifyAll();
-							}
-						}
-						
-						return result;
-					}
-				};
-				
-				if (firstJob == null) {
-					firstJob = job;
-				} else {
-					executor.execute(job);
-				}
-			}
-			
-			assert firstJob != null;
-			firstJob.run();
-
-			joinExecutor(focusIndex, notifier);
-		} catch (InterruptedException e) {
-			throw new RuntimeException(e);
-		} finally {
-			if (ALLOW_NESTED_JOBS) parallelismLevel.decrementAndGet();
-			else libstratego_parallel.setActive(false);
-		}
-		
-		if (DIAGNOSE_SYNCHRONOUS_OPERATIONS) {
-			System.out.print("(" + s.getName() + (lastSynchronousOperation.get() == null ? "+" : "-" + lastSynchronousOperation) + ")");
-		}
-		
-		if (isAborted.get()) {
-			if (exception.get() != null) {
-				if (exception.get() instanceof StrategoExit) {
-					throw new StrategoExit((StrategoExit) exception.get());
-				} else {
-					throw new StrategoException("Exception in asynchronous job", exception.get());
-				}
-			}
-			return null;
-		}
-		
-		assert current.getTermType() == LIST;
-		return context.getFactory().replaceList(outputs, (IStrategoList) current);
-	}
-	
-	public void setAllowUnorderedOnce(boolean allowUnorderedOnce) {
-		this.allowUnorderedOnce = allowUnorderedOnce;
-	}
-
-	private void joinExecutor(AtomicInteger focusIndex, Object notifier) throws InterruptedException {
-		// Help the thread pool
-		Runnable job;
-		while ((job = executor.getQueue().poll()) != null) {
-			job.run();
-		}
-		
-		// Wait for other threads
-		ParallelJob.waitForFocusIndex(focusIndex, COMPLETED_FOCUS_INDEX, notifier);
-	}
-	
-	protected boolean isCandidateTerm(Context context, IStrategoTerm term) {
-		if (term.getTermType() == LIST
-				&& term.getStorageType() != MUTABLE
-				&& term.getSubtermCount() >= subtermCountThreshold
-				&& getTermSize(term, 1) >= termSizeThreshold) {
-
-			if (parallelismLevel.get() > 2) {
-				return false;
-			}
-
-			if (parallelismLevel.get() > 1 && !((ParallelContext) context).getJob().isFocusJob()) {
-				return false;
-			}
-			
-			for (IStrategoList cons = (IStrategoList) term; !cons.isEmpty(); cons = cons.tail()) {
-				if (!cons.getAnnotations().isEmpty())
-					return false;
-			}
-			return true;
-		} else {
-			return false;
-		}
-	}
-	
-	/**
-	 * Gets the size of a term (using a cache).
-	 * Stops counting if {@link #termSizeThreshold} is reached.
-	 */
-	protected int getTermSize(IStrategoTerm term, int initialSize) {
-		int subtermCount = term.getSubtermCount();
-		if (subtermCount == 0) return initialSize;
-
-		Integer cached = termSizes.get(term);
-		if (cached != null) return initialSize + cached;
-
-		int size = initialSize + subtermCount;
-		
-		if (term.getTermType() == LIST) {
-			for (IStrategoList cons = (IStrategoList) term; !cons.isEmpty(); cons = cons.tail()) {
-				IStrategoTerm subterm = cons.head();
-				size = getTermSize(subterm, size);
-				if (size >= termSizeThreshold) {
-					termSizes.put(term, size);
-					return size;
-				}
-			}
-		} else {
-			for (int i = 0; i < subtermCount; i++) {
-				IStrategoTerm subterm = term.getSubterm(i);
-				size = getTermSize(subterm, size);
-				if (size >= termSizeThreshold) {
-					termSizes.put(term, size);
-					return size;
-				}
-			}
-		}
-		
-		termSizes.put(term, size);
-		return size;
-	} 
-}

Deleted: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelContext.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelContext.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelContext.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -1,114 +0,0 @@
-package org.strategoxt.lang.parallel;
-
-import java.util.concurrent.atomic.AtomicBoolean;
-import java.util.concurrent.atomic.AtomicReference;
-
-import org.spoofax.interpreter.library.AbstractPrimitive;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.lang.Context;
-import org.strategoxt.lang.Strategy;
-
-import static org.strategoxt.lang.parallel.libstratego_parallel.*;
-
-/**
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class ParallelContext extends Context {
-	
-	private final ParallelJobExecutor executor;
-	
-	private final ParallelJob job;
-	
-	private final AtomicBoolean isAborted;
-	
-	private final boolean allowUnordered;
-	
-	private AtomicReference<String> lastSynchronousOperation;
-
-	/**
-	 * Constructs a new parallelism-aware context.
-	 * 
-	 * @param context
-	 * @param executor
-	 * @param job
-	 * @param aborted
-	 * @param allowUnordered
-	 *            Allows all threads to use any operation, using locks for
-	 *            non-whitelisted ones.
-	 */
-	public ParallelContext(Context context, ParallelJobExecutor executor, ParallelJob job, AtomicBoolean aborted, boolean allowUnordered) {
-		super(context.getFactory(), context.getIOAgent(), context.getOperatorRegistryMap(), context.getOperatorRegistries());
-		this.executor = executor;
-		this.job = job;
-		this.isAborted = aborted;
-		this.allowUnordered = allowUnordered;
-	}
-	
-	void setLastSynchronousOperation(AtomicReference<String> value) {
-		this.lastSynchronousOperation = value;
-	}
-	
-	/* UNDONE: expensive according to profiler
-	@Override
-	public void popOnFailure() {
-		if (isAborted.get() && !job.isFocusJob())
-			throw new ParallelJobAbortedException();
-		super.popOnFailure();
-	}
-	*/
-	
-	@Override
-	protected void finalize() throws Throwable {
-		// Do nothing
-	}
-	
-	@Override
-	public IStrategoTerm invokePrimitive(AbstractPrimitive primitive, IStrategoTerm term, Strategy[] args, IStrategoTerm[] targs) {
-		if (isAborted.get() && !job.isFocusJob())
-			throw new ParallelJobAbortedException();
-		
-		String name = primitive.getName();
-		
-		if (!DIAGNOSE_SYNCHRONOUS_OPERATIONS && job.isFocusJob())
-			return super.invokePrimitive(primitive, term, args, targs);
-		
-		if (PureOperatorSet.isWhiteListed(name))
-			return super.invokePrimitive(primitive, term, args, targs);
-		
-		if (DIAGNOSE_SYNCHRONOUS_OPERATIONS) {
-			if (lastSynchronousOperation.get() == null)
-				lastSynchronousOperation.set(name);
-		}
-		
-		if (allowUnordered) {
-			synchronized (executor) {
-				return super.invokePrimitive(primitive, term, args, targs);
-			}
-		}
-		
-		// If all else fails, perform any "black-listed" operations in an ordered fashion
-		waitForFocus();
-		
-		return super.invokePrimitive(primitive, term, args, targs);
-	}
-	
-	public ParallelJob getJob() {
-		return job;
-	}
-	
-	/**
-	 * Puts the current thread into an idle state until it becomes the focus thread.
-	 */
-	public void waitForFocus() {
-		executor.asyncBeginSleep();
-		try {
-			job.waitForFocus();
-			if (isAborted.get() && !job.isFocusJob())
-				throw new ParallelJobAbortedException();
-		} catch (InterruptedException e) {
-			throw new RuntimeException(e);
-		} finally {
-			executor.asyncEndSleep();
-		}
-	}
-}

Deleted: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJob.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJob.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJob.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -1,167 +0,0 @@
-package org.strategoxt.lang.parallel;
-
-import static java.lang.Math.*;
-import static org.strategoxt.lang.parallel.libstratego_parallel.*;
-
-import java.util.concurrent.atomic.AtomicInteger;
-
-import org.spoofax.interpreter.terms.IStrategoTerm;
-
-/**
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public abstract class ParallelJob implements Runnable, Comparable<ParallelJob> {
-	
-	public static final int COMPLETED_FOCUS_INDEX = Integer.MAX_VALUE;
-	
-	private final IStrategoTerm[] inputs;
-	
-	private final IStrategoTerm[] outputs;
-	
-	private final int startIndex;
-	
-	private final int jobLength;
-	
-	private final int parallelismLevel;
-	
-	private final AtomicInteger focusIndex;
-	
-	private final Object notifier;
-	
-	private boolean isFocusJob;
-	
-	/**
-	 * Constructs a new parallel job.
-	 * 
-	 * @param inputs		The inputs for this job.
-	 * @param outputs		The outputs for this job.
-	 * @param startIndex	The starting index in <code>inputs</code> to process.
-	 * @param jobLength		The number of entries in <code>inputs</code> to process.
-	 * @param focusIndex	The index of the focus job.
-	 * @param notifier		An object used for synchronization and event notification.
-	 */
-	public ParallelJob(IStrategoTerm[] inputs, IStrategoTerm[] outputs,
-			int startIndex, int jobLength, int parallelismLevel, AtomicInteger focusIndex, Object notifier) {
-		
-		this.inputs = inputs;
-		this.outputs = outputs;
-		this.startIndex = startIndex;
-		this.jobLength = jobLength;
-		this.parallelismLevel = parallelismLevel;
-		this.focusIndex = focusIndex;
-		this.notifier = notifier;
-	}
-
-	public final void run() {
-		if (VERBOSE) System.out.print('.');
-		int end = min(inputs.length, startIndex + jobLength);
-			
-		for (int i = startIndex; i < end; i++) {
-			IStrategoTerm result = execute(inputs[i]);
-			if (result == null) break;
-			outputs[i] = result;
-		}
-		
-		if (VERBOSE && !isFocusJob)
-			System.out.print('!');
-		
-		updateFocusIndex();
-		
-		if (ADJUST_FOCUS_THREAD_PRIORITY) {
-			Thread thread = Thread.currentThread();
-			if (thread.getPriority() != Thread.NORM_PRIORITY)
-				thread.setPriority(Thread.NORM_PRIORITY);
-		}
-	}
-	
-	public AtomicInteger getFocusIndex() {
-		return focusIndex;
-	}
-
-	private void updateFocusIndex() {
-		if (focusIndex.get() == COMPLETED_FOCUS_INDEX) return;
-		
-		// synchronized here ensures ordered writes to 'outputs'
-		synchronized (notifier) {
-			int oldFocusIndex = focusIndex.get();
-			if (oldFocusIndex == COMPLETED_FOCUS_INDEX) return;
-			int newFocusIndex = oldFocusIndex;
-			
-			while (newFocusIndex < outputs.length) {
-				int lastJob = min(newFocusIndex + jobLength, outputs.length) - 1;
-				if (newFocusIndex > oldFocusIndex) {
-					focusIndex.set(newFocusIndex);
-				}
-				if (outputs[lastJob] == null) {
-					if (newFocusIndex > oldFocusIndex) {
-						notifier.notifyAll();
-					}
-					return;
-				}
-				newFocusIndex += jobLength;
-			}
-			
-			focusIndex.set(COMPLETED_FOCUS_INDEX);
-			if (VERBOSE) System.out.print(">");
-			notifier.notifyAll();
-		}
-	}
-	
-	public abstract IStrategoTerm execute(IStrategoTerm input);
-	
-	/**
-	 * Checks if the current job is executed in the focus thread.
-	 * 
-	 * @return <code>true</code> if the job is executed in the focus thread.
-	 */
-	public boolean isFocusJob() {
-		return isFocusJob || focusIndex.get() == startIndex;
-	}
-	
-	/**
-	 * Waits until the current thread is the focus thread.
-	 * Must be called form the thread that owns this job.
-	 */
-	public void waitForFocus() throws InterruptedException {
-		if (!isFocusJob) {
-			waitForFocusIndexEagerly();
-			if (ADJUST_FOCUS_THREAD_PRIORITY)
-				Thread.currentThread().setPriority(Thread.MAX_PRIORITY);
-			isFocusJob = true;
-		}
-	}
-
-	private void waitForFocusIndexEagerly() throws InterruptedException {
-		if (focusIndex.get() < startIndex) {
-			synchronized (notifier) {
-				updateFocusIndex();
-				while (focusIndex.get() < startIndex) {
-					if (VERBOSE) System.out.print('$');
-					notifier.wait();
-				}
-			}
-		}
-	}
-
-	protected static void waitForFocusIndex(AtomicInteger focusIndex, int index, Object notifier) throws InterruptedException {
-		if (focusIndex.get() < index) {
-			synchronized (notifier) {
-				while (focusIndex.get() < index) {
-					notifier.wait();
-				}
-			}
-		}
-	}
-	
-	public int compareTo(ParallelJob o) {
-		if (parallelismLevel > o.parallelismLevel) {
-			return -1;
-		} else if (parallelismLevel == o.parallelismLevel) {
-			return startIndex < o.startIndex
-					? -1
-					: startIndex == o.startIndex ? 0 : 1;
-		} else {
-			return 1;
-		}
-	}
-}

Deleted: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJobAbortedException.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJobAbortedException.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJobAbortedException.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -1,15 +0,0 @@
-package org.strategoxt.lang.parallel;
-
-import org.strategoxt.lang.StrategoException;
-
-/**
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class ParallelJobAbortedException extends StrategoException {
-
-	private static final long serialVersionUID = 3832524936272309156L;
-
-	public ParallelJobAbortedException() {
-		super("Parallel running Stratego job aborted");
-	}
-}

Deleted: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJobExecutor.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJobExecutor.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelJobExecutor.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -1,78 +0,0 @@
-package org.strategoxt.lang.parallel;
-
-import static org.strategoxt.lang.parallel.libstratego_parallel.*;
-
-import java.util.concurrent.PriorityBlockingQueue;
-import java.util.concurrent.ThreadPoolExecutor;
-import java.util.concurrent.TimeUnit;
-
-import org.spoofax.jsglr.NotImplementedException;
-
-/**
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class ParallelJobExecutor extends ThreadPoolExecutor {
-	
-	private final int asyncMaxPoolSize;
-	
-	private final boolean isConstantPoolSize;
-	
-	private int asyncPoolSize;
-
-	public ParallelJobExecutor() {
-		this(DEFAULT_ACTIVE_THREADS, DEFAULT_MAX_THREADS);
-	}
-	
-	public ParallelJobExecutor(int activeThreads, int maxThreads) {
-		super(activeThreads - 1, maxThreads - 1, 60L, TimeUnit.SECONDS, new PriorityBlockingQueue<Runnable>());
-		isConstantPoolSize = activeThreads == maxThreads;
-		this.asyncPoolSize = activeThreads;
-		this.asyncMaxPoolSize = maxThreads;
-	}
-	
-	@Override
-	public synchronized int getCorePoolSize() {
-		return super.getCorePoolSize();
-	}
-	
-	@Override
-	public synchronized int getMaximumPoolSize() {
-		return super.getMaximumPoolSize();
-	}
-	
-	@Override
-	public void setCorePoolSize(int corePoolSize) {
-		throw new NotImplementedException();
-	}
-	
-	@Override
-	public void setMaximumPoolSize(int maximumPoolSize) {
-		throw new NotImplementedException();
-	}
-	
-	/**
-	 * Indicates that a thread is going into an inactive state.
-	 * Must be executed from a worker thread, and balanced
-	 * with {@link #asyncEndSleep()};
-	 */
-	public synchronized void asyncBeginSleep() {
-		if (!isConstantPoolSize) {
-			asyncPoolSize++;
-			if (asyncPoolSize <= asyncMaxPoolSize)
-				super.setCorePoolSize(asyncPoolSize);
-		}
-	}
-	
-	/**
-	 * Indicates that a thread resumes from an inactive state.
-	 * Must be executed from a worker thread, and balanced
-	 * with {@link #asyncBeginSleep()};
-	 */
-	public synchronized void asyncEndSleep() {
-		if (!isConstantPoolSize) {
-			asyncPoolSize--;
-			if (asyncPoolSize <= asyncMaxPoolSize)
-				super.setCorePoolSize(asyncPoolSize);
-		}
-	}
-}

Deleted: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/PureOperatorSet.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/PureOperatorSet.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/PureOperatorSet.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -1,120 +0,0 @@
-package org.strategoxt.lang.parallel;
-
-import java.util.HashSet;
-
-/**
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class PureOperatorSet {
-
-	// TODO: PureOperatorSet should be a field in Context, not static
-	//       (also, any "pure" operators should add themselves)
-
-	/**
-	 * Primitives that are always thread safe.
-	 */
-	@SuppressWarnings("serial")
-	private static final HashSet<String> whiteList = new HashSet<String>() {{
-		// General
-		add("SSL_new");
-		add("SSL_newname");
-		add("SSL_is_string");
-		add("SSL_is_real");
-		add("SSL_is_int");
-		add("SSL_get_list_length");
-		add("SSL_get_constructor");
-		add("SSL_get_arguments");
-		add("SSL_get_appl_arguments_map");
-		add("SSL_mkterm");
-		add("SSL_concat_strings");
-		add("SSL_strcat");
-		add("SSL_gti");
-		add("SSL_lti");
-		add("SSL_gtr");
-		add("SSL_ltr");
-		add("SSL_addr");
-		add("SSL_subtr");
-		add("SSL_divr");
-		add("SSL_addi");
-		add("SSL_subti");
-		add("SSL_divi");
-		add("SSL_explode_string");
-		add("SSL_implode_string");
-		add("SSL_string_to_int");
-		add("SSL_int_to_string");
-		add("SSL_getenv");
-		add("JSGLR_parse_string_pt_compat");
-		add("JSGLR_parse_string_pt");
-		add("JSGLR_open_parsetable");
-		add("SSL_dynamic_rules_hashtable");
-		add("SSL_table_hashtable");
-
-		// Collection "read" primitives
-		add("SSL_hashtable_get");
-		add("SSL_indexedSet_get");
-		add("SSL_hashtable_elements");
-		add("SSL_indexedSet_elements");
-		add("SSL_table_fold");
-		add("SSL_keys_fold");
-		add("SSL_values_fold");
-
-		// Collection "write" primitives
-		add("SSL_hashtable_put");
-		add("SSL_indexedSet_put");
-		add("SSL_hashtable_remove");
-		add("SSL_indexedSet_remove");
-		add("SSL_hashtable_reset");
-		add("SSL_indexedSet_reset");
-		add("SSL_hashtable_create");
-		add("SSL_indexedSet_create");
-
-		// TODO: More "pure" operators
-	}};
-	
-	/* UNDONE: operator graylist
-	 * Primitives that are only thread safe when just
-	 * when black listed operations are never used,
-	 * not even from the focus thread.
-	 *
-	@SuppressWarnings("serial")
-	private static final HashSet<String> grayList = new HashSet<String>() {{
-		add("SSL_hashtable_get");
-		add("SSL_indexedSet_get");
-		add("SSL_hashtable_elements");
-		add("SSL_indexedSet_elements");
-		add("SSL_table_fold");
-		add("SSL_keys_fold");
-		add("SSL_values_fold");
-	}};
-	
-	/* UNDONE: operator blacklist
-	 * Primitives that are generally not thread safe.
-	 * If explicitly indicated, they may be used with synchronization locks,
-	 * together with the gray-listed opertors, which must then also
-	 * be locked.
-	 *
-	@SuppressWarnings("serial")
-	private static final HashSet<String> blackList = new HashSet<String>() {{
-		add("SSL_hashtable_put");
-		add("SSL_indexedSet_put");
-		add("SSL_hashtable_remove");
-		add("SSL_indexedSet_remove");
-		add("SSL_hashtable_reset");
-		add("SSL_indexedSet_reset");
-		add("SSL_hashtable_create");
-		add("SSL_indexedSet_create");
-		add("SSL_fputs");
-	}};
-	*/
-	
-	private PureOperatorSet() {}
-	
-	public static boolean isWhiteListed(String name) {
-		return whiteList.contains(name);
-	}
-	
-	public static void addWhiteListed(String name) {
-		
-	}
-
-}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelCollectionLibrary.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelCollectionLibrary.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelCollectionLibrary.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -20,7 +20,7 @@
 import org.spoofax.interpreter.library.ssl.SSL_table_fold;
 import org.spoofax.interpreter.library.ssl.SSL_table_keys_fold;
 import org.spoofax.interpreter.library.ssl.SSL_table_values_fold;
-import org.strategoxt.lang.parallel.ParallelJob;
+import org.strategoxt.lang.parallel.libstratego_parallel.ParallelJob;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelRead.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelRead.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelRead.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -6,8 +6,8 @@
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.lang.InteropContext;
-import org.strategoxt.lang.parallel.ParallelContext;
-import org.strategoxt.lang.parallel.libstratego_parallel;
+import org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel;
+import org.strategoxt.lang.parallel.libstratego_parallel.ParallelContext;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelSetCreate.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelSetCreate.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelSetCreate.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -7,7 +7,7 @@
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoInt;
 import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.lang.parallel.libstratego_parallel;
+import org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelTableCreate.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelTableCreate.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelTableCreate.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -7,7 +7,7 @@
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoInt;
 import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.lang.parallel.libstratego_parallel;
+import org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelWrite.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelWrite.java	2009-09-04 14:13:48 UTC (rev 19932)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelWrite.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -6,8 +6,8 @@
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.lang.InteropContext;
-import org.strategoxt.lang.parallel.ParallelContext;
-import org.strategoxt.lang.parallel.libstratego_parallel;
+import org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel;
+import org.strategoxt.lang.parallel.libstratego_parallel.ParallelContext;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>

Added: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/Main.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/Main.java	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/Main.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -0,0 +1,8 @@
+package org.strategoxt.lang.parallel.libstratego_parallel;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class Main extends libstratego_parallel {
+	// Placeholder class used when loaded by strj
+}

Copied: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelAll.java (from rev 19932, strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/ParallelAll.java)
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelAll.java	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelAll.java	2009-09-07 09:04:39 UTC (rev 19933)
@@ -0,0 +1,246 @@
+package org.strategoxt.lang.parallel.libstratego_parallel;
+
+import static java.lang.Math.*;
+import static org.spoofax.interpreter.terms.IStrategoTerm.*;
+import static org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel.*;
+import static org.strategoxt.lang.parallel.libstratego_parallel.ParallelJob.*;
+
+import java.util.WeakHashMap;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.concurrent.atomic.AtomicInteger;
+import java.util.concurrent.atomic.AtomicReference;
+
+import org.spoofax.interpreter.terms.IStrategoList;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.SRTS_all;
+import org.strategoxt.lang.StrategoException;
+import org.strategoxt.lang.StrategoExit;
+import org.strategoxt.lang.Strategy;
+
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class ParallelAll extends SRTS_all {
+
+	/**
+	 * Gets the active ParallelAll instance, or null.
+	 * Is set by {@link libstratego_parallel#init(Context)}.
+	 */
+	public static ParallelAll instance;
+	
+	private static final WeakHashMap<IStrategoTerm, Integer> termSizes =
+		new WeakHashMap<IStrategoTerm, Integer>();
+	
+	private final ParallelJobExecutor executor = new ParallelJobExecutor();
+	
+	private int termSizeThreshold = DEFAULT_TERM_SIZE_THRESHOLD;
+
+	private int subtermCountThreshold = DEFAULT_SUBTERM_COUNT_THRESHOLD;
+	
+	private double jobLengthMultiplier = DEFAULT_JOB_LENGTH_MULTIPLIER;
+
+	private AtomicInteger parallelismLevel = new AtomicInteger(0);
+	
+	private volatile boolean allowUnorderedOnce;
+	
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s) {
+		// TODO: The focus thread could actually start more jobs, given a priority job queue
+		// TODO: Only trigger invokeParallel if synchronous execution takes longer than a certain threshold
+		if (ENABLED && (ALLOW_NESTED_JOBS || !libstratego_parallel.isActive()) && isCandidateTerm(context, current)) {
+			context.push("<parallel>");
+			IStrategoTerm result = invokeParallel(context, current, s);
+			
+			if (result == null) context.popOnFailure();
+			else context.popOnSuccess();
+			
+			return result;
+		} else {
+			return super.invoke(context, current, s);
+		}
+	}
+
+	public IStrategoTerm invokeParallel(final Context context, final IStrategoTerm current, final Strategy s) {
+		// TODO: Cleanup - method got too long!!
+		final IStrategoTerm[] inputs = current.getAllSubterms();
+		final IStrategoTerm[] outputs = new IStrategoTerm[inputs.length];
+		final AtomicInteger focusIndex = new AtomicInteger(0); // index of the job with side effects
+		final AtomicBoolean isAborted = new AtomicBoolean(false);
+		final AtomicReference<String> lastSynchronousOperation = DIAGNOSE_SYNCHRONOUS_OPERATIONS ? new AtomicReference<String>() : null;
+		final AtomicReference<Throwable> exception = new AtomicReference<Throwable>();
+		final Object notifier = new Object();
+		final boolean allowUnordered;
+		
+		ParallelJob firstJob = null;
+		
+		if (ALLOW_NESTED_JOBS) {
+			int level = parallelismLevel.incrementAndGet();
+			// We can only do this if there are no other parallel jobs active,
+			// otherwise we'd get confused about the place unordered is allowed
+			allowUnordered = level == 1 && allowUnorderedOnce;
+			allowUnorderedOnce = false;
+		} else {
+			libstratego_parallel.setActive(true);
+			allowUnordered = allowUnorderedOnce;
+			allowUnorderedOnce = false;
+		}
+		
+		try {
+			double jobLengthPrecise = (double) inputs.length / (executor.getMaximumPoolSize() + 1) * jobLengthMultiplier;
+			int jobLength = max(1, (int) jobLengthPrecise);
+			
+			if (VERBOSE)
+				System.out.print("<" + inputs.length / jobLength);
+			
+			// Initialize job queue
+			for (int i = 0; i < inputs.length; i += jobLength) {
+				final int index = i;
+				ParallelJob job = new ParallelJob(inputs, outputs, index, jobLength, parallelismLevel.get(), focusIndex, notifier) {
+					@Override
+					public IStrategoTerm execute(IStrategoTerm input) {
+						if (isAborted.get()) return null;
+
+						IStrategoTerm result = null;
+						try {
+							ParallelContext parallelContext = new ParallelContext(context, executor, this, isAborted, allowUnordered);
+							if (DIAGNOSE_SYNCHRONOUS_OPERATIONS)
+								parallelContext.setLastSynchronousOperation(lastSynchronousOperation);
+							result = s.invoke(parallelContext, input);
+							

(824 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Mon Sep  7 12:16:32 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Sep 2009 10:16:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19934 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr
	spoofax-imp/trunk/org.strategoxt.imp.feature
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr
Message-ID: <200909071016.n87AGWu5011787@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-07 10:16:32 +0000 (Mon, 07 Sep 2009)
New Revision: 19934

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19934&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPAsfixImplodePrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRIPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRPrimitive.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRLibrary.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatLibrary.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java

Log:
Adapted the Spoofax/IMP parsing primitives to be compatible with STRJ (and the HybridInterpreter). Also updated the base classes for the JSGLR parse string primitive.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java	2009-09-07 09:04:39 UTC (rev 19933)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java	2009-09-07 10:16:32 UTC (rev 19934)
@@ -1,14 +1,19 @@
 package org.spoofax.interpreter.library.jsglr;
 
+import static org.spoofax.interpreter.core.Tools.*;
+
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
+import java.io.PrintStream;
 
 import org.spoofax.interpreter.adapter.aterm.WrappedATerm;
 import org.spoofax.interpreter.adapter.aterm.WrappedATermFactory;
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.core.Tools;
+import org.spoofax.interpreter.library.IOAgent;
+import org.spoofax.interpreter.library.ssl.SSLLibrary;
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoTerm;
@@ -17,8 +22,6 @@
 import org.spoofax.jsglr.SGLR;
 import org.spoofax.jsglr.SGLRException;
 
-import aterm.ATermFactory;
-
 public class JSGLR_parse_string_pt extends JSGLRPrimitive {
 
 	private final WrappedATermFactory factory;
@@ -71,39 +74,42 @@
 			return false;
 		}
 
-		lastPath = Tools.asJavaString(tvars[3]);
-		Strategy onParseError = svars[0];
+		lastPath = asJavaString(tvars[3]);
 		
 		JSGLRLibrary lib = getLibrary(env);
-		ParseTable pt = lib.getParseTable(Tools.asJavaInt(tvars[1]));
-		if (pt == null)
+		ParseTable table = lib.getParseTable(asJavaInt(tvars[1]));
+		if (table == null)
 			return false;
-		
-		SGLR parser = makeSGLR(factory.getFactory(), pt);
-		
-		InputStream is = new ByteArrayInputStream(Tools.asJavaString(tvars[0]).getBytes());
+
 		try {
-			IStrategoTerm result = factory.wrapTerm(parser.parse(is, startSymbol));
-			if (!(tvars[0] instanceof WrappedATerm))
-				result = TermConverter.convert(env.getFactory(), result);
-			
+			IStrategoTerm result = call(env, asJavaString(tvars[0]), table, startSymbol, tvars[0] instanceof WrappedATerm);
 			env.setCurrent(result);
-			return true;
+			return result != null;
 		} catch (IOException e) {
-			e.printStackTrace();
+			PrintStream err = SSLLibrary.instance(env).getIOAgent().getOutputStream(IOAgent.CONST_STDERR);
+			err.println("JSGLR_parse_string_pt: could not parse " + getLastPath() + " - " + e.getMessage());
+			return false;
 		} catch (SGLRException e) {
 			lastException = e;
 			IStrategoTerm errorTerm = factory.wrapTerm(e.toTerm(lastPath));
 			env.setCurrent(TermConverter.convert(env.getFactory(), errorTerm));
 			
-			// TODO: Stratego doesn't seem to print the erroneous line in Java
-			return onParseError.evaluate(env);
+			// FIXME: Stratego doesn't seem to print the erroneous line in Java
+			return svars[0].evaluate(env);
 		}
-		return false;
 	}
-
-	// overridden in JSGLR_parse_string_compat
-	protected SGLR makeSGLR(ATermFactory factory, ParseTable table) {
-		return new SGLR(factory, table);
+	
+	public IStrategoTerm call(IContext env, String input,
+			ParseTable table, String startSymbol, boolean outputWrappedATerm)
+			throws InterpreterException, IOException, SGLRException {
+		
+		SGLR parser = new SGLR(factory.getFactory(), table);
+		
+		InputStream is = new ByteArrayInputStream(input.getBytes());
+		IStrategoTerm result = factory.wrapTerm(parser.parse(is, startSymbol));
+		if (!outputWrappedATerm)
+			result = TermConverter.convert(env.getFactory(), result);
+		
+		return result;
 	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-09-07 09:04:39 UTC (rev 19933)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-09-07 10:16:32 UTC (rev 19934)
@@ -39,8 +39,7 @@
          id="org.spoofax.aterm"
          download-size="0"
          install-size="0"
-         version="0.2.2.qualifier"
-         unpack="false"/>
+         version="0.2.2.qualifier"/>
 
    <plugin
          id="org.spoofax.compiler"
@@ -186,8 +185,7 @@
          id="org.strategoxt.strj"
          download-size="0"
          install-size="0"
-         version="0.1.1"
-         unpack="false"/>
+         version="0.1.1"/>
 
    <plugin
          id="org.strategoxt.imp.generator"

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-09-07 09:04:39 UTC (rev 19933)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-09-07 10:16:32 UTC (rev 19934)
@@ -24,6 +24,7 @@
 import org.strategoxt.imp.runtime.stratego.IMPJSGLRLibrary;
 import org.strategoxt.imp.runtime.stratego.IMPLibrary;
 import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNodeFactory;
+import org.strategoxt.lang.compat.sglr.SGLRCompatLibrary;
 
 import aterm.ATermFactory;
 import aterm.pure.PureFactory;
@@ -126,7 +127,8 @@
 			}
 		};
 
-		result.addOperatorRegistry(new IMPJSGLRLibrary());
+		SGLRCompatLibrary sglrLibrary = (SGLRCompatLibrary) result.getContext().getOperatorRegistry(SGLRCompatLibrary.REGISTRY_NAME);
+		result.addOperatorRegistry(new IMPJSGLRLibrary(sglrLibrary));
 		result.addOperatorRegistry(new IMPLibrary());
 		result.setIOAgent(new EditorIOAgent());
 		

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java	2009-09-07 09:04:39 UTC (rev 19933)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java	2009-09-07 10:16:32 UTC (rev 19934)
@@ -46,6 +46,9 @@
 		parser.asyncAbort();
 	}
 	
+	/**
+	 * @see SGLR#setRecoverHandler(RecoverAlgorithm)
+	 */
 	public void setRecoverHandler(RecoverAlgorithm recoverHandler) {
 		this.recoverHandler = recoverHandler;
 		parser.setRecoverHandler(recoverHandler);

Deleted: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPAsfixImplodePrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPAsfixImplodePrimitive.java	2009-09-07 09:04:39 UTC (rev 19933)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPAsfixImplodePrimitive.java	2009-09-07 10:16:32 UTC (rev 19934)
@@ -1,53 +0,0 @@
-package org.strategoxt.imp.runtime.stratego;
-
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.core.InterpreterException;
-import org.spoofax.interpreter.library.IOperatorRegistry;
-import org.spoofax.interpreter.library.jsglr.JSGLRPrimitive;
-import org.spoofax.interpreter.stratego.Strategy;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.imp.runtime.parser.JSGLRI;
-import org.strategoxt.imp.runtime.parser.ast.AsfixImploder;
-import org.strategoxt.imp.runtime.parser.ast.AstNode;
-import org.strategoxt.imp.runtime.parser.tokens.SGLRTokenizer;
-import org.strategoxt.imp.runtime.parser.tokens.TokenKindManager;
-
-import aterm.ATerm;
-
-/**
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class IMPAsfixImplodePrimitive extends JSGLRPrimitive {
-	
-	private final AsfixImploder imploder = new AsfixImploder(new TokenKindManager());
-
-	protected IMPAsfixImplodePrimitive() {
-		super("SPI_implode_asfix", 0, 1);
-	}
-
-	@Override
-	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars)
-			throws InterpreterException {
-		
-		IOperatorRegistry library = env.getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME);
-		IMPJSGLRPrimitive jsglr = (IMPJSGLRPrimitive) library.get(IMPJSGLRPrimitive.NAME);
-		
-		char[] inputChars = jsglr.getInputChars(tvars[0]);
-		ATerm asfix = jsglr.getInputTerm(tvars[0]);
-		
-		if (inputChars == null || asfix == null) {
-			// TODO: Redirect to standard asfix implosion?
-			throw new InterpreterException("Could not implode asfix tree; not parsed using JSGLR");
-		}
-		
-		SGLRTokenizer tokenizer = JSGLRI.getTokenizer(asfix);
-		AstNode result = imploder.implode(asfix, tokenizer);
-		env.setCurrent(result.getTerm());
-		
-		// TODO: Make a RootAstNode object from this tree and for IMPSGLRIPrimitive
-		//       which either refers to a (possibly fresh) ParseController or
-		//       some other cookie that traces back the tree to the file
-		
-		return true;
-	}
-}

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java (from rev 19931, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPAsfixImplodePrimitive.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	2009-09-07 10:16:32 UTC (rev 19934)
@@ -0,0 +1,50 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import org.spoofax.interpreter.library.IOperatorRegistry;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.parser.JSGLRI;
+import org.strategoxt.imp.runtime.parser.ast.AsfixImploder;
+import org.strategoxt.imp.runtime.parser.ast.AstNode;
+import org.strategoxt.imp.runtime.parser.tokens.SGLRTokenizer;
+import org.strategoxt.imp.runtime.parser.tokens.TokenKindManager;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+import org.strategoxt.lang._Fail;
+import org.strategoxt.lang._Id;
+import org.strategoxt.libstratego_sglr.implode_asfix_1_0;
+
+import aterm.ATerm;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class IMPImplodeAsfixStrategy extends implode_asfix_1_0 {
+	
+	private static final Strategy outer = implode_asfix_1_0.instance;
+	
+	private final AsfixImploder imploder = new AsfixImploder(new TokenKindManager());
+
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm asfix, Strategy skipConcreteSyntax) {
+		if (skipConcreteSyntax.invoke(context, asfix) != null)
+			return super.invoke(context, asfix, _Id.instance);
+		
+		IOperatorRegistry library = context.getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME);
+		IMPParseStringPTPrimitive jsglr = (IMPParseStringPTPrimitive) library.get(IMPParseStringPTPrimitive.NAME);
+		
+		char[] inputChars = jsglr.getInputChars(asfix);
+		ATerm asfixATerm = jsglr.getInputTerm(asfix);
+		
+		if (inputChars == null || asfix == null) {
+			return outer.invoke(context, asfix, _Fail.instance);
+		}
+		
+		SGLRTokenizer tokenizer = JSGLRI.getTokenizer(asfixATerm);
+		AstNode result = imploder.implode(asfixATerm, tokenizer);
+		return result.getTerm();
+		
+		// TODO: Make a RootAstNode object from this tree and for IMPSGLRIPrimitive
+		//       which either refers to a (possibly fresh) ParseController or
+		//       some other cookie that traces back the tree to the file
+	}
+}

Deleted: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRIPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRIPrimitive.java	2009-09-07 09:04:39 UTC (rev 19933)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRIPrimitive.java	2009-09-07 10:16:32 UTC (rev 19934)
@@ -1,75 +0,0 @@
-package org.strategoxt.imp.runtime.stratego;
-
-import java.io.IOException;
-
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.core.InterpreterException;
-import org.spoofax.interpreter.core.Tools;
-import org.spoofax.interpreter.library.jsglr.JSGLRLibrary;
-import org.spoofax.interpreter.library.jsglr.JSGLRPrimitive;
-import org.spoofax.interpreter.stratego.Strategy;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.spoofax.interpreter.terms.TermConverter;
-import org.spoofax.jsglr.ParseTable;
-import org.spoofax.jsglr.SGLRException;
-import org.strategoxt.imp.runtime.Environment;
-import org.strategoxt.imp.runtime.parser.JSGLRI;
-import org.strategoxt.imp.runtime.parser.ast.AsfixImploder;
-
-/**
- * Supports parsing with JSGLR with a custom ITermFactory (i.e., not WrappedATermFactory),
- * using the {@link AsfixImploder} class for imploding trees to ensure
- * position/origin tracking is available.
- * 
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class IMPJSGLRIPrimitive extends JSGLRPrimitive {
-	
-	private final TermConverter termConverter = new TermConverter(Environment.getTermFactory());
-
-	protected IMPJSGLRIPrimitive() {
-		super("JSGLR_parse_string", 1, 4);
-	}
-
-	@Override
-	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars)
-			throws InterpreterException {
-		
-		// TODO: Use svars[0] onError argument
-		//       see jsglr compat component
-		
-		// XXX: IMPJSGLRIPrimitive et al should be used again
-		
-		// XXX: Don't use recovery from Interpreter-primitive parsing
-		
-		if(!Tools.isTermString(tvars[0]))
-			return false;
-		if(!Tools.isTermInt(tvars[1]))
-			return false;
-		if(!Tools.isTermString(tvars[2]))
-			return false;
-		
-		String input = Tools.asJavaString(tvars[0]);
-		String path = Tools.isTermString(tvars[3]) ? tvars[3].toString() : "String";
-		
-		JSGLRLibrary lib = getLibrary(env);
-		ParseTable pt = lib.getParseTable(Tools.asJavaInt(tvars[1]));
-		String startSymbol = tvars[2].toString();
-		
-		JSGLRI parser = new JSGLRI(pt, startSymbol);
-		
-		char[] inputChars = new char[input.length()];
-		input.getChars(0, input.length(), inputChars, 0);
-		
-		try {
-			IStrategoTerm result = parser.parse(inputChars, path).getTerm();
-			env.setCurrent(termConverter.convert(result));
-			return true;
-		} catch (IOException e) {
-			Environment.logException("Could not parse " + path, e);
-		} catch (SGLRException e) {
-			Environment.logException("Could not parse " + path, e);
-		}
-		return false;
-	}
-}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRLibrary.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRLibrary.java	2009-09-07 09:04:39 UTC (rev 19933)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRLibrary.java	2009-09-07 10:16:32 UTC (rev 19934)
@@ -2,18 +2,19 @@
 
 import org.spoofax.interpreter.library.jsglr.JSGLRLibrary;
 import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.lang.compat.sglr.SGLRCompatLibrary;
+import org.strategoxt.libstratego_sglr.implode_asfix_1_0;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public class IMPJSGLRLibrary extends JSGLRLibrary {
 
-	public IMPJSGLRLibrary() {
+	public IMPJSGLRLibrary(SGLRCompatLibrary sglrLibrary) {
 		super(Environment.getWrappedATermFactory());
 		
-		add(new IMPJSGLRPrimitive());
-		add(new IMPJSGLRIPrimitive());
-		add(new IMPAsfixImplodePrimitive());
+		add(new IMPParseStringPTPrimitive(Environment.getWrappedATermFactory(), sglrLibrary.getFilterSettings()));
+		implode_asfix_1_0.instance = new IMPImplodeAsfixStrategy();
 	}
 
 }

Deleted: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRPrimitive.java	2009-09-07 09:04:39 UTC (rev 19933)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRPrimitive.java	2009-09-07 10:16:32 UTC (rev 19934)
@@ -1,93 +0,0 @@
-package org.strategoxt.imp.runtime.stratego;
-
-import java.io.IOException;
-import java.util.Map;
-import java.util.WeakHashMap;
-
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.core.InterpreterException;
-import org.spoofax.interpreter.core.Tools;
-import org.spoofax.interpreter.library.jsglr.JSGLRLibrary;
-import org.spoofax.interpreter.library.jsglr.JSGLRPrimitive;
-import org.spoofax.interpreter.stratego.Strategy;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.spoofax.interpreter.terms.TermConverter;
-import org.spoofax.jsglr.ParseTable;
-import org.spoofax.jsglr.SGLRException;
-import org.strategoxt.imp.runtime.Environment;
-import org.strategoxt.imp.runtime.parser.JSGLRI;
-
-import aterm.ATerm;
-
-/**
- * Supports parsing with JSGLR with a custom ITermFactory (i.e., not WrappedATermFactory).
- * 
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class IMPJSGLRPrimitive extends JSGLRPrimitive {
-	
-	private final TermConverter termConverter = new TermConverter(Environment.getTermFactory());
-	
-	private final Map<IStrategoTerm, char[]> inputCharMap = new WeakHashMap<IStrategoTerm, char[]>();
-
-	private final Map<IStrategoTerm, ATerm> inputTermMap = new WeakHashMap<IStrategoTerm, ATerm>();
-
-	public static final String NAME = "JSGLR_parse_string_pt";
-
-	protected IMPJSGLRPrimitive() {
-		super(NAME, 1, 4);
-	}
-
-	@Override
-	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars)
-			throws InterpreterException {
-		
-		// TODO: Use svars[0] onError argument?
-		
-		// XXX: Don't use recovery from Interpreter-primitive parsing
-		
-		if(!Tools.isTermString(tvars[0]))
-			return false;
-		if(!Tools.isTermInt(tvars[1]))
-			return false;
-		if(!Tools.isTermString(tvars[2]))
-			return false;
-		
-		String input = Tools.asJavaString(tvars[0]);
-		String path = Tools.isTermString(tvars[3]) ? tvars[3].toString() : "String";
-		
-		JSGLRLibrary lib = getLibrary(env);
-		ParseTable pt = lib.getParseTable(Tools.asJavaInt(tvars[1]));
-		String startSymbol = tvars[2].toString();
-		
-		JSGLRI parser = new JSGLRI(pt, startSymbol);
-		
-		char[] inputChars = new char[input.length()];
-		input.getChars(0, input.length(), inputChars, 0);
-		
-		try {
-			ATerm asfix = parser.parseNoImplode(inputChars, path);
-			IStrategoTerm result = Environment.getWrappedATermFactory().wrapTerm(asfix);
-			result = termConverter.convert(result);
-
-			inputTermMap.put(result, asfix);
-			inputCharMap.put(result, inputChars);
-			
-			env.setCurrent(result);
-			return true;
-		} catch (IOException e) {
-            Environment.logException("Could not parse " + path, e);
-		} catch (SGLRException e) {
-			Environment.logException("Could not parse " + path, e);
-		}
-		return false;
-	}
-	
-	public char[] getInputChars(IStrategoTerm asfix) {
-		return inputCharMap.get(asfix);
-	}
-	
-	public ATerm getInputTerm(IStrategoTerm asfix) {
-		return inputTermMap.get(asfix);
-	}
-}

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java (from rev 19931, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRPrimitive.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java	2009-09-07 10:16:32 UTC (rev 19934)
@@ -0,0 +1,78 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import java.io.IOException;
+import java.util.Map;
+import java.util.WeakHashMap;
+
+import org.spoofax.interpreter.adapter.aterm.WrappedATermFactory;
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.TermConverter;
+import org.spoofax.jsglr.Disambiguator;
+import org.spoofax.jsglr.ParseTable;
+import org.spoofax.jsglr.SGLRException;
+import org.spoofax.jsglr.StructureRecoveryAlgorithm;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.parser.JSGLRI;
+import org.strategoxt.lang.LazyTerm;
+import org.strategoxt.lang.compat.sglr.JSGLR_parse_string_pt_compat;
+
+import aterm.ATerm;
+
+/**
+ * Parses strings to asfix trees, caching the internal ATerm
+ * for implosion with {@link IMPImplodeAsfixStrategy}. 
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class IMPParseStringPTPrimitive extends JSGLR_parse_string_pt_compat {
+	
+	private final TermConverter termConverter = new TermConverter(Environment.getTermFactory());
+	
+	private final Map<IStrategoTerm, char[]> inputCharMap = new WeakHashMap<IStrategoTerm, char[]>();
+
+	private final Map<IStrategoTerm, ATerm> inputTermMap = new WeakHashMap<IStrategoTerm, ATerm>();
+
+	protected IMPParseStringPTPrimitive(WrappedATermFactory factory, Disambiguator filterSettings) {
+		super(factory, filterSettings);
+	}
+
+	@Override
+	public IStrategoTerm call(IContext env, String input,
+			ParseTable table, String startSymbol, boolean outputWrappedATerm)
+			throws InterpreterException, IOException, SGLRException {
+		
+		// TODO: new "jsglr enable recovery" strategy in jsglr-parser.str
+		// FIXME: recovery is always enabled in Stratego right now
+		//        (and once it isn't, how would caching factor into that?)
+		
+		String path = getLastPath();		
+		JSGLRI parser = new JSGLRI(table, startSymbol);
+		parser.setRecoverHandler(new StructureRecoveryAlgorithm());
+		char[] inputChars = input.toCharArray();
+		
+		final ATerm asfix = parser.parseNoImplode(inputChars, path);
+		IStrategoTerm result = new LazyTerm() {
+			@Override
+			protected IStrategoTerm init() {
+				return Environment.getWrappedATermFactory().wrapTerm(asfix);
+			}			
+		};
+			
+		result = termConverter.convert(result);
+
+		inputTermMap.put(result, asfix);
+		inputCharMap.put(result, inputChars);
+		
+		return result;
+	}
+	
+	public char[] getInputChars(IStrategoTerm asfix) {
+		return inputCharMap.get(asfix);
+	}
+	
+	public ATerm getInputTerm(IStrategoTerm asfix) {
+		return inputTermMap.get(asfix);
+	}
+}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatLibrary.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatLibrary.java	2009-09-07 09:04:39 UTC (rev 19933)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatLibrary.java	2009-09-07 10:16:32 UTC (rev 19934)
@@ -7,7 +7,7 @@
  */
 public class CompatLibrary extends AbstractStrategoOperatorRegistry {
 	
-	private static final String REGISTRY_NAME = "compat";
+	protected static final String REGISTRY_NAME = "compat";
 	
 	public CompatLibrary() {
 		add(new SSL_EXT_call());

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str	2009-09-07 09:04:39 UTC (rev 19933)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str	2009-09-07 10:16:32 UTC (rev 19934)
@@ -13,6 +13,8 @@
 
 strategies // parsing and parse tables
 
+  // TODO: new "jsglr enable recovery" strategy
+
   /**
    * @type SerializedParseTable -> ParseTable
    */

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java	2009-09-07 09:04:39 UTC (rev 19933)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java	2009-09-07 10:16:32 UTC (rev 19934)
@@ -1,14 +1,21 @@
 package org.strategoxt.lang.compat.sglr;
 
+import java.io.ByteArrayInputStream;
+import java.io.IOException;
+import java.io.InputStream;
+
 import org.spoofax.interpreter.adapter.aterm.WrappedATermFactory;
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.library.jsglr.JSGLR_parse_string_pt;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.TermConverter;
 import org.spoofax.jsglr.Disambiguator;
 import org.spoofax.jsglr.ParseTable;
 import org.spoofax.jsglr.SGLR;
+import org.spoofax.jsglr.SGLRException;
 import org.strategoxt.lang.compat.override.jsglr_parser_compat.jsglr_parser_compat;
 
-import aterm.ATermFactory;
-
 /**
  * Extends the JSGLR_parse_string_pt primitive with support
  * for filter settings.
@@ -22,17 +29,29 @@
 	public static final String NAME = "JSGLR_parse_string_pt_compat"; 
 	
 	private final Disambiguator filterSettings;
+	
+	private final WrappedATermFactory factory;
 
 	protected JSGLR_parse_string_pt_compat(WrappedATermFactory factory, Disambiguator filterSettings) {
-		super(factory, NAME, 0, 0);
+		super(factory, NAME, 1, 4);
 		this.filterSettings = filterSettings;
+		this.factory = factory;
 	}
-
+	
 	@Override
-	protected SGLR makeSGLR(ATermFactory factory, ParseTable table) {
-		SGLR result = new SGLR(factory, table);
-		result.setDisambiguator(JSGLR_parse_string_pt_compat.this.filterSettings);
-		return result;		
+	public IStrategoTerm call(IContext env, String input,
+			ParseTable table, String startSymbol, boolean outputWrappedATerm)
+			throws InterpreterException, IOException, SGLRException {
+		
+		SGLR parser = new SGLR(factory.getFactory(), table);
+		parser.setDisambiguator(filterSettings);
+		
+		InputStream is = new ByteArrayInputStream(input.getBytes());
+		IStrategoTerm result = factory.wrapTerm(parser.parse(is, startSymbol));
+		if (!outputWrappedATerm)
+			result = TermConverter.convert(env.getFactory(), result);
+		
+		return result;
 	}
 
 }



From L.C.L.Kats at tudelft.nl  Mon Sep  7 12:26:59 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Sep 2009 10:26:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19935 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.ecj/src/org/spoofax/interpreter/adapter/ecj
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms
	strc-java/trunk/java
	strc-java/trunk/java/runtime/org/strategoxt/lang
	strc-java/trunk/java/runtime/org/strategoxt/lang/terms
	strc-java/trunk/trans
Message-ID: <200909071026.n87AQxoC011875@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-07 10:26:59 +0000 (Mon, 07 Sep 2009)
New Revision: 19935

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19935&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.ecj/src/org/spoofax/interpreter/adapter/ecj/ECJFactory.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/IStrategoTermBuilder.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/_Fail.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/_Id.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java
   strc-java/trunk/java/spoofax-libs.jar
   strc-java/trunk/trans/s2j.str

Log:
Added a new IStrategoTermBuilder.makeListCons() method to replace the deprecated "makeList(head, tail)" method.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.ecj/src/org/spoofax/interpreter/adapter/ecj/ECJFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.ecj/src/org/spoofax/interpreter/adapter/ecj/ECJFactory.java	2009-09-07 10:16:32 UTC (rev 19934)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.ecj/src/org/spoofax/interpreter/adapter/ecj/ECJFactory.java	2009-09-07 10:26:59 UTC (rev 19935)
@@ -1926,9 +1926,14 @@
     	return makeList(terms.toArray(new IStrategoTerm[0]));
     }
     
-    public IStrategoList makeList(IStrategoTerm head, IStrategoList tail) {
+    @Deprecated
+    public final IStrategoList makeList(IStrategoTerm head, IStrategoList tail) {
+        return makeListCons(head, tail);
+    }
+    
+    public IStrategoList makeListCons(IStrategoTerm head, IStrategoList tail) {
         // TODO: handle list prepending in ECJFactory
-    	return tail.prepend(head);
+        return tail.prepend(head);
     }
 
     public IStrategoReal makeReal(double d) {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java	2009-09-07 10:16:32 UTC (rev 19934)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java	2009-09-07 10:26:59 UTC (rev 19935)
@@ -329,7 +329,12 @@
         return makeList(terms.toArray(EMPTY));
     }
     
-    public IStrategoList makeList(IStrategoTerm head, IStrategoList tail) {
+    @Deprecated
+    public final IStrategoList makeList(IStrategoTerm head, IStrategoList tail) {
+        return makeListCons(head, tail);
+    }
+    
+    public IStrategoList makeListCons(IStrategoTerm head, IStrategoList tail) {
         return new BasicStrategoList(head, tail, null);
     }
 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/IStrategoTermBuilder.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/IStrategoTermBuilder.java	2009-09-07 10:16:32 UTC (rev 19934)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/IStrategoTermBuilder.java	2009-09-07 10:26:59 UTC (rev 19935)
@@ -14,7 +14,11 @@
     
     public IStrategoConstructor makeConstructor(String string, int arity);
 
-    // TODO: Rename makeApl() IStrategoList overload to avoid accidental invocation
+    // TODO: Remove makeAppl() and makeList() overloads to avoid accidental invocation
+    
+    /**
+     * @deprecated Use {@link #makeAppl(IStrategoConstructor, IStrategoTerm...)} instead.
+     */
     @Deprecated
     public IStrategoAppl makeAppl(IStrategoConstructor ctr, IStrategoList kids);
     public IStrategoAppl makeAppl(IStrategoConstructor ctr, IStrategoTerm... terms);
@@ -25,10 +29,13 @@
     public IStrategoString makeString(String s);
     public IStrategoList makeList(IStrategoTerm... terms);
     public IStrategoList makeList(Collection<IStrategoTerm> terms);
-    
-    // TODO: Rename makeList() head/tail overload to avoid accidental invocation
+
+    /**
+     * @deprecated Use {@link #makeListCons(IStrategoTerm, IStrategoList)} instead. 
+     */
     @Deprecated
     public IStrategoList makeList(IStrategoTerm head, IStrategoList tail);
+    public IStrategoList makeListCons(IStrategoTerm head, IStrategoList tail);
     
     public IStrategoTerm annotateTerm(IStrategoTerm term, IStrategoList annotations);
 

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/_Fail.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/_Fail.java	2009-09-07 10:16:32 UTC (rev 19934)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/_Fail.java	2009-09-07 10:26:59 UTC (rev 19935)
@@ -8,6 +8,10 @@
 public class _Fail extends Strategy {
 	public static final _Fail instance = new _Fail();
 	
+	private _Fail() {
+		// Singleton class
+	}
+	
 	@Override
 	public IStrategoTerm invoke(Context context, IStrategoTerm current) {
 		return null;

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/_Id.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/_Id.java	2009-09-07 10:16:32 UTC (rev 19934)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/_Id.java	2009-09-07 10:26:59 UTC (rev 19935)
@@ -7,6 +7,10 @@
  */
 public class _Id extends Strategy {
 	public static final _Id instance = new _Id();
+	
+	private _Id() {
+		// Singleton class
+	}
 
 	@Override
 	public IStrategoTerm invoke(Context context, IStrategoTerm current) {

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java	2009-09-07 10:16:32 UTC (rev 19934)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java	2009-09-07 10:26:59 UTC (rev 19935)
@@ -143,7 +143,7 @@
     }
     
     @Override
-    public IStrategoList makeList(IStrategoTerm head, IStrategoList tail) {
+    public IStrategoList makeListCons(IStrategoTerm head, IStrategoList tail) {
     	int storageType = min(MY_STORAGE_TYPE, getStorageType(head, tail));
     	
     	if (head == null) return EMPTY_LIST;

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-09-07 10:16:32 UTC (rev 19934)
+++ strc-java/trunk/trans/s2j.str	2009-09-07 10:26:59 UTC (rev 19935)
@@ -1089,7 +1089,7 @@
   java-ConstructTerm :
     Op("Cons", [t1, t2]) -> 
     expr|[ 
-      (IStrategoTerm) termFactory.makeList(~expr:<java-construct-term> t1, e)
+      (IStrategoTerm) termFactory.makeListCons(~expr:<java-construct-term> t1, e)
     ]|
     with
       <java-construct-term> t2



From L.C.L.Kats at tudelft.nl  Mon Sep  7 15:22:43 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Sep 2009 13:22:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19936 - LennartKats -
	in spoofax-imp/trunk: . org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.editorservice/.externalToolBuilders
	org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.sdf/.externalToolBuilders
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
	org.strategoxt.imp.stratego_editor
	org.strategoxt.imp.stratego_editor/.externalToolBuilders
	org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor
Message-ID: <200909071322.n87DMhm4014431@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-07 13:22:43 +0000 (Mon, 07 Sep 2009)
New Revision: 19936

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19936&view=rev

Added:
   spoofax-imp/trunk/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego-Sugar build.xml.launch
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego build.xml.launch
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/EditorService build.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.project
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/Activator.java

Log:
Support command-line/batch building of editors using sdf2imp.jar.

Changes:

Copied: spoofax-imp/trunk/Makefile (from rev 19928, spoofax-imp/trunk/Makefile)
===================================================================
--- spoofax-imp/trunk/Makefile	                        (rev 0)
+++ spoofax-imp/trunk/Makefile	2009-09-07 13:22:43 UTC (rev 19936)
@@ -0,0 +1,15 @@
+all :
+	$(MAKE) -C org.strategoxt.imp.generator all
+	(cd org.strategoxt.imp.editors.editorservice && ant -Dexternaldef=../org.strategoxt.imp.generator/src/syntax/EditorService.def)
+	(cd org.strategoxt.imp.editors.sdf && ant)
+	(cd org.strategoxt.imp.stratego_editor && ant)
+
+check : all
+	$(MAKE) -C org.strategoxt.imp.generator check
+
+clean :
+	$(MAKE) -C org.strategoxt.imp.generator clean
+	$(MAKE) -C org.strategoxt.imp.editors.editorservice clean
+
+new-libs :
+	$(MAKE) -C org.strategoxt.imp.generator new-libs

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/EditorService build.xml.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/EditorService build.xml.launch	2009-09-07 10:26:59 UTC (rev 19935)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/.externalToolBuilders/EditorService build.xml.launch	2009-09-07 13:22:43 UTC (rev 19936)
@@ -22,12 +22,7 @@
 <mapAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_PROPERTIES">
 <mapEntry key="eclipse.running" value="true"/>
 <mapEntry key="externaldef" value="${workspace_loc:/org.strategoxt.imp.generator}/src/syntax/EditorService.def"/>
-<mapEntry key="eclipse.pdebuild.templates" value="/home/lk/opt/eclipse-3.4.2/plugins/org.eclipse.pde.build_3.4.1.R34x_v20081217/templates/"/>
-<mapEntry key="eclipse.home" value="/home/lk/opt/eclipse-3.4.2"/>
-<mapEntry key="eclipse.pdebuild.scripts" value="/home/lk/opt/eclipse-3.4.2/plugins/org.eclipse.pde.build_3.4.1.R34x_v20081217/scripts/"/>
-<mapEntry key="eclipse.pdebuild.home" value="/home/lk/opt/eclipse-3.4.2/plugins/org.eclipse.pde.build_3.4.1.R34x_v20081217/./"/>
 </mapAttribute>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="from-eclipse,"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.editorservice/build.xml}"/>
 <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml	2009-09-07 10:26:59 UTC (rev 19935)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml	2009-09-07 13:22:43 UTC (rev 19936)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
-<project name="EditorService" default="standalone">
+<project name="EditorService" default="all">
     
         <!-- Project directories -->
         <property name="trans" location="trans"/>
@@ -25,27 +25,28 @@
         <property name="build.strategoxt.sdf.imports" value=""/>
         <property name="build.strategoxt.strc.imports" value=""/>
         
-        <!-- Default target for building within Eclipse -->
-        <target name="from-eclipse" depends="strc,sdf2table,sdf2imp-eclipse"/>
+        <target name="all" depends="strc,sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
-        <!-- Default target for building outside of Eclipse -->
-        <target name="standalone" depends="strc,sdf2table,sdf2imp-standalone"/>
-        
         <target name="init">
             <mkdir dir="${build}"/>
             <mkdir dir="${dist}"/>
         </target>
         
-        <target name="sdf2imp-eclipse" depends="sdf2table">
+        <target name="sdf2imp.eclipse" depends="sdf2table" if="eclipse.running">
             <!-- HACK: Trigger the Eclipse builder rather than build it here -->
-            <!-- (if we did built it here, we'd have to use the -p option to -->
-            <!--  specify the parse table, and put the table in another dir  -->
+            <!-- (if we did do this here, we'd have to use the -p option to -->
+            <!--  specify the parse table, and put the table in another dir) -->
             <touch file="include/${esvmodule}.packed.esv"/>
             <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
         </target>
         
-        <target name="sdf2imp-standalone" depends="sdf2table">
-            <echo message="Only building from within Eclipse is implemented at this time"/>
+        <target name="sdf2imp.standalone" depends="sdf2table,aux-files" unless="eclipse.running">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
+            </java>
         </target>
     
         <target name="sdf2table" depends="make-permissive">
@@ -81,10 +82,11 @@
         </target>
 
         <target name="aux-files">
+            <property name="site" value="http://www.st.ewi.tudelft.nl/~kats/strategoxt/18a"/>
             <mkdir dir="aux"/>
-            <property name="site" value="http://www.st.ewi.tudelft.nl/~kats/strategoxt/18a"/>
             <get src="${site}/strategoxt.jar" dest="aux/strategoxt.jar" usetimestamp="true" ignoreerrors="true"/>
             <get src="${site}/make_permissive.jar" dest="aux/make_permissive.jar" usetimestamp="true" ignoreerrors="true"/>
+            <get src="${site}/sdf2imp.jar" dest="aux/sdf2imp.jar" usetimestamp="true" ignoreerrors="true"/>
         </target>
     
         <target name="pack-sdf" depends="init" unless="externaldef">

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.xml.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.xml.launch	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.xml.launch	2009-09-07 13:22:43 UTC (rev 19936)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/SDF/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/SDF/aux&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/SDF/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
+<listEntry value="/org.strategoxt.imp.editors.sdf/build.xml"/>
+</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
+<listEntry value="1"/>
+</listAttribute>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.editors.sdf"/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.sdf/build.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.editors.sdf}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.project
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.project	2009-09-07 10:26:59 UTC (rev 19935)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.project	2009-09-07 13:22:43 UTC (rev 19936)
@@ -4,6 +4,16 @@
       <name>org.strategoxt.imp.editors.sdf</name>
       <comment></comment>
       <buildSpec>
+		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&lt;project&gt;/.externalToolBuilders/SDF build.xml.launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
         <buildCommand>
           <name>org.eclipse.jdt.core.javabuilder</name>
           <arguments>
@@ -24,4 +34,4 @@
         <nature>org.eclipse.pde.PluginNature</nature>
         <nature>org.eclipse.jdt.core.javanature</nature>
       </natures>
-    </projectDescription>
\ No newline at end of file
+    </projectDescription>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml	2009-09-07 10:26:59 UTC (rev 19935)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml	2009-09-07 13:22:43 UTC (rev 19936)
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
-<project name="SDF" default="standalone">
+<project name="SDF" default="all">
     
-         <!-- Project directories -->
+        <!-- Project directories -->
         <property name="trans" location="trans"/>
         <property name="syntax" location="syntax"/>
         <property name="editor" location="editor"/>
@@ -14,41 +14,43 @@
         <property name="sdfmodule" value="SDF"/>
         <property name="esvmodule" value="SDF"/>
         <property name="strmodule" location="sdf"/>
-	    <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
+        <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
         
-        <!-- Pre-built .def location -->
+        <!-- External .def location (optional)
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        -->
         
         <!-- Environment configuration -->
         <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
-        <property name="build.strategoxt.sdf.imports"  value=""/>
+        <property name="build.strategoxt.sdf.imports" value=""/>
         <property name="build.strategoxt.strc.imports" value=""/>
         
-        <!-- Default target for building within Eclipse -->
-        <target name="from-eclipse" depends="strc,sdf2table,sdf2imp-eclipse"/>
+        <target name="all" depends="strc,sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
-        <!-- Default target for building outside of Eclipse -->
-        <target name="standalone" depends="strc,sdf2table,sdf2imp-standalone"/>
-        
         <target name="init">
             <mkdir dir="${build}"/>
             <mkdir dir="${dist}"/>
         </target>
         
-        <target name="sdf2imp-eclipse" depends="sdf2table">
+        <target name="sdf2imp.eclipse" depends="sdf2table" if="eclipse.running">
             <!-- HACK: Trigger the Eclipse builder rather than build it here -->
-            <!-- (if we did built it here, we'd have to use the -p option to -->
-            <!--  specify the parse table, and put the table in another dir  -->
+            <!-- (if we did do this here, we'd have to use the -p option to -->
+            <!--  specify the parse table, and put the table in another dir) -->
             <touch file="include/${esvmodule}.packed.esv"/>
             <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
         </target>
         
-        <target name="sdf2imp-standalone" depends="sdf2table">
-            <echo message="Only building from within Eclipse is implemented at this time"/>
+        <target name="sdf2imp.standalone" depends="sdf2table,aux-files" unless="eclipse.running">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
+            </java>
         </target>
     
         <target name="sdf2table" depends="make-permissive">
-            <apply executable="${build.strategoxt}/sdf2table" dest="${dist}" failonerror="true">
+            <apply executable="${build.strategoxt}/sdf2table" dest="include" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-o"/>
@@ -63,16 +65,29 @@
         
         <target name="make-permissive" depends="pack-sdf,copy-sdf">
             <dependset>
-                <srcfileset    file="include/${sdfmodule}.def"/>
+                <srcfileset file="include/${sdfmodule}.def"/>
                 <targetfileset file="include/${sdfmodule}-Permissive.def"/>
             </dependset>
+            <available file="include/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.real"/>
+        </target>
+    
+        <target name="make-permissive.real" unless="permissive-grammar.available" depends="aux-files">
             <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
                 <arg value="-i"/>
                 <arg value="${basedir}/include/${sdfmodule}.def"/>
                 <arg value="-o"/>
-            	<arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
+                <arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
             </java>
         </target>
+
+        <target name="aux-files">
+            <property name="site" value="http://www.st.ewi.tudelft.nl/~kats/strategoxt/18a"/>
+            <mkdir dir="aux"/>
+            <get src="${site}/strategoxt.jar" dest="aux/strategoxt.jar" usetimestamp="true" ignoreerrors="true"/>
+            <get src="${site}/make_permissive.jar" dest="aux/make_permissive.jar" usetimestamp="true" ignoreerrors="true"/>
+            <get src="${site}/sdf2imp.jar" dest="aux/sdf2imp.jar" usetimestamp="true" ignoreerrors="true"/>
+        </target>
     
         <target name="pack-sdf" depends="init" unless="externaldef">
             <dependset>
@@ -94,12 +109,12 @@
                 <mapper type="glob" from="*.sdf" to="*.def"/>
             </apply>
         </target>
-	
-	    <target name="copy-sdf" depends="init" if="externaldef">
+    
+        <target name="copy-sdf" depends="init" if="externaldef">
             <copy file="${externaldef}" todir="include"/>
         </target>
     
-        <target name="rtg2sig" depends="init,sdf2rtg">
+        <target name="rtg2sig" depends="init,sdf2rtg" if="strmodule.present" unless="external-def">
             <apply executable="${build.strategoxt}/rtg2sig" dest="${build}" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
@@ -111,12 +126,12 @@
             </apply>
         </target>
         
-        <target name="sdf2rtg" depends="init,pack-sdf">
+        <target name="sdf2rtg" depends="init,pack-sdf" if="strmodule.present" unless="external-def">
             <apply executable="${build.strategoxt}/sdf2rtg" dest="${build}" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-m"/>
-            	<arg value="${sdfmodule}"/>
+                <arg value="${sdfmodule}"/>
                 <arg value="-o"/>
                 <targetfile/>
                 
@@ -155,7 +170,7 @@
                 <srcfilelist dir="${build}" files="**/*.str"/>
                 <targetfileset dir="${dist}" includes="**/*"/>
             </dependset>
-            <apply executable="${build.strategoxt}/{strcExecutable}" dest="${dist}" failonerror="true">
+            <apply executable="${build.strategoxt}/{strcExecutable}" dest="include" failonerror="true">
                 <arg value=".str"/>
                 <arg value="-i"/>
                 <srcfile/>
@@ -203,4 +218,4 @@
         <target name="clean" description="clean up">
             <delete dir="${build}"/>
         </target>
-    </project>
+    </project>
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-07 10:26:59 UTC (rev 19935)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-07 13:22:43 UTC (rev 19936)
@@ -16,7 +16,7 @@
     <output-xml-file(|[], "build.xml")>
     %>
     <?xml version="1.0" encoding="UTF-8"?>
-    <project name="<%= name %>" default="standalone">
+    <project name="<%= name %>" default="all">
     
         <!-- Project directories -->
         <property name="trans" location="trans"/>
@@ -41,27 +41,28 @@
         <property name="build.strategoxt.sdf.imports"  value=""/>
         <property name="build.strategoxt.strc.imports" value=""/>
         
-        <!-- Default target for building within Eclipse -->
-        <target name="from-eclipse" depends="strc,sdf2table,sdf2imp-eclipse"/>
+        <target name="all" depends="strc,sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
-        <!-- Default target for building outside of Eclipse -->
-        <target name="standalone" depends="strc,sdf2table,sdf2imp-standalone"/>
-        
         <target name="init">
             <mkdir dir="${build}"/>
             <mkdir dir="${dist}"/>
         </target>
         
-        <target name="sdf2imp-eclipse" depends="sdf2table">
+        <target name="sdf2imp.eclipse" depends="sdf2table" if="eclipse.running">
             <!-- HACK: Trigger the Eclipse builder rather than build it here -->
-            <!-- (if we did built it here, we'd have to use the -p option to -->
+            <!-- (if we did do this here, we'd have to use the -p option to -->
             <!--  specify the parse table, and put the table in another dir) -->
             <touch file="include/${esvmodule}.packed.esv"/>
             <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
         </target>
         
-        <target name="sdf2imp-standalone" depends="sdf2table">
-            <echo message="Only building from within Eclipse is implemented at this time"/>
+        <target name="sdf2imp.standalone" depends="sdf2table,aux-files" unless="eclipse.running">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
+            </java>
         </target>
     
         <target name="sdf2table" depends="make-permissive">
@@ -101,6 +102,7 @@
             <mkdir dir="aux"/>
             <get src="${site}/strategoxt.jar" dest="aux/strategoxt.jar" usetimestamp="true" ignoreerrors="true"/>
             <get src="${site}/make_permissive.jar" dest="aux/make_permissive.jar" usetimestamp="true" ignoreerrors="true"/>
+            <get src="${site}/sdf2imp.jar" dest="aux/sdf2imp.jar" usetimestamp="true" ignoreerrors="true"/>
         </target>
     
         <target name="pack-sdf" depends="init" unless="externaldef">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2009-09-07 10:26:59 UTC (rev 19935)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2009-09-07 13:22:43 UTC (rev 19936)
@@ -42,7 +42,7 @@
 <booleanAttribute key=\"org.eclipse.jdt.launching.DEFAULT_CLASSPATH\" value=\"false\"/>
 <stringAttribute key=\"org.eclipse.jdt.launching.PROJECT_ATTR\" value=\"", project-name, "\"/>
 <stringAttribute key=\"org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER\" value=\"org.eclipse.ant.ui.AntClasspathProvider\"/>
-<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_ANT_TARGETS\" value=\"from-eclipse,\"/>
+<stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_ANT_TARGETS\" value=\"all,\"/>
 <stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE\" value=\"${project}\"/>
 <stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_LOCATION\" value=\"${workspace_loc:/", project-name, "/build.xml}\"/>
 <stringAttribute key=\"org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY\" value=\"${workspace_loc:/", project-name, "}\"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str	2009-09-07 10:26:59 UTC (rev 19935)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str	2009-09-07 13:22:43 UTC (rev 19936)
@@ -17,12 +17,12 @@
     copy-parse-table <+ xtc-ensure-file; create-parse-table <+ fatal-err(|"Could not copy or create parse table")
   
   copy-parse-table =
-    if not(<eq> (<ParseTable>, <parse-table-target>)) then
-      ParseTable;
-      if file-exists then
-        print-filename(|[], <parse-table-target>);
-        <copy-file> (<id>, <parse-table-target>)
-      end
+    <eq> (<ParseTable>, <parse-table-target>)
+  <+
+    ParseTable;
+    if file-exists then
+      print-filename(|[], <parse-table-target>);
+      <copy-file> (<id>, <parse-table-target>)
     end
     
   create-parse-table:

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-07 10:26:59 UTC (rev 19935)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-07 13:22:43 UTC (rev 19936)
@@ -118,8 +118,9 @@
 			try {
 				String jar1 = org.strategoxt.libstratego_lib.Main.class.getProtectionDomain().getCodeSource().getLocation().getFile();
 				String jar2 = make_permissive.class.getProtectionDomain().getCodeSource().getLocation().getFile();
-				assert jar1.endsWith(".jar") && jar2.endsWith(".jar");
-				sdf2imp.mainNoExit(context, "-m", languageName, "-pn", projectName, "-n", packageName, "-e", extensions, "-jar", jar1, jar2);
+				String jar3 = sdf2imp.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+				assert jar1.endsWith(".jar") && jar2.endsWith(".jar") && jar3.endsWith(".jar");
+				sdf2imp.mainNoExit(context, "-m", languageName, "-pn", projectName, "-n", packageName, "-e", extensions, "-jar", jar1, jar2, jar3);
 			} catch (StrategoErrorExit e) {
 				Environment.logException(e);
 				throw new StrategoException("Project builder failed: " + e.getMessage(), e);

Deleted: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego build.xml.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego build.xml.launch	2009-09-07 10:26:59 UTC (rev 19935)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego build.xml.launch	2009-09-07 13:22:43 UTC (rev 19936)
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
-<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
-<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
-<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/aux&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
-<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
-<listEntry value="/org.strategoxt.imp.stratego_editor/build.xml"/>
-</listAttribute>
-<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
-<listEntry value="1"/>
-</listAttribute>
-<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
-<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
-<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
-<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
-<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
-</listAttribute>
-<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
-<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
-<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.stratego_editor"/>
-<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="from-eclipse,"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.stratego_editor/build.xml}"/>
-<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.stratego_editor}"/>
-<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
-</launchConfiguration>

Copied: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego-Sugar build.xml.launch (from rev 19931, spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego build.xml.launch)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego-Sugar build.xml.launch	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego-Sugar build.xml.launch	2009-09-07 13:22:43 UTC (rev 19936)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/aux&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
+<listEntry value="/org.strategoxt.imp.stratego_editor/build.xml"/>
+</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
+<listEntry value="1"/>
+</listAttribute>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.stratego_editor"/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.stratego_editor/build.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.stratego_editor}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego-Sugar build.xml.launch
___________________________________________________________________
Added: svn:mergeinfo
   + 

Modified: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml	2009-09-07 10:26:59 UTC (rev 19935)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml	2009-09-07 13:22:43 UTC (rev 19936)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
-<project name="Stratego" default="standalone">
+<project name="Stratego-Sugar" default="all">
     
         <!-- Project directories -->
         <property name="trans" location="trans"/>
@@ -25,27 +25,28 @@
         <property name="build.strategoxt.sdf.imports" value=""/>
         <property name="build.strategoxt.strc.imports" value=""/>
         
-        <!-- Default target for building within Eclipse -->
-        <target name="from-eclipse" depends="strc,sdf2table,sdf2imp-eclipse"/>
+        <target name="all" depends="strc,sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         
-        <!-- Default target for building outside of Eclipse -->
-        <target name="standalone" depends="strc,sdf2table,sdf2imp-standalone"/>
-        
         <target name="init">
             <mkdir dir="${build}"/>
             <mkdir dir="${dist}"/>
         </target>
         
-        <target name="sdf2imp-eclipse" depends="sdf2table">
+        <target name="sdf2imp.eclipse" depends="sdf2table" if="eclipse.running">
             <!-- HACK: Trigger the Eclipse builder rather than build it here -->
-            <!-- (if we did built it here, we'd have to use the -p option to -->
-            <!--  specify the parse table, and put the table in another dir  -->
+            <!-- (if we did do this here, we'd have to use the -p option to -->
+            <!--  specify the parse table, and put the table in another dir) -->
             <touch file="include/${esvmodule}.packed.esv"/>
             <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
         </target>
         
-        <target name="sdf2imp-standalone" depends="sdf2table">
-            <echo message="Only building from within Eclipse is implemented at this time"/>
+        <target name="sdf2imp.standalone" depends="sdf2table,aux-files" unless="eclipse.running">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
+            </java>
         </target>
     
         <target name="sdf2table" depends="make-permissive">
@@ -82,8 +83,10 @@
 
         <target name="aux-files">
             <property name="site" value="http://www.st.ewi.tudelft.nl/~kats/strategoxt/18a"/>
+            <mkdir dir="aux"/>
             <get src="${site}/strategoxt.jar" dest="aux/strategoxt.jar" usetimestamp="true" ignoreerrors="true"/>
             <get src="${site}/make_permissive.jar" dest="aux/make_permissive.jar" usetimestamp="true" ignoreerrors="true"/>
+            <get src="${site}/sdf2imp.jar" dest="aux/sdf2imp.jar" usetimestamp="true" ignoreerrors="true"/>
         </target>
     
         <target name="pack-sdf" depends="init" unless="externaldef">

Modified: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/Activator.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/Activator.java	2009-09-07 10:26:59 UTC (rev 19935)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/Activator.java	2009-09-07 13:22:43 UTC (rev 19936)
@@ -7,9 +7,9 @@
 
 public class Activator extends PluginBase 
 { 
-  public static final String kPluginID = "Stratego";
+  public static final String kPluginID = "StrategoSugar";
 
-  public static final String kLanguageName = "Stratego";
+  public static final String kLanguageName = "StrategoSugar";
 
   protected static Activator sPlugin;
 



From L.C.L.Kats at tudelft.nl  Mon Sep  7 16:27:53 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Sep 2009 14:27:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19938 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.aterm
	spoofax/trunk/spoofax/org.spoofax.aterm/META-INF
	spoofax/trunk/spoofax/org.spoofax.aterm/src/aterm/pure
	spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl
	spoofax-imp/trunk/org.strategoxt.imp.stratego_editor
Message-ID: <200909071427.n87ERrTh015580@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-07 14:27:52 +0000 (Mon, 07 Sep 2009)
New Revision: 19938

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19938&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.project
   spoofax/trunk/spoofax/org.spoofax.aterm/META-INF/MANIFEST.MF
   spoofax/trunk/spoofax/org.spoofax.aterm/build.properties
   spoofax/trunk/spoofax/org.spoofax.aterm/src/aterm/pure/PureFactory.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java

Log:


Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.aterm/META-INF/MANIFEST.MF
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.aterm/META-INF/MANIFEST.MF	2009-09-07 14:09:23 UTC (rev 19937)
+++ spoofax/trunk/spoofax/org.spoofax.aterm/META-INF/MANIFEST.MF	2009-09-07 14:27:52 UTC (rev 19938)
@@ -15,5 +15,6 @@
  jjtraveler.util,
  shared
 Bundle-ClassPath: lib/jjtraveler-0.4.3.jar,
- lib/shared-objects-1.4.jar, aterm.jar
+ lib/shared-objects-1.4.jar,
+ src/
 Bundle-RequiredExecutionEnvironment: J2SE-1.5

Modified: spoofax/trunk/spoofax/org.spoofax.aterm/build.properties
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.aterm/build.properties	2009-09-07 14:09:23 UTC (rev 19937)
+++ spoofax/trunk/spoofax/org.spoofax.aterm/build.properties	2009-09-07 14:27:52 UTC (rev 19938)
@@ -1,7 +1,8 @@
 bin.includes = META-INF/,\
                lib/jjtraveler-0.4.3.jar,\
                lib/shared-objects-1.4.jar,\
-               aterm.jar
+               .,\
+               src/
 jars.compile.order = aterm.jar
-source.aterm.jar = src/
 output.aterm.jar = bin/
+source.. = src/

Modified: spoofax/trunk/spoofax/org.spoofax.aterm/src/aterm/pure/PureFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.aterm/src/aterm/pure/PureFactory.java	2009-09-07 14:09:23 UTC (rev 19937)
+++ spoofax/trunk/spoofax/org.spoofax.aterm/src/aterm/pure/PureFactory.java	2009-09-07 14:27:52 UTC (rev 19938)
@@ -22,6 +22,7 @@
 
 import java.io.BufferedInputStream;
 import java.io.BufferedReader;
+import java.io.EOFException;
 import java.io.FileInputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -817,6 +818,8 @@
             || last_char == '"'
             || last_char == '(') {
       return readFromTextFile(reader);
+    } else if (last_char == -1) {
+      throw new EOFException("Empty stream: could not read ATerm");
     } else {
       throw new IOException("Invalid ATerm.");
     }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java	2009-09-07 14:09:23 UTC (rev 19937)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java	2009-09-07 14:27:52 UTC (rev 19938)
@@ -152,7 +152,12 @@
         return makeList(terms.toArray(new IStrategoTerm[0]));
     }
    
-    public IStrategoList makeList(IStrategoTerm head, IStrategoList tail) {
+    @Deprecated
+    public final IStrategoList makeList(IStrategoTerm head, IStrategoList tail) {
+        return makeListCons(head, tail);
+    }
+   
+    public IStrategoList makeListCons(IStrategoTerm head, IStrategoList tail) {
         // TODO: Handle list prepending in factory
         return tail.prepend(head);
     }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java	2009-09-07 14:09:23 UTC (rev 19937)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java	2009-09-07 14:27:52 UTC (rev 19938)
@@ -7,6 +7,7 @@
  */
 package org.spoofax.interpreter.library.ssl;
 
+import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
@@ -38,6 +39,11 @@
         
         boolean closeIn = true;
         boolean closeOut = true;
+        
+        File file1 = agent.openFile(Tools.javaString(tvars[0]));
+        File file2 = agent.openFile(Tools.javaString(tvars[1]));
+        if (file1.exists() && file1.equals(file2))
+            return true;
 
         try {
             if (Tools.isTermString(tvars[0])) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.project
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.project	2009-09-07 14:09:23 UTC (rev 19937)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.project	2009-09-07 14:27:52 UTC (rev 19938)
@@ -10,7 +10,7 @@
 			<arguments>
 				<dictionary>
 					<key>LaunchConfigHandle</key>
-					<value>&lt;project&gt;/.externalToolBuilders/Stratego build.xml.launch</value>
+					<value>&lt;project&gt;/.externalToolBuilders/Stratego-Sugar build.xml.launch</value>
 				</dictionary>
 			</arguments>
 		</buildCommand>



From L.C.L.Kats at tudelft.nl  Mon Sep  7 16:52:21 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 07 Sep 2009 14:52:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19939 - LennartKats -
	in strc-java/trunk: . META-INF trans
Message-ID: <200909071452.n87EqLcB015953@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-07 14:52:21 +0000 (Mon, 07 Sep 2009)
New Revision: 19939

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19939&view=rev

Added:
   strc-java/trunk/trans/strj-parallel.str
Modified:
   strc-java/trunk/META-INF/MANIFEST.MF
   strc-java/trunk/build.properties
   strc-java/trunk/trans/Makefile.am
   strc-java/trunk/trans/s2j-options.str

Log:
Build tuning and added a strj-parallel file for easy strj+libstratego-parallel testing.

Changes:

Modified: strc-java/trunk/META-INF/MANIFEST.MF
===================================================================
--- strc-java/trunk/META-INF/MANIFEST.MF	2009-09-07 14:27:52 UTC (rev 19938)
+++ strc-java/trunk/META-INF/MANIFEST.MF	2009-09-07 14:52:21 UTC (rev 19939)
@@ -3,10 +3,56 @@
 Bundle-Name: Stratego/XT Java runtime
 Bundle-SymbolicName: org.strategoxt.strj;singleton:=true
 Bundle-Version: 0.1.1
-Export-Package: org.strategoxt,
+Export-Package: .,
+ aterm,
+ aterm.pure,
+ aterm.pure.binary,
+ aterm.pure.binary.test,
+ aterm.stream,
+ aterm.test,
+ jjtraveler,
+ jjtraveler.graph,
+ jjtraveler.reflective,
+ jjtraveler.util,
+ junit.awtui,
+ junit.extensions,
+ junit.framework,
+ junit.runner,
+ junit.swingui,
+ junit.swingui.icons,
+ junit.textui,
+ org.spoofax,
+ org.spoofax.interpreter,
+ org.spoofax.interpreter.adapter.aterm,
+ org.spoofax.interpreter.core,
+ org.spoofax.interpreter.library,
+ org.spoofax.interpreter.library.java,
+ org.spoofax.interpreter.library.jsglr,
+ org.spoofax.interpreter.library.ssl,
+ org.spoofax.interpreter.stratego,
+ org.spoofax.interpreter.terms,
+ org.spoofax.interpreter.test,
+ org.spoofax.interpreter.test.language,
+ org.spoofax.interpreter.test.library,
+ org.spoofax.jsglr,
+ org.spoofax.jsglr.rnsglr,
+ org.spoofax.jsglr.tests,
+ org.spoofax.xlet,
+ org.strategoxt,
  org.strategoxt.lang,
  org.strategoxt.lang.compat,
- org.strategoxt.lang.parallel,
+ org.strategoxt.lang.compat.libstratego_rtg_compat,
+ org.strategoxt.lang.compat.libstrc_compat,
+ org.strategoxt.lang.compat.override,
+ org.strategoxt.lang.compat.override.jsglr_parser,
+ org.strategoxt.lang.compat.override.jsglr_parser_compat,
+ org.strategoxt.lang.compat.override.libstratego_aterm_compat,
+ org.strategoxt.lang.compat.override.performance_tweaks,
+ org.strategoxt.lang.compat.override.strc_compat,
+ org.strategoxt.lang.compat.override.xtc_compat,
+ org.strategoxt.lang.compat.sglr,
+ org.strategoxt.lang.parallel.collections,
+ org.strategoxt.lang.parallel.tables.attic,
  org.strategoxt.lang.terms,
  org.strategoxt.libjava_front,
  org.strategoxt.libstratego_aterm,
@@ -17,14 +63,14 @@
  org.strategoxt.libstratego_sglr,
  org.strategoxt.libstratego_tool_doc,
  org.strategoxt.libstratego_xtc,
- org.strategoxt.libstrc
+ org.strategoxt.libstrc,
+ org.strategoxt.strj,
+ shared
 Require-Bundle: org.spoofax.aterm,
  org.spoofax.interpreter.core;bundle-version="0.3.13",
  org.spoofax.interpreter.adapter.aterm;bundle-version="0.3.11",
  org.spoofax.jsglr;bundle-version="0.2.1",
  org.spoofax.interpreter.library.jsglr;bundle-version="0.3.9"
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
-Bundle-ActivationPolicy: lazy
-Bundle-ClassPath: .,
- java/runtime/,
- java/strategoxt.jar
+Bundle-ClassPath: ., java/runtime/,
+   java/strategoxt.jar

Modified: strc-java/trunk/build.properties
===================================================================
--- strc-java/trunk/build.properties	2009-09-07 14:27:52 UTC (rev 19938)
+++ strc-java/trunk/build.properties	2009-09-07 14:52:21 UTC (rev 19939)
@@ -1,6 +1,5 @@
-source.. = java/runtime,\
-           java/compiler
 bin.includes = META-INF/,\
-               .,\
                java/runtime/,\
-               java/strategoxt.jar
+               strategoxt.jar,\
+               .
+source.. = java/runtime/

Modified: strc-java/trunk/trans/Makefile.am
===================================================================
--- strc-java/trunk/trans/Makefile.am	2009-09-07 14:27:52 UTC (rev 19938)
+++ strc-java/trunk/trans/Makefile.am	2009-09-07 14:52:21 UTC (rev 19939)
@@ -42,6 +42,9 @@
 strj.java : strj.ctree strj
 	./strj -i $< -o $@ -la stratego-lib -la stratego-xtc -la stratego-gpp -la strc -la java-front -m main-strj
 
+strj_parallel.java : strj-parallel.str strj
+	strj -la org.strategoxt.strj -la stratego-parallel -i strj-parallel.str
+
 %.java : %.str strj
 	./strj -i $< -o $@ --verbose 2 -la stratego-lib -la java-front
 

Modified: strc-java/trunk/trans/s2j-options.str
===================================================================
--- strc-java/trunk/trans/s2j-options.str	2009-09-07 14:27:52 UTC (rev 19938)
+++ strc-java/trunk/trans/s2j-options.str	2009-09-07 14:52:21 UTC (rev 19939)
@@ -15,7 +15,7 @@
   s2j-library-options =
     ArgOption(
       "-p"
-    , if is-substring(!"/") + is-substring("-") then
+    , if is-substring(!"/") + is-substring(!"-") then
         fatal-err(|"Illegal package name")
       end
     ; <set-config> ("-p", <id>); !()
@@ -28,7 +28,7 @@
       else
         <post-extend-config> ("-la", [<translate-default-library>]); !()
       end
-    , !"-la <name>         Include library <name>"
+    , !"-la <name>         Include library in package <name>"
     )
   + Option(
       "--library" + "--lib"
@@ -53,7 +53,7 @@
       "--stacktrace" + "-s"
     , <set-config> ("--stacktrace", <string-to-int; (0 + 1 + 2)>); !()
     , <conc-strings> ("--stacktrace i | -s i  Enable stacktracing ",
-                      "(0 = no, 1 = always [default], 2 = only if assertions (java -ea) disabled for a class)")
+                      "(0 = no, 1 = always [default], 2 = only if assertions (java -ea) enabled for a class)")
     )
   + ArgOption(
       "-D"

Added: strc-java/trunk/trans/strj-parallel.str
===================================================================
--- strc-java/trunk/trans/strj-parallel.str	                        (rev 0)
+++ strc-java/trunk/trans/strj-parallel.str	2009-09-07 14:52:21 UTC (rev 19939)
@@ -0,0 +1,12 @@
+module strj-parallel
+
+imports
+  // org.strategoxt.strj
+  // org.strategoxt.libstratego_parallel
+
+strategies
+
+  main-strj-parallel =
+    main-strj
+
+  external main-strj(|)



From L.C.L.Kats at tudelft.nl  Tue Sep  8 14:24:49 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 08 Sep 2009 12:24:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19940 - LennartKats -
	in strc-java/trunk: java/runtime/org/strategoxt
	java/runtime/org/strategoxt/lang trans
Message-ID: <200909081224.n88COnhf001519@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-08 12:24:49 +0000 (Tue, 08 Sep 2009)
New Revision: 19940

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19940&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java
   strc-java/trunk/trans/java-postprocess.str
   strc-java/trunk/trans/s2j.str

Log:
- Fixed operator registration in HybridInterpreter
- Now using String literals instead of class literals for registering strategies in the HybridInterpreter

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-07 14:52:21 UTC (rev 19939)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-08 12:24:49 UTC (rev 19940)
@@ -23,7 +23,7 @@
  */
 public class HybridInterpreter extends Interpreter {
 	
-	private final Context compiledContext;
+	private final HybridCompiledContext compiledContext;
 
 	public HybridInterpreter() {
 		this(new BAFBasicTermFactory());
@@ -36,10 +36,15 @@
 	public HybridInterpreter(ITermFactory termFactory, ITermFactory programFactory) {
 		super(termFactory, programFactory);
 		
-		compiledContext = new Context(termFactory);
+		compiledContext = new HybridCompiledContext(termFactory);
 		registerLibraries();
 	}
 	
+	@Override
+	protected org.spoofax.interpreter.core.Context createContext(ITermFactory termFactory, ITermFactory programFactory) {
+		return new HybridContext(termFactory, programFactory);
+	}
+	
 	protected void registerLibraries() {
 		IContext context = getContext();
 		Context compiledContext = getCompiledContext();
@@ -57,20 +62,57 @@
 		org.strategoxt.libstrc.Main.registerInterop(context, compiledContext);
 	}
 	
-	public Context getCompiledContext() {
+	public final Context getCompiledContext() {
 		return compiledContext;
 	}
 	
-	@Override
-	public void addOperatorRegistry(IOperatorRegistry or) {
-		getCompiledContext().addOperatorRegistry(or);
-		getContext().addOperatorRegistry(or);
+	/**
+	 * A hybrid interpreter context.
+	 * 
+	 * @author Lennart Kats <lennart add lclnet.nl>
+	 */
+	private class HybridContext extends org.spoofax.interpreter.core.Context {
+		
+		public HybridContext(ITermFactory termFactory, ITermFactory programFactory) {
+			super(termFactory, programFactory);
+		}
+		
+		@Override
+		public void addOperatorRegistry(IOperatorRegistry or) {
+			super.addOperatorRegistry(or);
+			compiledContext.internalAddOperatorRegistry(or);
+		}
+		
+		@Override @Deprecated
+		public void addOperatorRegistry(String domain, IOperatorRegistry or) {
+			super.addOperatorRegistry(domain, or);
+			compiledContext.internalAddOperatorRegistry(or);
+		}
+		
+		protected void internalAddOperatorRegistry(IOperatorRegistry or) {
+			super.addOperatorRegistry(or);
+		}
 	}
 	
-	@Deprecated
-	@Override
-	public void addOperatorRegistry(String domainName, IOperatorRegistry or) {
-		getCompiledContext().addOperatorRegistry(or);
-		getContext().addOperatorRegistry(or);
+	/**
+	 * A hybrid compiled Stratego context.
+	 * 
+	 * @author Lennart Kats <lennart add lclnet.nl>
+	 */
+	private class HybridCompiledContext extends Context {
+		
+		public HybridCompiledContext(ITermFactory factory) {
+			super(factory);
+		}
+		
+		@Override
+		public void addOperatorRegistry(IOperatorRegistry or) {
+			super.addOperatorRegistry(or);
+			((HybridContext) getContext()).internalAddOperatorRegistry(or);
+		}
+		
+		protected void internalAddOperatorRegistry(IOperatorRegistry or) {
+			super.addOperatorRegistry(or);
+		}
 	}
 }

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-09-07 14:52:21 UTC (rev 19939)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-09-08 12:24:49 UTC (rev 19940)
@@ -117,7 +117,7 @@
 		return operatorRegistryMap.get(domain);
 	}
 
-    public final void addOperatorRegistry(IOperatorRegistry or) {
+    public void addOperatorRegistry(IOperatorRegistry or) {
         IOperatorRegistry previous = operatorRegistryMap.put(or.getOperatorRegistryName(), or);
         if (previous == null) {
         	operatorRegistries.add(or);

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java	2009-09-07 14:52:21 UTC (rev 19939)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java	2009-09-08 12:24:49 UTC (rev 19940)
@@ -26,21 +26,24 @@
 	
 	private final VarScope scope;
 	
-	private final Class<? extends Strategy> strategyClass;
+	private final String strategyClassName;
 	
 	private Strategy strategy;
 
-	public InteropStrategyDef(Class<? extends Strategy> strategyClass, IContext context, Context compiledContext) {
-		this.strategyClass = strategyClass;
+	public InteropStrategyDef(Strategy strategy, IContext context, Context compiledContext) {
+		this.strategyClassName = null;
 		this.compiledContext = compiledContext;
 		this.scope = context.getVarScope();
+		this.strategy = strategy;
 	}
 
-	public InteropStrategyDef(Strategy strategy, IContext context, Context compiledContext) {
-		this.strategyClass = null;
+	/**
+	 * Creates a new InteropStrategyDef that dynamically loads the specified strategy class.
+	 */
+	public InteropStrategyDef(String strategyClassName, IContext context, Context compiledContext) {
+		this.strategyClassName = strategyClassName;
 		this.compiledContext = compiledContext;
 		this.scope = context.getVarScope();
-		this.strategy = strategy;
 	}
 
 	public static SDefT[] toInteropStrategyDefs(Strategy[] strategies, IContext context, Context compiledContext) {
@@ -164,8 +167,10 @@
 	public Strategy getStrategy() {
 		if (strategy == null) {
 			try {
-				// TODO: is this a good performance trade off??
+				Class<?> strategyClass = Class.forName(strategyClassName);
 				strategy = (Strategy) strategyClass.getField("instance").get(null);
+			} catch (ClassNotFoundException e) {
+				throw new StrategoException("Unable to instantiate compiled strategy", e);
 			} catch (IllegalAccessException e) {
 				throw new StrategoException("Unable to instantiate compiled strategy", e);
 			} catch (IllegalArgumentException e) {

Modified: strc-java/trunk/trans/java-postprocess.str
===================================================================
--- strc-java/trunk/trans/java-postprocess.str	2009-09-07 14:52:21 UTC (rev 19939)
+++ strc-java/trunk/trans/java-postprocess.str	2009-09-08 12:24:49 UTC (rev 19940)
@@ -111,21 +111,23 @@
     | member-classes
     ]
     with
-      (member-classes, members') := <partition(to-compilation-unit(|pkgname, imports, mod*))> members
+      (member-classes, members') := <partition(to-compilation-unit(|pkgname, imports))> members
 
-  to-compilation-unit(|pkgname, imports, mod*) :
+  to-compilation-unit(|pkgname, imports) :
     type-dec |[
-      mod2* class x extends y {
+      mod* class x extends y {
         ~*members
       }
     ]| ->
     compilation-unit |[
       ~package-dec?: pkgname
       ~import-dec*: imports
-      mod* class x extends y {
+      mod2* class x extends y {
         ~*members
       }
     ]|
+    with
+      mod2* := <filter(Public + Abstract + Final)> mod*
     
   java-add-alias-classes =
     try(java-add-alias-class(!"Main"))

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-09-07 14:52:21 UTC (rev 19939)
+++ strc-java/trunk/trans/s2j.str	2009-09-08 12:24:49 UTC (rev 19940)
@@ -181,7 +181,7 @@
      ~*function-defs
      ~*lifted-defs
 
-     ~register
+     ~*register
      }
   ]|
   with 
@@ -287,28 +287,51 @@
     ; main   := <get-config <+ !"main"> "-m"
     ; x_main := <conc-strings> (<jify> main, "_0_0")
   
-  // TODO: do interop strategy additions in an on-demand fashion
-  //       (need to make a custom VarScope class to do so)
+  // TODO: do interop strategy additions in a fully on-demand fashion
+  //       (need to adapt VarScope class to do so)
   java-register-method : 
     defs ->
-    |[
-      public static void registerInterop(final org.spoofax.interpreter.core.IContext context, final Context compiledContext) {
-        new Runnable() { // Move these many literals and statements to another, lazily loaded class
-          ~*<java-split-method>  |[
-            public void run() {
-              bstm*
-            }
-          ]|
-        }.run();
+    class-body-dec* |[
+      public static void registerInterop(org.spoofax.interpreter.core.IContext context, Context compiledContext) {
+        InteropRegisterer.registerLazy(context, compiledContext, context.getVarScope());
       }
+      
+      // Put these many literals and statements to another, lazily loaded class
+      protected static class InteropRegisterer extends Object { // (header matched by java-split-class)
+        ~*<java-split-method>  |[
+          public static void register(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope) {
+            compiledContext.registerComponent("~x_name");
+            bstm1*
+          }
+        ]|
+        ~*<java-split-method>  |[
+          public static void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope) {
+            compiledContext.registerComponent("~x_name");
+            bstm2*
+          }
+        ]|
+      }
     ]|
     with
-      bstm* := <filter(java-register-strategy)> defs
+      // HACK: non-lazy defs are used only to trick javac to compile everything atm
+      bstm1*  := <filter(java-register-strategy)> defs
+    ; bstm2*  := <filter(java-register-strategy-lazy)> defs
+    ; x_name := <ApplicationName>
 
   java-register-strategy :
     SDefT(x,_,_,_) ->
-    |[ context.getVarScope().addSVar("~x", new InteropStrategyDef(x.class, context, compiledContext)); ]|
+    |[ varScope.addSVar("~x", new InteropStrategyDef(x.instance, context, compiledContext)); ]|
 
+  java-register-strategy-lazy :
+    SDefT(x,_,_,_) ->
+    |[ varScope.addSVar("~x", new InteropStrategyDef("~y", context, compiledContext)); ]|
+    with
+      y := <conc-strings> (<get-config> "-p", ".", x)
+    <+
+      // TODO: test this
+      //       would it have to be x.isntance instead?
+      y := <conc-strings> (<ApplicationName>, "$", x)
+
 rules
 
   translate-constant-definition : // TODO: check if contant strategy definition name not taken



From L.C.L.Kats at tudelft.nl  Tue Sep  8 14:50:39 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 08 Sep 2009 12:50:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19941 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
Message-ID: <200909081250.n88CodUw001713@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-08 12:50:39 +0000 (Tue, 08 Sep 2009)
New Revision: 19941

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19941&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Match.java

Log:
Added BLOB support to Match.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Match.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Match.java	2009-09-08 12:24:49 UTC (rev 19940)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Match.java	2009-09-08 12:50:39 UTC (rev 19941)
@@ -410,12 +410,49 @@
             return matchTuple(env, (IStrategoTuple) t, p);
         case IStrategoTerm.REF:
             return matchRef(env, (IStrategoRef)t, p);
+        case IStrategoTerm.BLOB:
+            return matchBlob(env, t, p);
         default:
             throw new InterpreterException("Unsupported term type : "
                                            + t.getClass().toString() + " [" + t.getTermType() + "]");
         }
     }
 
+    private Results matchBlob(IContext env, IStrategoTerm t, IStrategoAppl p) throws InterpreterException {
+        if (DebugUtil.isDebugging()) {
+            debug("term is Blob");
+        }
+        if (Tools.isAnno(p, env)) {
+            return matchAnyAnno(env, t, p);
+        }
+        else if (Tools.isWld(p, env)) {
+            return matchAnyWld(p);
+        }
+        else if (Tools.isAs(p, env)) {
+            return matchCompoundAs(env, t, p);
+        }
+        else if (Tools.isVar(p, env)) {
+            return matchAnyVar(t, p);
+        }
+        else if (Tools.isExplode(p, env)) {
+            return null; // FIXME: explode blobs?
+        } 
+        else if (Tools.isStr(p, env)) {
+            return null;
+        }
+        else if (Tools.isInt(p, env)) {
+            return null;
+        }
+        else if (Tools.isReal(p, env)) {
+            return null;
+        }
+        else if (Tools.isOp(p, env)) {
+            return null;
+        }
+
+        throw new InterpreterException("Unknown Tuple case '" + p + "'");
+    }
+
     private Results matchRef(IContext env, IStrategoRef ref, IStrategoAppl p) {
         throw new NotImplementedException();
     }



From L.C.L.Kats at tudelft.nl  Tue Sep  8 15:27:44 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 08 Sep 2009 13:27:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19942 - LennartKats -
	strc-java/trunk/trans
Message-ID: <200909081327.n88DRi39002217@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-08 13:27:44 +0000 (Tue, 08 Sep 2009)
New Revision: 19942

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19942&view=rev

Modified:
   strc-java/trunk/trans/s2j.str

Log:
Forgot to call init() in registerInterop et al :o

Changes:

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-09-08 12:50:39 UTC (rev 19941)
+++ strc-java/trunk/trans/s2j.str	2009-09-08 13:27:44 UTC (rev 19942)
@@ -301,12 +301,14 @@
         ~*<java-split-method>  |[
           public static void register(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope) {
             compiledContext.registerComponent("~x_name");
+            x_name.init(compiledContext);
             bstm1*
           }
         ]|
         ~*<java-split-method>  |[
           public static void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope) {
             compiledContext.registerComponent("~x_name");
+            x_name.init(compiledContext);
             bstm2*
           }
         ]|



From L.C.L.Kats at tudelft.nl  Tue Sep  8 15:41:19 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 08 Sep 2009 13:41:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19943 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <200909081341.n88DfJgf002335@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-08 13:41:19 +0000 (Tue, 08 Sep 2009)
New Revision: 19943

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19943&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-08 13:27:44 UTC (rev 19942)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-08 13:41:19 UTC (rev 19943)
@@ -94,6 +94,10 @@
                 <arg value="${basedir}/include/${sdfmodule}.def"/>
                 <arg value="-o"/>
                 <arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
+                <arg value="--open-insertions"/>
+                <arg value="on"/>
+                <arg value="--optimize"/>
+                <arg value="off"/>
             </java>
         </target>
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str	2009-09-08 13:27:44 UTC (rev 19942)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str	2009-09-08 13:41:19 UTC (rev 19943)
@@ -38,7 +38,7 @@
     with
       output := <permissive-grammar-target>;
       print-filename(|[], output);
-      args   := ["-i", input, "-o", output];
+      args   := ["-i", input, "-o", output, "--open-insertions", "on", "--optimize", "on"];
       if-java-platform(
         <call> ("org.strategoxt.permissivegrammars.main-make-permissive", args)
       );



From L.C.L.Kats at tudelft.nl  Tue Sep  8 16:15:11 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 08 Sep 2009 14:15:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19944 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.generator/src/sdf2imp
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.stratego_editor
Message-ID: <200909081415.n88EFBSF002878@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-08 14:15:11 +0000 (Tue, 08 Sep 2009)
New Revision: 19944

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19944&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml

Log:
Don't copy a parse table to itself.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml	2009-09-08 13:41:19 UTC (rev 19943)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml	2009-09-08 14:15:11 UTC (rev 19944)
@@ -45,7 +45,7 @@
                 <arg value="-i"/>
                 <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
                 <arg value="-p"/>
-                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
+                <arg value="None"/>
             </java>
         </target>
     
@@ -218,4 +218,4 @@
         <target name="clean" description="clean up">
             <delete dir="${build}"/>
         </target>
-    </project>
\ No newline at end of file
+    </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml	2009-09-08 13:41:19 UTC (rev 19943)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml	2009-09-08 14:15:11 UTC (rev 19944)
@@ -45,7 +45,7 @@
                 <arg value="-i"/>
                 <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
                 <arg value="-p"/>
-                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
+                <arg value="None"/>
             </java>
         </target>
     
@@ -218,4 +218,4 @@
         <target name="clean" description="clean up">
             <delete dir="${build}"/>
         </target>
-    </project>
\ No newline at end of file
+    </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str	2009-09-08 13:41:19 UTC (rev 19943)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/options.str	2009-09-08 14:15:11 UTC (rev 19944)
@@ -25,7 +25,7 @@
     ArgOption(
       "-p"
     , rules(ParseTable := <id>)
-    , !"-p <parse table>.tbl  Set parse table (optional)"
+    , !"-p <parse table>.tbl  Set parse table (optional; None to skip table generation)"
     )
 
   extensions-option =

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-08 13:41:19 UTC (rev 19943)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-08 14:15:11 UTC (rev 19944)
@@ -61,7 +61,7 @@
                 <arg value="-i"/>
                 <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
                 <arg value="-p"/>
-                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
+                <arg value="None"/>
             </java>
         </target>
     

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str	2009-09-08 13:41:19 UTC (rev 19943)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str	2009-09-08 14:15:11 UTC (rev 19944)
@@ -17,8 +17,10 @@
     copy-parse-table <+ xtc-ensure-file; create-parse-table <+ fatal-err(|"Could not copy or create parse table")
   
   copy-parse-table =
-    <eq> (<ParseTable>, <parse-table-target>)
+    <debug(!"!!!"); eq> (<ParseTable; abspath>, <parse-table-target; abspath>) // skip copying
   <+
+    ParseTable => "None" // skip copying
+  <+
     ParseTable;
     if file-exists then
       print-filename(|[], <parse-table-target>);

Modified: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml	2009-09-08 13:41:19 UTC (rev 19943)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/build.xml	2009-09-08 14:15:11 UTC (rev 19944)
@@ -45,7 +45,7 @@
                 <arg value="-i"/>
                 <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
                 <arg value="-p"/>
-                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
+                <arg value="None"/>
             </java>
         </target>
     
@@ -218,4 +218,4 @@
         <target name="clean" description="clean up">
             <delete dir="${build}"/>
         </target>
-    </project>
\ No newline at end of file
+    </project>



From L.C.L.Kats at tudelft.nl  Tue Sep  8 16:15:47 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 08 Sep 2009 14:15:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19945 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl
Message-ID: <200909081415.n88EFlh5002887@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-08 14:15:47 +0000 (Tue, 08 Sep 2009)
New Revision: 19945

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19945&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java

Log:
SSL_copy: don't empty files that are copied to themselves.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java	2009-09-08 14:15:11 UTC (rev 19944)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java	2009-09-08 14:15:47 UTC (rev 19945)
@@ -42,8 +42,12 @@
         
         File file1 = agent.openFile(Tools.javaString(tvars[0]));
         File file2 = agent.openFile(Tools.javaString(tvars[1]));
-        if (file1.exists() && file1.equals(file2))
-            return true;
+        try {
+            if (file1.exists() && file1.getCanonicalPath().equals(file2.getCanonicalPath()))
+                return true;
+        } catch (IOException e) {
+            // Ignore: files may not exist yet
+        }
 
         try {
             if (Tools.isTermString(tvars[0])) {



From L.C.L.Kats at tudelft.nl  Tue Sep  8 16:46:21 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 08 Sep 2009 14:46:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19946 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	parser parser/tokens services
Message-ID: <200909081446.n88EkLFW003267@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-08 14:46:21 +0000 (Tue, 08 Sep 2009)
New Revision: 19946

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19946&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenIterator.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java

Log:
Fixed coloration problem: last token in AST is not always the last token in a file.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2009-09-08 14:15:47 UTC (rev 19945)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2009-09-08 14:46:21 UTC (rev 19946)
@@ -5,8 +5,8 @@
 import java.io.InputStreamReader;
 import java.util.Iterator;
 
+import lpg.runtime.IPrsStream;
 import lpg.runtime.IToken;
-import lpg.runtime.PrsStream;
 
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;
@@ -261,7 +261,7 @@
 	}
 
 	public Iterator<IToken> getTokenIterator(IRegion region) {
-		PrsStream stream = forceGetParseStream();
+		IPrsStream stream = getParseStream();
 		
 		if (stream == null) {
 			return null;
@@ -278,9 +278,9 @@
 	 * Get a parse stream for the current file, enforcing a new parse
 	 * if it hasn't been parsed before.
 	 */
-	private PrsStream forceGetParseStream() {
+	public IPrsStream getParseStream() {
 		try {
-			PrsStream stream = parser.getParseStream();
+			IPrsStream stream = parser.getParseStream();
 			
 			if (stream == null) {
 				InputStream input = getResource().getContents();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenIterator.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenIterator.java	2009-09-08 14:15:47 UTC (rev 19945)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenIterator.java	2009-09-08 14:46:21 UTC (rev 19946)
@@ -3,8 +3,8 @@
 import java.util.Iterator;
 import java.util.List;
 
+import lpg.runtime.IPrsStream;
 import lpg.runtime.IToken;
-import lpg.runtime.PrsStream;
 
 import org.eclipse.jface.text.IRegion;
 
@@ -14,35 +14,35 @@
 public class SGLRTokenIterator implements Iterator<IToken> {
 	private final int lastIndex;
 	
-	private final PrsStream stream;
+	private final IPrsStream stream;
 	
 	private int index;
 	
-	public SGLRTokenIterator(PrsStream stream, IRegion region) {
+	public SGLRTokenIterator(IPrsStream stream, IRegion region) {
 		this.stream = stream;
 		index = getStartIndex(stream, region);
 		lastIndex = getLastIndex(stream, region);
 	}
 
-	private static int getStartIndex(PrsStream stream, IRegion region) {
+	private static int getStartIndex(IPrsStream stream, IRegion region) {
 		int result = Math.abs(stream.getTokenIndexAtCharacter(region.getOffset()));
 		if (result == 0)
 			result = 1; // skip reserved initial token
 		return result;
 	}
 
-	private static int getLastIndex(PrsStream stream, IRegion region) {
+	private static int getLastIndex(IPrsStream stream, IRegion region) {
 		List tokens = stream.getTokens();
 		int end = region.getOffset() + region.getLength() + 1;
 		
 		int result = stream.getStreamLength();
-		while (result-- > 0) {
+		while (--result > 0) {
 			IToken token = (IToken) tokens.get(result);
 			if (token.getKind() == TokenKind.TK_EOF.ordinal())
 				break;
 		}
 
-		while (result-- > 0) {
+		while (--result > 0) {
 			IToken token = (IToken) tokens.get(result);
 			if (token.getEndOffset() <= end)
 				break;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java	2009-09-08 14:15:47 UTC (rev 19945)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java	2009-09-08 14:46:21 UTC (rev 19946)
@@ -139,7 +139,7 @@
 		// Always damage the complete source
 		// TODO: Is always damaging the complete source still necessary??
 		IAst ast = (IAst) parseController.getCurrentAst();
-		return new Region(0, ast.getRightIToken().getEndOffset());
+		return new Region(0, ast.getRightIToken().getIPrsStream().getILexStream().getStreamLength() - 1);
 		// return seed;
 	}
 }



From L.C.L.Kats at tudelft.nl  Wed Sep  9 09:48:33 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Sep 2009 07:48:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19947 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <200909090748.n897mXGt015386@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-09 07:48:33 +0000 (Wed, 09 Sep 2009)
New Revision: 19947

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19947&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_at_end_1_0.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_filter_1_0.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_some.java

Log:
Added InteropStrategyDef body caching and fixed some deprecation warnings.

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java	2009-09-08 14:46:21 UTC (rev 19946)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java	2009-09-09 07:48:33 UTC (rev 19947)
@@ -29,6 +29,8 @@
 	private final String strategyClassName;
 	
 	private Strategy strategy;
+	
+	private transient org.spoofax.interpreter.stratego.Strategy strategyBody;
 
 	public InteropStrategyDef(Strategy strategy, IContext context, Context compiledContext) {
 		this.strategyClassName = null;
@@ -110,27 +112,30 @@
 	
 	@Override
 	public org.spoofax.interpreter.stratego.Strategy getBody() {
-		return new org.spoofax.interpreter.stratego.Strategy() {
-			public IConstruct eval(IContext env) throws InterpreterException {
-				return evaluate(env)
-					? getHook().pop().onSuccess(env)
-					: getHook().pop().onFailure(env);
-			}
-			
-			@Override
-			public boolean evaluate(IContext env) throws InterpreterException {
-				return InteropStrategyDef.this.evaluate(env);
-			}
-
-			public void prettyPrint(StupidFormatter fmt) {
-				InteropStrategyDef.this.prettyPrint(fmt);
-			}
-			
-			@Override
-			protected String getTraceName() {
-				return getName();
-			}
-		};
+		if (strategyBody == null) {
+			strategyBody = new org.spoofax.interpreter.stratego.Strategy() {
+				public IConstruct eval(IContext env) throws InterpreterException {
+					return evaluate(env)
+						? getHook().pop().onSuccess(env)
+						: getHook().pop().onFailure(env);
+				}
+				
+				@Override
+				public boolean evaluate(IContext env) throws InterpreterException {
+					return InteropStrategyDef.this.evaluate(env);
+				}
+	
+				public void prettyPrint(StupidFormatter fmt) {
+					InteropStrategyDef.this.prettyPrint(fmt);
+				}
+				
+				@Override
+				protected String getTraceName() {
+					return getName();
+				}
+			};
+		}
+		return strategyBody;
 	}
 	
 	@Override

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_at_end_1_0.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_at_end_1_0.java	2009-09-08 14:46:21 UTC (rev 19946)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_at_end_1_0.java	2009-09-09 07:48:33 UTC (rev 19947)
@@ -46,7 +46,7 @@
 		ITermFactory factory = context.getFactory();
 		IStrategoList result = tail;
 		for (int i = prefixEnd - 1; i >= 0; i--) {
-			result = factory.makeList(prefix[i], result);
+			result = factory.makeListCons(prefix[i], result);
 		}
 		return result;
 	}
@@ -58,7 +58,7 @@
 		} else {
 			IStrategoList tail = atEndMaintainAnnos(context, list.tail(), s);
 			if (tail == null) return null;
-			IStrategoTerm result = context.getFactory().makeList(list.head(), tail);
+			IStrategoTerm result = context.getFactory().makeListCons(list.head(), tail);
 			return (IStrategoList) context.getFactory().annotateTerm(result, list.getAnnotations());
 		}
 	}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_filter_1_0.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_filter_1_0.java	2009-09-08 14:46:21 UTC (rev 19946)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_filter_1_0.java	2009-09-09 07:48:33 UTC (rev 19947)
@@ -52,7 +52,7 @@
 		for (int j = tailStart - 1; j >= 0; j--) {
 			IStrategoTerm head = prefix[j];
 			if (head != null)
-				result = context.getFactory().makeList(head, result);
+				result = context.getFactory().makeListCons(head, result);
 		}
 		return result;
 	}
@@ -73,7 +73,7 @@
 					&& (head2 == head || head2.match(head))) {
 				return list;
 			} else {
-				return context.getFactory().makeList(head2, tail2);
+				return context.getFactory().makeListCons(head2, tail2);
 			}
 		}
 	}
@@ -87,7 +87,7 @@
 		for (int i = list.length - 1; i >= 0; i--) {
 			IStrategoTerm head = list[i];
 			if (head != null)
-				result = context.getFactory().makeList(head, result); 
+				result = context.getFactory().makeListCons(head, result); 
 		}
 		return result;
 	}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java	2009-09-08 14:46:21 UTC (rev 19946)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java	2009-09-09 07:48:33 UTC (rev 19947)
@@ -69,7 +69,7 @@
 			} else if (tail2 == tail) { // (match() not necessary because of recursion)
 				return list;
 			} else {
-				return context.getFactory().makeList(head, tail2);
+				return context.getFactory().makeListCons(head, tail2);
 			}
 		} else {
 			return mapIgnoreAnnos(context, head2, list, s);
@@ -109,7 +109,7 @@
 				return null;
 			} else if (tail2 != tail) { // (match() not necessary because of recursion)
 				// TODO: head/tail variation of replaceList
-				return context.getFactory().makeList(head, tail2);
+				return context.getFactory().makeListCons(head, tail2);
 			} else {
 				return list;
 			}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java	2009-09-08 14:46:21 UTC (rev 19946)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java	2009-09-09 07:48:33 UTC (rev 19947)
@@ -64,13 +64,13 @@
 					return current;
 				} else {
 					// TODO: head/tail variation of replaceList
-					return context.getFactory().makeList(head, tail2);
+					return context.getFactory().makeListCons(head, tail2);
 				}
 			} else if (head2 == head || head2.match(head)) {
 				return current;
 			} else {
 				// TODO: head/tail variation of replaceList
-				return context.getFactory().makeList(head2, current.tail());
+				return context.getFactory().makeListCons(head2, current.tail());
 			}
 		}
 	}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_some.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_some.java	2009-09-08 14:46:21 UTC (rev 19946)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_some.java	2009-09-09 07:48:33 UTC (rev 19947)
@@ -64,8 +64,8 @@
 				} else if (tail2 == tail || tail2.match(tail)) {
 					return list;
 				} else {
-					// TODO: head/tail variation of replaceList
-					return context.getFactory().makeList(head, tail2);
+					// TODO: head/tail variation of replaceList?
+					return context.getFactory().makeListCons(head, tail2);
 				}
 			} else if (head2 == head || head2.match(head)) {
 				IStrategoList tail = list.tail();
@@ -75,8 +75,8 @@
 				} else if (tail2 == tail || tail2.match(tail)) {
 					return list;
 				} else {
-					// TODO: head/tail variation of replaceList
-					return context.getFactory().makeList(head2, tail2);
+					// TODO: head/tail variation of replaceList?
+					return context.getFactory().makeListCons(head2, tail2);
 				}
 			} else {
 				return mapTryIgnoreAnnos(context, head2, list, s);



From L.C.L.Kats at tudelft.nl  Wed Sep  9 10:32:48 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Sep 2009 08:32:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19948 - LennartKats -
	in strc-java/trunk: java/runtime/org/strategoxt
	java/runtime/org/strategoxt/lang
	java/runtime/org/strategoxt/lang/terms trans
Message-ID: <200909090832.n898WmnO016101@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-09 08:32:48 +0000 (Wed, 09 Sep 2009)
New Revision: 19948

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19948&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/BAFReader.java
   strc-java/trunk/trans/java-postprocess.str
   strc-java/trunk/trans/s2j.str

Log:
Proper stack tracer for HybridInterpreter; fixed some more warnings.

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-09 07:48:33 UTC (rev 19947)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-09 08:32:48 UTC (rev 19948)
@@ -3,6 +3,7 @@
 import org.spoofax.interpreter.adapter.aterm.BAFBasicTermFactory;
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.Interpreter;
+import org.spoofax.interpreter.core.StackTracer;
 import org.spoofax.interpreter.library.IOperatorRegistry;
 import org.spoofax.interpreter.terms.ITermFactory;
 import org.strategoxt.lang.Context;
@@ -92,6 +93,11 @@
 		protected void internalAddOperatorRegistry(IOperatorRegistry or) {
 			super.addOperatorRegistry(or);
 		}
+		
+		@Override
+		public StackTracer getStackTracer() {
+			return compiledContext;
+		}
 	}
 	
 	/**

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java	2009-09-09 07:48:33 UTC (rev 19947)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_all.java	2009-09-09 08:32:48 UTC (rev 19948)
@@ -108,7 +108,7 @@
 			if (tail2 == null) {
 				return null;
 			} else if (tail2 != tail) { // (match() not necessary because of recursion)
-				// TODO: head/tail variation of replaceList
+				// TODO: head/tail variation of replaceList?
 				return context.getFactory().makeListCons(head, tail2);
 			} else {
 				return list;

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java	2009-09-09 07:48:33 UTC (rev 19947)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_one.java	2009-09-09 08:32:48 UTC (rev 19948)
@@ -63,13 +63,13 @@
 				} else if (tail2 == tail || tail2.match(tail)) {
 					return current;
 				} else {
-					// TODO: head/tail variation of replaceList
+					// TODO: head/tail variation of replaceList?
 					return context.getFactory().makeListCons(head, tail2);
 				}
 			} else if (head2 == head || head2.match(head)) {
 				return current;
 			} else {
-				// TODO: head/tail variation of replaceList
+				// TODO: head/tail variation of replaceList?
 				return context.getFactory().makeListCons(head2, current.tail());
 			}
 		}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/BAFReader.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/BAFReader.java	2009-09-09 07:48:33 UTC (rev 19947)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/BAFReader.java	2009-09-09 08:32:48 UTC (rev 19948)
@@ -289,7 +289,7 @@
                       debug(" + " + args[i].getClass());
               }
               level--;
-              return ((IStrategoList) args[1]).prepend(args[0]);
+              return factory.makeListCons(args[0], (IStrategoList) args[1]);
           }
           else if (name.equals("[]")) {
               level--;

Modified: strc-java/trunk/trans/java-postprocess.str
===================================================================
--- strc-java/trunk/trans/java-postprocess.str	2009-09-09 07:48:33 UTC (rev 19947)
+++ strc-java/trunk/trans/java-postprocess.str	2009-09-09 08:32:48 UTC (rev 19948)
@@ -127,7 +127,12 @@
       }
     ]|
     with
-      mod2* := <filter(Public + Abstract + Final)> mod*
+      mod2* := <filter(is-legal-outer-class-mod)> mod*
+  
+  is-legal-outer-class-mod =
+    Public + Abstract + Final
+  + MarkerAnno(id)
+  + SingleElemAnno(id, id)
     
   java-add-alias-classes =
     try(java-add-alias-class(!"Main"))

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-09-09 07:48:33 UTC (rev 19947)
+++ strc-java/trunk/trans/s2j.str	2009-09-09 08:32:48 UTC (rev 19948)
@@ -297,6 +297,7 @@
       }
       
       // Put these many literals and statements to another, lazily loaded class
+      @SuppressWarnings("unused")
       protected static class InteropRegisterer extends Object { // (header matched by java-split-class)
         ~*<java-split-method>  |[
           public static void register(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope) {



From L.C.L.Kats at tudelft.nl  Wed Sep  9 11:16:32 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Sep 2009 09:16:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19949 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core
	strc-java/trunk/java/runtime/org/strategoxt
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <200909090916.n899GWZ3017081@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-09 09:16:32 +0000 (Wed, 09 Sep 2009)
New Revision: 19949

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19949&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Context.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java

Log:
Avoid duplicate SSL library (and IOAgent, and dyynamic rule collection, etc.) in HybridInterpreter.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Context.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Context.java	2009-09-09 08:32:48 UTC (rev 19948)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Context.java	2009-09-09 09:16:32 UTC (rev 19949)
@@ -47,6 +47,10 @@
     private VarScope varScope;
 
     public Context(ITermFactory factory, ITermFactory programFactory) {
+        this(factory, programFactory, false);
+    }
+
+    public Context(ITermFactory factory, ITermFactory programFactory, boolean skipStandardLibraries) {
         this.programFactory =  programFactory;
         this.factory = factory;
         stackTracer = new StackTracer();
@@ -55,8 +59,10 @@
         strategoSignature = new StrategoSignature(programFactory);
         operatorRegistries = new LinkedHashMap<String, IOperatorRegistry>();
         
-        operatorRegistries.put(SSLLibrary.REGISTRY_NAME, new SSLLibrary());
-        operatorRegistries.put(JFFLibrary.REGISTRY_NAME, new JFFLibrary(factory));
+        if (!skipStandardLibraries) {
+           addOperatorRegistry(new SSLLibrary());
+           addOperatorRegistry(new JFFLibrary(factory));
+        }
     }
 
     public IStrategoTerm current() {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java	2009-09-09 08:32:48 UTC (rev 19948)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java	2009-09-09 09:16:32 UTC (rev 19949)
@@ -22,24 +22,18 @@
 
 public class Interpreter {
 
-    private Context context;
-    private StrategoCoreLoader loader;
+    private final Context context;
+    private final StrategoCoreLoader loader;
 
     public Interpreter() {
-        ITermFactory f = new BasicTermFactory();
-        doInit(f,f);
+        this(new BasicTermFactory());
     }
 
     public Interpreter(ITermFactory factory) {
-        doInit(factory, factory);
+        this(factory, factory);
     }
 
-    public Interpreter(ITermFactory termFactory, ITermFactory programFactory) {
-        doInit(termFactory, programFactory);
-    }
-
-    private void doInit(ITermFactory termFactory, ITermFactory programFactory) {
-        
+    public Interpreter(ITermFactory termFactory, ITermFactory programFactory) {        
         Context.indentation = 0;
         context = createContext(termFactory, programFactory);
         
Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-09 08:32:48 UTC (rev 19948)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-09 09:16:32 UTC (rev 19949)
@@ -75,7 +75,7 @@
 	private class HybridContext extends org.spoofax.interpreter.core.Context {
 		
 		public HybridContext(ITermFactory termFactory, ITermFactory programFactory) {
-			super(termFactory, programFactory);
+			super(termFactory, programFactory, true);
 		}
 		
 		@Override

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-09-09 08:32:48 UTC (rev 19948)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-09-09 09:16:32 UTC (rev 19949)
@@ -58,8 +58,7 @@
     	this.operatorRegistries = new ArrayList<IOperatorRegistry>();
     	
         SSLLibrary ssl = new SSLLibrary();
-		operatorRegistryMap.put(SSLLibrary.REGISTRY_NAME, ssl);
-        operatorRegistries.add(ssl);
+        addOperatorRegistry(ssl);
 
     	if (ioAgent != null) setIOAgent(ioAgent);
 



From L.C.L.Kats at tudelft.nl  Wed Sep  9 11:43:51 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Sep 2009 09:43:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19950 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <200909090943.n899hpdN017649@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-09 09:43:51 +0000 (Wed, 09 Sep 2009)
New Revision: 19950

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19950&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/SDefT.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java

Log:


Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/SDefT.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/SDefT.java	2009-09-09 09:16:32 UTC (rev 19949)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/SDefT.java	2009-09-09 09:43:51 UTC (rev 19950)
@@ -131,7 +131,7 @@
 
     @Override
     public String toString() {
-        return "SDefT(\"" + name + "\", " + getBody() + ")";
+        return "SDefT(\"" + getName() + "\", " + getBody() + ")";
     }
 
     public void setScope(VarScope newScope) {
@@ -141,7 +141,7 @@
     public void prettyPrint(StupidFormatter sf) {
         sf.first("SDefT(");
         sf.bump(6);
-        sf.line("  \"" + name + "\"");
+        sf.line("  \"" + getName() + "\"");
         sf.line(", " + strategyArgs);
         sf.line(", " + termArgs);
         sf.append(", ");

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	2009-09-09 09:16:32 UTC (rev 19949)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	2009-09-09 09:43:51 UTC (rev 19950)
@@ -9,8 +9,6 @@
 import org.strategoxt.imp.runtime.parser.tokens.TokenKindManager;
 import org.strategoxt.lang.Context;
 import org.strategoxt.lang.Strategy;
-import org.strategoxt.lang._Fail;
-import org.strategoxt.lang._Id;
 import org.strategoxt.libstratego_sglr.implode_asfix_1_0;
 
 import aterm.ATerm;
@@ -25,9 +23,9 @@
 	private final AsfixImploder imploder = new AsfixImploder(new TokenKindManager());
 
 	@Override
-	public IStrategoTerm invoke(Context context, IStrategoTerm asfix, Strategy skipConcreteSyntax) {
-		if (skipConcreteSyntax.invoke(context, asfix) != null)
-			return super.invoke(context, asfix, _Id.instance);
+	public IStrategoTerm invoke(Context context, IStrategoTerm asfix, Strategy implodeConcreteSyntax) {
+		if (implodeConcreteSyntax.invoke(context, asfix) == null)
+			return super.invoke(context, asfix, implodeConcreteSyntax);
 		
 		IOperatorRegistry library = context.getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME);
 		IMPParseStringPTPrimitive jsglr = (IMPParseStringPTPrimitive) library.get(IMPParseStringPTPrimitive.NAME);
@@ -36,7 +34,7 @@
 		ATerm asfixATerm = jsglr.getInputTerm(asfix);
 		
 		if (inputChars == null || asfix == null) {
-			return outer.invoke(context, asfix, _Fail.instance);
+			return outer.invoke(context, asfix, implodeConcreteSyntax);
 		}
 		
 		SGLRTokenizer tokenizer = JSGLRI.getTokenizer(asfixATerm);

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java	2009-09-09 09:16:32 UTC (rev 19949)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java	2009-09-09 09:43:51 UTC (rev 19950)
@@ -65,6 +65,11 @@
 	public String getName() {
 		return getStrategy().getName();
 	}
+	
+	@Override
+	protected void setName(String name) {
+		throw new UnsupportedOperationException();
+	}
 
 	@Override
 	public SVar[] getStrategyParams() {



From L.C.L.Kats at tudelft.nl  Wed Sep  9 16:26:34 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Sep 2009 14:26:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19955 - LennartKats -
	spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200909091426.n89EQYkE021820@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-09 14:26:34 +0000 (Wed, 09 Sep 2009)
New Revision: 19955

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19955&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java

Log:
Added new overloads of the SGLR.parse() method.

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-09-09 13:44:06 UTC (rev 19954)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-09-09 14:26:34 UTC (rev 19955)
@@ -7,6 +7,7 @@
  */
 package org.spoofax.jsglr;
 
+import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.PushbackInputStream;
@@ -28,6 +29,7 @@
    
     
     // FIXME: Should probably be put elsewhere
+    // TODO: EOF should be -1 in order not to reserve a (non-ASCII) character
     static final int EOF = 256;
     
     static final int TAB_SIZE = 8;
@@ -249,9 +251,7 @@
         return st0;
     }
     
-    // TODO: create overloads of the parse() method
-    
-    public ATerm parse(InputStream fis)  throws IOException, SGLRException {        
+    public final ATerm parse(InputStream fis)  throws IOException, SGLRException {        
         return parse(fis, null);
     }   
     
@@ -265,6 +265,18 @@
         return sglrParse(startSymbol);
     }
     
+    public final ATerm parse(String input) throws IOException, BadTokenException,
+            TokenExpectedException, ParseException, SGLRException {
+        
+        return parse(input);
+    }
+    
+    public ATerm parse(String input, String startSymbol) throws IOException, BadTokenException, TokenExpectedException, ParseException,
+        SGLRException {
+        
+        return parse(new ByteArrayInputStream(input.getBytes("ISO-8859-1")), startSymbol);
+    }
+    
     private void initParseTimer() {
         asyncAborted = false;
         if (Tools.timeout > 0) {



From L.C.L.Kats at tudelft.nl  Wed Sep  9 16:36:44 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Sep 2009 14:36:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19957 - LennartKats -
	in spoofax/trunk/spoofax:
	org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core
	org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl
	org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
	org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr
Message-ID: <200909091436.n89EaipE021878@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-09 14:36:44 +0000 (Wed, 09 Sep 2009)
New Revision: 19957

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19957&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Tools.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_explode_string.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_implode_string.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Build.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java

Log:
- Fixed extended ascii support in JSGLR_parse_string_pt
- Now using proper characters instead of bytes in SSL_explode_string


Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Tools.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Tools.java	2009-09-09 14:34:52 UTC (rev 19956)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Tools.java	2009-09-09 14:36:44 UTC (rev 19957)
@@ -53,7 +53,7 @@
             IStrategoList kids = factory.makeList();
 
             for (int i = children.length - 1; i >= 0; i--) {
-                kids = factory.makeList(implode(factory, (IStrategoAppl) children[i]), kids);
+                kids = factory.makeListCons(implode(factory, (IStrategoAppl) children[i]), kids);
             }
             return factory.makeAppl(ctr, kids);
         } else if (ctor.equals(sign.getInt())) {
Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_explode_string.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_explode_string.java	2009-09-09 14:34:52 UTC (rev 19956)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_explode_string.java	2009-09-09 14:36:44 UTC (rev 19957)
@@ -31,11 +31,11 @@
         
         String s = Tools.javaString(t);
         IStrategoTerm[] r = new IStrategoInt[s.length()];
-        byte[] bs = s.getBytes();
+        char[] cs = s.toCharArray();
         
         ITermFactory f = env.getFactory();
-        for(int i = 0; i < bs.length; i++)
-            r[i] = f.makeInt(bs[i]);
+        for(int i = 0; i < cs.length; i++)
+            r[i] = f.makeInt(cs[i]);
         
         IStrategoTerm sl = env.getFactory().makeList(r);
         env.setCurrent(sl);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_implode_string.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_implode_string.java	2009-09-09 14:34:52 UTC (rev 19956)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_implode_string.java	2009-09-09 14:36:44 UTC (rev 19957)
@@ -32,7 +32,7 @@
 
         for (IStrategoList l = (IStrategoList) t; !l.isEmpty(); l = l.tail()) {
             IStrategoInt v = (IStrategoInt) l.head();
-            result.append(new Character((char)v.intValue()));
+            result.append((char)v.intValue());
         }
         env.setCurrent(env.getFactory().makeString(result.toString()));
         return true;

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Build.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Build.java	2009-09-09 14:34:52 UTC (rev 19956)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Build.java	2009-09-09 14:36:44 UTC (rev 19957)
@@ -197,15 +197,14 @@
         IStrategoList children = (IStrategoList) t.getSubterm(1);
 
         IStrategoConstructor ctor = factory.makeConstructor(ctr, children.size());
-        IStrategoList kids = factory.makeList();
+        IStrategoTerm[] kids = new IStrategoTerm[children.size()];
 
-        // FIXME use IStrategoTerm[]
         for (int i = children.size() -1 ; i >= 0; i--) {
             IStrategoTerm kid = buildTerm(env, (IStrategoAppl) children.getSubterm(i));
             if (kid == null) {
                 return null;
             }
-            kids = factory.makeList(kid, kids);
+            kids[i] = kid;
         }
 
         return factory.makeAppl(ctor, kids);
@@ -224,7 +223,7 @@
         if(tail == null || head == null)
             return null;
         
-        return factory.makeList(head, tail);
+        return factory.makeListCons(head, tail);
     }
 
     private IStrategoList buildList(IContext env, IStrategoAppl t, ITermFactory factory) throws InterpreterException {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java	2009-09-09 14:34:52 UTC (rev 19956)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/org/spoofax/interpreter/library/jsglr/JSGLR_parse_string_pt.java	2009-09-09 14:36:44 UTC (rev 19957)
@@ -105,7 +105,8 @@
 		
 		SGLR parser = new SGLR(factory.getFactory(), table);
 		
-		InputStream is = new ByteArrayInputStream(input.getBytes());
+		// TODO: Use SGLR.parse(String, String) instead
+		InputStream is = new ByteArrayInputStream(input.getBytes("ISO-8859-1"));
 		IStrategoTerm result = factory.wrapTerm(parser.parse(is, startSymbol));
 		if (!outputWrappedATerm)
 			result = TermConverter.convert(env.getFactory(), result);



From L.C.L.Kats at tudelft.nl  Wed Sep  9 16:37:21 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Sep 2009 14:37:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19958 - LennartKats -
	in strc-java/trunk: java
	java/runtime/org/strategoxt/lang/compat/sglr test test/basic trans
Message-ID: <200909091437.n89EbLM3021883@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-09 14:37:21 +0000 (Wed, 09 Sep 2009)
New Revision: 19958

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19958&view=rev

Added:
   strc-java/trunk/test/basic/chars_1.str
Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java
   strc-java/trunk/java/spoofax-libs.jar
   strc-java/trunk/test/Makefile.am
   strc-java/trunk/trans/Makefile.am

Log:
Fixed non-standard ASCII character issues.

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java	2009-09-09 14:36:44 UTC (rev 19957)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/JSGLR_parse_string_pt_compat.java	2009-09-09 14:37:21 UTC (rev 19958)
@@ -1,8 +1,6 @@
 package org.strategoxt.lang.compat.sglr;
 
-import java.io.ByteArrayInputStream;
 import java.io.IOException;
-import java.io.InputStream;
 
 import org.spoofax.interpreter.adapter.aterm.WrappedATermFactory;
 import org.spoofax.interpreter.core.IContext;
@@ -46,8 +44,7 @@
 		SGLR parser = new SGLR(factory.getFactory(), table);
 		parser.setDisambiguator(filterSettings);
 		
-		InputStream is = new ByteArrayInputStream(input.getBytes());
-		IStrategoTerm result = factory.wrapTerm(parser.parse(is, startSymbol));
+		IStrategoTerm result = factory.wrapTerm(parser.parse(input, startSymbol));
 		if (!outputWrappedATerm)
 			result = TermConverter.convert(env.getFactory(), result);
 		

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)

Modified: strc-java/trunk/test/Makefile.am
===================================================================
--- strc-java/trunk/test/Makefile.am	2009-09-09 14:36:44 UTC (rev 19957)
+++ strc-java/trunk/test/Makefile.am	2009-09-09 14:37:21 UTC (rev 19958)
@@ -50,7 +50,7 @@
            scopes_1 scopes_2 internal_1 internal_2 override_1 extend_1 \
            shared_var_1 shared_var_2 shared_var_3 shared_var_4 shared_var_5 \
            dynrules_1 dynrules_2 dynrules_3 dynrules_4 dynrules_5 iset_1 iset_2 fetch_1 \
-           mapconcat_1 traversal_1 annos_1 annos_2 pp_java5_to_string
+           mapconcat_1 traversal_1 annos_1 annos_2 pp_java5_to_string chars_1
 
 BASICTESTFILES=$(addprefix basic/,$(addsuffix .str,$(BASICTESTS)))
 
@@ -81,7 +81,7 @@
 	aster -i $< -o $@
 
 %.java : %.ctree ../trans/strj
-	../trans/strj -i $< -o $@ -la stratego-lib -la java-front
+	../trans/strj -i $< -o $@ -la stratego-lib -la java-front -la stratego-sglr
 
 %.class : %.java
 	$(JAVAC) $(JAVACFLAGS) $<

Added: strc-java/trunk/test/basic/chars_1.str
===================================================================
--- strc-java/trunk/test/basic/chars_1.str	                        (rev 0)
+++ strc-java/trunk/test/basic/chars_1.str	2009-09-09 14:37:21 UTC (rev 19958)
@@ -0,0 +1,17 @@
+module chars_1
+
+imports
+  libstratego-lib
+  libstratego-sglr
+
+rules
+
+  main =
+    !"??";
+    explode-string;
+    implode-string; debug => "??";
+    
+    !"module foo rules bar = !\"??\"";
+    parse-string(|<import-term(Stratego-Sugar.tbl); open-parse-table>);
+    debug;
+    oncetd(?"\"??\"")

Modified: strc-java/trunk/trans/Makefile.am
===================================================================
--- strc-java/trunk/trans/Makefile.am	2009-09-09 14:36:44 UTC (rev 19957)
+++ strc-java/trunk/trans/Makefile.am	2009-09-09 14:37:21 UTC (rev 19958)
@@ -46,7 +46,7 @@
 	strj -la org.strategoxt.strj -la stratego-parallel -i strj-parallel.str
 
 %.java : %.str strj
-	./strj -i $< -o $@ --verbose 2 -la stratego-lib -la java-front
+	./strj -i $< -o $@ --verbose 2 -la stratego-lib -la java-front -la stratego-sglr
 
 %.class : %.java
 	$(JAVAC) $(JAVACFLAGS) $<
@@ -55,7 +55,7 @@
 	java -client -cp $(CLASSPATH) `basename $< .class`
 
 %.crun : %.str
-	strc -la strc -la stratego-lib -i $<
+	strc -la strc -la stratego-lib -la stratego-sglr -i $<
 	`dirname $<`/`basename $< .str`
 
 ## fast C-based pretty-printer



From L.C.L.Kats at tudelft.nl  Wed Sep  9 17:22:07 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 09 Sep 2009 15:22:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19959 - LennartKats -
	spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200909091522.n89FM7vi022591@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-09 15:22:07 +0000 (Wed, 09 Sep 2009)
New Revision: 19959

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19959&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java

Log:
Marked SGLR.setUseStructureRecovery() as deprecated.

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-09-09 14:37:21 UTC (rev 19958)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-09-09 15:22:07 UTC (rev 19959)
@@ -178,9 +178,10 @@
     /**
      * Structure-based recovery with bridge parsing.
      * 
-     * @see #setRecoverHandler(RecoverAlgorithm) Can be used to achieve the same
-     *      effect when using {@link StructureRecoveryAlgorithm}.
+     * @deprecated Use {@link #setRecoverHandler(RecoverAlgorithm)} instead
+     *             with {@link StructureRecoveryAlgorithm}.
      */
+    @Deprecated
     public void setUseStructureRecovery(boolean useRoughRecovery, IRecoveryParser parser) {
         useIntegratedRecovery =useRoughRecovery;
         recoverIntegrator = new RecoveryConnector(this, parser);
@@ -188,7 +189,11 @@
     
     /**
      * Structure-based recovery without bridge parsing.
+     * 
+     * @deprecated Use {@link #setRecoverHandler(RecoverAlgorithm)} instead
+     *             with {@link StructureRecoveryAlgorithm}.
      */
+    @Deprecated
     public final void setUseStructureRecovery(boolean useRoughRecovery) {        
         setUseStructureRecovery(useRoughRecovery, null);
     }



From L.C.L.Kats at tudelft.nl  Thu Sep 10 10:05:08 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 10 Sep 2009 08:05:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19960 - LennartKats -
	spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200909100805.n8A8585o001133@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-10 08:05:07 +0000 (Thu, 10 Sep 2009)
New Revision: 19960

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19960&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParseTable.java
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java

Log:
Eliminated some magic numbers.

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParseTable.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParseTable.java	2009-09-09 15:22:07 UTC (rev 19959)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/ParseTable.java	2009-09-10 08:05:07 UTC (rev 19960)
@@ -19,6 +19,13 @@
 import aterm.ATermList;
 
 public class ParseTable implements Serializable {
+    
+    /**
+     * Number of possible characters to expect
+     * (0x10FFFF would be all chars of UTF-8, but is not yet
+     *  supported by the parse table format.)
+     */
+    protected static final int NUM_CHARS = 256; 
 
     private static final long serialVersionUID = -3372429249660900093L;
     
@@ -164,7 +171,7 @@
 
     private Label[] parseLabels(ATermList labelsTerm) throws InvalidParseTableException {
 
-        Label[] ret = new Label[labelsTerm.getChildCount() + 256 + 1];
+        Label[] ret = new Label[labelsTerm.getChildCount() + NUM_CHARS + 1];
         
         while (!labelsTerm.isEmpty()) {
             ATermAppl a = Term.applAt(labelsTerm, 0);
@@ -485,7 +492,7 @@
     }
 
     public int getProductionCount() {
-        return labels.length - 256;
+        return labels.length - NUM_CHARS;
     }
 
     public int getActionEntryCount() {
@@ -541,7 +548,7 @@
     }
 
     public ATerm getProduction(int prod) {
-        if (prod < 256) {
+        if (prod < NUM_CHARS) {
             return factory.makeInt(prod);
         }
         return labels[prod].prod;

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-09-09 15:22:07 UTC (rev 19959)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/SGLR.java	2009-09-10 08:05:07 UTC (rev 19960)
@@ -28,9 +28,7 @@
 public class SGLR {             
    
     
-    // FIXME: Should probably be put elsewhere
-    // TODO: EOF should be -1 in order not to reserve a (non-ASCII) character
-    static final int EOF = 256;
+    static final int EOF = ParseTable.NUM_CHARS;
     
     static final int TAB_SIZE = 8;
 
@@ -1129,7 +1127,7 @@
         switch (currentToken) {
         case 32:
             return "\\32";
-        case 256:
+        case SGLR.EOF:
             return "EOF";
         case '\n':
             return "\\n";



From R.B.Vermaas at tudelft.nl  Thu Sep 10 14:54:34 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 10 Sep 2009 12:54:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19964 - rob -
	strategoxt/trunk
Message-ID: <200909101254.n8ACsYFk005622@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-10 12:54:34 +0000 (Thu, 10 Sep 2009)
New Revision: 19964

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19964&view=rev

Modified:
   strategoxt/trunk/README

Log:
nog een testje

Changes:

Modified: strategoxt/trunk/README
===================================================================
--- strategoxt/trunk/README	2009-09-10 12:50:42 UTC (rev 19963)
+++ strategoxt/trunk/README	2009-09-10 12:54:34 UTC (rev 19964)
@@ -75,6 +75,7 @@
 
     http://www.strategoxt.org
 
+
 Bug reports:
 
   stratego-bugs at cs.uu.nl



From R.B.Vermaas at tudelft.nl  Thu Sep 10 15:20:24 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 10 Sep 2009 13:20:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19966 - rob -
	strategoxt/trunk
Message-ID: <200909101320.n8ADKObQ006156@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-10 13:20:24 +0000 (Thu, 10 Sep 2009)
New Revision: 19966

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19966&view=rev

Modified:
   strategoxt/trunk/README

Log:
nu echt laatste testje, ECHT WAAR\!

Changes:

Modified: strategoxt/trunk/README
===================================================================
--- strategoxt/trunk/README	2009-09-10 12:58:52 UTC (rev 19965)
+++ strategoxt/trunk/README	2009-09-10 13:20:24 UTC (rev 19966)
@@ -78,7 +78,7 @@
 
 Bug reports:
 
-  stratego-bugs at cs.uu.nl
+  bugs at strategoxt.org
 
 
 Copyright (C) 1998-2009 Eelco Visser



From R.B.Vermaas at tudelft.nl  Thu Sep 10 16:22:17 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 10 Sep 2009 14:22:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19967 - rob -
	strategoxt/trunk/autoxt
Message-ID: <200909101422.n8AEMH09006902@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-10 14:22:17 +0000 (Thu, 10 Sep 2009)
New Revision: 19967

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19967&view=rev

Modified:
   strategoxt/trunk/autoxt/Makefile.xt

Log:
STR-772: turn on -fno-stack-protector as default

Changes:

Modified: strategoxt/trunk/autoxt/Makefile.xt
===================================================================
--- strategoxt/trunk/autoxt/Makefile.xt	2009-09-10 13:20:24 UTC (rev 19966)
+++ strategoxt/trunk/autoxt/Makefile.xt	2009-09-10 14:22:17 UTC (rev 19967)
@@ -13,7 +13,7 @@
 # Variables
 #
 
-AM_CFLAGS  = $(STR_CFLAGS)
+AM_CFLAGS  = $(STR_CFLAGS) -fno-stack-protector
 AM_LDFLAGS = $(STR_LDFLAGS)
 
 if XT_XTC_REGISTER



From L.C.L.Kats at tudelft.nl  Thu Sep 10 17:20:07 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 10 Sep 2009 15:20:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19968 - LennartKats -
	in sglr-recovery/trunk: Evaluation_Recovery/src
	recovery-runtime/src/sglrbridges
Message-ID: <200909101520.n8AFK7rR007835@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-10 15:20:07 +0000 (Thu, 10 Sep 2009)
New Revision: 19968

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19968&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java
   sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java
   sglr-recovery/trunk/recovery-runtime/src/sglrbridges/BridgeRecoveryParser.java
   sglr-recovery/trunk/recovery-runtime/src/sglrbridges/StandardParser.java

Log:
Added some statements to explicitly disable the JSGLR filters, since they will be enabled by default in the near future.

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java	2009-09-10 14:22:17 UTC (rev 19967)
+++ sglr-recovery/trunk/Evaluation_Recovery/src/PreProcessFiles.java	2009-09-10 15:20:07 UTC (rev 19968)
@@ -145,6 +145,7 @@
         sglr.getDisambiguator().setFilterAny(false);  
         FileInputStream table = new FileInputStream(TOKEN_PARSE_TABLE);
 		tokenParser = new StandAloneSGLRI(null, table, null, true);
+		tokenParser.getDisambiguator().setFilterAny(false);
 		tokenParser.setKeepAmbiguities(true);
 	    tokenParser.setRecoverHandler(new NoRecovery());
 	    recoveryParser = new SimpleJavaBridgeParser();

Modified: sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-09-10 14:22:17 UTC (rev 19967)
+++ sglr-recovery/trunk/Evaluation_Recovery/src/ProcessFiles.java	2009-09-10 15:20:07 UTC (rev 19968)
@@ -161,6 +161,7 @@
         if (TOKEN_PARSE_TABLE != null && useBridgeParser) {
 			FileInputStream table = new FileInputStream(TOKEN_PARSE_TABLE);
 			tokenParser = new StandAloneSGLRI(null, table, null, true);
+			tokenParser.getDisambiguator().setFilterAny(false);
 			tokenParser.setKeepAmbiguities(true);
 	        tokenParser.setRecoverHandler(new NoRecovery());
 	        recoveryParser = new JavaSGLRBridgeParser(tokenParser); // TODO: Properly select/load appropriate bridge parser

Modified: sglr-recovery/trunk/recovery-runtime/src/sglrbridges/BridgeRecoveryParser.java
===================================================================
--- sglr-recovery/trunk/recovery-runtime/src/sglrbridges/BridgeRecoveryParser.java	2009-09-10 14:22:17 UTC (rev 19967)
+++ sglr-recovery/trunk/recovery-runtime/src/sglrbridges/BridgeRecoveryParser.java	2009-09-10 15:20:07 UTC (rev 19968)
@@ -42,6 +42,7 @@
 		super(parseTable, startSymbol);
 		
 		tokenParser = new StandAloneSGLRI(null, tokenParseTable, null, /*USE_CSGLR*/true);
+		tokenParser.getDisambiguator().setFilterAny(false);
 		tokenParser.setKeepAmbiguities(true);
 		tokenParser.setRecoverHandler(new NoRecovery());
 		

Modified: sglr-recovery/trunk/recovery-runtime/src/sglrbridges/StandardParser.java
===================================================================
--- sglr-recovery/trunk/recovery-runtime/src/sglrbridges/StandardParser.java	2009-09-10 14:22:17 UTC (rev 19967)
+++ sglr-recovery/trunk/recovery-runtime/src/sglrbridges/StandardParser.java	2009-09-10 15:20:07 UTC (rev 19968)
@@ -39,7 +39,8 @@
 			InvalidParseTableException {
 		
 		parser = new StandAloneSGLRI(null, parseTable, startSymbol, USE_CSGLR);
-		parser.setKeepAmbiguities(true);
+		parser.getDisambiguator().setFilterAny(false);
+		parser.setKeepAmbiguities(true); // XXX: is this a good idea, without filters?
 		
 		this.startSymbol = startSymbol;
 	}



From L.C.L.Kats at tudelft.nl  Fri Sep 11 09:02:07 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Sep 2009 07:02:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19969 - LennartKats -
	spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr
Message-ID: <200909110702.n8B727ql019700@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-11 07:02:06 +0000 (Fri, 11 Sep 2009)
New Revision: 19969

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19969&view=rev

Modified:
   spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java

Log:
Some fixes to preference filtering.

Changes:

Modified: spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java
===================================================================
--- spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java	2009-09-10 15:20:07 UTC (rev 19968)
+++ spoofax/branches/spoofax-recovery/src/org/spoofax/jsglr/Disambiguator.java	2009-09-11 07:02:06 UTC (rev 19969)
@@ -29,10 +29,11 @@
     
     private boolean filterAny;
     
-    private boolean filterCycles; // TODO: filterCycles true by default
+    private boolean filterCycles;
     
     private boolean filterDirectPreference;
     
+    @Deprecated
     private boolean filterIndirectPreference;
     
     private boolean filterPreferenceCount;
@@ -72,10 +73,12 @@
         return filterDirectPreference;
     }
     
+    @Deprecated
     public final void setFilterIndirectPreference(boolean filterIndirectPreference) {
         this.filterIndirectPreference = filterIndirectPreference;
     }
     
+    @Deprecated
     public boolean getFilterIndirectPreference() {
         return filterIndirectPreference;
     }
@@ -130,6 +133,7 @@
     
     public final void setHeuristicFilters(boolean heuristicFilters) {
         setFilterIndirectPreference(heuristicFilters);
+        setFilterPreferenceCount(heuristicFilters);
         setFilterInjectionCount(heuristicFilters);
     }
     
@@ -142,8 +146,8 @@
     }
     
     public final void setDefaultFilters() {
-        filterAny = false; // TODO: filter by default
-        filterCycles = false; // TODO: filterCycles
+        filterAny = true; // TODO: filter by default
+        filterCycles = false; // TODO: filterCycles; enable by default
         filterDirectPreference = true;        
         filterIndirectPreference = false;        
         filterPreferenceCount = false;        
@@ -257,7 +261,7 @@
         if (sort != null && filterTopSort) {
             t = selectOnTopSort(t, sort);
             if (t == null)
-                throw new FilterException(parser, "Desired start symbol not found");
+                throw new SGLRException(parser, "Desired start symbol not found");
         }
         
         return t;
@@ -727,13 +731,16 @@
             return FILTER_LEFT_WINS;
         }
 
+        /* UNDONE: direct eagerness filter seems to be disabled in reference SGLR
         if (filterDirectPreference && parseTable.hasPrefersOrAvoids()) {
             int r = filterOnDirectPrefers(left, right);
             if (r != FILTER_DRAW)
                 return r;
         }
+        */
         
-        if (filterIndirectPreference && parseTable.hasPrefersOrAvoids()) {
+        // like C-SGLR, we use indirect preference filtering if the direct one is enabled
+        if (filterDirectPreference && parseTable.hasPrefersOrAvoids()) {
             int r = filterOnIndirectPrefers(left, right);
             if (r != FILTER_DRAW)
                 return r;
@@ -941,7 +948,7 @@
     }
 
     private boolean isLeftMoreEager(IParseNode left, IParseNode right) {
-
+        assert !(left instanceof Amb || right instanceof Amb); 
         if (isMoreEager(left, right))
             return true;
 
@@ -949,7 +956,7 @@
         IParseNode newRight = jumpOverInjectionsModuloEagerness(right);
 
         if (newLeft instanceof ParseNode && newRight instanceof ParseNode)
-            return isMoreEager(left, right);
+            return isMoreEager(newLeft, newRight);
 
         return false;
     }



From L.C.L.Kats at tudelft.nl  Fri Sep 11 10:15:17 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Sep 2009 08:15:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19970 - LennartKats -
	spoofax/tags
Message-ID: <200909110815.n8B8FHtw021159@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-11 08:15:17 +0000 (Fri, 11 Sep 2009)
New Revision: 19970

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19970&view=rev

Added:
   spoofax/tags/jsglr-finegrained-only/
Removed:
   spoofax/tags/spoofax-recovery-finegrained-only/

Log:
Renamed tag: last version of the "fine-grained only" recovery approach (see also http://torvalds.cs.lth.se/svn/recovery/tags/bridge-parsing-finegrained-only).

Changes:



From L.C.L.Kats at tudelft.nl  Fri Sep 11 10:15:54 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Sep 2009 08:15:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19971 - LennartKats -
	in spoofax/tags: . jsglr-no-recovery
Message-ID: <200909110815.n8B8Fs5Q021170@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-11 08:15:54 +0000 (Fri, 11 Sep 2009)
New Revision: 19971

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19971&view=rev

Added:
   spoofax/tags/jsglr-no-recovery/

Log:
Tagged latest revision of JSGLR with no recovery support.

Changes:


Property changes on: spoofax/tags/jsglr-no-recovery
___________________________________________________________________
Added: svn:ignore
   + bin
lib
build


Added: svn:mergeinfo
   + 



From L.C.L.Kats at tudelft.nl  Fri Sep 11 13:19:50 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Sep 2009 11:19:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19972 - LennartKats -
	in spoofax/trunk/spoofax/org.spoofax.jsglr: . META-INF src
	src/org/spoofax src/org/spoofax/jsglr src/org/spoofax/jsglr/rnsglr
Message-ID: <200909111119.n8BBJox7025235@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-11 11:19:50 +0000 (Fri, 11 Sep 2009)
New Revision: 19972

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19972&view=rev

Added:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/java.hprof.txt
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/ArrayDeque.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/BackTrackRecovery2.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/BacktrackPosition.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/CoarseGrainedRecovery.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/EofRecovery.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedRepair.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IRecoveryParser.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IRecoveryResult.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentInfo.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentTokenizer.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentationDisambiguator.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentationFilter.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/IndentationHandler.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Measures.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/NoRecovery.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTimeoutException.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParserHistory.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParserPosition.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ProductionType.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RangeList.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RecoverAlgorithm.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RecoverDisambiguator.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RecoverNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RecoveryBase.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RecoveryConnector.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/RegionRecovery.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/StructureRecoveryAlgorithm.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/StructureSkipSuggestion.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/StructureSkipper.java
Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/
   spoofax/trunk/spoofax/org.spoofax.jsglr/.project
   spoofax/trunk/spoofax/org.spoofax.jsglr/META-INF/MANIFEST.MF
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Action.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ActionState.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/BadTokenException.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Disambiguator.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FatalException.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FilterException.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Frame.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Goto.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Label.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Link.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Main.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseException.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseNode.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Path.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Production.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ProductionAttributes.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Range.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Reduce.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ReduceLookahead.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/SGLR.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/SGLRException.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/State.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/TokenExpectedException.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/Tools.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/rnsglr/Parser.java

Log:
Merged in changes from the spoofax-recovery branch (since r18314), adding error recovery support to the parser (disabled by default), a number of public interface extensions, improved performance, and updated post-parse-filters (like before, disabled by default).

Changes (first 1000 lines of the diffs):


Property changes on: spoofax/trunk/spoofax/org.spoofax.jsglr
___________________________________________________________________
Added: svn:mergeinfo
   + /spoofax/branches/spoofax-recovery:18355-19971

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/.project
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/.project	2009-09-11 08:15:54 UTC (rev 19971)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/.project	2009-09-11 11:19:50 UTC (rev 19972)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <projectDescription>
-	<name>org.spoofax.jsglr</name>
+	<name>org.spoofax.jsglr [spoofax-recovery branch]</name>
 	<comment></comment>
 	<projects>
 	</projects>

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/META-INF/MANIFEST.MF
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/META-INF/MANIFEST.MF	2009-09-11 08:15:54 UTC (rev 19971)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/META-INF/MANIFEST.MF	2009-09-11 11:19:50 UTC (rev 19972)
@@ -2,9 +2,10 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Scannerless Generalized LR parser
 Bundle-SymbolicName: org.spoofax.jsglr
-Bundle-Version: 0.2.0.qualifier
+Bundle-Version: 0.2.1.qualifier
 Export-Package: org.spoofax.jsglr
 Bundle-Vendor: Spoofax.org
 Require-Bundle: org.spoofax.aterm,
- org.junit
+ org.junit,
+ org.spoofax.interpreter.core
 Bundle-RequiredExecutionEnvironment: J2SE-1.5

Copied: spoofax/trunk/spoofax/org.spoofax.jsglr/src/java.hprof.txt (from rev 19971, spoofax/branches/spoofax-recovery/src/java.hprof.txt)
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/java.hprof.txt	                        (rev 0)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/java.hprof.txt	2009-09-11 11:19:50 UTC (rev 19972)
@@ -0,0 +1,320 @@
+JAVA PROFILE 1.0.1, created Tue Feb 10 14:33:50 2009
+
+Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)
+
+@(#)jvm.hprof.txt	1.5 06/01/28
+
+ Copyright (c) 2006 Sun Microsystems, Inc. All  Rights Reserved.
+
+WARNING!  This file format is under development, and is subject to
+change without notice.
+
+This file contains the following types of records:
+
+THREAD START
+THREAD END      mark the lifetime of Java threads
+
+TRACE           represents a Java stack trace.  Each trace consists
+                of a series of stack frames.  Other records refer to
+                TRACEs to identify (1) where object allocations have
+                taken place, (2) the frames in which GC roots were
+                found, and (3) frequently executed methods.
+
+HEAP DUMP       is a complete snapshot of all live objects in the Java
+                heap.  Following distinctions are made:
+
+                ROOT    root set as determined by GC
+                CLS     classes 
+                OBJ     instances
+                ARR     arrays
+
+SITES           is a sorted list of allocation sites.  This identifies
+                the most heavily allocated object types, and the TRACE
+                at which those allocations occurred.
+
+CPU SAMPLES     is a statistical profile of program execution.  The VM
+                periodically samples all running threads, and assigns
+                a quantum to active TRACEs in those threads.  Entries
+                in this record are TRACEs ranked by the percentage of
+                total quanta they consumed; top-ranked TRACEs are
+                typically hot spots in the program.
+
+CPU TIME        is a profile of program execution obtained by measuring
+                the time spent in individual methods (excluding the time
+                spent in callees), as well as by counting the number of
+                times each method is called. Entries in this record are
+                TRACEs ranked by the percentage of total CPU time. The
+                "count" field indicates the number of times each TRACE 
+                is invoked.
+
+MONITOR TIME    is a profile of monitor contention obtained by measuring
+                the time spent by a thread waiting to enter a monitor.
+                Entries in this record are TRACEs ranked by the percentage
+                of total monitor contention time and a brief description
+                of the monitor.  The "count" field indicates the number of 
+                times the monitor was contended at that TRACE.
+
+MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
+                the System.
+
+HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
+at program exit.  They can also be obtained during program execution by typing 
+Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).
+
+--------
+
+THREAD START (obj=50000142, id = 200002, name="HPROF gc_finish watcher", group="system")
+THREAD START (obj=50000142, id = 200001, name="main", group="main")
+THREAD END (id = 200001)
+TRACE 300269:
+	java.lang.String.length(String.java:Unknown line)
+	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
+	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
+TRACE 300279:
+	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
+	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
+TRACE 300347:
+	java.lang.StringCoding$StringEncoder.encode(StringCoding.java:Unknown line)
+	java.lang.StringCoding.encode(StringCoding.java:Unknown line)
+	java.lang.String.getBytes(String.java:Unknown line)
+	java.io.UnixFileSystem.getBooleanAttributes(UnixFileSystem.java:Unknown line)
+TRACE 300362:
+	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
+	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
+TRACE 300633:
+	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:Unknown line)
+	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:Unknown line)
+	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
+	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
+TRACE 300715:
+	java.io.PrintStream.write(PrintStream.java:Unknown line)
+	java.io.PrintStream.print(PrintStream.java:Unknown line)
+	java.io.PrintStream.println(PrintStream.java:Unknown line)
+	java.lang.Throwable.printStackTraceAsCause(Throwable.java:Unknown line)
+TRACE 300019:
+	java.lang.Thread.init(Thread.java:Unknown line)
+	java.lang.Thread.<init>(Thread.java:Unknown line)
+TRACE 300024:
+	java.lang.String.hashCode(String.java:Unknown line)
+	java.util.Hashtable.get(Hashtable.java:Unknown line)
+	java.util.Properties.getProperty(Properties.java:Unknown line)
+	java.lang.System.getProperty(System.java:Unknown line)
+TRACE 300038:
+	java.util.Arrays.copyOf(Arrays.java:Unknown line)
+	java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:Unknown line)
+	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
+	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
+TRACE 300067:
+	java.lang.ClassLoader.checkName(ClassLoader.java:Unknown line)
+	java.lang.ClassLoader.findBootstrapClass0(ClassLoader.java:Unknown line)
+	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
+	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
+TRACE 300071:
+	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:Unknown line)
+	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
+	java.lang.ClassLoader.loadClassInternal(ClassLoader.java:Unknown line)
+TRACE 300101:
+	java.nio.Buffer.limit(Buffer.java:Unknown line)
+	java.nio.Buffer.<init>(Buffer.java:Unknown line)
+	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
+	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
+TRACE 300103:
+	java.nio.Buffer.<init>(Buffer.java:Unknown line)
+	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
+	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
+	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
+TRACE 300204:
+	java.lang.StringBuilder.<init>(StringBuilder.java:Unknown line)
+	java.io.ObjectStreamClass.getClassSignature(ObjectStreamClass.java:Unknown line)
+	java.io.ObjectStreamField.<init>(ObjectStreamField.java:Unknown line)
+	java.io.ObjectStreamField.<init>(ObjectStreamField.java:Unknown line)
+TRACE 300225:
+	java.net.URLStreamHandler.toExternalForm(URLStreamHandler.java:Unknown line)
+	java.net.URL.toExternalForm(URL.java:Unknown line)
+	java.net.URL.toString(URL.java:Unknown line)
+	java.lang.String.valueOf(String.java:Unknown line)
+TRACE 300271:
+	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
+	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
+	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
+	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
+TRACE 300272:
+	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
+	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
+	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
+TRACE 300281:
+	java.lang.String.charAt(String.java:Unknown line)
+	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
+	java.io.File.<init>(File.java:Unknown line)
+	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
+TRACE 300282:
+	java.io.UnixFileSystem.normalize(UnixFileSystem.java:Unknown line)
+	java.io.File.<init>(File.java:Unknown line)
+	sun.misc.URLClassPath$JarLoader.<init>(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
+TRACE 300296:
+	java.lang.String.compareTo(String.java:Unknown line)
+	java.io.UnixFileSystem.compare(UnixFileSystem.java:Unknown line)
+	java.io.File.compareTo(File.java:Unknown line)
+	java.io.File.equals(File.java:Unknown line)
+TRACE 300305:
+	java.lang.ThreadLocal.get(ThreadLocal.java:Unknown line)
+	java.lang.StringCoding.deref(StringCoding.java:Unknown line)
+	java.lang.StringCoding.encode(StringCoding.java:Unknown line)
+	java.lang.String.getBytes(String.java:Unknown line)
+TRACE 300361:
+	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
+TRACE 300374:
+	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath.getResource(URLClassPath.java:Unknown line)
+	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
+	java.net.URLClassLoader.findClass(URLClassLoader.java:Unknown line)
+TRACE 300387:
+	java.net.URLClassLoader$1.run(URLClassLoader.java:Unknown line)
+	java.net.URLClassLoader.findClass(URLClassLoader.java:Unknown line)
+	sun.misc.Launcher$ExtClassLoader.findClass(Launcher.java:Unknown line)
+	java.lang.ClassLoader.loadClass(ClassLoader.java:Unknown line)
+TRACE 300407:
+	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
+	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
+	sun.misc.URLClassPath$FileLoader.<init>(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
+TRACE 300410:
+	sun.net.www.ParseUtil.decode(ParseUtil.java:Unknown line)
+	sun.misc.URLClassPath$FileLoader.<init>(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath$3.run(URLClassPath.java:Unknown line)
+	sun.misc.URLClassPath.getLoader(URLClassPath.java:Unknown line)
+TRACE 300428:
+	java.lang.String.length(String.java:Unknown line)
+	java.io.UnixFileSystem.prefixLength(UnixFileSystem.java:Unknown line)
+	java.io.File.<init>(File.java:Unknown line)
+	sun.misc.URLClassPath$FileLoader.<init>(URLClassPath.java:Unknown line)
+TRACE 300511:
+	java.lang.String.substring(String.java:Unknown line)
+	java.net.URLStreamHandler.parseURL(URLStreamHandler.java:Unknown line)
+	sun.net.www.protocol.file.Handler.parseURL(Handler.java:Unknown line)
+	java.net.URL.<init>(URL.java:Unknown line)
+TRACE 300515:
+	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
+	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
+	java.net.URLStreamHandler.parseURL(URLStreamHandler.java:Unknown line)
+	sun.net.www.protocol.file.Handler.parseURL(Handler.java:Unknown line)
+TRACE 300616:
+	java.lang.Throwable.toString(Throwable.java:Unknown line)
+	java.lang.String.valueOf(String.java:Unknown line)
+	java.io.PrintStream.println(PrintStream.java:Unknown line)
+	java.lang.Throwable.printStackTrace(Throwable.java:Unknown line)
+TRACE 300627:
+	java.nio.CharBuffer.<init>(CharBuffer.java:Unknown line)
+	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
+	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
+	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
+TRACE 300628:
+	java.nio.HeapCharBuffer.<init>(HeapCharBuffer.java:Unknown line)
+	java.nio.CharBuffer.wrap(CharBuffer.java:Unknown line)
+	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
+	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
+TRACE 300635:
+	java.nio.charset.CoderResult.isOverflow(CoderResult.java:Unknown line)
+	java.nio.charset.CharsetEncoder.encode(CharsetEncoder.java:Unknown line)
+	sun.nio.cs.StreamEncoder.implWrite(StreamEncoder.java:Unknown line)
+	sun.nio.cs.StreamEncoder.write(StreamEncoder.java:Unknown line)
+TRACE 300657:
+	java.io.PrintStream.write(PrintStream.java:Unknown line)
+	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
+	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
+	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
+TRACE 300659:
+	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:Unknown line)
+	sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:Unknown line)
+	sun.nio.cs.StreamEncoder.flushBuffer(StreamEncoder.java:Unknown line)
+	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:Unknown line)
+TRACE 300691:
+	java.lang.AbstractStringBuilder.<init>(AbstractStringBuilder.java:Unknown line)
+	java.lang.StringBuilder.<init>(StringBuilder.java:Unknown line)
+	java.lang.Throwable.printStackTraceAsCause(Throwable.java:Unknown line)
+	java.lang.Throwable.printStackTrace(Throwable.java:Unknown line)
+TRACE 300729:
+	java.io.PrintStream.println(PrintStream.java:Unknown line)
+	java.lang.Throwable.printStackTraceAsCause(Throwable.java:Unknown line)
+	java.lang.Throwable.printStackTrace(Throwable.java:Unknown line)
+	java.lang.Throwable.printStackTrace(Throwable.java:Unknown line)
+TRACE 300731:
+	java.lang.StringBuilder.<init>(StringBuilder.java:Unknown line)
+	java.lang.StackTraceElement.toString(StackTraceElement.java:Unknown line)
+	java.lang.String.valueOf(String.java:Unknown line)
+	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
+TRACE 300734:
+	java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:Unknown line)
+	java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:Unknown line)
+	java.lang.StringBuilder.append(StringBuilder.java:Unknown line)
+	java.lang.StackTraceElement.toString(StackTraceElement.java:Unknown line)
+TRACE 300757:
+	java.util.AbstractList.iterator(AbstractList.java:Unknown line)
+	java.lang.Shutdown.runHooks(Shutdown.java:Unknown line)
+	java.lang.Shutdown.sequence(Shutdown.java:Unknown line)
+	java.lang.Shutdown.shutdown(Shutdown.java:Unknown line)
+TRACE 300776:
+	java.util.IdentityHashMap$IdentityHashMapIterator.<init>(IdentityHashMap.java:Unknown line)
+	java.util.IdentityHashMap$IdentityHashMapIterator.<init>(IdentityHashMap.java:Unknown line)
+	java.util.IdentityHashMap$KeyIterator.<init>(IdentityHashMap.java:Unknown line)
+	java.util.IdentityHashMap$KeyIterator.<init>(IdentityHashMap.java:Unknown line)
+TRACE 300815:
+	java.util.LinkedHashMap.newKeyIterator(LinkedHashMap.java:Unknown line)
+	java.util.HashMap$KeySet.iterator(HashMap.java:Unknown line)
+	java.util.HashSet.iterator(HashSet.java:Unknown line)
+	java.util.AbstractCollection.toArray(AbstractCollection.java:Unknown line)
+CPU TIME (ms) BEGIN (total = 50) Tue Feb 10 14:33:50 2009
+rank   self  accum   count trace method
+   1  8.00%  8.00%     239 300269 java.lang.String.length
+   2  4.00% 12.00%       4 300279 sun.net.www.ParseUtil.decode
+   3  4.00% 16.00%       5 300347 java.lang.StringCoding$StringEncoder.encode
+   4  4.00% 20.00%       5 300362 sun.misc.URLClassPath.getLoader
+   5  4.00% 24.00%      18 300633 sun.nio.cs.UTF_8$Encoder.encodeArrayLoop
+   6  4.00% 28.00%       8 300715 java.io.PrintStream.write
+   7  2.00% 30.00%       3 300019 java.lang.Thread.init
+   8  2.00% 32.00%      15 300024 java.lang.String.hashCode
+   9  2.00% 34.00%      49 300038 java.util.Arrays.copyOf
+  10  2.00% 36.00%       4 300067 java.lang.ClassLoader.checkName
+  11  2.00% 38.00%       3 300071 sun.misc.Launcher$AppClassLoader.loadClass
+  12  2.00% 40.00%      26 300101 java.nio.Buffer.limit
+  13  2.00% 42.00%      26 300103 java.nio.Buffer.<init>
+  14  2.00% 44.00%       3 300204 java.lang.StringBuilder.<init>
+  15  2.00% 46.00%       4 300225 java.net.URLStreamHandler.toExternalForm
+  16  2.00% 48.00%     235 300271 java.lang.AbstractStringBuilder.append
+  17  2.00% 50.00%     235 300272 java.lang.StringBuilder.append
+  18  2.00% 52.00%     235 300281 java.lang.String.charAt
+  19  2.00% 54.00%       4 300282 java.io.UnixFileSystem.normalize
+  20  2.00% 56.00%       4 300296 java.lang.String.compareTo
+  21  2.00% 58.00%       6 300305 java.lang.ThreadLocal.get
+  22  2.00% 60.00%       5 300361 sun.misc.URLClassPath$3.run
+  23  2.00% 62.00%       7 300374 sun.misc.URLClassPath.getLoader
+  24  2.00% 64.00%       1 300387 java.net.URLClassLoader$1.run
+  25  2.00% 66.00%      53 300407 java.lang.StringBuilder.append
+  26  2.00% 68.00%       1 300410 sun.net.www.ParseUtil.decode
+  27  2.00% 70.00%       1 300428 java.lang.String.length
+  28  2.00% 72.00%       5 300511 java.lang.String.substring
+  29  2.00% 74.00%       6 300515 java.lang.AbstractStringBuilder.append
+  30  2.00% 76.00%       1 300616 java.lang.Throwable.toString
+  31  2.00% 78.00%      18 300627 java.nio.CharBuffer.<init>
+  32  2.00% 80.00%      18 300628 java.nio.HeapCharBuffer.<init>
+  33  2.00% 82.00%      18 300635 java.nio.charset.CoderResult.isOverflow
+  34  2.00% 84.00%      18 300657 java.io.PrintStream.write
+  35  2.00% 86.00%      18 300659 sun.nio.cs.StreamEncoder.writeBytes
+  36  2.00% 88.00%       8 300691 java.lang.AbstractStringBuilder.<init>
+  37  2.00% 90.00%       8 300729 java.io.PrintStream.println
+  38  2.00% 92.00%      13 300731 java.lang.StringBuilder.<init>
+  39  2.00% 94.00%      19 300734 java.lang.AbstractStringBuilder.expandCapacity
+  40  2.00% 96.00%       1 300757 java.util.AbstractList.iterator
+  41  2.00% 98.00%       2 300776 java.util.IdentityHashMap$IdentityHashMapIterator.<init>
+  42  2.00% 100.00%       1 300815 java.util.LinkedHashMap.newKeyIterator
+CPU TIME (ms) END

Copied: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/ArrayDeque.java (from rev 19971, spoofax/branches/spoofax-recovery/src/org/spoofax/ArrayDeque.java)
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/ArrayDeque.java	                        (rev 0)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/ArrayDeque.java	2009-09-11 11:19:50 UTC (rev 19972)
@@ -0,0 +1,849 @@
+/*
+ * Written by Josh Bloch of Google Inc. and released to the public domain,
+ * as explained at http://creativecommons.org/licenses/publicdomain.
+ */
+
+package org.spoofax;
+
+import java.io.*;
+import java.util.*;
+
+/**
+ * Resizable-array implementation of the Java 1.6 Deque interface.  Array
+ * deques have no capacity restrictions; they grow as necessary to support
+ * usage.  They are not thread-safe; in the absence of external
+ * synchronization, they do not support concurrent access by multiple threads.
+ * Null elements are prohibited.  This class is likely to be faster than
+ * {@link Stack} when used as a stack, and faster than {@link LinkedList}
+ * when used as a queue.
+ *
+ * <p>Most <tt>ArrayDeque</tt> operations run in amortized constant time.
+ * Exceptions include {@link #remove(Object) remove}, {@link
+ * #removeFirstOccurrence removeFirstOccurrence}, {@link #removeLastOccurrence
+ * removeLastOccurrence}, {@link #contains contains}, {@link #iterator
+ * iterator.remove()}, and the bulk operations, all of which run in linear
+ * time.
+ *
+ * <p>The iterators returned by this class's <tt>iterator</tt> method are
+ * <i>fail-fast</i>: If the deque is modified at any time after the iterator
+ * is created, in any way except through the iterator's own <tt>remove</tt>
+ * method, the iterator will generally throw a {@link
+ * ConcurrentModificationException}.  Thus, in the face of concurrent
+ * modification, the iterator fails quickly and cleanly, rather than risking
+ * arbitrary, non-deterministic behavior at an undetermined time in the
+ * future.
+ *
+ * <p>Note that the fail-fast behavior of an iterator cannot be guaranteed
+ * as it is, generally speaking, impossible to make any hard guarantees in the
+ * presence of unsynchronized concurrent modification.  Fail-fast iterators
+ * throw <tt>ConcurrentModificationException</tt> on a best-effort basis.
+ * Therefore, it would be wrong to write a program that depended on this
+ * exception for its correctness: <i>the fail-fast behavior of iterators
+ * should be used only to detect bugs.</i>
+ *
+ * <p>This class and its iterator implement all of the
+ * <em>optional</em> methods of the {@link Collection} and {@link
+ * Iterator} interfaces.
+ *
+ * <p>This class is a member of the
+ * <a href="{@docRoot}/../technotes/guides/collections/index.html">
+ * Java Collections Framework</a>.
+ *
+ * @author  Josh Bloch and Doug Lea
+ * @author  Lennart Kats (adapted for Java 1.5; added get() method)
+ * @since   1.6
+ * @param <E> the type of elements held in this collection
+ */
+ at SuppressWarnings("unchecked")
+public class ArrayDeque<E> extends AbstractCollection<E>
+                           implements /*Deque<E>,*/ Queue<E>, Cloneable, Serializable
+{
+    /**
+     * The array in which the elements of the deque are stored.
+     * The capacity of the deque is the length of this array, which is
+     * always a power of two. The array is never allowed to become
+     * full, except transiently within an addX method where it is
+     * resized (see doubleCapacity) immediately upon becoming full,
+     * thus avoiding head and tail wrapping around to equal each
+     * other.  We also guarantee that all array cells not holding
+     * deque elements are always null.
+     */
+    private transient E[] elements;
+
+    /**
+     * The index of the element at the head of the deque (which is the
+     * element that would be removed by remove() or pop()); or an
+     * arbitrary number equal to tail if the deque is empty.
+     */
+    private transient int head;
+
+    /**
+     * The index at which the next element would be added to the tail
+     * of the deque (via addLast(E), add(E), or push(E)).
+     */
+    private transient int tail;
+
+    /**
+     * The minimum capacity that we'll use for a newly created deque.
+     * Must be a power of 2.
+     */
+    private static final int MIN_INITIAL_CAPACITY = 8;
+
+    // ******  Array allocation and resizing utilities ******
+
+    /**
+     * Allocate empty array to hold the given number of elements.
+     *
+     * @param numElements  the number of elements to hold
+     */
+    private void allocateElements(int numElements) {
+        int initialCapacity = MIN_INITIAL_CAPACITY;
+        // Find the best power of two to hold elements.
+        // Tests "<=" because arrays aren't kept full.
+        if (numElements >= initialCapacity) {
+            initialCapacity = numElements;
+            initialCapacity |= (initialCapacity >>>  1);
+            initialCapacity |= (initialCapacity >>>  2);
+            initialCapacity |= (initialCapacity >>>  4);
+            initialCapacity |= (initialCapacity >>>  8);
+            initialCapacity |= (initialCapacity >>> 16);
+            initialCapacity++;
+
+            if (initialCapacity < 0)   // Too many elements, must back off
+                initialCapacity >>>= 1;// Good luck allocating 2 ^ 30 elements
+        }
+        elements = (E[]) new Object[initialCapacity];
+    }
+
+    /**
+     * Double the capacity of this deque.  Call only when full, i.e.,
+     * when head and tail have wrapped around to become equal.
+     */
+    private void doubleCapacity() {
+        assert head == tail;
+        int p = head;
+        int n = elements.length;
+        int r = n - p; // number of elements to the right of p
+        int newCapacity = n << 1;
+        if (newCapacity < 0)
+            throw new IllegalStateException("Sorry, deque too big");
+        Object[] a = new Object[newCapacity];
+        System.arraycopy(elements, p, a, 0, r);
+        System.arraycopy(elements, 0, a, r, p);
+        elements = (E[])a;
+        head = 0;
+        tail = n;
+    }
+
+    /**
+     * Copies the elements from our element array into the specified array,
+     * in order (from first to last element in the deque).  It is assumed
+     * that the array is large enough to hold all elements in the deque.
+     *
+     * @return its argument
+     */
+    private <T> T[] copyElements(T[] a) {
+        if (head < tail) {
+            System.arraycopy(elements, head, a, 0, size());
+        } else if (head > tail) {
+            int headPortionLen = elements.length - head;
+            System.arraycopy(elements, head, a, 0, headPortionLen);
+            System.arraycopy(elements, 0, a, headPortionLen, tail);
+        }
+        return a;
+    }
+
+    /**
+     * Constructs an empty array deque with an initial capacity
+     * sufficient to hold 16 elements.
+     */
+    public ArrayDeque() {
+        elements = (E[]) new Object[16];
+    }
+
+    /**
+     * Constructs an empty array deque with an initial capacity
+     * sufficient to hold the specified number of elements.
+     *
+     * @param numElements  lower bound on initial capacity of the deque
+     */
+    public ArrayDeque(int numElements) {
+        allocateElements(numElements);
+    }
+
+    /**
+     * Constructs a deque containing the elements of the specified
+     * collection, in the order they are returned by the collection's
+     * iterator.  (The first element returned by the collection's
+     * iterator becomes the first element, or <i>front</i> of the
+     * deque.)
+     *
+     * @param c the collection whose elements are to be placed into the deque
+     * @throws NullPointerException if the specified collection is null
+     */
+    public ArrayDeque(Collection<? extends E> c) {
+        allocateElements(c.size());
+        addAll(c);
+    }
+
+    // The main insertion and extraction methods are addFirst,
+    // addLast, pollFirst, pollLast. The other methods are defined in
+    // terms of these.
+
+    /**
+     * Inserts the specified element at the front of this deque.
+     *
+     * @param e the element to add
+     * @throws NullPointerException if the specified element is null
+     */
+    public void addFirst(E e) {
+        if (e == null)
+            throw new NullPointerException();
+        elements[head = (head - 1) & (elements.length - 1)] = e;
+        if (head == tail)
+            doubleCapacity();
+    }
+
+    /**
+     * Inserts the specified element at the end of this deque.
+     *
+     * <p>This method is equivalent to {@link #add}.
+     *
+     * @param e the element to add
+     * @throws NullPointerException if the specified element is null
+     */
+    public void addLast(E e) {
+        if (e == null)
+            throw new NullPointerException();
+        elements[tail] = e;
+        if ( (tail = (tail + 1) & (elements.length - 1)) == head)
+            doubleCapacity();
+    }
+
+    /**
+     * Inserts the specified element at the front of this deque.
+     *
+     * @param e the element to add
+     * @return <tt>true</tt> (as specified by Deque.offerFirst)
+     * @throws NullPointerException if the specified element is null
+     */
+    public boolean offerFirst(E e) {
+        addFirst(e);
+        return true;
+    }
+
+    /**
+     * Inserts the specified element at the end of this deque.
+     *
+     * @param e the element to add
+     * @return <tt>true</tt> (as specified by Deque.offerLast)
+     * @throws NullPointerException if the specified element is null
+     */
+    public boolean offerLast(E e) {
+        addLast(e);
+        return true;
+    }
+
+    /**
+     * @throws NoSuchElementException {@inheritDoc}
+     */
+    public E removeFirst() {
+        E x = pollFirst();
+        if (x == null)
+            throw new NoSuchElementException();
+        return x;
+    }
+
+    /**
+     * @throws NoSuchElementException {@inheritDoc}
+     */
+    public E removeLast() {
+        E x = pollLast();
+        if (x == null)
+            throw new NoSuchElementException();
+        return x;
+    }
+
+    public E pollFirst() {
+        int h = head;
+        E result = elements[h]; // Element is null if deque empty
+        if (result == null)
+            return null;
+        elements[h] = null;     // Must null out slot
+        head = (h + 1) & (elements.length - 1);
+        return result;
+    }
+
+    public E pollLast() {
+        int t = (tail - 1) & (elements.length - 1);
+        E result = elements[t];
+        if (result == null)
+            return null;
+        elements[t] = null;
+        tail = t;
+        return result;
+    }
+
+    /**
+     * @throws NoSuchElementException {@inheritDoc}
+     */
+    public E getFirst() {
+        E x = elements[head];
+        if (x == null)
+            throw new NoSuchElementException();
+        return x;
+    }
+    
+    public E get(int i) {
+        if (i < 0 || i >= size())
+            throw new NoSuchElementException();
+        return elements[(head + i) & (elements.length - 1)];
+    }
+
+    /**
+     * @throws NoSuchElementException {@inheritDoc}
+     */
+    public E getLast() {
+        E x = elements[(tail - 1) & (elements.length - 1)];
+        if (x == null)
+            throw new NoSuchElementException();
+        return x;
+    }
+
+    public E peekFirst() {
+        return elements[head]; // elements[head] is null if deque empty
+    }
+
+    public E peekLast() {
+        return elements[(tail - 1) & (elements.length - 1)];
+    }
+
+    /**
+     * Removes the first occurrence of the specified element in this
+     * deque (when traversing the deque from head to tail).
+     * If the deque does not contain the element, it is unchanged.
+     * More formally, removes the first element <tt>e</tt> such that
+     * <tt>o.equals(e)</tt> (if such an element exists).
+     * Returns <tt>true</tt> if this deque contained the specified element
+     * (or equivalently, if this deque changed as a result of the call).
+     *
+     * @param o element to be removed from this deque, if present
+     * @return <tt>true</tt> if the deque contained the specified element
+     */
+    public boolean removeFirstOccurrence(Object o) {
+        if (o == null)
+            return false;
+        int mask = elements.length - 1;
+        int i = head;
+        E x;
+        while ( (x = elements[i]) != null) {
+            if (o.equals(x)) {
+                delete(i);
+                return true;
+            }
+            i = (i + 1) & mask;
+        }
+        return false;
+    }
+
+    /**
+     * Removes the last occurrence of the specified element in this
+     * deque (when traversing the deque from head to tail).
+     * If the deque does not contain the element, it is unchanged.
+     * More formally, removes the last element <tt>e</tt> such that
+     * <tt>o.equals(e)</tt> (if such an element exists).
+     * Returns <tt>true</tt> if this deque contained the specified element
+     * (or equivalently, if this deque changed as a result of the call).
+     *
+     * @param o element to be removed from this deque, if present
+     * @return <tt>true</tt> if the deque contained the specified element
+     */
+    public boolean removeLastOccurrence(Object o) {
+        if (o == null)
+            return false;
+        int mask = elements.length - 1;
+        int i = (tail - 1) & mask;
+        E x;
+        while ( (x = elements[i]) != null) {
+            if (o.equals(x)) {
+                delete(i);
+                return true;
+            }
+            i = (i - 1) & mask;
+        }
+        return false;
+    }
+
+    // *** Queue methods ***
+
+    /**
+     * Inserts the specified element at the end of this deque.
+     *
+     * <p>This method is equivalent to {@link #addLast}.
+     *
+     * @param e the element to add
+     * @return <tt>true</tt> (as specified by {@link Collection#add})
+     * @throws NullPointerException if the specified element is null
+     */
+    public boolean add(E e) {
+        addLast(e);
+        return true;
+    }
+
+    /**
+     * Inserts the specified element at the end of this deque.
+     *
+     * <p>This method is equivalent to {@link #offerLast}.
+     *
+     * @param e the element to add
+     * @return <tt>true</tt> (as specified by {@link Queue#offer})
+     * @throws NullPointerException if the specified element is null
+     */
+    public boolean offer(E e) {
+        return offerLast(e);
+    }
+
+    /**
+     * Retrieves and removes the head of the queue represented by this deque.
+     *
+     * This method differs from {@link #poll poll} only in that it throws an
+     * exception if this deque is empty.
+     *
+     * <p>This method is equivalent to {@link #removeFirst}.
+     *
+     * @return the head of the queue represented by this deque
+     * @throws NoSuchElementException {@inheritDoc}
+     */
+    public E remove() {
+        return removeFirst();
+    }
+
+    /**
+     * Retrieves and removes the head of the queue represented by this deque
+     * (in other words, the first element of this deque), or returns
+     * <tt>null</tt> if this deque is empty.
+     *
+     * <p>This method is equivalent to {@link #pollFirst}.
+     *
+     * @return the head of the queue represented by this deque, or
+     *         <tt>null</tt> if this deque is empty
+     */
+    public E poll() {
+        return pollFirst();
+    }
+
+    /**
+     * Retrieves, but does not remove, the head of the queue represented by
+     * this deque.  This method differs from {@link #peek peek} only in
+     * that it throws an exception if this deque is empty.
+     *
+     * <p>This method is equivalent to {@link #getFirst}.
+     *
+     * @return the head of the queue represented by this deque
+     * @throws NoSuchElementException {@inheritDoc}
+     */
+    public E element() {
+        return getFirst();
+    }
+
+    /**
+     * Retrieves, but does not remove, the head of the queue represented by
+     * this deque, or returns <tt>null</tt> if this deque is empty.
+     *
+     * <p>This method is equivalent to {@link #peekFirst}.
+     *
+     * @return the head of the queue represented by this deque, or
+     *         <tt>null</tt> if this deque is empty
+     */
+    public E peek() {
+        return peekFirst();
+    }
+
+    // *** Stack methods ***
+
+    /**
+     * Pushes an element onto the stack represented by this deque.  In other
+     * words, inserts the element at the front of this deque.
+     *
+     * <p>This method is equivalent to {@link #addFirst}.
+     *
+     * @param e the element to push
+     * @throws NullPointerException if the specified element is null
+     */
+    public void push(E e) {
+        addFirst(e);
+    }
+
+    /**
+     * Pops an element from the stack represented by this deque.  In other
+     * words, removes and returns the first element of this deque.
+     *
+     * <p>This method is equivalent to {@link #removeFirst()}.
+     *
+     * @return the element at the front of this deque (which is the top
+     *         of the stack represented by this deque)
+     * @throws NoSuchElementException {@inheritDoc}
+     */
+    public E pop() {
+        return removeFirst();
+    }
+
+    private void checkInvariants() {
+        assert elements[tail] == null;
+        assert head == tail ? elements[head] == null :
+            (elements[head] != null &&
+             elements[(tail - 1) & (elements.length - 1)] != null);
+        assert elements[(head - 1) & (elements.length - 1)] == null;
+    }
+
+    /**
+     * Removes the element at the specified position in the elements array,
+     * adjusting head and tail as necessary.  This can result in motion of
+     * elements backwards or forwards in the array.
+     *
+     * <p>This method is called delete rather than remove to emphasize
+     * that its semantics differ from those of {@link List#remove(int)}.
+     *
+     * @return true if elements moved backwards
+     */
+    private boolean delete(int i) {
+        checkInvariants();
+        final E[] elements = this.elements;
+        final int mask = elements.length - 1;
+        final int h = head;
+        final int t = tail;
+        final int front = (i - h) & mask;
+        final int back  = (t - i) & mask;
+
+        // Invariant: head <= i < tail mod circularity
+        if (front >= ((t - h) & mask))
+            throw new ConcurrentModificationException();
+
+        // Optimize for least element motion
+        if (front < back) {
+            if (h <= i) {
+                System.arraycopy(elements, h, elements, h + 1, front);
+            } else { // Wrap around
+                System.arraycopy(elements, 0, elements, 1, i);
+                elements[0] = elements[mask];
+                System.arraycopy(elements, h, elements, h + 1, mask - h);
+            }
+            elements[h] = null;
+            head = (h + 1) & mask;
+            return false;
+        } else {
+            if (i < t) { // Copy the null tail as well
+                System.arraycopy(elements, i + 1, elements, i, back);
+                tail = t - 1;
+            } else { // Wrap around
+                System.arraycopy(elements, i + 1, elements, i, mask - i);
+                elements[mask] = elements[0];
+                System.arraycopy(elements, 1, elements, 0, t);
+                tail = (t - 1) & mask;
+            }
+            return true;
+        }
+    }
+
+    // *** Collection Methods ***
+
+    /**
+     * Returns the number of elements in this deque.
+     *
+     * @return the number of elements in this deque
+     */
+    public int size() {
+        return (tail - head) & (elements.length - 1);
+    }
+
+    /**
+     * Returns <tt>true</tt> if this deque contains no elements.
+     *
+     * @return <tt>true</tt> if this deque contains no elements
+     */
+    public boolean isEmpty() {
+        return head == tail;
+    }
+
+    /**
+     * Returns an iterator over the elements in this deque.  The elements
+     * will be ordered from first (head) to last (tail).  This is the same
+     * order that elements would be dequeued (via successive calls to
+     * {@link #remove} or popped (via successive calls to {@link #pop}).
+     *
+     * @return an iterator over the elements in this deque
+     */
+    public Iterator<E> iterator() {
+        return new DeqIterator();
+    }
+
+    public Iterator<E> descendingIterator() {
+        return new DescendingIterator();
+    }
+
+    private class DeqIterator implements Iterator<E> {
+        /**
+         * Index of element to be returned by subsequent call to next.
+         */
+        private int cursor = head;
+
+        /**
+         * Tail recorded at construction (also in remove), to stop
+         * iterator and also to check for comodification.
+         */
+        private int fence = tail;
+
+        /**
+         * Index of element returned by most recent call to next.
+         * Reset to -1 if element is deleted by a call to remove.
+         */
+        private int lastRet = -1;
+
+        public boolean hasNext() {
+            return cursor != fence;
+        }
+
+        public E next() {
+            if (cursor == fence)
+                throw new NoSuchElementException();
+            E result = elements[cursor];
+            // This check doesn't catch all possible comodifications,
+            // but does catch the ones that corrupt traversal
+            if (tail != fence || result == null)
+                throw new ConcurrentModificationException();
+            lastRet = cursor;
+            cursor = (cursor + 1) & (elements.length - 1);
+            return result;
+        }
+
+        public void remove() {
+            if (lastRet < 0)
+                throw new IllegalStateException();
+            if (delete(lastRet)) { // if left-shifted, undo increment in next()
+                cursor = (cursor - 1) & (elements.length - 1);
+                fence = tail;
+            }
+            lastRet = -1;
+        }
+    }
+
+    private class DescendingIterator implements Iterator<E> {
+        /*
+         * This class is nearly a mirror-image of DeqIterator, using

(7962 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Fri Sep 11 13:21:57 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Sep 2009 11:21:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19973 - LennartKats -
	in sglr-recovery/trunk: Evaluation_Recovery recovery-runtime
Message-ID: <200909111121.n8BBLvGT025260@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-11 11:21:57 +0000 (Fri, 11 Sep 2009)
New Revision: 19973

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19973&view=rev

Modified:
   sglr-recovery/trunk/Evaluation_Recovery/.classpath
   sglr-recovery/trunk/recovery-runtime/.classpath

Log:
Updated classpaths: now using the trunk version of JSGLR.

Changes:

Modified: sglr-recovery/trunk/Evaluation_Recovery/.classpath
===================================================================
--- sglr-recovery/trunk/Evaluation_Recovery/.classpath	2009-09-11 11:19:50 UTC (rev 19972)
+++ sglr-recovery/trunk/Evaluation_Recovery/.classpath	2009-09-11 11:21:57 UTC (rev 19973)
@@ -4,11 +4,11 @@
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry combineaccessrules="false" kind="src" path="/org.bripgen"/>
 	<classpathentry combineaccessrules="false" kind="src" path="/org.briplib"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/org.spoofax.jsglr [spoofax-recovery branch]"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/3"/>
 	<classpathentry combineaccessrules="false" kind="src" path="/other-parsers"/>
 	<classpathentry combineaccessrules="false" kind="src" path="/org.spoofax.interpreter.core"/>
 	<classpathentry combineaccessrules="false" kind="src" path="/org.spoofax.aterm"/>
 	<classpathentry combineaccessrules="false" kind="src" path="/org.strategoxt.imp.runtime"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/org.spoofax.jsglr"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

Modified: sglr-recovery/trunk/recovery-runtime/.classpath
===================================================================
--- sglr-recovery/trunk/recovery-runtime/.classpath	2009-09-11 11:19:50 UTC (rev 19972)
+++ sglr-recovery/trunk/recovery-runtime/.classpath	2009-09-11 11:21:57 UTC (rev 19973)
@@ -8,6 +8,6 @@
 	<classpathentry combineaccessrules="false" kind="src" path="/org.spoofax.interpreter"/>
 	<classpathentry combineaccessrules="false" kind="src" path="/org.spoofax.interpreter.core"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/3"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/org.spoofax.jsglr [spoofax-recovery branch]"/>
+	<classpathentry combineaccessrules="false" kind="src" path="/org.spoofax.jsglr"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>



From L.C.L.Kats at tudelft.nl  Fri Sep 11 13:22:31 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Sep 2009 11:22:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19974 - LennartKats -
	strc-java/trunk/java
Message-ID: <200909111122.n8BBMVmv025265@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-11 11:22:31 +0000 (Fri, 11 Sep 2009)
New Revision: 19974

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19974&view=rev

Modified:
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/java/spoofax-libs.jar

Log:
Use the trunk version of JSGLR.

Changes:

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-11 11:21:57 UTC (rev 19973)
+++ strc-java/trunk/java/Makefile.am	2009-09-11 11:22:31 UTC (rev 19974)
@@ -80,7 +80,7 @@
 	rm -rf spoofax-libs-tmp/META-INF
 	$(JAR) cf spoofax-libs.jar.tmp -C spoofax-libs-tmp .
 	$(JAR) uf spoofax-libs.jar.tmp -C $(SPOOFAX)/org.spoofax.interpreter.core/bin/ .
-	$(JAR) uf spoofax-libs.jar.tmp -C $(SPOOFAX)/../../branches/spoofax-recovery/bin/ .
+	$(JAR) uf spoofax-libs.jar.tmp -C $(SPOOFAX)/org.spoofax.jsglr/bin/ .
 	$(JAR) uf spoofax-libs.jar.tmp -C $(SPOOFAX)/org.spoofax.aterm/bin/ .
 	$(JAR) uf spoofax-libs.jar.tmp -C $(SPOOFAX)/org.spoofax.interpreter.adapter.aterm/bin/ .
 	$(JAR) uf spoofax-libs.jar.tmp -C $(SPOOFAX)/org.spoofax.interpreter.library.jsglr/bin/ .

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Fri Sep 11 13:29:17 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Sep 2009 11:29:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19975 - LennartKats -
	spoofax/branches
Message-ID: <200909111129.n8BBTHaF025336@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-11 11:29:17 +0000 (Fri, 11 Sep 2009)
New Revision: 19975

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19975&view=rev

Removed:
   spoofax/branches/spoofax-recovery/

Log:
Removed the spoofax-recovery branch, which has now been merged into the trunk.

Changes:



From L.C.L.Kats at tudelft.nl  Fri Sep 11 15:24:56 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Sep 2009 13:24:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19976 - LennartKats -
	in strc-java/trunk: java
	java/runtime/org/strategoxt/lang/compat/sglr trans
Message-ID: <200909111324.n8BDOuMA027081@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-11 13:24:56 +0000 (Fri, 11 Sep 2009)
New Revision: 19976

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19976&view=rev

Modified:
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/SGLRCompatLibrary.java
   strc-java/trunk/trans/Makefile.am

Log:


Changes:

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-11 11:29:17 UTC (rev 19975)
+++ strc-java/trunk/java/Makefile.am	2009-09-11 13:24:56 UTC (rev 19976)
@@ -93,7 +93,7 @@
 	if ! which ecj >/dev/null; \
 	  then echo "WARNING: ecj is not installed; using the (much) slower javac compiler instead" >&2; \
 	fi
-	$(JAVAC) $(JAVACFLAGS) $(RUNTIMEJAVAS) $(LIBRARYJAVAS) $(COMPILERJAVAS) && touch $@
+	$(JAVAC) $(JAVACFLAGS) $(RUNTIMEJAVAS) $(LIBRARYJAVAS) $(COMPILERJAVAS) && touch .ALLCLASSES
 
 debug-classes : $(RUNTIMEJAVA)
 	$(JAVAC) -g $(JAVACFLAGS) $(RUNTIMEJAVAS)

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/SGLRCompatLibrary.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/SGLRCompatLibrary.java	2009-09-11 11:29:17 UTC (rev 19975)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/sglr/SGLRCompatLibrary.java	2009-09-11 13:24:56 UTC (rev 19976)
@@ -33,41 +33,41 @@
 	private void initFilterSettings() {
 		filterSettings.setFilterAny(true);
 		
-		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_direct_eagernes_on") {
+		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_direct_eagernes_on") { // (sic)
 			@Override
 			public void set() {
 				filterSettings.setFilterDirectPreference(true);
 			}
 		});
-		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_direct_eagernes_off") {
+		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_direct_eagernes_off") { // (sic)
 			@Override
 			public void set() {
 				filterSettings.setFilterDirectPreference(false);
 			}
 		});
-		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_direct_eagernes") {
+		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_direct_eagernes") { // (sic)
 			@Override
 			public boolean get() {
 				return filterSettings.getFilterDirectPreference();
 			}
 		});
 		
-		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_eagernes_on") {
-			@Override
+		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_eagernes_on") { // (sic)
+			@Override @Deprecated
 			public void set() {
 				filterSettings.setFilterIndirectPreference(true);
 			}
 		});
-		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_eagernes_off") {
-			@Override
+		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_eagernes_off") { // (sic)
+			@Override @Deprecated
 			public void set() {
 				filterSettings.setFilterIndirectPreference(false);
 			}
 		});
-		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_eagernes") {
+		add(new AbstractFilterSetting(filterSettings, "STRSGLR_set_filter_eagernes") { // (sic)
 			@Override
 			public boolean get() {
-				return filterSettings.getFilterIndirectPreference();
+				return filterSettings.getFilterDirectPreference();
 			}
 		});
 

Modified: strc-java/trunk/trans/Makefile.am
===================================================================
--- strc-java/trunk/trans/Makefile.am	2009-09-11 11:29:17 UTC (rev 19975)
+++ strc-java/trunk/trans/Makefile.am	2009-09-11 13:24:56 UTC (rev 19976)
@@ -15,7 +15,7 @@
 STRCFLAGS      = --main main-$* -O 0 --format-check 0
 
 EXTRA_DIST     = $(wildcard *.str) $(wildcard *.meta) $(wildcard *.syn) 
-CLEANFILES     = $(wildcard *.dep) $(wildcard *.tmp) $(wildcard *.c) $(wildcard *.o)
+CLEANFILES     = $(wildcard *.dep) $(wildcard *.tmp) $(wildcard *.o) # $(wildcard *.c)
 BOOTCLEANFILES = $(wildcard *.c) 
 
 XTC_IMPORT = $(JAVA_FRONT_XTC)



From L.C.L.Kats at tudelft.nl  Fri Sep 11 17:01:37 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 11 Sep 2009 15:01:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19977 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <200909111501.n8BF1cPE029157@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-11 15:01:37 +0000 (Fri, 11 Sep 2009)
New Revision: 19977

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19977&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java

Log:
- Updated build xml: also build Stratego components
- Updated StandAloneSGLR interface


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-11 13:24:56 UTC (rev 19976)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-11 15:01:37 UTC (rev 19977)
@@ -20,17 +20,16 @@
     
         <!-- Project directories -->
         <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
         <property name="syntax" location="syntax"/>
-        <property name="editor" location="editor"/>
         <property name="lib" location="lib"/>
         <property name="build" location="bin"/>
         <property name="dist" location="bin/dist"/>
         
         <!-- Key input modules -->
-        <property name="sdfmodule" value="<%= name %>"/>
-        <property name="esvmodule" value="<%= name %>"/>
-        <property name="strmodule" location="<%= name' %>"/>
-        <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
+        <property name="sdfmodule" value="WebDSL"/>
+        <property name="esvmodule" value="WebDSL"/>
+        <property name="strmodule" value="webdsl"/>
         
         <!-- External .def location (optional)
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
@@ -38,30 +37,42 @@
         
         <!-- Environment configuration -->
         <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
-        <property name="build.strategoxt.sdf.imports"  value=""/>
-        <property name="build.strategoxt.strc.imports" value=""/>
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args"
+                 value="-m main-${strmodule} -S -I ${trans} -I ${build} -I ${lib}
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc
+                        -I ${user.home}/.nix-profile/share/java-front
+                        -I include
+                        -la ${user.home}/.nix-profile/lib/libjava-front.la"/>
         
-        <target name="all" depends="strc,sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        <!-- Initialization -->
+        <target name="all" depends="stratego.java,sdf2table,sdf2imp"/>
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <available file="${build.strategoxt}/strj" property="build.stratego.usenativestrj"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="include"/>
+    
+    	<target name="sdf2imp" depends="sdf2imp.eclipse,sdf2imp.standalone"/>
         
-        <target name="init">
-            <mkdir dir="${build}"/>
-            <mkdir dir="${dist}"/>
-        </target>
-        
         <target name="sdf2imp.eclipse" depends="sdf2table" if="eclipse.running">
-            <!-- HACK: Trigger the Eclipse builder rather than build it here -->
-            <!-- (if we did do this here, we'd have to use the -p option to -->
-            <!--  specify the parse table, and put the table in another dir) -->
+            <!-- In Eclipse, we trigger the Eclipse builder rather than build it here -->
             <touch file="include/${esvmodule}.packed.esv"/>
             <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
         </target>
         
         <target name="sdf2imp.standalone" depends="sdf2table,aux-files" unless="eclipse.running">
-            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true" fork="true">
+                <jvmarg line="-ss4m -server"/> 
                 <arg value="-i"/>
                 <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
                 <arg value="-p"/>
-                <arg value="None"/>
+                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
             </java>
         </target>
     
@@ -94,10 +105,6 @@
                 <arg value="${basedir}/include/${sdfmodule}.def"/>
                 <arg value="-o"/>
                 <arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
-                <arg value="--open-insertions"/>
-                <arg value="on"/>
-                <arg value="--optimize"/>
-                <arg value="off"/>
             </java>
         </target>
 
@@ -108,135 +115,5 @@
             <get src="${site}/make_permissive.jar" dest="aux/make_permissive.jar" usetimestamp="true" ignoreerrors="true"/>
             <get src="${site}/sdf2imp.jar" dest="aux/sdf2imp.jar" usetimestamp="true" ignoreerrors="true"/>
         </target>
-    
-        <target name="pack-sdf" depends="init" unless="externaldef">
-            <dependset>
-                <srcfilelist dir="${syntax}" files="**/*.sdf"/>
-                <targetfileset file="${syntax}/${sdfmodule}.def"/>
-            </dependset>
-            <apply executable="${build.strategoxt}/pack-sdf" failonerror="true" dest="include">
-                <arg value="-i"/>
-                <srcfile/>
-                <arg value="-o"/>
-                <targetfile/>
-                <arg value="-I"/>
-                <arg value="${trans}"/>
-                <arg value="-I"/>
-                <arg value="${lib}"/>
-                <arg line="${build.strategoxt.sdf.imports}"/>
-                
-                <fileset file="${syntax}/${sdfmodule}.sdf"/>
-                <mapper type="glob" from="*.sdf" to="*.def"/>
-            </apply>
-        </target>
-    
-        <target name="copy-sdf" depends="init" if="externaldef">
-            <copy file="${externaldef}" todir="include"/>
-        </target>
-    
-        <target name="rtg2sig" depends="init,sdf2rtg" if="strmodule.present" unless="external-def">
-            <apply executable="${build.strategoxt}/rtg2sig" dest="${build}" failonerror="true">
-                <arg value="-i"/>
-                <srcfile/>
-                <arg value="-o"/>
-                <targetfile/>
-                
-                <fileset file="${syntax}/${sdfmodule}.rtg"/>
-                <mapper type="glob" from="*.rtg" to="*.str"/>
-            </apply>
-        </target>
-        
-        <target name="sdf2rtg" depends="init,pack-sdf" if="strmodule.present" unless="external-def">
-            <apply executable="${build.strategoxt}/sdf2rtg" dest="${build}" failonerror="true">
-                <arg value="-i"/>
-                <srcfile/>
-                <arg value="-m"/>
-                <arg value="${sdfmodule}"/>
-                <arg value="-o"/>
-                <targetfile/>
-                
-                <fileset file="${syntax}/${sdfmodule}.str"/>
-                <mapper type="glob" from="*.def" to="*.rtg"/>
-            </apply>
-        </target>
-    
-        <target name="strc" depends="init,rtg2sig" if="strmodule.present">
-            <antcall target="strc-call">
-                <param name="build.strategoxt.strc.params" value=""/>
-                <param name="build.strategoxt.strc.extension" value="*"/>
-                <param name="strcExecutable" value="strc"/>
-            </antcall>
-        </target>
-    
-        <target name="strj" depends="init,rtg2sig" if="strmodule.present">
-            <antcall target="strc-call">
-                <param name="build.strategoxt.strc.params" value=""/>
-                <param name="build.strategoxt.strc.extension" value="*.java"/>
-                <param name="strcExecutable" value="strj"/>
-            </antcall>
-        </target>
-        
-        <target name="strji" depends="init,rtg2sig" if="strmodule.present">
-            <antcall target="strc-call">
-                <param name="build.strategoxt.strc.params" value="-F --library"/>
-                <param name="build.strategoxt.strc.extension" value="*.ctree"/>
-                <param name="strcExecutable" value="strc"/>
-            </antcall>
-        </target>
-        
-        <target name="strc-call" depends="init,rtg2sig">
-            <dependset>
-                <srcfilelist dir="${trans}" files="**/*.str"/>
-                <srcfilelist dir="${build}" files="**/*.str"/>
-                <targetfileset dir="${dist}" includes="**/*"/>
-            </dependset>
-            <apply executable="${build.strategoxt}/{strcExecutable}" dest="include" failonerror="true">
-                <arg value=".str"/>
-                <arg value="-i"/>
-                <srcfile/>
-                <arg value="-o"/>
-                <targetfile/>
-                <arg value="-m"/>
-                <arg value="-S"/> <!-- (Silent mode) -->
-                <arg value="-I"/>
-                <arg value="${trans}"/>
-                <arg value="-I"/>
-                <arg value="${build}"/>
-                <arg value="-I"/>
-                <arg value="${lib}"/>
-                <arg value="-I"/>
-                <arg value="${user.home}/.nix-profile/share/java-front"/>
-                <arg value="-la"/>
-                <arg value="stratego-lib"/>
-                <arg value="-la"/>
-                <arg value="${user.home}/.nix-profile/lib/libjava-front.la"/>
-                <arg value="-la"/>
-                <arg value="stratego-sglr"/>
-                <arg value="-la"/>
-                <arg value="stratego-gpp"/>
-                <arg value="-la"/>
-                <arg value="stratego-xtc"/>
-                
-                <arg line="${build.strategoxt.strc.params}"/>
-                <arg line="${build.strategoxt.strc.imports}"/>
-                
-                <fileset file="${trans}/${strmodule}.str"/>
-                <mapper type="glob" from="*.str" to="${build.strategoxt.strc.extension}"/>
-            </apply>
-            
-            <!-- Remove any intermediate files -->
-            <delete>
-                <fileset dir="${dist}">
-                    <include name="**/*.c"/>
-                    <include name="**/*.dep"/>
-                    <include name="**/*.lo"/>
-                    <include name="**/*.o"/>
-                </fileset>
-            </delete>
-        </target>
-        
-        <target name="clean" description="clean up">
-            <delete dir="${build}"/>
-        </target>
     </project>
     <%

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java	2009-09-11 13:24:56 UTC (rev 19976)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java	2009-09-11 15:01:37 UTC (rev 19977)
@@ -213,6 +213,7 @@
 	}
 	
 	protected static ByteArrayInputStream toByteStream(char[] chars) {
+		// FIXME: AbstractSGLRI.toByteStream() breaks extended ASCII support
 		byte[] bytes = new byte[chars.length];
 		
 		for (int i = 0; i < bytes.length; i++)

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java	2009-09-11 13:24:56 UTC (rev 19976)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java	2009-09-11 15:01:37 UTC (rev 19977)
@@ -4,6 +4,7 @@
 import java.io.InputStream;
 
 import org.spoofax.jsglr.BadTokenException;
+import org.spoofax.jsglr.Disambiguator;
 import org.spoofax.jsglr.NoRecovery;
 import org.spoofax.jsglr.ParseTable;
 import org.spoofax.jsglr.RecoverAlgorithm;
@@ -54,6 +55,10 @@
 		parser.setRecoverHandler(recoverHandler);
 	}
 	
+	public Disambiguator getDisambiguator() {
+		return parser.getDisambiguator();
+	}
+	
 	@Override
 	protected ATerm doParseNoImplode(char[] inputChars, String filename)
 			throws TokenExpectedException, BadTokenException, SGLRException, IOException {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java	2009-09-11 13:24:56 UTC (rev 19976)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java	2009-09-11 15:01:37 UTC (rev 19977)
@@ -4,7 +4,9 @@
 import java.io.InputStream;
 
 import org.eclipse.imp.language.Language;
+import org.spoofax.NotImplementedException;
 import org.spoofax.jsglr.BadTokenException;
+import org.spoofax.jsglr.Disambiguator;
 import org.spoofax.jsglr.InvalidParseTableException;
 import org.spoofax.jsglr.ParseTable;
 import org.spoofax.jsglr.RecoverAlgorithm;
@@ -53,6 +55,10 @@
 		return parser.getStartSymbol();
 	}
 	
+	public Disambiguator getDisambiguator() {
+		throw new NotImplementedException();
+	}
+	
 	public void setStartSymbol(String startSymbol) {
 		parser.setStartSymbol(startSymbol);
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-09-11 13:24:56 UTC (rev 19976)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-09-11 15:01:37 UTC (rev 19977)
@@ -53,6 +53,8 @@
 	
 	private final AstMessageHandler messages = new AstMessageHandler(AstMessageHandler.ANALYSIS_MARKER_TYPE);
 	
+	private final Object asyncUpdateSyncRoot = new Object();
+	
 	private Interpreter interpreter;
 	
 	private Job asyncLastBuildJob;
@@ -105,7 +107,7 @@
 	 * Starts a new update() operation, asynchronously.
 	 */
 	public void asyncUpdate(final IParseController parseController, final IProgressMonitor monitor) {		
-		synchronized (this) {
+		synchronized (asyncUpdateSyncRoot) {
 			if (asyncLastBuildJob != null)
 				asyncLastBuildJob.cancel();
 			

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	2009-09-11 13:24:56 UTC (rev 19976)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	2009-09-11 15:01:37 UTC (rev 19977)
@@ -29,6 +29,10 @@
 		
 		IOperatorRegistry library = context.getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME);
 		IMPParseStringPTPrimitive jsglr = (IMPParseStringPTPrimitive) library.get(IMPParseStringPTPrimitive.NAME);
+		if (jsglr == null) {
+			// Spoofax/IMP parsing may not be used for this context
+			return super.invoke(context, asfix, implodeConcreteSyntax);
+		}
 		
 		char[] inputChars = jsglr.getInputChars(asfix);
 		ATerm asfixATerm = jsglr.getInputTerm(asfix);



From L.C.L.Kats at tudelft.nl  Sat Sep 12 12:11:52 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 12 Sep 2009 10:11:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19978 - LennartKats -
	in strc-java/trunk: java/runtime/org/strategoxt/lang
	java/runtime/org/strategoxt/lang/compat/override trans
Message-ID: <200909121011.n8CABq52011543@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-12 10:11:51 +0000 (Sat, 12 Sep 2009)
New Revision: 19978

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19978&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str
   strc-java/trunk/trans/s2j.str

Log:
Tweaks to errors and warnings.

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java	2009-09-11 15:01:37 UTC (rev 19977)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java	2009-09-12 10:11:51 UTC (rev 19978)
@@ -1,5 +1,7 @@
 package org.strategoxt.lang;
 
+import java.util.ArrayList;
+
 import org.spoofax.interpreter.terms.IStrategoTerm;
 
 /**
@@ -75,151 +77,155 @@
 					case 5: return invoke(context, current, s[0], s[1], s[2], s[3], t[0], t[1], t[2], t[3], t[4]);
 				}
 		}
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		
+		ArrayList<Object> args = new ArrayList<Object>();
+		for (Object o : s) args.add(o);
+		for (Object o : t) args.add(o);
+		throw new IllegalArgumentException(args);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException();
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm t1) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(t1);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm t1, IStrategoTerm t2) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(t1, t2);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(t1, t2, t3);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(t1, t2, t3, t4);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4, IStrategoTerm t5) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(t1, t2, t3, t4, t5);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, IStrategoTerm t1) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, t1);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, IStrategoTerm t1, IStrategoTerm t2) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, t1, t2);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, t1, t2, t3);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, t1, t2, t3, t4);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4, IStrategoTerm t5) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, t1, t2, t3, t4, t5);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, IStrategoTerm t1) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, t1);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, IStrategoTerm t1, IStrategoTerm t2) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, t1, t2);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, t1, t2, t3);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, t1, t2, t3, t4);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4, IStrategoTerm t5) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, t1, t2, t3, t4, t5);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, IStrategoTerm t1) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, t1);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, IStrategoTerm t1, IStrategoTerm t2) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, t1, t2);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, t1, t2, t3);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, t1, t2, t3, t4);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4, IStrategoTerm t5) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, t1, t2, t3, t4, t5);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4, IStrategoTerm t1) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4, t1);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4, IStrategoTerm t1, IStrategoTerm t2) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4, t1, t2);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4, t1, t2, t3);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4, t1, t2, t3, t4);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4, IStrategoTerm t5) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4, t1, t2, t3, t4, t5);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4, Strategy s5) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4, s5);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4, Strategy s5, IStrategoTerm t1) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4, s5, t1);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4, Strategy s5, IStrategoTerm t1, IStrategoTerm t2) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4, s5, t1, t2);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4, Strategy s5, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4, s5, t1, t2, t3);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4, Strategy s5, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4, s5, t1, t2, t3, t4);
 	}
 
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s1, Strategy s2, Strategy s3, Strategy s4, Strategy s5, IStrategoTerm t1, IStrategoTerm t2, IStrategoTerm t3, IStrategoTerm t4, IStrategoTerm t5) {
-		throw new IllegalArgumentException("Illegal arguments for " + getName());
+		throw new IllegalArgumentException(s1, s2, s3, s4, s5, t1, t2, t3, t4, t5);
 	}
 	
 	public String getName() {
@@ -230,4 +236,44 @@
 	public String toString() {
 		return getName();
 	}
+
+	private static String argsToText(Object... args) {
+		if (args.length == 0)
+			return " (none)";
+		
+		StringBuilder result = new StringBuilder(" (");
+		boolean printedBar = false;
+
+		if (args[0] instanceof IStrategoTerm) {
+			result.append('|');
+			printedBar = true;
+		}
+		result.append(args[0]);
+		
+		for (int i = 1; i < args.length; i++) {
+			Object arg = args[0];
+			if (!printedBar && arg instanceof IStrategoTerm) {
+				result.append(" |");
+				printedBar = true;
+			} else {
+				result.append(", ");
+			}
+			result.append(arg);
+		}
+		result.append(")");
+		
+		return result.toString();
+	}
+
+	/**
+	 * Thrown to indicate that a strategy has been passed an illegal or
+	 * inappropriate argument or arguments.
+	 */
+	private class IllegalArgumentException extends java.lang.IllegalArgumentException {
+		private static final long serialVersionUID = 121251125123L;
+		
+		public IllegalArgumentException(Object... args) {
+			super("Illegal arguments for " + getName() + " " + argsToText(args));
+		}
+	}
 }
\ No newline at end of file

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str	2009-09-11 15:01:37 UTC (rev 19977)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str	2009-09-12 10:11:51 UTC (rev 19978)
@@ -83,6 +83,9 @@
 strategies // location information
 
   override asfix-anno-location = // TODO: asfix-anno-location?
+    AsfixAnnoLocationWarned
+  <+
+    rules(AsfixAnnoLocationWarned: _);
     warn-msg(|"Asfix location annotation not implemented for this platform")
 
   override asfix-anno-position-info(|name) =

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-09-11 15:01:37 UTC (rev 19977)
+++ strc-java/trunk/trans/s2j.str	2009-09-12 10:11:51 UTC (rev 19978)
@@ -230,7 +230,7 @@
     with
       x' := <jify> x
   
-  java-init-import :
+  java-init-import : // TODO: Call the library-specific main class instead
     x -> |[ x'.Main.init(context); ]|
     with
       x' := <jify> x



From L.C.L.Kats at tudelft.nl  Mon Sep 14 13:10:50 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 14 Sep 2009 11:10:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19979 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms
	strc-java/trunk/java strc-java/trunk/java/runtime/org/strategoxt
	strc-java/trunk/java/runtime/org/strategoxt/lang
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstratego_rtg_compat
	strc-java/trunk/trans
Message-ID: <200909141110.n8EBAoJM029879@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-14 11:10:50 +0000 (Mon, 14 Sep 2009)
New Revision: 19979

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19979&view=rev

Added:
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropCallT.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategy.java
Removed:
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategy.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java
Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/IContext.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterException.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterExit.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Main.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/StrategoCoreLoader.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/SDefT.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/TermConverter.java
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropContext.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstratego_rtg_compat/Main.java
   strc-java/trunk/java/spoofax-libs.jar
   strc-java/trunk/trans/s2j.str

Log:
Refactoring and fixes related to dynamic loading of Strategy classes and integration with the interpreter.

Changes (first 1000 lines of the diffs):

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/IContext.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/IContext.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/IContext.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -16,8 +16,6 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 
-// FIXME aggregate IStrategoTermBuilder instead
-
 public interface IContext {
 
     public IStrategoTerm current();

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Interpreter.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -144,12 +144,15 @@
         return context.getFactory();
     }
 
-    public void load(InputStream stream) throws IOException, InterpreterException {
-        loader.load(stream);
+    public final void load(InputStream stream) throws IOException, InterpreterException {
+        if (stream == null)
+            throw new IOException("Could not load Stratego core input from null stream");
+            
+       load(context.getProgramFactory().parseFromStream(stream));
     }
     
-    public void load(String file) throws IOException, InterpreterException {
-        loader.load(file);
+    public final void load(String file) throws IOException, InterpreterException {
+        load(context.getProgramFactory().parseFromFile(file));
     }
 
 	public void load(IStrategoTerm term) throws InterpreterException {
Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterException.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterException.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterException.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -11,7 +11,7 @@
 
     private static final long serialVersionUID = -3622131518420023392L;
     
-    public InterpreterException(String message, Exception cause) {
+    public InterpreterException(String message, Throwable cause) {
         super(message, cause);
     }
 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterExit.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterExit.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterExit.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -20,6 +20,11 @@
         this.value = value;
     }
     
+    public InterpreterExit(int value, Throwable cause) {
+        super("Legal exit", cause);
+        this.value = value;
+    }
+    
     public int getValue() {
         return value;
     }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Main.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Main.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Main.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -127,7 +127,7 @@
             if(ior == null) {
                 System.err.println("Unable to load '" + s + "'");
             } else {
-                itp.addOperatorRegistry(ior.getOperatorRegistryName(), ior);
+                itp.addOperatorRegistry(ior);
             }
         }
     }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/StrategoCoreLoader.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/StrategoCoreLoader.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/StrategoCoreLoader.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -363,6 +363,7 @@
         return new Build(u);
     }
     
+    @Deprecated
     public void load(String path) throws IOException, InterpreterException {
         doLoad(context.getProgramFactory().parseFromFile(path));
     }
@@ -419,6 +420,7 @@
 
     }
 
+    @Deprecated
     public void load(InputStream stream) throws InterpreterException, IOException {
         if (stream == null)
             throw new IOException("Could not load Stratego core input from null stream");

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -27,27 +27,24 @@
  * @author Karl Trygve Kalleberg <karltk near strategoxt.org>
  */
 public class IOAgent {
+    
     public final static int CONST_STDIN = 0;
+    
     public final static int CONST_STDOUT = 1;
+    
     public final static int CONST_STDERR = 2;
     
-    private InputStream stdinStream;
-    private PrintStream stdoutStream;
-    private PrintStream stderrStream;
+    private final Map<Integer, InputStream> inStreams = new HashMap<Integer, InputStream>();
     
-    private Map<Integer, InputStream> inStreams = new HashMap<Integer, InputStream>();
+    private final Map<Integer, PrintStream> outStreams = new HashMap<Integer, PrintStream>();
     
-    private Map<Integer, PrintStream> outStreams = new HashMap<Integer, PrintStream>();
-    
     private String workingDir;
+    
     private String definitionDir;
+    
     private int fileCounter = 3;
     
     public IOAgent() {
-        stdinStream = System.in;
-        stdoutStream = System.out;
-        stderrStream = System.err;
-        
         try {
             String dir = System.getProperty("user.dir");
             if (dir == null) dir = ".";
@@ -108,9 +105,9 @@
     
     public PrintStream getOutputStream(int fd) {
         if(fd == CONST_STDOUT) {
-            return stdoutStream;
+            return System.out;
         } else if (fd == CONST_STDERR) {
-            return stderrStream;
+            return System.err;
         }
         return outStreams.get(fd);
     }
@@ -145,10 +142,7 @@
     }
 
     public InputStream getInputStream(int fd) {
-        if(fd == CONST_STDIN) {
-            return stdinStream;
-        }
-        return inStreams.get(fd);
+        return fd == CONST_STDIN ? System.in : inStreams.get(fd);
     }
     
     /**
@@ -180,7 +174,7 @@
     }
     
     public boolean mkdir(String fn) {
-        return openFile(getAbsolutePath(getWorkingDir(), fn)).mkdir();
+        return openFile(fn).mkdir();
     }
     
     @Deprecated // this is not a Stratego primitive; use mkdir instead

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/SDefT.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/SDefT.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/SDefT.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -86,7 +86,9 @@
         this.scope = scope;
     }
     
-    protected SDefT() {}
+    protected SDefT(VarScope scope) {
+        this.scope = scope;
+    }
 
     public  IConstruct eval(IContext e) throws InterpreterException {
         //e.getVarScope().dump("", true);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/TermConverter.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/TermConverter.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/TermConverter.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -37,6 +37,7 @@
             case REAL: return convert((IStrategoReal) term);
             case STRING: return convert((IStrategoString) term);
             case TUPLE: return convert((IStrategoTuple) term);
+            case BLOB: return term;
             default:
                 throw new IllegalStateException("Unkown term type: " + term.getClass().getSimpleName());
         }

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -3,10 +3,15 @@
 import org.spoofax.interpreter.adapter.aterm.BAFBasicTermFactory;
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.Interpreter;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.core.InterpreterExit;
 import org.spoofax.interpreter.core.StackTracer;
 import org.spoofax.interpreter.library.IOperatorRegistry;
+import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 import org.strategoxt.lang.Context;
+import org.strategoxt.lang.StrategoException;
+import org.strategoxt.lang.StrategoExit;
 
 /**
  * An interpreter that uses STRJ-compiled versions of the Stratego standard libraries.
@@ -18,13 +23,15 @@
  * <code>
  *   HybridInterpreter i = new HybridInterpreter();
  *   mylib.registerInterop(i.getContext(), i.getCompiledContext());
- * </code
+ * </code> 
  * 
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public class HybridInterpreter extends Interpreter {
 	
 	private final HybridCompiledContext compiledContext;
+	
+	private boolean registeredLibraries;
 
 	public HybridInterpreter() {
 		this(new BAFBasicTermFactory());
@@ -38,7 +45,6 @@
 		super(termFactory, programFactory);
 		
 		compiledContext = new HybridCompiledContext(termFactory);
-		registerLibraries();
 	}
 	
 	@Override
@@ -46,6 +52,20 @@
 		return new HybridContext(termFactory, programFactory);
 	}
 	
+	@Override
+	public void load(IStrategoTerm term) throws InterpreterException {
+		// Lazily register library strategies
+		// (since this interpreter may only be used with compiled strategies)
+		if (!registeredLibraries) {
+			registeredLibraries = true;
+			registerLibraries();
+		}
+		super.load(term);
+	}
+	
+	/**
+	 * Initialize the interpreter register with all standard library strategies.
+	 */
 	protected void registerLibraries() {
 		IContext context = getContext();
 		Context compiledContext = getCompiledContext();
@@ -67,6 +87,17 @@
 		return compiledContext;
 	}
 	
+	@Override
+	public boolean invoke(String name) throws InterpreterExit, InterpreterException {
+		try {
+			return super.invoke(name);
+        } catch (StrategoExit e) {
+            throw new InterpreterExit(e.getValue(), e);
+        } catch (StrategoException e) {
+            throw new InterpreterException(e);
+        }
+	}
+	
 	/**
 	 * A hybrid interpreter context.
 	 * 

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -18,6 +18,7 @@
 import org.strategoxt.lang.compat.CompatManager;
 import org.strategoxt.lang.compat.SSL_EXT_java_call;
 import org.strategoxt.lang.terms.TermFactory;
+import static org.strategoxt.lang.Term.*;
 
 /**
  * The runtime context of a compiled Stratego strategy.
@@ -148,7 +149,12 @@
     	
     	IStrategoList term = factory.makeList(termArgs);
     	
-    	return strategy.invoke(this, term);
+    	// Launch with a clean operand stack when launched from SSL_java_call, Ant, etc.
+    	if (new Exception().getStackTrace().length > 20) {
+    		return strategy.invokeStackFriendly(this, term, NO_STRATEGIES, NO_TERMS);
+    	} else {
+    		return strategy.invoke(this, term);
+    	}
     }
     
     public final IStrategoTerm invokePrimitive(String name, IStrategoTerm term, Strategy[] sargs, IStrategoTerm[] targs) {
@@ -165,7 +171,7 @@
 		
     	interopContext.setCurrent(term);
 		try {
-			if (primitive.call(interopContext, InteropStrategy.toInteropStrategies(sargs, this), targs)) {
+			if (primitive.call(interopContext, InteropCallT.toInteropCallTs(sargs, this), targs)) {
 				return interopContext.current();
 			} else {
 				return null;

Copied: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropCallT.java (from rev 19932, strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategy.java)
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropCallT.java	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropCallT.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -0,0 +1,117 @@
+package org.strategoxt.lang;
+
+import org.spoofax.NotImplementedException;
+import org.spoofax.interpreter.core.IConstruct;
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.stratego.CallT;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Adapts an {@link Strategy} strategy to a {@link CallT},
+ * making interpreter strategies and primitives with strategy arguments
+ * accessible for compiled strategies.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class InteropCallT extends CallT {
+	
+	private static final CallT[] NO_CALLTS = {};
+	
+	private static final Strategy[] NO_ISTRATEGIES = {};
+	
+	private final Strategy strategy;
+	
+	private final Context context;
+	
+	/**
+	 * Creates a new InteropCallT instance.
+	 * 
+	 * @param strategy	The strategy to adapt.
+	 * @param context	The compiled context; may be null if used with an {@link InteropContext}.
+	 */
+	public InteropCallT(Strategy strategy, Context context) {
+		super(null, null, null);
+		
+		this.strategy = strategy;
+		this.context = context;
+	}
+    
+	/**
+	 * @param context	The compiled context; may be null if used with an {@link InteropContext}.
+	 */
+	public static CallT[] toInteropCallTs(Strategy[] strategies, Context context) {
+    	if (strategies.length == 0) return NO_CALLTS;
+    	
+    	CallT[] results = new CallT[strategies.length];
+    	for (int i = 0; i < strategies.length; i++)
+    		results[i] = new InteropCallT(strategies[i], context);
+    	return results;
+    }
+    
+	public static Strategy[] fromInteropCallTs(org.spoofax.interpreter.stratego.Strategy[] strategies) {
+		if (strategies.length == 0)
+			return NO_ISTRATEGIES;
+
+		Strategy[] results = new Strategy[strategies.length];
+		for (int i = 0; i < strategies.length; i++) {
+			org.spoofax.interpreter.stratego.Strategy strategy = strategies[i];
+			if (!(strategy instanceof InteropCallT))
+				throw new StrategoException("Expected InteropStrategy");
+			results[i] = ((InteropCallT) strategy).strategy;
+		}
+		return results;
+    }
+	
+	@Override
+	public String getTargetStrategyName() {
+		return strategy.getName();
+	}
+	
+	@Override
+	public IConstruct eval(IContext env) throws InterpreterException {
+		return evaluate(env)
+			? getHook().pop().onSuccess(env)
+			: getHook().pop().onFailure(env);
+	}
+
+	@Override
+	public boolean evaluate(IContext env) {
+		IStrategoTerm result = strategy.invoke(getCompiledContext(env), env.current());
+		if (result == null) return false;
+		env.setCurrent(result);
+		
+		return true;
+	}
+
+	private Context getCompiledContext(IContext env) {
+		if (context != null)
+			return context;
+		
+		if (!(env instanceof InteropContext))
+			throw new StrategoException("Expected InteropContext");
+		Context context = ((InteropContext) env).getContext();
+		return context;
+	}
+	
+	@Override
+	public boolean evaluateWithArgs(IContext env, org.spoofax.interpreter.stratego.Strategy[] sv, IStrategoTerm[] tv) {
+		IStrategoTerm result;
+		if (tv.length == 0 && sv.length == 0) {
+			result = strategy.invoke(getCompiledContext(env), env.current());
+		} else {
+			result = strategy.invokeDynamic(
+					getCompiledContext(env), env.current(), fromInteropCallTs(sv), tv);
+		}
+		if (result == null) return false;
+		env.setCurrent(result);		
+		return true;		
+	}
+	
+	@Override
+	public org.spoofax.interpreter.stratego.Strategy evalWithArgs(IContext env, org.spoofax.interpreter.stratego.Strategy[] sv,
+			IStrategoTerm[] actualTVars) throws InterpreterException {
+		throw new NotImplementedException();
+	}
+}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropContext.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropContext.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropContext.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -17,7 +17,7 @@
 
 /**
  * Provides interoperability with the (relatively dynamic) {@link IContext}
- * interface.
+ * interface. Its main use is calling Stratego primitives.
  * 
  * @author Lennart Kats <lennart add lclnet.nl>
  */
@@ -93,7 +93,6 @@
 
 	public void restoreVarScope(VarScope anotherVarScope) {
 		throw new UnsupportedOperationException();
-
 	}
 
 	public void setVarScope(VarScope newVarScope) {

Deleted: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -1,91 +0,0 @@
-package org.strategoxt.lang;
-
-import java.util.Arrays;
-
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.core.InterpreterException;
-import org.spoofax.interpreter.core.VarScope;
-import org.spoofax.interpreter.stratego.SDefT;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-
-/**
- * Adapts an {@link SDefT} definition to a {@link Strategy},
- * making interpreter strategy arguments accessible to the compiled strategies.
- * 
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class InteropSDefT extends DynamicStrategy {
-	
-	private final SDefT definition;
-	
-	private final IContext context;
-	
-	public InteropSDefT(SDefT definition, IContext context) {
-		this.definition = definition;
-		this.context = context;
-	}
-	
-	public static Strategy[] toInteropSDefTs(SDefT[] definitions, IContext context) {
-		Strategy[] results = new Strategy[definitions.length];
-		for (int i = 0; i < definitions.length; i++) {
-			SDefT definition = definitions[i];
-			if (definition instanceof InteropStrategyDef) {
-				results[i] = ((InteropStrategyDef) definition).getStrategy();
-			} else {
-				results[i] = new InteropSDefT(definitions[i], context);
-			}
-		}
-		return results;
-	}
-	
-	@Override
-	public IStrategoTerm invokeDynamic(Context compiledContext, IStrategoTerm current, Strategy[] sargs, IStrategoTerm[] targs) {
-		VarScope oldScope = context.getVarScope();
-		try {
-		    VarScope defScope = definition.getScope();
-			if (sargs.length != 0 || targs.length != 0) {
-				defScope = new VarScope(defScope);
-				assignParameters(compiledContext, defScope, sargs, targs);
-				context.setVarScope(defScope);
-			}
-			
-			context.setCurrent(current);
-			context.setVarScope(defScope);
-			boolean success = definition.evaluate(context);
-			return success ? context.current() : null;
-		} catch (InterpreterException e) {
-			throw new StrategoException("Exception in interpreter: " + e.getMessage(), e);
-		} finally {
-			context.restoreVarScope(oldScope);
-		}
-	}
-
-	private void assignParameters(Context compiledContext, VarScope scope, Strategy[] sargs, IStrategoTerm[] targs)
-			throws InterpreterException {
-		
-		SDefT.SVar[] sparams = definition.getStrategyParams();
-		String[] tparams = definition.getTermParams();
-		SDefT[] sargs2 = InteropStrategyDef.toInteropStrategyDefs(sargs, context, compiledContext);
-		if (sparams.length != sargs.length || tparams.length != targs.length) {
-			throw new InterpreterException("Illegal number of arguments passed to strategy "
-					+ getName() + ": (" + Arrays.toString(sargs) + "|" + Arrays.toString(targs) + ")");
-		}
-		
-		for (int i = 0; i < sparams.length; i++) {
-			scope.addSVar(sparams[i].name, sargs2[i]);
-		}
-		
-		for (int i = 0; i < tparams.length; i++) {
-			scope.add(tparams[i], targs[i]);
-		}
-	}
-	
-	@Override
-	public String getName() {
-		return definition.getName();
-	}
-	
-	public SDefT getDefinition() {
-		return definition;
-	}
-}

Copied: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java (from rev 19950, strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java)
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -0,0 +1,201 @@
+package org.strategoxt.lang;
+
+import org.spoofax.interpreter.core.IConstruct;
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.core.InterpreterExit;
+import org.spoofax.interpreter.core.VarScope;
+import org.spoofax.interpreter.stratego.SDefT;
+import org.spoofax.interpreter.stratego.StupidFormatter;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+
+/**
+ * Adapts an {@link Strategy} strategy to a {@link SDefT},
+ * making compiled strategies available to the interpreter.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class InteropSDefT extends SDefT {
+	
+	private static final ConstType CONST_TYPE = new ConstType();
+	
+	private static final SVar[] NO_SVARS = {};
+	
+	private static final String[] NO_STRINGS = {};
+	
+	private final Context compiledContext;
+	
+	private final String strategyClassName;
+	
+	private final ClassLoader classLoader;
+	
+	private Strategy strategy;
+
+	public InteropSDefT(Strategy strategy, IContext context, Context compiledContext) {
+		super(context.getVarScope());
+		this.strategyClassName = null;
+		this.classLoader = null;
+		this.compiledContext = compiledContext;
+		this.strategy = strategy;
+	}
+
+	/**
+	 * Creates a new InteropSDefT that dynamically loads the specified strategy class.
+	 */
+	public InteropSDefT(ClassLoader classLoader, String strategyClassName, IContext context, Context compiledContext) {
+		super(context.getVarScope());
+		this.classLoader = classLoader;
+		this.strategyClassName = strategyClassName;
+		this.compiledContext = compiledContext;
+	}
+
+	public static SDefT[] toInteropSDefTs(Strategy[] strategies, IContext context, Context compiledContext) {
+		SDefT[] results = new SDefT[strategies.length];
+		for (int i = 0; i < strategies.length; i++) {
+			Strategy strategy = strategies[i];
+			if (strategy instanceof InteropStrategy) {
+				results[i] = ((InteropStrategy) strategy).getDefinition();
+			} else {
+				results[i] = new InteropSDefT(strategy, context, compiledContext);
+			}
+		}
+		return results;
+	}
+
+	@Override
+	public String getName() {
+		return getStrategy().getName();
+	}
+	
+	@Override
+	protected void setName(String name) {
+		throw new UnsupportedOperationException();
+	}
+
+	@Override
+	public SVar[] getStrategyParams() {
+		SVar[] results = super.getStrategyParams();
+		if (results != null) return results;
+		
+		String name = getName();
+		int countEnd = name.lastIndexOf('_');
+		int countStart = name.lastIndexOf('_', countEnd - 1);
+		int count = Integer.parseInt(name.substring(countStart + 1, countEnd));
+		
+		if (count == 0) return NO_SVARS;
+		
+		results = new SVar[count];
+		for (int i = 0; i < results.length; i++) {
+			results[i] = new SVar("s" + i, CONST_TYPE);
+		}
+		
+		return results;
+	}
+
+	@Override
+	public String[] getTermParams() {
+		String[] results = super.getTermParams();
+		if (results != null) return results;
+		
+		String name = getName();
+		int countStart = name.lastIndexOf('_');
+		int count = Integer.parseInt(name.substring(countStart + 1));
+		
+		if (count == 0) return NO_STRINGS;
+		
+		results = new String[count];
+		for (int i = 0; i < results.length; i++) {
+			results[i] = "t" + i;
+		}
+		
+		return results;
+	}
+	
+	@Override
+	public org.spoofax.interpreter.stratego.Strategy getBody() {
+		org.spoofax.interpreter.stratego.Strategy result = super.getBody();
+		if (result == null) {
+			result = new org.spoofax.interpreter.stratego.Strategy() {
+				public IConstruct eval(IContext env) throws InterpreterException {
+					return evaluate(env)
+						? getHook().pop().onSuccess(env)
+						: getHook().pop().onFailure(env);
+				}
+				
+				@Override
+				public boolean evaluate(IContext env) throws InterpreterException {
+					return InteropSDefT.this.evaluate(env);
+				}
+	
+				public void prettyPrint(StupidFormatter fmt) {
+					InteropSDefT.this.prettyPrint(fmt);
+				}
+				
+				@Override
+				protected String getTraceName() {
+					return getName();
+				}
+			};
+			setBody(result);
+		}
+		return result;
+	}
+	
+	@Override
+	public boolean evaluate(IContext env) throws InterpreterException {
+		VarScope scope = env.getVarScope();
+		SVar[] svars = getStrategyParams();
+		String[] tvars = getTermParams();
+		SDefT[] sargs = new SDefT[svars.length];
+		IStrategoTerm[] targs = new IStrategoTerm[tvars.length];
+		
+		for (int i = 0; i < svars.length; i++) {
+			SDefT sarg = scope.lookupSVar(svars[i].name);
+			if (sarg == null) throw new InterpreterException("Missing strategy argument: " + svars[i].name);
+			sargs[i] = sarg;
+		}
+		
+		for (int i = 0; i < tvars.length; i++) {
+			IStrategoTerm targ = scope.lookup(tvars[i]);
+            if (targ == null) throw new InterpreterException("Missing term argument: " + tvars[i]);
+			targs[i] = targ;
+		}
+		
+		Strategy[] sdefargs = InteropStrategy.toInteropStrategies(sargs, env);
+		IStrategoTerm result;
+		try {
+			result = getStrategy().invokeDynamic(compiledContext, env.current(), sdefargs, targs);
+		} catch (StrategoExit e) {
+			throw new InterpreterExit(e.getValue(), e);
+		}
+		
+		if (result != null) {
+			env.setCurrent(result);
+			return true;
+		} else {
+			return false;
+		}
+	}
+	
+	public Strategy getStrategy() {
+		if (strategy == null) {
+			try {
+				Class<?> strategyClass = classLoader.loadClass(strategyClassName);
+				strategy = (Strategy) strategyClass.getField("instance").get(null);
+			} catch (ClassNotFoundException e) {
+				throw new StrategoException("Unable to instantiate compiled strategy", e);
+			} catch (IllegalAccessException e) {
+				throw new StrategoException("Unable to instantiate compiled strategy", e);
+			} catch (IllegalArgumentException e) {
+				throw new StrategoException("Unable to instantiate compiled strategy", e);
+			} catch (SecurityException e) {
+				throw new StrategoException("Unable to instantiate compiled strategy", e);
+			} catch (NoSuchFieldException e) {
+				throw new StrategoException("Unable to instantiate compiled strategy", e);
+			}
+		}
+			
+		return strategy;
+	}
+}
+

Deleted: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategy.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategy.java	2009-09-12 10:11:51 UTC (rev 19978)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategy.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -1,117 +0,0 @@
-package org.strategoxt.lang;
-
-import org.spoofax.NotImplementedException;
-import org.spoofax.interpreter.core.IConstruct;
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.core.InterpreterException;
-import org.spoofax.interpreter.stratego.CallT;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.lang.Strategy;
-
-/**
- * Adapts an {@link Strategy} strategy to a {@link CallT},
- * making interpreter strategies and primitives with strategy arguments
- * accessible for compiled strategies.
- * 
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class InteropStrategy extends CallT {
-	
-	private static final CallT[] NO_CALLTS = {};
-	
-	private static final Strategy[] NO_ISTRATEGIES = {};
-	
-	private final Strategy strategy;
-	
-	private final Context context;
-	
-	/**
-	 * Creates a new InteropStrategy instance.
-	 * 
-	 * @param strategy	The strategy to adapt.
-	 * @param context	The compiled context; may be null if used with an {@link InteropContext}.
-	 */
-	public InteropStrategy(Strategy strategy, Context context) {
-		super(null, null, null);
-		
-		this.strategy = strategy;
-		this.context = context;
-	}
-    
-	/**
-	 * @param context	The compiled context; may be null if used with an {@link InteropContext}.
-	 */
-	public static CallT[] toInteropStrategies(Strategy[] strategies, Context context) {
-    	if (strategies.length == 0) return NO_CALLTS;
-    	
-    	CallT[] results = new CallT[strategies.length];
-    	for (int i = 0; i < strategies.length; i++)
-    		results[i] = new InteropStrategy(strategies[i], context);
-    	return results;
-    }
-    
-	public static Strategy[] fromInteropStrategies(org.spoofax.interpreter.stratego.Strategy[] strategies) {
-		if (strategies.length == 0)
-			return NO_ISTRATEGIES;
-
-		Strategy[] results = new Strategy[strategies.length];
-		for (int i = 0; i < strategies.length; i++) {
-			org.spoofax.interpreter.stratego.Strategy strategy = strategies[i];
-			if (!(strategy instanceof InteropStrategy))
-				throw new StrategoException("Expected InteropStrategy");
-			results[i] = ((InteropStrategy) strategy).strategy;
-		}
-		return results;
-    }
-	
-	@Override
-	public String getTargetStrategyName() {
-		return strategy.getName();
-	}
-	
-	@Override
-	public IConstruct eval(IContext env) throws InterpreterException {
-		return evaluate(env)
-			? getHook().pop().onSuccess(env)
-			: getHook().pop().onFailure(env);
-	}
-
-	@Override
-	public boolean evaluate(IContext env) {
-		IStrategoTerm result = strategy.invoke(getCompiledContext(env), env.current());
-		if (result == null) return false;
-		env.setCurrent(result);
-		
-		return true;
-	}
-
-	private Context getCompiledContext(IContext env) {
-		if (context != null)
-			return context;
-		
-		if (!(env instanceof InteropContext))
-			throw new StrategoException("Expected InteropContext");
-		Context context = ((InteropContext) env).getContext();
-		return context;
-	}
-	
-	@Override
-	public boolean evaluateWithArgs(IContext env, org.spoofax.interpreter.stratego.Strategy[] sv, IStrategoTerm[] tv) {
-		IStrategoTerm result;
-		if (tv.length == 0 && sv.length == 0) {
-			result = strategy.invoke(getCompiledContext(env), env.current());
-		} else {
-			result = strategy.invokeDynamic(
-					getCompiledContext(env), env.current(), fromInteropStrategies(sv), tv);
-		}
-		if (result == null) return false;
-		env.setCurrent(result);		
-		return true;		
-	}
-	
-	@Override
-	public org.spoofax.interpreter.stratego.Strategy evalWithArgs(IContext env, org.spoofax.interpreter.stratego.Strategy[] sv,
-			IStrategoTerm[] actualTVars) throws InterpreterException {
-		throw new NotImplementedException();
-	}
-}

Copied: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategy.java (from rev 19932, strc-java/trunk/java/runtime/org/strategoxt/lang/InteropSDefT.java)
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategy.java	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategy.java	2009-09-14 11:10:50 UTC (rev 19979)
@@ -0,0 +1,91 @@
+package org.strategoxt.lang;
+
+import java.util.Arrays;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.core.VarScope;
+import org.spoofax.interpreter.stratego.SDefT;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+
+/**
+ * Adapts an {@link SDefT} definition to a {@link Strategy},
+ * making interpreter strategy arguments accessible to the compiled strategies.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class InteropStrategy extends DynamicStrategy {
+	
+	private final SDefT definition;
+	
+	private final IContext context;
+	
+	public InteropStrategy(SDefT definition, IContext context) {
+		this.definition = definition;
+		this.context = context;
+	}
+	
+	public static Strategy[] toInteropStrategies(SDefT[] definitions, IContext context) {
+		Strategy[] results = new Strategy[definitions.length];
+		for (int i = 0; i < definitions.length; i++) {
+			SDefT definition = definitions[i];
+			if (definition instanceof InteropSDefT) {
+				results[i] = ((InteropSDefT) definition).getStrategy();
+			} else {
+				results[i] = new InteropStrategy(definitions[i], context);
+			}
+		}
+		return results;
+	}
+	
+	@Override
+	public IStrategoTerm invokeDynamic(Context compiledContext, IStrategoTerm current, Strategy[] sargs, IStrategoTerm[] targs) {
+		VarScope oldScope = context.getVarScope();
+		try {
+		    VarScope defScope = definition.getScope();
+			if (sargs.length != 0 || targs.length != 0) {
+				defScope = new VarScope(defScope);
+				assignParameters(compiledContext, defScope, sargs, targs);
+				context.setVarScope(defScope);
+			}
+			
+			context.setCurrent(current);
+			context.setVarScope(defScope);
+			boolean success = definition.evaluate(context);
+			return success ? context.current() : null;
+		} catch (InterpreterException e) {
+			throw new StrategoException("Exception in interpreter: " + e.getMessage(), e);
+		} finally {
+			context.restoreVarScope(oldScope);
+		}
+	}
+
+	private void assignParameters(Context compiledContext, VarScope scope, Strategy[] sargs, IStrategoTerm[] targs)
+			throws InterpreterException {
+		
+		SDefT.SVar[] sparams = definition.getStrategyParams();
+		String[] tparams = definition.getTermParams();
+		SDefT[] sargs2 = InteropSDefT.toInteropSDefTs(sargs, context, compiledContext);
+		if (sparams.length != sargs.length || tparams.length != targs.length) {
+			throw new InterpreterException("Illegal number of arguments passed to strategy "
+					+ getName() + ": " + Arrays.toString(sargs) + "|" + Arrays.toString(targs));
+		}
+		
+		for (int i = 0; i < sparams.length; i++) {
+			scope.addSVar(sparams[i].name, sargs2[i]);
+		}
+		
+		for (int i = 0; i < tparams.length; i++) {
+			scope.add(tparams[i], targs[i]);
+		}
+	}
+	
+	@Override
+	public String getName() {
+		return definition.getName();
+	}
+	
+	public SDefT getDefinition() {
+		return definition;
+	}
+}

Deleted: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropStrategyDef.java	2009-09-12 10:11:51 UTC (rev 19978)

(403 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Mon Sep 14 13:15:17 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 14 Sep 2009 11:15:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19980 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.generator/src/sdf2imp/services
	org.strategoxt.imp.generator/src/syntax
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <200909141115.n8EBFHvC029949@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-14 11:15:17 +0000 (Mon, 14 Sep 2009)
New Revision: 19980

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19980&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-analysis-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/SemanticServices.sdf
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java

Log:
Added support for compilation and loading of JAR files for semantic services.

Changes:

Deleted: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-14 11:10:50 UTC (rev 19979)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-14 11:15:17 UTC (rev 19980)
@@ -1,119 +0,0 @@
-module project/create-build-xml
-
-imports
-  sdf2imp/util/-
-
-strategies
-
-  create-build-xml =
-    <file-exists> "build.xml"
-  <+
-    name       := <get-sdf-main-module>;
-    name'      := <lower-case; cify; string-replace(|"_", "-")> name;
-    classname  := <get-main-class-name>;
-    pkgname    := <BasePackage <+ default-package-name>;
-    
-    <output-xml-file(|[], "build.xml")>
-    %>
-    <?xml version="1.0" encoding="UTF-8"?>
-    <project name="<%= name %>" default="all">
-    
-        <!-- Project directories -->
-        <property name="trans" location="trans"/>
-        <property name="src-gen" location="editor/java"/>
-        <property name="syntax" location="syntax"/>
-        <property name="lib" location="lib"/>
-        <property name="build" location="bin"/>
-        <property name="dist" location="bin/dist"/>
-        
-        <!-- Key input modules -->
-        <property name="sdfmodule" value="WebDSL"/>
-        <property name="esvmodule" value="WebDSL"/>
-        <property name="strmodule" value="webdsl"/>
-        
-        <!-- External .def location (optional)
-        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
-        -->
-        
-        <!-- Environment configuration -->
-        <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
-        <property name="build.sdf.imports" value=""/>
-        <property name="build.stratego.args"
-                 value="-m main-${strmodule} -S -I ${trans} -I ${build} -I ${lib}
-                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc
-                        -I ${user.home}/.nix-profile/share/java-front
-                        -I include
-                        -la ${user.home}/.nix-profile/lib/libjava-front.la"/>
-        
-        <!-- Initialization -->
-        <target name="all" depends="stratego.java,sdf2table,sdf2imp"/>
-        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
-        <available file="${build.strategoxt}/strj" property="build.stratego.usenativestrj"/>
-        <dirname property="externaldefdir" file="${externaldef}"/>
-        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
-            <isset property="externaldef"/>
-        </condition>
-        <mkdir dir="${build}"/>
-        <mkdir dir="${src-gen}"/>
-        <mkdir dir="${dist}"/>
-        <mkdir dir="include"/>
-    
-    	<target name="sdf2imp" depends="sdf2imp.eclipse,sdf2imp.standalone"/>
-        
-        <target name="sdf2imp.eclipse" depends="sdf2table" if="eclipse.running">
-            <!-- In Eclipse, we trigger the Eclipse builder rather than build it here -->
-            <touch file="include/${esvmodule}.packed.esv"/>
-            <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
-        </target>
-        
-        <target name="sdf2imp.standalone" depends="sdf2table,aux-files" unless="eclipse.running">
-            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true" fork="true">
-                <jvmarg line="-ss4m -server"/> 
-                <arg value="-i"/>
-                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
-                <arg value="-p"/>
-                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
-            </java>
-        </target>
-    
-        <target name="sdf2table" depends="make-permissive">
-            <apply executable="${build.strategoxt}/sdf2table" dest="include" failonerror="true">
-                <arg value="-i"/>
-                <srcfile/>
-                <arg value="-o"/>
-                <targetfile/>
-                <arg value="-m"/>
-                <arg value="${sdfmodule}"/>
-                
-                <fileset file="include/${sdfmodule}-Permissive.def"/>
-                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
-            </apply>
-        </target>
-        
-        <target name="make-permissive" depends="pack-sdf,copy-sdf">
-            <dependset>
-                <srcfileset file="include/${sdfmodule}.def"/>
-                <targetfileset file="include/${sdfmodule}-Permissive.def"/>
-            </dependset>
-            <available file="include/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
-            <antcall target="make-permissive.real"/>
-        </target>
-    
-        <target name="make-permissive.real" unless="permissive-grammar.available" depends="aux-files">
-            <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
-                <arg value="-i"/>
-                <arg value="${basedir}/include/${sdfmodule}.def"/>
-                <arg value="-o"/>
-                <arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
-            </java>
-        </target>
-
-        <target name="aux-files">
-            <property name="site" value="http://www.st.ewi.tudelft.nl/~kats/strategoxt/18a"/>
-            <mkdir dir="aux"/>
-            <get src="${site}/strategoxt.jar" dest="aux/strategoxt.jar" usetimestamp="true" ignoreerrors="true"/>
-            <get src="${site}/make_permissive.jar" dest="aux/make_permissive.jar" usetimestamp="true" ignoreerrors="true"/>
-            <get src="${site}/sdf2imp.jar" dest="aux/sdf2imp.jar" usetimestamp="true" ignoreerrors="true"/>
-        </target>
-    </project>
-    <%

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str (from rev 19944, spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-14 11:15:17 UTC (rev 19980)
@@ -0,0 +1,248 @@
+module project/create-build-xml
+
+imports
+  sdf2imp/util/-
+
+strategies
+
+  create-build-xml =
+    <file-exists> "build.xml"
+  <+
+    name       := <get-sdf-main-module>;
+    name'      := <lower-case; cify; string-replace(|"_", "-")> name;
+    classname  := <get-main-class-name>;
+    pkgname    := <BasePackage <+ default-package-name>;
+    
+    <output-xml-file(|[], "build.xml")>
+    %>
+    <?xml version="1.0" encoding="UTF-8"?>
+    <project name="<%= name %>" default="all">
+    
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
+        <property name="syntax" location="syntax"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="WebDSL"/>
+        <property name="esvmodule" value="WebDSL"/>
+        <property name="strmodule" value="webdsl"/>
+        
+        <!-- External .def location (optional)
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        -->
+        
+        <!-- Environment configuration -->
+        <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args"
+                 value="-m main-${strmodule} --library -S -I ${trans} -I ${build} -I ${lib}
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc
+                        -I ${user.home}/.nix-profile/share/java-front
+                        -I include
+                        -la ${user.home}/.nix-profile/lib/libjava-front.la"/>
+        
+        <!-- Initialization -->
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <available file="${build.strategoxt}/strj" property="build.stratego.usenativestrj"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="include"/>
+    
+        <target name="all" depends="stratego.java,sdf2table,sdf2imp"/>
+
+        <target name="sdf2imp" depends="sdf2imp.eclipse,sdf2imp.standalone"/>
+        
+        <target name="sdf2imp.eclipse" depends="sdf2table" if="eclipse.running">
+            <!-- In Eclipse, we trigger the Eclipse builder rather than build it here -->
+            <touch file="include/${esvmodule}.packed.esv"/>
+            <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
+        </target>
+        
+        <target name="sdf2imp.standalone" depends="sdf2table,aux-files" unless="eclipse.running">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true" fork="true">
+                <jvmarg line="-ss4m -server"/> 
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt}/sdf2table" dest="include" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="include/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="include/${sdfmodule}.def"/>
+                <targetfileset file="include/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="include/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available" depends="aux-files">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/include/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${basedir}/include/${sdfmodule}-Permissive.def"/>
+            </java>
+        </target>
+
+        <target name="aux-files">
+            <property name="site" value="http://www.st.ewi.tudelft.nl/~kats/strategoxt/18a"/>
+            <mkdir dir="aux"/>
+            <get src="${site}/strategoxt.jar" dest="aux/strategoxt.jar" usetimestamp="true" ignoreerrors="true"/>
+            <get src="${site}/make_permissive.jar" dest="aux/make_permissive.jar" usetimestamp="true" ignoreerrors="true"/>
+            <get src="${site}/sdf2imp.jar" dest="aux/sdf2imp.jar" usetimestamp="true" ignoreerrors="true"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfilelist dir="${syntax}" files="**/*.sdf"/>
+                <targetfileset file="${syntax}/${sdfmodule}.def"/>
+            </dependset>
+            <apply executable="${build.strategoxt}/pack-sdf" failonerror="true" dest="include">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-I"/>
+                <arg value="${trans}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${build.sdf.imports}"/>
+                
+                <fileset file="${syntax}/${sdfmodule}.sdf"/>
+                <mapper type="glob" from="*.sdf" to="*.def"/>
+            </apply>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" todir="include" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" depends="sdf2rtg" if="build.stratego.enabled" unless="external-def">
+            <apply executable="${build.strategoxt}/rtg2sig" dest="include" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                
+                <fileset file="include/${sdfmodule}.rtg"/>
+                <mapper type="glob" from="*.rtg" to="*.str"/>
+            </apply>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf" if="build.stratego.enabled" unless="external-def">
+            <apply executable="${build.strategoxt}/sdf2rtg" dest="include" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <targetfile/>
+                
+                <fileset file="include/${sdfmodule}.str"/>
+                <mapper type="glob" from="*.def" to="*.rtg"/>
+            </apply>
+        </target>
+    
+        <target name="stratego.c">
+            <antcall target="stratego.helper">
+                <param name="build.stratego.outputpath" value="include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value="*"/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+    
+        <target name="stratego.interpreter">
+            <antcall target="stratego.helper">
+                <param name="build.stratego.outputpath" value="include"/>
+                <param name="build.stratego.extraargs" value="-F --library"/>
+                <param name="build.stratego.extension" value="*.ctree"/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+    
+        <target name="stratego.java" depends="stratego.java.native,stratego.java.jvm"/>
+    
+        <target name="stratego.java.native" if="build.stratego.usenativestrj"> 
+            <antcall target="stratego.helper">
+                <param name="build.stratego.outputpath" value="${src-gen}"/>
+                <param name="build.stratego.extraargs" value="-la java-front"/>
+                <param name="build.stratego.extension" value="*.java"/>
+                <param name="build.stratego.compiler" value="strj"/>
+            </antcall>
+        </target>
+    
+        <target name="stratego.java.jvm" unless="build.stratego.usenativestrj">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                  <include name="**/*.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="stratego.java.jvm.helper"/>
+        </target>
+            
+        <target name="stratego.java.jvm.helper" depends="aux-files" unless="strc-java.available">
+            <java classname="org.strategoxt.strj.Main" classpath="aux/strategoxt.jar" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${src-gen}/trans/${strmodule}.java"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="-clean"/>
+                <arg line="${build.stratego.args} -la java-front"/>
+                <arg line="${externaldefimport}"/>
+            </java>
+            <mkdir dir="${build}/trans"/>
+            <javac classpath="aux/strategoxt.jar" srcdir="${src-gen}/trans" destdir="${build}/trans" source="1.5" debug="on"/>
+            <jar basedir="${build}/trans" destfile="include/trans.jar"/>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean">
+            <delete dir="${build}"/>
+        </target>
+    </project>
+    <%
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str	2009-09-14 11:10:50 UTC (rev 19979)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-table.str	2009-09-14 11:15:17 UTC (rev 19980)
@@ -17,7 +17,7 @@
     copy-parse-table <+ xtc-ensure-file; create-parse-table <+ fatal-err(|"Could not copy or create parse table")
   
   copy-parse-table =
-    <debug(!"!!!"); eq> (<ParseTable; abspath>, <parse-table-target; abspath>) // skip copying
+    <eq> (<ParseTable; abspath>, <parse-table-target; abspath>) // skip copying
   <+
     ParseTable => "None" // skip copying
   <+

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-analysis-descriptor.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-analysis-descriptor.str	2009-09-14 11:10:50 UTC (rev 19979)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-analysis-descriptor.str	2009-09-14 11:15:17 UTC (rev 19980)
@@ -19,6 +19,10 @@
           ~
           ~// This file can be used for custom analysis rules.
           ~// See the imported file for a brief introduction and examples.
+          ~
+          provider: include/trans.jar
+          ~
+          ~// observer: analyze
       ]|
     );
     
@@ -32,10 +36,10 @@
           ~
           ~// Analysis can be provided by an external Stratego program:
           ~//
-          ~//   provider stratego-program.ctree // (built using strc -F)
+          ~//   provider : stratego-program.ctree // (built using strc -F)
           ~//
           ~// Analysis is carried out by a rule of the form (ast, path, fullpath) -> (errors, warnings, infos)
           ~//
-          ~//   observer analysis-rule
+          ~//   observer : analysis-rule
       ]|
     )

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	2009-09-14 11:10:50 UTC (rev 19979)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	2009-09-14 11:15:17 UTC (rev 19980)
@@ -1,7 +1,7 @@
 [
    ReferenceRule        -- R [ H [ KW["reference"] _1 ] H [ KW[":"] _2 ] _3 ],
    OccurrenceRule       -- R [ H [ KW["occurrence"] _1 ] H [ KW[":"] _2 ] ],
-   SemanticProvider     -- R [ H [ KW["provider"] _1 ] ],
+   SemanticProvider     -- R [ KW["provider"] H [ KW[":"] _1 ] ],
    Strategy             -- _1,
    Attribute            -- H hs=0 [ KW["id"] KW["."] _1 ],
    SemanticObserver     -- R [ KW["observer"] H [ KW[":"] _1 ] ],

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/SemanticServices.sdf
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/SemanticServices.sdf	2009-09-14 11:10:50 UTC (rev 19979)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/SemanticServices.sdf	2009-09-14 11:15:17 UTC (rev 19980)
@@ -21,7 +21,8 @@
 
   context-free syntax
 
-    "provider" PropertyValue -> SemanticRule {cons("SemanticProvider")}
+    "provider"     PropertyValue -> SemanticRule {cons("SemanticProvider"),deprecated}
+    "provider" ":" PropertyValue -> SemanticRule {cons("SemanticProvider")}
 
              StrategoId -> StrategoCall {cons("Strategy")}
     "id" "." StrategoId -> StrategoCall {cons("Attribute")}
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-09-14 11:10:50 UTC (rev 19979)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-09-14 11:15:17 UTC (rev 19980)
@@ -10,7 +10,6 @@
 import org.eclipse.imp.runtime.RuntimePlugin;
 import org.spoofax.interpreter.adapter.aterm.UnsharedWrappedATermFactory;
 import org.spoofax.interpreter.adapter.aterm.WrappedATermFactory;
-import org.spoofax.interpreter.core.Interpreter;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.core.InterpreterExit;
 import org.spoofax.interpreter.terms.IStrategoTerm;
@@ -106,8 +105,8 @@
 	
 	// ENVIRONMENT ACCESS AND MANIPULATION
 
-	public static synchronized Interpreter createInterpreter() throws IOException, InterpreterException {
-		Interpreter result = new HybridInterpreter(getTermFactory()) {
+	public static synchronized HybridInterpreter createInterpreter() {
+		HybridInterpreter result = new HybridInterpreter(getTermFactory()) {
 			@Override
 			public boolean invoke(String name) throws InterpreterExit, InterpreterException {
 				assertLock();
@@ -115,9 +114,9 @@
 			}
 			
 			@Override
-			public void load(InputStream stream) throws IOException, InterpreterException {
+			public void load(IStrategoTerm program) throws InterpreterException {
 				assertLock();
-				super.load(stream);
+				super.load(program);
 			}
 			
 			@Override
@@ -126,7 +125,8 @@
 				return super.current();
 			}
 		};
-
+		
+		result.getCompiledContext().registerComponent("libstratego_sglr"); // ensure op. registry available
 		SGLRCompatLibrary sglrLibrary = (SGLRCompatLibrary) result.getContext().getOperatorRegistry(SGLRCompatLibrary.REGISTRY_NAME);
 		result.addOperatorRegistry(new IMPJSGLRLibrary(sglrLibrary));
 		result.addOperatorRegistry(new IMPLibrary());

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2009-09-14 11:10:50 UTC (rev 19979)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2009-09-14 11:15:17 UTC (rev 19980)
@@ -125,6 +125,10 @@
 		this.basePath = basePath;
 	}
 	
+	public IPath getBasePath() {
+		return basePath;
+	}
+	
 	public String getStartSymbols() {
 		return getProperty("StartSymbols", null);
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-09-14 11:10:50 UTC (rev 19979)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-09-14 11:15:17 UTC (rev 19980)
@@ -5,6 +5,11 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.lang.reflect.Method;
+import java.net.URL;
+import java.net.URLClassLoader;
+import java.util.ArrayList;
+import java.util.List;
 
 import lpg.runtime.IAst;
 
@@ -18,6 +23,7 @@
 import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.imp.parser.IModelListener;
 import org.eclipse.imp.parser.IParseController;
+import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.Interpreter;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.core.InterpreterExit;
@@ -26,6 +32,7 @@
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.HybridInterpreter;
 import org.strategoxt.imp.runtime.Debug;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.ISourceInfo;
@@ -37,6 +44,8 @@
 import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
 import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNode;
+import org.strategoxt.lang.Context;
+import org.strategoxt.libstratego_lib.libstratego_lib;
 
 /**
  * Basic Stratego feedback (i.e., errors and warnings) provider.
@@ -55,7 +64,7 @@
 	
 	private final Object asyncUpdateSyncRoot = new Object();
 	
-	private Interpreter interpreter;
+	private HybridInterpreter runtime;
 	
 	private Job asyncLastBuildJob;
 	
@@ -75,34 +84,62 @@
 	private void init(IProgressMonitor monitor) {
 		monitor.subTask("Instantiating analysis runtime");
 		
+		List<String> jars = new ArrayList<String>();
+		
 		for (File file : descriptor.getAttachedFiles()) {
 			String filename = file.toString();
 			if (filename.endsWith(".ctree")) {
-				if (interpreter == null) {
-					try {
-						interpreter = Environment.createInterpreter();
-					} catch (Exception e) {
-						Environment.logException("Could not create interpreter", e);
-					}
-					monitor.subTask("Loading analysis runtime components");
-				}
-				try {
-					Debug.startTimer("Loading Stratego module ", filename);
-					synchronized (Environment.getSyncRoot()) {
-						interpreter.load(descriptor.openAttachment(filename));
-					}
-					Debug.stopTimer("Successfully loaded " +  filename);
-				} catch (InterpreterException e) {
-					Environment.logException(new BadDescriptorException("Error loading compiler service provider " + filename, e));
-				} catch (IOException e) {
-					Environment.logException(new BadDescriptorException("Could not load compiler service provider" + filename, e));
-				}
+				initRuntime(monitor);
+				loadCTree(filename);
+			} else if (filename.endsWith(".jar")) {
+				initRuntime(monitor);
+				jars.add(filename);
 			}
 		}
 		
+		loadJars(jars);
+		
 		monitor.subTask(null);
 	}
 
+	private void initRuntime(IProgressMonitor monitor) {
+		if (runtime == null) {
+			runtime = Environment.createInterpreter();
+			monitor.subTask("Loading analysis runtime components");
+		}
+	}
+
+	private void loadCTree(String filename) {
+		try {
+			Debug.startTimer("Loading Stratego module ", filename);
+			synchronized (Environment.getSyncRoot()) {
+				runtime.load(descriptor.openAttachment(filename));
+			}
+			Debug.stopTimer("Successfully loaded " +  filename);
+		} catch (InterpreterException e) {
+			Environment.logException(new BadDescriptorException("Error loading compiler service provider " + filename, e));
+		} catch (IOException e) {
+			Environment.logException(new BadDescriptorException("Could not load compiler service provider" + filename, e));
+		}
+	}
+	
+	private void loadJars(List<String> jars) {
+		try {
+			URL[] classpath = new URL[jars.size()];
+			for (int i = 0; i < classpath.length; i++) {
+				classpath[i] = descriptor.getBasePath().append(jars.get(i)).toFile().toURL();
+			}
+			
+			ClassLoader loader = new URLClassLoader(classpath, libstratego_lib.class.getClassLoader());
+			Class<?> mainClass = loader.loadClass("trans.Main");
+			Method registerer = mainClass.getMethod("registerInterop", IContext.class, Context.class);
+			registerer.invoke(null, runtime.getContext(), runtime.getCompiledContext());
+		
+		} catch (Exception e) {
+			Environment.logException("Error loading compiler service providers " + jars, e);
+		}
+	}
+
 	/**
 	 * Starts a new update() operation, asynchronously.
 	 */
@@ -132,7 +169,7 @@
 		String log;
 		
 		synchronized (Environment.getSyncRoot()) {
-			if (interpreter == null)
+			if (runtime == null)
 				init(monitor);
 
 			ITermFactory factory = Environment.getTermFactory();
@@ -150,7 +187,7 @@
 			IStrategoTerm input = factory.makeTuple(inputParts);
 			
 			feedback = invoke(feedbackFunction, input, ast.getSourceInfo());
-			log = ((LoggingIOAgent) interpreter.getIOAgent()).getLog().trim();
+			log = ((LoggingIOAgent) runtime.getIOAgent()).getLog().trim();
 		}
 		
 		if (!monitor.isCanceled())
@@ -232,7 +269,7 @@
 	 * @see #getAstNode(IStrategoTerm)  To retrieve the AST node associated with the resulting term.
 	 */
 	public IStrategoTerm invoke(String function, IStrategoTerm term, ISourceInfo sourceInfo) {
-		if (interpreter == null)
+		if (runtime == null)
 			return null;
 		
 		synchronized (Environment.getSyncRoot()) {
@@ -242,17 +279,24 @@
 				// TODO: Make interpreter support monitor.isCanceled()?
 				//       (e.g., overriding Context.lookupSVar to throw an OperationCanceledException) 
 				
-				interpreter.setCurrent(term);
+				runtime.setCurrent(term);
 				initInterpreterPath(sourceInfo.getPath().removeLastSegments(1));
 	
-				((LoggingIOAgent) interpreter.getIOAgent()).clearLog();
-				success = interpreter.invoke(function);
+				((LoggingIOAgent) runtime.getIOAgent()).clearLog();
+				success = runtime.invoke(function);
 
 			} catch (InterpreterExit e) {
-				success = e.getValue() == InterpreterExit.SUCCESS;
+				// (source marker should be added by invoking method) 
+				Environment.logException("Runtime exited when evaluating strategy " + function, e);
+				// Successful exit code or not, we needed to return a result term
+				return null;
 			} catch (InterpreterException e) {
 				// (source marker should be added by invoking method) 
-				Environment.logException("Internal error evaluating strategy " + function, e);
+				if (runtime.getContext().getVarScope().lookupSVar(Interpreter.cify(function)) == null) {
+					Environment.logException("Strategy does not exist: " + function, e);
+				} else {
+					Environment.logException("Internal error evaluating strategy " + function, e);
+				}
 				return null;
 			} catch (RuntimeException e) {
 				// (source marker should be added by invoking method) 
@@ -263,7 +307,7 @@
 			if (!success) return null;
 			
 			Debug.stopTimer("Evaluated strategy " + function);
-			return interpreter.current();
+			return runtime.current();
 		}
 	}
 
@@ -273,15 +317,15 @@
 		if (term instanceof WrappedAstNode) {
 			return ((WrappedAstNode) term).getNode();
 		} else {
-			Environment.logException("Resolved reference is not associated with an AST node " + interpreter.current());
+			Environment.logException("Resolved reference is not associated with an AST node " + runtime.current());
 			return null;
 		}
 	}
 	
 	private void initInterpreterPath(IPath workingDir) {
 		try {
-			interpreter.getIOAgent().setWorkingDir(workingDir.toOSString());
-			((EditorIOAgent) interpreter.getIOAgent()).setDescriptor(descriptor);
+			runtime.getIOAgent().setWorkingDir(workingDir.toOSString());
+			((EditorIOAgent) runtime.getIOAgent()).setDescriptor(descriptor);
 		} catch (IOException e) {
 			Environment.logException("Could not set Stratego working directory", e);
 			throw new RuntimeException(e);



From R.B.Vermaas at tudelft.nl  Tue Sep 15 10:42:37 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 15 Sep 2009 08:42:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19981 - rob -
	strategoxt/trunk/autoxt
Message-ID: <200909150842.n8F8gbn8015860@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-15 08:42:36 +0000 (Tue, 15 Sep 2009)
New Revision: 19981

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19981&view=rev

Modified:
   strategoxt/trunk/autoxt/Makefile.xt
   strategoxt/trunk/autoxt/autoxt.m4

Log:
STR-772: turn on -fno-stack-protector as default

Changes:

Modified: strategoxt/trunk/autoxt/Makefile.xt
===================================================================
--- strategoxt/trunk/autoxt/Makefile.xt	2009-09-14 11:15:17 UTC (rev 19980)
+++ strategoxt/trunk/autoxt/Makefile.xt	2009-09-15 08:42:36 UTC (rev 19981)
@@ -13,13 +13,21 @@
 # Variables
 #
 
-AM_CFLAGS  = $(STR_CFLAGS) -fno-stack-protector
+AM_CFLAGS  = $(STR_CFLAGS) 
 AM_LDFLAGS = $(STR_LDFLAGS)
 
 if XT_XTC_REGISTER
   AM_CFLAGS += -DDEFAULT_XTC_REPOSITORY="\"$(REPOSITORY)\""
 endif
 
+if XT_CYGWIN
+  #  
+else
+  AM_CFLAGS += -fno-stack-protector
+endif
+
+
+
 AM_CPPFLAGS = $(STRATEGO_LIB_CFLAGS) $(STRATEGO_RUNTIME_CFLAGS) $(ATERM_CFLAGS)
 LDADD = $(STRATEGO_LIB_LIBS) $(STRATEGO_RUNTIME_LIBS) $(ATERM_LIBS)
 

Modified: strategoxt/trunk/autoxt/autoxt.m4
===================================================================
--- strategoxt/trunk/autoxt/autoxt.m4	2009-09-14 11:15:17 UTC (rev 19980)
+++ strategoxt/trunk/autoxt/autoxt.m4	2009-09-15 08:42:36 UTC (rev 19981)
@@ -48,6 +48,27 @@
   AM_CONDITIONAL([XT_DARWIN], [test "$xt_darwin" = "yes"])
 ])
 
+# XT_CYGWIN
+# ---------
+AC_DEFUN([XT_CYGWIN],
+[
+  AC_REQUIRE([AC_CANONICAL_HOST])
+  AC_REQUIRE([AC_CANONICAL_BUILD])
+
+  # As an exception to XT_* macros name, this is a valid part of configure.
+  m4_pattern_allow([^XT_CYGWIN(_TRUE|_FALSE)?$])
+
+  AC_MSG_CHECKING([whether host operating system is Cygwin])
+  xt_cygwin="no"
+  case $host_os in
+    cygwin*)
+      xt_cygwin="yes"
+      ;;
+  esac
+  AC_MSG_RESULT([$xt_cygwin])
+  AM_CONDITIONAL([XT_CYGWIN], [test "$xt_cygwin" = "yes"])
+])
+
 # XT_C_TYPE_CHARACTERISTICS
 # -----------------
 AC_DEFUN([XT_C_TYPE_CHARACTERISTICS],



From R.B.Vermaas at tudelft.nl  Tue Sep 15 10:46:52 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 15 Sep 2009 08:46:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19982 - rob -
	strategoxt/trunk/autoxt
Message-ID: <200909150846.n8F8kqYi015984@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-15 08:46:52 +0000 (Tue, 15 Sep 2009)
New Revision: 19982

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19982&view=rev

Modified:
   strategoxt/trunk/autoxt/autoxt.m4

Log:
STR-772: turn on -fno-stack-protector as default

Changes:

Modified: strategoxt/trunk/autoxt/autoxt.m4
===================================================================
--- strategoxt/trunk/autoxt/autoxt.m4	2009-09-15 08:42:36 UTC (rev 19981)
+++ strategoxt/trunk/autoxt/autoxt.m4	2009-09-15 08:46:52 UTC (rev 19982)
@@ -18,6 +18,7 @@
 AC_DEFUN([XT_SETUP],
 [
   AC_REQUIRE([XT_DARWIN])
+  AC_REQUIRE([XT_CYGWIN])
   AC_REQUIRE([XT_CHECK_LINKING])
   AC_REQUIRE([XT_STRICT_ISO_C99])
   AC_REQUIRE([XT_C_TYPE_CHARACTERISTICS])



From R.B.Vermaas at tudelft.nl  Tue Sep 15 13:07:46 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 15 Sep 2009 11:07:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19983 - rob - in
	strategoxt/trunk/strc-core/lib/stratego/strc: pack parse strc
Message-ID: <200909151107.n8FB7kUB018049@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-15 11:07:46 +0000 (Tue, 15 Sep 2009)
New Revision: 19983

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19983&view=rev

Modified:
   strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego-options.str
   strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str
   strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str
   strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc-options.str

Log:
 * STR-594: .dep generation: parse table is not a dependency
 * STR-734: Include files of import-term(...) in the .dep file generated by strc




Changes:

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego-options.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego-options.str	2009-09-15 08:46:52 UTC (rev 19982)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego-options.str	2009-09-15 11:07:46 UTC (rev 19983)
@@ -2,7 +2,8 @@
 imports
   libstratego-xtc
   strategoxt-xtc-tools
-
+  stratego/strc/pack/pack-stratego-options
+    
 /**
  * Options
  */
@@ -110,14 +111,5 @@
     <get-config> "-dep"
 
   pack-maybe-create-depfile =
-    where(try(pack-create-dep-file))
+    where(try(strc-create-dep-file(|<pack-depfile-from-config>)))
 
-  pack-create-dep-file =
-    ?files
-    ; where(
-        pack-depfile-from-config => outfile
-      ; <fopen> (<add-extension>(outfile,"dep"), "w") => stream
-      )
-    ; ![outfile | <separate-by(|" \\\n\t")> [":" | files]]
-    ; map(<fputs> (<id>, stream))
-    ; <fclose> stream

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str	2009-09-15 08:46:52 UTC (rev 19982)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str	2009-09-15 11:07:46 UTC (rev 19983)
@@ -45,7 +45,9 @@
       \ FILE(s) -> IncludePathName(s) \
     ; !(<id>, mkpt, [])
     ; graph-nodes-undef(
-        pack-stratego-parse-stratego
+        { file:
+          pack-stratego-parse-stratego => (file,_)
+        ; rules( FileDependencies :+= file )
         ; if <get-config> "--dump-aterms" then
             where({fn, trm: 
                 ?(fn, trm)
@@ -54,6 +56,7 @@
                   end
                 })
           end
+        }
       , pack-get-stratego-imports 
         ; map(IncludePathName(id) <+ !IncludeFromPath(<id>))
       , \ (n,x,xs) -> [x|xs] \
@@ -312,6 +315,7 @@
     ImportTerm(file) -> ImportTerm(file')
     where
       file' := <pack-find-from(|includes)> file
+    ; rules( FileDependencies :+= file' )
 
   pack-find-from(|includes) =
     ?file

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str	2009-09-15 08:46:52 UTC (rev 19982)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/parse/parse-stratego.str	2009-09-15 11:07:46 UTC (rev 19983)
@@ -321,7 +321,8 @@
       ?syntax
       ; log(|Debug(), <concat-strings>["Trying to find a parse table for ",syntax])
       ; guarantee-extension(|"tbl")
-      ; ps-find-in-includes(!"Using parse table: ")
+      ; ps-find-in-includes(!"Using parse table: ") => file
+      ; rules( FileDependencies :+= file )
       ; !FILE(<id>)
       ; read-from
 

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc-options.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc-options.str	2009-09-15 08:46:52 UTC (rev 19982)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc-options.str	2009-09-15 11:07:46 UTC (rev 19983)
@@ -313,3 +313,24 @@
 
   strc-announce =
     if-verbose2(strc-version)
+
+
+strategies
+  strc-maybe-create-depfile =
+    where(try(strc-create-dep-file))
+
+  strc-depfile-from-config = 
+    <get-config> "-o" <+ <get-config> "baseout"
+  
+  strc-create-dep-file =
+    strc-create-dep-file(|<strc-depfile-from-config>)
+      
+  strc-create-dep-file(|outfile) =
+    bagof-FileDependencies 
+    ; uniq => files
+    ; where(
+        <fopen> (<add-extension>(outfile,"dep"), "w") => stream
+      )
+    ; ![outfile | <separate-by(|" \\\n\t")> [":" | files]]
+    ; map(<fputs> (<id>, stream))
+    ; <fclose> stream



From R.B.Vermaas at tudelft.nl  Tue Sep 15 13:37:18 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 15 Sep 2009 11:37:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19984 - rob - hydra
Message-ID: <200909151137.n8FBbI0B018434@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-15 11:37:18 +0000 (Tue, 15 Sep 2009)
New Revision: 19984

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19984&view=rev

Modified:
   hydra/baseline.nix

Log:
changed strategoxt baseline to 0.18 prerelease

Changes:

Modified: hydra/baseline.nix
===================================================================
--- hydra/baseline.nix	2009-09-15 11:07:46 UTC (rev 19983)
+++ hydra/baseline.nix	2009-09-15 11:37:18 UTC (rev 19984)
@@ -1,8 +1,8 @@
 pkgs: 
 {
   aterm      = pkgs.aterm25 ; 
-  sdf2Bundle = pkgs.strategoPackages017.sdf ;
-  strategoxt = pkgs.strategoPackages017.strategoxt ;
+  sdf2Bundle = pkgs.strategoPackages018.sdf ;
+  strategoxt = pkgs.strategoPackages018.strategoxt ;
 
 }
 



From R.B.Vermaas at tudelft.nl  Tue Sep 15 15:09:26 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 15 Sep 2009 13:09:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19985 - rob - in
	strategoxt/trunk/strc-core/lib/stratego/strc: c front
Message-ID: <200909151309.n8FD9QiJ020049@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-15 13:09:26 +0000 (Tue, 15 Sep 2009)
New Revision: 19985

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19985&view=rev

Modified:
   strategoxt/trunk/strc-core/lib/stratego/strc/c/escaping-variables.str
   strategoxt/trunk/strc-core/lib/stratego/strc/front/add-main.str

Log:
STR-776: Add check for main strategy, STR-774: Use parentheses for Nullary constructors

Changes:

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/c/escaping-variables.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/c/escaping-variables.str	2009-09-15 11:37:18 UTC (rev 19984)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/c/escaping-variables.str	2009-09-15 13:09:26 UTC (rev 19985)
@@ -115,7 +115,7 @@
     x{t1*} -> x{Frames(frames),t1*}
     where frames := <frames-to-parent> x
 	; if <not([])> frames then
-            rules( Escapes.x{} : x{t*} -> x{Escapes,t*} )
+            rules( Escapes.x{} : x{t*} -> x{Escapes(),t*} )
             <+ say(<concat-strings>
                  ["* warning (escaping-var-id): ", x, " not declared"])
           end

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/add-main.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/add-main.str	2009-09-15 11:37:18 UTC (rev 19984)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/add-main.str	2009-09-15 13:09:26 UTC (rev 19985)
@@ -18,6 +18,7 @@
         )
     )
 
+
   MkMain(|main) =
     !SDef("main", [], Call(SVar(main), []))
 
@@ -47,10 +48,19 @@
       ; if-not-lib(
           if <ModDefinition> ("main", 0, 0) then
             say(!"Adding main strategy even though one is already present!")
+          else 
+            if not( <ModDefinition> (m, 0, 0) ) then
+              log(|Error(),["Could not find specified main strategy/rule called '",m,"'."])
+            ; <exit>1
+            end
           end
           ; where(MkMain(|m); m-add-def)
         )
     end
+  ; if not(<ModDefinition> ("main", 0, 0)) then
+      log(|Error(),["No 'main' strategy/rule found. Add strategy/rule called 'main' or use -m flag to specify the entry point of the application."])  
+    ; <exit>1
+    end
 
 strategies
 



From R.B.Vermaas at tudelft.nl  Tue Sep 15 15:25:28 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 15 Sep 2009 13:25:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19986 - rob -
	strategoxt/trunk/stratego-libraries/xtc/lib/stratego/xtc/posix-xsi
Message-ID: <200909151325.n8FDPSiu020190@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-15 13:25:28 +0000 (Tue, 15 Sep 2009)
New Revision: 19986

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19986&view=rev

Modified:
   strategoxt/trunk/stratego-libraries/xtc/lib/stratego/xtc/posix-xsi/Proc.str

Log:
STR-674: xtc-cat uses an obsolete strategy xtc-new-file-name

Changes:

Modified: strategoxt/trunk/stratego-libraries/xtc/lib/stratego/xtc/posix-xsi/Proc.str
===================================================================
--- strategoxt/trunk/stratego-libraries/xtc/lib/stratego/xtc/posix-xsi/Proc.str	2009-09-15 13:09:26 UTC (rev 19985)
+++ strategoxt/trunk/stratego-libraries/xtc/lib/stratego/xtc/posix-xsi/Proc.str	2009-09-15 13:25:28 UTC (rev 19986)
@@ -28,7 +28,7 @@
    */
   xtc-cat:
     in-files -> file
-      where xtc-new-file-name => file
+      where !FILE(<xtc-new-file>) => file
           ; <xtc-open-fd> file => fdout
           ; <map(File-as-fd(<fdcopy> (<id>, fdout)))> in-files
           ; <xtc-close-fd> fdout



From R.B.Vermaas at tudelft.nl  Tue Sep 15 21:50:46 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 15 Sep 2009 19:50:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19987 - rob - hydra/jobs
Message-ID: <200909151950.n8FJokWO025010@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-15 19:50:46 +0000 (Tue, 15 Sep 2009)
New Revision: 19987

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19987&view=rev

Modified:
   hydra/jobs/strategoxt.nix

Log:


Changes:

Modified: hydra/jobs/strategoxt.nix
===================================================================
--- hydra/jobs/strategoxt.nix	2009-09-15 13:25:28 UTC (rev 19986)
+++ hydra/jobs/strategoxt.nix	2009-09-15 19:50:46 UTC (rev 19987)
@@ -5,7 +5,7 @@
 }:
 
 let
-  pkgs = import nixpkgs {};
+  pkgs = import nixpkgs { system = "i686-linux" ; };
 
   strategoxtBaseline =
     pkgs.stdenv.mkDerivation {



From L.C.L.Kats at tudelft.nl  Wed Sep 16 11:14:00 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Sep 2009 09:14:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19988 - LennartKats -
	in strc-java/trunk: java/runtime/org/strategoxt
	java/runtime/org/strategoxt/lang
	java/runtime/org/strategoxt/lang/parallel/libstratego_parallel
	test trans
Message-ID: <200909160914.n8G9E0cX004063@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-16 09:14:00 +0000 (Wed, 16 Sep 2009)
New Revision: 19988

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19988&view=rev

Added:
   strc-java/trunk/java/runtime/org/strategoxt/IncompatibleJarException.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/InteropRegisterer.java
   strc-java/trunk/test/parallel/
Modified:
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelContext.java
   strc-java/trunk/test/Makefile.am
   strc-java/trunk/trans/s2j.str
   strc-java/trunk/trans/strj-options.str
   strc-java/trunk/trans/strj.str

Log:
Added dynamic jar loading support to the HybridInterpreter class.

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-15 19:50:46 UTC (rev 19987)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-16 09:14:00 UTC (rev 19988)
@@ -1,5 +1,18 @@
 package org.strategoxt;
 
+import static org.spoofax.interpreter.core.Tools.*;
+
+import java.io.IOException;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+import java.net.JarURLConnection;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.net.URLClassLoader;
+import java.util.Enumeration;
+import java.util.jar.JarEntry;
+import java.util.jar.JarFile;
+
 import org.spoofax.interpreter.adapter.aterm.BAFBasicTermFactory;
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.Interpreter;
@@ -10,8 +23,10 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 import org.strategoxt.lang.Context;
+import org.strategoxt.lang.InteropRegisterer;
 import org.strategoxt.lang.StrategoException;
 import org.strategoxt.lang.StrategoExit;
+import org.strategoxt.libstratego_lib.libstratego_lib;
 
 /**
  * An interpreter that uses STRJ-compiled versions of the Stratego standard libraries.
@@ -62,7 +77,60 @@
 		}
 		super.load(term);
 	}
+
+	public void loadJars(URL... jars)
+			throws SecurityException, IncompatibleJarException, IOException {
+		
+		loadJars(HybridInterpreter.class.getClassLoader(), jars);
+	}
 	
+	public void loadJars(ClassLoader parentClassLoader, URL... jars)
+			throws SecurityException, IncompatibleJarException, IOException {
+
+		URLClassLoader classLoader = new URLClassLoader(jars, libstratego_lib.class.getClassLoader());
+		
+		for (URL jar : jars) {
+		    registerJar(classLoader, jar);
+		}
+	}
+
+	private void registerJar(URLClassLoader classLoader, URL jar)
+			throws SecurityException, IncompatibleJarException, IOException {
+
+		URL protocolfulUrl = new URL("jar", "", jar + "!/");
+		JarURLConnection connection = (JarURLConnection) protocolfulUrl.openConnection();
+		JarFile jarFile = connection.getJarFile();
+		Enumeration<JarEntry> jarEntries = jarFile.entries();
+		
+		while (jarEntries.hasMoreElements()) {
+			JarEntry entry = jarEntries.nextElement();
+			if (entry.getName().endsWith("/InteropRegisterer.class")) {
+				String className = entry.getName().substring(0, entry.getName().length() - 7);
+				className = className.replace('/', '.');
+				Class<?> registerClass;
+				try {
+					registerClass = classLoader.loadClass(className);
+					Object registerObject = registerClass.getConstructor().newInstance();
+					if (registerObject instanceof InteropRegisterer) {
+						((InteropRegisterer) registerObject).registerLazy(getContext(), getCompiledContext(), classLoader);
+					} else {
+						throw new IncompatibleJarException(jar, new ClassCastException("Unknown type for InteropRegisterer"));
+					}
+				} catch (InstantiationException e) {
+					throw new IncompatibleJarException(jar, e);
+				} catch (IllegalAccessException e) {
+					throw new IncompatibleJarException(jar, e);
+				} catch (InvocationTargetException e) {
+					throw new IncompatibleJarException(jar, e);
+				} catch (NoSuchMethodException e) {
+					throw new IncompatibleJarException(jar, e);
+				} catch (ClassNotFoundException e) {
+					throw new RuntimeException("Could not load listed class", e);
+				}
+			}
+		}
+	}
+	
 	/**
 	 * Initialize the interpreter register with all standard library strategies.
 	 */

Added: strc-java/trunk/java/runtime/org/strategoxt/IncompatibleJarException.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/IncompatibleJarException.java	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/IncompatibleJarException.java	2009-09-16 09:14:00 UTC (rev 19988)
@@ -0,0 +1,26 @@
+package org.strategoxt;
+
+import java.net.URL;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class IncompatibleJarException extends Exception {
+
+	private static final long serialVersionUID = 34468635613246L;
+	
+	private final URL jar;
+
+	public IncompatibleJarException(URL jar) {
+		this(jar, null);
+	}
+
+	public IncompatibleJarException(URL jar, Throwable cause) {
+		super("Incompatible jar:" + jar, cause);
+		this.jar = jar;
+	}
+
+	public URL getJar() {
+		return jar;
+	}
+}

Added: strc-java/trunk/java/runtime/org/strategoxt/lang/InteropRegisterer.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/InteropRegisterer.java	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/InteropRegisterer.java	2009-09-16 09:14:00 UTC (rev 19988)
@@ -0,0 +1,10 @@
+package org.strategoxt.lang;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public abstract class InteropRegisterer {
+	public abstract void register(org.spoofax.interpreter.core.IContext context, Context compiledContext);
+
+	public abstract void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader);
+}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelContext.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelContext.java	2009-09-15 19:50:46 UTC (rev 19987)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelContext.java	2009-09-16 09:14:00 UTC (rev 19988)
@@ -87,6 +87,7 @@
 		}
 		
 		// If all else fails, perform any "black-listed" operations in an ordered fashion
+		System.out.println(":(" + name + "):");
 		waitForFocus();
 		
 		return super.invokePrimitive(primitive, term, args, targs);

Modified: strc-java/trunk/test/Makefile.am
===================================================================
--- strc-java/trunk/test/Makefile.am	2009-09-15 19:50:46 UTC (rev 19987)
+++ strc-java/trunk/test/Makefile.am	2009-09-16 09:14:00 UTC (rev 19988)
@@ -81,7 +81,7 @@
 	aster -i $< -o $@
 
 %.java : %.ctree ../trans/strj
-	../trans/strj -i $< -o $@ -la stratego-lib -la java-front -la stratego-sglr
+	../trans/strj -i $< -o $@ -la stratego-lib -la java-front -la stratego-sglr -la strc `if echo $< | grep parallel >/dev/null; then echo -la stratego-parallel; fi`
 
 %.class : %.java
 	$(JAVAC) $(JAVACFLAGS) $<

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-09-15 19:50:46 UTC (rev 19987)
+++ strc-java/trunk/trans/s2j.str	2009-09-16 09:14:00 UTC (rev 19988)
@@ -293,21 +293,29 @@
     defs ->
     class-body-dec* |[
       public static void registerInterop(org.spoofax.interpreter.core.IContext context, Context compiledContext) {
-        InteropRegisterer.registerLazy(context, compiledContext, context.getVarScope(), InteropRegisterer.class.getClassLoader());
+        new InteropRegisterer().registerLazy(context, compiledContext, InteropRegisterer.class.getClassLoader());
       }
       
-      // Put these many literals and statements to another, lazily loaded class
       @SuppressWarnings("unused")
-      protected static class InteropRegisterer extends Object { // (header matched by java-split-class)
+      protected static class InteropRegisterer extends org.strategoxt.lang.InteropRegisterer {
+        public void register(org.spoofax.interpreter.core.IContext context, Context compiledContext) {
+          register(context, compiledContext, context.getVarScope());
+        }
+        
+        public void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader) {
+          registerLazy(context, compiledContext, classLoader, context.getVarScope());
+        }
+        
         ~*<java-split-method>  |[
-          public static void register(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope) {
+          private void register(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope) {
             compiledContext.registerComponent("~x_name");
             x_name.init(compiledContext);
             bstm1*
           }
         ]|
+        
         ~*<java-split-method>  |[
-          public static void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope, ClassLoader classLoader) {
+          private void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader, org.spoofax.interpreter.core.VarScope varScope) {
             compiledContext.registerComponent("~x_name");
             x_name.init(compiledContext);
             bstm2*

Modified: strc-java/trunk/trans/strj-options.str
===================================================================
--- strc-java/trunk/trans/strj-options.str	2009-09-15 19:50:46 UTC (rev 19987)
+++ strc-java/trunk/trans/strj-options.str	2009-09-16 09:14:00 UTC (rev 19988)
@@ -48,9 +48,9 @@
     )
   <+
     Option(
-      "-clean"
-    , <set-config> ("-clean", <id>)
-    , !"-clean             Remove all existing Java files in the output directory"
+      "--clean" + "-clean"
+    , <set-config> ("--clean", <id>)
+    , !"--clean            Remove all existing Java files in the output directory"
     )
   <+
     s2j-general-options

Modified: strc-java/trunk/trans/strj.str
===================================================================
--- strc-java/trunk/trans/strj.str	2009-09-15 19:50:46 UTC (rev 19987)
+++ strc-java/trunk/trans/strj.str	2009-09-16 09:14:00 UTC (rev 19988)
@@ -54,14 +54,14 @@
   ; log-timed(list-loop(output-java) | "Pretty printing succeeded", 1)
   
   clean-output-dir =
-    if <get-config> "-clean" then
+    if <get-config> "--clean" then
       if <get-config> "-p" then
         output-dirname
       ; if file-exists then
           delete-java-files-in-dir
         end
       else
-        warn-msg(|"Ignored -clean option: no package name specified")
+        warn-msg(|"Ignored --clean option: no package name specified")
       end
     end
   



From L.C.L.Kats at tudelft.nl  Wed Sep 16 12:53:28 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Sep 2009 10:53:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19989 - LennartKats -
	in strategoxt/trunk/strc-core/lib: . stratego/strc/front
Message-ID: <200909161053.n8GArSB9005304@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-16 10:53:28 +0000 (Wed, 16 Sep 2009)
New Revision: 19989

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19989&view=rev

Modified:
   strategoxt/trunk/strc-core/lib/Makefile.am
   strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str

Log:
Reverted the call to the newish report-failure/(0,2) strategy for now, to avoid some mixed-version compilation problems.

Changes:

Modified: strategoxt/trunk/strc-core/lib/Makefile.am
===================================================================
--- strategoxt/trunk/strc-core/lib/Makefile.am	2009-09-16 09:14:00 UTC (rev 19988)
+++ strategoxt/trunk/strc-core/lib/Makefile.am	2009-09-16 10:53:28 UTC (rev 19989)
@@ -65,6 +65,9 @@
 libstrc.ctree : $(strclib:.str=.rtree) 
 	$(STRC)/bin/strc -F -c --library -i $(srcdir)/strc.str -o libstrc.ctree -O 1 --verbose 1 $(STRCFLAGS) $(STRINCLUDES)
 
+libstrc.ptree : $(strclib:.str=.rtree) 
+	$(STRC)/libexec/strc-core/pack-stratego -i $(srcdir)/strc.str -o libstrc.ptree --verbose 1 $(STRCFLAGS) $(STRINCLUDES)
+
 # stratego/strc/parse/Stratego.tbl : ../../stratego-front/syn/Stratego.tbl
 # 	mkdir -p $(top_builddir)/lib/stratego/strc/parse
 # 	cp $< $@

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str	2009-09-16 09:14:00 UTC (rev 19988)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/front/desugar.str	2009-09-16 10:53:28 UTC (rev 19989)
@@ -188,7 +188,11 @@
           s
           <+ { x: ?x
            ; prim("SSL_stacktrace_get_all_frame_names",|)
-           ; report-failure(|~str:message {^[]}, x)
+           ; // TODO: call report-failure(|~str:message {^[]}, x) instead
+             report-failure(
+                log(|Critical(){^[]}, ~str:message {^[]}, x)
+              ; exit(|)
+              )
              }
         )
       ]|
@@ -217,7 +221,11 @@
          s
          <+ { x: ?x
           ; prim("SSL_stacktrace_get_all_frame_names",|)
-          ; report-failure(|~str:message {^[]}, x)
+           ; // TODO: call report-failure(|~str:message {^[]}, x) instead
+             report-failure(
+                log(|Critical(){^[]}, ~str:message {^[]}, x)
+              ; exit(|)
+              )
             }
        )
     ]|



From L.C.L.Kats at tudelft.nl  Wed Sep 16 13:30:16 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Sep 2009 11:30:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19990 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <200909161130.n8GBUGTA005960@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-16 11:30:16 +0000 (Wed, 16 Sep 2009)
New Revision: 19990

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19990&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java

Log:
More work on dynamic jar loading.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-16 10:53:28 UTC (rev 19989)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-16 11:30:16 UTC (rev 19990)
@@ -31,8 +31,10 @@
         <property name="esvmodule" value="WebDSL"/>
         <property name="strmodule" value="webdsl"/>
         
-        <!-- External .def location (optional)
+        <!-- External .def and .jar locations
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
         -->
         
         <!-- Environment configuration -->
@@ -42,7 +44,7 @@
                  value="-m main-${strmodule} --library -S -I ${trans} -I ${build} -I ${lib}
                         -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc
                         -I ${user.home}/.nix-profile/share/java-front
-                        -I include
+                        -I ${basedir}/include
                         -la ${user.home}/.nix-profile/lib/libjava-front.la"/>
         
         <!-- Initialization -->
@@ -52,6 +54,9 @@
         <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
             <isset property="externaldef"/>
         </condition>
+        <condition property="externaljarimport" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
         <mkdir dir="${build}"/>
         <mkdir dir="${src-gen}"/>
         <mkdir dir="${dist}"/>
@@ -142,6 +147,10 @@
             <copy file="${externaldef}" todir="include" preservelastmodified="true"/>
         </target>
     
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="include" preservelastmodified="true"/>
+        </target>
+    
         <target name="rtg2sig" depends="sdf2rtg" if="build.stratego.enabled" unless="external-def">
             <apply executable="${build.strategoxt}/rtg2sig" dest="include" failonerror="true">
                 <arg value="-i"/>
@@ -205,11 +214,14 @@
                 <targetfileset file="${src-gen}/trans/Main.java"/>
             </dependset>
             <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
             <antcall target="stratego.java.jvm.helper"/>
+            <javac classpath="aux/strategoxt.jar${externaljarimport}" srcdir="${src-gen}/trans" destdir="${build}/trans" source="1.5" debug="on"/>
+            <jar basedir="${build}/trans" destfile="include/trans.jar"/>
         </target>
             
         <target name="stratego.java.jvm.helper" depends="aux-files" unless="strc-java.available">
-            <java classname="org.strategoxt.strj.Main" classpath="aux/strategoxt.jar" failonerror="true">
+            <java classname="org.strategoxt.strj.Main" classpath="aux/strategoxt.jar:aux/sdf2imp.jar" failonerror="true">
                 <arg value="-i"/>
                 <arg value="${trans}/${strmodule}.str"/>
                 <arg value="-o"/>
@@ -218,11 +230,10 @@
                 <arg value="trans"/>
                 <arg value="-clean"/>
                 <arg line="${build.stratego.args} -la java-front"/>
+                <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
             </java>
             <mkdir dir="${build}/trans"/>
-            <javac classpath="aux/strategoxt.jar" srcdir="${src-gen}/trans" destdir="${build}/trans" source="1.5" debug="on"/>
-            <jar basedir="${build}/trans" destfile="include/trans.jar"/>
         </target>
         
         <!-- Helper target for calling the stratego compiler -->
@@ -241,8 +252,9 @@
             </apply>
         </target>
         
-        <target name="clean">
+        <target name="clean" description="clean up">
             <delete dir="${build}"/>
+            <delete file="${src-gen}/trans/Main.java"/>
         </target>
     </project>
     <%
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str	2009-09-16 10:53:28 UTC (rev 19989)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str	2009-09-16 11:30:16 UTC (rev 19990)
@@ -14,6 +14,7 @@
 	<classpathentry kind="src" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="lib" path="aux/strategoxt.jar"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>
     <%

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2009-09-16 10:53:28 UTC (rev 19989)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2009-09-16 11:30:16 UTC (rev 19990)
@@ -9,6 +9,7 @@
 import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.HashSet;
+import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Set;
 
@@ -260,7 +261,7 @@
 	public Set<File> getAttachedFiles() {
 		if (attachedFiles != null)
 			return attachedFiles;
-		attachedFiles = new HashSet<File>();
+		attachedFiles = new LinkedHashSet<File>(); // (linked: must maintain jar order)
 
 		try {
 			attachedFiles.add(new File(getParseTableName()));

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-09-16 10:53:28 UTC (rev 19989)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-09-16 11:30:16 UTC (rev 19990)
@@ -5,9 +5,7 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.lang.reflect.Method;
 import java.net.URL;
-import java.net.URLClassLoader;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -23,7 +21,6 @@
 import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.imp.parser.IModelListener;
 import org.eclipse.imp.parser.IParseController;
-import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.Interpreter;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.core.InterpreterExit;
@@ -33,6 +30,7 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 import org.strategoxt.HybridInterpreter;
+import org.strategoxt.IncompatibleJarException;
 import org.strategoxt.imp.runtime.Debug;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.ISourceInfo;
@@ -44,8 +42,6 @@
 import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
 import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNode;
-import org.strategoxt.lang.Context;
-import org.strategoxt.libstratego_lib.libstratego_lib;
 
 /**
  * Basic Stratego feedback (i.e., errors and warnings) provider.
@@ -129,6 +125,20 @@
 			for (int i = 0; i < classpath.length; i++) {
 				classpath[i] = descriptor.getBasePath().append(jars.get(i)).toFile().toURL();
 			}
+			runtime.loadJars(classpath);
+		} catch (SecurityException e) {
+			Environment.logException("Error loading compiler service providers " + jars, e);
+		} catch (IncompatibleJarException e) {
+			Environment.logException("Error loading compiler service providers " + jars, e);
+		} catch (IOException e) {
+			Environment.logException("Error loading compiler service providers " + jars, e);
+		}
+		/*
+		try {
+			URL[] classpath = new URL[jars.size()];
+			for (int i = 0; i < classpath.length; i++) {
+				classpath[i] = descriptor.getBasePath().append(jars.get(i)).toFile().toURL();
+			}
 			
 			ClassLoader loader = new URLClassLoader(classpath, libstratego_lib.class.getClassLoader());
 			Class<?> mainClass = loader.loadClass("trans.Main");
@@ -138,6 +148,7 @@
 		} catch (Exception e) {
 			Environment.logException("Error loading compiler service providers " + jars, e);
 		}
+		*/
 	}
 
 	/**
@@ -276,8 +287,8 @@
 		    Debug.startTimer();
 		    boolean success;
 			try {
-				// TODO: Make interpreter support monitor.isCanceled()?
-				//       (e.g., overriding Context.lookupSVar to throw an OperationCanceledException) 
+				// TODO: Make Context support monitor.isCanceled()?
+				//       (e.g., overriding Context.lookupPrimitive to throw an OperationCanceledException) 
 				
 				runtime.setCurrent(term);
 				initInterpreterPath(sourceInfo.getPath().removeLastSegments(1));



From L.C.L.Kats at tudelft.nl  Wed Sep 16 13:40:37 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Sep 2009 11:40:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19991 - LennartKats -
	in strc-java/trunk: META-INF java java/runtime/org/strategoxt
	java/runtime/org/strategoxt/lang/compat
	java/runtime/org/strategoxt/lang/compat/stratego_rtg_compat
	java/runtime/org/strategoxt/lang/compat/strc_compat trans
Message-ID: <200909161140.n8GBebMm006126@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-16 11:40:37 +0000 (Wed, 16 Sep 2009)
New Revision: 19991

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19991&view=rev

Added:
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/stratego_rtg_compat/
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/
Removed:
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstratego_rtg_compat/
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstrc_compat/
Modified:
   strc-java/trunk/META-INF/MANIFEST.MF
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/stratego_rtg_compat/Main.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/stratego_rtg_compat/strrtg_list_loop1_1_0.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/stratego_rtg_compat/strrtg_repeat_1_0.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/Main.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/pp_c_0_0.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/pp_c_pretty_0_0.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/strc_cgen_aterm_0_0.java
   strc-java/trunk/trans/s2j-options.str

Log:
Changed all org.strategoxt.lib* package names into org.strategoxt.*

Changes:

Modified: strc-java/trunk/META-INF/MANIFEST.MF
===================================================================
--- strc-java/trunk/META-INF/MANIFEST.MF	2009-09-16 11:30:16 UTC (rev 19990)
+++ strc-java/trunk/META-INF/MANIFEST.MF	2009-09-16 11:40:37 UTC (rev 19991)
@@ -41,29 +41,29 @@
  org.strategoxt,
  org.strategoxt.lang,
  org.strategoxt.lang.compat,
- org.strategoxt.lang.compat.libstratego_rtg_compat,
- org.strategoxt.lang.compat.libstrc_compat,
  org.strategoxt.lang.compat.override,
  org.strategoxt.lang.compat.override.jsglr_parser,
  org.strategoxt.lang.compat.override.jsglr_parser_compat,
- org.strategoxt.lang.compat.override.libstratego_aterm_compat,
  org.strategoxt.lang.compat.override.performance_tweaks,
+ org.strategoxt.lang.compat.override.stratego_aterm_compat,
  org.strategoxt.lang.compat.override.strc_compat,
  org.strategoxt.lang.compat.override.xtc_compat,
  org.strategoxt.lang.compat.sglr,
+ org.strategoxt.lang.compat.stratego_rtg_compat,
+ org.strategoxt.lang.compat.strc_compat,
  org.strategoxt.lang.parallel.collections,
  org.strategoxt.lang.parallel.tables.attic,
  org.strategoxt.lang.terms,
- org.strategoxt.libjava_front,
- org.strategoxt.libstratego_aterm,
- org.strategoxt.libstratego_gpp,
- org.strategoxt.libstratego_lib,
- org.strategoxt.libstratego_rtg,
- org.strategoxt.libstratego_sdf,
- org.strategoxt.libstratego_sglr,
- org.strategoxt.libstratego_tool_doc,
- org.strategoxt.libstratego_xtc,
- org.strategoxt.libstrc,
+ org.strategoxt.java_front,
+ org.strategoxt.stratego_aterm,
+ org.strategoxt.stratego_gpp,
+ org.strategoxt.stratego_lib,
+ org.strategoxt.stratego_rtg,
+ org.strategoxt.stratego_sdf,
+ org.strategoxt.stratego_sglr,
+ org.strategoxt.stratego_tool_doc,
+ org.strategoxt.stratego_xtc,
+ org.strategoxt.strc,
  org.strategoxt.strj,
  shared
 Require-Bundle: org.spoofax.aterm,

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-16 11:30:16 UTC (rev 19990)
+++ strc-java/trunk/java/Makefile.am	2009-09-16 11:40:37 UTC (rev 19991)
@@ -12,7 +12,7 @@
   $(wildcard runtime/org/strategoxt/lang/parallel/*/*.java) \
   runtime/org/strategoxt/lang/compat/override/jsglr_parser/Main.java \
   runtime/org/strategoxt/lang/compat/override/jsglr_parser_compat/Main.java \
-  runtime/org/strategoxt/lang/compat/override/libstratego_aterm_compat/Main.java \
+  runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat/Main.java \
   runtime/org/strategoxt/lang/compat/override/performance_tweaks/Main.java \
   runtime/org/strategoxt/lang/compat/override/xtc_compat/Main.java \
   runtime/org/strategoxt/lang/compat/override/strc_compat/Main.java
@@ -21,23 +21,23 @@
   compiler/org/strategoxt/strj/Main.java
 
 LIBRARYJAVAS = \
-  lib/org/strategoxt/libstratego_lib/Main.java \
-  lib/org/strategoxt/libstratego_xtc/Main.java \
-  lib/org/strategoxt/libstratego_sglr/Main.java \
-  lib/org/strategoxt/libstratego_gpp/Main.java \
-  lib/org/strategoxt/libstratego_rtg/Main.java \
-  lib/org/strategoxt/libstratego_aterm/Main.java \
-  lib/org/strategoxt/libstratego_sdf/Main.java \
-  lib/org/strategoxt/libstratego_tool_doc/Main.java \
-  lib/org/strategoxt/libstrc/Main.java \
-  lib/org/strategoxt/libjava_front/Main.java
+  lib/org/strategoxt/stratego_lib/Main.java \
+  lib/org/strategoxt/stratego_xtc/Main.java \
+  lib/org/strategoxt/stratego_sglr/Main.java \
+  lib/org/strategoxt/stratego_gpp/Main.java \
+  lib/org/strategoxt/stratego_rtg/Main.java \
+  lib/org/strategoxt/stratego_aterm/Main.java \
+  lib/org/strategoxt/stratego_sdf/Main.java \
+  lib/org/strategoxt/stratego_tool_doc/Main.java \
+  lib/org/strategoxt/strc/Main.java \
+  lib/org/strategoxt/java_front/Main.java
 
 nobase_pkgdata_DATA = $(LIBRARYJAVAS) $(COMPILERJAVAS) .ALLCLASSES
 
 CLEANFILES = \
   $(LIBRARYJAVAS) $(COMPILERJAVAS) \
-  runtime/org/strategoxt/lang/compat/override/libstratego_aterm_compat.rtree \
-  lib/org/strategoxt/libstratego-xtc.rtree \
+  runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat.rtree \
+  lib/org/strategoxt/stratego-xtc.rtree \
   .ALLCLASSES
   
 clean :
@@ -100,49 +100,49 @@
 
 ###### LIBRARIES #######
 
-bin/org/strategoxt/libstratego_lib/Main.class : lib/org/strategoxt/libstratego_lib/Main.java
+bin/org/strategoxt/stratego_lib/Main.class : lib/org/strategoxt/stratego_lib/Main.java
 	$(JAVAC) $(JAVACFLAGS) $<
 
-lib/org/strategoxt/libstratego_lib/Main.java : $(STRATEGOXT)/share/stratego-lib/libstratego-lib.ctree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share/stratego-lib -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.libstratego_lib
+lib/org/strategoxt/stratego_lib/Main.java : $(STRATEGOXT)/share/stratego-lib/libstratego-lib.ctree ../trans/strj
+	../trans/strj -I $(STRATEGOXT)/share/stratego-lib -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_lib
 
-lib/org/strategoxt/libstratego-xtc.rtree : $(STRATEGOXT)/share/xtc/stratego-xtc-posix-xsi.rtree
+lib/org/strategoxt/stratego-xtc.rtree : $(STRATEGOXT)/share/xtc/stratego-xtc-posix-xsi.rtree
 	cp $< $@
 
-lib/org/strategoxt/libstratego_xtc/Main.java : lib/org/strategoxt/libstratego-xtc.rtree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/xtc -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.libstratego_xtc -la stratego-lib -D GetInternalDefaultXtcRepository=None
+lib/org/strategoxt/stratego_xtc/Main.java : lib/org/strategoxt/stratego-xtc.rtree ../trans/strj
+	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/xtc -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_xtc -la stratego-lib -D GetInternalDefaultXtcRepository=None
 
-lib/org/strategoxt/libstratego_sglr/Main.java : $(STRATEGOXT)/share/libstratego-sglr.ctree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.libstratego_sglr -la stratego-lib -la stratego-xtc
+lib/org/strategoxt/stratego_sglr/Main.java : $(STRATEGOXT)/share/libstratego-sglr.ctree ../trans/strj
+	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sglr -la stratego-lib -la stratego-xtc
 
-lib/org/strategoxt/libstratego_rtg/Main.java : $(STRATEGOXT)/share/libstratego-rtg.ctree ../trans/strj runtime/org/strategoxt/lang/compat/libstratego_rtg_compat/Main.java
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.libstratego_rtg -la stratego-lib -la stratego-sglr -la org.strategoxt.lang.compat.libstratego_rtg_compat
+lib/org/strategoxt/stratego_rtg/Main.java : $(STRATEGOXT)/share/libstratego-rtg.ctree ../trans/strj runtime/org/strategoxt/lang/compat/stratego_rtg_compat/Main.java
+	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_rtg -la stratego-lib -la stratego-sglr -la org.strategoxt.lang.compat.stratego_rtg_compat
 
-lib/org/strategoxt/libstratego_gpp/Main.java : $(STRATEGOXT)/share/libstratego-gpp.ctree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.libstratego_gpp -la stratego-lib -la stratego-lib -la stratego-sglr
+lib/org/strategoxt/stratego_gpp/Main.java : $(STRATEGOXT)/share/libstratego-gpp.ctree ../trans/strj
+	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_gpp -la stratego-lib -la stratego-lib -la stratego-sglr
 
-lib/org/strategoxt/libstratego_aterm/Main.java : $(STRATEGOXT)/share/libstratego-aterm.ctree runtime/org/strategoxt/lang/compat/override/libstratego_aterm_compat/Main.java ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.libstratego_aterm -la stratego-lib -la stratego-gpp -la org.strategoxt.lang.compat.override.libstratego_aterm_compat
+lib/org/strategoxt/stratego_aterm/Main.java : $(STRATEGOXT)/share/libstratego-aterm.ctree runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat/Main.java ../trans/strj
+	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_aterm -la stratego-lib -la stratego-gpp -la org.strategoxt.lang.compat.override.stratego_aterm_compat
 
-lib/org/strategoxt/libstratego_sdf/Main.java : $(STRATEGOXT)/share/libstratego-sdf.ctree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.libstratego_sdf -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-aterm 
+lib/org/strategoxt/stratego_sdf/Main.java : $(STRATEGOXT)/share/libstratego-sdf.ctree ../trans/strj
+	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sdf -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-aterm 
 
-lib/org/strategoxt/libstratego_tool_doc/Main.java : $(STRATEGOXT)/share/libstratego-tool-doc.ctree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.libstratego_tool_doc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -D SRTS-package-bugreport='"bugs at strategoxt.org"' -D SRTS-package-name='"<SRTS-package-name>"' -D SRTS-package-revision='"<SRTS-package-revision>"' -D SRTS-package-version='"<SRTS-package-version>"'
+lib/org/strategoxt/stratego_tool_doc/Main.java : $(STRATEGOXT)/share/libstratego-tool-doc.ctree ../trans/strj
+	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_tool_doc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -D SRTS-package-bugreport='"bugs at strategoxt.org"' -D SRTS-package-name='"<SRTS-package-name>"' -D SRTS-package-revision='"<SRTS-package-revision>"' -D SRTS-package-version='"<SRTS-package-version>"'
 
-lib/org/strategoxt/libstrc/Main.java : $(STRATEGOXT)/share/libstrc.ctree ../trans/strj runtime/org/strategoxt/lang/compat/libstrc_compat/Main.java
-	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.libstrc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-rtg -la stratego-xtc -la org.strategoxt.lang.compat.libstrc_compat
+lib/org/strategoxt/strc/Main.java : $(STRATEGOXT)/share/libstrc.ctree ../trans/strj runtime/org/strategoxt/lang/compat/strc_compat/Main.java
+	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.strc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-rtg -la stratego-xtc -la org.strategoxt.lang.compat.strc_compat
 
-lib/org/strategoxt/libjava_front/Main.java : $(JAVA_FRONT)/share/java-front/libjava-front.ctree ../trans/strj
-	../trans/strj -I $(JAVA_FRONT)/share/java-front-syntax -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.libjava_front -la stratego-lib -la stratego-sglr -la stratego-gpp
+lib/org/strategoxt/java_front/Main.java : $(JAVA_FRONT)/share/java-front/libjava-front.ctree ../trans/strj
+	../trans/strj -I $(JAVA_FRONT)/share/java-front-syntax -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.java_front -la stratego-lib -la stratego-sglr -la stratego-gpp
 
 ###### RUNTIME #######
 
-runtime/org/strategoxt/lang/compat/override/libstratego_aterm_compat.rtree : $(STRATEGOXT)/share/aterm-front/ATerms.str
+runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat.rtree : $(STRATEGOXT)/share/aterm-front/ATerms.str
 	parse-stratego -i $< -o $@
 
-runtime/org/strategoxt/lang/compat/override/libstratego_aterm_compat/Main.java : runtime/org/strategoxt/lang/compat/override/libstratego_aterm_compat.rtree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.libstratego_aterm_compat -la stratego-lib -la stratego-gpp
+runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat/Main.java : runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat.rtree ../trans/strj
+	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.stratego_aterm_compat -la stratego-lib -la stratego-gpp
 
 runtime/org/strategoxt/lang/compat/override/jsglr_parser_compat/Main.java : runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str ../trans/strj
 	../trans/strj -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.jsglr_parser_compat -la stratego-lib -la stratego-sglr -la stratego-xtc
@@ -157,12 +157,12 @@
 	../trans/strj -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.xtc_compat -la stratego-lib -la stratego-xtc
 
 runtime/org/strategoxt/lang/compat/override/strc_compat/Main.java : runtime/org/strategoxt/lang/compat/override/strc-compat.str ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -I $(STRATEGOXT)/share/xtc -I $(STRATEGOXT)/share/stratego-lib -I $(JAVA_FRONT)/share/java-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.strc_compat -la stratego-lib -la stratego-xtc -la org.strategoxt.libstrc
+	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -I $(STRATEGOXT)/share/xtc -I $(STRATEGOXT)/share/stratego-lib -I $(JAVA_FRONT)/share/java-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.strc_compat -la stratego-lib -la stratego-xtc -la org.strategoxt.strc
 
 ###### COMPILER #######
 
 compiler/org/strategoxt/strj/Main.java : ../trans/strj.ctree ../trans/strj
-	../trans/strj -i $< -o $@ -clean -p org.strategoxt.strj --verbose 3 -la stratego-lib -la stratego-xtc -la stratego-gpp -la org.strategoxt.libstrc -la org.strategoxt.libjava_front -O 3 # -D DEFAULT_XTC_REPOSITORY="\"$(REPOSITORY)\""
+	../trans/strj -i $< -o $@ -clean -p org.strategoxt.strj --verbose 3 -la stratego-lib -la stratego-xtc -la stratego-gpp -la org.strategoxt.strc -la org.strategoxt.java_front -O 3 # -D DEFAULT_XTC_REPOSITORY="\"$(REPOSITORY)\""
 
 ###### EXTERNAL #######
 

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-16 11:30:16 UTC (rev 19990)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-16 11:40:37 UTC (rev 19991)
@@ -1,12 +1,8 @@
 package org.strategoxt;
 
-import static org.spoofax.interpreter.core.Tools.*;
-
 import java.io.IOException;
 import java.lang.reflect.InvocationTargetException;
-import java.lang.reflect.Method;
 import java.net.JarURLConnection;
-import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLClassLoader;
 import java.util.Enumeration;
@@ -26,7 +22,7 @@
 import org.strategoxt.lang.InteropRegisterer;
 import org.strategoxt.lang.StrategoException;
 import org.strategoxt.lang.StrategoExit;
-import org.strategoxt.libstratego_lib.libstratego_lib;
+import org.strategoxt.stratego_lib.stratego_lib;
 
 /**
  * An interpreter that uses STRJ-compiled versions of the Stratego standard libraries.
@@ -87,7 +83,7 @@
 	public void loadJars(ClassLoader parentClassLoader, URL... jars)
 			throws SecurityException, IncompatibleJarException, IOException {
 
-		URLClassLoader classLoader = new URLClassLoader(jars, libstratego_lib.class.getClassLoader());
+		URLClassLoader classLoader = new URLClassLoader(jars, stratego_lib.class.getClassLoader());
 		
 		for (URL jar : jars) {
 		    registerJar(classLoader, jar);
@@ -138,17 +134,17 @@
 		IContext context = getContext();
 		Context compiledContext = getCompiledContext();
 		
-		org.strategoxt.libstratego_aterm.Main.registerInterop(context, compiledContext);
-		org.strategoxt.libstratego_lib.Main.registerInterop(context, compiledContext);
-		org.strategoxt.libstratego_rtg.Main.registerInterop(context, compiledContext);
-		org.strategoxt.libstratego_sdf.Main.registerInterop(context, compiledContext);
-		org.strategoxt.libstratego_xtc.Main.registerInterop(context, compiledContext);
-		org.strategoxt.libstratego_sglr.Main.registerInterop(context, compiledContext);
-		org.strategoxt.libstratego_tool_doc.Main.registerInterop(context, compiledContext);
-		org.strategoxt.libstratego_rtg.Main.registerInterop(context, compiledContext);
-		org.strategoxt.libstratego_gpp.Main.registerInterop(context, compiledContext);
-		org.strategoxt.libjava_front.Main.registerInterop(context, compiledContext);
-		org.strategoxt.libstrc.Main.registerInterop(context, compiledContext);
+		org.strategoxt.stratego_aterm.Main.registerInterop(context, compiledContext);
+		org.strategoxt.stratego_lib.Main.registerInterop(context, compiledContext);
+		org.strategoxt.stratego_rtg.Main.registerInterop(context, compiledContext);
+		org.strategoxt.stratego_sdf.Main.registerInterop(context, compiledContext);
+		org.strategoxt.stratego_xtc.Main.registerInterop(context, compiledContext);
+		org.strategoxt.stratego_sglr.Main.registerInterop(context, compiledContext);
+		org.strategoxt.stratego_tool_doc.Main.registerInterop(context, compiledContext);
+		org.strategoxt.stratego_rtg.Main.registerInterop(context, compiledContext);
+		org.strategoxt.stratego_gpp.Main.registerInterop(context, compiledContext);
+		org.strategoxt.java_front.Main.registerInterop(context, compiledContext);
+		org.strategoxt.strc.Main.registerInterop(context, compiledContext);
 	}
 	
 	public final Context getCompiledContext() {

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/stratego_rtg_compat/Main.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstratego_rtg_compat/Main.java	2009-09-14 11:15:17 UTC (rev 19980)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/stratego_rtg_compat/Main.java	2009-09-16 11:40:37 UTC (rev 19991)
@@ -1,4 +1,4 @@
-package org.strategoxt.lang.compat.libstratego_rtg_compat;
+package org.strategoxt.lang.compat.stratego_rtg_compat;
 
 import org.strategoxt.lang.Context;
 

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/stratego_rtg_compat/strrtg_list_loop1_1_0.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstratego_rtg_compat/strrtg_list_loop1_1_0.java	2009-09-14 11:15:17 UTC (rev 19980)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/stratego_rtg_compat/strrtg_list_loop1_1_0.java	2009-09-16 11:40:37 UTC (rev 19991)
@@ -1,4 +1,4 @@
-package org.strategoxt.lang.compat.libstratego_rtg_compat;
+package org.strategoxt.lang.compat.stratego_rtg_compat;
 
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/stratego_rtg_compat/strrtg_repeat_1_0.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstratego_rtg_compat/strrtg_repeat_1_0.java	2009-09-14 11:15:17 UTC (rev 19980)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/stratego_rtg_compat/strrtg_repeat_1_0.java	2009-09-16 11:40:37 UTC (rev 19991)
@@ -1,4 +1,4 @@
-package org.strategoxt.lang.compat.libstratego_rtg_compat;
+package org.strategoxt.lang.compat.stratego_rtg_compat;
 
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.lang.Context;

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/Main.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstrc_compat/Main.java	2009-09-14 11:15:17 UTC (rev 19980)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/Main.java	2009-09-16 11:40:37 UTC (rev 19991)
@@ -1,4 +1,4 @@
-package org.strategoxt.lang.compat.libstrc_compat;
+package org.strategoxt.lang.compat.strc_compat;
 
 import org.spoofax.interpreter.library.AbstractStrategoOperatorRegistry;
 import org.strategoxt.lang.Context;
@@ -30,7 +30,7 @@
 		}
 
 		public String getOperatorRegistryName() {
-			return "libstrc_compat";
+			return "strc_compat";
 		}		
 	}
 }

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/pp_c_0_0.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstrc_compat/pp_c_0_0.java	2009-09-14 11:15:17 UTC (rev 19980)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/pp_c_0_0.java	2009-09-16 11:40:37 UTC (rev 19991)
@@ -1,4 +1,4 @@
-package org.strategoxt.lang.compat.libstrc_compat;
+package org.strategoxt.lang.compat.strc_compat;
 
 import org.spoofax.NotImplementedException;
 import org.spoofax.interpreter.library.AbstractStrategoOperatorRegistry;

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/pp_c_pretty_0_0.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstrc_compat/pp_c_pretty_0_0.java	2009-09-14 11:15:17 UTC (rev 19980)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/pp_c_pretty_0_0.java	2009-09-16 11:40:37 UTC (rev 19991)
@@ -1,4 +1,4 @@
-package org.strategoxt.lang.compat.libstrc_compat;
+package org.strategoxt.lang.compat.strc_compat;
 
 import org.spoofax.NotImplementedException;
 import org.spoofax.interpreter.terms.IStrategoTerm;

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/strc_cgen_aterm_0_0.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/libstrc_compat/strc_cgen_aterm_0_0.java	2009-09-14 11:15:17 UTC (rev 19980)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/strc_compat/strc_cgen_aterm_0_0.java	2009-09-16 11:40:37 UTC (rev 19991)
@@ -1,4 +1,4 @@
-package org.strategoxt.lang.compat.libstrc_compat;
+package org.strategoxt.lang.compat.strc_compat;
 
 import org.spoofax.NotImplementedException;
 import org.spoofax.interpreter.terms.IStrategoTerm;

Modified: strc-java/trunk/trans/s2j-options.str
===================================================================
--- strc-java/trunk/trans/s2j-options.str	2009-09-16 11:30:16 UTC (rev 19990)
+++ strc-java/trunk/trans/s2j-options.str	2009-09-16 11:40:37 UTC (rev 19991)
@@ -77,10 +77,10 @@
     switch id
       case "stratego-lib" + "stratego-xtc" + "stratego-sglr" + "stratego-rtg" + "stratego-aterm" +
            "stratego-gpp" + "strc" + "stratego-tool-doc" + "stratego-sdf" + "java-front":
-        <conc-strings> ("org.strategoxt.lib", <id>)
+        <conc-strings> ("org.strategoxt.", <id>)
 
       case "stratego-parallel":
-        <conc-strings> ("org.strategoxt.lang.parallel.lib", <id>)
+        <conc-strings> ("org.strategoxt.lang.parallel.", <id>)
 
       case not(is-substring(!".")):
         err(|"Imported libraries must follow format packagename.ClassName"); fail



From L.C.L.Kats at tudelft.nl  Wed Sep 16 13:41:22 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Sep 2009 11:41:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19992 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.generator/lib
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <200909161141.n8GBfMra006143@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-16 11:41:22 +0000 (Wed, 16 Sep 2009)
New Revision: 19992

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19992&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRLibrary.java

Log:
Changed all org.strategoxt.lib* package names into org.strategoxt.*

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-09-16 11:40:37 UTC (rev 19991)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-09-16 11:41:22 UTC (rev 19992)
@@ -20,8 +20,8 @@
 import org.strategoxt.lang.Context;
 import org.strategoxt.lang.StrategoErrorExit;
 import org.strategoxt.lang.StrategoExit;
-import org.strategoxt.libstratego_lib.dr_scope_all_end_0_0;
-import org.strategoxt.libstratego_lib.dr_scope_all_start_0_0;
+import org.strategoxt.stratego_lib.dr_scope_all_end_0_0;
+import org.strategoxt.stratego_lib.dr_scope_all_start_0_0;
 import org.strategoxt.permissivegrammars.make_permissive;
 
 /**

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-16 11:40:37 UTC (rev 19991)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-16 11:41:22 UTC (rev 19992)
@@ -116,7 +116,7 @@
 		try {
 			agent.setWorkingDir(project.getLocation().toOSString());
 			try {
-				String jar1 = org.strategoxt.libstratego_lib.Main.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+				String jar1 = org.strategoxt.stratego_lib.Main.class.getProtectionDomain().getCodeSource().getLocation().getFile();
 				String jar2 = make_permissive.class.getProtectionDomain().getCodeSource().getLocation().getFile();
 				String jar3 = sdf2imp.class.getProtectionDomain().getCodeSource().getLocation().getFile();
 				assert jar1.endsWith(".jar") && jar2.endsWith(".jar") && jar3.endsWith(".jar");

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	2009-09-16 11:40:37 UTC (rev 19991)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	2009-09-16 11:41:22 UTC (rev 19992)
@@ -9,7 +9,7 @@
 import org.strategoxt.imp.runtime.parser.tokens.TokenKindManager;
 import org.strategoxt.lang.Context;
 import org.strategoxt.lang.Strategy;
-import org.strategoxt.libstratego_sglr.implode_asfix_1_0;
+import org.strategoxt.stratego_sglr.implode_asfix_1_0;
 
 import aterm.ATerm;
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRLibrary.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRLibrary.java	2009-09-16 11:40:37 UTC (rev 19991)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPJSGLRLibrary.java	2009-09-16 11:41:22 UTC (rev 19992)
@@ -3,7 +3,7 @@
 import org.spoofax.interpreter.library.jsglr.JSGLRLibrary;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.lang.compat.sglr.SGLRCompatLibrary;
-import org.strategoxt.libstratego_sglr.implode_asfix_1_0;
+import org.strategoxt.stratego_sglr.implode_asfix_1_0;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>



From L.C.L.Kats at tudelft.nl  Wed Sep 16 14:02:42 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Sep 2009 12:02:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19993 - LennartKats -
	java-front/trunk
Message-ID: <200909161202.n8GC2gVq006743@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-16 12:02:42 +0000 (Wed, 16 Sep 2009)
New Revision: 19993

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19993&view=rev

Modified:
   java-front/trunk/README

Log:
push

Changes:

Modified: java-front/trunk/README
===================================================================
--- java-front/trunk/README	2009-09-16 11:41:22 UTC (rev 19992)
+++ java-front/trunk/README	2009-09-16 12:02:42 UTC (rev 19993)
@@ -23,4 +23,4 @@
 --------------------------------------------------------------------------
 
 Instructions are available online:
-   * http://www.stratego-language.org/Stratego/JavaFront
+   * http://www.strategoxt.org/Stratego/JavaFront



From L.C.L.Kats at tudelft.nl  Wed Sep 16 14:38:18 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Sep 2009 12:38:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19994 - LennartKats -
	strc-java/trunk/trans
Message-ID: <200909161238.n8GCcIjS007011@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-16 12:38:18 +0000 (Wed, 16 Sep 2009)
New Revision: 19994

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19994&view=rev

Modified:
   strc-java/trunk/trans/java-postprocess.str
   strc-java/trunk/trans/s2j.str

Log:
Subtle dist fix.

Changes:

Modified: strc-java/trunk/trans/java-postprocess.str
===================================================================
--- strc-java/trunk/trans/java-postprocess.str	2009-09-16 12:02:42 UTC (rev 19993)
+++ strc-java/trunk/trans/java-postprocess.str	2009-09-16 12:38:18 UTC (rev 19994)
@@ -115,14 +115,14 @@
 
   to-compilation-unit(|pkgname, imports) :
     type-dec |[
-      mod* class x extends y {
+      mod* class x extends tname_y {
         ~*members
       }
     ]| ->
     compilation-unit |[
       ~package-dec?: pkgname
       ~import-dec*: imports
-      mod2* class x extends y {
+      mod2* class x extends tname_y {
         ~*members
       }
     ]|

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-09-16 12:02:42 UTC (rev 19993)
+++ strc-java/trunk/trans/s2j.str	2009-09-16 12:38:18 UTC (rev 19994)
@@ -230,7 +230,7 @@
     with
       x' := <jify> x
   
-  java-init-import : // TODO: Call the library-specific main class instead
+  java-init-import :
     x -> |[ x'.Main.init(context); ]|
     with
       x' := <jify> x



From L.C.L.Kats at tudelft.nl  Wed Sep 16 14:46:08 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Sep 2009 12:46:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19995 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator/lib
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat
Message-ID: <200909161246.n8GCk8qG007312@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-16 12:46:08 +0000 (Wed, 16 Sep 2009)
New Revision: 19995

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19995&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java

Log:
Final lib*->* transition.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
===================================================================
(Binary files differ)

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java	2009-09-16 12:38:18 UTC (rev 19994)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java	2009-09-16 12:46:08 UTC (rev 19995)
@@ -49,11 +49,11 @@
 	 *  to implement some native functionality, such as libstratego-rtg-compat.) 
 	 */
 	public void activateComponent(String component) {
-		if ("libstratego_lib".equals(component)) {
+		if ("stratego_lib".equals(component)) {
 			context.addOperatorRegistry(new CompatLibrary());
 			performance_tweaks.init(context);
 			xtc_compat.init(context); // also deals with native calls for libstratego-lib
-		} else if ("libstratego_sglr".equals(component)) {
+		} else if ("stratego_sglr".equals(component)) {
 			WrappedATermFactory atermFactory = new WrappedATermFactory();
 			context.addOperatorRegistry(new JSGLRLibrary(atermFactory));
 			context.addOperatorRegistry(new SGLRCompatLibrary(atermFactory));



From L.C.L.Kats at tudelft.nl  Wed Sep 16 17:31:33 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 16 Sep 2009 15:31:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19996 - LennartKats -
	in strc-java/trunk: java java/runtime/org/strategoxt trans
Message-ID: <200909161531.n8GFVXSU009905@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-16 15:31:32 +0000 (Wed, 16 Sep 2009)
New Revision: 19996

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19996&view=rev

Modified:
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/trans/s2j.str

Log:
Got dynamic jar loading fully working.

Changes:

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-16 12:46:08 UTC (rev 19995)
+++ strc-java/trunk/java/Makefile.am	2009-09-16 15:31:32 UTC (rev 19996)
@@ -4,6 +4,7 @@
 pkgdata_DATA=strategoxt.jar
 
 RUNTIMEJAVAS = \
+  $(wildcard runtime/org/strategoxt/*.java) \
   $(wildcard runtime/org/strategoxt/lang/*.java) \
   $(wildcard runtime/org/strategoxt/lang/compat/*.java) \
   $(wildcard runtime/org/strategoxt/lang/compat/sglr/*.java) \

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-16 12:46:08 UTC (rev 19995)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-16 15:31:32 UTC (rev 19996)
@@ -100,13 +100,14 @@
 		
 		while (jarEntries.hasMoreElements()) {
 			JarEntry entry = jarEntries.nextElement();
-			if (entry.getName().endsWith("/InteropRegisterer.class")) {
-				String className = entry.getName().substring(0, entry.getName().length() - 7);
+			if (entry.getName().endsWith("/InteropRegisterer.class") || entry.getName().equals("InteropRegisterer.class")) {
+				final int POSTFIX = ".class".length();
+				String className = entry.getName().substring(0, entry.getName().length() - POSTFIX);
 				className = className.replace('/', '.');
 				Class<?> registerClass;
 				try {
 					registerClass = classLoader.loadClass(className);
-					Object registerObject = registerClass.getConstructor().newInstance();
+					Object registerObject = registerClass.getDeclaredConstructor().newInstance();
 					if (registerObject instanceof InteropRegisterer) {
 						((InteropRegisterer) registerObject).registerLazy(getContext(), getCompiledContext(), classLoader);
 					} else {

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-09-16 12:46:08 UTC (rev 19995)
+++ strc-java/trunk/trans/s2j.str	2009-09-16 15:31:32 UTC (rev 19996)
@@ -296,8 +296,9 @@
         new InteropRegisterer().registerLazy(context, compiledContext, InteropRegisterer.class.getClassLoader());
       }
       
+      // InteropRegisterer is used for dynamic loading and gets lifted to a separate class
       @SuppressWarnings("unused")
-      protected static class InteropRegisterer extends org.strategoxt.lang.InteropRegisterer {
+      public static class InteropRegisterer extends org.strategoxt.lang.InteropRegisterer {
         public void register(org.spoofax.interpreter.core.IContext context, Context compiledContext) {
           register(context, compiledContext, context.getVarScope());
         }



From L.C.L.Kats at tudelft.nl  Fri Sep 18 13:18:26 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 18 Sep 2009 11:18:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19997 - LennartKats -
	in strc-java/trunk: java/runtime/org/strategoxt tools trans
Message-ID: <200909181118.n8IBIQcb014727@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-18 11:18:26 +0000 (Fri, 18 Sep 2009)
New Revision: 19997

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19997&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/tools/strj-jar
   strc-java/trunk/trans/java-optimize.str
   strc-java/trunk/trans/s2j.str

Log:
Eliminated the getConstant() method; it shouldn't be needed with proper term factory implementations. Also added constantification of lists.

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-16 15:31:32 UTC (rev 19996)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-18 11:18:26 UTC (rev 19997)
@@ -99,10 +99,10 @@
 		Enumeration<JarEntry> jarEntries = jarFile.entries();
 		
 		while (jarEntries.hasMoreElements()) {
-			JarEntry entry = jarEntries.nextElement();
-			if (entry.getName().endsWith("/InteropRegisterer.class") || entry.getName().equals("InteropRegisterer.class")) {
+			String entry = jarEntries.nextElement().getName();
+			if (entry.endsWith("/InteropRegisterer.class") || entry.equals("InteropRegisterer.class")) {
 				final int POSTFIX = ".class".length();
-				String className = entry.getName().substring(0, entry.getName().length() - POSTFIX);
+				String className = entry.substring(0, entry.length() - POSTFIX);
 				className = className.replace('/', '.');
 				Class<?> registerClass;
 				try {

Modified: strc-java/trunk/tools/strj-jar
===================================================================
--- strc-java/trunk/tools/strj-jar	2009-09-16 15:31:32 UTC (rev 19996)
+++ strc-java/trunk/tools/strj-jar	2009-09-18 11:18:26 UTC (rev 19997)
@@ -74,7 +74,7 @@
  
 INPUT2=
 INPUT3=
-if head -n 1 $INPUT | grep '^package'; then
+if head -n 1 $INPUT | grep '^package' &>/dev/null; then
   # PACKAGE=`head $INPUT -n 1 | sed 's/package //; s/\;//'`
   # PACKAGEDIR=`echo "$PACKAGE" | sed 's!\.!/!g	'`
   INPUT2="$INPUTDIR/Main.java"

Modified: strc-java/trunk/trans/java-optimize.str
===================================================================
--- strc-java/trunk/trans/java-optimize.str	2009-09-16 15:31:32 UTC (rev 19996)
+++ strc-java/trunk/trans/java-optimize.str	2009-09-18 11:18:26 UTC (rev 19997)
@@ -60,7 +60,7 @@
 
   has-no-side-effects =
     ?Lit(_)
-  + ?|[ x.getConstant(e1, e2) ]|
+  + ?|[ x_main.x_constant ]|
   + ?ExprName(_)
   //+ ?|[ x.get() ]|
   //+ ?|[ termFactory.x(e*) ]|; where(<all(has-no-side-effects)> e*)

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-09-16 15:31:32 UTC (rev 19996)
+++ strc-java/trunk/trans/s2j.str	2009-09-18 11:18:26 UTC (rev 19997)
@@ -141,9 +141,8 @@
            ~*def-inits
            context.registerComponent("~x_name'");
          }
-         // Set these last to trigger failure if getConstant() is called early
-         x_name.initedContext = context;
-         x_name.constantFactory = termFactory;
+         initedContext = context;
+         constantFactory = termFactory;
          isIniting = false;
          return context;
        }
@@ -166,16 +165,6 @@
          ~*cnst-inits
        }
      ]|
-     
-     protected static IStrategoTerm getConstant(ITermFactory factory, IStrategoTerm constant) {
-       if (factory == constantFactory) {
-         return constant;
-       } else if (constantFactory != null) {
-         return new TermConverter(factory).convert(constant);
-       } else {
-         throw new IllegalStateException("Component not initialized; please call init() first");
-       }
-     }
 
      ~*constant-defs
      ~*function-defs
@@ -340,8 +329,6 @@
     with
       y := <conc-strings> (<get-config> "-p", ".", x)
     <+
-      // TODO: test this
-      //       would it have to be x.isntance instead?
       y := <conc-strings> (<ApplicationName>, "$", x)
 
 rules
@@ -884,7 +871,7 @@
    *    (minding the 32767 length limit)
    */
   translate-ImportTerm :
-    ImportTerm(file) -> |[ term = x_main.getConstant(termFactory, x_main.x_constant); ]|
+    ImportTerm(file) -> |[ term = x_main.x_constant; ]|
     with
       inputfile  := <find-import-term-file> file // (exits on error)
     ; outputfile := <base-filename> file
@@ -913,8 +900,8 @@
           protected static ImportTerm x_constant;
         ]|
         ConstDecl :+= class-body-dec |[
-          public static IStrategoTerm x_getconstant(ITermFactory termFactory) {
-            return getConstant(termFactory, x_constant);
+          public static IStrategoTerm x_getconstant() {
+            return x_constant;
           }
         ]|
         ConstInit :+= bstm* |[
@@ -987,33 +974,39 @@
        ; (java-CacheConstant-again <+ java-CacheConstant <+ Snd)
 
   java-CacheConstant-again :
-    (t, e1 @ |[ x_main.getConstant(termFactory, e2) ]|) -> e1
+    (t, e1 @ |[ x_main.x_constant ]|) -> e1
     with
       rules(java-Cache: t -> e1)
     ; x_main := <MainClassName>
 
   java-CacheConstant :
-    (t, e1) -> |[ x_main.getConstant(termFactory, x_main.x) ]|
+    (t, e1) -> |[ x_main.x ]|
   where
       <(Op(id, map(java-Cache)); java-proper-list 
             + Anno(java-Cache, java-Cache) 
             + Int(id) + Str(id) + Real(id) )> t
   with
-        if !t => Op(op, _) then
-          x := <newname> <conc-strings> ("const", <try(un-double-quote-chars); jify> op)
-        else
-          x := <newname> "const"
+        x_main := <MainClassName>
+      ; switch !t
+          case ?Op("Cons", _):
+            x := <newname> "constCons"
+          ; rules(IsProperList: |[ x_main.x ]|)
+          case ?Op("Nil", _):
+            x := <newname> "constNil"
+          ; rules(IsProperList: |[ x_main.x ]|)
+          case ?Op(op, _):
+            x := <newname> <conc-strings> ("const", <try(un-double-quote-chars); jify> op)
+          otherwise:
+            x := <newname> "const"
         end
-      ; x_main := <MainClassName>
-      ; rules( java-Cache : t -> |[ x_main.getConstant(termFactory, x_main.x) ]| )
+      ; rules( java-Cache : t -> |[ x_main.x ]| )
       ; !(x, e1)
       ; rules(ConstDecl :+= <java-DeclareTermId>)
       ; rules(ConstInit :+= <java-InitTermId>)
 
  java-proper-list =
     Op("Nil", [])
-    + Op("Cons", [id, java-proper-list])
-    // UNDONE: + Op("Cons", [id, java-proper-list + ?|[ x_main.getConstant(e1, e2) ]|])
+    + Op("Cons", [id, java-proper-list <+ IsProperList])
     // TODO: Fix constants being generated multiple times
     //       e.g., <conc> ([], []) does this; it's got something to do with annos 
     + Op(id, id)
@@ -1028,9 +1021,7 @@
     class-body-dec|[ protected static IStrategoTerm x; ]|
 
   java-InitTermId :
-    (x, e) -> bstm*|[ x = e'; ]|
-    with
-      e' := <alltd(\|[ x.getConstant(e_factory, e_const) ]| -> e_const\)> e
+    (x, e) -> bstm* |[ x = e; ]|
 
   java-mk-int-const =
     !Lit(Deci(<try(int-to-string)>))
@@ -1131,7 +1122,7 @@
         ; if <not(Anno(is-ListOp,id))> t2 then 
             java-check-aterm-list 
           else
-              if ?|[ x.getConstant(e1, e2) ]| + ?expr |[ x ]| then
+              if ?|[ x_main.x_constant ]| + ?expr |[ x ]| then
                 !|[ (IStrategoList) ~expr:<id> ]|
               else
                 try(java-UncastATerm)



From L.C.L.Kats at tudelft.nl  Fri Sep 18 13:41:20 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 18 Sep 2009 11:41:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19998 - LennartKats -
	in spoofax-imp/trunk: .
	org.strategoxt.imp.editors.sdf/.externalToolBuilders
	org.strategoxt.imp.generator/src/sdf2imp
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.generator/src/sdf2imp/services
	org.strategoxt.imp.generator/src/syntax
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
	org.strategoxt.imp.runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.stratego_editor/.externalToolBuilders
Message-ID: <200909181141.n8IBfK46015065@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-18 11:41:20 +0000 (Fri, 18 Sep 2009)
New Revision: 19998

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19998&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str
Modified:
   spoofax-imp/trunk/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-analysis-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-references-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego-Sugar build.xml.launch

Log:
- Enabled ctree building instead of jar building by default in the generated build.xml
- Generate a new example .str file that provides some semantic services
  for the "entities" language


Changes:

Modified: spoofax-imp/trunk/Makefile
===================================================================
--- spoofax-imp/trunk/Makefile	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/Makefile	2009-09-18 11:41:20 UTC (rev 19998)
@@ -1,8 +1,8 @@
 all :
 	$(MAKE) -C org.strategoxt.imp.generator all
 	(cd org.strategoxt.imp.editors.editorservice && ant -Dexternaldef=../org.strategoxt.imp.generator/src/syntax/EditorService.def)
-	(cd org.strategoxt.imp.editors.sdf && ant)
-	(cd org.strategoxt.imp.stratego_editor && ant)
+	(cd org.strategoxt.imp.editors.sdf && ant -Dexternaldef=include/SDF.def)
+	(cd org.strategoxt.imp.stratego_editor && ant -D externaldef=include/Stratego-Sugar.def)
 
 check : all
 	$(MAKE) -C org.strategoxt.imp.generator check

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.xml.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.xml.launch	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.xml.launch	2009-09-18 11:41:20 UTC (rev 19998)
@@ -19,6 +19,10 @@
 <booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.editors.sdf"/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<mapAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_PROPERTIES">
+<mapEntry key="eclipse.running" value="true"/>
+<mapEntry key="externaldef" value="syntax/SDF.def"/>
+</mapAttribute>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.sdf/build.xml}"/>
 <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-09-18 11:41:20 UTC (rev 19998)
@@ -87,6 +87,7 @@
         rules(StartSymbol := "Start")
       end;
       create-grammar;
+      create-trans;
       input := <pack-sdf> FILE(<conc-strings> ("syntax/", <get-sdf-main-module>, ".sdf"))
     end;
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-18 11:41:20 UTC (rev 19998)
@@ -2,6 +2,7 @@
 
 imports
   sdf2imp/util/-
+  sdf2imp/project/create-trans
 
 strategies
 
@@ -9,7 +10,7 @@
     <file-exists> "build.xml"
   <+
     name       := <get-sdf-main-module>;
-    name'      := <lower-case; cify; string-replace(|"_", "-")> name;
+    name'      := <trans-module-name>;
     classname  := <get-main-class-name>;
     pkgname    := <BasePackage <+ default-package-name>;
     
@@ -17,6 +18,11 @@
     %>
     <?xml version="1.0" encoding="UTF-8"?>
     <project name="<%= name %>" default="all">
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="<%= name %>"/>
+        <property name="esvmodule" value="<%= name %>"/>
+        <property name="strmodule" value="<%= name' %>"/>
     
         <!-- Project directories -->
         <property name="trans" location="trans"/>
@@ -26,11 +32,6 @@
         <property name="build" location="bin"/>
         <property name="dist" location="bin/dist"/>
         
-        <!-- Key input modules -->
-        <property name="sdfmodule" value="WebDSL"/>
-        <property name="esvmodule" value="WebDSL"/>
-        <property name="strmodule" value="webdsl"/>
-        
         <!-- External .def and .jar locations
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
         <property name="externaljar" value="../lib.jar"/>
@@ -40,8 +41,7 @@
         <!-- Environment configuration -->
         <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
         <property name="build.sdf.imports" value=""/>
-        <property name="build.stratego.args"
-                 value="-m main-${strmodule} --library -S -I ${trans} -I ${build} -I ${lib}
+        <property name="build.stratego.args" value="-m main-${strmodule} --library -I ${trans} -I ${build} -I ${lib}
                         -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc
                         -I ${user.home}/.nix-profile/share/java-front
                         -I ${basedir}/include
@@ -57,12 +57,16 @@
         <condition property="externaljarimport" value=":${externaljar}" else="">
             <isset property="externaljar"/>
         </condition>
+        <fail if="externaljar" unless="externaljarflags"/>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
         <mkdir dir="${build}"/>
         <mkdir dir="${src-gen}"/>
         <mkdir dir="${dist}"/>
         <mkdir dir="include"/>
     
-        <target name="all" depends="stratego.java,sdf2table,sdf2imp"/>
+        <target name="all" depends="stratego.ctree,sdf2table,sdf2imp"/>
 
         <target name="sdf2imp" depends="sdf2imp.eclipse,sdf2imp.standalone"/>
         
@@ -157,6 +161,8 @@
                 <srcfile/>
                 <arg value="-o"/>
                 <targetfile/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
                 
                 <fileset file="include/${sdfmodule}.rtg"/>
                 <mapper type="glob" from="*.rtg" to="*.str"/>
@@ -172,11 +178,12 @@
                 <arg value="-o"/>
                 <targetfile/>
                 
-                <fileset file="include/${sdfmodule}.str"/>
+                <fileset file="include/${sdfmodule}.def"/>
                 <mapper type="glob" from="*.def" to="*.rtg"/>
             </apply>
         </target>
     
+        <!-- C-based Stratego compilation (unused) -->
         <target name="stratego.c">
             <antcall target="stratego.helper">
                 <param name="build.stratego.outputpath" value="include"/>
@@ -186,7 +193,8 @@
             </antcall>
         </target>
     
-        <target name="stratego.interpreter">
+        <!-- Stratego interpreter target -->
+        <target name="stratego.ctree">
             <antcall target="stratego.helper">
                 <param name="build.stratego.outputpath" value="include"/>
                 <param name="build.stratego.extraargs" value="-F --library"/>
@@ -216,11 +224,11 @@
             <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
             <antcall target="copy-jar"/>
             <antcall target="stratego.java.jvm.helper"/>
-            <javac classpath="aux/strategoxt.jar${externaljarimport}" srcdir="${src-gen}/trans" destdir="${build}/trans" source="1.5" debug="on"/>
-            <jar basedir="${build}/trans" destfile="include/trans.jar"/>
+            <javac classpath="aux/strategoxt.jar${externaljarimport}" srcdir="${src-gen}/trans" destdir="${build}" source="1.5" debug="on"/>
+            <jar basedir="${build}" includes="trans/**" destfile="include/trans.jar"/>
         </target>
             
-        <target name="stratego.java.jvm.helper" depends="aux-files" unless="strc-java.available">
+        <target name="stratego.java.jvm.helper" depends="aux-files,rtg2sig" unless="strc-java.available">
             <java classname="org.strategoxt.strj.Main" classpath="aux/strategoxt.jar:aux/sdf2imp.jar" failonerror="true">
                 <arg value="-i"/>
                 <arg value="${trans}/${strmodule}.str"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-project-file.str	2009-09-18 11:41:20 UTC (rev 19998)
@@ -6,7 +6,8 @@
 strategies
 
   create-project-file =
-    <file-exists> ".project"
+    <file-exists> ".project";
+    where(InputFile) // if no input file: create a new .project, overwriting Eclipse's default
   <+
     package     := <BasePackage <+ default-package-name>;
     builder-xml := <conc-strings> ("&lt;project&gt;/.externalToolBuilders/", <builder-xml-name>);

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str	2009-09-18 11:41:20 UTC (rev 19998)
@@ -0,0 +1,83 @@
+module sdf2imp/project/create-trans
+
+imports
+  sdf2imp/util/-
+
+strategies
+  
+  trans-module-name =
+     get-sdf-main-module;
+     lower-case;
+     cify;
+     string-replace(|"_", "-")
+  
+  create-trans =
+    <file-exists> <conc-strings> ("trans/", <trans-module-name>, ".str")
+  <+
+    name     := <trans-module-name>;
+    sdf-name := <get-sdf-main-module>;
+    
+    <output-text-file(|["trans"], <conc-strings> (name, ".str"))>
+    <conc-strings>
+(
+"module ", name, "
+
+imports
+  libstratego-lib
+  ", sdf-name, "
+
+strategies
+
+  main-entities =
+    fatal-err(|\"No main strategy\")
+  
+  editor-analyze:
+    (ast, path, fullpath) -> (errors, warnings, notes)
+    with
+      // Analysis: scope and record dynamic rules
+      try(dr-scope-all-end);
+      dr-scope-all-start;
+      alltd(record-entity)
+    with
+      errors   := <collect-all(include-origin(constraint-error))> ast;
+      warnings := <collect-all(include-origin(constraint-warning))> ast;
+      notes    := <collect-all(include-origin(constraint-note))> ast
+   
+  include-origin(s):
+    t -> (t, message)
+    where
+      message := <s; try(all(is-string <+ write-to-string)); try(concat-strings)> t
+  
+  editor-resolve:
+    (source, filename, reference, path) -> target
+    where
+      target := <GetEntity> source
+
+  editor-hover:
+    (source, filename, reference, path) -> <conc-strings> (\"Hover help: \", <write-to-string> source)
+
+rules
+
+  record-entity:
+    Entity(x, body) -> Entity(x, body)
+    with
+      rules(
+        GetEntity: x -> x
+      )
+    
+  constraint-error:
+    Property(x, Type(type)) -> [\"Type \", type, \" is not defined\"]
+    where
+      not(!type => \"String\");
+      not(!type => \"Int\");
+      not(<GetEntity> type)
+  
+  constraint-warning:
+    Entity(x, _) -> \"Entity names must start with a capital\"
+    where
+      not(<explode-string; Hd; is-upper> x)
+  
+  constraint-note:
+    Module(\"example\", _) -> \"This is just an example program in the \\\"entities\\\" language\"
+"
+)
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-analysis-descriptor.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-analysis-descriptor.str	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-analysis-descriptor.str	2009-09-18 11:41:20 UTC (rev 19998)
@@ -4,13 +4,15 @@
   libstratego-lib
   
   sdf2imp/util/-
+  sdf2imp/project/create-trans
 
 strategies
 
   create-analysis-descriptor =
     output-initial-descriptor-file(
       <descriptor-name> "-Analysis"
-    , !|[
+    , provider := <conc-strings> ("include/", <trans-module-name>, ".ctree");
+      !|[
         module <descriptor-name> "-Analysis"
         
         imports <descriptor-name> "-Analysis.generated"
@@ -20,7 +22,8 @@
           ~// This file can be used for custom analysis rules.
           ~// See the imported file for a brief introduction and examples.
           ~
-          provider: include/trans.jar
+          provider: ~provider
+          observer: editor-analyze
           ~
           ~// observer: analyze
       ]|

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-references-descriptor.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-references-descriptor.str	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-references-descriptor.str	2009-09-18 11:41:20 UTC (rev 19998)
@@ -19,6 +19,8 @@
           ~
           ~// This file can be used for custom reference resolving rules.
           ~// See the imported file for a brief introduction and examples.
+          ~
+          reference _ : editor-resolve editor-hover
       ]|
     );
     

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	2009-09-18 11:41:20 UTC (rev 19998)
@@ -1,10 +1,10 @@
 [
    ReferenceRule        -- R [ H [ KW["reference"] _1 ] H [ KW[":"] _2 ] _3 ],
    OccurrenceRule       -- R [ H [ KW["occurrence"] _1 ] H [ KW[":"] _2 ] ],
-   SemanticProvider     -- R [ KW["provider"] H [ KW[":"] _1 ] ],
+   SemanticProvider     -- H hs=0 [ KW["provider"] H [ KW[":"] _1 ] ],
    Strategy             -- _1,
    Attribute            -- H hs=0 [ KW["id"] KW["."] _1 ],
-   SemanticObserver     -- R [ KW["observer"] H [ KW[":"] _1 ] ],
+   SemanticObserver     -- H hs=0 [ KW["observer"] H [ KW[":"] _1 ] ],
    Analysis             -- V is=2 [H hs=0 [ KW["analysis"] _1 ] A(l,l,l) [_2] ],
    References           -- V is=2 [H hs=0 [ KW["references"] _1 ] A(l,l,l) [_2] ],
    Occurrences          -- V is=2 [H hs=0 [ KW["occurrences"] _1 ] A(l,l,l) [_2] ],

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java	2009-09-18 11:41:20 UTC (rev 19998)
@@ -79,6 +79,7 @@
 		try {
 			Environment.assertLock();
 			messageHandler.clearMarkers(mainFile);
+			monitor.beginTask("Generating service descriptors for " + mainFile.getName(), IProgressMonitor.UNKNOWN);
 			IStrategoTerm result = invokeBuilder(mainFile);
 			if (result == null) {
 				String log = agent.getLog().trim();

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorUpdater.java	2009-09-18 11:41:20 UTC (rev 19998)
@@ -73,7 +73,9 @@
 	}
 
 	public void resourceChanged(final IResourceChangeEvent event) {
-		if (event.getType() == IResourceChangeEvent.POST_CHANGE) {
+		if (event.getType() == IResourceChangeEvent.POST_CHANGE && isSignificantChange(event.getDelta())) {
+			// TODO: aggregate multiple events into a single job?
+			//       this seems to spawn way to many threads
 			Job job = new WorkspaceJob("Updating editor descriptor runtime") {
 				@Override
 				public IStatus runInWorkspace(IProgressMonitor monitor) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-18 11:41:20 UTC (rev 19998)
@@ -110,7 +110,8 @@
 		IProject project = workspace.getRoot().getProject(projectName);
 		project.create(null);
 		project.open(null);
-		project.findMember(".project").delete(true, new NullProgressMonitor()); // ensure new one is created
+		// UNDONE: deleting the .project file doesn't always work, likely due to threading
+		// project.findMember(".project").delete(true, new NullProgressMonitor());
 		monitor.worked(1);
 
 		try {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	2009-09-18 11:41:20 UTC (rev 19998)
@@ -13,6 +13,8 @@
 <booleanAttribute key="default" value="true"/>
 <booleanAttribute key="includeOptional" value="true"/>
 <stringAttribute key="location" value="${workspace_loc}/../runtime-spoofax-imp"/>
+<stringAttribute key="org.eclipse.debug.core.source_locator_id" value="org.eclipse.pde.ui.launcher.PDESourceLookupDirector"/>
+<stringAttribute key="org.eclipse.debug.core.source_locator_memento" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;sourceLookupDirector&gt;&#10;&lt;sourceContainers duplicates=&quot;false&quot;&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;folder nest=&amp;quot;false&amp;quot; path=&amp;quot;/webdsl/src/bin&amp;quot;/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.folder&quot;/&gt;&#10;&lt;container memento=&quot;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;#10;&amp;lt;default/&amp;gt;&amp;#10;&quot; typeId=&quot;org.eclipse.debug.core.containerType.default&quot;/&gt;&#10;&lt;/sourceContainers&gt;&#10;&lt;/sourceLookupDirector&gt;&#10;"/>
 <listAttribute key="org.eclipse.debug.ui.favoriteGroups">
 <listEntry value="org.eclipse.debug.ui.launchGroup.debug"/>
 <listEntry value="org.eclipse.debug.ui.launchGroup.run"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-09-18 11:41:20 UTC (rev 19998)
@@ -126,7 +126,7 @@
 			}
 		};
 		
-		result.getCompiledContext().registerComponent("libstratego_sglr"); // ensure op. registry available
+		result.getCompiledContext().registerComponent("stratego_sglr"); // ensure op. registry available
 		SGLRCompatLibrary sglrLibrary = (SGLRCompatLibrary) result.getContext().getOperatorRegistry(SGLRCompatLibrary.REGISTRY_NAME);
 		result.addOperatorRegistry(new IMPJSGLRLibrary(sglrLibrary));
 		result.addOperatorRegistry(new IMPLibrary());

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-09-18 11:41:20 UTC (rev 19998)
@@ -42,6 +42,7 @@
 import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
 import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNode;
+import org.strategoxt.lang.StrategoException;
 
 /**
  * Basic Stratego feedback (i.e., errors and warnings) provider.
@@ -80,6 +81,7 @@
 	private void init(IProgressMonitor monitor) {
 		monitor.subTask("Instantiating analysis runtime");
 		
+		Debug.startTimer();
 		List<String> jars = new ArrayList<String>();
 		
 		for (File file : descriptor.getAttachedFiles()) {
@@ -94,6 +96,7 @@
 		}
 		
 		loadJars(jars);
+		Debug.stopTimer("Loaded feedback components");
 		
 		monitor.subTask(null);
 	}
@@ -232,12 +235,16 @@
 			
 		    IStrategoList errors = termAt(feedback, 0);
 		    IStrategoList warnings = termAt(feedback, 1);
+		    IStrategoList notes = termAt(feedback, 2);
 		    feedbackToMarkers(sourceInfo, errors, IMarker.SEVERITY_ERROR);
 		    feedbackToMarkers(sourceInfo, warnings, IMarker.SEVERITY_WARNING);
+		    feedbackToMarkers(sourceInfo, notes, IMarker.SEVERITY_INFO);
 		} else if (feedback == null) {
 			IResource resource = ((SGLRParseController) sourceInfo).getResource();
+			if (log.length() == 0) log = "(see error log)"; // TODO: report or throw last exception if strategy not found etc.
 			messages.addMarkerFirstLine(resource, "Analysis failed: " + log, IMarker.SEVERITY_ERROR);
 		} else {
+			// TODO: throw an exception causing a pop-up in this case 
 			IResource resource = ((SGLRParseController) sourceInfo).getResource();
 			messages.addMarkerFirstLine(resource, "Internal error - illegal output from " + feedbackFunction + ": " + feedback, IMarker.SEVERITY_ERROR);
 		    Environment.logException("Illegal output from " + feedbackFunction + ": " + feedback);
@@ -246,6 +253,8 @@
 	
 	private final void feedbackToMarkers(ISourceInfo sourceInfo, IStrategoList feedbacks, int severity) {
 	    for (IStrategoTerm feedback : feedbacks.getAllSubterms()) {
+	    	if (feedback.getSubtermCount() != 2)
+	    		throw new StrategoException("Illegal feedback result (must be a term/message tuple): " + feedback);
 	        IStrategoTerm term = termAt(feedback, 0);
 			IStrategoString message = termAt(feedback, 1);
 			IResource resource = sourceInfo.getResource();
@@ -302,6 +311,7 @@
 				// Successful exit code or not, we needed to return a result term
 				return null;
 			} catch (InterpreterException e) {
+				// TODO: for asyncUpdate(), programmer errors like these should just be thrown, triggering a pop-up
 				// (source marker should be added by invoking method) 
 				if (runtime.getContext().getVarScope().lookupSVar(Interpreter.cify(function)) == null) {
 					Environment.logException("Strategy does not exist: " + function, e);

Modified: spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego-Sugar build.xml.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego-Sugar build.xml.launch	2009-09-18 11:18:26 UTC (rev 19997)
+++ spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego-Sugar build.xml.launch	2009-09-18 11:41:20 UTC (rev 19998)
@@ -2,7 +2,7 @@
 <launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
 <stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
 <booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
-<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/aux&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/aux&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
 <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
 <listEntry value="/org.strategoxt.imp.stratego_editor/build.xml"/>
 </listAttribute>
@@ -19,7 +19,10 @@
 <booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.stratego_editor"/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
+<mapAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_PROPERTIES">
+<mapEntry key="eclipse.running" value="true"/>
+<mapEntry key="externaldef" value="syntax/Stratego-Sugar.def"/>
+</mapAttribute>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.stratego_editor/build.xml}"/>
 <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>



From L.C.L.Kats at tudelft.nl  Fri Sep 18 13:59:08 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 18 Sep 2009 11:59:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 19999 - LennartKats -
	in spoofax-imp/trunk: . org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.editors.stratego/.externalToolBuilders
	org.strategoxt.imp.editors.stratego/META-INF
	org.strategoxt.imp.editors.stratego/editor
	org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp
	org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors
	org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego
	org.strategoxt.imp.feature
Message-ID: <200909181159.n8IBx8Ah015228@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-18 11:59:08 +0000 (Fri, 18 Sep 2009)
New Revision: 19999

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=19999&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/stratego_editor/
   spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/
Modified:
   spoofax-imp/trunk/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/.externalToolBuilders/Stratego-Sugar build.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/.project
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar.main.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/Activator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml

Log:
Renamed org.strategoxt.imp.stratego_editor to org.strategoxt.editors.stratego

Changes:

Modified: spoofax-imp/trunk/Makefile
===================================================================
--- spoofax-imp/trunk/Makefile	2009-09-18 11:41:20 UTC (rev 19998)
+++ spoofax-imp/trunk/Makefile	2009-09-18 11:59:08 UTC (rev 19999)
@@ -2,7 +2,7 @@
 	$(MAKE) -C org.strategoxt.imp.generator all
 	(cd org.strategoxt.imp.editors.editorservice && ant -Dexternaldef=../org.strategoxt.imp.generator/src/syntax/EditorService.def)
 	(cd org.strategoxt.imp.editors.sdf && ant -Dexternaldef=include/SDF.def)
-	(cd org.strategoxt.imp.stratego_editor && ant -D externaldef=include/Stratego-Sugar.def)
+	(cd org.strategoxt.imp.editors.stratego && ant -D externaldef=include/Stratego-Sugar.def)
 
 check : all
 	$(MAKE) -C org.strategoxt.imp.generator check


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego
___________________________________________________________________
Added: svn:mergeinfo
   + 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/.externalToolBuilders/Stratego-Sugar build.xml.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.externalToolBuilders/Stratego-Sugar build.xml.launch	2009-09-18 11:41:20 UTC (rev 19998)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/.externalToolBuilders/Stratego-Sugar build.xml.launch	2009-09-18 11:59:08 UTC (rev 19999)
@@ -2,9 +2,9 @@
 <launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
 <stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
 <booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
-<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.stratego_editor/aux&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.stratego/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.stratego/include&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.stratego/aux&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
 <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
-<listEntry value="/org.strategoxt.imp.stratego_editor/build.xml"/>
+<listEntry value="/org.strategoxt.imp.editors.stratego/build.xml"/>
 </listAttribute>
 <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
 <listEntry value="1"/>
@@ -17,15 +17,15 @@
 </listAttribute>
 <stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
 <booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
-<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.stratego_editor"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.editors.stratego"/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
 <mapAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_PROPERTIES">
 <mapEntry key="eclipse.running" value="true"/>
 <mapEntry key="externaldef" value="syntax/Stratego-Sugar.def"/>
 </mapAttribute>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.stratego_editor/build.xml}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.stratego/build.xml}"/>
 <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.stratego_editor}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.editors.stratego}"/>
 <stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
 </launchConfiguration>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/.project
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/.project	2009-09-18 11:41:20 UTC (rev 19998)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/.project	2009-09-18 11:59:08 UTC (rev 19999)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <projectDescription>
-      <name>org.strategoxt.imp.stratego_editor</name>
+      <name>org.strategoxt.imp.editors.stratego</name>
       <comment></comment>
       <buildSpec>
 		<buildCommand>
@@ -34,4 +34,4 @@
         <nature>org.eclipse.pde.PluginNature</nature>
         <nature>org.eclipse.jdt.core.javanature</nature>
       </natures>
-    </projectDescription>
\ No newline at end of file
+    </projectDescription>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/META-INF/MANIFEST.MF	2009-09-18 11:41:20 UTC (rev 19998)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/META-INF/MANIFEST.MF	2009-09-18 11:59:08 UTC (rev 19999)
@@ -1,9 +1,9 @@
 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
 Bundle-Name: Stratego Plug-in
-Bundle-SymbolicName: org.strategoxt.imp.stratego_editor; singleton:=true
+Bundle-SymbolicName: org.strategoxt.imp.editors.stratego; singleton:=true
 Bundle-Version: 0.1.0.2700
-Bundle-Activator: org.strategoxt.imp.stratego_editor.Activator
+Bundle-Activator: org.strategoxt.imp.editors.stratego.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,
   org.eclipse.core.resources,
@@ -17,4 +17,4 @@
   org.spoofax.aterm,
   org.spoofax.jsglr
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
-Export-Package: org.strategoxt.imp.stratego_editor
+Export-Package: org.strategoxt.imp.editors.stratego

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.properties
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.properties	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.properties	2009-09-18 11:59:08 UTC (rev 19999)
@@ -0,0 +1,8 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               .,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               .

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar.main.esv
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/Stratego-Sugar.main.esv	2009-09-18 11:41:20 UTC (rev 19998)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar.main.esv	2009-09-18 11:59:08 UTC (rev 19999)
@@ -5,7 +5,7 @@
 language General properties
                   
   name          : Stratego-Sugar
-  id            : org.strategoxt.imp.stratego_editor
+  id            : org.strategoxt.imp.editors.stratego
   extends       : Root
                   
   description   : "Spoofax/IMP-generated editor for the Stratego-Sugar language"
@@ -13,4 +13,4 @@
                   
   extensions    : str
   table         : include/Stratego-Sugar.tbl
-  start symbols : Module
\ No newline at end of file
+  start symbols : Module

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/Activator.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/Activator.java	2009-09-18 11:41:20 UTC (rev 19998)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/Activator.java	2009-09-18 11:59:08 UTC (rev 19999)
@@ -1,4 +1,4 @@
-package org.strategoxt.imp.stratego_editor;
+package org.strategoxt.imp.editors.stratego;
 
 import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.imp.preferences.PreferencesService;

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/editor/java/org/strategoxt/imp/stratego_editor/StrategoParseController.java	2009-09-18 11:41:20 UTC (rev 19998)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoParseController.java	2009-09-18 11:59:08 UTC (rev 19999)
@@ -1,4 +1,4 @@
-package org.strategoxt.imp.stratego_editor;
+package org.strategoxt.imp.editors.stratego;
 
 import java.io.InputStream;
 import java.io.IOException;

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/plugin.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.stratego_editor/plugin.xml	2009-09-18 11:41:20 UTC (rev 19998)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/plugin.xml	2009-09-18 11:59:08 UTC (rev 19999)
@@ -5,8 +5,8 @@
        <extension point="org.eclipse.imp.runtime.languageDescription">
           <language extensions="str" description="Stratego" language="Stratego" derivedFrom="DynamicRoot"></language>
        </extension>
-       <extension id="org.strategoxt.imp.stratego_editor.parser" name="Stratego Parser" point="org.eclipse.imp.runtime.parser">
-          <parser class="org.strategoxt.imp.stratego_editor.StrategoParseController" language="Stratego">
+       <extension id="org.strategoxt.imp.editors.stratego.parser" name="Stratego Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="org.strategoxt.imp.editors.stratego.StrategoParseController" language="Stratego">
           </parser>
        </extension>    
-    </plugin>
\ No newline at end of file
+    </plugin>

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-09-18 11:41:20 UTC (rev 19998)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-09-18 11:59:08 UTC (rev 19999)
@@ -201,7 +201,7 @@
          unpack="false"/>
 
    <plugin
-         id="org.strategoxt.imp.stratego_editor"
+         id="org.strategoxt.imp.editors.stratego"
          download-size="0"
          install-size="0"
          version="0.1.0.2700"



From L.C.L.Kats at tudelft.nl  Fri Sep 18 13:59:12 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 18 Sep 2009 11:59:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20000 - LennartKats -
	strc-java/trunk
Message-ID: <200909181159.n8IBxCqp015231@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-18 11:59:11 +0000 (Fri, 18 Sep 2009)
New Revision: 20000

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20000&view=rev

Modified:
   strc-java/trunk/README

Log:
New README. (Yay, revision 20.000! :D)

Changes:

Modified: strc-java/trunk/README
===================================================================
--- strc-java/trunk/README	2009-09-18 11:59:08 UTC (rev 19999)
+++ strc-java/trunk/README	2009-09-18 11:59:11 UTC (rev 20000)
@@ -0,0 +1,121 @@
+STRJ: THE STRATEGO-TO-JAVA COMPILER
+===================================
+
+The compiler comes in two flavors: one called is strj, and is compiled
+with the standard C-based strc. The second is a bootstrapped,
+cross-platform compiler that lives in strategoxt.jar. Note that
+Stratego executables compiled with strj do not support XTC (since it
+depends on native executables) and the strategoxt.jar compiler is no
+exception. Another difference between the two is that strj still uses
+the C-based SGLR parser, and strategoxt.jar uses JSGLR.
+
+Compiling a simple application from the command line with either
+compiler is similar to doing so with the C version of Stratego:
+
+  strj -i foo.str -la stratego-lib
+
+or
+
+  java -jar strategoxt.jar -i foo.str -la stratego-lib
+
+It should be noted that at this time the compiler only outputs '.java'
+source files and not '.class' files. Subsequent compilation should be
+done using a standard Java compiler (ideally in an automated fashion
+using Eclipse or an Ant build script). The (non-portable) strj-jar
+shell script can also help with command-line or scripted builds.
+
+KNOWN ISSUES
+============
+
+The Java version of SGLR, JSGLR, is not yet fully mature. In
+particular, the post-parse filter implementation may not yet be
+complete (especially the heuristic filters that are disabled by
+default).
+
+The standard Sun compiler can be quite slow when compiling large
+Stratego projects. We recommend using ecj (Eclipse Compiler for Java)
+instead, which is much faster and less memory-intensive.  ecj is
+distributed as part of Eclipse (java -cp
+plugins/org.eclipse.jdt.core_*.jar
+org.eclipse.jdt.internal.compiler.batch.Main) and directly available
+through the package manager of various Linux distributions. When using
+the Sun compiler, you may need to add option -J-mx256m to increase the
+available heap space and require a fair amount of patience ;)
+
+A final open issue is the stack usage by typical Stratego programs,
+putting JVM implementations with a small default stack size at risk of
+throwing a StackOverflowException (notably the Sun JVM on Linux). For
+these systems, running the JVM with option -ss4m avoids the stack
+overflow problem. (When this parameter is not set and a stack overflow
+occurs, compiled applications will hint at this setting.)
+
+USING EXTERNAL APPLICATIONS AND LIBRARIES
+=========================================
+
+A trend in Stratego programs has been to use the standard libraries in
+favor of the (slower) XTC interface. For example, the parse-file
+strategy from libstratego-sglr can be used to parse files. Since XTC
+depends on native executables and a centralized repository, it is not
+portable and not supported on the Java platform. As an alternative,
+library calls should be used instead, which is generally the preferred
+method for invoking external components.
+
+Libraries in the Java environment have a package name. For example,
+the Stratego standard library resides in the
+org.strategoxt.libstratego_lib package. To maintain compatibility,
+these package names are not used within the Stratego language, but
+only at compile time and when the components are linked. For example,
+to link a program to the standard library the option '-la
+org.strategoxt.stratego_lib' can be specified. The standard
+libraries also have aliases that correspond to the XTC names commonly
+used with strc; '-la stratego-lib' is also accepted. To define a
+package name for your own library, use the '-p' and '--library'
+options. For example:
+
+  java -jar strategoxt.jar -i foo.str --library --clean -p org.foo \
+       -o bin/org/foo/Main.java
+
+Note that each Stratego component may specify a different main class
+(Main in this case), but that they must still reside in different
+packages as to avoid overlap between strategy classes.
+
+JAVA INTEGRATION
+================
+
+A typical use case of compiling Stratego applications to Java is to
+integrate them into an existing Java application or environment.
+Interaction with the other Java components is possible in a number of
+ways:
+
+- Java components can directly call Stratego strategies, by calling
+  the Main.init() method in the appropriate package and invoking a
+  Strategy using some_strategy_0_0.instance.invoke(). If the exit
+  strategy is called at any point, a StrategoExit exception will be
+  thrown; a call to fatal-err will throw a StrategoErrorExit
+  exception.
+  
+- Normal Java components can be used to implement or override Stratego
+  strategies, allowing for tighter coupling between Stratego and a
+  Java application. See for example
+  https://svn.strategoxt.org/repos/StrategoXT/ strc-java/trunk/
+  java/runtime/org/strategoxt/lang/compat/libstratego_rtg_compat
+  where two strategies (originally implemented natively in C) are
+  implemented in Java. Every strategy has an 'instance' field that
+  allows it to be dynamically redefined.
+
+- Instead of just plain ATerms, Stratego can operate on any Java
+  object tree or graph that implements the IStrategoTerm and
+  associated interfaces. This way, it can operate on arbitrary object
+  structures, or deeply integrate into a Java-based compiler front-end
+  or editor.  See also "Fusing a transformation language with an open
+  compiler" by Kalleberg and Visser, and "Domain-Specific Languages
+  for Composable Editor Plugins" by Kats, Kalleberg, and Visser.
+
+LICENSING
+=========
+
+Most STRJ code is licensed under the GNU Lesser General Public License.
+Some runtime components are licensed under the Eclipse Public License;
+external components may be covered by different licences.
+
+Authors and contributors are listed in the AUTHORS file.



From L.C.L.Kats at tudelft.nl  Fri Sep 18 14:24:59 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 18 Sep 2009 12:24:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20001 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <200909181224.n8ICOx9a015915@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-18 12:24:58 +0000 (Fri, 18 Sep 2009)
New Revision: 20001

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20001&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str	2009-09-18 11:59:11 UTC (rev 20000)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str	2009-09-18 12:24:58 UTC (rev 20001)
@@ -79,5 +79,15 @@
   
   constraint-note:
     Module(\"example\", _) -> \"This is just an example program in the \\\"entities\\\" language\"
+
+signature constructors
+
+  // These definitions are not strictly necessary,
+  // but they ensure that the build doesn't break if the syntax
+  // is changed and these constructors no longer exist
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
 "
 )
\ No newline at end of file



From L.C.L.Kats at tudelft.nl  Sun Sep 20 12:53:08 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 20 Sep 2009 10:53:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20002 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.aterm
	spoofax/trunk/spoofax/org.spoofax.aterm/META-INF
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms
	strc-java/trunk strc-java/trunk/META-INF strc-java/trunk/java
	strc-java/trunk/java/runtime/org/strategoxt
	strc-java/trunk/java/runtime/org/strategoxt/lang
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat
	strc-java/trunk/java/runtime/org/strategoxt/lang/terms
	strc-java/trunk/test strc-java/trunk/test/aster
	strc-java/trunk/test/basic strc-java/trunk/trans
Message-ID: <200909201053.n8KAr85S030395@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-20 10:53:08 +0000 (Sun, 20 Sep 2009)
New Revision: 20002

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20002&view=rev

Added:
   strc-java/trunk/test/aster/
   strc-java/trunk/test/aster/test_attributes.str
   strc-java/trunk/test/basic/build_3.str
Modified:
   spoofax/trunk/spoofax/org.spoofax.aterm/META-INF/MANIFEST.MF
   spoofax/trunk/spoofax/org.spoofax.aterm/build.properties
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/DebugUtil.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterExit.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/StackTracer.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Tools.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_mkterm.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/TermConverter.java
   strc-java/trunk/AUTHORS
   strc-java/trunk/META-INF/MANIFEST.MF
   strc-java/trunk/build.properties
   strc-java/trunk/configure.ac
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_eq_ignore_annos_0_1.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java
   strc-java/trunk/java/spoofax-libs.jar
   strc-java/trunk/test/Makefile.am
   strc-java/trunk/trans/s2j-options.str
   strc-java/trunk/trans/s2j.str

Log:
- Added the test-attributes test suite from Aster to the STRJ test set
- Fixed generic term construction issues that affected Aster
- Fixed a SRTS_EXT_eq_ignore_annos_0_1 that crippled the Aster permissive grammar generator
- Fixed org.spoofax.aterm manifest pointing to the obsolete class files


Changes (first 1000 lines of the diffs):

Modified: spoofax/trunk/spoofax/org.spoofax.aterm/META-INF/MANIFEST.MF
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.aterm/META-INF/MANIFEST.MF	2009-09-18 12:24:58 UTC (rev 20001)
+++ spoofax/trunk/spoofax/org.spoofax.aterm/META-INF/MANIFEST.MF	2009-09-20 10:53:08 UTC (rev 20002)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Annotated Term Library
 Bundle-SymbolicName: org.spoofax.aterm
-Bundle-Version: 0.2.2.qualifier
+Bundle-Version: 0.2.3.qualifier
 Bundle-Vendor: Spoofax.org
 Bundle-ActivationPolicy: lazy
 Export-Package: aterm,
@@ -14,7 +14,5 @@
  jjtraveler.reflective,
  jjtraveler.util,
  shared
-Bundle-ClassPath: lib/jjtraveler-0.4.3.jar,
- lib/shared-objects-1.4.jar,
- src/
+Bundle-ClassPath: ., lib/jjtraveler-0.4.3.jar, lib/shared-objects-1.4.jar
 Bundle-RequiredExecutionEnvironment: J2SE-1.5

Modified: spoofax/trunk/spoofax/org.spoofax.aterm/build.properties
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.aterm/build.properties	2009-09-18 12:24:58 UTC (rev 20001)
+++ spoofax/trunk/spoofax/org.spoofax.aterm/build.properties	2009-09-20 10:53:08 UTC (rev 20002)
@@ -1,8 +1,7 @@
 bin.includes = META-INF/,\
                lib/jjtraveler-0.4.3.jar,\
                lib/shared-objects-1.4.jar,\
-               .,\
-               src/
+               .
 jars.compile.order = aterm.jar
 output.aterm.jar = bin/
 source.. = src/

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/DebugUtil.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/DebugUtil.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/DebugUtil.java	2009-09-20 10:53:08 UTC (rev 20002)
@@ -31,11 +31,11 @@
         if (debugging) {
             // Indent just for stragies that use a scope.
             boolean doIndent = strategy instanceof CallT || strategy instanceof Let || strategy instanceof Scope;
-            StringBuilder sb = buildIndent(doIndent ? INDENT_STEP : 0);
+            String s = doIndent ? buildIndent(INDENT_STEP).toString() : "";
             if(!result) {
-                Strategy.debug(sb, "=> failed: ", current, "\n");
+                Strategy.debug(s, "=> failed: ", current, "\n");
             } else {
-                Strategy.debug(sb, "=> succeeded: ", current, "\n");
+                Strategy.debug(s, "=> succeeded: ", current, "\n");
             }
         }
         return result;

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterExit.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterExit.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/InterpreterExit.java	2009-09-20 10:53:08 UTC (rev 20002)
@@ -16,12 +16,11 @@
     private final int value;
     
     public InterpreterExit(int value) {
-        super("Legal exit");
-        this.value = value;
+        this(value, null);
     }
     
     public InterpreterExit(int value, Throwable cause) {
-        super("Legal exit", cause);
+        super("Legal exit: return code " + value, cause);
         this.value = value;
     }
     

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/StackTracer.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/StackTracer.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/StackTracer.java	2009-09-20 10:53:08 UTC (rev 20002)
@@ -18,12 +18,13 @@
     private int failureDepth;
     
     public void push(String name) {
-        if (frames.length == currentDepth) {
+        int depth = currentDepth++;
+        if (frames.length == depth) {
             String[] oldframes = frames;
             frames = new String[frames.length * 2];
             System.arraycopy(oldframes, 0, frames, 0, oldframes.length);
         }
-        frames[currentDepth++] = name;
+        frames[depth] = name;
         failureDepth = currentDepth;
     }
     

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Tools.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Tools.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/core/Tools.java	2009-09-20 10:53:08 UTC (rev 20002)
@@ -55,7 +55,7 @@
             for (int i = children.length - 1; i >= 0; i--) {
                 kids = factory.makeListCons(implode(factory, (IStrategoAppl) children[i]), kids);
             }
-            return factory.makeAppl(ctr, kids);
+            return factory.makeAppl(ctr, kids.getAllSubterms());
         } else if (ctor.equals(sign.getInt())) {
             IStrategoString x = (IStrategoString) t.getSubterm(0);
             return factory.makeInt(new Integer(x.stringValue()).intValue());
Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java	2009-09-20 10:53:08 UTC (rev 20002)
@@ -7,6 +7,8 @@
  */
 package org.spoofax.interpreter.library.ssl;
 
+import static org.spoofax.interpreter.core.Tools.*;
+
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
@@ -40,13 +42,16 @@
         boolean closeIn = true;
         boolean closeOut = true;
         
-        File file1 = agent.openFile(Tools.javaString(tvars[0]));
-        File file2 = agent.openFile(Tools.javaString(tvars[1]));
-        try {
-            if (file1.exists() && file1.getCanonicalPath().equals(file2.getCanonicalPath()))
-                return true;
-        } catch (IOException e) {
-            // Ignore: files may not exist yet
+        if (isTermString(tvars[0]) && isTermString(tvars[1])) {
+            // Avoid a file to itself
+            File file1 = agent.openFile(Tools.javaString(tvars[0]));
+            File file2 = agent.openFile(Tools.javaString(tvars[1]));
+            try {
+                if (file1.exists() && file1.getCanonicalPath().equals(file2.getCanonicalPath()))
+                    return true;
+            } catch (IOException e) {
+                // Ignore: files may not exist yet
+            }
         }
 
         try {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_mkterm.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_mkterm.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_mkterm.java	2009-09-20 10:53:08 UTC (rev 20002)
@@ -64,7 +64,7 @@
         String name = nameTerm.stringValue();
         for (int i = 0; i < name.length(); i++) {
             char c = name.charAt(i);
-            if (!(Character.isLetter(c) || c == '_' || c == '-'
+            if (!(Character.isLetterOrDigit(c) || c == '_' || c == '-'
                 || c == '+' || c == '*' || c == '$')) {
                 name = name.substring(0, i);
                 break;
@@ -74,10 +74,10 @@
         IStrategoList args = (IStrategoList) argsTerm;
         
         if (name.length() == 0) { // tuple
-            env.setCurrent(env.getFactory().makeTuple(args));
+            env.setCurrent(env.getFactory().makeTuple(args.getAllSubterms()));
         } else {
             IStrategoConstructor cons = env.getFactory().makeConstructor(name, args.size());
-            env.setCurrent(env.getFactory().makeAppl(cons, args));
+            env.setCurrent(env.getFactory().makeAppl(cons, args.getAllSubterms()));
         }        
         return true;
     }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/TermConverter.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/TermConverter.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/TermConverter.java	2009-09-20 10:53:08 UTC (rev 20002)
@@ -2,6 +2,8 @@
 
 import static org.spoofax.interpreter.terms.IStrategoTerm.*;
 
+import java.util.HashMap;
+
 /**
  * Copies terms created by one {@link ITermFactory} to
  * terms created by another (or the same) factory. 
@@ -12,6 +14,9 @@
     
     private final ITermFactory factory;
     
+    private final HashMap<IStrategoConstructor, IStrategoConstructor> constructors =
+    	new HashMap<IStrategoConstructor, IStrategoConstructor>();
+    
     public TermConverter(ITermFactory factory) {
         this.factory = factory;
     }
@@ -39,7 +44,7 @@
             case TUPLE: return convert((IStrategoTuple) term);
             case BLOB: return term;
             default:
-                throw new IllegalStateException("Unkown term type: " + term.getClass().getSimpleName());
+                throw new IllegalStateException("Unknown term type: " + term.getClass().getSimpleName());
         }
     }
 
@@ -50,7 +55,12 @@
     }
 
     public IStrategoConstructor convert(IStrategoConstructor constructor) {
-        return factory.makeConstructor(constructor.getName(), constructor.getArity());
+    	IStrategoConstructor cached = constructors.get(constructor);
+    	if (cached == null) {
+    	    cached = factory.makeConstructor(constructor.getName(), constructor.getArity());
+    	    constructors.put(constructor, cached);
+    	}
+    	return cached;
     }
 
     public IStrategoInt convert(IStrategoInt term) {
@@ -58,7 +68,6 @@
     }
 
     public IStrategoList convert(IStrategoList term) {
-        // TODO: Optimize - use iterator to copy list items efficiently for both linked- and array-lists
         IStrategoTerm[] subterms = convertAll(term.getAllSubterms());
         return annotate(factory.makeList(subterms), term);
     }

Modified: strc-java/trunk/AUTHORS
===================================================================
--- strc-java/trunk/AUTHORS	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/AUTHORS	2009-09-20 10:53:08 UTC (rev 20002)
@@ -1 +1,9 @@
-Karl Trygve Kalleberg <karltk at ii.uib.no>
+STRJ and the Stratego/J runtime have been developed by:
+
+* Lennart Kats (main strj development; Stratego/J compatibility components)
+* Karl Trygve Kalleberg (Stratego/J runtime; original s2j prototype)
+* Valentin David (Stratego/J runtime)
+
+The development of STRJ would not have been possible without the
+efforts of Eelco Visser and his team in developing the STRC reference
+stratego compiler.

Modified: strc-java/trunk/META-INF/MANIFEST.MF
===================================================================
--- strc-java/trunk/META-INF/MANIFEST.MF	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/META-INF/MANIFEST.MF	2009-09-20 10:53:08 UTC (rev 20002)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Stratego/XT Java runtime
 Bundle-SymbolicName: org.strategoxt.strj;singleton:=true
-Bundle-Version: 0.1.1
+Bundle-Version: 0.2
 Export-Package: .,
  aterm,
  aterm.pure,

Modified: strc-java/trunk/build.properties
===================================================================
--- strc-java/trunk/build.properties	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/build.properties	2009-09-20 10:53:08 UTC (rev 20002)
@@ -1,5 +1,5 @@
 bin.includes = META-INF/,\
                java/runtime/,\
-               strategoxt.jar,\
+               java/strategoxt.jar,\
                .
 source.. = java/runtime/

Modified: strc-java/trunk/configure.ac
===================================================================
--- strc-java/trunk/configure.ac	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/configure.ac	2009-09-20 10:53:08 UTC (rev 20002)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.58])
-AC_INIT([strc-java],[0.1],[stratego-bugs at cs.uu.nl])
+AC_INIT([strc-java],[0.2],[stratego-bugs at cs.uu.nl])
 AM_INIT_AUTOMAKE
 
 # set the prefix immediately to the default prefix

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/Makefile.am	2009-09-20 10:53:08 UTC (rev 20002)
@@ -91,7 +91,7 @@
 .ALLCLASSES : bin/org/strategoxt/strj/Main.class
 
 bin/org/strategoxt/strj/Main.class : $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(COMPILERJAVAS)
-	if ! which ecj >/dev/null; \
+	@if ! which ecj >/dev/null; \
 	  then echo "WARNING: ecj is not installed; using the (much) slower javac compiler instead" >&2; \
 	fi
 	$(JAVAC) $(JAVACFLAGS) $(RUNTIMEJAVAS) $(LIBRARYJAVAS) $(COMPILERJAVAS) && touch .ALLCLASSES

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-20 10:53:08 UTC (rev 20002)
@@ -1,7 +1,6 @@
 package org.strategoxt;
 
 import java.io.IOException;
-import java.lang.reflect.InvocationTargetException;
 import java.net.JarURLConnection;
 import java.net.URL;
 import java.net.URLClassLoader;
@@ -107,7 +106,7 @@
 				Class<?> registerClass;
 				try {
 					registerClass = classLoader.loadClass(className);
-					Object registerObject = registerClass.getDeclaredConstructor().newInstance();
+					Object registerObject = registerClass.newInstance();
 					if (registerObject instanceof InteropRegisterer) {
 						((InteropRegisterer) registerObject).registerLazy(getContext(), getCompiledContext(), classLoader);
 					} else {
@@ -117,10 +116,6 @@
 					throw new IncompatibleJarException(jar, e);
 				} catch (IllegalAccessException e) {
 					throw new IncompatibleJarException(jar, e);
-				} catch (InvocationTargetException e) {
-					throw new IncompatibleJarException(jar, e);
-				} catch (NoSuchMethodException e) {
-					throw new IncompatibleJarException(jar, e);
 				} catch (ClassNotFoundException e) {
 					throw new RuntimeException("Could not load listed class", e);
 				}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_eq_ignore_annos_0_1.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_eq_ignore_annos_0_1.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_eq_ignore_annos_0_1.java	2009-09-20 10:53:08 UTC (rev 20002)
@@ -27,6 +27,7 @@
 	}
 	
 	private static boolean equalsIgnoreAnnos(Context context, IStrategoTerm t1, IStrategoTerm t2) {
+		if (t1 == t2) return true;
 		int termType = t1.getTermType();
 		int type2 = t2.getTermType();
 		if (termType != type2) return false;
@@ -59,9 +60,9 @@
 		return equalsIgnoreAnnosList(context, appl1, appl2);
 	}
 
-	private static boolean equalsIgnoreAnnosList(Context context, IStrategoTerm appl1, IStrategoTerm appl2) {
-		IStrategoTerm[] children1 = appl1.getAllSubterms();
-		IStrategoTerm[] children2 = appl1.getAllSubterms();
+	private static boolean equalsIgnoreAnnosList(Context context, IStrategoTerm term1, IStrategoTerm term2) {
+		IStrategoTerm[] children1 = term1.getAllSubterms();
+		IStrategoTerm[] children2 = term2.getAllSubterms();
 		if (children1.length != children2.length)
 			return false;
 		for (int i = 0; i < children1.length; i++) {

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java	2009-09-20 10:53:08 UTC (rev 20002)
@@ -155,7 +155,8 @@
 			} catch (ClassNotFoundException e) {
 				library = Class.forName(toStrategoName(className));
 				cached = (Strategy) library.getMethod("getMainStrategy", new Class[0]).invoke(null);
-				return cached;
+				if (cached == null)
+					throw new StrategoException("Component has no main strategy: " + className);
 			}
 			
 			invocationCache.put(className, cached);

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java	2009-09-20 10:53:08 UTC (rev 20002)
@@ -158,7 +158,8 @@
     @Override
     public IStrategoString makeString(String s) {
     	if (s.length() > MAX_POOLED_STRING_LENGTH)
-    		return new StrategoString(s, null, IMMUTABLE);
+    		return new StrategoString(s, null, MY_STORAGE_TYPE);
+    	
     	synchronized (this) {
 	    	StrategoString result = asyncStringPool.get(s);
 	    	if (result == null) {

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)

Modified: strc-java/trunk/test/Makefile.am
===================================================================
--- strc-java/trunk/test/Makefile.am	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/test/Makefile.am	2009-09-20 10:53:08 UTC (rev 20002)
@@ -1,6 +1,6 @@
 include $(top_srcdir)/Makefile.xt
 
-TESTFILES   = $(BASICTESTFILES) $(STRC1TESTFILES) $(STRC2TESTFILES)
+TESTFILES   = $(BASICTESTFILES) $(STRC1TESTFILES) $(STRC2TESTFILES) $(ASTERTESTFILES)
 JAVAFILES   = $(subst .str,.java,$(subst -,_,$(TESTFILES)))
 CLASSFILES  = $(subst .str,.java,$(subst -,_,$(TESTFILES)))
 CTREEFILES  = $(subst .java,.ctree,$(JAVAFILES))
@@ -46,7 +46,7 @@
 
 STRC2TESTFILES=$(addprefix strc2/,$(addsuffix .str,$(STRC2TESTS)))
 
-BASICTESTS=build_0 build_1 build_2 match_1 match_2 match_3 match_4 match_5 lchoice_1 lchoice_2 gchoice_1 gchoice_2 \
+BASICTESTS=build_0 build_1 build_2 build_3 match_1 match_2 match_3 match_4 match_5 lchoice_1 lchoice_2 gchoice_1 gchoice_2 \
            scopes_1 scopes_2 internal_1 internal_2 override_1 extend_1 \
            shared_var_1 shared_var_2 shared_var_3 shared_var_4 shared_var_5 \
            dynrules_1 dynrules_2 dynrules_3 dynrules_4 dynrules_5 iset_1 iset_2 fetch_1 \
@@ -54,6 +54,10 @@
 
 BASICTESTFILES=$(addprefix basic/,$(addsuffix .str,$(BASICTESTS)))
 
+ASTERTESTS=test_attributes
+
+ASTERTESTFILES=$(addprefix aster/,$(addsuffix .str,$(ASTERTESTS)))
+
 # disabled tests:
 # io-test04                               # relies on parsing appl term with string constructor "pp-tables"("b")
 # static-links test83                     # rely on C code
@@ -87,10 +91,10 @@
 	$(JAVAC) $(JAVACFLAGS) $<
 
 %.run : %.class
-	cd `dirname $<`; java -client -Xss10m -cp `echo .:$(CLASSPATH) | sed 's!:../!:../../!g'` `basename $< .class`
+	cd `dirname $<`; java -client -Xss2m -cp `echo .:$(CLASSPATH) | sed 's!:../!:../../!g'` `basename $< .class`
 
 %.runner : %.class
-	@ echo "cd `dirname $<`; java -client -Xss10m -cp `echo .:$(CLASSPATH) | sed 's!:../!:../../!g'` `basename $< .class`" > $@
+	@ echo "cd `dirname $<`; java -client -Xss2m -cp `echo .:$(CLASSPATH) | sed 's!:../!:../../!g'` `basename $< .class`" > $@
 	@ chmod 755 $@
 
 ExpStratego.def : Expressions.sdf ExpStratego.sdf

Added: strc-java/trunk/test/aster/test_attributes.str
===================================================================
--- strc-java/trunk/test/aster/test_attributes.str	                        (rev 0)
+++ strc-java/trunk/test/aster/test_attributes.str	2009-09-20 10:53:08 UTC (rev 20002)
@@ -0,0 +1,6939 @@
+//
+// generated from <aster 0.2>/test/test-attributes.astr
+//
+module test_attributes
+
+imports
+  libstratego-lib
+
+
+signature
+  constructors
+    Fork : Term * Term -> Term
+    Leaf : Term -> Term
+
+
+strategies
+  main =
+    option-wrap(
+      verbose-option
+    , test-suite(
+        !"aster attribute tests"
+      , test-default-attributes
+        ; test-standard-library
+        ; test-attribute-behavior
+        ; test-set-operations
+        ; test-reflective-attributes
+      )
+      <+ <exit> 1
+    )
+
+
+strategies
+  test-default-attributes =
+    apply-and-check(
+      !"id.parent (1)"
+    , collect-one(
+        1
+        ; !<id>
+        ; get-parent(|<all-parents>)
+        ; not(NoParent)
+      )
+    , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+      ; !Leaf(1)
+      ; aster-init-node-ensure(
+          id
+        | <!all-parents0 <+ all-parents => all-parents0>
+        , <!global-cache0 <+ global-cache => global-cache0>
+        )
+      ; eval-init(
+        | UnknownParent()
+        , all-parents0
+        , global-cache0
+        , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+        )
+      ; not(EVAL_FAILED)
+    , ?Leaf(1)
+    )
+    ; apply-and-check(
+        !"id.parent (2)"
+      , collect-one(
+          1
+          ; !<id>
+          ; get-parent(|<all-parents>)
+          ; not(NoParent)
+        )
+      , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+        ; ![1]
+        ; aster-init-node-ensure(
+            id
+          | <!all-parents0 <+ all-parents => all-parents0>
+          , <!global-cache0 <+ global-cache => global-cache0>
+          )
+        ; eval-init(
+          | UnknownParent()
+          , all-parents0
+          , global-cache0
+          , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+          )
+        ; not(EVAL_FAILED)
+      , ?[1]
+      )
+    ; apply-and-check(
+        !"id.ancestor (1)"
+      , collect-one(
+          ?1
+          ; (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+          ; !<id>
+          ; aster-init-node-ensure(
+              aster-initialize-node-warning(|all-parents0, "ancestor_1_0")
+            | <!all-parents0 <+ all-parents => all-parents0>
+            , <!global-cache0 <+ global-cache => global-cache0>
+            )
+          ; eval-ancestor(
+              ?Leaf(_)
+            | UnknownParent()
+            , all-parents0
+            , global-cache0
+            , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+            )
+          ; not(EVAL_FAILED)
+        )
+      , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+        ; !Fork(Leaf(1), 2)
+        ; aster-init-node-ensure(
+            id
+          | <!all-parents0 <+ all-parents => all-parents0>
+          , <!global-cache0 <+ global-cache => global-cache0>
+          )
+        ; eval-init(
+          | UnknownParent()
+          , all-parents0
+          , global-cache0
+          , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+          )
+        ; not(EVAL_FAILED)
+      , ?Leaf(1)
+      )
+    ; apply-and-check(
+        !"id.ancestor (2)"
+      , collect-one(
+          1
+          ; (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+          ; !<id>
+          ; aster-init-node-ensure(
+              aster-initialize-node-warning(|all-parents0, "ancestor_1_0")
+            | <!all-parents0 <+ all-parents => all-parents0>
+            , <!global-cache0 <+ global-cache => global-cache0>
+            )
+          ; eval-ancestor(
+              ?Fork(_, _)
+            | UnknownParent()
+            , all-parents0
+            , global-cache0
+            , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+            )
+          ; not(EVAL_FAILED)
+        )
+      , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+        ; !Fork(Leaf(1), 2)
+        ; aster-init-node-ensure(
+            id
+          | <!all-parents0 <+ all-parents => all-parents0>
+          , <!global-cache0 <+ global-cache => global-cache0>
+          )
+        ; eval-init(
+          | UnknownParent()
+          , all-parents0
+          , global-cache0
+          , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+          )
+        ; not(EVAL_FAILED)
+      , ?Fork(_, _)
+      )
+    ; apply-and-check(
+        !"id.ancestor is not proper"
+      , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+        ; !<id>
+        ; aster-init-node-ensure(
+            aster-initialize-node-warning(|all-parents0, "ancestor_1_0")
+          | <!all-parents0 <+ all-parents => all-parents0>
+          , <!global-cache0 <+ global-cache => global-cache0>
+          )
+        ; eval-ancestor(
+            1
+          | UnknownParent()
+          , all-parents0
+          , global-cache0
+          , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+          )
+        ; not(EVAL_FAILED)
+      , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+        ; !1
+        ; aster-init-node-ensure(
+            id
+          | <!all-parents0 <+ all-parents => all-parents0>
+          , <!global-cache0 <+ global-cache => global-cache0>
+          )
+        ; eval-init(
+          | UnknownParent()
+          , all-parents0
+          , global-cache0
+          , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+          )
+        ; not(EVAL_FAILED)
+      , ?1
+      )
+    ; apply-and-check(
+        !"id.prev-sibling"
+      , collect-one(
+          2
+          ; (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+          ; !<id>
+          ; aster-init-node-ensure(
+              aster-initialize-node-warning(|all-parents0, "prev-sibling_1_0")
+            | <!all-parents0 <+ all-parents => all-parents0>
+            , <!global-cache0 <+ global-cache => global-cache0>
+            )
+          ; eval-prev-sibling(
+              id
+            | UnknownParent()
+            , all-parents0
+            , global-cache0
+            , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+            )
+          ; not(EVAL_FAILED)
+        )
+      , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+        ; !Fork(Leaf(1), 2)
+        ; aster-init-node-ensure(
+            id
+          | <!all-parents0 <+ all-parents => all-parents0>
+          , <!global-cache0 <+ global-cache => global-cache0>
+          )
+        ; eval-init(
+          | UnknownParent()
+          , all-parents0
+          , global-cache0
+          , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+          )
+        ; not(EVAL_FAILED)
+      , ?Leaf(_)
+      )
+
+
+strategies
+  test-set-operations =
+    apply-and-check(
+      !"non-reference attribute"
+    , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+      ; !<id>
+      ; aster-init-node-ensure(
+          id
+        | <!all-parents0 <+ all-parents => all-parents0>
+        , <!global-cache0 <+ global-cache => global-cache0>
+        )
+      ; eval-union(
+        | UnknownParent()
+        , all-parents0
+        , global-cache0
+        , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+        )
+      ; not(EVAL_FAILED)
+    , {a, b:
+        a := <(id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+              ; ![1, 2, 3]
+              ; aster-init-node-ensure(
+                  id
+                | <!all-parents0 <+ all-parents => all-parents0>
+                , <!global-cache0 <+ global-cache => global-cache0>
+                )
+              ; eval-init(
+                | UnknownParent()
+                , all-parents0
+                , global-cache0
+                , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+                )
+              ; not(EVAL_FAILED)>
+        ; b := <(id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+                ; ![1, 2, 3]
+                ; aster-init-node-ensure(
+                    id
+                  | <!all-parents0 <+ all-parents => all-parents0>
+                  , <!global-cache0 <+ global-cache => global-cache0>
+                  )
+                ; eval-init(
+                  | UnknownParent()
+                  , all-parents0
+                  , global-cache0
+                  , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+                  )
+                ; not(EVAL_FAILED)>
+        ; !(a, b)
+      }
+    , eq-ignore-annos(
+      | [1, 2, 3]
+      )
+    )
+
+
+rules
+
+  eval-child-def-Fork-30(|parent0, all-parents0, global-cache0, rewrite-mode0) =
+    ?node0
+    ; (?a
+       ; (!parent0 ; not(UnknownParent + NoParent)
+          <+ (?node0 ; !parent0 ; not(UnknownParent)
+              <+ get-parent(|all-parents0))
+             ; not(NoParent))
+       ; id => Fork(a at 1, 2))
+    ; (id <+ !EVAL_FAILED())
+
+  eval-first-kid-100000(|parent0, all-parents0, global-cache0, rewrite-mode0) =
+    ?node0
+    ; where(?_)
+    ; (one(?kid) ; !kid <+ !EVAL_FAILED())
+
+  eval-all-kids-100000(|parent0, all-parents0, global-cache0, rewrite-mode0) =
+    ?node0
+    ; where(?_)
+    ; (?_#(<id>) <+ !EVAL_FAILED())
+
+  eval-all-kids-tuple-100000(|parent0, all-parents0, global-cache0, rewrite-mode0) =
+    ?node0
+    ; where(?_)
+    ; (?_#(<id>) ; ListToTuple
+       <+ !EVAL_FAILED())
+
+  eval-new-fork-100000(|parent0, all-parents0, global-cache0, rewrite-mode0) =
+    ?node0
+    ; where(?_)
+    ; (\ _#(kids) -> "Fork2"#(kids) \
+       <+ !EVAL_FAILED())
+
+  eval-is-100000(|parent0, all-parents0, global-cache0, rewrite-mode0, arg0) =
+    ?node0
+    ; where(?x)
+    ; ((id < id + ?arg0) ; (id < id + ?x))
+    ; if !arg0
+         ; (?x <+ eq-ignore-annos(|x)) then
+        id <+ !EVAL_FAILED()
+      else
+        !arg0 ; !x < !EVAL_FAILED() + fail
+      end
+
+  eval-tuple-first-100000(|parent0, all-parents0, global-cache0, rewrite-mode0, arg1) =
+    ?node0
+    ; where(?x)
+    ; ((id < id + ?arg1)
+       ; (id < id + ?x)
+       ; (id < id + ?y)
+       ; id)
+    ; if !arg1
+         ; ( ?x <+ eq-ignore-annos(|x)
+           , ?y <+ eq-ignore-annos(|y)
+           ) then
+        id <+ !EVAL_FAILED()
+      else
+        !arg1 ; !x ; !y ; id
+        < !EVAL_FAILED()
+        + fail
+      end
+
+  eval-parent-first-kid-Fork-10(|parent0, all-parents0, global-cache0, rewrite-mode0) =
+    ?node0
+    ; (?b
+       ; (!parent0 ; not(UnknownParent + NoParent)
+          <+ (?node0 ; !parent0 ; not(UnknownParent)
+              <+ get-parent(|all-parents0))
+             ; not(NoParent))
+       ; id => Fork(a, b))
+    ; (eval-first-kid(
+       | <?node0 < !parent0 + !UnknownParent()>
+       , all-parents0
+       , global-cache0
+       , rewrite-mode0
+       )
+       ; not(EVAL_FAILED)
+       <+ !EVAL_FAILED())
+
+  eval-silly-00(|parent0, all-parents0, global-cache0, rewrite-mode0) =
+    ?node0
+    ; (?silly
+       ; (!parent0 ; not(UnknownParent + NoParent) <+ id)
+       ; !silly => silly)
+    ; (id <+ !EVAL_FAILED())
+
+  eval-build2-100000(|parent0, all-parents0, global-cache0, rewrite-mode0) =
+    ?node0
+    ; where(?_)
+    ; where(id)
+    ; (!2 <+ !EVAL_FAILED())
+
+  eval-init-100000(|parent0, all-parents0, global-cache0, rewrite-mode0, arg2) =
+    ?node0
+    ; where(?_)
+    ; ((id < id + ?arg2) ; (id < id + ?t))
+    ; if !arg2
+         ; (?t <+ eq-ignore-annos(|t)) then
+        where(id) ; (!t <+ !EVAL_FAILED())
+      else
+        !arg2 ; !t < !EVAL_FAILED() + fail
+      end
+
+  eval-fails-100000(|parent0, all-parents0, global-cache0, rewrite-mode0) =
+    ?node0
+    ; where(?_)
+    ; (fail <+ !EVAL_FAILED())
+
+
+strategies
+  test-attribute-behavior =
+    apply-and-check(
+      !"attribute to get a child node"
+    , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+      ; !<id>
+      ; aster-init-node-ensure(
+          aster-initialize-node-warning(|all-parents0, "first-kid")
+        | <!all-parents0 <+ all-parents => all-parents0>
+        , <!global-cache0 <+ global-cache => global-cache0>
+        )
+      ; eval-first-kid(
+        | UnknownParent()
+        , all-parents0
+        , global-cache0
+        , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+        )
+      ; not(EVAL_FAILED)
+    , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+      ; !Fork(1, 3)
+      ; aster-init-node-ensure(
+          id
+        | <!all-parents0 <+ all-parents => all-parents0>
+        , <!global-cache0 <+ global-cache => global-cache0>
+        )
+      ; eval-init(
+        | UnknownParent()
+        , all-parents0
+        , global-cache0
+        , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+        )
+      ; not(EVAL_FAILED)
+    , ?1
+    )
+    ; apply-and-check(
+        !"reference attribute"
+      , !<id>
+        ; get-parent(|<all-parents>)
+        ; not(NoParent)
+      , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+        ; !<(id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+            ; !Fork(1, 3)
+            ; aster-init-node-ensure(
+                id
+              | <!all-parents0 <+ all-parents => all-parents0>
+              , <!global-cache0 <+ global-cache => global-cache0>
+              )
+            ; eval-init(
+              | UnknownParent()
+              , all-parents0
+              , global-cache0
+              , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+              )
+            ; not(EVAL_FAILED)>
+        ; aster-init-node-ensure(
+            aster-initialize-node-warning(|all-parents0, "first-kid")
+          | <!all-parents0 <+ all-parents => all-parents0>
+          , <!global-cache0 <+ global-cache => global-cache0>
+          )
+        ; eval-first-kid(
+          | UnknownParent()
+          , all-parents0
+          , global-cache0
+          , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+          )
+        ; not(EVAL_FAILED)
+      , ?Fork(1, 3)
+      )
+    ; apply-and-check(
+        !"reference list attribute"
+      , Hd
+        ; !<id>
+        ; get-parent(|<all-parents>)
+        ; not(NoParent)
+      , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+        ; !<(id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+            ; !Fork(1, 3)
+            ; aster-init-node-ensure(
+                id
+              | <!all-parents0 <+ all-parents => all-parents0>
+              , <!global-cache0 <+ global-cache => global-cache0>
+              )
+            ; eval-init(
+              | UnknownParent()
+              , all-parents0
+              , global-cache0
+              , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+              )
+            ; not(EVAL_FAILED)>
+        ; aster-init-node-ensure(
+            aster-initialize-node-warning(|all-parents0, "all-kids")
+          | <!all-parents0 <+ all-parents => all-parents0>
+          , <!global-cache0 <+ global-cache => global-cache0>
+          )
+        ; eval-all-kids(
+          | UnknownParent()
+          , all-parents0
+          , global-cache0
+          , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+          )
+        ; not(EVAL_FAILED)
+      , ?Fork(1, 3)
+      )
+    ; apply-and-check(
+        !"reference tuple attribute"
+      , Thd
+        ; !<id>
+        ; get-parent(|<all-parents>)
+        ; not(NoParent)
+      , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+        ; !<(id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+            ; !Fork(1, 3)
+            ; aster-init-node-ensure(
+                id
+              | <!all-parents0 <+ all-parents => all-parents0>
+              , <!global-cache0 <+ global-cache => global-cache0>
+              )
+            ; eval-init(
+              | UnknownParent()
+              , all-parents0
+              , global-cache0
+              , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+              )
+            ; not(EVAL_FAILED)>
+        ; aster-init-node-ensure(
+            aster-initialize-node-warning(|all-parents0, "all-kids-tuple")
+          | <!all-parents0 <+ all-parents => all-parents0>
+          , <!global-cache0 <+ global-cache => global-cache0>
+          )
+        ; eval-all-kids-tuple(
+          | UnknownParent()
+          , all-parents0
+          , global-cache0
+          , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+          )
+        ; not(EVAL_FAILED)
+      , ?Fork(1, 3)
+      )
+    ; apply-and-check(
+        !"non-reference attribute"
+      , !<(id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+          ; !<(id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
+              ; !<id>
+              ; aster-init-node-ensure(
+                  aster-initialize-node-warning(|all-parents0, "new-fork")
+                | <!all-parents0 <+ all-parents => all-parents0>
+                , <!global-cache0 <+ global-cache => global-cache0>
+                )
+              ; eval-new-fork(
+                | UnknownParent()
+                , all-parents0
+                , global-cache0
+                , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+                )
+              ; not(EVAL_FAILED)>
+          ; aster-init-node-ensure(
+              aster-initialize-node-warning(|all-parents0, "first-child")
+            | <!all-parents0 <+ all-parents => all-parents0>
+            , <!global-cache0 <+ global-cache => global-cache0>
+            )
+          ; eval-first-child(
+            | UnknownParent()
+            , all-parents0
+            , global-cache0
+            , <!rewrite-mode0 <+ get-rewrite-mode(|global-cache0) => rewrite-mode0>
+            )

(6455 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Sun Sep 20 12:54:15 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 20 Sep 2009 10:54:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20003 - LennartKats -
	in aster/trunk: runtime/aster/lang tests trans
Message-ID: <200909201054.n8KAsFf1030401@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-20 10:54:15 +0000 (Sun, 20 Sep 2009)
New Revision: 20003

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20003&view=rev

Modified:
   aster/trunk/runtime/aster/lang/lists.str
   aster/trunk/tests/Makefile.am
   aster/trunk/tests/test-attributes.astr
   aster/trunk/trans/io.str

Log:
Minor optimizations after evaluating it under Java a bit more.

Changes:

Modified: aster/trunk/runtime/aster/lang/lists.str
===================================================================
--- aster/trunk/runtime/aster/lang/lists.str	2009-09-20 10:53:08 UTC (rev 20002)
+++ aster/trunk/runtime/aster/lang/lists.str	2009-09-20 10:54:15 UTC (rev 20003)
@@ -1,5 +1,5 @@
 /**
- * Assertion runtime: lists.
+ * Aster runtime: lists.
  *
  * @author Lennart Kats <lennart add lclnet.nl>
  */
@@ -8,15 +8,15 @@
 strategies
 
   all-consnil(s) =
-    if ?[_ | _] then
-      [s | s]
+    if ?[x | y] then
+      ![<s> x | <s> y]
     else
       all(s)
     end
 
   one-consnil(s) = 
-    if ?[_ | _] then
-       [s | id] <+ [id | s]
+    if ?[x | y] then
+      ![<s> x | y] <+ ![x | <s> y]
     else
       one(s)
     end
@@ -28,10 +28,12 @@
     rec rec(all-consnil(rec); s)
 
   innermost-consnil(s) =
-    bottomup-consnil(try(s; innermost-consnil(s)))
+    rec rec(bottomup-consnil(s; rec <+ id))
 
   leaves-consnil(s) =
-    all-consnil(try(?has-children); leaves-consnil(s));
+    all-consnil(
+      (?has-children <+ id); leaves-consnil(s)
+    );
     if not(!has-children) then
       s
     end

Modified: aster/trunk/tests/Makefile.am
===================================================================
--- aster/trunk/tests/Makefile.am	2009-09-20 10:53:08 UTC (rev 20002)
+++ aster/trunk/tests/Makefile.am	2009-09-20 10:54:15 UTC (rev 20003)
@@ -15,6 +15,10 @@
 RUNTESTS  = $(ASTRS:.astr=)
 FAILTESTS = $(FAILASTRS:.astr=)
 
+JAVACFLAGS=-J-Xmx256m -J-Xms100m -J-server -J-XX:+UseParallelGC -cp .:`strj-jar -p` -source 5 -nowarn
+JAVAC=`if which ecj >/dev/null; then echo ecj; else echo javac; fi`
+STRJ=`if which strj >/dev/null; then echo strj; elif [ -e strategoxt.jar ]; then echo java -server -Xss4m -jar strategoxt.jar; else echo Please install strj or put strategoxt.jar into the current directory. >&2; exit 1; fi`
+
 EXTRA_DIST =\
   $(ASTRS) \
   $(METAS) \
@@ -32,6 +36,15 @@
 %$(EXEEXT) : %.str
 	strc -i $< -m main-`basename $*` $(STRCFLAGS) >/dev/null
 
+%.java : %.str
+	strj -i $< -m main-`basename $*` $(STRCFLAGS) >/dev/null
+
+test_attributes.java : test-attributes.str
+	strj -i $< -m main-test-attributes $(STRCFLAGS) >/dev/null
+
+%.class : %.java
+	$(JAVAC) $(JAVACFLAGS) $<
+
 $(top_srcdir)/trans/aster$(EXEEXT) :
 	$(MAKE) -C $(top_srcdir)/trans aster$(EXEEXT)
 
@@ -43,6 +56,11 @@
 	@echo ==== `basename $@ .run` ====
 	@./$* --verbose 2
 
+%.jrun : %.class
+	@echo
+	@echo ==== `basename $@ .run` ====
+	java -cp .:`strj-jar -p` $* --verbose 2
+
 FAILTESTS :
 	@echo
 	@echo ==== failure tests ====

Modified: aster/trunk/tests/test-attributes.astr
===================================================================
--- aster/trunk/tests/test-attributes.astr	2009-09-20 10:53:08 UTC (rev 20002)
+++ aster/trunk/tests/test-attributes.astr	2009-09-20 10:54:15 UTC (rev 20003)
@@ -205,13 +205,13 @@
     , ?2{_}
     );
     apply-and-check(
-      !"attribute result is an initialized term (4)"
+      !"attribute result is an initialized term (5)"
     , id.init(|2)
     , !1.init
     , ?2{_}
     );
     apply-and-check(
-      !"attribute result is an initialized term (4)"
+      !"attribute result is an initialized term (6)"
     , not(id.fails)
     , !1.init
     , ?1

Modified: aster/trunk/trans/io.str
===================================================================
--- aster/trunk/trans/io.str	2009-09-20 10:53:08 UTC (rev 20002)
+++ aster/trunk/trans/io.str	2009-09-20 10:54:15 UTC (rev 20003)
@@ -14,7 +14,7 @@
   
   input-stratego-file =
     xtc-ensure-file => FILE(file);
-    parse-stratego-trm(
+    parse-stratego-trm( // TODO: if-java-platform(import-term)
     | [ "-i", file
       , "--default-syntax", "Stratego-Attributes"
       , "-I", <xtc-find; dirname <+ !"../syntax"> "Stratego-Attributes.tbl"



From L.C.L.Kats at tudelft.nl  Sun Sep 20 13:27:05 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sun, 20 Sep 2009 11:27:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20004 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego
	org.strategoxt.imp.generator/src/sdf2imp
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <200909201127.n8KBR5E5030858@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-20 11:27:04 +0000 (Sun, 20 Sep 2009)
New Revision: 20004

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20004&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarValidator.java
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-validator.meta
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-validator.str
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoParseController.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-plugin-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/MetaFileLanguageValidator.java

Log:
- Added a validator class to generated editors to fix .meta support after deployment
- Friendlier error messages (feel the love)


Changes:

Deleted: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoParseController.java	2009-09-20 10:54:15 UTC (rev 20003)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoParseController.java	2009-09-20 11:27:04 UTC (rev 20004)
@@ -1,84 +0,0 @@
-package org.strategoxt.imp.editors.stratego;
-
-import java.io.InputStream;
-import java.io.IOException;
-import org.eclipse.imp.parser.IParseController;
-import org.strategoxt.imp.runtime.Environment;
-import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
-import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
-import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
-import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
-
-public class StrategoParseController extends DynamicParseController 
-{ 
-  private static final String LANGUAGE = "Stratego";
-
-  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
-
-  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
-
-  private static Descriptor descriptor;
-
-  private static Throwable notLoadingCause;
-
-  public static Descriptor getDescriptor()
-  { 
-    if(notLoadingCause != null)
-      throw new RuntimeException(notLoadingCause);
-    if(descriptor == null)
-      createDescriptor();
-    return descriptor;
-  }
-
-  private static void createDescriptor()
-  { 
-    try
-    { 
-      InputStream descriptorStream = StrategoParseController.class.getResourceAsStream(DESCRIPTOR);
-      InputStream table = StrategoParseController.class.getResourceAsStream(TABLE);
-      if(descriptorStream == null)
-        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin)");
-      if(table == null)
-        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin)");
-      descriptor = DescriptorFactory.load(descriptorStream, table, null);
-      descriptor.setAttachmentProvider(StrategoParseController.class);
-    }
-    catch(BadDescriptorException exc)
-    { 
-      notLoadingCause = exc;
-      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
-      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
-    }
-    catch(IOException exc)
-    { 
-      notLoadingCause = exc;
-      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
-      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
-    }
-  }
-
-  @Override public IParseController getWrapped()
-  { 
-    if(!isInitialized())
-    { 
-      if(notLoadingCause != null)
-        throw new RuntimeException(notLoadingCause);
-      try
-      { 
-        initialize(getDescriptor().getLanguage());
-      }
-      catch(BadDescriptorException exc)
-      { 
-        notLoadingCause = exc;
-        throw new RuntimeException(exc);
-      }
-    }
-    return super.getWrapped();
-  }
-
-  @Override protected void setNotLoadingCause(Throwable value)
-  { 
-    notLoadingCause = value;
-    super.setNotLoadingCause(value);
-  }
-}
\ No newline at end of file

Copied: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseController.java (from rev 20000, spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoParseController.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseController.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseController.java	2009-09-20 11:27:04 UTC (rev 20004)
@@ -0,0 +1,89 @@
+package org.strategoxt.imp.editors.stratego;
+
+import java.io.InputStream;
+import java.io.IOException;
+
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class StrategoSugarParseController extends DynamicParseController 
+{ 
+  private static final String LANGUAGE = "Stratego-Sugar";
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  private static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = StrategoSugarParseController.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = StrategoSugarParseController.class.getResourceAsStream(TABLE);
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, null);
+      descriptor.setAttachmentProvider(StrategoSugarParseController.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+  
+  private static String getPluginLocation() {
+	  return StrategoSugarParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseController.java
___________________________________________________________________
Added: svn:mergeinfo
   + 

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarValidator.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarValidator.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarValidator.java	2009-09-20 11:27:04 UTC (rev 20004)
@@ -0,0 +1,11 @@
+package org.strategoxt.imp.editors.stratego;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class StrategoSugarValidator extends MetaFileLanguageValidator {
+	@Override
+	public Descriptor getDescriptor() {
+		return StrategoSugarParseController.getDescriptor();
+	}
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-09-20 10:54:15 UTC (rev 20003)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str	2009-09-20 11:27:04 UTC (rev 20004)
@@ -115,6 +115,7 @@
     create-packed-descriptor-file;
     
     create-parse-controller;
+    create-validator;
     create-build-properties;
     create-project-file;
     create-activator;

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str	2009-09-20 10:54:15 UTC (rev 20003)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str	2009-09-20 11:27:04 UTC (rev 20004)
@@ -10,12 +10,12 @@
 
 strategies
   
-  get-parse-controller-name =
+  parse-controller-name =
     <conc-strings> (<get-main-class-name>, "ParseController")
 
   create-parse-controller =
     // TODO: do not overwrite existing parse controller
-    x_name  := <get-parse-controller-name>;
+    x_name  := <parse-controller-name>;
     pkgname := <get-package-name>;
     table   := <get-sdf-main-module>;
     
@@ -57,10 +57,10 @@
               InputStream table = x_name.class.getResourceAsStream(TABLE);
 
               if (descriptorStream == null)
-                throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin)");
+                throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
 
               if (table == null)
-                throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin)");
+                throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
 
               descriptor = DescriptorFactory.load(descriptorStream, table, null);
               descriptor.setAttachmentProvider(x_name.class);
@@ -76,6 +76,10 @@
               throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
             }
         }
+  
+        private static String getPluginLocation() {
+            return x_name.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+        }
         
         @Override
         public IParseController getWrapped() {

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-plugin-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-plugin-xml.str	2009-09-20 10:54:15 UTC (rev 20003)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-plugin-xml.str	2009-09-20 11:27:04 UTC (rev 20004)
@@ -6,11 +6,11 @@
 strategies
 
   create-plugin-xml =
-    // TODO: if there is an existing plugin.xml, we should check if the extensions/language/derivedFrom settings are still okay
     <file-exists> "plugin.xml"
   <+
     name       := <get-sdf-main-module>;
-    classname  := <get-main-class-name>;
+    parser     := <parse-controller-name>;
+    validator  := <validator-name>;
     pkgname    := <BasePackage <+ default-package-name>;
     extensions := <EditorExtensions>;
     
@@ -26,6 +26,8 @@
                 description="<%= name %>"
                 language="<%= name %>"
                 derivedFrom="DynamicRoot"
+                validator="<%= pkgname %>.<%= validator %>"
+                validatorClass="<%= pkgname %>.<%= validator %>"
           ></language>
        </extension>
        <extension
@@ -33,7 +35,7 @@
              name="<%= name %> Parser"
              point="org.eclipse.imp.runtime.parser">
           <parser
-                class="<%= pkgname %>.<%= classname %>ParseController"
+                class="<%= pkgname %>.<%= parser %>"
                 language="<%= name %>">
           </parser>
        </extension>    

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-validator.meta
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-validator.meta	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-validator.meta	2009-09-20 11:27:04 UTC (rev 20004)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-Java-15")])

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-validator.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-validator.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-validator.str	2009-09-20 11:27:04 UTC (rev 20004)
@@ -0,0 +1,32 @@
+module sdf2imp/project/create-validator
+
+imports
+  libstratego-lib
+  libstratego-xtc
+    
+  sdf2imp/util/-
+
+strategies
+  
+  validator-name =
+    <conc-strings> (<get-main-class-name>, "Validator")
+
+  create-validator =
+    // TODO: do not overwrite existing validator
+    x_name   := <validator-name>;
+    x_parser := <parse-controller-name>;
+    pkgname  := <get-package-name>;
+    
+    <output-java-file> |[
+      package pkgname;
+
+      import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+      import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+      public class x_name extends MetaFileLanguageValidator {
+          public Descriptor getDescriptor() {
+              // Lazily get the descriptor
+              return x_parser.getDescriptor();
+          }
+      }
+    ]|

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-20 10:54:15 UTC (rev 20003)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2009-09-20 11:27:04 UTC (rev 20004)
@@ -23,6 +23,7 @@
 import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.ide.IDE;
+import org.spoofax.interpreter.core.Interpreter;
 import org.strategoxt.imp.generator.sdf2imp;
 import org.strategoxt.imp.metatooling.loading.DynamicDescriptorUpdater;
 import org.strategoxt.imp.runtime.Environment;
@@ -152,7 +153,9 @@
 				Job.getJobManager().endRule(project);
 			}
 			
-			monitor.setTaskName("Opening files for editing");
+			monitor.setTaskName("Opening editors");
+			openEditor(project, "/trans/" + toStrategoName(languageName) +  ".str", true);
+			monitor.worked(1);
 			openEditor(project, "/editor/" + languageName +  ".main.esv", true);
 			monitor.worked(1);
 			openEditor(project, "/syntax/" + languageName +  ".sdf", true);
@@ -171,6 +174,10 @@
 			}
 		}
 	}
+ 	
+ 	private static String toStrategoName(String languageName) {
+ 		return Interpreter.cify(languageName.toLowerCase()).replace('_', '-');
+ 	}
 	
 	private void openEditor(IProject project, String filename, final boolean activate) {
 		final IResource file = (IResource) project.findMember(filename);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java	2009-09-20 10:54:15 UTC (rev 20003)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java	2009-09-20 11:27:04 UTC (rev 20004)
@@ -31,7 +31,7 @@
 			if (notLoadingCause != null) // previous error
 				throw new RuntimeException(notLoadingCause);
 			if (!isInitialized())
-				throw new IllegalStateException("Editor service component not initialized yet - " + getClass().getSimpleName());
+				throw new IllegalStateException("Editor service component not initialized yet - " + getClass().getSimpleName() + "/" + language);
 			try {
 				Descriptor desc = Environment.getDescriptor(getLanguage());
 				if(desc == null)
@@ -63,10 +63,16 @@
 	}
 	
 	public void initialize(Language language) {
+		// (Thrown exceptions are shown directly in the editor view.)
 		this.language = language;
-		if(getWrapped() == null)
+		if (getWrapped() == null) // (trigger descriptor init)
 			throw new RuntimeException("Failed to initialize language " + language.getName());
-		Environment.getDescriptor(language).addInitializedService(this);
+		if (!this.language.getName().equals(language.getName()))
+			throw new RuntimeException("Failed to initialize language " + this.language.getName() + ": language name in plugin.xml (" + language.getName() + ") does not correspond to name in editor service descriptors");
+		Descriptor descriptor = Environment.getDescriptor(language);
+		if (descriptor == null)
+			throw new RuntimeException("No definition for language '" + language.getName() + "'; try re-opening the editor");
+		descriptor.addInitializedService(this);
 	}
 	
 	/**

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/MetaFileLanguageValidator.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/MetaFileLanguageValidator.java	2009-09-20 10:54:15 UTC (rev 20003)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/MetaFileLanguageValidator.java	2009-09-20 11:27:04 UTC (rev 20004)
@@ -23,6 +23,14 @@
 	public MetaFileLanguageValidator(Descriptor descriptor) {
 	    this.descriptor = descriptor;
 	}
+	
+	protected MetaFileLanguageValidator() {
+		// Lazily initializes the descriptor
+	}
+	
+	public Descriptor getDescriptor() {
+		return descriptor;
+	}
 
 	@Override
 	public boolean validate(IFile file) {
@@ -35,7 +43,7 @@
 	
 	public boolean validateByLanguage(IFile file, String languageName) {
 		try {
-			Language language = descriptor.getLanguage();
+			Language language = getDescriptor().getLanguage();
 				
 			if (languageName.equals(language.getName()))
 				return true;
@@ -58,7 +66,7 @@
 	
 	private boolean validateByExtension(IFile file) {
 		try {
-			return descriptor.getLanguage().hasExtension(file.getFileExtension());
+			return getDescriptor().getLanguage().hasExtension(file.getFileExtension());
 		} catch (BadDescriptorException e) {
 			Environment.logException(e);
 			return false;
@@ -66,7 +74,7 @@
 	}
 	
 	private boolean isExactMatchAvailable(String languageName) throws BadDescriptorException {
-		Language myLanguage = descriptor.getLanguage(); 
+		Language myLanguage = getDescriptor().getLanguage(); 
 		for (Language language : LanguageRegistry.getLanguages()) {
 			if (language != myLanguage && languageName.equals(language.getName()))
 				return true;
@@ -75,7 +83,7 @@
 	}
 	
 	private boolean isExtensionOfAvailable(String languageName) throws BadDescriptorException {
-		Language myLanguage = descriptor.getLanguage(); 
+		Language myLanguage = getDescriptor().getLanguage(); 
 		for (Language language : LanguageRegistry.getLanguages()) {
 			if (language != myLanguage && isExtensionOf(language, languageName))
 				return true;



From L.C.L.Kats at tudelft.nl  Mon Sep 21 10:00:50 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 21 Sep 2009 08:00:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20005 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <200909210800.n8L80oTf011901@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-21 08:00:49 +0000 (Mon, 21 Sep 2009)
New Revision: 20005

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20005&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java

Log:
- Some general reference resolver relability fixes (removed caching, among other things)
- Fixed the reference resolver of the example "entities" language

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str	2009-09-20 11:27:04 UTC (rev 20004)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str	2009-09-21 08:00:49 UTC (rev 20005)
@@ -49,20 +49,21 @@
       message := <s; try(all(is-string <+ write-to-string)); try(concat-strings)> t
   
   editor-resolve:
-    (source, filename, reference, path) -> target
+    (Type(type), position, ast, path, fullpath) -> target
     where
-      target := <GetEntity> source
+      target := <GetEntity> type
 
   editor-hover:
-    (source, filename, reference, path) -> <conc-strings> (\"Hover help: \", <write-to-string> source)
+    (term, position, ast, path, fullpath) -> <conc-strings> (\"Hover help: \", <write-to-string> term)
 
 rules
 
   record-entity:
-    Entity(x, body) -> Entity(x, body)
+    Entity(x_declaration, body) -> Entity(x_declaration, body)
     with
+      x_reference := x_declaration;
       rules(
-        GetEntity: x -> x
+        GetEntity: x_reference -> x_declaration
       )
     
   constraint-error:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-09-20 11:27:04 UTC (rev 20004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2009-09-21 08:00:49 UTC (rev 20005)
@@ -121,8 +121,9 @@
 			
 			@Override
 			public IStrategoTerm current() {
-				assertLock();
-				return super.current();
+				synchronized (getSyncRoot()) {
+					return super.current();
+				}
 			}
 		};
 		

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	2009-09-20 11:27:04 UTC (rev 20004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	2009-09-21 08:00:49 UTC (rev 20005)
@@ -2,6 +2,8 @@
 
 import java.util.Iterator;
 
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.imp.editor.UniversalEditor;
@@ -20,6 +22,7 @@
 import org.eclipse.ui.IWorkbenchPart;
 import org.eclipse.ui.IWorkbenchWindow;
 import org.eclipse.ui.PlatformUI;
+import org.strategoxt.imp.runtime.ISourceInfo;
 
 /**
  * Dynamic proxy class to a parse controller.
@@ -28,7 +31,7 @@
  * 
  * @author Lennart Kats <lennart add lclnet.nl>
  */
-public class DynamicParseController extends AbstractService<IParseController> implements IParseController {
+public class DynamicParseController extends AbstractService<IParseController> implements IParseController, ISourceInfo {
 	private IPath filePath;
 	private ISourceProject project;
 	private IMessageHandler handler;
@@ -133,4 +136,11 @@
 	public Object parse(String input, boolean scanOnly, IProgressMonitor monitor) {
 		return getWrapped().parse(input, scanOnly, monitor);
 	}
+
+	public IResource getResource() {
+    	IPath path = getPath();
+		IProject project = getProject().getRawProject();
+		path = path.removeFirstSegments(path.matchingFirstSegments(project.getLocation()));
+		return project.getFile(path);
+	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2009-09-20 11:27:04 UTC (rev 20004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2009-09-21 08:00:49 UTC (rev 20005)
@@ -232,7 +232,7 @@
 		// HACK: Need to call IModelListener.update manually; the IMP extension point is not implemented?!
 		try {
 			StrategoFeedback feedback = Environment.getDescriptor(getLanguage()).getStrategoFeedback();
-			if (feedback != null) feedback.asyncUpdate(this, null);
+			if (feedback != null) feedback.asyncUpdate(this);
 		} catch (BadDescriptorException e) {
 			Environment.logException("Unexpected error during analysis", e);
 			errorHandler.reportError(parser.getTokenizer(), e);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-09-20 11:27:04 UTC (rev 20004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java	2009-09-21 08:00:49 UTC (rev 20005)
@@ -65,6 +65,8 @@
 	
 	private Job asyncLastBuildJob;
 	
+	private volatile boolean isUpdateStarted;
+	
 	public StrategoFeedback(Descriptor descriptor, String feedbackFunction) {
 		this.descriptor = descriptor;
 		this.feedbackFunction = feedbackFunction;
@@ -74,6 +76,16 @@
 		return AnalysisRequired.TYPE_ANALYSIS;
 	}
 	
+	/**
+	 * Returns a value indicating whether or not an analysis has
+	 * been scheduled or completed at this point.
+	 * 
+	 * @return true if update() or asyncUpdate() have been called.
+	 */
+	public boolean isUpdateStarted() {
+		return isUpdateStarted;
+	}
+	
 	public AstMessageHandler getMessages() {
 		return messages;
 	}
@@ -157,7 +169,9 @@
 	/**
 	 * Starts a new update() operation, asynchronously.
 	 */
-	public void asyncUpdate(final IParseController parseController, final IProgressMonitor monitor) {		
+	public void asyncUpdate(final IParseController parseController) {
+		isUpdateStarted = true;
+		
 		synchronized (asyncUpdateSyncRoot) {
 			if (asyncLastBuildJob != null)
 				asyncLastBuildJob.cancel();
@@ -176,6 +190,8 @@
 	}
 
 	public void update(IParseController parseController, IProgressMonitor monitor) {
+		isUpdateStarted = true;
+		
 		if (feedbackFunction == null || monitor.isCanceled())
 			return;
 		
@@ -271,10 +287,11 @@
 		synchronized (Environment.getSyncRoot()) {
 			ITermFactory factory = Environment.getTermFactory();
 			IStrategoTerm[] inputParts = {
+					node.getTerm(),
+					StrategoTermPath.createPath(node),
 					getRoot(node).getTerm(),
 					factory.makeString(node.getSourceInfo().getPath().toOSString()),
-					node.getTerm(),
-					StrategoTermPath.createPath(node)
+					factory.makeString(node.getSourceInfo().getProject().getRawProject().getLocation().toOSString())
 			};
 			IStrategoTerm input = factory.makeTuple(inputParts);
 			
@@ -325,9 +342,8 @@
 				return null;
 			}
 			
+			Debug.stopTimer("Evaluated strategy " + function + (success ? "" : " (failed)"));
 			if (!success) return null;
-			
-			Debug.stopTimer("Evaluated strategy " + function);
 			return runtime.current();
 		}
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java	2009-09-20 11:27:04 UTC (rev 20004)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java	2009-09-21 08:00:49 UTC (rev 20005)
@@ -1,15 +1,16 @@
 package org.strategoxt.imp.runtime.services;
 
+import static org.spoofax.interpreter.core.Tools.*;
+
 import java.util.List;
-import java.util.WeakHashMap;
 
 import lpg.runtime.IAst;
 
 import org.eclipse.imp.parser.IParseController;
 import org.eclipse.imp.services.IReferenceResolver;
+import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.Debug;
-import org.strategoxt.imp.runtime.parser.ast.IntAstNode;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
 
 /**
@@ -26,14 +27,6 @@
 	
 	private final String wildcardHelperFunction;
 	
-	private final WeakHashMap<IStrategoAstNode, IAst> resolverCache =
-		new WeakHashMap<IStrategoAstNode, IAst>();
-	
-	private final WeakHashMap<IStrategoAstNode, String> helpCache =
-		new WeakHashMap<IStrategoAstNode, String>();
-	
-	private final IStrategoAstNode NOT_FOUND = new IntAstNode(null, null, null, 0);
-	
 	public StrategoReferenceResolver(StrategoFeedback feedback, List<NodeMapping<String>> resolverFunctions, List<NodeMapping<String>> helpFunctions) {
 		this.feedback = feedback;
 		this.resolverFunctions = resolverFunctions;
@@ -43,11 +36,7 @@
 	}
 
 	public IAst getLinkTarget(Object oNode, IParseController parseController) {
-		// TODO: Fix reference resolve caching, cache resetting
-		
 		IStrategoAstNode node = getReferencedNode(oNode);
-		IAst result = resolverCache.get(node);
-		if (result != null) return result == NOT_FOUND ? null : result;
 		
 		String function = NodeMapping.getFirstAttribute(resolverFunctions, node.getConstructor(), node.getSort(), 0);
 		if (function == null) function = wildcardResolverFunction;
@@ -57,16 +46,13 @@
 		}
 		
 		IStrategoTerm resultTerm = feedback.invoke(function, node);
-		result = feedback.getAstNode(resultTerm);
-		
-		resolverCache.put(node, result == null ? NOT_FOUND : result);
-		return result;
+		if (resultTerm == null && !feedback.isUpdateStarted())
+			feedback.asyncUpdate(parseController);
+		return feedback.getAstNode(resultTerm);
 	}
 
 	public String getLinkText(Object oNode) {
 		IStrategoAstNode node = getReferencedNode(oNode);
-		String cached = helpCache.get(node);
-		if (cached != null) return cached == "" ? null : cached;
 		
 		String function = NodeMapping.getFirstAttribute(helpFunctions, node.getConstructor(), null, 0);
 		if (function == null) function = wildcardHelperFunction;
@@ -75,11 +61,14 @@
 			return null;
 		}
 		
-		IStrategoTerm resultTerm = feedback.invoke(function, node);
-		String result = resultTerm == null ? null : resultTerm.toString();
-		
-		helpCache.put(node, result == null ? "" : result.toString());
-		return result;
+		IStrategoTerm result = feedback.invoke(function, node);
+		if (result == null) {
+			return null;
+		} else if (isTermString(result)) {
+			return ((IStrategoString) result).stringValue();
+		} else {
+			return result.toString();
+		}
 	}
 	
 	private static final IStrategoAstNode getReferencedNode(Object oNode) {



From L.C.L.Kats at tudelft.nl  Mon Sep 21 10:19:13 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 21 Sep 2009 08:19:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20006 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl
	strc-java/trunk/java strc-java/trunk/trans
Message-ID: <200909210819.n8L8JDNY012434@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-21 08:19:13 +0000 (Mon, 21 Sep 2009)
New Revision: 20006

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20006&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_explode_string.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_implode_string.java
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/java/spoofax-libs.jar
   strc-java/trunk/trans/java-optimize.str

Log:
Minor optimizations.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_explode_string.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_explode_string.java	2009-09-21 08:00:49 UTC (rev 20005)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_explode_string.java	2009-09-21 08:19:13 UTC (rev 20006)
@@ -12,7 +12,7 @@
 import org.spoofax.interpreter.core.Tools;
 import org.spoofax.interpreter.library.AbstractPrimitive;
 import org.spoofax.interpreter.stratego.Strategy;
-import org.spoofax.interpreter.terms.IStrategoInt;
+import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 
@@ -23,22 +23,21 @@
     }
     
     public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) throws InterpreterException {
-        
         IStrategoTerm t = tvars[0];
         
-        if(!Tools.isTermString(t))
+        if (!Tools.isTermString(t))
             return false;
         
         String s = Tools.javaString(t);
-        IStrategoTerm[] r = new IStrategoInt[s.length()];
-        char[] cs = s.toCharArray();
         
-        ITermFactory f = env.getFactory();
-        for(int i = 0; i < cs.length; i++)
-            r[i] = f.makeInt(cs[i]);
+        ITermFactory factory = env.getFactory();
+        IStrategoList result = factory.makeList();
         
-        IStrategoTerm sl = env.getFactory().makeList(r);
-        env.setCurrent(sl);
+        for (int i = s.length() - 1; i >= 0; i--) {
+            result = factory.makeListCons(factory.makeInt(s.charAt(i)), result);
+        }
+        
+        env.setCurrent(result);
         return true;
     }
 }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_implode_string.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_implode_string.java	2009-09-21 08:00:49 UTC (rev 20005)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_implode_string.java	2009-09-21 08:19:13 UTC (rev 20006)
@@ -28,7 +28,7 @@
         if(!Tools.isTermList(t))
             return false;
 
-        StringBuilder result = new StringBuilder();
+        StringBuilder result = new StringBuilder(targs.length);
 
         for (IStrategoList l = (IStrategoList) t; !l.isEmpty(); l = l.tail()) {
             IStrategoInt v = (IStrategoInt) l.head();

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-21 08:00:49 UTC (rev 20005)
+++ strc-java/trunk/java/Makefile.am	2009-09-21 08:19:13 UTC (rev 20006)
@@ -57,6 +57,9 @@
 JARIN3=`find compiler | grep -E '\.rtree|\.af|\.tbl' | sed 's!compiler/!-C compiler/ !'`
 
 jar strategoxt.jar : spoofax-libs.jar # .ALLCLASSES $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(COMPILERJAVAS)
+	@if [ ! -e bin/org/strategoxt/stratego_lib/Main.class ]; then \
+	  echo Standard library classes not found; please run 'make all' first. >&2; exit 1; \
+	fi 
 	cp spoofax-libs.jar strategoxt.jar.tmp
 	$(JAR) uf strategoxt.jar.tmp $(JARIN1) $(JARIN2) $(JARIN3)
 	$(JAR) uf strategoxt.jar.tmp META-INF/MANIFEST.MF -C bin .

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)

Modified: strc-java/trunk/trans/java-optimize.str
===================================================================
--- strc-java/trunk/trans/java-optimize.str	2009-09-21 08:00:49 UTC (rev 20005)
+++ strc-java/trunk/trans/java-optimize.str	2009-09-21 08:19:13 UTC (rev 20006)
@@ -27,12 +27,14 @@
 
   // TODO: Proper copy propagation?
   
+/*
   optimize-assignments :
     bstm* |[ x = e; y = x; bstm* ]| ->
     bstm* |[ x = e; y = e; bstm* ]|
     where
       not(!e => ExprName(Id(x)))
     ; <has-no-side-effects> e
+*/
   
   optimize-assignments :
     bstm* |[ x = e1; x = e2;  bstm* ]| ->



From L.C.L.Kats at tudelft.nl  Mon Sep 21 10:37:02 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 21 Sep 2009 08:37:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20007 - LennartKats -
	in spoofax-imp/trunk: .
	org.strategoxt.imp.editors.editorservice/META-INF
	org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice
	org.strategoxt.imp.editors.sdf/META-INF
	org.strategoxt.imp.editors.sdf/editor/java/org/strategoxt/imp/editors/sdf
	org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.editors.stratego/META-INF
	org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego
	org.strategoxt.imp.feature org.strategoxt.imp.generator/META-INF
	org.strategoxt.imp.generator/lib org.strategoxt.imp.metatooling
	org.strategoxt.imp.metatooling/META-INF
	org.strategoxt.imp.runtime/META-INF org.strategoxt.imp.updatesite
	org.strategoxt.imp.updatesite/features
	org.strategoxt.imp.updatesite/plugins
Message-ID: <200909210837.n8L8b2gw012788@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-21 08:37:02 +0000 (Mon, 21 Sep 2009)
New Revision: 20007

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20007&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/features/org.strategoxt.imp_0.1.0.2800.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/com.ibm.wala.shrike_1.1.3.200909201429.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.aterm_0.2.3.200909201429.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.compiler_0.3.9.200909201429.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.adapter.aterm_0.3.11.200909201429.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.core_0.3.13.200909201429.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.library.jsglr_0.3.9.200909201429.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter_0.3.11.200909201429.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.jsglr_0.2.1.200909201429.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.editorservice_0.1.0.2800.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.sdf_0.1.0.2800.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.stratego_0.1.0.2800.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.generator_0.1.0.2800.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.metatooling_0.1.0.2800.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.runtime_0.1.0.2800.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.strj_0.2.0.jar
Modified:
   spoofax-imp/trunk/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/java/org/strategoxt/imp/editors/sdf/SDFParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarValidator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/lpg.runtime_2.0.16.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg.metatooling_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg.runtime_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.metatooling_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.preferences_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.prefspecs_0.1.79.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.presentation_0.1.1.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.runtime_0.1.88.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.smapi_0.1.86.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.smapifier_0.1.86.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.xform_0.1.87.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
New update site revision.

Changes:

Modified: spoofax-imp/trunk/Makefile
===================================================================
--- spoofax-imp/trunk/Makefile	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/Makefile	2009-09-21 08:37:02 UTC (rev 20007)
@@ -1,8 +1,8 @@
 all :
 	$(MAKE) -C org.strategoxt.imp.generator all
 	(cd org.strategoxt.imp.editors.editorservice && ant -Dexternaldef=../org.strategoxt.imp.generator/src/syntax/EditorService.def)
-	(cd org.strategoxt.imp.editors.sdf && ant -Dexternaldef=include/SDF.def)
-	(cd org.strategoxt.imp.editors.stratego && ant -D externaldef=include/Stratego-Sugar.def)
+	(cd org.strategoxt.imp.editors.sdf && ant -Dexternaldef=syntax/SDF.def)
+	(cd org.strategoxt.imp.editors.stratego && ant -Dexternaldef=syntax/Stratego-Sugar.def)
 
 check : all
 	$(MAKE) -C org.strategoxt.imp.generator check

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/META-INF/MANIFEST.MF	2009-09-21 08:37:02 UTC (rev 20007)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: EditorService Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.editors.editorservice; singleton:=true
-Bundle-Version: 0.1.0.2700
+Bundle-Version: 0.1.0.2800
 Bundle-Activator: org.strategoxt.imp.editors.editorservice.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceParseController.java	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceParseController.java	2009-09-21 08:37:02 UTC (rev 20007)
@@ -37,9 +37,9 @@
       InputStream descriptorStream = EditorServiceParseController.class.getResourceAsStream(DESCRIPTOR);
       InputStream table = EditorServiceParseController.class.getResourceAsStream(TABLE);
       if(descriptorStream == null)
-        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin)");
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
       if(table == null)
-        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin)");
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
       descriptor = DescriptorFactory.load(descriptorStream, table, null);
       descriptor.setAttachmentProvider(EditorServiceParseController.class);
     }
@@ -57,6 +57,11 @@
     }
   }
 
+  private static String getPluginLocation()
+  { 
+    return EditorServiceParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
   @Override public IParseController getWrapped()
   { 
     if(!isInitialized())

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/META-INF/MANIFEST.MF	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/META-INF/MANIFEST.MF	2009-09-21 08:37:02 UTC (rev 20007)
@@ -1,8 +1,8 @@
 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
-Bundle-Name: SDF Plug-in
+Bundle-Name: SDF Editor Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.editors.sdf; singleton:=true
-Bundle-Version: 0.1.0.2700
+Bundle-Version: 0.1.0.2800
 Bundle-Activator: org.strategoxt.imp.editors.sdf.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/java/org/strategoxt/imp/editors/sdf/SDFParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/java/org/strategoxt/imp/editors/sdf/SDFParseController.java	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/java/org/strategoxt/imp/editors/sdf/SDFParseController.java	2009-09-21 08:37:02 UTC (rev 20007)
@@ -37,9 +37,9 @@
       InputStream descriptorStream = SDFParseController.class.getResourceAsStream(DESCRIPTOR);
       InputStream table = SDFParseController.class.getResourceAsStream(TABLE);
       if(descriptorStream == null)
-        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin)");
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
       if(table == null)
-        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin)");
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
       descriptor = DescriptorFactory.load(descriptorStream, table, null);
       descriptor.setAttachmentProvider(SDFParseController.class);
     }
@@ -57,6 +57,11 @@
     }
   }
 
+  private static String getPluginLocation()
+  { 
+    return SDFParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
   @Override public IParseController getWrapped()
   { 
     if(!isInitialized())

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/META-INF/MANIFEST.MF	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/META-INF/MANIFEST.MF	2009-09-21 08:37:02 UTC (rev 20007)
@@ -1,8 +1,8 @@
 Manifest-Version: 1.0
 Bundle-ManifestVersion: 2
-Bundle-Name: Stratego Plug-in
+Bundle-Name: Stratego Editor Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.editors.stratego; singleton:=true
-Bundle-Version: 0.1.0.2700
+Bundle-Version: 0.1.0.2800
 Bundle-Activator: org.strategoxt.imp.editors.stratego.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseController.java	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseController.java	2009-09-21 08:37:02 UTC (rev 20007)
@@ -2,7 +2,6 @@
 
 import java.io.InputStream;
 import java.io.IOException;
-
 import org.eclipse.imp.parser.IParseController;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
@@ -57,9 +56,10 @@
       throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
     }
   }
-  
-  private static String getPluginLocation() {
-	  return StrategoSugarParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+
+  private static String getPluginLocation()
+  { 
+    return StrategoSugarParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
   }
 
   @Override public IParseController getWrapped()

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarValidator.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarValidator.java	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarValidator.java	2009-09-21 08:37:02 UTC (rev 20007)
@@ -3,9 +3,10 @@
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
 
-public class StrategoSugarValidator extends MetaFileLanguageValidator {
-	@Override
-	public Descriptor getDescriptor() {
-		return StrategoSugarParseController.getDescriptor();
-	}
-}
+public class StrategoSugarValidator extends MetaFileLanguageValidator 
+{ 
+  public Descriptor getDescriptor()
+  { 
+    return StrategoSugarParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/plugin.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/plugin.xml	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/plugin.xml	2009-09-21 08:37:02 UTC (rev 20007)
@@ -3,10 +3,10 @@
 
 <plugin>
        <extension point="org.eclipse.imp.runtime.languageDescription">
-          <language extensions="str" description="Stratego" language="Stratego" derivedFrom="DynamicRoot"></language>
+          <language extensions="str" description="Plain Stratego editor" language="Stratego-Sugar" derivedFrom="DynamicRoot" validator="org.strategoxt.imp.editors.stratego.StrategoSugarValidator" validatorClass="org.strategoxt.imp.editors.stratego.StrategoSugarValidator"></language>
        </extension>
        <extension id="org.strategoxt.imp.editors.stratego.parser" name="Stratego Parser" point="org.eclipse.imp.runtime.parser">
-          <parser class="org.strategoxt.imp.editors.stratego.StrategoParseController" language="Stratego">
+          <parser class="org.strategoxt.imp.editors.stratego.StrategoSugarParseController" language="Stratego-Sugar">
           </parser>
        </extension>    
     </plugin>

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-09-21 08:37:02 UTC (rev 20007)
@@ -2,19 +2,26 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.1.0.2700"
+      version="0.1.0.2800"
       plugin="org.strategoxt.imp.runtime">
 
-   <description url="http://www.lclnet.nl/software/sdf2imp/">
+   <description url="http://strategoxt.org/Stratego/Spoofax-IMP">
       Spoofax/IMP metatooling environment
    </description>
 
-   <copyright>
-      [Copyright Description to be supplied.]
+   <copyright url="http://www.lclnet.nl/software/spoofax-imp/">
+      Copyright (c) Lennart C. L. Kats 2009
    </copyright>
 
-   <license url="http://www.lclnet.nl/software/sdf2imp">
-      [License Description to be supplied.]
+   <license url="http://strategoxt.org/Stratego/Spoofax-IMP">
+      This software is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+full license text for more details.
+Most Spoofax/IMP code is licensed under the Eclipse Public License.
+Some runtime components are licensed under the GNU Lesser General
+Public License or the GNU General Public License; external
+components may be covered by different licences.
    </license>
 
    <url>
@@ -25,21 +32,21 @@
          id="org.strategoxt.imp.metatooling"
          download-size="0"
          install-size="0"
-         version="0.1.0.2700"
+         version="0.1.0.2800"
          unpack="false"/>
 
    <plugin
          id="org.strategoxt.imp.runtime"
          download-size="0"
          install-size="0"
-         version="0.1.0.2700"
+         version="0.1.0.2800"
          unpack="false"/>
 
    <plugin
          id="org.spoofax.aterm"
          download-size="0"
          install-size="0"
-         version="0.2.2.qualifier"/>
+         version="0.2.3.qualifier"/>
 
    <plugin
          id="org.spoofax.compiler"
@@ -136,7 +143,7 @@
          id="org.strategoxt.imp.editors.editorservice"
          download-size="0"
          install-size="0"
-         version="0.1.0.2700"
+         version="0.1.0.2800"
          unpack="false"/>
 
    <plugin
@@ -185,26 +192,26 @@
          id="org.strategoxt.strj"
          download-size="0"
          install-size="0"
-         version="0.1.1"/>
+         version="0.2.0"/>
 
    <plugin
          id="org.strategoxt.imp.generator"
          download-size="0"
          install-size="0"
-         version="0.1.0.2700"/>
+         version="0.1.0.2800"/>
 
    <plugin
          id="org.strategoxt.imp.editors.sdf"
          download-size="0"
          install-size="0"
-         version="0.1.0.2700"
+         version="0.1.0.2800"
          unpack="false"/>
 
    <plugin
          id="org.strategoxt.imp.editors.stratego"
          download-size="0"
          install-size="0"
-         version="0.1.0.2700"
+         version="0.1.0.2800"
          unpack="false"/>
 
 </feature>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF	2009-09-21 08:37:02 UTC (rev 20007)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Spoofax/IMP Metatooling
 Bundle-SymbolicName: org.strategoxt.imp.generator;singleton:=true
-Bundle-Version: 0.1.0.2700
+Bundle-Version: 0.1.0.2800
 Bundle-ClassPath: lib/make_permissive.jar,
  lib/sdf2imp.jar
 Require-Bundle: org.spoofax.aterm,

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF	2009-09-21 08:37:02 UTC (rev 20007)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Spoofax/IMP Metatooling
 Bundle-SymbolicName: org.strategoxt.imp.metatooling;singleton:=true
-Bundle-Version: 0.1.0.2700
+Bundle-Version: 0.1.0.2800
 Bundle-ClassPath: org.strategoxt.imp.metatooling/
 Require-Bundle: org.strategoxt.imp.runtime,
  org.strategoxt.imp.generator,

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/build.properties
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/build.properties	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/build.properties	2009-09-21 08:37:02 UTC (rev 20007)
@@ -3,4 +3,5 @@
 bin.includes = META-INF/,\
                org.strategoxt.imp.metatooling/,\
                plugin.xml,\
-               bin/
+               bin/,\
+               icons/

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF	2009-09-21 08:37:02 UTC (rev 20007)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Spoofax/IMP Runtime
 Bundle-SymbolicName: org.strategoxt.imp.runtime;singleton:=true
-Bundle-Version: 0.1.0.2700
+Bundle-Version: 0.1.0.2800
 Require-Bundle: org.eclipse.imp.runtime,
  org.spoofax.aterm,
  org.spoofax.jsglr,

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/features/org.strategoxt.imp_0.1.0.2800.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/features/org.strategoxt.imp_0.1.0.2800.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/com.ibm.wala.shrike_1.1.3.200909201429.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/com.ibm.wala.shrike_1.1.3.200909201429.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/lpg.runtime_2.0.16.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg.metatooling_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg.runtime_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.lpg_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.metatooling_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.preferences_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.prefspecs_0.1.79.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.presentation_0.1.1.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.runtime_0.1.88.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.smapi_0.1.86.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.smapifier_0.1.86.jar
===================================================================
(Binary files differ)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.eclipse.imp.xform_0.1.87.jar
===================================================================
(Binary files differ)

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.aterm_0.2.3.200909201429.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.aterm_0.2.3.200909201429.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.compiler_0.3.9.200909201429.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.compiler_0.3.9.200909201429.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.adapter.aterm_0.3.11.200909201429.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.adapter.aterm_0.3.11.200909201429.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.core_0.3.13.200909201429.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.core_0.3.13.200909201429.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.library.jsglr_0.3.9.200909201429.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter.library.jsglr_0.3.9.200909201429.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter_0.3.11.200909201429.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.interpreter_0.3.11.200909201429.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.jsglr_0.2.1.200909201429.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.spoofax.jsglr_0.2.1.200909201429.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.editorservice_0.1.0.2800.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.editorservice_0.1.0.2800.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.sdf_0.1.0.2800.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.sdf_0.1.0.2800.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.stratego_0.1.0.2800.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.editors.stratego_0.1.0.2800.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.generator_0.1.0.2800.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.generator_0.1.0.2800.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.metatooling_0.1.0.2800.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.metatooling_0.1.0.2800.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.runtime_0.1.0.2800.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.runtime_0.1.0.2800.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.strj_0.2.0.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.strj_0.2.0.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2009-09-21 08:19:13 UTC (rev 20006)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2009-09-21 08:37:02 UTC (rev 20007)
@@ -9,5 +9,8 @@
    <feature url="features/org.strategoxt.imp_0.1.0.2700.jar" id="org.strategoxt.imp" version="0.1.0.2700">
       <category name="Spoofax/IMP"/>
    </feature>
+   <feature url="features/org.strategoxt.imp_0.1.0.2800.jar" id="org.strategoxt.imp" version="0.1.0.2800">
+      <category name="Spoofax/IMP"/>
+   </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP"/>
 </site>



From L.C.L.Kats at tudelft.nl  Tue Sep 22 11:04:41 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 22 Sep 2009 09:04:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20008 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr
Message-ID: <200909220904.n8M94fkt032690@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-22 09:04:40 +0000 (Tue, 22 Sep 2009)
New Revision: 20008

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20008&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedRepair.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java

Log:
- Added an ad-hoc fix to support (some?) sdf2bundle 2.6 parse tables
- Bumped the default max. number of recoveries per region up to 3

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedRepair.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-09-21 08:37:02 UTC (rev 20007)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/FineGrainedRepair.java	2009-09-22 09:04:40 UTC (rev 20008)
@@ -23,7 +23,7 @@
     
     public FineGrainedRepair(SGLR sglr){
         myParser=sglr;  
-        myParser.setMaxNrOfRecoveries(2);
+        myParser.setMaxNrOfRecoveries(3);
         myParser.setLengthAvoidCheck(25);
         newLinePoints=new ArrayList<IndentInfo>();
         indexLineRecovery=-1;

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java	2009-09-21 08:37:02 UTC (rev 20007)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java	2009-09-22 09:04:40 UTC (rev 20008)
@@ -348,10 +348,17 @@
     private Range[] parseCharClasses(ATermList list) throws InvalidParseTableException {
         Range[] ret = new Range[list.getLength()];
         for(int i=0;i<ret.length; i++) {
-            ATerm t = list.getFirst();
+            ATermAppl t = Term.asAppl(list.getFirst());
             list = list.getNext();
-            ATermList l = Term.listAt(Term.applAt(t, 0), 0);
-            ATermList n = Term.listAt(t, 1);
+            ATermList l, n;            
+            if (t.getName().equals("look")) { // sdf2bundle 2.4
+                l = Term.listAt(Term.applAt(t, 0), 0);
+                n = Term.listAt(t, 1);
+            } else { // sdf2bundle 2.6
+                assert t.getName().equals("follow-restriction");
+                l = Term.listAt(Term.termAt(Term.listAt(t, 0), 0), 0);
+                n = Term.listAt(t, 0).getNext();
+            }
             
             if (Term.termAt(l, 1) == null) {
                 if (SGLR.WORK_AROUND_MULTIPLE_LOOKAHEAD) {



From L.C.L.Kats at tudelft.nl  Tue Sep 22 11:19:00 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 22 Sep 2009 09:19:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20009 - LennartKats -
	in strc-java/trunk: . trans
Message-ID: <200909220919.n8M9J0Ah000566@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-22 09:19:00 +0000 (Tue, 22 Sep 2009)
New Revision: 20009

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20009&view=rev

Modified:
   strc-java/trunk/README
   strc-java/trunk/trans/java-optimize.str
   strc-java/trunk/trans/s2j.str
   strc-java/trunk/trans/strj-options.str
   strc-java/trunk/trans/strj.str

Log:
- Support -F to generate ctrees
- Added an -Xecj33 option for ECJ 3.3 compatibility; should disable it by default in the future

Changes:

Modified: strc-java/trunk/README
===================================================================
--- strc-java/trunk/README	2009-09-22 09:04:40 UTC (rev 20008)
+++ strc-java/trunk/README	2009-09-22 09:19:00 UTC (rev 20009)
@@ -111,6 +111,12 @@
   compiler" by Kalleberg and Visser, and "Domain-Specific Languages
   for Composable Editor Plugins" by Kats, Kalleberg, and Visser.
 
+- Compiled Stratego components can be dynamically loaded from JAR
+  files and may be combined with interpreted components using the
+  HybridInterpreter class. To interpret a Stratego component,
+  pre-compile it to a .ctree file using STRJ and the '-F --library'
+  options.
+
 LICENSING
 =========
 

Modified: strc-java/trunk/trans/java-optimize.str
===================================================================
--- strc-java/trunk/trans/java-optimize.str	2009-09-22 09:04:40 UTC (rev 20008)
+++ strc-java/trunk/trans/java-optimize.str	2009-09-22 09:19:00 UTC (rev 20009)
@@ -27,16 +27,7 @@
 
   // TODO: Proper copy propagation?
   
-/*
   optimize-assignments :
-    bstm* |[ x = e; y = x; bstm* ]| ->
-    bstm* |[ x = e; y = e; bstm* ]|
-    where
-      not(!e => ExprName(Id(x)))
-    ; <has-no-side-effects> e
-*/
-  
-  optimize-assignments :
     bstm* |[ x = e1; x = e2;  bstm* ]| ->
     bstm* |[         x = e2'; bstm* ]|
     where

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2009-09-22 09:04:40 UTC (rev 20008)
+++ strc-java/trunk/trans/s2j.str	2009-09-22 09:19:00 UTC (rev 20009)
@@ -492,7 +492,10 @@
     SDefT(x, s*, t*, s) ->
     |[ mod_override*
        public IStrategoTerm invoke(Context context, IStrategoTerm term, param*) {
-           boolean TRUE = true; // (ECJ 3.3 reachability detection bug workaround)
+           // As an ECJ 3.3 reachability detection bug workaround,
+           // we assign a non-final boolean TRUE to true
+           // TODO: only use boolean TRUE if -Xecj33 is passed
+           boolean TRUE = true;
            ITermFactory termFactory = context.getFactory();
            bstm_init*
            if (TRACES_ENABLED) context.push("~x");

Modified: strc-java/trunk/trans/strj-options.str
===================================================================
--- strc-java/trunk/trans/strj-options.str	2009-09-22 09:04:40 UTC (rev 20008)
+++ strc-java/trunk/trans/strj-options.str	2009-09-22 09:19:00 UTC (rev 20009)
@@ -70,13 +70,6 @@
       !"--ast              Produce abstract syntax tree of packed program"
     )
   <+
-    Option("--fast-pretty-printing" + "--fast-pp",
-      if-java-platform(warn(|"Fast pretty printing not available on Java"));
-      if-c-platform(rules(FastPrettyPrinting: _))
-    , !"--fast-pretty-printing | --fast-pp   pretty-print ugly and fast";
-      if-java-platform(fail)
-    )
-  <+
     Option("-F",           
       where(<set-config>("-F",())); !(),
       !"-F                 Produce core after front-end"
@@ -93,7 +86,20 @@
     Option("--asfix",
     where(<set-config>("--asfix",())); !(),
     !"--asfix            Concrete syntax parts are not imploded")
-    
+  <+
+    Option("--Xfast-pp",
+      if-java-platform(warn(|"Fast pretty printing not available on Java"));
+      if-c-platform(rules(FastPrettyPrinting: _))
+    , !"--Xfast-pp         Use the C-based ugly and fast pretty-printer";
+      if-java-platform(fail)
+    )
+  <+
+    Option("--Xecj33",
+      rules(OldECJCompatibility: _))
+    , !"--Xecj33           Generate code compatible with ECJ 3.3 and lower";
+      if-java-platform(fail)
+    )
+  
   <+ ArgOption(fail, fail, !"")
   <+ ArgOption(fail, fail, !"General options:")
   <+ ArgOption(fail, fail, !"")

Modified: strc-java/trunk/trans/strj.str
===================================================================
--- strc-java/trunk/trans/strj.str	2009-09-22 09:04:40 UTC (rev 20008)
+++ strc-java/trunk/trans/strj.str	2009-09-22 09:19:00 UTC (rev 20009)
@@ -1,5 +1,5 @@
 /**
- * Stratego compiler for Java
+ * Stratego compiler for Java.
  *
  * @author Lennart Kats
  */
@@ -49,6 +49,7 @@
     end
   ; try(mark-always-needed(|<get-config> "-m", 0, 0))
   ; strc-optimize
+  ; strc-output-frontend
   ; s2j
   ; with(clean-output-dir)
   ; log-timed(list-loop(output-java) | "Pretty printing succeeded", 1)



From L.C.L.Kats at tudelft.nl  Tue Sep 22 18:46:01 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 22 Sep 2009 16:46:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20010 - LennartKats -
	in sglr-recovery/trunk: permissive-grammars/trans/make-permissive
	recovery-runtime/src/sglrbridges
Message-ID: <200909221646.n8MGk1h8008887@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-22 16:46:01 +0000 (Tue, 22 Sep 2009)
New Revision: 20010

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20010&view=rev

Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr
   sglr-recovery/trunk/recovery-runtime/src/sglrbridges/StandardParser.java

Log:


Changes:

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-09-22 09:19:00 UTC (rev 20009)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-09-22 16:46:01 UTC (rev 20010)
@@ -113,28 +113,28 @@
 
 strategies
 
-  add-permissive-sections =
-    definition(one(add-permissive-sections))
+  add-permissive-sections:
+    definition(modules) -> definition(modules')
+    with
+      input-length := <collect(?prod(_, _, _)); length>;
+      log(|Info(), ["Number of productions to analyze: ", input-length]);
+      
+      // Analyze all sections, but only add results to the first
+      modules' := <one(add-permissive-sections)> modules
 
   add-permissive-sections:
     "module"#([name, x, sections]) ->
     "module"#([name, x, sections'])
     with
-      added := id.all-permissive-sections;
-      show-statistics(|sections, added);
+      added         := id.all-permissive-sections;
+      output-length := <collect(?prod(_, _, _)); length> added;
+      log(|Info(), ["Number of productions generated:  ", output-length]);
+      
       !sections;
       try(oncetd(
         \exports(e*) -> exports(conc-grammars(added, e*))\
       ));
       ?sections'
-  
-  show-statistics(|input-sections, output-sections) =
-    with(
-      input-length  := <collect-all(?prod(_, _, _)); length> input-sections;
-      output-length := <collect-all(?prod(_, _, _)); length> output-sections;
-      log(|Info(), ["Number of rules analyzed:  ", input-length]);
-      log(|Info(), ["Number of rules generated: ", output-length])
-    )
 
   rename-main-module:
     "module"#([unparameterized(name),  x, sections]) ->

Modified: sglr-recovery/trunk/recovery-runtime/src/sglrbridges/StandardParser.java
===================================================================
--- sglr-recovery/trunk/recovery-runtime/src/sglrbridges/StandardParser.java	2009-09-22 09:19:00 UTC (rev 20009)
+++ sglr-recovery/trunk/recovery-runtime/src/sglrbridges/StandardParser.java	2009-09-22 16:46:01 UTC (rev 20010)
@@ -39,7 +39,7 @@
 			InvalidParseTableException {
 		
 		parser = new StandAloneSGLRI(null, parseTable, startSymbol, USE_CSGLR);
-		parser.getDisambiguator().setFilterAny(false);
+		if (!USE_CSGLR) parser.getDisambiguator().setFilterAny(false);
 		parser.setKeepAmbiguities(true); // XXX: is this a good idea, without filters?
 		
 		this.startSymbol = startSymbol;



From L.C.L.Kats at tudelft.nl  Tue Sep 22 18:47:16 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 22 Sep 2009 16:47:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20011 - LennartKats -
	in spoofax-imp/trunk:
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
Message-ID: <200909221647.n8MGlG5s008898@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-22 16:47:16 +0000 (Tue, 22 Sep 2009)
New Revision: 20011

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20011&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java

Log:
- Generated build.xml: use strategoxt.jar to build the .ctree, to help portability and since we depend on Stratego 0.18
- Correct main strategy name in generated Stratego module

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-22 16:46:01 UTC (rev 20010)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-22 16:47:16 UTC (rev 20011)
@@ -183,33 +183,32 @@
             </apply>
         </target>
     
-        <!-- C-based Stratego compilation (unused) -->
-        <target name="stratego.c">
-            <antcall target="stratego.helper">
-                <param name="build.stratego.outputpath" value="include"/>
-                <param name="build.stratego.extraargs" value=""/>
-                <param name="build.stratego.extension" value="*"/>
-                <param name="build.stratego.compiler" value="strc"/>
-            </antcall>
-        </target>
-    
-        <!-- Stratego interpreter target -->
+        <!-- Stratego to Java interpreter -->
         <target name="stratego.ctree">
-            <antcall target="stratego.helper">
-                <param name="build.stratego.outputpath" value="include"/>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                  <include name="**/*.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/{strmodule}.ctree"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>            
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
                 <param name="build.stratego.extraargs" value="-F --library"/>
-                <param name="build.stratego.extension" value="*.ctree"/>
+                <param name="build.stratego.extension" value="ctree"/>
                 <param name="build.stratego.compiler" value="strc"/>
             </antcall>
         </target>
     
+        <!-- Stratego to Java compiler -->
         <target name="stratego.java" depends="stratego.java.native,stratego.java.jvm"/>
     
         <target name="stratego.java.native" if="build.stratego.usenativestrj"> 
             <antcall target="stratego.helper">
-                <param name="build.stratego.outputpath" value="${src-gen}"/>
+                <param name="build.stratego.outputpath" value="${basedir}/${src-gen}"/>
                 <param name="build.stratego.extraargs" value="-la java-front"/>
-                <param name="build.stratego.extension" value="*.java"/>
+                <param name="build.stratego.extension" value="java"/>
                 <param name="build.stratego.compiler" value="strj"/>
             </antcall>
         </target>
@@ -223,29 +222,44 @@
             </dependset>
             <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
             <antcall target="copy-jar"/>
-            <antcall target="stratego.java.jvm.helper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
+                <param name="build.stratego.extraargs" value="-la java-front"/>
+                <param name="build.stratego.extension" value="java"/>
+            </antcall>
             <javac classpath="aux/strategoxt.jar${externaljarimport}" srcdir="${src-gen}/trans" destdir="${build}" source="1.5" debug="on"/>
-            <jar basedir="${build}" includes="trans/**" destfile="include/trans.jar"/>
+            <jar basedir="${build}" includes="trans/**" destfile="include/${strmodule}.jar"/>
         </target>
             
-        <target name="stratego.java.jvm.helper" depends="aux-files,rtg2sig" unless="strc-java.available">
+        <target name="stratego.jvm.helper" depends="aux-files,rtg2sig" unless="strc-java.available">
             <java classname="org.strategoxt.strj.Main" classpath="aux/strategoxt.jar:aux/sdf2imp.jar" failonerror="true">
                 <arg value="-i"/>
                 <arg value="${trans}/${strmodule}.str"/>
                 <arg value="-o"/>
-                <arg value="${src-gen}/trans/${strmodule}.java"/>
+                <arg value="${build.stratego.outputpath}/${strmodule}.${build.stratego.extension}"/>
                 <arg value="-p"/>
                 <arg value="trans"/>
                 <arg value="-clean"/>
-                <arg line="${build.stratego.args} -la java-front"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
                 <arg line="${externaljarflags}"/>
                 <arg line="${externaldefimport}"/>
             </java>
             <mkdir dir="${build}/trans"/>
         </target>
+                
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
         
         <!-- Helper target for calling the stratego compiler -->
-        <target name="stratego.helper" depends="rtg2sig" if="build.stratego.enabled">
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
             <apply executable="${build.strategoxt}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
@@ -256,7 +270,7 @@
                 <arg line="${externaldefimport}"/>
                 
                 <fileset file="${trans}/${strmodule}.str"/>
-                <mapper type="glob" from="*.str" to="${build.stratego.extension}"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
             </apply>
         </target>
         
@@ -265,4 +279,4 @@
             <delete file="${src-gen}/trans/Main.java"/>
         </target>
     </project>
-    <%
\ No newline at end of file
+    <%

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str	2009-09-22 16:46:01 UTC (rev 20010)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str	2009-09-22 16:47:16 UTC (rev 20011)
@@ -28,7 +28,7 @@
 
 strategies
 
-  main-entities =
+  main-", name, " =
     fatal-err(|\"No main strategy\")
   
   editor-analyze:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java	2009-09-22 16:46:01 UTC (rev 20010)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java	2009-09-22 16:47:16 UTC (rev 20011)
@@ -56,7 +56,11 @@
 	}
 	
 	public Disambiguator getDisambiguator() {
-		throw new NotImplementedException();
+        if (parser instanceof JSGLRI) {
+            return ((JSGLRI) parser).getDisambiguator();
+        } else {
+            throw new UnsupportedOperationException("C-SGLR does not provide a disambiguator configuration object");
+        }
 	}
 	
 	public void setStartSymbol(String startSymbol) {



From R.B.Vermaas at tudelft.nl  Wed Sep 23 09:04:19 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 23 Sep 2009 07:04:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20012 - rob -
	strategoxt/trunk/sdf-front/parse
Message-ID: <200909230704.n8N74JuF020329@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-23 07:04:19 +0000 (Wed, 23 Sep 2009)
New Revision: 20012

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20012&view=rev

Modified:
   strategoxt/trunk/sdf-front/parse/sdf-desugar.str
   strategoxt/trunk/sdf-front/parse/sdf-ensugar.str

Log:
 * use libstratego-sglr in stead of Sdf2 signature. to allow static linking

Changes:

Modified: strategoxt/trunk/sdf-front/parse/sdf-desugar.str
===================================================================
--- strategoxt/trunk/sdf-front/parse/sdf-desugar.str	2009-09-22 16:47:16 UTC (rev 20011)
+++ strategoxt/trunk/sdf-front/parse/sdf-desugar.str	2009-09-23 07:04:19 UTC (rev 20012)
@@ -7,7 +7,7 @@
  * @author Martin Bravenboer <martin.bravenboer at gmail.com>
  */
 module sdf-desugar
-imports Sdf2 libstratego-lib libstratego-aterm
+imports libstratego-lib libstratego-aterm libstratego-sglr
 strategies
 
   main-sdf-desugar =

Modified: strategoxt/trunk/sdf-front/parse/sdf-ensugar.str
===================================================================
--- strategoxt/trunk/sdf-front/parse/sdf-ensugar.str	2009-09-22 16:47:16 UTC (rev 20011)
+++ strategoxt/trunk/sdf-front/parse/sdf-ensugar.str	2009-09-23 07:04:19 UTC (rev 20012)
@@ -7,7 +7,7 @@
  * @author Martin Bravenboer <martin.bravenboer at gmail.com>
  */
 module sdf-ensugar
-imports Sdf2 libstratego-lib libstratego-aterm
+imports libstratego-lib libstratego-aterm libstratego-sglr
 strategies
 
   main-sdf-ensugar =



From L.C.L.Kats at tudelft.nl  Wed Sep 23 10:28:01 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 23 Sep 2009 08:28:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20013 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <200909230828.n8N8S1fa021593@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-23 08:28:01 +0000 (Wed, 23 Sep 2009)
New Revision: 20013

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20013&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str

Log:
Pass absolute paths to Java in build.xml.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-23 07:04:19 UTC (rev 20012)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2009-09-23 08:28:01 UTC (rev 20013)
@@ -223,7 +223,7 @@
             <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
             <antcall target="copy-jar"/>
             <antcall target="stratego.jvm.helper">
-                <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
+                <param name="build.stratego.outputpath" value="${basedir}/${src-gen}/trans"/>
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
@@ -251,7 +251,7 @@
         <!-- Stratego to C-based native executable -->
         <target name="stratego.c">
             <antcall target="stratego.c.helper">
-                <param name="build.stratego.outputpath" value="include"/>
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
                 <param name="build.stratego.extraargs" value=""/>
                 <param name="build.stratego.extension" value=""/>
                 <param name="build.stratego.compiler" value="strc"/>



From L.C.L.Kats at tudelft.nl  Wed Sep 23 11:19:11 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 23 Sep 2009 09:19:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20014 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.generator/META-INF org.strategoxt.imp.updatesite
	org.strategoxt.imp.updatesite/features
	org.strategoxt.imp.updatesite/plugins
Message-ID: <200909230919.n8N9JBsP022326@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-23 09:19:11 +0000 (Wed, 23 Sep 2009)
New Revision: 20014

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20014&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/features/org.strategoxt.imp_0.1.0.2801.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/how-not-to.txt
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.generator_0.1.0.2801.jar
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.strj_0.2.1.jar
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
New update site revision.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-09-23 08:28:01 UTC (rev 20013)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2009-09-23 09:19:11 UTC (rev 20014)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.1.0.2800"
+      version="0.1.0.2801"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">
@@ -192,13 +192,13 @@
          id="org.strategoxt.strj"
          download-size="0"
          install-size="0"
-         version="0.2.0"/>
+         version="0.2.1"/>
 
    <plugin
          id="org.strategoxt.imp.generator"
          download-size="0"
          install-size="0"
-         version="0.1.0.2800"/>
+         version="0.1.0.2801"/>
 
    <plugin
          id="org.strategoxt.imp.editors.sdf"

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF	2009-09-23 08:28:01 UTC (rev 20013)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/META-INF/MANIFEST.MF	2009-09-23 09:19:11 UTC (rev 20014)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Spoofax/IMP Metatooling
 Bundle-SymbolicName: org.strategoxt.imp.generator;singleton:=true
-Bundle-Version: 0.1.0.2800
+Bundle-Version: 0.1.0.2801
 Bundle-ClassPath: lib/make_permissive.jar,
  lib/sdf2imp.jar
 Require-Bundle: org.spoofax.aterm,

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/features/org.strategoxt.imp_0.1.0.2801.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/features/org.strategoxt.imp_0.1.0.2801.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/how-not-to.txt
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/how-not-to.txt	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/how-not-to.txt	2009-09-23 09:19:11 UTC (rev 20014)
@@ -0,0 +1,13 @@
+Ways to Shoot Yourself in the Foot When Creating an Eclipse Update Site
+
+1.  DON'T strictly follow these steps; failure to do so at any point will result in various forms of fun unexplained or misleading failures at deployment time
+2.  DON'T update the versions of all involved plugins and the org.strategoxt.imp.feature project
+3.  DON'T open feature.xml in Eclipse and all versions to those in the projects using the "Versions" button
+4.  DON'T open site.xml in Eclipse and choose "Add Feature" and add the new feature (be sure you DON'T to put it in the category so it won't show up)
+5.  Or DON'T pick "Synchronize all" if you made an update site already
+6.  There is no number 6.
+7.  DON'T choose "Build All"; if you pick "Build" it will act like its building but won't build all plugins
+8.  Especially DON'T invoke your favorite deity through prayer and/or song at this point
+9.  When you upload the update site, be sure you DON'T skip artifacts.xml and content.xml so Eclipse will magically fail when updating
+10. If you're using a testing directory for updates, be sure you DON'T adapt site.xml with the new url
+11. Finally, to test it, DON'T use a clean Eclipse installation and DON'T use a clean workspace (Eclipse 3.4+ may do workspace-based caching!)

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.generator_0.1.0.2801.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.imp.generator_0.1.0.2801.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.strj_0.2.1.jar
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.updatesite/plugins/org.strategoxt.strj_0.2.1.jar
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2009-09-23 08:28:01 UTC (rev 20013)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2009-09-23 09:19:11 UTC (rev 20014)
@@ -12,5 +12,8 @@
    <feature url="features/org.strategoxt.imp_0.1.0.2800.jar" id="org.strategoxt.imp" version="0.1.0.2800">
       <category name="Spoofax/IMP"/>
    </feature>
+   <feature url="features/org.strategoxt.imp_0.1.0.2801.jar" id="org.strategoxt.imp" version="0.1.0.2801">
+      <category name="Spoofax/IMP"/>
+   </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP"/>
 </site>



From L.C.L.Kats at tudelft.nl  Wed Sep 23 11:21:29 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 23 Sep 2009 09:21:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20015 - LennartKats -
	in strc-java/trunk: META-INF java java/runtime/org/strategoxt
	java/runtime/org/strategoxt/lang
	java/runtime/org/strategoxt/lang/compat/override
	java/runtime/org/strategoxt/lang/parallel
	java/runtime/org/strategoxt/lang/parallel/collections
	java/runtime/org/strategoxt/lang/parallel/stratego_parallel
	test trans
Message-ID: <200909230921.n8N9LTmm022356@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-23 09:21:29 +0000 (Wed, 23 Sep 2009)
New Revision: 20015

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20015&view=rev

Added:
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.str
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/parallel_ordered_1_0.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/parallel_unordered_1_0.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/stratego_parallel.java
Removed:
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego_parallel.java
Modified:
   strc-java/trunk/META-INF/MANIFEST.MF
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/IThreadBoundCollection.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelCollectionLibrary.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelRead.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelSetCreate.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelTableCreate.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelWrite.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ThreadBoundHashMap.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ThreadBoundSet.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/Main.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelAll.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelContext.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelJob.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelJobAbortedException.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelJobExecutor.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/PureOperatorSet.java
   strc-java/trunk/test/Makefile.am
   strc-java/trunk/trans/s2j.str
   strc-java/trunk/trans/strj-options.str
   strc-java/trunk/trans/strj-parallel.str

Log:
- Renamed/moved libstratego_parallel to stratego_parallel
- Minor shotgun refactoring of the stratego_parallel library

Changes (first 1000 lines of the diffs):

Modified: strc-java/trunk/META-INF/MANIFEST.MF
===================================================================
--- strc-java/trunk/META-INF/MANIFEST.MF	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/META-INF/MANIFEST.MF	2009-09-23 09:21:29 UTC (rev 20015)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Stratego/XT Java runtime
 Bundle-SymbolicName: org.strategoxt.strj;singleton:=true
-Bundle-Version: 0.2
+Bundle-Version: 0.2.1
 Export-Package: .,
  aterm,
  aterm.pure,

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/Makefile.am	2009-09-23 09:21:29 UTC (rev 20015)
@@ -33,7 +33,9 @@
   lib/org/strategoxt/strc/Main.java \
   lib/org/strategoxt/java_front/Main.java
 
-nobase_pkgdata_DATA = $(LIBRARYJAVAS) $(COMPILERJAVAS) .ALLCLASSES
+nobase_pkgdata_DATA = \
+  runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.rtree \
+  $(LIBRARYJAVAS) $(COMPILERJAVAS) .ALLCLASSES
 
 CLEANFILES = \
   $(LIBRARYJAVAS) $(COMPILERJAVAS) \
@@ -160,8 +162,8 @@
 runtime/org/strategoxt/lang/compat/override/xtc_compat/Main.java : runtime/org/strategoxt/lang/compat/override/xtc-compat.str ../trans/strj
 	../trans/strj -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.xtc_compat -la stratego-lib -la stratego-xtc
 
-runtime/org/strategoxt/lang/compat/override/strc_compat/Main.java : runtime/org/strategoxt/lang/compat/override/strc-compat.str ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -I $(STRATEGOXT)/share/xtc -I $(STRATEGOXT)/share/stratego-lib -I $(JAVA_FRONT)/share/java-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.strc_compat -la stratego-lib -la stratego-xtc -la org.strategoxt.strc
+runtime/org/strategoxt/lang/compat/override/strc_compat/Main.java : runtime/org/strategoxt/lang/compat/override/strc-compat.str ../trans/strj runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.rtree
+	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -I $(STRATEGOXT)/share/xtc -I $(STRATEGOXT)/share/stratego-lib -I $(JAVA_FRONT)/share/java-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.strc_compat -la stratego-lib -la stratego-xtc -la org.strategoxt.strc -I runtime/org/strategoxt/lang/parallel/stratego_parallel
 
 ###### COMPILER #######
 

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -57,6 +57,10 @@
 		compiledContext = new HybridCompiledContext(termFactory);
 	}
 	
+	public static void main(String... args) {
+		// TODO: HybridInterpreter.main()
+	}
+	
 	@Override
 	protected org.spoofax.interpreter.core.Context createContext(ITermFactory termFactory, ITermFactory programFactory) {
 		return new HybridContext(termFactory, programFactory);

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -276,9 +276,9 @@
 
 	private static String argsToText(Object... args) {
 		if (args.length == 0)
-			return " (none)";
+			return "(none)";
 		
-		StringBuilder result = new StringBuilder(" (");
+		StringBuilder result = new StringBuilder("(");
 		boolean printedBar = false;
 
 		if (args[0] instanceof IStrategoTerm) {

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/strc-compat.str	2009-09-23 09:21:29 UTC (rev 20015)
@@ -26,7 +26,7 @@
         case "libstratego-aterm":    import-term(libstratego-aterm.rtree)
         case "libstratego-gpp":      import-term(libstratego-gpp.rtree)
         case "libstratego-tool-doc": import-term(libstratego-tool-doc.rtree)
-        case "libstratego-parallel": !Module("libstratego-parallel", [])
+        case "libstratego-parallel": import-term(libstratego-parallel.rtree)
         case "libstrc":              import-term(libstrc.rtree)
         case "lib":                  import-term(lib.rtree)
         case "liblib":               import-term(liblib.rtree)

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/IThreadBoundCollection.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/IThreadBoundCollection.java	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/IThreadBoundCollection.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -6,5 +6,5 @@
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public interface IThreadBoundCollection {
-
+	Thread getThread();
 }

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelCollectionLibrary.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelCollectionLibrary.java	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelCollectionLibrary.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -20,7 +20,7 @@
 import org.spoofax.interpreter.library.ssl.SSL_table_fold;
 import org.spoofax.interpreter.library.ssl.SSL_table_keys_fold;
 import org.spoofax.interpreter.library.ssl.SSL_table_values_fold;
-import org.strategoxt.lang.parallel.libstratego_parallel.ParallelJob;
+import org.strategoxt.lang.parallel.stratego_parallel.ParallelJob;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
@@ -53,6 +53,7 @@
 		add(new ParallelRead(this, new SSL_indexedSet_elements()));
 		add(new ParallelRead(this, new SSL_indexedSet_reset()));
 		add(new ParallelRead(this, new SSL_indexedSet_destroy()));
+		throw new IllegalStateException("we're actually using this");
 	}
 	
 	public void invalidateReads(Object collection) {

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelRead.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelRead.java	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelRead.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -6,8 +6,8 @@
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.lang.InteropContext;
-import org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel;
-import org.strategoxt.lang.parallel.libstratego_parallel.ParallelContext;
+import org.strategoxt.lang.parallel.stratego_parallel.ParallelContext;
+import org.strategoxt.lang.parallel.stratego_parallel.stratego_parallel;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
@@ -35,7 +35,7 @@
 	public boolean call(IContext env, Strategy[] sargs, IStrategoTerm[] targs)
 			throws InterpreterException {
 		
-		if (!libstratego_parallel.isActive()) {
+		if (!stratego_parallel.isActive()) {
 			return primitive.call(env, sargs, targs);
 		} else if (targs[tableIndex] instanceof IThreadBoundCollection) {
 			return primitive.call(env, sargs, targs);

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelSetCreate.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelSetCreate.java	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelSetCreate.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -7,7 +7,7 @@
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoInt;
 import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel;
+import org.strategoxt.lang.parallel.stratego_parallel.stratego_parallel;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
@@ -20,7 +20,7 @@
 	public boolean call(IContext env, Strategy[] sargs, IStrategoTerm[] targs)
 			throws InterpreterException {
 		
-		if (!libstratego_parallel.isActive()) {
+		if (!stratego_parallel.isActive()) {
 	        if (!(Tools.isTermInt(targs[0])))
 	            return false;
 	        if (!(Tools.isTermInt(targs[1])))

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelTableCreate.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelTableCreate.java	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelTableCreate.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -7,7 +7,7 @@
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoInt;
 import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel;
+import org.strategoxt.lang.parallel.stratego_parallel.stratego_parallel;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
@@ -20,7 +20,7 @@
 	public boolean call(IContext env, Strategy[] sargs, IStrategoTerm[] targs)
 			throws InterpreterException {
 		
-		if (!libstratego_parallel.isActive()) {
+		if (!stratego_parallel.isActive()) {
 	        if (!(Tools.isTermInt(targs[0])))
 	            return false;
 	        if (!(Tools.isTermInt(targs[1])))

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelWrite.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelWrite.java	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ParallelWrite.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -6,8 +6,8 @@
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.lang.InteropContext;
-import org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel;
-import org.strategoxt.lang.parallel.libstratego_parallel.ParallelContext;
+import org.strategoxt.lang.parallel.stratego_parallel.ParallelContext;
+import org.strategoxt.lang.parallel.stratego_parallel.stratego_parallel;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
@@ -35,7 +35,7 @@
 	public boolean call(IContext env, Strategy[] sargs, IStrategoTerm[] targs)
 			throws InterpreterException {
 		
-		if (!libstratego_parallel.isActive()) {
+		if (!stratego_parallel.isActive()) {
 			return primitive.call(env, sargs, targs);
 		} else if (targs[tableIndex] instanceof IThreadBoundCollection) {
 			return primitive.call(env, sargs, targs);

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ThreadBoundHashMap.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ThreadBoundHashMap.java	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ThreadBoundHashMap.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -26,5 +26,8 @@
 		assert thread == Thread.currentThread();
 		return super.put(key, value);
 	}
-
+	
+	public Thread getThread() {
+		return thread;
+	}
 }

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ThreadBoundSet.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ThreadBoundSet.java	2009-09-23 09:19:11 UTC (rev 20014)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/collections/ThreadBoundSet.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -26,5 +26,8 @@
 		assert thread == Thread.currentThread();
 		return super.put(value);
 	}
-
+	
+	public Thread getThread() {
+		return thread;
+	}
 }

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/Main.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/Main.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/Main.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -1,8 +1,10 @@
-package org.strategoxt.lang.parallel.libstratego_parallel;
+package org.strategoxt.lang.parallel.stratego_parallel;
 
+import org.strategoxt.lang.parallel.stratego_parallel.stratego_parallel;
+
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
  */
-public class Main extends libstratego_parallel {
+public class Main extends stratego_parallel {
 	// Placeholder class used when loaded by strj
 }

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelAll.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelAll.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelAll.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -1,9 +1,7 @@
-package org.strategoxt.lang.parallel.libstratego_parallel;
+package org.strategoxt.lang.parallel.stratego_parallel;
 
-import static java.lang.Math.*;
 import static org.spoofax.interpreter.terms.IStrategoTerm.*;
-import static org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel.*;
-import static org.strategoxt.lang.parallel.libstratego_parallel.ParallelJob.*;
+import static org.strategoxt.lang.parallel.stratego_parallel.stratego_parallel.*;
 
 import java.util.WeakHashMap;
 import java.util.concurrent.atomic.AtomicBoolean;
@@ -26,7 +24,7 @@
 
 	/**
 	 * Gets the active ParallelAll instance, or null.
-	 * Is set by {@link libstratego_parallel#init(Context)}.
+	 * Is set by {@link stratego_parallel#init(Context)}.
 	 */
 	public static ParallelAll instance;
 	
@@ -43,13 +41,19 @@
 
 	private AtomicInteger parallelismLevel = new AtomicInteger(0);
 	
-	private volatile boolean allowUnorderedOnce;
+	// TODO: ALLOW_NESTED_JOBS: isForcedParallel would have to apply to the current teer
+	private boolean isForcedParallel;
 	
+	private volatile boolean allowUnordered;
+	
 	@Override
 	public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s) {
 		// TODO: The focus thread could actually start more jobs, given a priority job queue
 		// TODO: Only trigger invokeParallel if synchronous execution takes longer than a certain threshold
-		if (ENABLED && (ALLOW_NESTED_JOBS || !libstratego_parallel.isActive()) && isCandidateTerm(context, current)) {
+		if (ENABLED && (ALLOW_NESTED_JOBS || !stratego_parallel.isActive())
+				&& (isForcedParallel || isCandidateTerm(context, current))) {
+			
+			isForcedParallel = false;
 			context.push("<parallel>");
 			IStrategoTerm result = invokeParallel(context, current, s);
 			
@@ -58,19 +62,27 @@
 			
 			return result;
 		} else {
+			// TODO: add array copying overhead for testing
+			current.getAllSubterms();
 			return super.invoke(context, current, s);
 		}
 	}
+	
+	public void setForcedParallel(boolean isForcedParallel) {
+		this.isForcedParallel = isForcedParallel;
+	}
+	
+	public ParallelJobExecutor getExecutor() {
+		return executor;
+	}
 
 	public IStrategoTerm invokeParallel(final Context context, final IStrategoTerm current, final Strategy s) {
-		// TODO: Cleanup - method got too long!!
 		final IStrategoTerm[] inputs = current.getAllSubterms();
 		final IStrategoTerm[] outputs = new IStrategoTerm[inputs.length];
 		final AtomicInteger focusIndex = new AtomicInteger(0); // index of the job with side effects
 		final AtomicBoolean isAborted = new AtomicBoolean(false);
 		final AtomicReference<String> lastSynchronousOperation = DIAGNOSE_SYNCHRONOUS_OPERATIONS ? new AtomicReference<String>() : null;
-		final AtomicReference<Throwable> exception = new AtomicReference<Throwable>();
-		final Object notifier = new Object();
+		final AtomicReference<Throwable> lastException = new AtomicReference<Throwable>();
 		final boolean allowUnordered;
 		
 		ParallelJob firstJob = null;
@@ -79,17 +91,16 @@
 			int level = parallelismLevel.incrementAndGet();
 			// We can only do this if there are no other parallel jobs active,
 			// otherwise we'd get confused about the place unordered is allowed
-			allowUnordered = level == 1 && allowUnorderedOnce;
-			allowUnorderedOnce = false;
+			allowUnordered = level == 1 && this.allowUnordered;
+			this.allowUnordered = false;
 		} else {
-			libstratego_parallel.setActive(true);
-			allowUnordered = allowUnorderedOnce;
-			allowUnorderedOnce = false;
+			stratego_parallel.setActive(true);
+			allowUnordered = this.allowUnordered;
 		}
 		
 		try {
 			double jobLengthPrecise = (double) inputs.length / (executor.getMaximumPoolSize() + 1) * jobLengthMultiplier;
-			int jobLength = max(1, (int) jobLengthPrecise);
+			int jobLength = 1 + (int) jobLengthPrecise;
 			
 			if (VERBOSE)
 				System.out.print("<" + inputs.length / jobLength);
@@ -97,39 +108,7 @@
 			// Initialize job queue
 			for (int i = 0; i < inputs.length; i += jobLength) {
 				final int index = i;
-				ParallelJob job = new ParallelJob(inputs, outputs, index, jobLength, parallelismLevel.get(), focusIndex, notifier) {
-					@Override
-					public IStrategoTerm execute(IStrategoTerm input) {
-						if (isAborted.get()) return null;
-
-						IStrategoTerm result = null;
-						try {
-							ParallelContext parallelContext = new ParallelContext(context, executor, this, isAborted, allowUnordered);
-							if (DIAGNOSE_SYNCHRONOUS_OPERATIONS)
-								parallelContext.setLastSynchronousOperation(lastSynchronousOperation);
-							result = s.invoke(parallelContext, input);
-							
-						} catch (ParallelJobAbortedException e) {
-							// Fine here
-						} catch (RuntimeException e) {
-							exception.set(e);
-						} catch (Error e) {
-							exception.set(e);
-						}
-						
-						if (result == null) {
-							isAborted.set(true);
-							getFocusIndex().set(COMPLETED_FOCUS_INDEX);
-							executor.getQueue().clear();
-							synchronized (notifier) {
-								if (VERBOSE) System.out.print("!>");
-								notifier.notifyAll();
-							}
-						}
-						
-						return result;
-					}
-				};
+				ParallelJob job = new ParallelJob(context, s, inputs, outputs, focusIndex, isAborted, lastSynchronousOperation, lastException, allowUnordered, index, jobLength, parallelismLevel.get());
 				
 				if (firstJob == null) {
 					firstJob = job;
@@ -138,15 +117,14 @@
 				}
 			}
 			
-			assert firstJob != null;
 			firstJob.run();
-
-			joinExecutor(focusIndex, notifier);
+			executor.join();
+			firstJob.waitForCompletedFocusIndex();
 		} catch (InterruptedException e) {
 			throw new RuntimeException(e);
 		} finally {
 			if (ALLOW_NESTED_JOBS) parallelismLevel.decrementAndGet();
-			else libstratego_parallel.setActive(false);
+			else stratego_parallel.setActive(false);
 		}
 		
 		if (DIAGNOSE_SYNCHRONOUS_OPERATIONS) {
@@ -154,34 +132,24 @@
 		}
 		
 		if (isAborted.get()) {
-			if (exception.get() != null) {
-				if (exception.get() instanceof StrategoExit) {
-					throw new StrategoExit((StrategoExit) exception.get());
+			if (lastException.get() != null) {
+				if (lastException.get() instanceof StrategoExit) {
+					throw new StrategoExit((StrategoExit) lastException.get());
 				} else {
-					throw new StrategoException("Exception in asynchronous job", exception.get());
+					throw new StrategoException("Exception in asynchronous job", lastException.get());
 				}
 			}
 			return null;
 		}
 		
 		assert current.getTermType() == LIST;
-		return context.getFactory().replaceList(outputs, (IStrategoList) current);
+		// TODO: return context.getFactory().replaceList(outputs, (IStrategoList) current);
+		return context.getFactory().makeList(outputs);
 	}
 	
-	public void setAllowUnorderedOnce(boolean allowUnorderedOnce) {
-		this.allowUnorderedOnce = allowUnorderedOnce;
+	public void setAllowUnordered(boolean allowUnorderedOnce) {
+		this.allowUnordered = allowUnorderedOnce;
 	}
-
-	private void joinExecutor(AtomicInteger focusIndex, Object notifier) throws InterruptedException {
-		// Help the thread pool
-		Runnable job;
-		while ((job = executor.getQueue().poll()) != null) {
-			job.run();
-		}
-		
-		// Wait for other threads
-		ParallelJob.waitForFocusIndex(focusIndex, COMPLETED_FOCUS_INDEX, notifier);
-	}
 	
 	protected boolean isCandidateTerm(Context context, IStrategoTerm term) {
 		if (term.getTermType() == LIST

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelContext.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelContext.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelContext.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -1,4 +1,4 @@
-package org.strategoxt.lang.parallel.libstratego_parallel;
+package org.strategoxt.lang.parallel.stratego_parallel;
 
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.atomic.AtomicReference;
@@ -7,16 +7,18 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.lang.Context;
 import org.strategoxt.lang.Strategy;
+import org.strategoxt.lang.parallel.stratego_parallel.ParallelJob;
+import org.strategoxt.lang.parallel.stratego_parallel.ParallelJobAbortedException;
+import org.strategoxt.lang.parallel.stratego_parallel.ParallelJobExecutor;
+import org.strategoxt.lang.parallel.stratego_parallel.PureOperatorSet;
 
-import static org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel.*;
+import static org.strategoxt.lang.parallel.stratego_parallel.stratego_parallel.*;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public class ParallelContext extends Context {
 	
-	private final ParallelJobExecutor executor;
-	
 	private final ParallelJob job;
 	
 	private final AtomicBoolean isAborted;
@@ -29,16 +31,14 @@
 	 * Constructs a new parallelism-aware context.
 	 * 
 	 * @param context
-	 * @param executor
 	 * @param job
 	 * @param aborted
 	 * @param allowUnordered
 	 *            Allows all threads to use any operation, using locks for
 	 *            non-whitelisted ones.
 	 */
-	public ParallelContext(Context context, ParallelJobExecutor executor, ParallelJob job, AtomicBoolean aborted, boolean allowUnordered) {
+	public ParallelContext(Context context, ParallelJob job, AtomicBoolean aborted, boolean allowUnordered) {
 		super(context.getFactory(), context.getOperatorRegistryMap(), context.getOperatorRegistries(), true);
-		this.executor = executor;
 		this.job = job;
 		this.isAborted = aborted;
 		this.allowUnordered = allowUnordered;
@@ -81,26 +81,32 @@
 		}
 		
 		if (allowUnordered) {
-			synchronized (executor) {
+			synchronized (ParallelAll.instance.getExecutor()) {
 				return super.invokePrimitive(primitive, term, args, targs);
 			}
 		}
 		
 		// If all else fails, perform any "black-listed" operations in an ordered fashion
-		System.out.println(":(" + name + "):");
 		waitForFocus();
 		
 		return super.invokePrimitive(primitive, term, args, targs);
 	}
 	
-	public ParallelJob getJob() {
+	public final ParallelJob getJob() {
 		return job;
 	}
 	
 	/**
 	 * Puts the current thread into an idle state until it becomes the focus thread.
+	 * 
+	 * @see ParallelJob#isFocusJob()
 	 */
 	public void waitForFocus() {
+		// HACK: no waiting for focus if allowUnordered true
+		if (allowUnordered || job.isFocusJob())
+			return;
+		
+		ParallelJobExecutor executor = ParallelAll.instance.getExecutor();
 		executor.asyncBeginSleep();
 		try {
 			job.waitForFocus();

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelJob.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelJob.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelJob.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -1,33 +1,47 @@
-package org.strategoxt.lang.parallel.libstratego_parallel;
+package org.strategoxt.lang.parallel.stratego_parallel;
 
 import static java.lang.Math.*;
-import static org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel.*;
+import static org.strategoxt.lang.parallel.stratego_parallel.stratego_parallel.*;
 
+import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.atomic.AtomicInteger;
+import java.util.concurrent.atomic.AtomicReference;
 
 import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
  */
-public abstract class ParallelJob implements Runnable, Comparable<ParallelJob> {
+public class ParallelJob implements Runnable, Comparable<ParallelJob> {
 	
 	public static final int COMPLETED_FOCUS_INDEX = Integer.MAX_VALUE;
 	
+	private final Context parentContext;
+	
+	private final Strategy strategy;
+	
 	private final IStrategoTerm[] inputs;
 	
 	private final IStrategoTerm[] outputs;
 	
+	private final AtomicInteger focusIndex;
+	
+	private final AtomicBoolean isAborted;
+	
+	private final AtomicReference<String> lastSynchronousOperation;
+	
+	private final AtomicReference<Throwable> lastException;
+	
+	private final boolean allowUnordered;
+	
 	private final int startIndex;
 	
 	private final int jobLength;
 	
 	private final int parallelismLevel;
 	
-	private final AtomicInteger focusIndex;
-	
-	private final Object notifier;
-	
 	private boolean isFocusJob;
 	
 	/**
@@ -38,26 +52,38 @@
 	 * @param startIndex	The starting index in <code>inputs</code> to process.
 	 * @param jobLength		The number of entries in <code>inputs</code> to process.
 	 * @param focusIndex	The index of the focus job.
-	 * @param notifier		An object used for synchronization and event notification.
 	 */
-	public ParallelJob(IStrategoTerm[] inputs, IStrategoTerm[] outputs,
-			int startIndex, int jobLength, int parallelismLevel, AtomicInteger focusIndex, Object notifier) {
+	public ParallelJob(Context parentContext, Strategy strategy, IStrategoTerm[] inputs,
+			IStrategoTerm[] outputs, AtomicInteger focusIndex,
+			AtomicBoolean isAborted,
+			AtomicReference<String> lastSynchronousOperation,
+			AtomicReference<Throwable> lastException, boolean allowUnordered,
+			int startIndex, int jobLength, int parallelismLevel) {
 		
+		// TODO: put fields shared accross jobs in a separate configuration object?
+		this.parentContext = parentContext;
+		this.strategy = strategy;
 		this.inputs = inputs;
 		this.outputs = outputs;
+		this.focusIndex = focusIndex;
+		this.isAborted = isAborted;
+		this.lastSynchronousOperation = lastSynchronousOperation;
+		this.lastException = lastException;
+		this.allowUnordered = allowUnordered;
+		
 		this.startIndex = startIndex;
 		this.jobLength = jobLength;
 		this.parallelismLevel = parallelismLevel;
-		this.focusIndex = focusIndex;
-		this.notifier = notifier;
 	}
 
 	public final void run() {
 		if (VERBOSE) System.out.print('.');
 		int end = min(inputs.length, startIndex + jobLength);
+		
+		ParallelContext context = new ParallelContext(parentContext, this, isAborted, allowUnordered);
 			
 		for (int i = startIndex; i < end; i++) {
-			IStrategoTerm result = execute(inputs[i]);
+			IStrategoTerm result = execute(context, inputs[i]);
 			if (result == null) break;
 			outputs[i] = result;
 		}
@@ -74,15 +100,29 @@
 		}
 	}
 	
-	public AtomicInteger getFocusIndex() {
+	public final AtomicInteger getFocusIndex() {
 		return focusIndex;
 	}
+	
+	/**
+	 * Gets the object used to dispatch wait/notify events about the focus index.
+	 */
+	protected final Object getFocusIndexMonitor() {
+		return focusIndex;
+	}
+	
+	public final int getStartIndex() {
+		return startIndex;
+	}
 
+	/**
+	 * Updates the focus index to that of the youngest, non-completed job,
+	 */
 	private void updateFocusIndex() {
 		if (focusIndex.get() == COMPLETED_FOCUS_INDEX) return;
 		
 		// synchronized here ensures ordered writes to 'outputs'
-		synchronized (notifier) {
+		synchronized (getFocusIndexMonitor()) {
 			int oldFocusIndex = focusIndex.get();
 			if (oldFocusIndex == COMPLETED_FOCUS_INDEX) return;
 			int newFocusIndex = oldFocusIndex;
@@ -94,7 +134,7 @@
 				}
 				if (outputs[lastJob] == null) {
 					if (newFocusIndex > oldFocusIndex) {
-						notifier.notifyAll();
+						getFocusIndexMonitor().notifyAll();
 					}
 					return;
 				}
@@ -102,12 +142,44 @@
 			}
 			
 			focusIndex.set(COMPLETED_FOCUS_INDEX);
-			if (VERBOSE) System.out.print(">");
-			notifier.notifyAll();
+			getFocusIndexMonitor().notifyAll();
 		}
+		if (VERBOSE) System.out.print(">");
 	}
 	
-	public abstract IStrategoTerm execute(IStrategoTerm input);
+	public IStrategoTerm execute(ParallelContext context, IStrategoTerm input) {
+		if (isAborted.get()) return null;
+
+		IStrategoTerm result = null;
+		try {
+			if (DIAGNOSE_SYNCHRONOUS_OPERATIONS)
+				context.setLastSynchronousOperation(lastSynchronousOperation);
+			result = strategy.invoke(context, input);
+			
+		} catch (ParallelJobAbortedException e) {
+			// Fine here
+		} catch (RuntimeException e) {
+			lastException.set(e);
+		} catch (Error e) {
+			lastException.set(e);
+		}
+		
+		if (result == null) {
+			isAborted.set(true);
+			getFocusIndex().set(COMPLETED_FOCUS_INDEX);
+			if (ALLOW_NESTED_JOBS) {
+				// TODO: ALLOW_NESTED_JOBS: Not sure what to do in this case
+			} else {
+				ParallelAll.instance.getExecutor().getQueue().clear();
+			}
+			if (VERBOSE) System.out.print("@>");
+			synchronized (getFocusIndexMonitor()) {
+				getFocusIndexMonitor().notifyAll();
+			}
+		}
+		
+		return result;
+	}
 	
 	/**
 	 * Checks if the current job is executed in the focus thread.
@@ -124,31 +196,35 @@
 	 */
 	public void waitForFocus() throws InterruptedException {
 		if (!isFocusJob) {
-			waitForFocusIndexEagerly();
+			waitForFocusIndexAndComplain();
 			if (ADJUST_FOCUS_THREAD_PRIORITY)
 				Thread.currentThread().setPriority(Thread.MAX_PRIORITY);
 			isFocusJob = true;
 		}
 	}
 
-	private void waitForFocusIndexEagerly() throws InterruptedException {
+	private void waitForFocusIndexAndComplain() throws InterruptedException {
 		if (focusIndex.get() < startIndex) {
-			synchronized (notifier) {
+			Object monitor = getFocusIndexMonitor();
+			synchronized (monitor) {
 				updateFocusIndex();
 				while (focusIndex.get() < startIndex) {
 					if (VERBOSE) System.out.print('$');
-					notifier.wait();
+					monitor.wait();
 				}
 			}
 		}
 	}
 
-	protected static void waitForFocusIndex(AtomicInteger focusIndex, int index, Object notifier) throws InterruptedException {
-		if (focusIndex.get() < index) {
-			synchronized (notifier) {
-				while (focusIndex.get() < index) {
-					notifier.wait();
-				}
+	protected void waitForCompletedFocusIndex() throws InterruptedException {
+		int SPINWAIT_CYCLES = 1000;
+		for (int i = 0; i < SPINWAIT_CYCLES; i++) {
+			if (focusIndex.get() == COMPLETED_FOCUS_INDEX) return;
+		}
+		Object monitor = getFocusIndexMonitor();
+		synchronized (monitor) {
+			while (focusIndex.get() != COMPLETED_FOCUS_INDEX) {
+				monitor.wait();
 			}
 		}
 	}

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelJobAbortedException.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelJobAbortedException.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelJobAbortedException.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -1,4 +1,4 @@
-package org.strategoxt.lang.parallel.libstratego_parallel;
+package org.strategoxt.lang.parallel.stratego_parallel;
 
 import org.strategoxt.lang.StrategoException;
 

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelJobExecutor.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/ParallelJobExecutor.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/ParallelJobExecutor.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -1,7 +1,9 @@
-package org.strategoxt.lang.parallel.libstratego_parallel;
+package org.strategoxt.lang.parallel.stratego_parallel;
 
-import static org.strategoxt.lang.parallel.libstratego_parallel.libstratego_parallel.*;
+import static org.strategoxt.lang.parallel.stratego_parallel.stratego_parallel.*;
 
+import java.util.concurrent.ArrayBlockingQueue;
+import java.util.concurrent.BlockingQueue;
 import java.util.concurrent.PriorityBlockingQueue;
 import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
@@ -9,6 +11,8 @@
 import org.spoofax.jsglr.NotImplementedException;
 
 /**
+ * Executes jobs, in parallel.
+ * 
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public class ParallelJobExecutor extends ThreadPoolExecutor {
@@ -24,11 +28,19 @@
 	}
 	
 	public ParallelJobExecutor(int activeThreads, int maxThreads) {
-		super(activeThreads - 1, maxThreads - 1, 60L, TimeUnit.SECONDS, new PriorityBlockingQueue<Runnable>());
+		super(activeThreads - 1, maxThreads - 1, 60L, TimeUnit.SECONDS, createQueue());
 		isConstantPoolSize = activeThreads == maxThreads;
 		this.asyncPoolSize = activeThreads;
 		this.asyncMaxPoolSize = maxThreads;
 	}
+
+	private static BlockingQueue<Runnable> createQueue() {
+		final int capacity = 2 * (int) (DEFAULT_MAX_THREADS / DEFAULT_JOB_LENGTH_MULTIPLIER);
+		return ALLOW_NESTED_JOBS
+			? new PriorityBlockingQueue<Runnable>()
+			: // TODO: job queue size should depend on actual max. jobs
+			  new ArrayBlockingQueue<Runnable>(capacity, true);
+	}
 	
 	@Override
 	public synchronized int getCorePoolSize() {
@@ -51,6 +63,18 @@
 	}
 	
 	/**
+	 * Joins the thread pool of this executor,
+	 * executing jobs until the queue is empty.
+	 */
+	public void join() {
+		Runnable job;
+		BlockingQueue<Runnable> queue = getQueue();
+		while ((job = queue.poll()) != null) {
+			job.run();
+		}
+	}
+	
+	/**
 	 * Indicates that a thread is going into an inactive state.
 	 * Must be executed from a worker thread, and balanced
 	 * with {@link #asyncEndSleep()};

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/PureOperatorSet.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/PureOperatorSet.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/PureOperatorSet.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -1,4 +1,4 @@
-package org.strategoxt.lang.parallel.libstratego_parallel;
+package org.strategoxt.lang.parallel.stratego_parallel;
 
 import java.util.HashSet;
 

Added: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.str	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.str	2009-09-23 09:21:29 UTC (rev 20015)
@@ -0,0 +1,8 @@
+module libstratego-parallel
+
+strategies
+
+  external parallel-ordered(s|)
+  
+  external parallel-unordered(s|)
+


Property changes on: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.str
___________________________________________________________________
Added: svn:mergeinfo
   + 

Deleted: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego_parallel.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/libstratego_parallel/libstratego_parallel.java	2009-09-18 12:24:58 UTC (rev 20001)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego_parallel.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -1,76 +0,0 @@
-package org.strategoxt.lang.parallel.libstratego_parallel;
-
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.lang.Context;
-import org.strategoxt.lang.SRTS_all;
-import org.strategoxt.lang.Strategy;
-
-/**
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class libstratego_parallel {
-	
-	protected static final boolean ENABLED = true;
-	
-	protected static final boolean VERBOSE = true;
-	
-	protected static final boolean DIAGNOSE_SYNCHRONOUS_OPERATIONS = false;
-	
-	protected static final int DEFAULT_ACTIVE_THREADS = 4;
-	
-	protected static final int DEFAULT_MAX_THREADS = 4;
-	
-	protected static final int DEFAULT_TERM_SIZE_THRESHOLD = 3200;
-	
-	protected static final int DEFAULT_SUBTERM_COUNT_THRESHOLD = 12;
-	
-	protected static final double DEFAULT_JOB_LENGTH_MULTIPLIER = 1; // .5;
-	
-	protected static final boolean ALLOW_NESTED_JOBS = false;
-	
-	protected static final boolean ADJUST_FOCUS_THREAD_PRIORITY = false;
-	
-	private static boolean isInitialized;
-	
-	private static boolean isActive;
-	
-	public static void init(Context context) {
-		if (isInitialized || !ENABLED) return;
-		isInitialized = true;
-		
-		ParallelAll.instance = new ParallelAll();
-		SRTS_all.instance = ParallelAll.instance;
-		
-		// TODO: print intro message only for --verbose 2
-		System.err.println("[ libstratego-parallel ] using "
-				+ DEFAULT_ACTIVE_THREADS
-				+ (DEFAULT_MAX_THREADS != DEFAULT_ACTIVE_THREADS ? "/" + DEFAULT_MAX_THREADS : "")
-				+ " threads,"
-				+ " jobsize " + DEFAULT_JOB_LENGTH_MULTIPLIER
-				+ (ADJUST_FOCUS_THREAD_PRIORITY ? " (priority focus thread)" : "")
-				+ (DIAGNOSE_SYNCHRONOUS_OPERATIONS ? " (diagnose sync. ops)" : "")
-				);
-	}
-	
-	public static boolean isActive() {
-		return isActive;
-	}
-	
-	protected static void setActive(boolean value) {
-		isActive = value;
-	}
-	
-	public static class parallel_unordered_0_0 extends Strategy {
-		public static parallel_unordered_0_0 instance = new parallel_unordered_0_0();
-		
-		@Override
-		public IStrategoTerm invoke(Context context, IStrategoTerm current, Strategy s) {
-			ParallelAll.instance.setAllowUnorderedOnce(true);
-			try {
-				return s.invoke(context, current, s);
-			} finally {
-				ParallelAll.instance.setAllowUnorderedOnce(false);
-			}
-		}
-	}
-}

Added: strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/parallel_ordered_1_0.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/parallel_ordered_1_0.java	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/parallel/stratego_parallel/parallel_ordered_1_0.java	2009-09-23 09:21:29 UTC (rev 20015)
@@ -0,0 +1,19 @@
+package org.strategoxt.lang.parallel.stratego_parallel;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**

(182 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Wed Sep 23 16:30:34 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 23 Sep 2009 14:30:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20016 - LennartKats -
	sglr-recovery/trunk/permissive-grammars
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive
	spoofax-imp/trunk/org.strategoxt.imp.generator/lib
Message-ID: <200909231430.n8NEUYkp027255@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-23 14:30:33 +0000 (Wed, 23 Sep 2009)
New Revision: 20016

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20016&view=rev

Modified:
   sglr-recovery/trunk/permissive-grammars/Makefile
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar

Log:
Enabled open-brace insertion rules by default.

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/Makefile
===================================================================
--- sglr-recovery/trunk/permissive-grammars/Makefile	2009-09-23 09:21:29 UTC (rev 20015)
+++ sglr-recovery/trunk/permissive-grammars/Makefile	2009-09-23 14:30:33 UTC (rev 20016)
@@ -51,7 +51,7 @@
 	$(MAKE) -C trans/make-permissive make_permissive.jar
 	
 %-Permissive.gendef : %.def trans/make-permissive/make-permissive 
-	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on
+	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --open-insertions off
 	
 %-Permissive-WaterOnly.gendef : %.def trans/make-permissive/make-permissive 
 	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --insertions off

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-09-23 09:21:29 UTC (rev 20015)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-09-23 14:30:33 UTC (rev 20016)
@@ -62,7 +62,7 @@
   options =
     SwitchOption(|
       OPEN_INSERTIONS_ON()
-    , "off"
+    , "on"
     , "Add recovery rules for opening braces"
     )
   + SwitchOption(|

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Wed Sep 23 19:13:14 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 23 Sep 2009 17:13:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20017 - LennartKats -
	in aster/trunk: runtime/aster/decorators tests trans/back
Message-ID: <200909231713.n8NHDEO6029707@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-23 17:13:14 +0000 (Wed, 23 Sep 2009)
New Revision: 20017

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20017&view=rev

Modified:
   aster/trunk/runtime/aster/decorators/collection.astr
   aster/trunk/runtime/aster/decorators/types.astr
   aster/trunk/tests/bagof.astr
   aster/trunk/trans/back/equation-merging.str

Log:
- New Obsolete decorator
- bagof now fails if there are no matches, instead of returning an empty list (making things a bit more efficient). collect-bagof still returns an empty list in this case.

Changes:

Modified: aster/trunk/runtime/aster/decorators/collection.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/collection.astr	2009-09-23 14:30:33 UTC (rev 20016)
+++ aster/trunk/runtime/aster/decorators/collection.astr	2009-09-23 17:13:14 UTC (rev 20017)
@@ -23,6 +23,12 @@
    *
    * If no equations can be applied to the tree,
    * an empty list is returned.
+   *
+   * To return multiple terms from a single equation, one may use the
+   * after decorator as follows:
+   *
+   *   def collect-bagof after(flatten-list) all-definitions:
+   *     Definitions(d*) -> d*
    */
   decorator at-root bagof collect-bagof(a) =
     collect-all-lists(a, conc)
@@ -39,9 +45,9 @@
     collect-all-lists(a, un)
   
   /**
-   * @deprecated
+   * @obsolete
    */
-  decorator at-root collect-all(a) =
+  decorator Obsolete at-root collect-all(a) =
     collect-all(a, conc)
   
   /**

Modified: aster/trunk/runtime/aster/decorators/types.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/types.astr	2009-09-23 14:30:33 UTC (rev 20016)
+++ aster/trunk/runtime/aster/decorators/types.astr	2009-09-23 17:13:14 UTC (rev 20017)
@@ -122,6 +122,21 @@
   decorator fail-fatal(a) =
     id.assert-input(a, a.defined |"No attribute equation matches for input")
 
+decorators
+
+  decorator Obsolete(a) =
+    id.Obsolete(a|["Uses obsolete attribute or decorator in definition of ", a.attribute-name])
+
+  decorator Obsolete(a|message) =
+    if not(<ObsoleteWarned> a.signature) then
+      with(
+        warn-msg(|message);
+        sig := a.signature;
+        rules(ObsoleteWarned: sig)
+      )
+    end;
+    a
+
 attributes // Type test helper
 
   /**

Modified: aster/trunk/tests/bagof.astr
===================================================================
--- aster/trunk/tests/bagof.astr	2009-09-23 14:30:33 UTC (rev 20016)
+++ aster/trunk/tests/bagof.astr	2009-09-23 17:13:14 UTC (rev 20017)
@@ -8,7 +8,8 @@
     ,
       pair := (1,2).init;
       pair.math-op.debug => [2, 3, 0, -1];
-      pair.no-op.debug => [];
+      not(pair.no-op.debug);
+      pair.no-op-collection.debug => [];
       pair.find-stuff.debug => [(1,2),(1,0),(2,0),(2,1)];
       !(1,1,1).init.find-no-dupes.debug => [2];
       !(1,1,1).init.find-some-dupes.debug => [2,2];
@@ -24,6 +25,8 @@
     (i, j) -> <subt> (i,j)
 
   def bagof no-op = fail
+
+  def collect-bagof no-op-collection = fail
   
   def collect-bagof find-stuff:
     id -> <gt> (id, 0)

Modified: aster/trunk/trans/back/equation-merging.str
===================================================================
--- aster/trunk/trans/back/equation-merging.str	2009-09-23 14:30:33 UTC (rev 20016)
+++ aster/trunk/trans/back/equation-merging.str	2009-09-23 17:13:14 UTC (rev 20017)
@@ -95,7 +95,8 @@
       { x_input: 
         ?x_input;
         ![];
-        s
+        s;
+        not([])
       }
     ]|
     where



From R.B.Vermaas at tudelft.nl  Thu Sep 24 14:50:31 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 24 Sep 2009 12:50:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20022 - rob - hydra/jobs
Message-ID: <200909241250.n8OCoVmQ012567@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-24 12:50:31 +0000 (Thu, 24 Sep 2009)
New Revision: 20022

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20022&view=rev

Modified:
   hydra/jobs/strc-java.nix

Log:


Changes:

Modified: hydra/jobs/strc-java.nix
===================================================================
--- hydra/jobs/strc-java.nix	2009-09-24 12:50:00 UTC (rev 20021)
+++ hydra/jobs/strc-java.nix	2009-09-24 12:50:31 UTC (rev 20022)
@@ -12,7 +12,6 @@
       inputs = { 
         inherit officialRelease ; 
         inherit strcJavaCheckout ;
-        inherit javaFront ;
         inherit hydraConfig ;
         inherit baselineNix ;
         inherit nixpkgs; 



From L.C.L.Kats at tudelft.nl  Thu Sep 24 10:54:29 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 24 Sep 2009 08:54:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20019 - LennartKats -
	in sglr-recovery/trunk/permissive-grammars: . trans/make-permissive
Message-ID: <200909240854.n8O8sTTp009242@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-24 08:54:29 +0000 (Thu, 24 Sep 2009)
New Revision: 20019

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20019&view=rev

Modified:
   sglr-recovery/trunk/permissive-grammars/Makefile
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/optimize.astr
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr

Log:
- added a new recovery rule category for keywords that start non-nestable regions,
  like "context-free syntax" in SDF or "strategies" in Stratego
- is-contained-by/is-container-of attributes now take {reject} into account
- removed the sanity check from contributes-to since it was too restrictive for make-permissive
- fixed insertion rule optimization


Changes:

Modified: sglr-recovery/trunk/permissive-grammars/Makefile
===================================================================
--- sglr-recovery/trunk/permissive-grammars/Makefile	2009-09-24 08:06:49 UTC (rev 20018)
+++ sglr-recovery/trunk/permissive-grammars/Makefile	2009-09-24 08:54:29 UTC (rev 20019)
@@ -51,19 +51,19 @@
 	$(MAKE) -C trans/make-permissive make_permissive.jar
 	
 %-Permissive.gendef : %.def trans/make-permissive/make-permissive 
-	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --open-insertions off
+	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --nonnestable off --open-brackets off
 	
 %-Permissive-WaterOnly.gendef : %.def trans/make-permissive/make-permissive 
-	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --insertions off
+	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --nonnestable off --insertions off
 	
 %-Permissive-InsertionsOnly.gendef : %.def trans/make-permissive/make-permissive 
-	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --water off --open-insertions off
+	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --nonnestable off --water off --open-brackets off
 	
 %-Permissive-InsertionsOnly-WithOpenBraces.gendef : %.def trans/make-permissive/make-permissive 
-	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --water off --open-insertions on
+	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --nonnestable on  --water off --open-brackets on
 	
 %-Permissive-WithOpenBraces.gendef : %.def trans/make-permissive/make-permissive 
-	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --open-insertions on
+	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --nonnestable on  --open-brackets on
 
 %-Permissive-AllInsertions.gendef : %.def trans/make-permissive/make-permissive 
 	trans/make-permissive/make-permissive -i $< -o $@ -m `basename $< .def` -mo `basename $@ .gendef` --optimize on --all-insertions on

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-09-24 08:06:49 UTC (rev 20018)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2009-09-24 08:54:29 UTC (rev 20019)
@@ -32,9 +32,9 @@
     where
       not(if-switch(|INSERTIONS_ON()))
   
-  def after(id.make-set) Set collect-bagof lexical-insert-prods
+  def after(id.make-set) Set collect-bagof before(not(id.is-reject-prod)) lexical-insert-prods
   
-  def after(id.make-set) Set collect-bagof kernel-insert-prods
+  def after(id.make-set) Set collect-bagof before(not(id.is-reject-prod)) kernel-insert-prods
   
 attributes // Simple closing literals (e.g., "}")
 
@@ -55,13 +55,13 @@
       not(closinglit.is-used-as-opening-literal)
   
   // TODO: Discard any nullable components in this test
-  // TODO: Optimize: use lookup-global?
 
-  def Test is-used-as-opening-literal:
+  def Test is-used-as-opening-literal: // TODO: Optimize: use lookup-global?
     lit(x) -> id
     where
       id.root;
       oncetd(
+        ?lit(_);
         id.eq(|lit(x));
         id.is-list-head
       )
@@ -73,6 +73,10 @@
   
 attributes // Simple opening literals (e.g., "{")
 
+  // FIXME: open prods rule gives more false positives than any other rule
+  //        maybe the closing literal should be checked more strictly
+  //        (e.g., ";" is not a good closing bracket)
+
   eq lexical-insert-prods:
     prod([openinglit | pattern-and-lit], _, _) ->
     |[ 
@@ -87,7 +91,9 @@
     where
       not(closinglit.eq(|openinglit)) // handled by "string" insertion
     where
-      if-switch(|OPEN_INSERTIONS_ON())
+      not(closinglit.is-used-as-opening-literal)
+    where
+      if-switch(|OPEN_BRACKETS_ON())
 
 attributes // Layout closing literals (e.g., comments)
 
@@ -182,12 +188,31 @@
       id.in-iter-pattern;
       id.in-context-free-section
     where
-      if-switch(|OPEN_INSERTIONS_ON())
+      if-switch(|OPEN_BRACKETS_ON())
     <+
       not(lit.is-used-as-opening-literal)
     where
       if-switch(|SEPARATORS_ON())
 
+attributes // Non-nestable region keywords (e.g., "attributes" or "strategies")
+
+  eq lexical-insert-prods:
+    lit @ lit(_) -> |[ -> ~lit {recover, cons("INSERTION")} ]|
+    where
+      if-switch(|NONNESTABLE_ON())
+    where
+      id.in-context-free-section
+    where
+      id.current-prod.direct-contained-sorts => [_ | _]
+    where
+      not(id.current-prod.is-contained-by(|id.current-sort))
+    where
+      if-switch(|OPEN_BRACKETS_ON())
+    <+
+      not(lit.is-used-as-opening-literal)
+    where
+      id.all-start-symbols.one({sort: ?sort(sort); lit.current-prod.is-contained-by(|sort) })
+
 attributes // Start production literals (e.g., "module")
 
   eq lexical-insert-prods:
@@ -195,7 +220,7 @@
     where
       id.is-start-symbol(|id.current-sort)
     where
-      if-switch(|OPEN_INSERTIONS_ON())
+      if-switch(|OPEN_BRACKETS_ON())
     <+
       not(lit.is-used-as-opening-literal)
     where
@@ -204,8 +229,7 @@
 attributes // All-literal insertion
 
   eq lexical-insert-prods:
-    lit @ lit(_) ->
-    |[ -> ~lit {recover, cons("INSERTION")} ]|
+    lit @ lit(_) -> |[ -> ~lit {recover, cons("INSERTION")} ]|
     where
       id.in-context-free-section
     where

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-09-24 08:06:49 UTC (rev 20018)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/make-permissive.astr	2009-09-24 08:54:29 UTC (rev 20019)
@@ -21,12 +21,13 @@
 
 overlays
 
-  WATER_ON           = "water"
-  OPEN_INSERTIONS_ON = "open-insertions"
-  ALL_INSERTIONS_ON  = "all-insertions"
-  INSERTIONS_ON      = "insertions"
-  SEPARATORS_ON      = "separators"
-  OPTIMIZE_ON        = "optimize"
+  WATER_ON          = "water"
+  OPEN_BRACKETS_ON  = "open-brackets"
+  ALL_INSERTIONS_ON = "all-insertions"
+  INSERTIONS_ON     = "insertions"
+  SEPARATORS_ON     = "separators"
+  OPTIMIZE_ON       = "optimize"
+  NONNESTABLE_ON    = "nonnestable"
 
 signature constructors
 
@@ -61,31 +62,36 @@
   
   options =
     SwitchOption(|
-      OPEN_INSERTIONS_ON()
+      INSERTIONS_ON()
     , "on"
-    , "Add recovery rules for opening braces"
+    , "Add any insertion recovery rules (including closing brackets)"
     )
   + SwitchOption(|
-      INSERTIONS_ON()
+      OPEN_BRACKETS_ON()
     , "on"
-    , "Add insertion recovery rules"
-   )
+    , "Add insertion rules for opening brackets"
+    )
   + SwitchOption(|
-      WATER_ON()
+      SEPARATORS_ON()
     , "on"
-    , "Add water recovery rules"
+    , "Add insertion rules for separators"
     )
   + SwitchOption(|
-      SEPARATORS_ON()
+      NONNESTABLE_ON()
     , "on"
-    , "Add separator recovery rules"
+    , "Add insertion rules for keywords starting non-nestable regions"
     )
   + SwitchOption(|
       ALL_INSERTIONS_ON()
     , "off"
-    , "Add insertion recovery rules for all literals (not recommended)"
+    , "Add insertion recovery rules for _all_ literals (not recommended)"
     )
   + SwitchOption(|
+      WATER_ON()
+    , "on"
+    , "Add water-based recovery rules"
+    )
+  + SwitchOption(| // TODO: Optimize by default?
       OPTIMIZE_ON()
     , "off"
     , "Optimize the inserted literals to character groups"

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/optimize.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/optimize.astr	2009-09-24 08:06:49 UTC (rev 20018)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/optimize.astr	2009-09-24 08:54:29 UTC (rev 20019)
@@ -4,15 +4,16 @@
 
   optimize-sdf = topdown-consnil(try(optimize))
   
-  // Convert literal rhs to char group (e.g., "{" -> [\125])
+  // Convert literal rhs to char group (e.g., "{" becomes [\125])
   optimize:
-    [ prod(pattern, lit(s), attrs) ] ->
+    [ prod(pattern, lit(s), attrs) | p* ] ->
     [ CommentLine(description)
     , prod(
         pattern
       , char-class(simple-charclass(present(numeric(chargroup))))
       , attrs
       )
+    | p*
     ]
     where
       <explode-string> s => ['"', char, '"']

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-09-24 08:06:49 UTC (rev 20018)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/sdf-analysis.astr	2009-09-24 08:54:29 UTC (rev 20019)
@@ -6,7 +6,7 @@
 strategies
 
   Prod = prod(id, id, id)
-  Sort = sort(id)
+  Sort = sort(id) + parameterized-sort(id, id)
 
 decorators 
 
@@ -20,6 +20,9 @@
 
 attributes // Looking up productions
 
+  // TODO: Support parameterized sorts like parameterized-sort("Module",[sort("StrategoHost")])?
+  //       And what about sort renaming?
+
   def List lookup-all:
     sort(sort) -> id.lookup-all-sort(|sort)
   
@@ -36,6 +39,11 @@
     where
       a*.one(?term(cons(cons)))
   
+  def Test is-reject-prod:
+    prod(_, _, attrs(a*)) -> id
+    where
+      a*.one(reject())
+  
   def down current-prod:
     prod(_, _, _) -> id
   
@@ -51,7 +59,7 @@
   def Test down in-kernel-section:
     syntax(_) -> id
   
-  def direct-contained-sorts:
+  def Set(Sort) direct-contained-sorts:
     prod(pattern, _, _) -> <collect-all(?sort(_))> pattern
     
   def direct-container-prods:
@@ -60,10 +68,11 @@
   
   /**
    * Helper attribute that creates collections,
-   * adding all productions to their 'direct-contained-sorts'.
+   * created by adding all productions to the
+   * sort-direct-container prods of their direct-contained-sorts.
    */
   def contributes-to(id.direct-contained-sorts, id.uninit) sort-direct-container-prods:
-    prod(_, _, _) -> id
+    prod(_, _, _) -> <not(id.is-reject-prod)>
   
   def Test down in-iter-pattern:
     iter(_)             -> id
@@ -73,11 +82,14 @@
 
 attributes // Start symbols
 
-  def Test lookup-global is-start-symbol(|sort):
-    context-free-start-symbols(s*) -> sort where s*.one(sort(id.eq(|sort)))
-    lexical-start-symbols(s*)      -> sort where s*.one(sort(id.eq(|sort)))
-    kernel-start-symbols(s*)       -> sort where s*.one(sort(id.eq(|sort)))
+  def Set(Sort) collect-bagof after(concat) all-start-symbols:
+    context-free-start-symbols(s*) -> s*
+    lexical-start-symbols(s*)      -> s*
+    kernel-start-symbols(s*)       -> s*
 
+  def Test is-start-symbol(|sort) =
+    id.all-start-symbols.one(sort(id.eq(|sort)))
+
 attributes // Graph structure properties
 
   /**
@@ -97,8 +109,9 @@
    * contains a reference to the given sort.
    */
   def Type(Prod, Prod) graph-search is-container-of(|sort):
-    prod(_, _, _) -> id
+    prod(_, _, a*) -> id
     where
+      not(id.is-reject-prod);
       id.direct-contained-sorts;
       (  one(id.eq(|sort(sort)))
       <+ one(



From L.C.L.Kats at tudelft.nl  Thu Sep 24 18:53:18 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 24 Sep 2009 16:53:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20024 - LennartKats -
	strc-java/trunk/java
Message-ID: <200909241653.n8OGrIhY015744@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-24 16:53:18 +0000 (Thu, 24 Sep 2009)
New Revision: 20024

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20024&view=rev

Modified:
   strc-java/trunk/java/Makefile.am

Log:
Makefile tweak to help the buildfarm (which is a bit hacky since I don't want it to build the jar file unless you run 'make install')

Changes:

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-24 12:51:52 UTC (rev 20023)
+++ strc-java/trunk/java/Makefile.am	2009-09-24 16:53:18 UTC (rev 20024)
@@ -1,7 +1,7 @@
 include $(top_srcdir)/Makefile.xt
 
 EXTRA_DIST=strategoxt.jar
-pkgdata_DATA=strategoxt.jar
+pkgdata_DATA=.ALLCLASSES strategoxt.jar
 
 RUNTIMEJAVAS = \
   $(wildcard runtime/org/strategoxt/*.java) \
@@ -60,7 +60,7 @@
 
 jar strategoxt.jar : spoofax-libs.jar # .ALLCLASSES $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(COMPILERJAVAS)
 	@if [ ! -e bin/org/strategoxt/stratego_lib/Main.class ]; then \
-	  echo Standard library classes not found; please run 'make all' first. >&2; exit 1; \
+	  echo "Standard library classes not found; please run 'make all' first." >&2; exit 1; \
 	fi 
 	cp spoofax-libs.jar strategoxt.jar.tmp
 	$(JAR) uf strategoxt.jar.tmp $(JARIN1) $(JARIN2) $(JARIN3)



From R.B.Vermaas at tudelft.nl  Thu Sep 24 14:46:18 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 24 Sep 2009 12:46:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20020 - rob - in hydra:
	jobs strategoxt
Message-ID: <200909241246.n8OCkIjY012525@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-24 12:46:18 +0000 (Thu, 24 Sep 2009)
New Revision: 20020

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20020&view=rev

Added:
   hydra/jobs/strc-java.nix
Modified:
   hydra/strategoxt/packages.nix

Log:
strc-java

Changes:

Added: hydra/jobs/strc-java.nix
===================================================================
--- hydra/jobs/strc-java.nix	                        (rev 0)
+++ hydra/jobs/strc-java.nix	2009-09-24 12:46:18 UTC (rev 20020)
@@ -0,0 +1,26 @@
+{ nixpkgs ? ../../nixpkgs
+, officialRelease ? false
+, hydraConfig ? ../. 
+, baselineNix ? ../baseline.nix
+, strcJavaCheckout ? { outPath = ../../strc-java ; rev = 1234 ; }
+, javaFront ? (import ./java-front.nix {}).build {}
+} :
+
+let
+  specs = import (hydraConfig + "/strategoxt/packages.nix") ; 
+  jobs = 
+    import (hydraConfig + "/job.nix" ) { 
+      inputs = { 
+        inherit officialRelease ; 
+        inherit strcJavaCheckout ;
+        inherit javaFront ;
+        inherit hydraConfig ;
+        inherit baselineNix ;
+        inherit nixpkgs; 
+      } ; 
+   
+      spec = specs.strcJava ; 
+    } ;
+
+in jobs
+

Modified: hydra/strategoxt/packages.nix
===================================================================
--- hydra/strategoxt/packages.nix	2009-09-24 08:54:29 UTC (rev 20019)
+++ hydra/strategoxt/packages.nix	2009-09-24 12:46:18 UTC (rev 20020)
@@ -155,9 +155,26 @@
       rpmBuildSupported = true;
       systemSupported = systemSupport pkgs commonSystemsSupported;
 
-      extraVirtualDebs = {
-        debian40i386 = [ "libreadline5-dev" "libncurses5-dev" "libltdl3-dev"] ;
-      };
+      extraVirtualDebs = 
+       let vdebs = [ "libreadline5-dev" "libncurses5-dev" "libltdl3-dev"] ; in
+       {
+         debian40i386 = vdebs ;
+         debian50i386 = vdebs ;
+         ubuntu804i386 = vdebs ;
+         ubuntu810i386 = vdebs ;
+         ubuntu904i386 = vdebs ;
+       };
+
+      extraVirtualRPMs = 
+       let vrpms = [ "readline-devel" "ncurses-devel"] ; in
+       {
+         fedora5i386 = vrpms ;
+         fedora9i386 = vrpms ;
+         fedora10i386 = vrpms ;
+         fedora11i386 = vrpms ;
+         opensuse103i386 = vrpms ;
+         opensuse110i386 = vrpms ;
+       };
     };
 
   /**
@@ -393,6 +410,25 @@
     };
 
   /**
+   * Stratego Java compiler
+   */
+  strcJava =
+    pkgs : rec {
+      fullName = "Stratego Java compiler";
+      packageName = "strc-java";
+      attrPrefix = "strcJava";
+
+      svnBuildInputs = buildInputs ++ (autotools pkgs);
+      svnRequires = [aterm sdf2Bundle strategoxt javaFront];
+
+      buildInputs = [pkgs.pkgconfig pkgs.unzip pkgs.zlib pkgs.jdk pkgs.which];
+      requires = svnRequires;
+
+      rpmBuildSupported = true;
+      rpmRequires = requires ++ [jdk];
+    };
+
+  /**
    * Dryad Samples
    */
   dryadSamples =



From L.C.L.Kats at tudelft.nl  Thu Sep 24 10:06:49 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 24 Sep 2009 08:06:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20018 - LennartKats -
	in aster/trunk: runtime/aster/attributes
	runtime/aster/decorators runtime/aster/lang tests
Message-ID: <200909240806.n8O86n8J008718@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-24 08:06:49 +0000 (Thu, 24 Sep 2009)
New Revision: 20018

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20018&view=rev

Modified:
   aster/trunk/runtime/aster/attributes/tree-access.astr
   aster/trunk/runtime/aster/decorators/assert.astr
   aster/trunk/runtime/aster/decorators/collection.astr
   aster/trunk/runtime/aster/decorators/flow.astr
   aster/trunk/runtime/aster/decorators/lookup.astr
   aster/trunk/runtime/aster/decorators/types.astr
   aster/trunk/runtime/aster/lang/parents.str
   aster/trunk/tests/caching.astr

Log:
- id.is-root/at-root/root now fail for non-initialized nodes
- all current attributes decorated 'at-root' should be 'at-root cached'
- proper error message for Type assertion failures


Changes:

Modified: aster/trunk/runtime/aster/attributes/tree-access.astr
===================================================================
--- aster/trunk/runtime/aster/attributes/tree-access.astr	2009-09-23 17:13:14 UTC (rev 20017)
+++ aster/trunk/runtime/aster/attributes/tree-access.astr	2009-09-24 08:06:49 UTC (rev 20018)
@@ -27,7 +27,9 @@
   def plain disable-trace is-root:
     id -> id
     where
-      not(id.parent)
+      // generally. not(id.parent) would suffice,
+      // but this way we want to fail for non-initialized terms
+      get-parent(|<all-parents>) => NoParent()
     
   def down _:
     id.root := id where id.is-root

Modified: aster/trunk/runtime/aster/decorators/assert.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/assert.astr	2009-09-23 17:13:14 UTC (rev 20017)
+++ aster/trunk/runtime/aster/decorators/assert.astr	2009-09-24 08:06:49 UTC (rev 20018)
@@ -16,7 +16,7 @@
 
   decorator assert-input(a, condition |message) =
     if not(condition) then
-      log(|Critical(), [message, " at attribute ", a.attribute-name, " for: "], id.path);
+      log(|Critical(), [message, " at attribute '", a.attribute-name, "' for: "], id.path);
       print-stacktrace;
       <exit> 1 
     end;
@@ -28,8 +28,8 @@
   decorator input.assert-output(a, condition |message) =
     a;
     if not(condition) then
-      prim("SSL_stacktrace_get_all_frame_names") => trace;
-      log(|Critical(), [message, " at attribute ", a.attribute-name, " for ", input.path, ":"], id.uninit);
+      where(prim("SSL_stacktrace_get_all_frame_names") => trace);
+      log(|Critical(), [message, " at attribute '", a.attribute-name, "' for ", input.path, ":"], id.uninit);
       <report-failure> trace
     end
 
@@ -42,7 +42,7 @@
     id.set-cached-for(a|input);
     if not(<condition> input) then
       prim("SSL_stacktrace_get_all_frame_names") => trace;
-      log(|Critical(), [message, " at attribute ", a.attribute-name, " for ", input.path, ":"], id.uninit);
+      log(|Critical(), [message, " at attribute '", a.attribute-name, "' for ", input.path, ":"], id.uninit);
       <report-failure> trace
     end;
     id.set-uncached-for(a|input)

Modified: aster/trunk/runtime/aster/decorators/collection.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/collection.astr	2009-09-23 17:13:14 UTC (rev 20017)
+++ aster/trunk/runtime/aster/decorators/collection.astr	2009-09-24 08:06:49 UTC (rev 20018)
@@ -30,7 +30,7 @@
    *   def collect-bagof after(flatten-list) all-definitions:
    *     Definitions(d*) -> d*
    */
-  decorator at-root bagof collect-bagof(a) =
+  decorator at-root cached bagof collect-bagof(a) =
     collect-all-lists(a, conc)
   
   /**
@@ -41,13 +41,13 @@
    * If no equations can be applied to the tree,
    * an empty list is returned.
    */
-  decorator at-root bagof collect-bagof(a, un) =
+  decorator at-root cached bagof collect-bagof(a, un) =
     collect-all-lists(a, un)
   
   /**
    * @obsolete
    */
-  decorator Obsolete at-root collect-all(a) =
+  decorator Obsolete at-root cached collect-all(a) =
     collect-all(a, conc)
   
   /**
@@ -96,12 +96,14 @@
     <bagof-Contributions> (a.signature, <target-to-key> node);
     
     filter(
-      if a.defined then
+      // UNDONE: contributes-to sanity check
+      //         too restrictive since a.defined currently takes where clauses into account
+      // if a.defined then
         a
-      else
-        fatal-err(|["Internal error in attribute '", a.attribute-name, "': ",
-                    "equation does not match targets definition"])
-      end
+      // else
+      //   fatal-err(|["Internal error in attribute '", a.attribute-name, "': ",
+      //               "equation does not match targets definition"])
+      // end
     )
 
 strategies

Modified: aster/trunk/runtime/aster/decorators/flow.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/flow.astr	2009-09-23 17:13:14 UTC (rev 20017)
+++ aster/trunk/runtime/aster/decorators/flow.astr	2009-09-24 08:06:49 UTC (rev 20018)
@@ -29,6 +29,13 @@
   
   /**
    * Applies the attribute semantic rule at the root of the tree.
+   *
+   * This decorator is often combined with the cached(a) decorator
+   * to apply caching at the root of the tree, rather than at
+   * each subnode. For example:
+   *
+   *   def cached at-root top-level-functions =
+   *     filter(?Function(_))
    */
   decorator down at-root(a) =
     if id.is-root then

Modified: aster/trunk/runtime/aster/decorators/lookup.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/lookup.astr	2009-09-23 17:13:14 UTC (rev 20017)
+++ aster/trunk/runtime/aster/decorators/lookup.astr	2009-09-24 08:06:49 UTC (rev 20018)
@@ -69,7 +69,7 @@
    * @param fetch-decl A local declaration fetching attribute that succeeds
    *                   if a given declares the requested identifier.
    */
-  decorator cached at-root lookup-global(fetch-decl) =
+  decorator at-root cached lookup-global(fetch-decl) =
     id.lookup-unordered(fetch-decl, fail)
   
 decorators
@@ -112,7 +112,7 @@
    * @param fetch-decl A local declaration fetching attribute that succeeds
    *                   if a given declares the requested identifier.
    */
-  decorator cached at-root lookup-multiple-global(fetch-decl) =
+  decorator at-root cached lookup-multiple-global(fetch-decl) =
     id.lookup-multiple-unordered(fetch-decl, fail)
   
 decorators // Collecting declarations for lookup attributes

Modified: aster/trunk/runtime/aster/decorators/types.astr
===================================================================
--- aster/trunk/runtime/aster/decorators/types.astr	2009-09-23 17:13:14 UTC (rev 20017)
+++ aster/trunk/runtime/aster/decorators/types.astr	2009-09-24 08:06:49 UTC (rev 20018)
@@ -125,7 +125,7 @@
 decorators
 
   decorator Obsolete(a) =
-    id.Obsolete(a|["Uses obsolete attribute or decorator in definition of ", a.attribute-name])
+    id.Obsolete(a|["Uses obsolete attribute or decorator in definition of '", a.attribute-name, "'"])
 
   decorator Obsolete(a|message) =
     if not(<ObsoleteWarned> a.signature) then

Modified: aster/trunk/runtime/aster/lang/parents.str
===================================================================
--- aster/trunk/runtime/aster/lang/parents.str	2009-09-23 17:13:14 UTC (rev 20017)
+++ aster/trunk/runtime/aster/lang/parents.str	2009-09-24 08:06:49 UTC (rev 20018)
@@ -1,5 +1,5 @@
 /**
- * Assertion runtime: parent references.
+ * Aster runtime: parent references.
  *
  * @author Lennart Kats <lennart add lclnet.nl>
  *

Modified: aster/trunk/tests/caching.astr
===================================================================
--- aster/trunk/tests/caching.astr	2009-09-23 17:13:14 UTC (rev 20017)
+++ aster/trunk/tests/caching.astr	2009-09-24 08:06:49 UTC (rev 20018)
@@ -6,7 +6,8 @@
     option-wrap(
       verbose-option
     ,
-      root := "root".init;
+      root  := (1, 2).init;
+      (l,r) := root;
       
       <debug(!1); eq>      (root.get-cached-1, root.get-cached-1);
       <debug(!2); eq>      (root.get-cached-2, root.get-cached-2);
@@ -20,6 +21,8 @@
       <debug(!10); eq>     (root.get-cached-10, root.get-cached-10);
       <debug(!11); eq>     (root.get-cached-11, root.get-cached-11);
       <debug(!12); eq>     (root.get-cached-12, root.get-cached-12);
+      <debug(!13); eq>     (l.get-cached-13,    l.get-cached-13);
+      <debug(!14); eq>     (l.get-cached-13,    r.get-cached-13);
       
       root.no-premature-caching
     )
@@ -51,6 +54,8 @@
   
   def cached(|id.signature) get-cached-12 = new
   
+  def collect-bagof get-cached-13 = new
+  
 decorators
 
   decorator noop(a) = a; noop



From R.B.Vermaas at tudelft.nl  Thu Sep 24 14:51:52 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 24 Sep 2009 12:51:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20023 - rob -
	hydra/strategoxt
Message-ID: <200909241251.n8OCpqKS012578@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-24 12:51:52 +0000 (Thu, 24 Sep 2009)
New Revision: 20023

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20023&view=rev

Modified:
   hydra/strategoxt/packages.nix

Log:
ecj as build input

Changes:

Modified: hydra/strategoxt/packages.nix
===================================================================
--- hydra/strategoxt/packages.nix	2009-09-24 12:50:31 UTC (rev 20022)
+++ hydra/strategoxt/packages.nix	2009-09-24 12:51:52 UTC (rev 20023)
@@ -421,7 +421,7 @@
       svnBuildInputs = buildInputs ++ (autotools pkgs);
       svnRequires = [aterm sdf2Bundle strategoxt javaFront];
 
-      buildInputs = [pkgs.pkgconfig pkgs.unzip pkgs.zlib pkgs.jdk pkgs.which];
+      buildInputs = [pkgs.pkgconfig pkgs.unzip pkgs.zlib pkgs.ecj pkgs.which];
       requires = svnRequires;
 
       rpmBuildSupported = true;



From R.B.Vermaas at tudelft.nl  Thu Sep 24 14:50:00 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 24 Sep 2009 12:50:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20021 - rob - in hydra:
	. jobs
Message-ID: <200909241250.n8OCo0pO012545@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-24 12:50:00 +0000 (Thu, 24 Sep 2009)
New Revision: 20021

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20021&view=rev

Modified:
   hydra/baseline.nix
   hydra/jobs/strc-java.nix

Log:


Changes:

Modified: hydra/baseline.nix
===================================================================
--- hydra/baseline.nix	2009-09-24 12:46:18 UTC (rev 20020)
+++ hydra/baseline.nix	2009-09-24 12:50:00 UTC (rev 20021)
@@ -3,6 +3,7 @@
   aterm      = pkgs.aterm25 ; 
   sdf2Bundle = pkgs.strategoPackages018.sdf ;
   strategoxt = pkgs.strategoPackages018.strategoxt ;
+  javaFront  = pkgs.strategoPackages018.javafront ;
 
 }
 

Modified: hydra/jobs/strc-java.nix
===================================================================
--- hydra/jobs/strc-java.nix	2009-09-24 12:46:18 UTC (rev 20020)
+++ hydra/jobs/strc-java.nix	2009-09-24 12:50:00 UTC (rev 20021)
@@ -3,7 +3,6 @@
 , hydraConfig ? ../. 
 , baselineNix ? ../baseline.nix
 , strcJavaCheckout ? { outPath = ../../strc-java ; rev = 1234 ; }
-, javaFront ? (import ./java-front.nix {}).build {}
 } :
 
 let



From L.C.L.Kats at tudelft.nl  Fri Sep 25 14:24:33 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 25 Sep 2009 12:24:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20025 - LennartKats -
	in strc-java/trunk: java tools trans
Message-ID: <200909251224.n8PCOX1T031469@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-25 12:24:33 +0000 (Fri, 25 Sep 2009)
New Revision: 20025

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20025&view=rev

Modified:
   strc-java/trunk/java/Makefile.am
   strc-java/trunk/tools/Makefile.am
   strc-java/trunk/trans/Makefile.am

Log:
EXTRA_DIST declarations

Changes:

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-24 16:53:18 UTC (rev 20024)
+++ strc-java/trunk/java/Makefile.am	2009-09-25 12:24:33 UTC (rev 20025)
@@ -1,6 +1,5 @@
 include $(top_srcdir)/Makefile.xt
 
-EXTRA_DIST=strategoxt.jar
 pkgdata_DATA=.ALLCLASSES strategoxt.jar
 
 RUNTIMEJAVAS = \
@@ -37,6 +36,23 @@
   runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.rtree \
   $(LIBRARYJAVAS) $(COMPILERJAVAS) .ALLCLASSES
 
+EXTRA_DIST=\
+  $(wildcard runtime/org/strategoxt/*.java) \
+  $(wildcard runtime/org/strategoxt/*/*.java) \
+  $(wildcard runtime/org/strategoxt/*/*/*.java) \
+  $(wildcard runtime/org/strategoxt/*/*/*/*.java) \
+  $(wildcard runtime/org/strategoxt/*/*/*/*/*.java) \
+  $(wildcard runtime/org/strategoxt/*/*/*/*/*/*.java) \
+  $(wildcard runtime/org/strategoxt/*.str) \
+  $(wildcard runtime/org/strategoxt/*/*.str) \
+  $(wildcard runtime/org/strategoxt/*/*/*.str) \
+  $(wildcard runtime/org/strategoxt/*/*/*/*.str) \
+  $(wildcard runtime/org/strategoxt/*/*/*/*/*.str) \
+  $(wildcard runtime/org/strategoxt/*/*/*/*/*/*.str) \
+  runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.rtree \
+  spoofax-libs.jar \
+  META-INF/MANIFEST.MF
+
 CLEANFILES = \
   $(LIBRARYJAVAS) $(COMPILERJAVAS) \
   runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat.rtree \
@@ -110,6 +126,7 @@
 	$(JAVAC) $(JAVACFLAGS) $<
 
 lib/org/strategoxt/stratego_lib/Main.java : $(STRATEGOXT)/share/stratego-lib/libstratego-lib.ctree ../trans/strj
+	[ -e lib/org/strategoxt ] || mkdir -p lib/org/strategoxt
 	../trans/strj -I $(STRATEGOXT)/share/stratego-lib -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_lib
 
 lib/org/strategoxt/stratego-xtc.rtree : $(STRATEGOXT)/share/xtc/stratego-xtc-posix-xsi.rtree
@@ -168,6 +185,7 @@
 ###### COMPILER #######
 
 compiler/org/strategoxt/strj/Main.java : ../trans/strj.ctree ../trans/strj
+	[ -e compiler/org/strategoxt ] || mkdir -p compiler/org/strategoxt
 	../trans/strj -i $< -o $@ -clean -p org.strategoxt.strj --verbose 3 -la stratego-lib -la stratego-xtc -la stratego-gpp -la org.strategoxt.strc -la org.strategoxt.java_front -O 3 # -D DEFAULT_XTC_REPOSITORY="\"$(REPOSITORY)\""
 
 ###### EXTERNAL #######

Modified: strc-java/trunk/tools/Makefile.am
===================================================================
--- strc-java/trunk/tools/Makefile.am	2009-09-24 16:53:18 UTC (rev 20024)
+++ strc-java/trunk/tools/Makefile.am	2009-09-25 12:24:33 UTC (rev 20025)
@@ -1,5 +1,5 @@
 include $(top_srcdir)/Makefile.xt
 include $(wildcard *.dep)
 
-bin_SCRIPTS      = strj-jar
-
+bin_SCRIPTS = strj-jar
+EXTRA_DIST  = strj-jar

Modified: strc-java/trunk/trans/Makefile.am
===================================================================
--- strc-java/trunk/trans/Makefile.am	2009-09-24 16:53:18 UTC (rev 20024)
+++ strc-java/trunk/trans/Makefile.am	2009-09-25 12:24:33 UTC (rev 20025)
@@ -14,7 +14,7 @@
 
 STRCFLAGS      = --main main-$* -O 0 --format-check 0
 
-EXTRA_DIST     = $(wildcard *.str) $(wildcard *.meta) $(wildcard *.syn) 
+EXTRA_DIST     = $(wildcard *.str) $(wildcard *.meta) $(wildcard lib/*.str) $(wildcard lib/*.meta)
 CLEANFILES     = $(wildcard *.dep) $(wildcard *.tmp) $(wildcard *.o) # $(wildcard *.c)
 BOOTCLEANFILES = $(wildcard *.c) 
 



From L.C.L.Kats at tudelft.nl  Fri Sep 25 14:43:02 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 25 Sep 2009 12:43:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20026 - LennartKats -
	strc-java/trunk
Message-ID: <200909251243.n8PCh2uK031643@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-25 12:43:02 +0000 (Fri, 25 Sep 2009)
New Revision: 20026

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20026&view=rev

Modified:
   strc-java/trunk/Makefile.am

Log:
dist fix: support long filenames in tar

Changes:

Modified: strc-java/trunk/Makefile.am
===================================================================
--- strc-java/trunk/Makefile.am	2009-09-25 12:24:33 UTC (rev 20025)
+++ strc-java/trunk/Makefile.am	2009-09-25 12:43:02 UTC (rev 20026)
@@ -1,5 +1,8 @@
 include $(top_srcdir)/Makefile.xt
 
+# remove the default tar -o option to allow long path names
+am__tar = ${AMTAR} chf - "$$tardir"
+
 ACLOCAL_AMFLAGS = -I .
 
 SUBDIRS           = syn trans java test tools



From R.B.Vermaas at tudelft.nl  Fri Sep 25 15:25:02 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Fri, 25 Sep 2009 13:25:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20027 - rob -
	strc-java/trunk/java
Message-ID: <200909251325.n8PDP2XO032459@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-25 13:25:02 +0000 (Fri, 25 Sep 2009)
New Revision: 20027

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20027&view=rev

Modified:
   strc-java/trunk/java/Makefile.am

Log:
build time xtc repo

Changes:

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-25 12:43:02 UTC (rev 20026)
+++ strc-java/trunk/java/Makefile.am	2009-09-25 13:25:02 UTC (rev 20027)
@@ -67,6 +67,7 @@
 JAVACFLAGS=-J-Xmx512m -J-Xms300m -J-server -J-XX:+UseParallelGC -cp $(CLASSPATH) -source 5 -nowarn -d bin
 JAVAC=`if which ecj >/dev/null; then echo ecj; else echo javac; fi`
 
+STRJ=XTC_REPOSITORY="$(BUILD_REPOSITORY)" ../trans/strj
 STRJFLAGS=--library --verbose 3 -clean -O 3
 
 JAR=`if which fastjar >/dev/null; then echo fastjar; else echo jar; fi`
@@ -127,37 +128,37 @@
 
 lib/org/strategoxt/stratego_lib/Main.java : $(STRATEGOXT)/share/stratego-lib/libstratego-lib.ctree ../trans/strj
 	[ -e lib/org/strategoxt ] || mkdir -p lib/org/strategoxt
-	../trans/strj -I $(STRATEGOXT)/share/stratego-lib -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_lib
+	$(STRJ) -I $(STRATEGOXT)/share/stratego-lib -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_lib
 
 lib/org/strategoxt/stratego-xtc.rtree : $(STRATEGOXT)/share/xtc/stratego-xtc-posix-xsi.rtree
 	cp $< $@
 
 lib/org/strategoxt/stratego_xtc/Main.java : lib/org/strategoxt/stratego-xtc.rtree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/xtc -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_xtc -la stratego-lib -D GetInternalDefaultXtcRepository=None
+	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/xtc -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_xtc -la stratego-lib -D GetInternalDefaultXtcRepository=None
 
 lib/org/strategoxt/stratego_sglr/Main.java : $(STRATEGOXT)/share/libstratego-sglr.ctree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sglr -la stratego-lib -la stratego-xtc
+	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sglr -la stratego-lib -la stratego-xtc
 
 lib/org/strategoxt/stratego_rtg/Main.java : $(STRATEGOXT)/share/libstratego-rtg.ctree ../trans/strj runtime/org/strategoxt/lang/compat/stratego_rtg_compat/Main.java
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_rtg -la stratego-lib -la stratego-sglr -la org.strategoxt.lang.compat.stratego_rtg_compat
+	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_rtg -la stratego-lib -la stratego-sglr -la org.strategoxt.lang.compat.stratego_rtg_compat
 
 lib/org/strategoxt/stratego_gpp/Main.java : $(STRATEGOXT)/share/libstratego-gpp.ctree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_gpp -la stratego-lib -la stratego-lib -la stratego-sglr
+	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_gpp -la stratego-lib -la stratego-lib -la stratego-sglr
 
 lib/org/strategoxt/stratego_aterm/Main.java : $(STRATEGOXT)/share/libstratego-aterm.ctree runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat/Main.java ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_aterm -la stratego-lib -la stratego-gpp -la org.strategoxt.lang.compat.override.stratego_aterm_compat
+	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_aterm -la stratego-lib -la stratego-gpp -la org.strategoxt.lang.compat.override.stratego_aterm_compat
 
 lib/org/strategoxt/stratego_sdf/Main.java : $(STRATEGOXT)/share/libstratego-sdf.ctree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sdf -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-aterm 
+	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sdf -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-aterm 
 
 lib/org/strategoxt/stratego_tool_doc/Main.java : $(STRATEGOXT)/share/libstratego-tool-doc.ctree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_tool_doc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -D SRTS-package-bugreport='"bugs at strategoxt.org"' -D SRTS-package-name='"<SRTS-package-name>"' -D SRTS-package-revision='"<SRTS-package-revision>"' -D SRTS-package-version='"<SRTS-package-version>"'
+	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_tool_doc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -D SRTS-package-bugreport='"bugs at strategoxt.org"' -D SRTS-package-name='"<SRTS-package-name>"' -D SRTS-package-revision='"<SRTS-package-revision>"' -D SRTS-package-version='"<SRTS-package-version>"'
 
 lib/org/strategoxt/strc/Main.java : $(STRATEGOXT)/share/libstrc.ctree ../trans/strj runtime/org/strategoxt/lang/compat/strc_compat/Main.java
-	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.strc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-rtg -la stratego-xtc -la org.strategoxt.lang.compat.strc_compat
+	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.strc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-rtg -la stratego-xtc -la org.strategoxt.lang.compat.strc_compat
 
 lib/org/strategoxt/java_front/Main.java : $(JAVA_FRONT)/share/java-front/libjava-front.ctree ../trans/strj
-	../trans/strj -I $(JAVA_FRONT)/share/java-front-syntax -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.java_front -la stratego-lib -la stratego-sglr -la stratego-gpp
+	$(STRJ) -I $(JAVA_FRONT)/share/java-front-syntax -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.java_front -la stratego-lib -la stratego-sglr -la stratego-gpp
 
 ###### RUNTIME #######
 
@@ -165,28 +166,28 @@
 	parse-stratego -i $< -o $@
 
 runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat/Main.java : runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat.rtree ../trans/strj
-	../trans/strj -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.stratego_aterm_compat -la stratego-lib -la stratego-gpp
+	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.stratego_aterm_compat -la stratego-lib -la stratego-gpp
 
 runtime/org/strategoxt/lang/compat/override/jsglr_parser_compat/Main.java : runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str ../trans/strj
-	../trans/strj -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.jsglr_parser_compat -la stratego-lib -la stratego-sglr -la stratego-xtc
+	$(STRJ) -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.jsglr_parser_compat -la stratego-lib -la stratego-sglr -la stratego-xtc
 
 runtime/org/strategoxt/lang/compat/override/jsglr_parser/Main.java : runtime/org/strategoxt/lang/compat/override/jsglr-parser.str ../trans/strj
-	../trans/strj -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.jsglr_parser -la stratego-lib
+	$(STRJ) -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.jsglr_parser -la stratego-lib
 
 runtime/org/strategoxt/lang/compat/override/performance_tweaks/Main.java : runtime/org/strategoxt/lang/compat/override/performance-tweaks.str ../trans/strj
-	../trans/strj -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.performance_tweaks -la stratego-lib
+	$(STRJ) -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.performance_tweaks -la stratego-lib
 
 runtime/org/strategoxt/lang/compat/override/xtc_compat/Main.java : runtime/org/strategoxt/lang/compat/override/xtc-compat.str ../trans/strj
-	../trans/strj -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.xtc_compat -la stratego-lib -la stratego-xtc
+	$(STRJ) -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.xtc_compat -la stratego-lib -la stratego-xtc
 
 runtime/org/strategoxt/lang/compat/override/strc_compat/Main.java : runtime/org/strategoxt/lang/compat/override/strc-compat.str ../trans/strj runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.rtree
-	../trans/strj -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -I $(STRATEGOXT)/share/xtc -I $(STRATEGOXT)/share/stratego-lib -I $(JAVA_FRONT)/share/java-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.strc_compat -la stratego-lib -la stratego-xtc -la org.strategoxt.strc -I runtime/org/strategoxt/lang/parallel/stratego_parallel
+	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -I $(STRATEGOXT)/share/xtc -I $(STRATEGOXT)/share/stratego-lib -I $(JAVA_FRONT)/share/java-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.strc_compat -la stratego-lib -la stratego-xtc -la org.strategoxt.strc -I runtime/org/strategoxt/lang/parallel/stratego_parallel
 
 ###### COMPILER #######
 
 compiler/org/strategoxt/strj/Main.java : ../trans/strj.ctree ../trans/strj
 	[ -e compiler/org/strategoxt ] || mkdir -p compiler/org/strategoxt
-	../trans/strj -i $< -o $@ -clean -p org.strategoxt.strj --verbose 3 -la stratego-lib -la stratego-xtc -la stratego-gpp -la org.strategoxt.strc -la org.strategoxt.java_front -O 3 # -D DEFAULT_XTC_REPOSITORY="\"$(REPOSITORY)\""
+	$(STRJ) -i $< -o $@ -clean -p org.strategoxt.strj --verbose 3 -la stratego-lib -la stratego-xtc -la stratego-gpp -la org.strategoxt.strc -la org.strategoxt.java_front -O 3 # -D DEFAULT_XTC_REPOSITORY="\"$(REPOSITORY)\""
 
 ###### EXTERNAL #######
 



From L.C.L.Kats at tudelft.nl  Sat Sep 26 14:43:02 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 26 Sep 2009 12:43:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20028 - LennartKats -
 in spoofax-imp/trunk: . org.strategoxt.imp.astview
 org.strategoxt.imp.astview/.settings org.strategoxt.imp.astview/META-INF
 org.strategoxt.imp.astview/icons org.strategoxt.imp.astview/src
 org.strategoxt.imp.astview/src/org
 org.strategoxt.imp.astview/src/org/strategoxt
 org.strategoxt.imp.astview/src/org/strategoxt/imp
 org.strategoxt.imp.astview/src/org/strategoxt/imp/astview
 org.strategoxt.imp.astview/src/org/strategoxt/imp/astview/views
 org.strategoxt.imp.editors.editorservice org.strategoxt.imp.editors.sdf
 org.strategoxt.imp.editors.stratego org.strategoxt.imp.generator/lib
 org.strategoxt.imp.generator/src/sdf2imp
 org.strategoxt.imp.generator/src/sdf2imp/project
 org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
 org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
 org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
 org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/! ast
 org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens
 org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
 org.strategoxt.imp.updatesite
Message-ID: <200909261243.n8QCh2v3016617@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-26 12:43:00 +0000 (Sat, 26 Sep 2009)
New Revision: 20028

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20028&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.astview/
   spoofax-imp/trunk/org.strategoxt.imp.astview/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.astview/.project
   spoofax-imp/trunk/org.strategoxt.imp.astview/.settings/
   spoofax-imp/trunk/org.strategoxt.imp.astview/.settings/org.eclipse.jdt.core.prefs
   spoofax-imp/trunk/org.strategoxt.imp.astview/META-INF/
   spoofax-imp/trunk/org.strategoxt.imp.astview/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.astview/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.astview/icons/
   spoofax-imp/trunk/org.strategoxt.imp.astview/icons/sample.gif
   spoofax-imp/trunk/org.strategoxt.imp.astview/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.astview/src/
   spoofax-imp/trunk/org.strategoxt.imp.astview/src/org/
   spoofax-imp/trunk/org.strategoxt.imp.astview/src/org/strategoxt/
   spoofax-imp/trunk/org.strategoxt.imp.astview/src/org/strategoxt/imp/
   spoofax-imp/trunk/org.strategoxt.imp.astview/src/org/strategoxt/imp/astview/
   spoofax-imp/trunk/org.strategoxt.imp.astview/src/org/strategoxt/imp/astview/views/
   spoofax-imp/trunk/org.strategoxt.imp.astview/src/org/strategoxt/imp/astview/views/ASTView.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-grammar.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicTokenColorer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRTokenIterator.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoFeedback.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/how-not-to.txt

Log:
Some improvements and fixes after testing things with Eelco:

* Nicer error if pack-sdf/sdf2table can't be found

* Nicer error for (almost) empty Stratego files and forced JSGLR reductions in general

* Improved the example "entities" Stratego module and grammar:
  - Added xdoc documentation and some SDF comments (demonstrating the %% syntax)
  - Warnings about entity names no longer highlight the entire entity
  - Added an additional constraint-error rule to show how rules can be defined more than once

* Fixed dynamic reloading of editors.
  Rebuilding a grammar now also schedules a reparse in all editors that use it.

* Fixed unnecessary rebuilds of ctree file in generated build.xml
  
* Better feedback (popup) if the Stratego rules don't give results of the expected format


Changes (first 1000 lines of the diffs):

Added: spoofax-imp/trunk/org.strategoxt.imp.astview/.classpath
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.astview/.classpath	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.astview/.classpath	2009-09-26 12:43:00 UTC (rev 20028)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Added: spoofax-imp/trunk/org.strategoxt.imp.astview/.project
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.astview/.project	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.astview/.project	2009-09-26 12:43:00 UTC (rev 20028)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.strategoxt.imp.astview</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

Added: spoofax-imp/trunk/org.strategoxt.imp.astview/.settings/org.eclipse.jdt.core.prefs
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.astview/.settings/org.eclipse.jdt.core.prefs	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.astview/.settings/org.eclipse.jdt.core.prefs	2009-09-26 12:43:00 UTC (rev 20028)
@@ -0,0 +1,12 @@
+#Fri Aug 28 11:26:33 CEST 2009
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.5
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.5
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.5

Added: spoofax-imp/trunk/org.strategoxt.imp.astview/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.astview/META-INF/MANIFEST.MF	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.astview/META-INF/MANIFEST.MF	2009-09-26 12:43:00 UTC (rev 20028)
@@ -0,0 +1,11 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: Spoofax/IMP AST view Plug-in
+Bundle-SymbolicName: org.strategoxt.imp.astview; singleton:=true
+Bundle-Version: 0.1.0.2700
+Require-Bundle: org.eclipse.core.runtime,
+ org.eclipse.ui,
+ org.eclipse.imp.runtime,
+ org.strategoxt.imp.runtime,
+ org.eclipse.ui.editors;bundle-version="3.4.0"
+Bundle-RequiredExecutionEnvironment: J2SE-1.5

Added: spoofax-imp/trunk/org.strategoxt.imp.astview/build.properties
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.astview/build.properties	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.astview/build.properties	2009-09-26 12:43:00 UTC (rev 20028)
@@ -0,0 +1,7 @@
+source.. = src/
+output.. = bin/
+bin.includes = plugin.xml,\
+               META-INF/,\
+               .,\
+               icons/,\
+               contexts.xml

Added: spoofax-imp/trunk/org.strategoxt.imp.astview/icons/sample.gif
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.astview/icons/sample.gif
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.astview/plugin.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.astview/plugin.xml	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.astview/plugin.xml	2009-09-26 12:43:00 UTC (rev 20028)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?eclipse version="3.4"?>
+<plugin>
+
+   <extension
+         point="org.eclipse.ui.views">
+      <category
+            name="Spoofax/IMP"
+            id="org.strategoxt.imp.astview">
+      </category>
+      <view
+            name="Abstract Syntax Tree View"
+            icon="icons/sample.gif"
+            category="org.strategoxt.imp.astview"
+            class="org.strategoxt.imp.astview.views.ASTView"
+            id="org.strategoxt.imp.astview.views.ASTView">
+      </view>
+   </extension>
+   <extension
+         point="org.eclipse.ui.perspectiveExtensions">
+      <perspectiveExtension
+            targetID="org.eclipse.jdt.ui.JavaPerspective">
+         <view
+               ratio="0.5"
+               relative="org.eclipse.ui.views.TaskList"
+               relationship="right"
+               id="org.strategoxt.imp.astview.views.ASTView">
+         </view>
+      </perspectiveExtension>
+   </extension>
+   <extension
+         point="org.eclipse.help.contexts">
+      <contexts
+            file="contexts.xml">
+      </contexts>
+   </extension>
+
+</plugin>

Added: spoofax-imp/trunk/org.strategoxt.imp.astview/src/org/strategoxt/imp/astview/views/ASTView.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.astview/src/org/strategoxt/imp/astview/views/ASTView.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.astview/src/org/strategoxt/imp/astview/views/ASTView.java	2009-09-26 12:43:00 UTC (rev 20028)
@@ -0,0 +1,289 @@
+package org.strategoxt.imp.astview.views;
+
+import java.util.ArrayList;
+
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.imp.editor.UniversalEditor;
+import org.eclipse.imp.parser.IParseController;
+import org.eclipse.jface.action.Action;
+import org.eclipse.jface.action.IMenuListener;
+import org.eclipse.jface.action.IMenuManager;
+import org.eclipse.jface.action.IToolBarManager;
+import org.eclipse.jface.action.MenuManager;
+import org.eclipse.jface.action.Separator;
+import org.eclipse.jface.dialogs.MessageDialog;
+import org.eclipse.jface.viewers.DoubleClickEvent;
+import org.eclipse.jface.viewers.IDoubleClickListener;
+import org.eclipse.jface.viewers.ISelection;
+import org.eclipse.jface.viewers.IStructuredContentProvider;
+import org.eclipse.jface.viewers.IStructuredSelection;
+import org.eclipse.jface.viewers.ITreeContentProvider;
+import org.eclipse.jface.viewers.LabelProvider;
+import org.eclipse.jface.viewers.TreeViewer;
+import org.eclipse.jface.viewers.Viewer;
+import org.eclipse.jface.viewers.ViewerSorter;
+import org.eclipse.swt.SWT;
+import org.eclipse.swt.graphics.Image;
+import org.eclipse.swt.widgets.Composite;
+import org.eclipse.swt.widgets.Menu;
+import org.eclipse.ui.IActionBars;
+import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.ISharedImages;
+import org.eclipse.ui.IWorkbenchActionConstants;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.part.DrillDownAdapter;
+import org.eclipse.ui.part.ViewPart;
+import org.strategoxt.imp.runtime.parser.SGLRParseController;
+import org.strategoxt.imp.runtime.parser.ast.AstNode;
+
+
+/*
+ * This sample class demonstrates how to plug-in a new
+ * workbench view. The view shows data obtained from the
+ * model. The sample creates a dummy model on the fly,
+ * but a real implementation would connect to the model
+ * available either in this or another plug-in (e.g. the workspace).
+ * The view is connected to the model using a content provider.
+ * <p>
+ * The view uses a label provider to define how model
+ * objects should be presented in the view. Each
+ * view can present the same model objects using
+ * different labels and icons, if needed. Alternatively,
+ * a single label provider can be shared between views
+ * in order to ensure that objects of the same type are
+ * presented in the same way everywhere.
+ * <p>
+ */
+
+public class ASTView extends ViewPart {
+	private TreeViewer viewer;
+	private DrillDownAdapter drillDownAdapter;
+	private Action doubleClickAction;
+
+	/*
+	 * The content provider class is responsible for
+	 * providing objects to the view. It can wrap
+	 * existing objects in adapters or simply return
+	 * objects as-is. These objects may be sensitive
+	 * to the current input of the view, or ignore
+	 * it and always show the same content 
+	 * (like Task List, for example).
+	 */
+	 
+	class TreeObject implements IAdaptable {
+		private String name;
+		private TreeParent parent;
+		
+		public TreeObject(String name) {
+			this.name = name;
+		}
+		public String getName() {
+			return name;
+		}
+		public void setParent(TreeParent parent) {
+			this.parent = parent;
+		}
+		public TreeParent getParent() {
+			return parent;
+		}
+		@Override
+		public String toString() {
+			return getName();
+		}
+		public Object getAdapter(Class key) {
+			return null;
+		}
+	}
+	
+	class TreeParent extends TreeObject {
+		private ArrayList children;
+		public TreeParent(String name) {
+			super(name);
+			children = new ArrayList();
+		}
+		public void addChild(TreeObject child) {
+			children.add(child);
+			child.setParent(this);
+		}
+		public void removeChild(TreeObject child) {
+			children.remove(child);
+			child.setParent(null);
+		}
+		public TreeObject [] getChildren() {
+			return (TreeObject [])children.toArray(new TreeObject[children.size()]);
+		}
+		public boolean hasChildren() {
+			return children.size()>0;
+		}
+	}
+
+	class ViewContentProvider implements IStructuredContentProvider, 
+										   ITreeContentProvider {
+		private TreeParent invisibleRoot;
+
+		public void inputChanged(Viewer v, Object oldInput, Object newInput) {
+		}
+		public void dispose() {
+		}
+		public Object[] getElements(Object parent) {
+			if (parent.equals(getViewSite())) {
+				if (invisibleRoot==null) initialize();
+				return getChildren(invisibleRoot);
+			}
+			return getChildren(parent);
+		}
+		public Object getParent(Object child) {
+			if (child instanceof TreeObject) {
+				return ((TreeObject)child).getParent();
+			}
+			return null;
+		}
+		public Object [] getChildren(Object parent) {
+			if (parent instanceof TreeParent) {
+				return ((TreeParent)parent).getChildren();
+			}
+			return new Object[0];
+		}
+		public boolean hasChildren(Object parent) {
+			if (parent instanceof TreeParent)
+				return ((TreeParent)parent).hasChildren();
+			return false;
+		}
+/*
+ * We will set up a dummy model to initialize tree heararchy.
+ * In a real code, you will connect to a real model and
+ * expose its hierarchy.
+ */
+		private void initialize() {
+			IWorkbenchPage activePage =
+				PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
+			if (activePage == null)
+				return;
+			IEditorPart editor = activePage.getActiveEditor();
+			if (!(editor instanceof UniversalEditor))
+				return;
+			IParseController controller = ((UniversalEditor) editor).getParseController();
+			if (!(controller instanceof SGLRParseController))
+				return;
+			AstNode ast = ((SGLRParseController) controller).getCurrentAst();
+			if (ast == null)
+				return;
+			toTree(ast, invisibleRoot);
+		}
+		
+		private void toTree(AstNode ast, TreeParent tree) {
+			 for (AstNode child : ast.getChildren()) {
+				if (child.getChildren().isEmpty()) {
+					tree.addChild(new TreeObject(child.getConstructor()));
+				} else {
+					TreeParent treeChild = new TreeParent(child.getConstructor());
+					tree.addChild(treeChild);
+					toTree(child, treeChild);
+				}
+			 }
+		}
+		
+	}
+	class ViewLabelProvider extends LabelProvider {
+
+		@Override
+		public String getText(Object obj) {
+			return obj.toString();
+		}
+		@Override
+		public Image getImage(Object obj) {
+			String imageKey = ISharedImages.IMG_OBJ_ELEMENT;
+			if (obj instanceof TreeParent)
+			   imageKey = ISharedImages.IMG_OBJ_FOLDER;
+			return PlatformUI.getWorkbench().getSharedImages().getImage(imageKey);
+		}
+	}
+	class NameSorter extends ViewerSorter {
+	}
+
+	/**
+	 * The constructor.
+	 */
+	public ASTView() {
+	}
+
+	/**
+	 * This is a callback that will allow us
+	 * to create the viewer and initialize it.
+	 */
+	@Override
+	public void createPartControl(Composite parent) {
+		viewer = new TreeViewer(parent, SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL);
+		drillDownAdapter = new DrillDownAdapter(viewer);
+		viewer.setContentProvider(new ViewContentProvider());
+		viewer.setLabelProvider(new ViewLabelProvider());
+		viewer.setSorter(new NameSorter());
+		viewer.setInput(getViewSite());
+
+		// Create the help context id for the viewer's control
+		PlatformUI.getWorkbench().getHelpSystem().setHelp(viewer.getControl(), "org.strategoxt.imp.astview.viewer");
+		makeActions();
+		hookContextMenu();
+		hookDoubleClickAction();
+		contributeToActionBars();
+	}
+
+	private void hookContextMenu() {
+		MenuManager menuMgr = new MenuManager("#PopupMenu");
+		menuMgr.setRemoveAllWhenShown(true);
+		menuMgr.addMenuListener(new IMenuListener() {
+			public void menuAboutToShow(IMenuManager manager) {
+				ASTView.this.fillContextMenu(manager);
+			}
+		});
+		Menu menu = menuMgr.createContextMenu(viewer.getControl());
+		viewer.getControl().setMenu(menu);
+		getSite().registerContextMenu(menuMgr, viewer);
+	}
+
+	private void contributeToActionBars() {
+		IActionBars bars = getViewSite().getActionBars();
+		fillLocalPullDown(bars.getMenuManager());
+	}
+
+	private void fillContextMenu(IMenuManager manager) {
+		manager.add(new Separator());
+		drillDownAdapter.addNavigationActions(manager);
+		// Other plug-ins can contribute there actions here
+		manager.add(new Separator(IWorkbenchActionConstants.MB_ADDITIONS));
+	}
+
+	private void makeActions() {
+		doubleClickAction = new Action() {
+			@Override
+			public void run() {
+				ISelection selection = viewer.getSelection();
+				Object obj = ((IStructuredSelection)selection).getFirstElement();
+				showMessage("Double-click detected on "+obj.toString());
+			}
+		};
+	}
+
+	private void hookDoubleClickAction() {
+		viewer.addDoubleClickListener(new IDoubleClickListener() {
+			public void doubleClick(DoubleClickEvent event) {
+				doubleClickAction.run();
+			}
+		});
+	}
+	private void showMessage(String message) {
+		MessageDialog.openInformation(
+			viewer.getControl().getShell(),
+			"Abstract Syntax Tree View",
+			message);
+	}
+
+	/**
+	 * Passing the focus request to the viewer's control.
+	 */
+	@Override
+	public void setFocus() {
+		viewer.getControl().setFocus();
+	}
+}
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml	2009-09-25 13:25:02 UTC (rev 20027)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.xml	2009-09-26 12:43:00 UTC (rev 20028)
@@ -1,51 +1,71 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <project name="EditorService" default="all">
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="EditorService"/>
+        <property name="esvmodule" value="EditorService"/>
+        <property name="strmodule" value="editorservice"/>
     
         <!-- Project directories -->
         <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
         <property name="syntax" location="syntax"/>
-        <property name="editor" location="editor"/>
         <property name="lib" location="lib"/>
         <property name="build" location="bin"/>
         <property name="dist" location="bin/dist"/>
         
-        <!-- Key input modules -->
-        <property name="sdfmodule" value="EditorService"/>
-        <property name="esvmodule" value="EditorService"/>
-        <property name="strmodule" location="editorservice"/>
-        <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
-        
-        <!-- External .def location (optional)
+        <!-- External .def and .jar locations
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
         -->
         
         <!-- Environment configuration -->
         <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
-        <property name="build.strategoxt.sdf.imports" value=""/>
-        <property name="build.strategoxt.strc.imports" value=""/>
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args" value="-m main-${strmodule} --library -I ${trans} -I ${build} -I ${lib}
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc
+                        -I ${user.home}/.nix-profile/share/java-front
+                        -I ${basedir}
+                        -la ${user.home}/.nix-profile/lib/libjava-front.la"/>
         
-        <target name="all" depends="strc,sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        <!-- Initialization -->
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <available file="${build.strategoxt}/strj" property="build.stratego.usenativestrj"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <fail if="externaljar" unless="externaljarflags"/>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="include"/>
+    
+        <target name="all" depends="stratego.ctree,sdf2table,sdf2imp"/>
+
+        <target name="sdf2imp" depends="sdf2imp.eclipse,sdf2imp.standalone"/>
         
-        <target name="init">
-            <mkdir dir="${build}"/>
-            <mkdir dir="${dist}"/>
-        </target>
-        
         <target name="sdf2imp.eclipse" depends="sdf2table" if="eclipse.running">
-            <!-- HACK: Trigger the Eclipse builder rather than build it here -->
-            <!-- (if we did do this here, we'd have to use the -p option to -->
-            <!--  specify the parse table, and put the table in another dir) -->
+            <!-- In Eclipse, we trigger the Eclipse builder rather than build it here -->
             <touch file="include/${esvmodule}.packed.esv"/>
             <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
         </target>
         
         <target name="sdf2imp.standalone" depends="sdf2table,aux-files" unless="eclipse.running">
-            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true" fork="true">
+                <jvmarg line="-ss4m -server"/> 
                 <arg value="-i"/>
                 <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
                 <arg value="-p"/>
-                <arg value="None"/>
+                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
             </java>
         </target>
     
@@ -69,10 +89,10 @@
                 <targetfileset file="include/${sdfmodule}-Permissive.def"/>
             </dependset>
             <available file="include/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
-            <antcall target="make-permissive.real"/>
+            <antcall target="make-permissive.helper"/>
         </target>
     
-        <target name="make-permissive.real" unless="permissive-grammar.available" depends="aux-files">
+        <target name="make-permissive.helper" unless="permissive-grammar.available" depends="aux-files">
             <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
                 <arg value="-i"/>
                 <arg value="${basedir}/include/${sdfmodule}.def"/>
@@ -89,7 +109,7 @@
             <get src="${site}/sdf2imp.jar" dest="aux/sdf2imp.jar" usetimestamp="true" ignoreerrors="true"/>
         </target>
     
-        <target name="pack-sdf" depends="init" unless="externaldef">
+        <target name="pack-sdf" unless="externaldef">
             <dependset>
                 <srcfilelist dir="${syntax}" files="**/*.sdf"/>
                 <targetfileset file="${syntax}/${sdfmodule}.def"/>
@@ -103,119 +123,143 @@
                 <arg value="${trans}"/>
                 <arg value="-I"/>
                 <arg value="${lib}"/>
-                <arg line="${build.strategoxt.sdf.imports}"/>
+                <arg line="${build.sdf.imports}"/>
                 
                 <fileset file="${syntax}/${sdfmodule}.sdf"/>
                 <mapper type="glob" from="*.sdf" to="*.def"/>
             </apply>
         </target>
     
-        <target name="copy-sdf" depends="init" if="externaldef">
-            <copy file="${externaldef}" todir="include"/>
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" todir="include" preservelastmodified="true"/>
         </target>
     
-        <target name="rtg2sig" depends="init,sdf2rtg" if="strmodule.present" unless="external-def">
-            <apply executable="${build.strategoxt}/rtg2sig" dest="${build}" failonerror="true">
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="include" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" depends="sdf2rtg" if="build.stratego.enabled" unless="external-def">
+            <apply executable="${build.strategoxt}/rtg2sig" dest="include" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-o"/>
                 <targetfile/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
                 
-                <fileset file="${syntax}/${sdfmodule}.rtg"/>
+                <fileset file="include/${sdfmodule}.rtg"/>
                 <mapper type="glob" from="*.rtg" to="*.str"/>
             </apply>
         </target>
         
-        <target name="sdf2rtg" depends="init,pack-sdf" if="strmodule.present" unless="external-def">
-            <apply executable="${build.strategoxt}/sdf2rtg" dest="${build}" failonerror="true">
+        <target name="sdf2rtg" depends="pack-sdf" if="build.stratego.enabled" unless="external-def">
+            <apply executable="${build.strategoxt}/sdf2rtg" dest="include" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-m"/>
                 <arg value="${sdfmodule}"/>
                 <arg value="-o"/>
                 <targetfile/>
+                <arg value="--ignore-missing-cons"/>
                 
-                <fileset file="${syntax}/${sdfmodule}.str"/>
+                <fileset file="include/${sdfmodule}.def"/>
                 <mapper type="glob" from="*.def" to="*.rtg"/>
             </apply>
         </target>
     
-        <target name="strc" depends="init,rtg2sig" if="strmodule.present">
-            <antcall target="strc-call">
-                <param name="build.strategoxt.strc.params" value=""/>
-                <param name="build.strategoxt.strc.extension" value="*"/>
-                <param name="strcExecutable" value="strc"/>
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                  <include name="**/*.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/{strmodule}.ctree"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>            
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value="-F --library"/>
+                <param name="build.stratego.extension" value="ctree"/>
+                <param name="build.stratego.compiler" value="strc"/>
             </antcall>
         </target>
     
-        <target name="strj" depends="init,rtg2sig" if="strmodule.present">
-            <antcall target="strc-call">
-                <param name="build.strategoxt.strc.params" value=""/>
-                <param name="build.strategoxt.strc.extension" value="*.java"/>
-                <param name="strcExecutable" value="strj"/>
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.java" depends="stratego.java.native,stratego.java.jvm"/>
+    
+        <target name="stratego.java.native" if="build.stratego.usenativestrj"> 
+            <antcall target="stratego.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/${src-gen}"/>
+                <param name="build.stratego.extraargs" value="-la java-front"/>
+                <param name="build.stratego.extension" value="java"/>
+                <param name="build.stratego.compiler" value="strj"/>
             </antcall>
         </target>
-        
-        <target name="strji" depends="init,rtg2sig" if="strmodule.present">
-            <antcall target="strc-call">
-                <param name="build.strategoxt.strc.params" value="-F --library"/>
-                <param name="build.strategoxt.strc.extension" value="*.ctree"/>
-                <param name="strcExecutable" value="strc"/>
+    
+        <target name="stratego.java.jvm" unless="build.stratego.usenativestrj">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                  <include name="**/*.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/${src-gen}/trans"/>
+                <param name="build.stratego.extraargs" value="-la java-front"/>
+                <param name="build.stratego.extension" value="java"/>
             </antcall>
+            <javac classpath="aux/strategoxt.jar${externaljarimport}" srcdir="${src-gen}/trans" destdir="${build}" source="1.5" debug="on"/>
+            <jar basedir="${build}" includes="trans/**" destfile="include/${strmodule}.jar"/>
         </target>
+            
+        <target name="stratego.jvm.helper" depends="aux-files,rtg2sig" unless="strc-java.available" if="build.stratego.enabled">
+            <java classname="org.strategoxt.strj.Main" classpath="aux/strategoxt.jar:aux/sdf2imp.jar" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputpath}/${strmodule}.${build.stratego.extension}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="-clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+            </java>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
         
-        <target name="strc-call" depends="init,rtg2sig">
-            <dependset>
-                <srcfilelist dir="${trans}" files="**/*.str"/>
-                <srcfilelist dir="${build}" files="**/*.str"/>
-                <targetfileset dir="${dist}" includes="**/*"/>
-            </dependset>
-            <apply executable="${build.strategoxt}/{strcExecutable}" dest="include" failonerror="true">
-                <arg value=".str"/>
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-o"/>
                 <targetfile/>
-                <arg value="-m"/>
-                <arg value="-S"/> <!-- (Silent mode) -->
-                <arg value="-I"/>
-                <arg value="${trans}"/>
-                <arg value="-I"/>
-                <arg value="${build}"/>
-                <arg value="-I"/>
-                <arg value="${lib}"/>
-                <arg value="-I"/>
-                <arg value="${user.home}/.nix-profile/share/java-front"/>
-                <arg value="-la"/>
-                <arg value="stratego-lib"/>
-                <arg value="-la"/>
-                <arg value="${user.home}/.nix-profile/lib/libjava-front.la"/>
-                <arg value="-la"/>
-                <arg value="stratego-sglr"/>
-                <arg value="-la"/>
-                <arg value="stratego-gpp"/>
-                <arg value="-la"/>
-                <arg value="stratego-xtc"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
                 
-                <arg line="${build.strategoxt.strc.params}"/>
-                <arg line="${build.strategoxt.strc.imports}"/>
-                
                 <fileset file="${trans}/${strmodule}.str"/>
-                <mapper type="glob" from="*.str" to="${build.strategoxt.strc.extension}"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
             </apply>
-            
-            <!-- Remove any intermediate files -->
-            <delete>
-                <fileset dir="${dist}">
-                    <include name="**/*.c"/>
-                    <include name="**/*.dep"/>
-                    <include name="**/*.lo"/>
-                    <include name="**/*.o"/>
-                </fileset>
-            </delete>
         </target>
         
         <target name="clean" description="clean up">
             <delete dir="${build}"/>
+            <delete file="${src-gen}/trans/Main.java"/>
         </target>
-    </project>
+    </project>
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml	2009-09-25 13:25:02 UTC (rev 20027)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.xml	2009-09-26 12:43:00 UTC (rev 20028)
@@ -1,51 +1,71 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
 <project name="SDF" default="all">
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="SDF"/>
+        <property name="esvmodule" value="SDF"/>
+        <property name="strmodule" value="sdf"/>
     
         <!-- Project directories -->
         <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
         <property name="syntax" location="syntax"/>
-        <property name="editor" location="editor"/>
         <property name="lib" location="lib"/>
         <property name="build" location="bin"/>
         <property name="dist" location="bin/dist"/>
         
-        <!-- Key input modules -->
-        <property name="sdfmodule" value="SDF"/>
-        <property name="esvmodule" value="SDF"/>
-        <property name="strmodule" location="sdf"/>
-        <available file="${trans}/${strmodule}.str" property="strmodule.present"/>
-        
-        <!-- External .def location (optional)
+        <!-- External .def and .jar locations
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
         -->
         
         <!-- Environment configuration -->
         <property name="build.strategoxt" location="${user.home}/.nix-profile/bin"/>
-        <property name="build.strategoxt.sdf.imports" value=""/>
-        <property name="build.strategoxt.strc.imports" value=""/>
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args" value="-m main-${strmodule} --library -I ${trans} -I ${build} -I ${lib}
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc
+                        -I ${user.home}/.nix-profile/share/java-front
+                        -I ${basedir}
+                        -la ${user.home}/.nix-profile/lib/libjava-front.la"/>
         
-        <target name="all" depends="strc,sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        <!-- Initialization -->
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <available file="${build.strategoxt}/strj" property="build.stratego.usenativestrj"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <fail if="externaljar" unless="externaljarflags"/>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="include"/>
+    
+        <target name="all" depends="stratego.ctree,sdf2table,sdf2imp"/>
+
+        <target name="sdf2imp" depends="sdf2imp.eclipse,sdf2imp.standalone"/>
         
-        <target name="init">
-            <mkdir dir="${build}"/>
-            <mkdir dir="${dist}"/>
-        </target>
-        
         <target name="sdf2imp.eclipse" depends="sdf2table" if="eclipse.running">
-            <!-- HACK: Trigger the Eclipse builder rather than build it here -->
-            <!-- (if we did do this here, we'd have to use the -p option to -->
-            <!--  specify the parse table, and put the table in another dir) -->
+            <!-- In Eclipse, we trigger the Eclipse builder rather than build it here -->
             <touch file="include/${esvmodule}.packed.esv"/>
             <eclipse.refreshLocal resource="include/${esvmodule}.packed.esv"/>
         </target>
         
         <target name="sdf2imp.standalone" depends="sdf2table,aux-files" unless="eclipse.running">
-            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" classpath="aux/sdf2imp.jar:aux/strategoxt.jar" failonerror="true" fork="true">
+                <jvmarg line="-ss4m -server"/> 
                 <arg value="-i"/>
                 <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
                 <arg value="-p"/>
-                <arg value="None"/>
+                <arg value="${basedir}/include/${sdfmodule}.tbl"/>
             </java>
         </target>
     
@@ -69,10 +89,10 @@
                 <targetfileset file="include/${sdfmodule}-Permissive.def"/>
             </dependset>
             <available file="include/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
-            <antcall target="make-permissive.real"/>
+            <antcall target="make-permissive.helper"/>
         </target>
     
-        <target name="make-permissive.real" unless="permissive-grammar.available" depends="aux-files">
+        <target name="make-permissive.helper" unless="permissive-grammar.available" depends="aux-files">
             <java classname="org.strategoxt.permissivegrammars.make_permissive" classpath="aux/make_permissive.jar:aux/strategoxt.jar" failonerror="true">
                 <arg value="-i"/>
                 <arg value="${basedir}/include/${sdfmodule}.def"/>
@@ -89,7 +109,7 @@
             <get src="${site}/sdf2imp.jar" dest="aux/sdf2imp.jar" usetimestamp="true" ignoreerrors="true"/>
         </target>
     
-        <target name="pack-sdf" depends="init" unless="externaldef">
+        <target name="pack-sdf" unless="externaldef">
             <dependset>
                 <srcfilelist dir="${syntax}" files="**/*.sdf"/>
                 <targetfileset file="${syntax}/${sdfmodule}.def"/>
@@ -103,119 +123,143 @@
                 <arg value="${trans}"/>
                 <arg value="-I"/>
                 <arg value="${lib}"/>
-                <arg line="${build.strategoxt.sdf.imports}"/>
+                <arg line="${build.sdf.imports}"/>
                 
                 <fileset file="${syntax}/${sdfmodule}.sdf"/>
                 <mapper type="glob" from="*.sdf" to="*.def"/>
             </apply>
         </target>
     
-        <target name="copy-sdf" depends="init" if="externaldef">
-            <copy file="${externaldef}" todir="include"/>
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" todir="include" preservelastmodified="true"/>
         </target>
     
-        <target name="rtg2sig" depends="init,sdf2rtg" if="strmodule.present" unless="external-def">
-            <apply executable="${build.strategoxt}/rtg2sig" dest="${build}" failonerror="true">
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="include" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" depends="sdf2rtg" if="build.stratego.enabled" unless="external-def">
+            <apply executable="${build.strategoxt}/rtg2sig" dest="include" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-o"/>
                 <targetfile/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
                 
-                <fileset file="${syntax}/${sdfmodule}.rtg"/>
+                <fileset file="include/${sdfmodule}.rtg"/>
                 <mapper type="glob" from="*.rtg" to="*.str"/>
             </apply>
         </target>
         
-        <target name="sdf2rtg" depends="init,pack-sdf" if="strmodule.present" unless="external-def">
-            <apply executable="${build.strategoxt}/sdf2rtg" dest="${build}" failonerror="true">
+        <target name="sdf2rtg" depends="pack-sdf" if="build.stratego.enabled" unless="external-def">
+            <apply executable="${build.strategoxt}/sdf2rtg" dest="include" failonerror="true">
                 <arg value="-i"/>
                 <srcfile/>
                 <arg value="-m"/>
                 <arg value="${sdfmodule}"/>
                 <arg value="-o"/>
                 <targetfile/>
+                <arg value="--ignore-missing-cons"/>
                 
-                <fileset file="${syntax}/${sdfmodule}.str"/>
+                <fileset file="include/${sdfmodule}.def"/>
                 <mapper type="glob" from="*.def" to="*.rtg"/>
             </apply>
         </target>
     
-        <target name="strc" depends="init,rtg2sig" if="strmodule.present">
-            <antcall target="strc-call">
-                <param name="build.strategoxt.strc.params" value=""/>
-                <param name="build.strategoxt.strc.extension" value="*"/>
-                <param name="strcExecutable" value="strc"/>
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                  <include name="**/*.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/{strmodule}.ctree"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>            
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value="-F --library"/>
+                <param name="build.stratego.extension" value="ctree"/>
+                <param name="build.stratego.compiler" value="strc"/>
             </antcall>
         </target>
     
-        <target name="strj" depends="init,rtg2sig" if="strmodule.present">
-            <antcall target="strc-call">
-                <param name="build.strategoxt.strc.params" value=""/>
-                <param name="build.strategoxt.strc.extension" value="*.java"/>
-                <param name="strcExecutable" value="strj"/>
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.java" depends="stratego.java.native,stratego.java.jvm"/>
+    
+        <target name="stratego.java.native" if="build.stratego.usenativestrj"> 
+            <antcall target="stratego.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/${src-gen}"/>
+                <param name="build.stratego.extraargs" value="-la java-front"/>
+                <param name="build.stratego.extension" value="java"/>
+                <param name="build.stratego.compiler" value="strj"/>
             </antcall>
         </target>
-        
-        <target name="strji" depends="init,rtg2sig" if="strmodule.present">
-            <antcall target="strc-call">
-                <param name="build.strategoxt.strc.params" value="-F --library"/>
-                <param name="build.strategoxt.strc.extension" value="*.ctree"/>
-                <param name="strcExecutable" value="strc"/>
+    

(1144 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Mon Sep 28 12:36:41 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 28 Sep 2009 10:36:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20029 - LennartKats -
	strc-java/trunk
Message-ID: <200909281036.n8SAafCL028116@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-28 10:36:40 +0000 (Mon, 28 Sep 2009)
New Revision: 20029

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20029&view=rev

Modified:
   strc-java/trunk/AUTHORS
   strc-java/trunk/README

Log:
Updated readme.

Changes:

Modified: strc-java/trunk/AUTHORS
===================================================================
--- strc-java/trunk/AUTHORS	2009-09-26 12:43:00 UTC (rev 20028)
+++ strc-java/trunk/AUTHORS	2009-09-28 10:36:40 UTC (rev 20029)
@@ -6,4 +6,5 @@
 
 The development of STRJ would not have been possible without the
 efforts of Eelco Visser and his team in developing the STRC reference
-stratego compiler.
+stratego compiler. Martin Bravenboer's Java-Front library and syntax
+definition have also been indispensable for the development STRJ.

Modified: strc-java/trunk/README
===================================================================
--- strc-java/trunk/README	2009-09-26 12:43:00 UTC (rev 20028)
+++ strc-java/trunk/README	2009-09-28 10:36:40 UTC (rev 20029)
@@ -1,13 +1,14 @@
 STRJ: THE STRATEGO-TO-JAVA COMPILER
 ===================================
 
-The compiler comes in two flavors: one called is strj, and is compiled
-with the standard C-based strc. The second is a bootstrapped,
-cross-platform compiler that lives in strategoxt.jar. Note that
-Stratego executables compiled with strj do not support XTC (since it
-depends on native executables) and the strategoxt.jar compiler is no
-exception. Another difference between the two is that strj still uses
-the C-based SGLR parser, and strategoxt.jar uses JSGLR.
+The compiler comes in two flavors: one called strj, compiled with the
+standard C-based strc. The second is a bootstrapped, cross-platform
+compiler that lives in strategoxt.jar. Note that Stratego executables
+compiled with strj do not support XTC (since it depends on forking
+native executables and assumes filesystem access) and the
+strategoxt.jar compiler is no exception. Another difference between
+the two is that strj still uses the C-based SGLR parser, and
+strategoxt.jar uses JSGLR.
 
 Compiling a simple application from the command line with either
 compiler is similar to doing so with the C version of Stratego:
@@ -20,8 +21,8 @@
 
 It should be noted that at this time the compiler only outputs '.java'
 source files and not '.class' files. Subsequent compilation should be
-done using a standard Java compiler (ideally in an automated fashion
-using Eclipse or an Ant build script). The (non-portable) strj-jar
+done using a standard Java compiler (ideally, in an automated fashion
+using an Ant build script or Eclipse). The (non-portable) strj-jar
 shell script can also help with command-line or scripted builds.
 
 KNOWN ISSUES
@@ -33,15 +34,17 @@
 default).
 
 The standard Sun compiler can be quite slow when compiling large
-Stratego projects. We recommend using ecj (Eclipse Compiler for Java)
-instead, which is much faster and less memory-intensive.  ecj is
-distributed as part of Eclipse (java -cp
-plugins/org.eclipse.jdt.core_*.jar
-org.eclipse.jdt.internal.compiler.batch.Main) and directly available
-through the package manager of various Linux distributions. When using
-the Sun compiler, you may need to add option -J-mx256m to increase the
-available heap space and require a fair amount of patience ;)
+Stratego projects. We recommend using ECJ (Eclipse Compiler for Java)
+instead, which is much faster and less memory-intensive. ECJ is
+distributed as part of Eclipse, and can be executed as follows:
 
+  java -cp plugins/org.eclipse.jdt.core_*.jar  org.eclipse.jdt.internal.compiler.batch.Main
+
+Many Linux distributions also provide a stand-alone version of ECJ
+through their package manager. When using the Sun compiler, you may
+need to add option -J-mx256m to increase the available heap space, and
+likely need to have a fair amount of patience ;)
+
 A final open issue is the stack usage by typical Stratego programs,
 putting JVM implementations with a small default stack size at risk of
 throwing a StackOverflowException (notably the Sun JVM on Linux). For
@@ -53,24 +56,25 @@
 =========================================
 
 A trend in Stratego programs has been to use the standard libraries in
-favor of the (slower) XTC interface. For example, the parse-file
-strategy from libstratego-sglr can be used to parse files. Since XTC
-depends on native executables and a centralized repository, it is not
-portable and not supported on the Java platform. As an alternative,
-library calls should be used instead, which is generally the preferred
-method for invoking external components.
+favor of the (slower, less portable) XTC interface. For example, the
+parse-file strategy from libstratego-sglr can be used to parse
+files. Since XTC depends on native executables and a centralized
+repository, it is not portable and not supported on the Java
+platform. As an alternative, library calls should be used instead,
+which is generally the preferred method for invoking external
+components.
 
 Libraries in the Java environment have a package name. For example,
 the Stratego standard library resides in the
-org.strategoxt.libstratego_lib package. To maintain compatibility,
-these package names are not used within the Stratego language, but
-only at compile time and when the components are linked. For example,
-to link a program to the standard library the option '-la
-org.strategoxt.stratego_lib' can be specified. The standard
-libraries also have aliases that correspond to the XTC names commonly
-used with strc; '-la stratego-lib' is also accepted. To define a
-package name for your own library, use the '-p' and '--library'
-options. For example:
+org.strategoxt.stratego_lib package. To maintain compatibility, these
+package names are not used within the Stratego language, but only at
+compile time and when the components are linked. For example, to link
+a program to the standard library the option '-la
+org.strategoxt.stratego_lib' can be specified. The standard libraries
+also have aliases that correspond to the XTC names commonly used with
+strc; '-la stratego-lib' is also accepted. To define a package name
+for your own library, use the '-p' and '--library' options. For
+example:
 
   java -jar strategoxt.jar -i foo.str --library --clean -p org.foo \
        -o bin/org/foo/Main.java
@@ -117,11 +121,20 @@
   pre-compile it to a .ctree file using STRJ and the '-F --library'
   options.
 
+SOURCE CODE
+===========
+
+Source code is available directly from SVN at
+
+  https://svn.strategoxt.org/repos/StrategoXT/strc-java/trunk
+  
+or can be downloaded as a package at hydra.nixos.org.
+
 LICENSING
 =========
 
 Most STRJ code is licensed under the GNU Lesser General Public License.
 Some runtime components are licensed under the Eclipse Public License;
-external components may be covered by different licences.
+external components may be covered by different licenses.
 
 Authors and contributors are listed in the AUTHORS file.



From L.C.L.Kats at tudelft.nl  Mon Sep 28 12:55:49 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 28 Sep 2009 10:55:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20030 - LennartKats -
	strc-java/trunk
Message-ID: <200909281055.n8SAtnBP028266@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-28 10:55:49 +0000 (Mon, 28 Sep 2009)
New Revision: 20030

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20030&view=rev

Modified:
   strc-java/trunk/README

Log:
Updated readme.

Changes:

Modified: strc-java/trunk/README
===================================================================
--- strc-java/trunk/README	2009-09-28 10:36:40 UTC (rev 20029)
+++ strc-java/trunk/README	2009-09-28 10:55:49 UTC (rev 20030)
@@ -28,9 +28,12 @@
 KNOWN ISSUES
 ============
 
-The Java version of SGLR, JSGLR, is not yet fully mature. In
-particular, the post-parse filter implementation may not yet be
-complete (especially the heuristic filters that are disabled by
+The Stratego/J runtime implements most of the primitives of the
+natively compiled version of Stratego, but some compatibility issues
+may arise. In particular, the parsing primitives are implemented using
+JSGLR, the Java version of SGLR, which is not yet fully
+mature. Mainly, the post-parse filter implementation is not yet
+complete (especially the heuristic filters -- which are disabled by
 default).
 
 The standard Sun compiler can be quite slow when compiling large
@@ -45,6 +48,15 @@
 need to add option -J-mx256m to increase the available heap space, and
 likely need to have a fair amount of patience ;)
 
+Stratego programs compiled to Java do not have the same performance
+characteristics as those compiled using the native Stratego compiler
+strc. The exact numbers vary per application (some, such as the
+somewhat artificial ASF+SDF benchmark, actually run faster on Java),
+but natively compiled Stratego applications that include parsing and
+pretty-printing are typically a factor two faster. Future
+optimizations, particularly in the term library and in I/O, may make
+this gap smaller.
+
 A final open issue is the stack usage by typical Stratego programs,
 putting JVM implementations with a small default stack size at risk of
 throwing a StackOverflowException (notably the Sun JVM on Linux). For



From L.C.L.Kats at tudelft.nl  Mon Sep 28 17:16:19 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 28 Sep 2009 15:16:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20031 - LennartKats -
	aster/trunk/runtime/aster/lang
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override
Message-ID: <200909281516.n8SFGJRl032230@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-28 15:16:18 +0000 (Mon, 28 Sep 2009)
New Revision: 20031

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20031&view=rev

Modified:
   aster/trunk/runtime/aster/lang/annotations.str
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/performance-tweaks.str

Log:
Avoid Aster-specific newname override.

Changes:

Modified: aster/trunk/runtime/aster/lang/annotations.str
===================================================================
--- aster/trunk/runtime/aster/lang/annotations.str	2009-09-28 10:55:49 UTC (rev 20030)
+++ aster/trunk/runtime/aster/lang/annotations.str	2009-09-28 15:16:18 UTC (rev 20031)
@@ -161,11 +161,14 @@
   aster-add-anno:
     t {a*} -> t {b*}
     where
+      x := <if-c-platform(<newname> "@"); if-java-platform(SRTS-EXT-newint)>;
       if [] := a* then
-        b* := [<newname> "@"] // adding annos is expensive, but newname is as cheap as a counter or new
+        b* := [x] // adding annos is expensive, but newname is as cheap as a counter or new
       else
-        b* := [<newname> "@"| <filter(not(aster-is-anno))> a*]
+        b* := [x| <filter(not(aster-is-anno))> a*]
       end
+
+  external SRTS-EXT-newint(|)
   
   aster-remove-annos =
     // leaves-consnil should suffice in most cases, but this

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/performance-tweaks.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/performance-tweaks.str	2009-09-28 10:55:49 UTC (rev 20030)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/performance-tweaks.str	2009-09-28 15:16:18 UTC (rev 20031)
@@ -47,13 +47,8 @@
   override at-end(s) =
     SRTS-EXT-at-end(s)
 
-  extend newname =
-    ?"@"; SRTS-EXT-newint
-
   external SRTS-EXT-crush(nul, sum, s|)
   
   external SRTS-EXT-filter(s|)
 
   external SRTS-EXT-at-end(s|)
-
-  external SRTS-EXT-newint(|)



From L.C.L.Kats at tudelft.nl  Tue Sep 29 13:22:48 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 29 Sep 2009 11:22:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20032 - LennartKats -
	aster/trunk/trans/front strc-java/trunk/test/aster
Message-ID: <200909291122.n8TBMms1015696@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-29 11:22:48 +0000 (Tue, 29 Sep 2009)
New Revision: 20032

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20032&view=rev

Modified:
   aster/trunk/trans/front/include-library.str
   strc-java/trunk/test/aster/test_attributes.str

Log:
Fixed the new aster-add-anno on Java; recompiled the attribute tests for strc-java.

Changes:

Modified: aster/trunk/trans/front/include-library.str
===================================================================
--- aster/trunk/trans/front/include-library.str	2009-09-28 15:16:18 UTC (rev 20031)
+++ aster/trunk/trans/front/include-library.str	2009-09-29 11:22:48 UTC (rev 20032)
@@ -22,7 +22,7 @@
     rules(AsterRuntimeLibrary := <id>)
   
   is-library-excluded =
-    not(is-external-def) <+ ExtSDef("SRTS-EXT-eq-ignore-annos", [], [id])
+    not(is-external-def) <+ ExtSDef(string-starts-with(|"SRTS-EXT"), id, id)
   
   aster-include-library:
     Module(name, decl*) -> Module(name, [decl*, lib*])

Modified: strc-java/trunk/test/aster/test_attributes.str
===================================================================
--- strc-java/trunk/test/aster/test_attributes.str	2009-09-28 15:16:18 UTC (rev 20031)
+++ strc-java/trunk/test/aster/test_attributes.str	2009-09-29 11:22:48 UTC (rev 20032)
@@ -930,7 +930,7 @@
       , ?2{_}
       )
     ; apply-and-check(
-        !"attribute result is an initialized term (4)"
+        !"attribute result is an initialized term (5)"
       , (id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
         ; !<id>
         ; aster-init-node-ensure(
@@ -963,7 +963,7 @@
       , ?2{_}
       )
     ; apply-and-check(
-        !"attribute result is an initialized term (4)"
+        !"attribute result is an initialized term (6)"
       , not((id < id + ?all-parents0 ; ?global-cache0 ; ?rewrite-mode0)
             ; !<id>
             ; aster-init-node-ensure(
@@ -1875,9 +1875,7 @@
   eval-is-root-100000(|parent0, all-parents0, global-cache0, rewrite-mode0) =
     ?node0
     ; where(?<id>)
-    ; where(where(not(!<id>
-                      ; get-parent(|<all-parents>)
-                      ; not(NoParent))))
+    ; where(where(get-parent(|<all-parents>) => NoParent()))
     ; (!<id> <+ !EVAL_FAILED())
 
   eval-root-100000(|parent0, all-parents0, global-cache0, rewrite-mode0) =
@@ -2539,24 +2537,12 @@
                                , <target-to-key> node
                                )
        ; filter(
-           if where(?node0
-                    < !decorated-value-cache0 <+ a => decorated-value-cache0
-                    + a) then
-             if ?node0 then
-               !decorated-value-cache0 <+ a => decorated-value-cache0
-             else
-               a
-             end
-             ; not(EVAL_FAILED)
+           if ?node0 then
+             !decorated-value-cache0 <+ a => decorated-value-cache0
            else
-             fatal-err(
-             | [ "Internal error in attribute '"
-               , <!signature0 => Attribute(<id>, _, _)>
-               , "': "
-               , "equation does not match targets definition"
-               ]
-             )
+             a
            end
+           ; not(EVAL_FAILED)
          )
        <+ !EVAL_FAILED())
 
@@ -3155,9 +3141,9 @@
             log(
             | Critical()
             , [ message
-              , " at attribute "
+              , " at attribute '"
               , <!signature0 => Attribute(<id>, _, _)>
-              , " for: "
+              , "' for: "
               ]
             , <eval-path(
                | <?node0 < !parent0 + !UnknownParent()>
@@ -3223,13 +3209,13 @@
            end
            ; not(EVAL_FAILED))
         ; if not(condition) then
-            prim("SSL_stacktrace_get_all_frame_names") => trace
+            where(prim("SSL_stacktrace_get_all_frame_names") => trace)
             ; log(
               | Critical()
               , [ message
-                , " at attribute "
+                , " at attribute '"
                 , <!signature0 => Attribute(<id>, _, _)>
-                , " for "
+                , "' for "
                 , <<eval-path(
                     | <?node0 < !parent0 + !UnknownParent()>
                     , all-parents0
@@ -4103,6 +4089,63 @@
 
 rules
 
+  eval-Obsolete-decorator0-100000(cached0, a|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
+    ?node0
+    ; where(?_)
+    ; ((id < id + ?decorated-value-cache0)
+       ; {:
+           let cached0 =
+                 <eval-Obsolete-decorator0(
+                    cached0
+                  , if ?node0 then
+                      !decorated-value-cache0 <+ a => decorated-value-cache0
+                    else
+                      a
+                    end
+                  | <?node0 < !parent0 + !UnknownParent()>
+                  , all-parents0
+                  , global-cache0
+                  , rewrite-mode0
+                  , signature0
+                  , [ "Uses obsolete attribute or decorator in definition of '"
+                    , <!signature0 => Attribute(<id>, _, _)>
+                    , "'"
+                    ]
+                  )> <id>
+                 ; not(EVAL_FAILED)
+           in
+             !<id> ; cached0
+           end
+         }
+       <+ !EVAL_FAILED())
+
+  eval-Obsolete-decorator0-100001(cached0, a|parent0, all-parents0, global-cache0, rewrite-mode0, signature0, arg21) =
+    ?node0
+    ; where(?_)
+    ; ((id < id + ?arg21) ; (id < id + ?message))
+    ; if !arg21
+         ; (?message <+ eq-ignore-annos(|message)) then
+        (id < id + ?decorated-value-cache0)
+        ; if not(<ObsoleteWarned> <!signature0 => Attribute(_, [], _)>) then
+            with(warn-msg(|message)
+                 ; sig := <!signature0 => Attribute(_, [], _)>
+                 ; rules ( ObsoleteWarned :
+                             sig ))
+          end
+        ; if ?node0 then
+            !decorated-value-cache0 <+ a => decorated-value-cache0
+          else
+            a
+          end
+        ; not(EVAL_FAILED)
+        <+ !EVAL_FAILED()
+      else
+        !arg21 ; !message < !EVAL_FAILED() + fail
+      end
+
+
+rules
+
   eval-has-Type-100000(t|parent0, all-parents0, global-cache0, rewrite-mode0) =
     ?node0
     ; where(?_)
@@ -4432,12 +4475,16 @@
 
   aster-add-anno :
     t{a*} -> t{b*}
-    where if [] := a* then
-            b* := [<newname> "@"]
-          else
-            b* := [<newname> "@"|<filter(not(aster-is-anno))> a*]
-          end
+    where x := <if-c-platform(<newname> "@")
+                ; if-java-platform(SRTS-EXT-newint)>
+          ; if [] := a* then
+              b* := [x]
+            else
+              b* := [x|<filter(not(aster-is-anno))> a*]
+            end
 
+  external SRTS-EXT-newint(|)
+
   aster-remove-annos =
     topdown-consnil(aster-remove-anno)
 
@@ -4773,7 +4820,7 @@
 
   leaves-consnil(s) =
     all-consnil(
-      try(?has-children) ; leaves-consnil(s)
+      (?has-children <+ id) ; leaves-consnil(s)
     )
     ; if not(!has-children) then s end
 
@@ -5852,25 +5899,44 @@
   eval-collect-bagof-decorator0(cached0, a|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
     id => node0
     ; where(id)
-    ; let cached07 =
+    ; let cached08 =
             fail
             < not(EVAL_FAILED)
-            + {cached-node7:
-                ?cached-node7
+            + {cached-node8:
+                ?cached-node8
                 ; <eval-at-root-decorator0(
-                     cached07
-                   , id
-                     ; ((eval-collect-bagof-decorator0-100000(
-                           cached07
-                         , a
-                         | parent0
-                         , all-parents0
-                         , global-cache0
-                         , rewrite-mode0
-                         , signature0
-                         )
-                         <+ fail)
-                        <+ <id> node0 ; fail)
+                     cached08
+                   , let cached07 =
+                           fail
+                           < not(EVAL_FAILED)
+                           + {cached-node7:
+                               ?cached-node7
+                               ; <eval-cached-decorator0(
+                                    cached07
+                                  , id
+                                    ; ((eval-collect-bagof-decorator0-100000(
+                                          cached07
+                                        , a
+                                        | parent0
+                                        , all-parents0
+                                        , global-cache0
+                                        , rewrite-mode0
+                                        , signature0
+                                        )
+                                        <+ fail)
+                                       <+ <id> node0 ; fail)
+                                  | <?node0 < !parent0 + !UnknownParent()>
+                                  , all-parents0
+                                  , global-cache0
+                                  , rewrite-mode0
+                                  , signature0
+                                  )> <id>
+                               ; id
+                               ; not(EVAL_FAILED)
+                             }
+                     in
+                       cached07
+                     end
                    | <?node0 < !parent0 + !UnknownParent()>
                    , all-parents0
                    , global-cache0
@@ -5881,32 +5947,51 @@
                 ; not(EVAL_FAILED)
               }
       in
-        cached07
+        cached08
       end
 
   eval-collect-bagof-decorator0(cached0, a, un|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
     id => node0
     ; where(id)
-    ; let cached08 =
+    ; let cached010 =
             fail
             < not(EVAL_FAILED)
-            + {cached-node8:
-                ?cached-node8
+            + {cached-node10:
+                ?cached-node10
                 ; <eval-at-root-decorator0(
-                     cached08
-                   , id
-                     ; ((eval-collect-bagof-decorator0-100001(
-                           cached08
-                         , a
-                         , un
-                         | parent0
-                         , all-parents0
-                         , global-cache0
-                         , rewrite-mode0
-                         , signature0
-                         )
-                         <+ fail)
-                        <+ <id> node0 ; fail)
+                     cached010
+                   , let cached09 =
+                           fail
+                           < not(EVAL_FAILED)
+                           + {cached-node9:
+                               ?cached-node9
+                               ; <eval-cached-decorator0(
+                                    cached09
+                                  , id
+                                    ; ((eval-collect-bagof-decorator0-100001(
+                                          cached09
+                                        , a
+                                        , un
+                                        | parent0
+                                        , all-parents0
+                                        , global-cache0
+                                        , rewrite-mode0
+                                        , signature0
+                                        )
+                                        <+ fail)
+                                       <+ <id> node0 ; fail)
+                                  | <?node0 < !parent0 + !UnknownParent()>
+                                  , all-parents0
+                                  , global-cache0
+                                  , rewrite-mode0
+                                  , signature0
+                                  )> <id>
+                               ; id
+                               ; not(EVAL_FAILED)
+                             }
+                     in
+                       cached09
+                     end
                    | <?node0 < !parent0 + !UnknownParent()>
                    , all-parents0
                    , global-cache0
@@ -5917,42 +6002,80 @@
                 ; not(EVAL_FAILED)
               }
       in
-        cached08
+        cached010
       end
 
   eval-collect-all-decorator0(cached0, a|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
     id => node0
     ; where(id)
-    ; let cached09 =
+    ; let cached013 =
             fail
             < not(EVAL_FAILED)
-            + {cached-node9:
-                ?cached-node9
-                ; <eval-at-root-decorator0(
-                     cached09
-                   , id
-                     ; ((eval-collect-all-decorator0-100000(
-                           cached09
-                         , a
-                         | parent0
-                         , all-parents0
-                         , global-cache0
-                         , rewrite-mode0
-                         , signature0
-                         )
-                         <+ fail)
-                        <+ <id> node0 ; fail)
+            + {cached-node13:
+                ?cached-node13
+                ; <eval-Obsolete-decorator0(
+                     cached013
+                   , let cached012 =
+                           fail
+                           < not(EVAL_FAILED)
+                           + {cached-node12:
+                               ?cached-node12
+                               ; <eval-at-root-decorator0(
+                                    cached012
+                                  , let cached011 =
+                                          fail
+                                          < not(EVAL_FAILED)
+                                          + {cached-node11:
+                                              ?cached-node11
+                                              ; <eval-cached-decorator0(
+                                                   cached011
+                                                 , id
+                                                   ; ((eval-collect-all-decorator0-100000(
+                                                         cached011
+                                                       , a
+                                                       | parent0
+                                                       , all-parents0
+                                                       , global-cache0
+                                                       , rewrite-mode0
+                                                       , signature0
+                                                       )
+                                                       <+ fail)
+                                                      <+ <id> node0 ; fail)
+                                                 | <?node0 < !parent0 + !UnknownParent()>
+                                                 , all-parents0
+                                                 , global-cache0
+                                                 , rewrite-mode0
+                                                 , signature0
+                                                 )> <id>
+                                              ; id
+                                              ; not(EVAL_FAILED)
+                                            }
+                                    in
+                                      cached011
+                                    end
+                                  | <?node0 < !parent0 + !UnknownParent()>
+                                  , all-parents0
+                                  , global-cache0
+                                  , rewrite-mode0
+                                  , Anonymous()
+                                  )> <id>
+                               ; id
+                               ; not(EVAL_FAILED)
+                             }
+                     in
+                       cached012
+                     end
                    | <?node0 < !parent0 + !UnknownParent()>
                    , all-parents0
                    , global-cache0
                    , rewrite-mode0
-                   , Anonymous()
+                   , signature0
                    )> <id>
                 ; id
                 ; not(EVAL_FAILED)
               }
       in
-        cached09
+        cached013
       end
 
   eval-make-set-decorator0(cached0, a|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
@@ -6025,16 +6148,16 @@
   eval-lookup-ordered-decorator0(cached0, fetch-decl, is-scope|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
     id => node0
     ; where(id)
-    ; let cached010 =
+    ; let cached014 =
             fail
             < not(EVAL_FAILED)
-            + {cached-node10:
-                ?cached-node10
+            + {cached-node14:
+                ?cached-node14
                 ; <eval-down-decorator0(
-                     cached010
+                     cached014
                    , id
                      ; ((eval-lookup-ordered-decorator0-100000(
-                           cached010
+                           cached014
                          , fetch-decl
                          , is-scope
                          | parent0
@@ -6055,7 +6178,7 @@
                 ; not(EVAL_FAILED)
               }
       in
-        cached010
+        cached014
       end
 
   eval-lookup-unordered-decorator0(cached0, fetch-decl, is-scope|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
@@ -6078,23 +6201,23 @@
   eval-lookup-global-decorator0(cached0, fetch-decl|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
     id => node0
     ; where(id)
-    ; let cached012 =
+    ; let cached016 =
             fail
             < not(EVAL_FAILED)
-            + {cached-node12:
-                ?cached-node12
-                ; <eval-cached-decorator0(
-                     cached012
-                   , let cached011 =
+            + {cached-node16:
+                ?cached-node16
+                ; <eval-at-root-decorator0(
+                     cached016
+                   , let cached015 =
                            fail
                            < not(EVAL_FAILED)
-                           + {cached-node11:
-                               ?cached-node11
-                               ; <eval-at-root-decorator0(
-                                    cached011
+                           + {cached-node15:
+                               ?cached-node15
+                               ; <eval-cached-decorator0(
+                                    cached015
                                   , id
                                     ; ((eval-lookup-global-decorator0-100000(
-                                          cached011
+                                          cached015
                                         , fetch-decl
                                         | parent0
                                         , all-parents0
@@ -6108,40 +6231,40 @@
                                   , all-parents0
                                   , global-cache0
                                   , rewrite-mode0
-                                  , Anonymous()
+                                  , signature0
                                   )> <id>
                                ; id
                                ; not(EVAL_FAILED)
                              }
                      in
-                       cached011
+                       cached015
                      end
                    | <?node0 < !parent0 + !UnknownParent()>
                    , all-parents0
                    , global-cache0
                    , rewrite-mode0
-                   , signature0
+                   , Anonymous()
                    )> <id>
                 ; id
                 ; not(EVAL_FAILED)
               }
       in
-        cached012
+        cached016
       end
 
   eval-lookup-multiple-ordered-decorator0(cached0, fetch-decl, is-scope|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
     id => node0
     ; where(id)
-    ; let cached013 =
+    ; let cached017 =
             fail
             < not(EVAL_FAILED)
-            + {cached-node13:
-                ?cached-node13
+            + {cached-node17:
+                ?cached-node17
                 ; <eval-down-decorator0(
-                     cached013
+                     cached017
                    , id
                      ; ((eval-lookup-multiple-ordered-decorator0-100000(
-                           cached013
+                           cached017
                          , fetch-decl
                          , is-scope
                          | parent0
@@ -6162,7 +6285,7 @@
                 ; not(EVAL_FAILED)
               }
       in
-        cached013
+        cached017
       end
 
   eval-lookup-multiple-unordered-decorator0(cached0, fetch-decl, is-scope|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
@@ -6185,23 +6308,23 @@
   eval-lookup-multiple-global-decorator0(cached0, fetch-decl|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
     id => node0
     ; where(id)
-    ; let cached015 =
+    ; let cached019 =
             fail
             < not(EVAL_FAILED)
-            + {cached-node15:
-                ?cached-node15
-                ; <eval-cached-decorator0(
-                     cached015
-                   , let cached014 =
+            + {cached-node19:
+                ?cached-node19
+                ; <eval-at-root-decorator0(
+                     cached019
+                   , let cached018 =
                            fail
                            < not(EVAL_FAILED)
-                           + {cached-node14:
-                               ?cached-node14
-                               ; <eval-at-root-decorator0(
-                                    cached014
+                           + {cached-node18:
+                               ?cached-node18
+                               ; <eval-cached-decorator0(
+                                    cached018
                                   , id
                                     ; ((eval-lookup-multiple-global-decorator0-100000(
-                                          cached014
+                                          cached018
                                         , fetch-decl
                                         | parent0
                                         , all-parents0
@@ -6215,25 +6338,25 @@
                                   , all-parents0
                                   , global-cache0
                                   , rewrite-mode0
-                                  , Anonymous()
+                                  , signature0
                                   )> <id>
                                ; id
                                ; not(EVAL_FAILED)
                              }
                      in
-                       cached014
+                       cached018
                      end
                    | <?node0 < !parent0 + !UnknownParent()>
                    , all-parents0
                    , global-cache0
                    , rewrite-mode0
-                   , signature0
+                   , Anonymous()
                    )> <id>
                 ; id
                 ; not(EVAL_FAILED)
               }
       in
-        cached015
+        cached019
       end
 
   eval-all-decls-decorator0(cached0, a|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
@@ -6255,27 +6378,27 @@
   eval-all-decls(fetch-decl-defined, is-scope|parent0, all-parents0, global-cache0, rewrite-mode0, arg14) =
     id => node0
     ; where(lookup-signature := arg14 ; id)
-    ; let cached018 =
+    ; let cached022 =
             fail
             < not(EVAL_FAILED)
-            + {cached-node18:
-                ?cached-node18
+            + {cached-node22:
+                ?cached-node22
                 ; <eval-down-decorator0(
-                     cached018
-                   , let cached017 =
+                     cached022
+                   , let cached021 =
                            fail
                            < not(EVAL_FAILED)
-                           + {cached-node17:
-                               ?cached-node17
+                           + {cached-node21:
+                               ?cached-node21
                                ; <eval-before-decorator0(
-                                    cached017
-                                  , let cached016 =
+                                    cached021
+                                  , let cached020 =
                                           fail
                                           < not(EVAL_FAILED)
-                                          + {cached-node16:
-                                              ?cached-node16
+                                          + {cached-node20:
+                                              ?cached-node20
                                               ; <eval-cached-decorator0(
-                                                   cached016
+                                                   cached020
                                                  , id
                                                    ; ((eval-all-decls-100000(
                                                          fetch-decl-defined
@@ -6305,7 +6428,7 @@
                                               ; not(EVAL_FAILED)
                                             }
                                     in
-                                      cached016
+                                      cached020
                                     end
                                   , where(is-scope)
                                   | <?node0 < !parent0 + !UnknownParent()>
@@ -6318,7 +6441,7 @@
                                ; not(EVAL_FAILED)
                              }
                      in
-                       cached017
+                       cached021
                      end
                    | <?node0 < !parent0 + !UnknownParent()>
                    , all-parents0
@@ -6330,7 +6453,7 @@
                 ; not(EVAL_FAILED)
               }
       in
-        cached018
+        cached022
       end
 
   eval-before-decorator0(cached0, a, s|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
@@ -6435,16 +6558,16 @@
   eval-at-root-decorator0(cached0, a|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
     id => node0
     ; where(id)
-    ; let cached019 =
+    ; let cached023 =
             fail
             < not(EVAL_FAILED)
-            + {cached-node19:
-                ?cached-node19
+            + {cached-node23:
+                ?cached-node23
                 ; <eval-down-decorator0(
-                     cached019
+                     cached023
                    , id
                      ; ((eval-at-root-decorator0-100000(
-                           cached019
+                           cached023
                          , a
                          | parent0
                          , all-parents0
@@ -6464,7 +6587,7 @@
                 ; not(EVAL_FAILED)
               }
       in
-        cached019
+        cached023
       end
 
   eval-default-decorator0(cached0, a|parent0, all-parents0, global-cache0, rewrite-mode0, signature0, arg15) =
@@ -6924,6 +7047,39 @@
         <+ <id> node0 ; fail))
     ; (EVAL_FAILED <+ id)
 
+  eval-Obsolete-decorator0(cached0, a|parent0, all-parents0, global-cache0, rewrite-mode0, signature0) =
+    (id => node0
+     ; id
+     ; ((eval-Obsolete-decorator0-100000(
+           cached0
+         , a
+         | parent0
+         , all-parents0
+         , global-cache0
+         , rewrite-mode0
+         , signature0
+         )
+         <+ fail)
+        <+ <id> node0 ; fail))
+    ; (EVAL_FAILED <+ aster-init-node-ensure(|all-parents0, global-cache0))
+
+  eval-Obsolete-decorator0(cached0, a|parent0, all-parents0, global-cache0, rewrite-mode0, signature0, arg21) =
+    (id => node0
+     ; id
+     ; ((eval-Obsolete-decorator0-100001(
+           cached0
+         , a
+         | parent0
+         , all-parents0
+         , global-cache0
+         , rewrite-mode0
+         , signature0
+         , arg21
+         )
+         <+ fail)
+        <+ <id> node0 ; fail))
+    ; (EVAL_FAILED <+ aster-init-node-ensure(|all-parents0, global-cache0))
+
   eval-has-Type(t|parent0, all-parents0, global-cache0, rewrite-mode0) =
     id => node0
     ; where(id)



From L.C.L.Kats at tudelft.nl  Tue Sep 29 13:24:06 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 29 Sep 2009 11:24:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20033 - LennartKats -
	in strategoxt/trunk/strc-core/lib/stratego/strc: pack strc
Message-ID: <200909291124.n8TBO62K015705@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-29 11:24:06 +0000 (Tue, 29 Sep 2009)
New Revision: 20033

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20033&view=rev

Modified:
   strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str
   strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc.str

Log:
STR-777: pack-stratego should not add absolute paths to import-term references.

Changes:

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str	2009-09-29 11:22:48 UTC (rev 20032)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str	2009-09-29 11:24:06 UTC (rev 20033)
@@ -31,6 +31,19 @@
     ; !spec
     ; where(<set-config>("-I", incl))
 
+  expand-term-imports-trm(|args) =
+    where(id
+      ; incl := <get-config <+ ![]> "-I"
+      ; <set-config> ("-I", [])
+      ; <parse-options(pack-stratego-options <+ input-options, system-usage, id)> 
+          [<whoami <+ !"strc"> | args]
+    )
+    ; pack-process-options
+    ; expand-term-imports(|<pack-include-path>)
+    ; where(
+        <set-config> ("-I", incl)
+      )
+
   pack-stratego-io = 
     xtc-iowrap(
       pack-stratego-options
@@ -76,7 +89,6 @@
         ; (id, pack-flatten-stratego)
         end
       end
-    ; (id, expand-term-imports(|mkpt))
 
   pack-report-module-not-found =
     let pack-get-module-name =

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc.str	2009-09-29 11:22:48 UTC (rev 20032)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/strc/strc.str	2009-09-29 11:24:06 UTC (rev 20033)
@@ -91,6 +91,7 @@
       ; tfc2(|"Stratego-Core", "be-buv")
       ; escaping-variables
       ; tfc2(|"Stratego-Core", "be-esc")
+      ; expand-term-imports-trm(|<get-config> "-I")
       ; stratego-to-c
       ; tfc-c(|1,"be-c")
       ; log-timed(



From R.B.Vermaas at tudelft.nl  Tue Sep 29 15:17:30 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 29 Sep 2009 13:17:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20034 - rob - hydra/jobs
Message-ID: <200909291317.n8TDHUV7017002@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-29 13:17:30 +0000 (Tue, 29 Sep 2009)
New Revision: 20034

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20034&view=rev

Modified:
   hydra/jobs/strategoxt.nix

Log:
bumped baseline

Changes:

Modified: hydra/jobs/strategoxt.nix
===================================================================
--- hydra/jobs/strategoxt.nix	2009-09-29 11:24:06 UTC (rev 20033)
+++ hydra/jobs/strategoxt.nix	2009-09-29 13:17:30 UTC (rev 20034)
@@ -11,8 +11,8 @@
     pkgs.stdenv.mkDerivation {
       name = "strategoxt-baseline";
       src = pkgs.fetchurl {
-              url = "http://hydra.nixos.org/build/66370/download/1/strategoxt-0.18pre19956.tar.gz";
-              sha256 = "abf1347dafbf8d17a388314b9bca81f5bbbdda9268836c74a93c0fdb1a372d7b";
+              url = "http://hydra.nixos.org/build/82066/download/1/strategoxt-0.18pre20033.tar.gz";
+              sha256 = "3c5f0c83153cf23a695a4fb5d47efb9444ff24af537ad54c671a27a377e5b41d";
             };
 
       buildInputs = defaultBuildInputs pkgs ;



From R.B.Vermaas at tudelft.nl  Tue Sep 29 16:14:53 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 29 Sep 2009 14:14:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20035 - rob -
	aspectj-front/trunk
Message-ID: <200909291414.n8TEErpZ017653@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-29 14:14:52 +0000 (Tue, 29 Sep 2009)
New Revision: 20035

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20035&view=rev

Modified:
   aspectj-front/trunk/aspectj-front.pc.in

Log:
added libaspectj-front.la to strcflags and libs in pkgconfig file

Changes:

Modified: aspectj-front/trunk/aspectj-front.pc.in
===================================================================
--- aspectj-front/trunk/aspectj-front.pc.in	2009-09-29 13:17:30 UTC (rev 20034)
+++ aspectj-front/trunk/aspectj-front.pc.in	2009-09-29 14:14:52 UTC (rev 20035)
@@ -3,9 +3,11 @@
 pkgdatadir=@datadir@/@PACKAGE@
 sdfdatadir=@datadir@/sdf/@PACKAGE@
 xtc_repo=@REPOSITORY@
-strcflags=-I ${sdfdatadir} -I ${pkgdatadir}
+strcflags=-I ${sdfdatadir} -I ${pkgdatadir} -la ${prefix}/lib/libaspectj-front.la
 strcxtcflags=--xtc-repo ${xtc_repo}
 
 Name: AspectJ-front
 Description: Syntax Definition, parser and pretty-printer for AspectJ
 Version: @PACKAGE_VERSION@
+Libs: ${prefix}/lib/libaspectj-front.la
+



From R.B.Vermaas at tudelft.nl  Tue Sep 29 16:22:46 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 29 Sep 2009 14:22:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20036 - rob - hydra/jobs
Message-ID: <200909291422.n8TEMktD017752@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-29 14:22:46 +0000 (Tue, 29 Sep 2009)
New Revision: 20036

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20036&view=rev

Modified:
   hydra/jobs/strategoxt.nix

Log:
bumped baseline

Changes:

Modified: hydra/jobs/strategoxt.nix
===================================================================
--- hydra/jobs/strategoxt.nix	2009-09-29 14:14:52 UTC (rev 20035)
+++ hydra/jobs/strategoxt.nix	2009-09-29 14:22:46 UTC (rev 20036)
@@ -11,8 +11,8 @@
     pkgs.stdenv.mkDerivation {
       name = "strategoxt-baseline";
       src = pkgs.fetchurl {
-              url = "http://hydra.nixos.org/build/82066/download/1/strategoxt-0.18pre20033.tar.gz";
-              sha256 = "3c5f0c83153cf23a695a4fb5d47efb9444ff24af537ad54c671a27a377e5b41d";
+              url = "http://hydra.nixos.org/build/82252/download/1/strategoxt-0.18pre20033.tar.gz";
+              sha256 = "070052cff1fd27b2ca4bed8b6aa0238574a18922b21feae2506e6df5d2201c1c";
             };
 
       buildInputs = defaultBuildInputs pkgs ;



From R.B.Vermaas at tudelft.nl  Tue Sep 29 16:23:08 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Tue, 29 Sep 2009 14:23:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20037 - rob -
	strategoxt/trunk
Message-ID: <200909291423.n8TEN8KD017757@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-29 14:23:08 +0000 (Tue, 29 Sep 2009)
New Revision: 20037

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20037&view=rev

Modified:
   strategoxt/trunk/README

Log:


Changes:

Modified: strategoxt/trunk/README
===================================================================
--- strategoxt/trunk/README	2009-09-29 14:22:46 UTC (rev 20036)
+++ strategoxt/trunk/README	2009-09-29 14:23:08 UTC (rev 20037)
@@ -81,6 +81,7 @@
   bugs at strategoxt.org
 
 
+
 Copyright (C) 1998-2009 Eelco Visser
 
   This library is free software; you can redistribute it and/or



From L.C.L.Kats at tudelft.nl  Tue Sep 29 20:39:17 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 29 Sep 2009 18:39:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20038 - LennartKats -
	strc-java/trunk/java
Message-ID: <200909291839.n8TIdHNa020785@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-29 18:39:16 +0000 (Tue, 29 Sep 2009)
New Revision: 20038

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20038&view=rev

Modified:
   strc-java/trunk/java/Makefile.am

Log:
import paths

Changes:

Modified: strc-java/trunk/java/Makefile.am
===================================================================
--- strc-java/trunk/java/Makefile.am	2009-09-29 14:23:08 UTC (rev 20037)
+++ strc-java/trunk/java/Makefile.am	2009-09-29 18:39:16 UTC (rev 20038)
@@ -15,6 +15,8 @@
   runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat/Main.java \
   runtime/org/strategoxt/lang/compat/override/performance_tweaks/Main.java \
   runtime/org/strategoxt/lang/compat/override/xtc_compat/Main.java \
+  runtime/org/strategoxt/lang/compat/override/native_calls_compat/Main.java \
+  runtime/org/strategoxt/lang/compat/override/java_integration/Main.java \
   runtime/org/strategoxt/lang/compat/override/strc_compat/Main.java
 
 COMPILERJAVAS = \
@@ -49,7 +51,6 @@
   $(wildcard runtime/org/strategoxt/*/*/*/*.str) \
   $(wildcard runtime/org/strategoxt/*/*/*/*/*.str) \
   $(wildcard runtime/org/strategoxt/*/*/*/*/*/*.str) \
-  runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.rtree \
   spoofax-libs.jar \
   META-INF/MANIFEST.MF
 
@@ -126,30 +127,30 @@
 bin/org/strategoxt/stratego_lib/Main.class : lib/org/strategoxt/stratego_lib/Main.java
 	$(JAVAC) $(JAVACFLAGS) $<
 
-lib/org/strategoxt/stratego_lib/Main.java : $(STRATEGOXT)/share/stratego-lib/libstratego-lib.ctree ../trans/strj
+lib/org/strategoxt/stratego_lib/Main.java : $(STRATEGOXT)/share/stratego-lib/libstratego-lib.ctree ../trans/strj runtime/org/strategoxt/lang/compat/override/native_calls_compat/Main.java runtime/org/strategoxt/lang/compat/override/java_integration/Main.java runtime/org/strategoxt/lang/compat/override/performance_tweaks/Main.java
 	[ -e lib/org/strategoxt ] || mkdir -p lib/org/strategoxt
-	$(STRJ) -I $(STRATEGOXT)/share/stratego-lib -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_lib
+	$(STRJ) -I $(STRATEGOXT)/share/stratego-lib -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_lib -la org.strategoxt.lang.compat.override.native_calls_compat -la org.strategoxt.lang.compat.override.java_integration -la org.strategoxt.lang.compat.override.performance_tweaks
 
 lib/org/strategoxt/stratego-xtc.rtree : $(STRATEGOXT)/share/xtc/stratego-xtc-posix-xsi.rtree
 	cp $< $@
 
-lib/org/strategoxt/stratego_xtc/Main.java : lib/org/strategoxt/stratego-xtc.rtree ../trans/strj
-	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/xtc -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_xtc -la stratego-lib -D GetInternalDefaultXtcRepository=None
+lib/org/strategoxt/stratego_xtc/Main.java : lib/org/strategoxt/stratego-xtc.rtree ../trans/strj runtime/org/strategoxt/lang/compat/override/xtc_compat/Main.java
+	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/xtc -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_xtc -la stratego-lib -la org.strategoxt.lang.compat.override.xtc_compat -D GetInternalDefaultXtcRepository=None
 
-lib/org/strategoxt/stratego_sglr/Main.java : $(STRATEGOXT)/share/libstratego-sglr.ctree ../trans/strj
-	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sglr -la stratego-lib -la stratego-xtc
+lib/org/strategoxt/stratego_sglr/Main.java : $(STRATEGOXT)/share/libstratego-sglr.ctree ../trans/strj runtime/org/strategoxt/lang/compat/override/jsglr_parser/Main.java runtime/org/strategoxt/lang/compat/override/jsglr_parser_compat/Main.java
+	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sglr -la stratego-lib -la stratego-xtc -la org.strategoxt.lang.compat.override.jsglr_parser -la org.strategoxt.lang.compat.override.jsglr_parser_compat
 
 lib/org/strategoxt/stratego_rtg/Main.java : $(STRATEGOXT)/share/libstratego-rtg.ctree ../trans/strj runtime/org/strategoxt/lang/compat/stratego_rtg_compat/Main.java
-	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_rtg -la stratego-lib -la stratego-sglr -la org.strategoxt.lang.compat.stratego_rtg_compat
+	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-regular -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_rtg -la stratego-lib -la stratego-sglr -la org.strategoxt.lang.compat.stratego_rtg_compat
 
 lib/org/strategoxt/stratego_gpp/Main.java : $(STRATEGOXT)/share/libstratego-gpp.ctree ../trans/strj
-	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_gpp -la stratego-lib -la stratego-lib -la stratego-sglr
+	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/gpp -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_gpp -la stratego-lib -la stratego-lib -la stratego-sglr
 
 lib/org/strategoxt/stratego_aterm/Main.java : $(STRATEGOXT)/share/libstratego-aterm.ctree runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat/Main.java ../trans/strj
 	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_aterm -la stratego-lib -la stratego-gpp -la org.strategoxt.lang.compat.override.stratego_aterm_compat
 
 lib/org/strategoxt/stratego_sdf/Main.java : $(STRATEGOXT)/share/libstratego-sdf.ctree ../trans/strj
-	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sdf -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-aterm 
+	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/sdf-front -I $(STRATEGOXT)/share/sdf-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sdf -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-aterm 
 
 lib/org/strategoxt/stratego_tool_doc/Main.java : $(STRATEGOXT)/share/libstratego-tool-doc.ctree ../trans/strj
 	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_tool_doc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -D SRTS-package-bugreport='"bugs at strategoxt.org"' -D SRTS-package-name='"<SRTS-package-name>"' -D SRTS-package-revision='"<SRTS-package-revision>"' -D SRTS-package-version='"<SRTS-package-version>"'
@@ -180,6 +181,12 @@
 runtime/org/strategoxt/lang/compat/override/xtc_compat/Main.java : runtime/org/strategoxt/lang/compat/override/xtc-compat.str ../trans/strj
 	$(STRJ) -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.xtc_compat -la stratego-lib -la stratego-xtc
 
+runtime/org/strategoxt/lang/compat/override/native_calls_compat/Main.java : runtime/org/strategoxt/lang/compat/override/xtc-compat.str ../trans/strj
+	$(STRJ) -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.native_calls_compat -la stratego-lib -la stratego-xtc
+
+runtime/org/strategoxt/lang/compat/override/java_integration/Main.java : runtime/org/strategoxt/lang/compat/override/xtc-compat.str ../trans/strj
+	$(STRJ) -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.java_integration -la stratego-lib -la stratego-xtc
+
 runtime/org/strategoxt/lang/compat/override/strc_compat/Main.java : runtime/org/strategoxt/lang/compat/override/strc-compat.str ../trans/strj runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.rtree
 	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -I $(STRATEGOXT)/share/xtc -I $(STRATEGOXT)/share/stratego-lib -I $(JAVA_FRONT)/share/java-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.strc_compat -la stratego-lib -la stratego-xtc -la org.strategoxt.strc -I runtime/org/strategoxt/lang/parallel/stratego_parallel
 



From L.C.L.Kats at tudelft.nl  Tue Sep 29 20:42:47 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 29 Sep 2009 18:42:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20039 - LennartKats -
	in strc-java/trunk/java/runtime/org/strategoxt/lang: . compat
	compat/override terms
Message-ID: <200909291842.n8TIglBY020823@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-29 18:42:45 +0000 (Tue, 29 Sep 2009)
New Revision: 20039

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20039&view=rev

Added:
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/java-integration.str
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/native-calls-compat.str
Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/NativeCallHelper.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java

Log:
Reorganized the compat libraries a bit.

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java	2009-09-29 18:39:16 UTC (rev 20038)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Strategy.java	2009-09-29 18:42:45 UTC (rev 20039)
@@ -15,7 +15,7 @@
  * 
  * @author Lennart Kats <lennart add lclnet.nl>
  */
-public class Strategy {
+public abstract class Strategy {
 	/**
 	 * Invoke this strategy using a dynamic number of arguments.
 	 * 

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java	2009-09-29 18:39:16 UTC (rev 20038)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/CompatManager.java	2009-09-29 18:42:45 UTC (rev 20039)
@@ -43,22 +43,16 @@
 	}
 	
 	/**
-	 * Dynamically loads any compatibility library associated with a Stratego library.
-	 * 
-	 * (Note that some libraries need to import additional compatibility components
-	 *  to implement some native functionality, such as libstratego-rtg-compat.) 
+	 * Dynamically loads any compatibility library or operator registry
+	 * associated with a Stratego library.
 	 */
 	public void activateComponent(String component) {
 		if ("stratego_lib".equals(component)) {
 			context.addOperatorRegistry(new CompatLibrary());
-			performance_tweaks.init(context);
-			xtc_compat.init(context); // also deals with native calls for libstratego-lib
 		} else if ("stratego_sglr".equals(component)) {
 			WrappedATermFactory atermFactory = new WrappedATermFactory();
 			context.addOperatorRegistry(new JSGLRLibrary(atermFactory));
 			context.addOperatorRegistry(new SGLRCompatLibrary(atermFactory));
-			jsglr_parser.init(context);
-			jsglr_parser_compat.init(context);
 		}
 	}
 }

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/NativeCallHelper.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/NativeCallHelper.java	2009-09-29 18:39:16 UTC (rev 20038)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/NativeCallHelper.java	2009-09-29 18:42:45 UTC (rev 20039)
@@ -40,7 +40,7 @@
 	}
 
 	@Override
-	public synchronized void run() {
+	public void run() {
 		try {
 			InputStreamReader streamReader = new InputStreamReader(input);
 			BufferedReader reader = new BufferedReader(streamReader);

Copied: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/java-integration.str (from rev 20028, strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str)
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/java-integration.str	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/java-integration.str	2009-09-29 18:42:45 UTC (rev 20039)
@@ -0,0 +1,34 @@
+/**
+ * Java-specific functional refinement of standard strategies.
+ *
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+module java-integration
+
+imports
+  libstratego-lib
+
+strategies
+
+  override fatal-err(|msg) =
+    log(|Critical(), msg, <id>);
+    SRTS-EXT-fatal-err(|msg, <try(concat-strings)>)
+  
+  override fatal-err-msg(|msg) =
+    log(|Critical(), msg);
+    SRTS-EXT-fatal-err(|msg, ())
+  
+  override fatal-error =
+    error;
+    SRTS-EXT-fatal-err(|<try(concat-strings)>, ())
+  
+  override report-failure(|message, term) =
+    report-failure(
+      log(|Critical(), message, term);
+      SRTS-EXT-fatal-err(|message, <try(concat-strings)> term)
+    )
+  
+  external SRTS-EXT-fatal-err(|msg, term)
+  
+  // TODO: exception rethrowing in risky, finally?
+


Property changes on: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/java-integration.str
___________________________________________________________________
Added: svn:mergeinfo
   + /strc-java/branches/one-file-per-strategy/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str:19806

Copied: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/native-calls-compat.str (from rev 20028, strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str)
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/native-calls-compat.str	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/native-calls-compat.str	2009-09-29 18:42:45 UTC (rev 20039)
@@ -0,0 +1,29 @@
+/**
+ * Some degree native calling compatibility.
+ *
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+module native-calls-compat
+
+imports
+  libstratego-lib
+
+strategies
+
+  // TODO: also implement fork-and-wait?
+  
+  override call =
+    ?(program, args);
+    <is-substring(!".")> program;
+    if <is-list> args then
+      prim("SSL_EXT_java_call", program, [program | args], 0)
+    else
+      warn(|"Program arguments for <call> should be a list");
+      prim("SSL_EXT_java_call", program, args, 0)
+    end
+  <+
+    ?(program, args);
+
+    log(|Info(), ["Calling external tool ", program, " ", <try(separate-by(|" "); concat-strings)> args]);
+    prim("SSL_EXT_call", program, args) => 0
+


Property changes on: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/native-calls-compat.str
___________________________________________________________________
Added: svn:mergeinfo
   + /strc-java/branches/one-file-per-strategy/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str:19806

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str	2009-09-29 18:39:16 UTC (rev 20038)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/xtc-compat.str	2009-09-29 18:42:45 UTC (rev 20039)
@@ -1,5 +1,5 @@
 /**
- * Some degree of XTC and native calling compatibility.
+ * XTC handling.
  *
  * @author Lennart Kats <lennart add lclnet.nl>
  */
@@ -16,47 +16,4 @@
     override
   <+
     id // HACK: try to find something on the path instead
-  
 
-strategies
-  
-  // TODO: move call and fatal-err to lib-compat.str
-
-  // TODO: also implement fork-and-wait?
-  
-  override call =
-    ?(program, args);
-    <is-substring(!".")> program;
-    if <is-list> args then
-      prim("SSL_EXT_java_call", program, [program | args], 0)
-    else
-      warn(|"Program arguments for <call> should be a list");
-      prim("SSL_EXT_java_call", program, args, 0)
-    end
-  <+
-    ?(program, args);
-
-    log(|Info(), ["Calling external tool ", program, " ", <try(separate-by(|" "); concat-strings)> args]);
-    prim("SSL_EXT_call", program, args) => 0
-
-strategies
-
-  override fatal-err(|msg) =
-    log(|Critical(), msg, <id>);
-    SRTS-EXT-fatal-err(|msg, <try(concat-strings)>)
-  
-  override fatal-err-msg(|msg) =
-    log(|Critical(), msg);
-    SRTS-EXT-fatal-err(|msg, ())
-  
-  override fatal-error =
-    error;
-    SRTS-EXT-fatal-err(|<try(concat-strings)>, ())
-  
-  override report-failure(|message, term) =
-    report-failure(
-      log(|Critical(), message, term);
-      SRTS-EXT-fatal-err(|message, <try(concat-strings)> term)
-    )
-  
-  external SRTS-EXT-fatal-err(|msg, term)

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java	2009-09-29 18:39:16 UTC (rev 20038)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java	2009-09-29 18:42:45 UTC (rev 20039)
@@ -9,7 +9,6 @@
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Map;
-import java.util.WeakHashMap;
 
 import org.spoofax.interpreter.terms.BasicTermFactory;
 import org.spoofax.interpreter.terms.IStrategoAppl;
@@ -45,7 +44,7 @@
     	new StrategoList(null, null, null, MAXIMALLY_SHARED); 
 
     private static final Map<StrategoConstructor, StrategoConstructor> asyncCtorCache =
-        new WeakHashMap<StrategoConstructor, StrategoConstructor>();
+        new HashMap<StrategoConstructor, StrategoConstructor>();
     
     private static final Map<String,StrategoString> asyncStringPool =
         new HashMap<String, StrategoString>();



From R.B.Vermaas at tudelft.nl  Wed Sep 30 11:12:41 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 30 Sep 2009 09:12:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20040 - rob -
	hydra/strategoxt
Message-ID: <200909300912.n8U9CfNf031315@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-30 09:12:41 +0000 (Wed, 30 Sep 2009)
New Revision: 20040

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20040&view=rev

Modified:
   hydra/strategoxt/packages.nix

Log:
add fastjar to buildinputs

Changes:

Modified: hydra/strategoxt/packages.nix
===================================================================
--- hydra/strategoxt/packages.nix	2009-09-29 18:42:45 UTC (rev 20039)
+++ hydra/strategoxt/packages.nix	2009-09-30 09:12:41 UTC (rev 20040)
@@ -421,7 +421,7 @@
       svnBuildInputs = buildInputs ++ (autotools pkgs);
       svnRequires = [aterm sdf2Bundle strategoxt javaFront];
 
-      buildInputs = [pkgs.pkgconfig pkgs.unzip pkgs.zlib pkgs.ecj pkgs.which];
+      buildInputs = [pkgs.pkgconfig pkgs.unzip pkgs.zlib pkgs.ecj pkgs.which pkgs.fastjar];
       requires = svnRequires;
 
       rpmBuildSupported = true;



From R.B.Vermaas at tudelft.nl  Wed Sep 30 11:15:20 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 30 Sep 2009 09:15:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20041 - rob -
	hydra/strategoxt
Message-ID: <200909300915.n8U9FKn3031338@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-30 09:15:20 +0000 (Wed, 30 Sep 2009)
New Revision: 20041

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20041&view=rev

Modified:
   hydra/strategoxt/packages.nix

Log:


Changes:

Modified: hydra/strategoxt/packages.nix
===================================================================
--- hydra/strategoxt/packages.nix	2009-09-30 09:12:41 UTC (rev 20040)
+++ hydra/strategoxt/packages.nix	2009-09-30 09:15:20 UTC (rev 20041)
@@ -421,7 +421,7 @@
       svnBuildInputs = buildInputs ++ (autotools pkgs);
       svnRequires = [aterm sdf2Bundle strategoxt javaFront];
 
-      buildInputs = [pkgs.pkgconfig pkgs.unzip pkgs.zlib pkgs.ecj pkgs.which pkgs.fastjar];
+      buildInputs = [pkgs.pkgconfig pkgs.unzip pkgs.zlib pkgs.ecj pkgs.which pkgs.jdk];
       requires = svnRequires;
 
       rpmBuildSupported = true;



From L.C.L.Kats at tudelft.nl  Wed Sep 30 13:43:31 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 30 Sep 2009 11:43:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20042 - LennartKats -
	strc-java/trunk/test/strc1
Message-ID: <200909301143.n8UBhVeJ000732@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-30 11:43:30 +0000 (Wed, 30 Sep 2009)
New Revision: 20042

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20042&view=rev

Added:
   strc-java/trunk/test/strc1/ExpStratego.tbl

Log:
missing file

Changes:

Added: strc-java/trunk/test/strc1/ExpStratego.tbl
===================================================================
(Binary files differ)


Property changes on: strc-java/trunk/test/strc1/ExpStratego.tbl
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream



From L.C.L.Kats at tudelft.nl  Wed Sep 30 13:58:59 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 30 Sep 2009 11:58:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20043 - LennartKats -
	in strc-java/trunk/test: . strc1
Message-ID: <200909301158.n8UBwx6c001041@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-30 11:58:59 +0000 (Wed, 30 Sep 2009)
New Revision: 20043

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20043&view=rev

Removed:
   strc-java/trunk/test/strc1/ExpStratego.tbl
Modified:
   strc-java/trunk/test/Makefile.am

Log:
Test files in EXTRA_DIST.

Changes:

Modified: strc-java/trunk/test/Makefile.am
===================================================================
--- strc-java/trunk/test/Makefile.am	2009-09-30 11:43:30 UTC (rev 20042)
+++ strc-java/trunk/test/Makefile.am	2009-09-30 11:58:59 UTC (rev 20043)
@@ -7,6 +7,8 @@
 RUNNERFILES = $(subst .java,.runner,$(JAVAFILES))
 CLEANFILES  = $(JAVAFILES) $(CLASSFILES) $(CTREEFILES)
 
+EXTRA_DIST = $(wildcard */*.str) $(wildcard */*.meta) $(wildcard */*.sdf) $(wildcard */*.tbl) $(wildcard */*.trm)
+
 STRC1TESTS=test01 test02 test03 test04 test05				 \
 		  test06 test07 test08 test09 test10 test11 test12		 \
 		  test13 test14 test15 test16 test17 test18 test19		 \

Deleted: strc-java/trunk/test/strc1/ExpStratego.tbl
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Wed Sep 30 14:02:20 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 30 Sep 2009 12:02:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20044 - LennartKats -
	strc-java/trunk/test
Message-ID: <200909301202.n8UC2K86001354@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-30 12:02:20 +0000 (Wed, 30 Sep 2009)
New Revision: 20044

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20044&view=rev

Modified:
   strc-java/trunk/test/Makefile.am

Log:
More test files in EXTRA_DIST.

Changes:

Modified: strc-java/trunk/test/Makefile.am
===================================================================
--- strc-java/trunk/test/Makefile.am	2009-09-30 11:58:59 UTC (rev 20043)
+++ strc-java/trunk/test/Makefile.am	2009-09-30 12:02:20 UTC (rev 20044)
@@ -7,7 +7,7 @@
 RUNNERFILES = $(subst .java,.runner,$(JAVAFILES))
 CLEANFILES  = $(JAVAFILES) $(CLASSFILES) $(CTREEFILES)
 
-EXTRA_DIST = $(wildcard */*.str) $(wildcard */*.meta) $(wildcard */*.sdf) $(wildcard */*.tbl) $(wildcard */*.trm)
+EXTRA_DIST = $(wildcard */*.str) $(wildcard */*.meta) $(wildcard */*.sdf) $(wildcard */*.tbl) $(wildcard */*.trm) $(wildcard */*.in) $(wildcard */*.res)
 
 STRC1TESTS=test01 test02 test03 test04 test05				 \
 		  test06 test07 test08 test09 test10 test11 test12		 \



From L.C.L.Kats at tudelft.nl  Wed Sep 30 14:30:22 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 30 Sep 2009 12:30:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20045 - LennartKats -
	strc-java/trunk/test/parallel
Message-ID: <200909301230.n8UCUM3D001619@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-30 12:30:22 +0000 (Wed, 30 Sep 2009)
New Revision: 20045

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20045&view=rev

Added:
   strc-java/trunk/test/parallel/strc_desugar.str

Log:
Checked in parallel-library test file so the build farm creates the parallel/ dir...

Changes:

Added: strc-java/trunk/test/parallel/strc_desugar.str
===================================================================
--- strc-java/trunk/test/parallel/strc_desugar.str	                        (rev 0)
+++ strc-java/trunk/test/parallel/strc_desugar.str	2009-09-30 12:30:22 UTC (rev 20045)
@@ -0,0 +1,26 @@
+module strc_desugar
+
+imports
+  libstratego-lib
+  libstratego-parallel
+  libstrc
+
+strategies
+  
+  main =
+    <set-config> ("--statistics", 1);
+    <set-config> ("-O", 3);
+    // import-term(libstrc.ptree);
+    import-term(webdsl-generator.ptree);
+    log-timed(
+      many-runs(parallel-unordered(stratego-desugar))
+    | "desugared", 0
+    );
+    log-timed(
+      many-runs(parallel-unordered(strc-optimize))
+    | "optimized", 0
+    );
+    !()
+ 
+ many-runs(s) =
+   ?t; repeat(<s> t|2)



From L.C.L.Kats at tudelft.nl  Wed Sep 30 14:54:09 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 30 Sep 2009 12:54:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20046 - LennartKats -
	strc-java/trunk/test
Message-ID: <200909301254.n8UCs9Qw001790@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-30 12:54:09 +0000 (Wed, 30 Sep 2009)
New Revision: 20046

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20046&view=rev

Modified:
   strc-java/trunk/test/Makefile.am

Log:
backend needs import path now

Changes:

Modified: strc-java/trunk/test/Makefile.am
===================================================================
--- strc-java/trunk/test/Makefile.am	2009-09-30 12:30:22 UTC (rev 20045)
+++ strc-java/trunk/test/Makefile.am	2009-09-30 12:54:09 UTC (rev 20046)
@@ -87,7 +87,7 @@
 	aster -i $< -o $@
 
 %.java : %.ctree ../trans/strj
-	../trans/strj --verbose 2 -i $< -o $@ -la stratego-lib -la java-front -la stratego-sglr -I parallel -la strc `if echo $< | grep parallel >/dev/null; then echo -la stratego-parallel; fi`
+	../trans/strj --verbose 2 -i $< -o $@ -la stratego-lib -la java-front -la stratego-sglr -I $(STRATEGOXT)/share/sdf/stratego-front -I parallel -la strc `if echo $< | grep parallel >/dev/null; then echo -la stratego-parallel; fi`
 
 %.class : %.java
 	$(JAVAC) $(JAVACFLAGS) $<



From L.C.L.Kats at tudelft.nl  Wed Sep 30 15:11:32 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 30 Sep 2009 13:11:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20047 - LennartKats -
	strc-java/trunk/test
Message-ID: <200909301311.n8UDBW0w002162@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-30 13:11:32 +0000 (Wed, 30 Sep 2009)
New Revision: 20047

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20047&view=rev

Modified:
   strc-java/trunk/test/Makefile.am

Log:
backend needs import path now

Changes:

Modified: strc-java/trunk/test/Makefile.am
===================================================================
--- strc-java/trunk/test/Makefile.am	2009-09-30 12:54:09 UTC (rev 20046)
+++ strc-java/trunk/test/Makefile.am	2009-09-30 13:11:32 UTC (rev 20047)
@@ -81,13 +81,13 @@
 	$(MAKE) -C ../trans strj
 
 %.ctree : %.str
-	../trans/strj -O 0 -la java-front --format-check 0 -F -I strc1 -I ../java/runtime/org/strategoxt/lang/parallel/stratego_parallel -i $< -o $@
+	../trans/strj -O 0 -la java-front --format-check 0 -F -I ../java/runtime/org/strategoxt/lang/parallel/stratego_parallel -i $< -o $@
 
 %.str : %.astr
 	aster -i $< -o $@
 
 %.java : %.ctree ../trans/strj
-	../trans/strj --verbose 2 -i $< -o $@ -la stratego-lib -la java-front -la stratego-sglr -I $(STRATEGOXT)/share/sdf/stratego-front -I parallel -la strc `if echo $< | grep parallel >/dev/null; then echo -la stratego-parallel; fi`
+	../trans/strj --verbose 2 -i $< -o $@ -la stratego-lib -la java-front -la stratego-sglr -I $(STRATEGOXT)/share/sdf/stratego-front -I strc1 -I parallel -la strc `if echo $< | grep parallel >/dev/null; then echo -la stratego-parallel; fi`
 
 %.class : %.java
 	$(JAVAC) $(JAVACFLAGS) $<



From R.B.Vermaas at tudelft.nl  Wed Sep 30 15:48:49 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 30 Sep 2009 13:48:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20048 - rob - hydra
Message-ID: <200909301348.n8UDmnZU002504@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-30 13:48:49 +0000 (Wed, 30 Sep 2009)
New Revision: 20048

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20048&view=rev

Modified:
   hydra/baseline.nix

Log:


Changes:

Modified: hydra/baseline.nix
===================================================================
--- hydra/baseline.nix	2009-09-30 13:11:32 UTC (rev 20047)
+++ hydra/baseline.nix	2009-09-30 13:48:49 UTC (rev 20048)
@@ -1,9 +1,15 @@
 pkgs: 
 {
-  aterm      = pkgs.aterm25 ; 
-  sdf2Bundle = pkgs.strategoPackages018.sdf ;
-  strategoxt = pkgs.strategoPackages018.strategoxt ;
-  javaFront  = pkgs.strategoPackages018.javafront ;
+  aterm        = pkgs.aterm25 ; 
+  atermTarball = pkgs.aterm25.src ;
 
+  sdf2Bundle        = pkgs.strategoPackages018.sdf ;
+  sdf2BundleTarball = pkgs.strategoPackages018.sdf.src ;
+
+  strategoxt        = pkgs.strategoPackages018.strategoxt ;
+  strategoxtTarball = pkgs.strategoPackages018.strategoxt.src ;
+
+  javaFront        = pkgs.strategoPackages018.javafront ;
+  javaFrontTarball = pkgs.strategoPackages018.javafront ;
 }
 



From R.B.Vermaas at tudelft.nl  Wed Sep 30 15:49:24 2009
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 30 Sep 2009 13:49:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20049 - rob - hydra/jobs
Message-ID: <200909301349.n8UDnODc002509@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2009-09-30 13:49:24 +0000 (Wed, 30 Sep 2009)
New Revision: 20049

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20049&view=rev

Modified:
   hydra/jobs/java-front.nix

Log:


Changes:

Modified: hydra/jobs/java-front.nix
===================================================================
--- hydra/jobs/java-front.nix	2009-09-30 13:48:49 UTC (rev 20048)
+++ hydra/jobs/java-front.nix	2009-09-30 13:49:24 UTC (rev 20049)
@@ -15,6 +15,8 @@
         inherit hydraConfig ;
         inherit baselineNix ;
         inherit nixpkgs; 
+        makeDebs = true;
+        makeRPMs = true;
       } ; 
    
       spec = specs.javaFront ; 



From L.C.L.Kats at tudelft.nl  Wed Sep 30 15:58:09 2009
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 30 Sep 2009 13:58:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20050 - LennartKats -
	strc-java/trunk/tools
Message-ID: <200909301358.n8UDw9av002582@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2009-09-30 13:58:09 +0000 (Wed, 30 Sep 2009)
New Revision: 20050

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20050&view=rev

Modified:
   strc-java/trunk/tools/strj-jar

Log:


Changes:

Modified: strc-java/trunk/tools/strj-jar
===================================================================
--- strc-java/trunk/tools/strj-jar	2009-09-30 13:49:24 UTC (rev 20049)
+++ strc-java/trunk/tools/strj-jar	2009-09-30 13:58:09 UTC (rev 20050)
@@ -36,7 +36,7 @@
   elif [ "$P" == "-o" ]; then
     OUTPUT="$1"
     shift
-  elif [ "$P" == "--help" ] || ["$P" == "-h" ]; then
+  elif [ "$P" == "--help" ] || [ "$P" == "-h" ]; then
     break
   else
     echo "Illegal argument: $P" >&2



