From seba at informatik.uni-marburg.de  Thu Nov  1 00:27:08 2012
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 31 Oct 2012 23:27:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25641 -
	spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell
Message-ID: <20121031232708.873DE2B8013@mx2.tudelft.nl>

Author: SebastianErdweg
Date: Wed Oct 31 23:27:07 2012
New Revision: 25641
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25641&sc=1

Log:
fix Haskell statements

Modified:
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Statements.sdf
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.def
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.tbl
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/build.xml

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Statements.sdf
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Statements.sdf	Wed Oct 31 17:26:53 2012	(r25640)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Statements.sdf	Wed Oct 31 23:27:07 2012	(r25641)
@@ -28,13 +28,13 @@
   context-free priorities
     Stmt -> OffsideStmt {layout("1.first.col < 1.left.col")}
   >
-    OffsideStmt ";" -> OffsideStmt {prefer,layout("1.first.col < 2.first.col")}
+    OffsideStmt ";" -> OffsideStmt {layout("1.first.col < 2.first.col")}
   >
     ";" OffsideStmt -> OffsideStmt {layout("1.first.col < 2.first.col")}
   >
-    Stmt ";" OffsideStmt -> OffsideStmt
+    OffsideStmt ";" OffsideStmt -> OffsideStmt
           {cons("StmtSeq"),
-           layout("1.first.col < 1.left.col && 1.first.col < 2.first.col && 1.first.col < 3.first.col")}
+           layout("1.first.col < 2.first.col && 1.first.col < 3.first.col")}
   
   context-free syntax
     OffsideStmt -> OffsideStmtList

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.def
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.def	Wed Oct 31 17:26:53 2012	(r25640)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.def	Wed Oct 31 23:27:07 2012	(r25641)
@@ -101,13 +101,13 @@
   context-free priorities
     Stmt -> OffsideStmt {layout("1.first.col < 1.left.col")}
   >
-    OffsideStmt ";" -> OffsideStmt {prefer,layout("1.first.col < 2.first.col")}
+    OffsideStmt ";" -> OffsideStmt {layout("1.first.col < 2.first.col")}
   >
     ";" OffsideStmt -> OffsideStmt {layout("1.first.col < 2.first.col")}
   >
-    Stmt ";" OffsideStmt -> OffsideStmt
+    OffsideStmt ";" OffsideStmt -> OffsideStmt
           {cons("StmtSeq"),
-           layout("1.first.col < 1.left.col && 1.first.col < 2.first.col && 1.first.col < 3.first.col")}
+           layout("1.first.col < 2.first.col && 1.first.col < 3.first.col")}
   
   context-free syntax
     OffsideStmt -> OffsideStmtList

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.tbl
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/build.xml
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/build.xml	Wed Oct 31 17:26:53 2012	(r25640)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/build.xml	Wed Oct 31 23:27:07 2012	(r25641)
@@ -4,12 +4,10 @@
 		<os family="windows" />
 	</condition>
 
-	<property name="strategoxt" value="../../tools/strategoxt.jar" />
+	<property name="strategoxt" value="../../../../jsglr-layout/test-offside/tools/strategoxt.jar" />
 	
 	<target name="compile">
 		<compile-grammar module="Haskell" />
-		<copy file="Haskell.tbl" tofile="../../../test/org/spoofax/jsglr_layout/tests/haskell/Haskell.tbl" />
-		<copy file="Haskell.tbl" tofile="../../../../jsglr-orig/test/org/spoofax/jsglr_orig/tests/haskell/Haskell.tbl" />
 	</target>
 	
 	<target name="gen-signature">

From seba at informatik.uni-marburg.de  Thu Nov  1 00:49:45 2012
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 31 Oct 2012 23:49:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25643 -
	spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse
Message-ID: <20121031234945.26AEACC1EA@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Wed Oct 31 23:49:44 2012
New Revision: 25643
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25643&sc=1

Log:
adapt examples to current abstract syntax

Modified:
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout10.hs
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout10_expl.hs
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout11.hs
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout11_expl.hs
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout13.aterm
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6.aterm
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6.hs
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6_expl.hs
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout8.aterm
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout9.aterm

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout10.hs
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout10.hs	Wed Oct 31 23:49:21 2012	(r25642)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout10.hs	Wed Oct 31 23:49:44 2012	(r25643)
@@ -1,3 +1,3 @@
 -- do can have explicit semi colons
-f x = do x; x
-         x
\ No newline at end of file
+f x = do x
+         x; x
\ No newline at end of file

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout10_expl.hs
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout10_expl.hs	Wed Oct 31 23:49:21 2012	(r25642)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout10_expl.hs	Wed Oct 31 23:49:44 2012	(r25643)
@@ -1,3 +1,3 @@
 -- do can have explicit semi colons
-f x = do {x; x
-         ;x}
\ No newline at end of file
+f x = do {x
+         ;x; x}
\ No newline at end of file

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout11.hs
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout11.hs	Wed Oct 31 23:49:21 2012	(r25642)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout11.hs	Wed Oct 31 23:49:44 2012	(r25643)
@@ -1,3 +1,3 @@
 -- do can have explicit semi colons
-f x = do x; x;;;;
-         ;;;x
+f x = do x
+         ;;;x; x;;;;

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout11_expl.hs
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout11_expl.hs	Wed Oct 31 23:49:21 2012	(r25642)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout11_expl.hs	Wed Oct 31 23:49:44 2012	(r25643)
@@ -1,3 +1,3 @@
 -- do can have explicit semi colons
-f x = do {x; x;;;;
-         ;;;x}
+f x = do {x
+         ;;;x; x;;;;}

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout13.aterm
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout13.aterm	Wed Oct 31 23:49:21 2012	(r25642)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout13.aterm	Wed Oct 31 23:49:44 2012	(r25643)
@@ -5,5 +5,5 @@
       OpApp(
         Constr("Just"),
         ".",
-        Let(DeclList(Valdef(Var("x"),Var("id"))),Var("x"))),
+        Let(DeclList(Valdef(Var("x"),Var("id"),Where(DeclList(Empty)))),Var("x"))),
       Where(DeclList(Empty)))))
\ No newline at end of file

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6.aterm
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6.aterm	Wed Oct 31 23:49:21 2012	(r25642)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6.aterm	Wed Oct 31 23:49:44 2012	(r25643)
@@ -4,7 +4,7 @@
     DeclList(
       DeclSeq(Valdef(Var("x"),Lit(Int("1")),Where(DeclList(Empty))),
       DeclSeq(Valdef(Var("y"),Var("x"),Where(DeclList(Empty))),
-      DeclSeq(Valdef(Var("z"),AppBin(AppBin(Var("f"),Var("x")),Var("y")),Where(DeclList(Empty))),
-              Valdef(VarFunLHS(Var("f"),[Var("x"),Var("y")]),Var("z"),Where(DeclList(Empty))))))),
+      DeclSeq(Valdef(VarFunLHS(Var("f"),[Var("x"),Var("y")]),Var("z"),Where(DeclList(Empty))),
+              Valdef(Var("z"),AppBin(AppBin(Var("f"),Var("x")),Var("y")),Where(DeclList(Empty))))))),
     Var("y")),
   Where(DeclList(Empty)))))
\ No newline at end of file

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6.hs
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6.hs	Wed Oct 31 23:49:21 2012	(r25642)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6.hs	Wed Oct 31 23:49:44 2012	(r25643)
@@ -1,5 +1,5 @@
 -- layout can extend over multiple lines
 test = let x = 1;  
-           y = x; z = f x
-            y
-           f x y = z in y
+           y = x
+           f x y = z; z = f x
+            y in y

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6_expl.hs
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6_expl.hs	Wed Oct 31 23:49:21 2012	(r25642)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout6_expl.hs	Wed Oct 31 23:49:44 2012	(r25643)
@@ -1 +1 @@
--- layout can extend over multiple linestest = let {x = 1             ;y = x; z = f x            y           ;f x y = z} in y
\ No newline at end of file
+-- layout can extend over multiple linestest = let {x = 1             ;y = x           ;f x y = z; z = f x            y} in y
\ No newline at end of file

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout8.aterm
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout8.aterm	Wed Oct 31 23:49:21 2012	(r25642)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout8.aterm	Wed Oct 31 23:49:44 2012	(r25643)
@@ -3,4 +3,5 @@
     VarFunLHS(Var("f"),[Var("x")]),
     Let(
       DeclList(Empty),
-      Var("x")))))
\ No newline at end of file
+      Var("x")),
+    Where(DeclList(Empty)))))
\ No newline at end of file

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout9.aterm
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout9.aterm	Wed Oct 31 23:49:21 2012	(r25642)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/doaitse/layout9.aterm	Wed Oct 31 23:49:44 2012	(r25643)
@@ -2,4 +2,5 @@
   Valdef(
     VarFunLHS(Var("f"),[Var("x")]),
     Do(StmtList(
-      ExpStmt(Var("x")))))))
\ No newline at end of file
+      ExpStmt(Var("x")))),
+    Where(DeclList(Empty)))))
\ No newline at end of file

From seba at informatik.uni-marburg.de  Thu Nov  1 00:49:21 2012
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 31 Oct 2012 23:49:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25642 -
	spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell
Message-ID: <20121031234921.F0381CC1AF@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Wed Oct 31 23:49:21 2012
New Revision: 25642
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25642&sc=1

Log:
fix some bugs for layout-sensitive sequences

Modified:
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Case-Alternatives.sdf
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Statements.sdf
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Value-Definitions.sdf
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.def
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.tbl

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Case-Alternatives.sdf
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Case-Alternatives.sdf	Wed Oct 31 23:27:07 2012	(r25641)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Case-Alternatives.sdf	Wed Oct 31 23:49:21 2012	(r25642)
@@ -31,11 +31,9 @@
   >
     ";" OffsideAlt -> OffsideAlt {layout(gt(col(first(2)), col(first(1))))}
   >
-    Alt ";" OffsideAlt -> OffsideAlt
+    OffsideAlt ";" Alt -> OffsideAlt
           {cons("AltSeq"),
-           layout(and(gt(col(left(1)), col(first(1))),
-                  and(gt(col(first(2)), col(first(1))),
-                      gt(col(first(3)), col(first(1))))))}
+           layout("1.first.col < 2.first.col && 1.first.col < 3.first.col && 1.first.col < 3.left.col")}
   
   context-free syntax
     OffsideAlt -> OffsideAltList

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Statements.sdf
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Statements.sdf	Wed Oct 31 23:27:07 2012	(r25641)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Statements.sdf	Wed Oct 31 23:49:21 2012	(r25642)
@@ -34,7 +34,7 @@
   >
     OffsideStmt ";" OffsideStmt -> OffsideStmt
           {cons("StmtSeq"),
-           layout("1.first.col < 2.first.col && 1.first.col < 3.first.col")}
+           layout("1.first.col < 2.first.col && 1.first.col < 3.first.col && 1.first.col < 3.left.col")}
   
   context-free syntax
     OffsideStmt -> OffsideStmtList

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Value-Definitions.sdf
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Value-Definitions.sdf	Wed Oct 31 23:27:07 2012	(r25641)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell-Value-Definitions.sdf	Wed Oct 31 23:49:21 2012	(r25642)
@@ -47,15 +47,13 @@
   context-free priorities
     Decl -> OffsideDecl {layout(gt(col(left(1)), col(first(1))))}
   >
-    OffsideDecl ";" -> OffsideDecl {prefer, layout(gt(col(first(2)), col(first(1))))}
+    OffsideDecl ";" -> OffsideDecl {layout(gt(col(first(2)), col(first(1))))}
   >
     ";" OffsideDecl -> OffsideDecl {layout(gt(col(first(2)), col(first(1))))}
   >
-    Decl ";" OffsideDecl -> OffsideDecl
+    OffsideDecl ";" Decl -> OffsideDecl
           {cons("DeclSeq"),
-           layout(and(gt(col(left(1)), col(first(1))),
-                  and(gt(col(first(2)), col(first(1))),
-                      gt(col(first(3)), col(first(1))))))}
+           layout("1.first.col < 2.first.col && 1.first.col < 3.first.col && 1.first.col < 3.left.col")}
   
   context-free syntax
     OffsideDecl -> OffsideDeclList

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.def
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.def	Wed Oct 31 23:27:07 2012	(r25641)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.def	Wed Oct 31 23:49:21 2012	(r25642)
@@ -107,7 +107,7 @@
   >
     OffsideStmt ";" OffsideStmt -> OffsideStmt
           {cons("StmtSeq"),
-           layout("1.first.col < 2.first.col && 1.first.col < 3.first.col")}
+           layout("1.first.col < 2.first.col && 1.first.col < 3.first.col && 1.first.col < 3.left.col")}
   
   context-free syntax
     OffsideStmt -> OffsideStmtList
@@ -230,15 +230,13 @@
   context-free priorities
     Decl -> OffsideDecl {layout(gt(col(left(1)), col(first(1))))}
   >
-    OffsideDecl ";" -> OffsideDecl {prefer, layout(gt(col(first(2)), col(first(1))))}
+    OffsideDecl ";" -> OffsideDecl {layout(gt(col(first(2)), col(first(1))))}
   >
     ";" OffsideDecl -> OffsideDecl {layout(gt(col(first(2)), col(first(1))))}
   >
-    Decl ";" OffsideDecl -> OffsideDecl
+    OffsideDecl ";" Decl -> OffsideDecl
           {cons("DeclSeq"),
-           layout(and(gt(col(left(1)), col(first(1))),
-                  and(gt(col(first(2)), col(first(1))),
-                      gt(col(first(3)), col(first(1))))))}
+           layout("1.first.col < 2.first.col && 1.first.col < 3.first.col && 1.first.col < 3.left.col")}
   
   context-free syntax
     OffsideDecl -> OffsideDeclList
@@ -279,11 +277,9 @@
   >
     ";" OffsideAlt -> OffsideAlt {layout(gt(col(first(2)), col(first(1))))}
   >
-    Alt ";" OffsideAlt -> OffsideAlt
+    OffsideAlt ";" Alt -> OffsideAlt
           {cons("AltSeq"),
-           layout(and(gt(col(left(1)), col(first(1))),
-                  and(gt(col(first(2)), col(first(1))),
-                      gt(col(first(3)), col(first(1))))))}
+           layout("1.first.col < 2.first.col && 1.first.col < 3.first.col && 1.first.col < 3.left.col")}
   
   context-free syntax
     OffsideAlt -> OffsideAltList

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/Haskell.tbl
==============================================================================
Binary file (source and/or target). No diff available.

From seba at informatik.uni-marburg.de  Thu Nov  1 00:50:58 2012
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 31 Oct 2012 23:50:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25644 - in
	spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars:
	. haskell
Message-ID: <20121031235058.B254F7F801C@mx1.tudelft.nl>

Author: SebastianErdweg
Date: Wed Oct 31 23:50:58 2012
New Revision: 25644
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25644&sc=1

Log:
ignore some generated artifacts

Modified:
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/   (props changed)
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/haskell/   (props changed)

From seba at informatik.uni-marburg.de  Thu Nov  1 00:51:27 2012
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 31 Oct 2012 23:51:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25645 -
	spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr
Message-ID: <20121031235127.2AEE1CC1AF@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Wed Oct 31 23:51:26 2012
New Revision: 25645
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25645&sc=1

Log:
remove gwt deps

Modified:
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/.classpath
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/.project

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/.classpath
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/.classpath	Wed Oct 31 23:50:58 2012	(r25644)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/.classpath	Wed Oct 31 23:51:26 2012	(r25645)
@@ -6,6 +6,12 @@
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/3"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry combineaccessrules="false" kind="src" path="/org.spoofax.terms"/>
+	<classpathentry kind="lib" path="gwt-api-checker.jar"/>
+	<classpathentry kind="lib" path="gwt-benchmark-viewer.war"/>
+	<classpathentry kind="lib" path="gwt-dev.jar"/>
+	<classpathentry kind="lib" path="gwt-servlet-deps.jar"/>
+	<classpathentry kind="lib" path="gwt-servlet.jar"/>
+	<classpathentry kind="lib" path="gwt-soyc-vis.jar"/>
+	<classpathentry kind="lib" path="gwt-user.jar"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

Modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/.project
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/.project	Wed Oct 31 23:50:58 2012	(r25644)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/.project	Wed Oct 31 23:51:26 2012	(r25645)
@@ -11,21 +11,6 @@
 			</arguments>
 		</buildCommand>
 		<buildCommand>
-			<name>com.google.gdt.eclipse.core.webAppProjectValidator</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>com.google.gwt.eclipse.core.gwtProjectValidator</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
-			<name>org.eclipse.ajdt.core.ajbuilder</name>
-			<arguments>
-			</arguments>
-		</buildCommand>
-		<buildCommand>
 			<name>org.eclipse.pde.ManifestBuilder</name>
 			<arguments>
 			</arguments>

From seba at informatik.uni-marburg.de  Thu Nov  1 00:58:57 2012
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 31 Oct 2012 23:58:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25646 - in
	spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr:
	test/org/spoofax/jsglr/tests/layout tests-offside/grammars
	tests-offside/terms
Message-ID: <20121031235857.F32137F8027@mx1.tudelft.nl>

Author: SebastianErdweg
Date: Wed Oct 31 23:58:57 2012
New Revision: 25646
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25646&sc=1

Log:
drop simple2 test suite

Added:
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/layout/AllLayoutTests.java   (contents, props changed)
      - copied, changed from r25560, spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/layout/AllTests.java
Deleted:
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/layout/AllTests.java
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/layout/TestSimple2.java
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/Simple2.def
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/Simple2.rtg
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/Simple2.sdf
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/Simple2.str
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/Simple2.tbl
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/grammars/build.xml
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/Simple2_1.aterm
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/Simple2_1.txt
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/Simple2_2.aterm
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/Simple2_2.txt
   spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/tests-offside/terms/Simple2_3.txt

Copied and modified: spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/layout/AllLayoutTests.java (from r25560, spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/layout/AllTests.java)
==============================================================================
--- spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/layout/AllTests.java	Tue Oct 16 16:13:29 2012	(r25560, copy source)
+++ spoofax/branches/jsglr-layout-merge/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/layout/AllLayoutTests.java	Wed Oct 31 23:58:57 2012	(r25646)
@@ -3,12 +3,11 @@
 import junit.framework.Test;
 import junit.framework.TestSuite;
 
-public class AllTests {
+public class AllLayoutTests {
 
   public static Test suite() {
-    TestSuite suite = new TestSuite(AllTests.class.getName());
+    TestSuite suite = new TestSuite(AllLayoutTests.class.getName());
     //$JUnit-BEGIN$
-    suite.addTestSuite(TestSimple2.class);
     suite.addTestSuite(TestHaskell.class);
     suite.addTestSuite(TestHaskellDoaitse.class);
     //$JUnit-END$

From m.dejonge at tudelft.nl  Thu Nov  1 06:53:32 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 05:53:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25647 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/lib
Message-ID: <20121101055332.9F7552B8013@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 05:53:28 2012
New Revision: 25647
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25647&sc=1

Log:
also use productions in syntax sections

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
==============================================================================
Binary file (source and/or target). No diff available.

From m.dejonge at tudelft.nl  Thu Nov  1 07:19:23 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 06:19:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25648 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego: editor trans
Message-ID: <20121101061923.05644CC1E9@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 06:19:22 2012
New Revision: 25648
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25648&sc=1

Log:
completion templates and edit-complete function adapted for the new completion runtime

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Thu Nov  1 05:53:28 2012	(r25647)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Thu Nov  1 06:19:22 2012	(r25648)
@@ -27,36 +27,241 @@
   reference _ : editor-resolve
 
   hover _ : editor-hover
-  
-  completion template : Strategy =
-    "if" " " <e> " then\n\t" <s> "\nend"
-      
-  completion template : Strategy = 
-    "switch" " " <s> "\n\tcase " <c> ":" " " <s> "\n\totherwise: " <id> "\nend"
 
-  completion template : Strategy =
-  	"let" "\n\t" <x> " = " <s> "\nin\n\t" <s> "\nend"
 
-  completion template : Def =
-  	"where" "\n\t" (blank)
-  	
-  completion template : Def =
-  	"with" "\n\t" (blank)
+completions
+    
+  completion template Module: 
+    "module" " " <name> "\n\nstrategies\n\n\t" (blank)
+    
+  completion template Decl*:
+    "strategies" "\n\t" <def:Def> (blank)
+  
+  completion template Decl*:
+    "rules" "\n\t"  <def:Def> (blank)
+
+  completion template Decl*:
+    "overlays" "\n\t" <ol:Overlay> (blank)
   
-  completion template:
-    "strategies" "\n\t" (blank)
+  completion template Decl*:
+    "imports" "\n\t" <module> (blank)
   
-  completion template:
-    "rules" "\n\t" (blank)
+  completion template Decl*:
+    "signature" <sdecl:Sdecl> "\n\t" (blank)
+
+  completion template Sdecl*:
+    "constructors" "\n\t"  <opdecl*:Opdecl> (blank)
   
-  completion template : Decl =
-    "imports" "\n\t" <Module> (blank)
+  completion template Sdecl*:
+    "sorts" "\n\t" <srt*:Sort> (blank)
+
+  completion template Overlay*: "overlay" =
+    <name> "(" <arg*> ")" "=" "\n\t" <trm>
+    (blank)
+
+  completion template StrategyDef*: "strategy definition" =
+    <sname> "(" <s*> "|" <t*> ")" "=" "\n\t" <s>
+    (blank)
+
+  completion template StrategyDef*: "strategy definition (no args)" =
+    <sname> "=" "\n\t" <s>
+    (blank)
+
+  completion template RuleDef*: "rule definition" =
+    <rname> "(" <s*> "|" <t*> ")" ":" "\n\t" <rule:Rule>
+    (blank)
+
+  completion template RuleDef*: "rule definition (no args)" =
+    <rname> ":" "\n\t" <rule:Rule>
+    (blank)
+
+  completion template Opdecl StrategyDef:
+    "external" " "
+
+//TODO: support sorts for keywords
+//  completion keyword Opdecl StrategyDef:
+//    "external"
+
+  completion template Opdecl*: "opdecl" =
+    <id> " : " <type:Type> "\n"
+    
+  completion template FunType: "fun type" = 
+    <t:ArgType> " * " <t:ArgType> " -> " <rtype:RetType> "\n" 
+
+  completion template Sort: "sort list" = 
+    "[" <s:Sort> ", " <s:Sort> "]"
+
+  completion template Sort: "sort tuple" = 
+    "(" <s:Sort> ", " <s:Sort> ")"
+    
+  completion template Sort: "sort" = 
+    <sname> "(" <s:Sort> ", " <s:Sort> ")"
+
+  completion template Sort: "sort" = 
+    <sname> 
+      
+  //completion template Strategy: "lambda rule" =
+  //    "\\\\" <rule> "\\\\"
+
+  completion template Strategy:
+    "fail"
+
+  completion template Strategy:
+    "id"
+
+//  completion template Strategy: "s" =
+//    <s> 
+
+  completion template Strategy: "left choice" =
+    <s> " <+ " <s>
+
+  completion template Strategy: "guarded left choice" =
+    <s> " < " <s> "+" <s>
+
+  completion template Strategy: "sequential" =
+    <s> "; " <s>
+
+  completion template Strategy: 
+    "rec" " " <sname> "(" <s> ")"
+
+  completion template Strategy: 
+    "some" "("<s>")"
+
+  completion template Strategy: 
+    "one" "("<s>")"
+
+  completion template Strategy: 
+    "all" "("<s>")"
+
+  completion template Strategy: 
+    "not" "("<s>")"
+
+  completion template Strategy: 
+    "where" "("<s>")"
+
+  completion template Strategy: 
+    "with" "("<s>")"
+
+  completion template Strategy: 
+    "test" "("<s>")"
+
+  completion template Strategy: "prim (no args)" =
+    "prim" "(\"" <name> "\")"
+
+  completion template Strategy: "prim" =
+    "prim" "(\"" <name> "\"" "," <term*> ")"
+
+  completion template Strategy: "scoped" =
+    "{" <vname*> ": " <s> "}"
+
+  completion template Strategy: "proceed" =
+    "proceed" "(" <s*> "|" <t*> ")" 
+
+  completion template Strategy: "proceed (no args)" =
+    "proceed"
+
+  completion template Strategy:
+    "if" " " <s> " then\n\t" <s> "\nend"
+
+  completion template Strategy: "if-else" =
+    "if" " " <s> " then\n\t" <s> "\nelse\n\t" <s> "\nend"
+
+  completion template Strategy: "assign ( => )" = 
+      <s> " => " <t>
+
+  completion template Strategy: "assign ( := )" = 
+      <t> " := " <t>
+      
+  completion template Strategy: 
+    "switch" " " <s> "\n\tcase " <s> ":" " " <s> "\n\totherwise: " <id> "\nend"
+    
+  completion template SwitchCase: 
+   "case" " " <s> ": " <s>
+
+  completion template Strategy: "call" =
+    "call" "(" <t> "|" <s*> "|" <t*> ")" 
+
+  completion template Strategy:
+  	"let" "\n\t" <x> " = " <s> "\nin\n\t" <s> "\nend"
+
+  completion template Strategy: "dynamic rule scope" =
+  "{| " <labels:DynRuleScopeId> ":" "\n\t" <s> "\n" "|}" (blank)
+
+  completion template DynRuleScopeId: "scope-name (labeled)" =
+    <name>"."<trm>
+
+  completion template DynRuleScopeId: "scope-name" =
+    <name>
+
+  completion template Strategy: "rules" =
+  "rules" "(" <Drdef:DynRuleDef> ")"
+
+  completion template DynRuleDef: "dynamic rule -- add label" =
+  <Dr> " + " <term>
+
+  completion template DynRuleDef: "dynamic rule -- undefine rule" =
+  <Dr:DynRuleId> " :- " <term>
+
+  completion template DynRuleDef: "dynamic rule -- set rule" =
+  <Dr:DynRuleId> " : " <rule:Rule>
+
+  completion template DynRuleDef: "dynamic rule -- add rule" =
+  <Dr:DynRuleId> " :+ " <rule:Rule>
   
-  completion template:
-    "signature constructors" "\n\t" (blank)
+  completion template DynRuleDef: "dynamic rule -- set match" =
+  <Dr:DynRuleId> " : "  <term>
+
+  completion template DynRuleDef: "dynamic rule -- assign" =
+    <Dr:DynRuleId> " := "  <term>
+    
+  completion template DynRuleDef: "dynamic rule -- assign add" =
+    <Dr:DynRuleId> " :+= "  <term>
+
+  completion template DynRuleDef: "dynamic rule -- set dependend rule" =
+    <Dr:DynRuleId> " : " <rule:Rule> "depends" "on" <term> 
   
-  completion template:
-    "signature sorts" "\n\t" (blank)
+  completion template DynRuleId: "dr-name (labeled)" =
+    <rd:RuleDec> "." <term>
+    
+  completion template DynRuleId: "dr-name (add label)" =
+    <rd:RuleDec> "+" <term>
+         
+  completion template DynRuleId: "dr-name" =
+    <rd:RuleDec>                 
+
+  completion template RuleDec: 
+    <Dr>
+
+  completion template RuleDec: 
+    <Dr> "(" <s*> ")"
+
+  completion template RuleDec: 
+    <Dr> "(" <s*> "|"<t*> ")"
+
+  completion template Rule: "rule (no condition)" = 
+    <term> " -> " <term> 
+
+  completion template Rule: "rule" = 
+    <term> " -> " <term> "\n\t" <condition*:RuleCond> 
+
+//  completion template Strategy: "dynamic rule -- intersect" =
+//  <s> "/" <dr*> "\\" <s>  
+
+//  completion template Strategy: "dynamic rule -- union" =
+//  <s> "\\" <dr*> "/" <s>  
+ 
+  completion template RuleCond*:
+    "where" "\n\t" <s> (blank)
+    
+  completion template RuleCond*:
+    "with" "\n\t" <s> (blank)
+
+//TODO: allow sort list
+  completion template Def*:
+    "extend" " " <def:Def>
+
+  completion template Def*:
+    "override" " " <def:Def>
 
-  completion template : Module = 
-    "module " <name> "\n\nstrategies\n\n\t" 
+  completion template Def*:
+    "internal" " " <def:Def>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str	Thu Nov  1 05:53:28 2012	(r25647)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str	Thu Nov  1 06:19:22 2012	(r25648)
@@ -39,8 +39,14 @@
 
   editor-complete:
     (node, position, ast, path, project-path) -> proposals
+    where
+      <not(oncetd(?SortVar(COMPLETION(_))))> node;
+      <not(oncetd(?DynRuleScopeId(COMPLETION(_))))> node
+      //TODO: DynRuleScopeId(COMPLETION(""))
+      //TODO: SortVar
     with
-      <basic-desugar-top; analyze-ast-local> ast;
+      //debug(!"editor-complete: ");
+      <analyze-ast-local> ast;
       proposals := <ContentProposals>
  
   /* TODO: return ast' from analysis and use this rule based on the decorated ast

From m.dejonge at tudelft.nl  Thu Nov  1 07:24:23 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 06:24:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25649 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf: editor trans
Message-ID: <20121101062423.42A537F8020@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 06:24:23 2012
New Revision: 25649
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25649&sc=1

Log:
completion templates and edit-complete function adapted for the new completion runtime

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Thu Nov  1 06:19:22 2012	(r25648)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Thu Nov  1 06:24:23 2012	(r25649)
@@ -14,88 +14,102 @@
   completion proposer:
     editor-complete
 
-  completion template : ImpSection =
+  completion template ImpSection*:
   	"imports" "\n\t" (blank)
 
-  completion template : Section =
-  	"exports" "\n\t" (blank)
+  completion template Section*:
+  	"exports" "\n\t" <grammar:Grammar> (blank)
 
-  completion template : Section =
-    "hiddens" "\n\t" (blank)
+  completion template Section*:
+    "hiddens" "\n\t" <grammar:Grammar> (blank)
 
-  completion template : Grammar =
+  completion template Grammar:
   	"context-free start-symbols" "\n\t" <Start> (blank)
 
-  completion template : Grammar =
+  completion template Grammar:
   	"lexical start-symbols" "\n\t" <Start> (blank)
 
-  completion template : Grammar =
+  completion template Grammar:
   	"start-symbols" "\n\t" <Start> (blank)
 
-  completion template : Module =
-  	"module" " " <x> "\n\t\nexports\n\t" (blank)
+  completion template Module:
+  	"module" " " <x> "\n\t\nexports\n\t" <grammar:Grammar> (blank)
 
-  completion template : Grammar =
-    "context-free syntax" "\n\t" (blank)
+  completion template Production: "production" = 
+    <symbol*> " -> " <sort> "{" <attr*:Attribute> "}" 
 
-  completion template : Grammar =
-    "lexical syntax" "\n\t" (blank)
+  completion template Production: "production (no attributes)" =
+    <symbol*> " -> " <sort> 
 
-  completion template : Grammar =
-    "syntax" "\n\t" (blank)
+  completion template Attributes: "attributes" =
+    "{" <attr*:Attribute> "}"
 
-  completion template : Grammar =
-    "context-free restrictions" "\n\t" (blank)
+  completion template Grammar:
+    "context-free syntax" "\n\t" <prods:Production> (blank)
 
-  completion template : Grammar =
-    "lexical restrictions" "\n\t" (blank)
+  completion template Grammar:
+    "lexical syntax" "\n\t" <prods:Production> (blank)
 
-  completion template : Grammar =
-    "restrictions" "\n\t" (blank)
+  completion template Grammar:
+    "syntax" "\n\t" <prods:Production> (blank)
 
-  completion template : Grammar =
+  completion template Grammar:
+    "context-free restrictions" "\n\t" <r*:Restriction> (blank)
+
+  completion template Grammar:
+    "lexical restrictions" "\n\t" <r*:Restriction> (blank)
+
+  completion template Grammar:
+    "restrictions" "\n\t" <r*:Restriction> (blank)
+
+  completion template Restriction: "follow restriction" =
+    <Symbols> "-/-" <Lookaheads> 
+
+  completion template Grammar:
     "sorts" "\n\t" (blank)
 
-  completion template : Grammar =
-    "variables" "\n\t" (blank)
+  completion template Grammar:
+    "variables" "\n\t" <prods:Production> (blank)
 
-  completion template : Grammar =
+  completion template Grammar:
     "aliases" "\n\t" (blank)
 
-  completion template : Grammar =
+  completion template Grammar:
     "priorities" "\n\t" (blank)
 
-  completion template : Grammar = 
-    "lexical variables" "\n\t" (blank)
+  completion template Grammar: 
+    "lexical variables" "\n\t" <prods:Production> (blank)
     
-  completion template : Attribute =
+  completion template Attribute:
     "cons" "(\"" <Name> "\")"
 
-  completion template : Attribute =
+  completion template Attribute:
     "deprecated" "(\"" <explanation> "\")"
 
-  completion template : Attribute =
+  completion template Attribute:
     "reject"
 
-  completion template : Attribute =
+  completion template Attribute:
     "left"
 
-  completion template : Attribute =
+  completion template Attribute:
     "right"
 
-  completion template : Attribute =
+  completion template Attribute:
     "non-assoc"
 
-  completion template : Attribute =
+  completion template Attribute:
     "avoid"
 
-  completion template : Attribute =
+  completion template Attribute:
     "prefer"
 
-  completion template : Attribute =
+  completion template Attribute:
     "bracket"
 
-  completion template : Attribute =
+  completion template Attribute:
     "recover"
 
+  completion template Attribute:
+    "completion"
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Thu Nov  1 06:19:22 2012	(r25648)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Thu Nov  1 06:24:23 2012	(r25649)
@@ -112,7 +112,8 @@
     attrs(lst) -> (t, $[Constructor only expected in context-free syntax])
     where
         <fetch(?t at term(default(appl(unquoted("cons"), a*))))> lst;
-        <not(fetch(?term(default(fun(unquoted("recover"))))))> lst
+        <not(fetch(?term(default(fun(unquoted("recover"))))))> lst;
+        <not(fetch(?term(default(fun(unquoted("completion"))))))> lst
 
   context-free-syntax-warning:
     t @ term(default(annotated(_, _))) -> (t, $[Use round parentheses () for attribute arguments])

From m.dejonge at tudelft.nl  Thu Nov  1 07:30:46 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 06:30:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25650 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <20121101063046.480F92B8003@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 06:30:46 2012
New Revision: 25650
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25650&sc=1

Log:
adapt editor-complete function to new completion runtime

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	Thu Nov  1 06:24:23 2012	(r25649)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	Thu Nov  1 06:30:46 2012	(r25650)
@@ -103,10 +103,7 @@
   // (the completion identifier in the AST provides additional context information)
   editor-complete:
     (node, position, ast, path, project-path) -> proposals'
-    where
-      editor-init;
-      (ast', _) := <analyze-top(|<language>)> (ast, path, project-path);
-      item at COMPLETION(name) := <collect-one(?COMPLETION(_))> ast';
+      item at COMPLETION(name) := <collect-one(?COMPLETION(_))> node;
       index-transaction(
         (<index-lookup-all(|name)> item <+ ![]) => proposals
       );

From gabrielkonat at gmail.com  Thu Nov  1 12:19:51 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Thu, 01 Nov 2012 11:19:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25651 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/java/org/spoofax/interpreter/library/language
Message-ID: <20121101111951.27C60CC1C5@mx4.tudelft.nl>

Author: gkonat
Date: Thu Nov  1 11:19:49 2012
New Revision: 25651
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25651&sc=1

Log:
Use ConcurrentHashMap.

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/java/org/spoofax/interpreter/library/language/SemanticIndex.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/java/org/spoofax/interpreter/library/language/SemanticIndex.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/java/org/spoofax/interpreter/library/language/SemanticIndex.java	Thu Nov  1 06:30:46 2012	(r25650)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/main/java/org/spoofax/interpreter/library/language/SemanticIndex.java	Thu Nov  1 11:19:49 2012	(r25651)
@@ -12,6 +12,7 @@
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
 
 import org.spoofax.interpreter.library.IOAgent;
 import org.spoofax.interpreter.terms.IStrategoAppl;
@@ -32,10 +33,10 @@
 	private static final int expectedDistinctPartitions = 100;
 	private static final int expectedValuesPerPartition = 1000;
 	
-	private final Map<SemanticIndexURI, Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry>> entries = 
-	    new HashMap<SemanticIndexURI, Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry>>();
-	private final Map<SemanticIndexURI, Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry>> childs = 
-	    new HashMap<SemanticIndexURI, Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry>>();
+	private final ConcurrentHashMap<SemanticIndexURI, Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry>> entries = 
+	    new ConcurrentHashMap<SemanticIndexURI, Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry>>();
+	private final ConcurrentHashMap<SemanticIndexURI, Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry>> childs = 
+	    new ConcurrentHashMap<SemanticIndexURI, Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry>>();
 	private final Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry> entriesPerFileDescriptor = 
 	    LinkedHashMultimap.create();
 	private final Multimap<URI, SemanticIndexEntry> entriesPerURI = 
@@ -71,30 +72,26 @@
       SemanticIndexURI uri)
   {
     Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry> innerMap = 
-        entries.get(uri);
-    
-    if(innerMap != null)
-      return innerMap;
-    
-    innerMap = ArrayListMultimap.create(expectedDistinctPartitions, 
-        expectedValuesPerPartition);
-    entries.put(uri, innerMap);
-    return innerMap;
+        ArrayListMultimap.create(expectedDistinctPartitions, 
+            expectedValuesPerPartition);
+   
+    Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry> ret = entries.putIfAbsent(uri, innerMap);
+    if(ret == null)
+      ret = innerMap;
+    return ret;
   }
   
   private Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry> innerChildEntries(
       SemanticIndexURI uri)
   {
     Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry> innerMap = 
-        childs.get(uri);
-    
-    if(innerMap != null)
-      return innerMap;
-    
-    innerMap = ArrayListMultimap.create(expectedDistinctPartitions, 
-        expectedValuesPerPartition);
-    childs.put(uri, innerMap);
-    return innerMap;
+        ArrayListMultimap.create(expectedDistinctPartitions, 
+            expectedValuesPerPartition);
+   
+    Multimap<SemanticIndexFileDescriptor, SemanticIndexEntry> ret = childs.putIfAbsent(uri, innerMap);
+    if(ret == null)
+      ret = innerMap;
+    return ret;
   } 
 	
 	public void add(IStrategoAppl entry, SemanticIndexFileDescriptor fileDescriptor) {

From oskarvanrest at gmail.com  Thu Nov  1 12:38:21 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Thu, 01 Nov 2012 11:38:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25652 - in
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf:
	. editorpair editorservices resource
Message-ID: <20121101113821.4129C108C015@mx3.tudelft.nl>

Author: OskarVanRest
Date: Thu Nov  1 11:38:20 2012
New Revision: 25652
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25652&sc=1

Log:
EditorPairRegistry

Added:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorpair/
Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Thu Nov  1 11:19:49 2012	(r25651)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Thu Nov  1 11:38:20 2012	(r25652)
@@ -4,31 +4,30 @@
 import org.eclipse.emf.ecore.EPackage;
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.ui.IEditorPart;
+import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.modelware.gmf.editorservices.DiagramSelectionChangedListener;
 import org.spoofax.modelware.gmf.editorservices.TextSelectionChangedListener;
-import org.strategoxt.lang.Context;
 
 public class EditorPair {
 
 	private IEditorPart textEditor;
 	private DiagramEditor diagramEditor;
-	private Context context;
 	private EPackage ePackage;
 	private Debouncer debouncer;
 	
 	private EObject semanticModel;
+	private IStrategoTerm lastAST;
 	
 	private SemanticModelContentAdapter semanticModelContentAdapter;
 	private DiagramSelectionChangedListener GMFSelectionChangedListener;
 	private TextSelectionChangedListener spoofaxSelectionChangedListener;
 
-	public EditorPair(IEditorPart textEditor, DiagramEditor diagramEditor, Context context, EPackage ePackage) {
+	public EditorPair(IEditorPart textEditor, DiagramEditor diagramEditor, EPackage ePackage) {
 		this.textEditor = textEditor;
 		this.diagramEditor = diagramEditor;
-		this.context = context;
 		this.ePackage = ePackage;
 		this.debouncer = new Debouncer();
-
+		
 		loadSemanticModel();
 		addSelectionChangeListeners();
 	}
@@ -60,11 +59,7 @@
 	public DiagramEditor getDiagramEditor() {
 		return diagramEditor;
 	}
-
-	public Context getContext() {
-		return context;
-	}
-
+	
 	public EPackage getEPackage() {
 		return ePackage;
 	}
@@ -72,4 +67,12 @@
 	public Debouncer getDebouncer() {
 		return debouncer;
 	}
+	
+	public IStrategoTerm getLastAST() {
+		return lastAST;
+	}
+	
+	public void setLastAST(IStrategoTerm AST) {
+		this.lastAST = AST;
+	}
 }
\ No newline at end of file

Added: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java	Thu Nov  1 11:38:20 2012	(r25652)
@@ -0,0 +1,74 @@
+package org.spoofax.modelware.gmf;
+
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Map;
+
+import org.eclipse.emf.ecore.EPackage;
+import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.imp.editor.UniversalEditor;
+import org.eclipse.ui.IEditorPart;
+
+public class EditorPairRegistry {
+
+	private static EditorPairRegistry instance = new EditorPairRegistry();
+	private Map<UniversalEditor, EditorPair> mapT = new HashMap<UniversalEditor, EditorPair>();
+	private Map<DiagramEditor, EditorPair> mapD = new HashMap<DiagramEditor, EditorPair>();
+	
+	private EditorPairRegistry() {
+		
+	}
+	
+	public static EditorPairRegistry getInstance() {
+		return instance;
+	}
+	
+	public EditorPair remove(IEditorPart editor) {
+		EditorPair editorPair = get(editor);
+		if (editorPair != null) {
+			editorPair.dispose();
+		}
+		return editorPair;
+	}
+	
+	public EditorPair get(IEditorPart editor) {
+		if (editor instanceof UniversalEditor) {
+			return mapT.get(editor);
+		}
+		else {
+			return mapD.get(editor);
+		}
+	}
+	
+	public EditorPair get(String textFilePath) {
+		IEditorPart textEditor = GMFBridgeUtil.findTextEditor(textFilePath);
+		return mapT.get(textEditor);
+	}
+	
+	public EditorPair get(String textFilePath, String packageName) {
+		UniversalEditor textEditor = GMFBridgeUtil.findTextEditor(textFilePath);
+		if (contains(textEditor)) {
+			return get(textEditor);
+		}
+		
+		DiagramEditor diagramEditor = GMFBridgeUtil.findDiagramEditor(textFilePath, packageName);
+		EPackage ePackage = EPackage.Registry.INSTANCE.getEPackage(packageName);
+		
+		if (textEditor != null && diagramEditor != null && ePackage != null && GMFBridgeUtil.isInitialised(diagramEditor)) {
+			EditorPair editorPair = new EditorPair(textEditor, diagramEditor, ePackage);
+			mapT.put(textEditor, editorPair);
+			mapD.put(diagramEditor, editorPair);
+			return editorPair;
+		}
+		
+		return null;
+	}
+	
+	public Collection<EditorPair> getAll() {
+		return mapT.values();
+	}
+	
+	public boolean contains(IEditorPart editor) {
+		return (get(editor) != null);
+	}
+}

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java	Thu Nov  1 11:19:49 2012	(r25651)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java	Thu Nov  1 11:38:20 2012	(r25652)
@@ -1,19 +1,12 @@
 package org.spoofax.modelware.gmf;
 
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.Map;
-
 import org.eclipse.emf.ecore.EObject;
-import org.eclipse.emf.ecore.EPackage;
-import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.swt.widgets.Display;
-import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.IPartListener;
 import org.eclipse.ui.IWorkbenchPart;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.commands.ICommandService;
-import org.eclipse.ui.part.FileEditorInput;
+import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.modelware.emf.Term2Model;
@@ -21,17 +14,16 @@
 import org.spoofax.modelware.gmf.editorservices.SaveSynchronization;
 import org.spoofax.modelware.gmf.editorservices.UndoRedoSynchronization;
 import org.spoofax.terms.StrategoAppl;
+import org.spoofax.terms.TermFactory;
 import org.strategoxt.lang.Context;
 
 public class GMFBridge {
 
 	private static GMFBridge instance = new GMFBridge();
-
-	private Map<String, EditorPair> editorPairs = new HashMap<String, EditorPair>();
+	public static TermFactory termFactory = new TermFactory();
 
 	private GMFBridge() {
 		GMFBridgeUtil.getActivePage().addPartListener(new GMFBridgePartListener());
-		
 		ICommandService service = (ICommandService) PlatformUI.getWorkbench().getService(ICommandService.class);
 		service.addExecutionListener(new SaveSynchronization());
 		service.addExecutionListener(new UndoRedoSynchronization());
@@ -42,81 +34,43 @@
 	}
 
 	public IStrategoTerm synchronize(Context context, IStrategoTerm analysedAST, IStrategoString textFilePath, IStrategoString packageName) {
-		EditorPair editorPair = getEditorPair(context, textFilePath.stringValue(), packageName.stringValue());
-		
-		if (editorPair != null && editorPair.getDebouncer().text2modelAllowed())
-			term2Model(editorPair, analysedAST);
-		
-		return analysedAST;
-	}
-	
-	public EditorPair getEditorPair(String key) {
-		return editorPairs.get(key);		
-	}
-	
-	public EditorPair getEditorPair(IEditorPart editorPart) {
-		Collection<EditorPair> eps = editorPairs.values();
-		for (EditorPair ep : eps) {
-			if (ep.getTextEditor() == editorPart || ep.getDiagramEditor() == editorPart) {
-				return ep;
-			}
-		}
-		
-		return null;	
-	}
+		EditorPair editorPair = EditorPairRegistry.getInstance().get(textFilePath.stringValue(), packageName.stringValue());
 
-	private EditorPair getEditorPair(Context context, String textFilePath, String packageName) {
-		String key = textFilePath;
+		if (editorPair == null || !(analysedAST instanceof IStrategoAppl)) {
+			return analysedAST;
+		}
 
-		if (editorPairs.containsKey(key)) {
-			return editorPairs.get(key);
-		} else {
-			IEditorPart textEditor = GMFBridgeUtil.findTextEditor(textFilePath);
-			DiagramEditor diagramEditor = GMFBridgeUtil.findDiagramEditor(textFilePath, packageName);
-			EPackage ePackage = EPackage.Registry.INSTANCE.getEPackage(packageName);
-			
-			if (!(textEditor == null || diagramEditor == null || ePackage == null) && GMFBridgeUtil.isInitialised(diagramEditor)) {
-				EditorPair editorPair = new EditorPair(textEditor, diagramEditor, context, ePackage);
-				editorPairs.put(key, editorPair);
-				return editorPair;
+		if (editorPair != null && analysedAST instanceof IStrategoAppl) {
+			if (editorPair.getLastAST() == null || !editorPair.getLastAST().equals(analysedAST)) {
+				if (editorPair.getDebouncer().text2modelAllowed()) {
+					term2Model(editorPair, analysedAST);
+				}
 			}
+			editorPair.setLastAST(analysedAST);
 		}
 		
-		return null;
+		return analysedAST;
 	}
 
 	private void term2Model(final EditorPair editorPair, IStrategoTerm analysedAST) {
 		if (!(analysedAST instanceof StrategoAppl))
-				return;
-		
+			return;
+
 		EObject newModel = new Term2Model(editorPair.getEPackage()).convert(analysedAST);
 		EObject currentModel = GMFBridgeUtil.getSemanticModel(editorPair.getDiagramEditor());
 
 		if (currentModel == null)
 			return;
-		
+
 		CompareUtil.merge(newModel, currentModel);
 
 		// Workaround for http://www.eclipse.org/forums/index.php/m/885469/#msg_885469
-		// TODO remove once the people of GMF fixed it
 		Display.getDefault().asyncExec(new Runnable() {
 			public void run() {
 				editorPair.getDiagramEditor().getDiagramEditPart().addNotify();
 			}
 		});
 	}
-
-	public EditorPair removeEditorPair(String key) {
-		EditorPair editorPair = editorPairs.remove(key);
-		if (editorPair != null) {
-			editorPair.dispose();
-		}
-		return editorPair;
-	}
-
-	public Map<String, EditorPair> getEditorPairs() {
-		return editorPairs;
-	}
 }
 
 class GMFBridgePartListener implements IPartListener {
@@ -131,15 +85,23 @@
 
 	@Override
 	public void partClosed(IWorkbenchPart part) {
-		if (part instanceof IEditorPart) {
-			IEditorPart editorPart = (IEditorPart) part;
-			if (editorPart.getEditorInput() instanceof FileEditorInput) {
-				FileEditorInput input = (FileEditorInput) editorPart.getEditorInput();
-				String key = input.getPath().toString();
-				//String key = path.substring(0, path.lastIndexOf("."));
-				GMFBridge.getInstance().removeEditorPair(key);
-			}
-		}
+		// if (part instanceof IEditorPart) {
+		// IEditorPart editor = (IEditorPart) part;
+		// EditorPairs editorPairs = GMFBridge.getInstance().getEditorPairs();
+		//
+		// if (editorPairs.containsEditor(editor)) {
+		// editorPairs.re
+		// }
+		//
+		//
+		//
+		// GMFBridge.getInstance().getEditorPairs().get(editor);
+		// if (editorPart.getEditorInput() instanceof FileEditorInput) {
+		// FileEditorInput input = (FileEditorInput) editorPart.getEditorInput();
+		// String key = input.getPath().toString();
+		// GMFBridge.getInstance().getEditorPairs().remove(key);
+		// }
+		// }
 	}
 
 	@Override

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java	Thu Nov  1 11:19:49 2012	(r25651)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java	Thu Nov  1 11:38:20 2012	(r25652)
@@ -9,6 +9,7 @@
 import org.eclipse.emf.ecore.resource.ResourceSet;
 import org.eclipse.emf.transaction.TransactionalEditingDomain;
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.ui.IEditorInput;
 import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.IEditorReference;
@@ -22,12 +23,12 @@
 
 	private static String IMPEditorID = "org.eclipse.imp.runtime.impEditor";
 	
-	public static IEditorPart findTextEditor(String path) {
-		return findEditor(path, IMPEditorID);
+	public static UniversalEditor findTextEditor(String path) {
+		return (UniversalEditor) findEditor(path, IMPEditorID);
 	}
 	
-	public static IEditorPart findTextEditor(IPath path) {
-		return findEditor(path, IMPEditorID);
+	public static UniversalEditor findTextEditor(IPath path) {
+		return (UniversalEditor) findEditor(path, IMPEditorID);
 	}
 	
 	public static DiagramEditor findDiagramEditor(String textfilePath, String packageName) {
@@ -75,9 +76,17 @@
 	}
 
 	public static Resource getSemanticModelResource(DiagramEditor diagramEditor) {
+		return getResource(diagramEditor, 1);
+	}
+	
+	public static Resource getNotationModelResource(DiagramEditor diagramEditor) {
+		return getResource(diagramEditor, 0);
+	}
+	
+	private static Resource getResource(DiagramEditor diagramEditor, int i) {
 		TransactionalEditingDomain editingDomain = diagramEditor.getEditingDomain();
 		ResourceSet diagramEditorResourceSet = editingDomain.getResourceSet();
-		return diagramEditorResourceSet.getResources().get(1);
+		return diagramEditorResourceSet.getResources().get(i);
 	}
 
 	public static EObject getSemanticModel(DiagramEditor diagramEditor) {

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java	Thu Nov  1 11:19:49 2012	(r25651)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java	Thu Nov  1 11:38:20 2012	(r25652)
@@ -10,7 +10,6 @@
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.services.ITextReplacer;
-import org.strategoxt.lang.Context;
 
 public class SemanticModelContentAdapter extends EContentAdapter {
 
@@ -29,10 +28,9 @@
 			
 			IEditorPart textEditor = editorPair.getTextEditor();
 			DiagramEditor diagramEditor = editorPair.getDiagramEditor();
-			Context context = editorPair.getContext();
 
 			IStrategoTerm currentTerm = EditorState.getEditorFor(textEditor).getCurrentAst();
-			IStrategoTerm newTerm = new Model2Term(context.getFactory()).convert(GMFBridgeUtil.getSemanticModel(diagramEditor));
+			IStrategoTerm newTerm = new Model2Term(GMFBridge.termFactory).convert(GMFBridgeUtil.getSemanticModel(diagramEditor));
 
 			EditorState editor = EditorState.getEditorFor(textEditor);
 			ITextReplacer textReplacer = null;
@@ -42,7 +40,7 @@
 				e.printStackTrace();
 			}
 
-			textReplacer.replaceText(context.getFactory().makeList(context.getFactory().makeTuple(currentTerm, newTerm)));
+			textReplacer.replaceText(GMFBridge.termFactory.makeList(GMFBridge.termFactory.makeTuple(currentTerm, newTerm)));
 			
 			ISelectionProvider selectionProvider = diagramEditor.getSite().getSelectionProvider();
 			selectionProvider.setSelection(selectionProvider.getSelection());

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java	Thu Nov  1 11:19:49 2012	(r25651)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java	Thu Nov  1 11:38:20 2012	(r25652)
@@ -1,7 +1,6 @@
 package org.spoofax.modelware.gmf.editorservices;
 
 import java.util.Collection;
-import java.util.Map;
 
 import org.eclipse.core.commands.ExecutionEvent;
 import org.eclipse.core.commands.ExecutionException;
@@ -12,7 +11,7 @@
 import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.PlatformUI;
 import org.spoofax.modelware.gmf.EditorPair;
-import org.spoofax.modelware.gmf.GMFBridge;
+import org.spoofax.modelware.gmf.EditorPairRegistry;
 
 public class SaveSynchronization implements IExecutionListener {
 
@@ -36,15 +35,14 @@
 		if (commandId.equals("org.eclipse.ui.file.save")) {
 			IEditorPart activeEditor = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getActiveEditor();
 			if (activeEditor != null && activeEditor instanceof UniversalEditor) {
-				EditorPair editorPair = GMFBridge.getInstance().getEditorPair(activeEditor);
+				EditorPair editorPair = EditorPairRegistry.getInstance().get(activeEditor);
 				if (editorPair != null) {
 					editorPair.getDiagramEditor().doSave(new NullProgressMonitor());
 				}
 			}
 		}
 		else if (commandId.equals("org.eclipse.ui.file.saveAll")) {
-			Map<String, EditorPair> editorPairs = GMFBridge.getInstance().getEditorPairs();
-			Collection<EditorPair> eps = editorPairs.values();
+			Collection<EditorPair> eps = EditorPairRegistry.getInstance().getAll();
 			for (EditorPair ep : eps) {
 				ep.getDiagramEditor().doSave(new NullProgressMonitor());
 			}

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java	Thu Nov  1 11:19:49 2012	(r25651)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java	Thu Nov  1 11:38:20 2012	(r25652)
@@ -10,7 +10,7 @@
 import org.eclipse.ui.IEditorPart;
 import org.spoofax.modelware.emf.resource.SpoofaxResource;
 import org.spoofax.modelware.gmf.EditorPair;
-import org.spoofax.modelware.gmf.GMFBridge;
+import org.spoofax.modelware.gmf.EditorPairRegistry;
 import org.spoofax.modelware.gmf.GMFBridgeUtil;
 
 public class SpoofaxGMFResource extends SpoofaxResource {
@@ -25,7 +25,7 @@
 	protected void doLoad(InputStream inputStream, Map<?, ?> options) {
 		super.doLoad(inputStream, options);
 		
-		EditorPair editorPair = GMFBridge.getInstance().getEditorPair(filePath.toString());
+		EditorPair editorPair = EditorPairRegistry.getInstance().get(filePath.toString());
 		if (editorPair != null) {
 			editorPair.loadSemanticModel();
 		}

From oskarvanrest at gmail.com  Thu Nov  1 13:20:54 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Thu, 01 Nov 2012 12:20:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25653 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf
Message-ID: <20121101122054.56066108C044@mx3.tudelft.nl>

Author: OskarVanRest
Date: Thu Nov  1 12:20:54 2012
New Revision: 25653
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25653&sc=1

Log:


Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java	Thu Nov  1 11:38:20 2012	(r25652)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java	Thu Nov  1 12:20:54 2012	(r25653)
@@ -25,7 +25,10 @@
 	
 	public EditorPair remove(IEditorPart editor) {
 		EditorPair editorPair = get(editor);
-		if (editorPair != null) {
+		if (editorPair != null) {		
+			mapT.remove(editorPair.getTextEditor());
+			mapD.remove(editorPair.getDiagramEditor());	
+			
 			editorPair.dispose();
 		}
 		return editorPair;

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java	Thu Nov  1 11:38:20 2012	(r25652)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java	Thu Nov  1 12:20:54 2012	(r25653)
@@ -2,6 +2,7 @@
 
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.swt.widgets.Display;
+import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.IPartListener;
 import org.eclipse.ui.IWorkbenchPart;
 import org.eclipse.ui.PlatformUI;
@@ -48,7 +49,7 @@
 			}
 			editorPair.setLastAST(analysedAST);
 		}
-		
+
 		return analysedAST;
 	}
 
@@ -85,23 +86,14 @@
 
 	@Override
 	public void partClosed(IWorkbenchPart part) {
-		// if (part instanceof IEditorPart) {
-		// IEditorPart editor = (IEditorPart) part;
-		// EditorPairs editorPairs = GMFBridge.getInstance().getEditorPairs();
-		//
-		// if (editorPairs.containsEditor(editor)) {
-		// editorPairs.re
-		// }
-		//
-		//
-		//
-		// GMFBridge.getInstance().getEditorPairs().get(editor);
-		// if (editorPart.getEditorInput() instanceof FileEditorInput) {
-		// FileEditorInput input = (FileEditorInput) editorPart.getEditorInput();
-		// String key = input.getPath().toString();
-		// GMFBridge.getInstance().getEditorPairs().remove(key);
-		// }
-		// }
+		
+		 if (part instanceof IEditorPart) {
+			 IEditorPart editor = (IEditorPart) part;
+			 
+			 if (EditorPairRegistry.getInstance().contains(editor)) {
+				 EditorPairRegistry.getInstance().remove(editor);
+			 }
+		 }
 	}
 
 	@Override

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java	Thu Nov  1 11:38:20 2012	(r25652)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java	Thu Nov  1 12:20:54 2012	(r25653)
@@ -98,9 +98,6 @@
 	}
 	
 	public static boolean isInitialised(DiagramEditor diagramEditor) {
-		if (getSemanticModel(diagramEditor) != null && diagramEditor.getEditorSite().getSelectionProvider() != null)
-			return true;
-		else
-			return false;
+		return getSemanticModel(diagramEditor) != null && diagramEditor.getEditorSite().getSelectionProvider() != null;
 	}
 }

From oskarvanrest at gmail.com  Thu Nov  1 13:29:47 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Thu, 01 Nov 2012 12:29:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25654 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf
Message-ID: <20121101122947.68F8A2B801E@mx2.tudelft.nl>

Author: OskarVanRest
Date: Thu Nov  1 12:29:47 2012
New Revision: 25654
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25654&sc=1

Log:
refactor

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java	Thu Nov  1 12:20:54 2012	(r25653)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java	Thu Nov  1 12:29:47 2012	(r25654)
@@ -8,6 +8,8 @@
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.IPartListener;
+import org.eclipse.ui.IWorkbenchPart;
 
 public class EditorPairRegistry {
 
@@ -16,7 +18,7 @@
 	private Map<DiagramEditor, EditorPair> mapD = new HashMap<DiagramEditor, EditorPair>();
 	
 	private EditorPairRegistry() {
-		
+		GMFBridgeUtil.getActivePage().addPartListener(new EditorCloseListener());
 	}
 	
 	public static EditorPairRegistry getInstance() {
@@ -74,4 +76,37 @@
 	public boolean contains(IEditorPart editor) {
 		return (get(editor) != null);
 	}
+	
+	class EditorCloseListener implements IPartListener {
+
+		@Override
+		public void partClosed(IWorkbenchPart part) {
+			
+			 if (part instanceof IEditorPart) {
+				 IEditorPart editor = (IEditorPart) part;
+				 
+				 if (getInstance().contains(editor)) {
+					 getInstance().remove(editor);
+				 }
+			 }
+		}
+		
+		@Override
+		public void partActivated(IWorkbenchPart part) {
+		}
+
+		@Override
+		public void partBroughtToTop(IWorkbenchPart part) {
+		}
+
+		@Override
+		public void partDeactivated(IWorkbenchPart part) {
+		}
+
+		@Override
+		public void partOpened(IWorkbenchPart part) {
+		}
+	}
 }
+
+

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java	Thu Nov  1 12:20:54 2012	(r25653)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java	Thu Nov  1 12:29:47 2012	(r25654)
@@ -2,9 +2,6 @@
 
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.swt.widgets.Display;
-import org.eclipse.ui.IEditorPart;
-import org.eclipse.ui.IPartListener;
-import org.eclipse.ui.IWorkbenchPart;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.commands.ICommandService;
 import org.spoofax.interpreter.terms.IStrategoAppl;
@@ -24,7 +21,6 @@
 	public static TermFactory termFactory = new TermFactory();
 
 	private GMFBridge() {
-		GMFBridgeUtil.getActivePage().addPartListener(new GMFBridgePartListener());
 		ICommandService service = (ICommandService) PlatformUI.getWorkbench().getService(ICommandService.class);
 		service.addExecutionListener(new SaveSynchronization());
 		service.addExecutionListener(new UndoRedoSynchronization());
@@ -72,35 +68,4 @@
 			}
 		});
 	}
-}
-
-class GMFBridgePartListener implements IPartListener {
-
-	@Override
-	public void partActivated(IWorkbenchPart part) {
-	}
-
-	@Override
-	public void partBroughtToTop(IWorkbenchPart part) {
-	}
-
-	@Override
-	public void partClosed(IWorkbenchPart part) {
-		
-		 if (part instanceof IEditorPart) {
-			 IEditorPart editor = (IEditorPart) part;
-			 
-			 if (EditorPairRegistry.getInstance().contains(editor)) {
-				 EditorPairRegistry.getInstance().remove(editor);
-			 }
-		 }
-	}
-
-	@Override
-	public void partDeactivated(IWorkbenchPart part) {
-	}
-
-	@Override
-	public void partOpened(IWorkbenchPart part) {
-	}
 }
\ No newline at end of file

From oskarvanrest at gmail.com  Thu Nov  1 13:44:57 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Thu, 01 Nov 2012 12:44:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25655 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf
Message-ID: <20121101124457.348907F8025@mx1.tudelft.nl>

Author: OskarVanRest
Date: Thu Nov  1 12:44:56 2012
New Revision: 25655
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25655&sc=1

Log:


Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java	Thu Nov  1 12:29:47 2012	(r25654)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java	Thu Nov  1 12:44:56 2012	(r25655)
@@ -1,18 +1,23 @@
 package org.spoofax.modelware.gmf;
 
 import org.eclipse.emf.ecore.EObject;
+import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.swt.widgets.Display;
+import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.commands.ICommandService;
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.modelware.emf.Model2Term;
 import org.spoofax.modelware.emf.Term2Model;
 import org.spoofax.modelware.emf.compare.CompareUtil;
 import org.spoofax.modelware.gmf.editorservices.SaveSynchronization;
 import org.spoofax.modelware.gmf.editorservices.UndoRedoSynchronization;
-import org.spoofax.terms.StrategoAppl;
 import org.spoofax.terms.TermFactory;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.services.ITextReplacer;
 import org.strategoxt.lang.Context;
 
 public class GMFBridge {
@@ -49,12 +54,11 @@
 		return analysedAST;
 	}
 
-	private void term2Model(final EditorPair editorPair, IStrategoTerm analysedAST) {
-		if (!(analysedAST instanceof StrategoAppl))
-			return;
-
+	public void term2Model(EditorPair editorPair, IStrategoTerm analysedAST) {
+		final DiagramEditor diagramEditor = editorPair.getDiagramEditor();
+		
 		EObject newModel = new Term2Model(editorPair.getEPackage()).convert(analysedAST);
-		EObject currentModel = GMFBridgeUtil.getSemanticModel(editorPair.getDiagramEditor());
+		EObject currentModel = GMFBridgeUtil.getSemanticModel(diagramEditor);
 
 		if (currentModel == null)
 			return;
@@ -64,8 +68,26 @@
 		// Workaround for http://www.eclipse.org/forums/index.php/m/885469/#msg_885469
 		Display.getDefault().asyncExec(new Runnable() {
 			public void run() {
-				editorPair.getDiagramEditor().getDiagramEditPart().addNotify();
+				diagramEditor.getDiagramEditPart().addNotify();
 			}
 		});
 	}
+	
+	public void model2Term(EditorPair editorPair) {
+		final IEditorPart textEditor = editorPair.getTextEditor();
+		final DiagramEditor diagramEditor = editorPair.getDiagramEditor();
+
+		IStrategoTerm currentTerm = EditorState.getEditorFor(textEditor).getCurrentAst();
+		IStrategoTerm newTerm = new Model2Term(GMFBridge.termFactory).convert(GMFBridgeUtil.getSemanticModel(diagramEditor));
+
+		EditorState editor = EditorState.getEditorFor(textEditor);
+		ITextReplacer textReplacer = null;
+		try {
+			textReplacer = editor.getDescriptor().createService(ITextReplacer.class, editor.getParseController());
+		} catch (BadDescriptorException e) {
+			e.printStackTrace();
+		}
+
+		textReplacer.replaceText(GMFBridge.termFactory.makeList(GMFBridge.termFactory.makeTuple(currentTerm, newTerm)));
+	}
 }
\ No newline at end of file

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java	Thu Nov  1 12:29:47 2012	(r25654)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java	Thu Nov  1 12:44:56 2012	(r25655)
@@ -2,14 +2,7 @@
 
 import org.eclipse.emf.common.notify.Notification;
 import org.eclipse.emf.ecore.util.EContentAdapter;
-import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.jface.viewers.ISelectionProvider;
-import org.eclipse.ui.IEditorPart;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.spoofax.modelware.emf.Model2Term;
-import org.strategoxt.imp.runtime.EditorState;
-import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
-import org.strategoxt.imp.runtime.services.ITextReplacer;
 
 public class SemanticModelContentAdapter extends EContentAdapter {
 
@@ -26,23 +19,9 @@
 			if (!editorPair.getDebouncer().model2textAllowed())
 				return;
 			
-			IEditorPart textEditor = editorPair.getTextEditor();
-			DiagramEditor diagramEditor = editorPair.getDiagramEditor();
-
-			IStrategoTerm currentTerm = EditorState.getEditorFor(textEditor).getCurrentAst();
-			IStrategoTerm newTerm = new Model2Term(GMFBridge.termFactory).convert(GMFBridgeUtil.getSemanticModel(diagramEditor));
-
-			EditorState editor = EditorState.getEditorFor(textEditor);
-			ITextReplacer textReplacer = null;
-			try {
-				textReplacer = editor.getDescriptor().createService(ITextReplacer.class, editor.getParseController());
-			} catch (BadDescriptorException e) {
-				e.printStackTrace();
-			}
-
-			textReplacer.replaceText(GMFBridge.termFactory.makeList(GMFBridge.termFactory.makeTuple(currentTerm, newTerm)));
+			GMFBridge.getInstance().model2Term(editorPair);
 			
-			ISelectionProvider selectionProvider = diagramEditor.getSite().getSelectionProvider();
+			ISelectionProvider selectionProvider = editorPair.getDiagramEditor().getSite().getSelectionProvider();
 			selectionProvider.setSelection(selectionProvider.getSelection());
 		}
 	}

From m.dejonge at tudelft.nl  Thu Nov  1 16:17:24 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 15:17:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25656 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.editorservice/editor
	org.strategoxt.imp.editors.editorservice/trans
	org.strategoxt.imp.generator/src/syntax
Message-ID: <20121101151724.5421DCC145@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 15:17:23 2012
New Revision: 25656
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25656&sc=1

Log:
syntax: 
- constrain semantic rules to their own section, e.g. BuilderRules in BuilderSection and RefactoringRules in RefactoringSection and do on
- deprecated rules
- recover rules to help code completion

editor:
- syntactic completion templates generate with template lang (+ some custom rules)
- semantic completion for: color defs, keybinding defs, sdf sorts + constructors, sdf templates
- extended checks

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/RecoveryRules.sdf
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/FoldingService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/RefactoringsService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/ReferencesService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/SemanticServices.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Thu Nov  1 12:44:56 2012	(r25655)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Thu Nov  1 15:17:23 2012	(r25656)
@@ -2,198 +2,265 @@
 
 imports EditorService-Completions.generated
 
-completions
 
-  completion proposer:
-    editor-complete
+completions Semantic completion proposer
 
-  completion trigger:
-    "(completion\s*template|start\s*symbols)\s*:(\s+|\n)"
-
-  completion trigger:
-    "(completion\s*template|start\s*symbols)\s*:\s*[^\s]+\s*=\s+"
-
-  completion template : Module =
-    "module " <Module>
-
-  completion template : Section =
-    "imports" "\n\t" (blank)
-
-  completion template : Section =
-    "builders" "\n\t" (blank)
-
-  completion template : Section =
-    "refactorings" "\n\t" (blank)
-
-  completion template : Section =
-    "colorer" "\n\t" (blank)
-
-  completion template : Section =
-    "folding" "\n\t" (blank)
-
-  completion template : Section =
-    "outliner" "\n\t" (blank)
-
-  completion template : Section =
-    "completions" "\n\t" (blank)
-
-  completion template : Section =
-    "language" "\n\t" (blank)
-
-  completion template : Section =
-    "references" "\n\t" (blank)
-    
-  completion template : Section =
-    "keybindings" "\n" 
-    (blank)
+  completion proposer: editor-complete
     
-  completion template KeyBinding: "keybinding" =
-    <key1> " + " <key2> " + " <key3> " = " <"action-definition-id">
-    (blank)
-    
-  completion template KeyCombination: "key combination" =
-    <Key> " + " <Key>
-
-  completion template  Key: "Shift"
-
-  completion template  Key: "Ctrl"
-
-  completion template  Key: "Alt"
-
-  completion template  Key: "key" = <A>
-
-  completion template : SemanticRule =
-    "completion template" " " <Sort> " :\n\t" <"prefix"> " " <"completion"> (blank)
-
-  completion template : SemanticRule =
-    "identifier lexical" ":\n\t" <regex> (blank)
-
-  completion template : SemanticRule =
-    "completion proposer" ":\n\t" <s> (blank)
-
-  completion template : SemanticRule =
-    "completion keyword" ":\n\t" <k> (blank)
-
-  completion template : SemanticRule =
-    "completion trigger" ":\n\t" <regex> (blank)
-
-  completion template : SemanticRule =
-  	"observer" ": " <s> (blank)
-
-  completion template : SemanticRule =
-    "provider" ": " <provider.jar> (blank)
-
-  completion template : SemanticRule =
-  	"builder" ": " <"caption"> " = " <s> (blank)
-
-  completion template : SemanticRule =
-    "builder caption" ": " <"caption"> (blank)
-
-  completion template SemanticRule Refactoring: "refactoring" =
-  	"refactoring " <Sort> " : " <"caption"> " = " <s> (blank)
-
-  completion template SemanticRule Refactoring: "refactoring (extended)" =
-  	"refactoring " <Sort> " : " <"caption"> " = " <s> " " <annos> "\n\t"
-  	<shortcut> "\n\t"
-  	<user-input> "\n\t"
-  	(blank)
-
-  completion template UIOption Shortcut: 
-  	"shortcut" ": " <keys> "\n\t"
-
-  completion template UIOption UserInput: "user input" =
-  	"input" " \n\t" <inputs> 
-
-  completion template InputField: "text input" =
-  	 "text: "  <"label"> " = " "\"\"" "\n"
-
-  completion template InputField: "identifier input" =
-  	 "identifier: "  <"label"> " = " "\"\"" "\n"
-
-  completion template InputField: "boolean input" =
-  	 "boolean: "  <"label"> " = " "false" "\n"
-
-  completion template BuilderOption*: "(cursor)"
-  completion template BuilderOption*: "(meta)"
-  completion template BuilderOption: "(source)"
-  completion template BuilderOption: "(openeditor)"
-  completion template BuilderOption: "(persistent)"
-  completion template BuilderOption: "(realtime)"
-
-  completion template : SemanticRule =
-  	"pretty-print" ": "  <s> (blank)
-
-  completion template : SemanticRule =
-  	"pretty-print" ": "  <s> (blank)
-
-  completion template : SemanticRule =
-  	"override reconstruction" ": "  <s> (blank)
-
-  completion template : SemanticRule =
-  	"resugar" ": "  <s> (blank)
-
-  completion template : LanguageProperty =
-  	"unmanaged table" ": " <prefix> "*" (blank)
-
-  completion template : LanguageProperty =
-  	"line comment" ": " <prefix> (blank)
-
-  completion template : LanguageProperty =
-  	"block comment" ":\n\t" <prefix> " " <middle> " " <end> (blank)
-
-  completion template : LanguageProperty =
-  	"fences" ":\n\t" <f> " " <g> (blank)
-
-  completion template : LanguageProperty =
-  	"indent after" ":\n\t" <keyword> (blank)
-
-  completion template : LanguageProperty =
-    "name" ":\n\t" <Name> (blank)
-
-  completion template : LanguageProperty =
-    "url" ":\n\thttp://" <url> (blank)
-
-  completion template : LanguageProperty =
-    "id" ":\n\t" <id> (blank)
-
-  completion template : LanguageProperty =
-    "extends" ":\n\t" <Language> (blank)
-
-  completion template : LanguageProperty =
-    "extensions" ":\n\t" <ext> (blank)
-
-  completion template : LanguageProperty =
-    "start symbols" ":\n\t" <Start> (blank)
-
-  completion template : LanguageProperty =
-    "disambiguator" ":\n\t" <s> (blank)
-
-  completion template : LanguageProperty =
-    "description" ":\n\t" <description> (blank)
-
-  completion template : LanguageProperty =
-    "table" ":\n\t" <table> (blank)
-
-  completion template : LanguageProperty =
-    "table provider" ":\n\t" <provider> (blank)
-
-  completion template : SemanticRule =
-  	"reference" " _ : " <s> (blank)
-
-  completion template : SemanticRule =
-    "occurrence" " _ : " <s> (blank)
-
-  completion template : SemanticRule =
-    "hover" " _ : " <s> (blank)
-
-  completion template : SemanticRule =
-    "on save" ": " <s> (blank)
-
-  completion template : LanguageProperty =
-    "unicode flatten" " : " <true:TrueOrFalse> (blank)
-
-  completion template : TrueOrFalse =
-    "true"
-
-  completion template : TrueOrFalse =
-    "false"
\ No newline at end of file
+  completion trigger: "\."
+  completion trigger: ":"
+  completion trigger: "="
+  completion trigger: "(completion\s*template|start\s*symbols)\s*:(\s+|\n)"
+  completion trigger: "(completion\s*template|start\s*symbols)\s*:\s*[^\s]+\s*=\s+"
+
+
+completions Custom rules
+
+  completion template Import* : "ReservedName" =
+    <ModuleName:ModuleName>  "\n" (cursor) (blank)                       
+
+  completion template StrategoCall : "StrategoId" =
+    <StrategoId:StrategoId>                                               
+
+  completion template KeyCombination Key: "Shift" =
+    "Shift"                                     
+
+  completion template KeyCombination Key : "Alt" =
+    "Alt"                                  
+
+  completion template KeyCombination Key : "Ctrl" =
+    "Ctrl"                                      
+
+  completion template KeyCombination Key : "[A-Z]" =
+    <A>
+
+  completion template KeyCombination : "Shift + <Keys>" =
+    "Shift" " + " <Key:KeyCombination>                                     
+
+  completion template KeyCombination : "Alt + <Keys>" =
+    "Alt" " + " <Key:KeyCombination>                                  
+
+  completion template KeyCombination : "Ctrl + <Keys>" =
+    "Ctrl" " + " <Key:KeyCombination>                                      
+
+  completion template KeyCombination : "[A-Z] + <Keys>" =
+    <A> " + " <Key:KeyCombination>
+
+completions Generated from template definitions 
+
+//(customization: Section -> Section*, ...)
+
+  completion template Section : "builders " =
+    "builders\n\n\t" (cursor) (blank)                                                    
+  completion template Section : "refactorings " =
+    "refactorings\n\n\t" (cursor) (blank)                                            
+  completion template Section : "colorer " =
+    "colorer\n\n\t" (cursor) (blank)                                                      
+  completion template Section : "folding " =
+    "folding\n\n\t" (cursor) (blank)                                                      
+  completion template Section : "outliner " =
+    "outliner\n\n\t" (cursor) (blank)                                                    
+  completion template Section : "completions " =
+    "completions\n\n\t" (cursor) (blank)                                              
+  completion template Section : "language " =
+    "language\n\n\t" (cursor) (blank)                                                    
+  completion template Section : "references " =
+    "references\n\n\t" (cursor) (blank)                                                
+  completion template Section : "keybindings " =
+    "keybindings\n\n\t" (cursor) (blank)                                              
+  completion template RefactoringRule* : "pretty-print : StrategoId" =
+    "pretty-print : " <StrategoId:StrategoCall> (blank)          
+  completion template RefactoringRule* : "parenthesize : StrategoId" =
+    "parenthesize : " <StrategoId:StrategoCall> (blank)          
+  completion template RefactoringRule* : "override reconstruction : StrategoId" =
+    "override reconstruction : " <StrategoId:StrategoCall> (blank)  
+  completion template RefactoringRule* : "resugar : StrategoId" =
+    "resugar : " <StrategoId:StrategoCall> (blank)                    
+  completion template RefactoringRule* : "refactoring : STRING = StrategoId " =
+    "refactoring " <:SemanticNode> " : " <STRING:String> " = " <StrategoId:StrategoCall> " " <:BuilderOption> " " <:UIOption> (blank)  
+  completion template UIOption* : "shortcut : Key" =
+    "shortcut : " <Key:KeyCombination> (blank)                                     
+  completion template UIOption* : "shortcut : STRING" =
+    "shortcut : " <STRING:InteractionId> (blank)                                
+  completion template UIOption* : "input InputField" =
+    "input " <InputField:InputField> (blank)                                     
+  completion template InputField* : "identifier : STRING = STRING" =
+    "identifier : " <STRING:String> " = " <STRING:String> (blank)  
+  completion template InputField* : "identifier : STRING" =
+    "identifier : " <STRING:String> (blank)  
+  completion template InputField* : "text : STRING = STRING" =
+    "text : " <STRING:String> " = " <STRING:String> (blank)              
+  completion template InputField* : "text : STRING" =
+    "text : " <STRING:String> (blank)  
+  completion template InputField* : "boolean : STRING" =
+    "boolean : " <STRING:String> (blank)                                       
+  completion template InputField* : "boolean : STRING = true" =
+    "boolean : " <STRING:String> " = " <true:BooleanValue> (blank)      
+  completion template BooleanValue : "true" =
+    "true"                                                                               
+  completion template BooleanValue : "false" =
+    "false"                                                                             
+  completion template KeyBinding* : "Key = STRING" =
+    <Key:KeyCombination> " = " <STRING:String> (blank)                             
+  completion template BuilderRule* : "observer : StrategoId " =
+    "observer : " <StrategoId:StrategoCall> " " <:ObserverOption> (blank)  
+  completion template BuilderRule* : "provider : STRING" =
+    "provider : " <STRING:PropertyValue> (blank)                             
+  completion template BuilderRule* : "on save : StrategoId " =
+    "on save : " <StrategoId:StrategoCall> " " <:OnSaveAnno> (blank)     
+  completion template BuilderRule* : "builder : STRING = StrategoId " =
+    "builder " <:SemanticNode> " : " <STRING:String> " = " <StrategoId:StrategoCall> " " <:BuilderOption> (blank)  
+  completion template BuilderRule* : "builder caption : STRING" =
+    "builder caption : " <STRING:PropertyValue> (blank)               
+  completion template ObserverOption* : "(multifile)" =
+    "(multifile)"                                                               
+  completion template BuilderOption* : "(openeditor)" =
+    "(openeditor)"                                                              
+  completion template BuilderOption* : "(realtime)" =
+    "(realtime)"                                                                  
+  completion template BuilderOption* : "(persistent)" =
+    "(persistent)"                                                              
+  completion template BuilderOption* : "(meta)" =
+    "(meta)"                                                                          
+  completion template BuilderOption* : "(cursor)" =
+    "(cursor)"                                                                      
+  completion template BuilderOption* : "(source)" =
+    "(source)"                                                                      
+  completion template CompletionRule* : "completion trigger : STRING " =
+    "completion trigger : " <STRING:PropertyValue> " " <:OptCompletionAnno> (blank)  
+  completion template CompletionRule* : "completion proposer : StrategoId" =
+    "completion proposer : " <StrategoId:StrategoCall> (blank)  
+  completion template CompletionRule* : "completion keyword : STRING " =
+    "completion keyword : " <STRING:PropertyValue> " " <:OptCompletionAnno> (blank)  
+  completion template CompletionRule* : "completion template : STRING " =
+    "completion template " <:Sort> " : " <:CompletionPrefix> "\n\t" <STRING:CompletionPart> " " <:CompletionAnno> (blank)  
+  completion template CompletionPart : "(cursor)" =
+    "(cursor)"                                                                     
+  completion template CompletionAnno* : "(disabled)" =
+    "(disabled)"                                                                 
+  completion template CompletionAnno* : "(blank)" =
+    "(blank)"                                                                       
+  completion template CompletionAnno* : "(linked)" =
+    "(linked)"                                                                     
+  completion template ReferenceRule* : "reference Id : StrategoId" =
+    "reference " <Id:SemanticNode> " : " <StrategoId:StrategoCall> (blank)  
+  completion template ReferenceRule* : "hover Id : StrategoId" =
+    "hover " <Id:SemanticNode> " : " <StrategoId:StrategoCall> (blank)  
+  completion template ReferenceRule* : "occurrence Id : StrategoId" =
+    "occurrence " <Id:SemanticNode> " : " <StrategoId:StrategoCall> (blank)  
+  completion template ColorRule* : "environment Id : Id" =
+    "environment " <Id:ColorNode> " : " <Id:Attribute> (blank)               
+  completion template ColorRule* : "Id : Id" =
+    <Id:ColorNode> " : " <Id:Attribute> (blank)                                          
+  completion template ColorRule* : "environment Id : STRING = Id" =
+    "environment " <Id:ColorNode> " : " <STRING:String> " = " <Id:Attribute> (blank)  
+  completion template ColorRule* : "Id : STRING = Id" =
+    <Id:ColorNode> " : " <STRING:String> " = " <Id:Attribute> (blank)           
+  completion template Attribute : "_ " =
+    <_:Color> " " <:MaybeColor> " " <:Font>                                                   
+  completion template ColorNode : "token Id" =
+    "token " <Id:Id>                                                                    
+  completion template TokenKindName : "identifier" =
+    "identifier"                                                                  
+  completion template TokenKindName : "number" =
+    "number"                                                                          
+  completion template TokenKindName : "layout" =
+    "layout"                                                                          
+  completion template TokenKindName : "string" =
+    "string"                                                                          
+  completion template TokenKindName : "keyword" =
+    "keyword"                                                                        
+  completion template TokenKindName : "operator" =
+    "operator"                                                                      
+  completion template TokenKindName : "var" =
+    "var"                                                                                
+  completion template TokenKindName : "error" =
+    "error"                                                                            
+  completion template TokenKindName : "unknown" =
+    "unknown"                                                                        
+  completion template Font : "bold" =
+    "bold"                                                                                       
+  completion template Font : "italic" =
+    "italic"                                                                                   
+  completion template Font : "bold italic" =
+    "bold italic"                                                                         
+  completion template Font : "italic bold" =
+    "italic bold"                                                                         
+  completion template Color : "_" =
+    "_"                                                                                            
+  completion template Color : "_ _ _" =
+    <_:Int> " " <_:Int> " " <_:Int>                                                
+  completion template ColorRule* : "Id = Id" =
+    <Id:AttributeId> " = " <Id:Attribute> (blank)                                        
+  completion template FoldingRule* : "Id " =
+    <Id:Node> " " <:FoldingAnno> (blank)                                                   
+  completion template FoldingRule* : "all Id " =
+    "all " <Id:Node> " " <:FoldingAnno> (blank)                                        
+  completion template FoldingAnno* : "(disabled)" =
+    "(disabled)"                                                                    
+  completion template FoldingAnno* : "(folded)" =
+    "(folded)"                                                                        
+  completion template StrategoCall : "id.StrategoId" =
+    "id." <StrategoId:StrategoId>                                               
+  completion template LanguageProperty* : "name: STRING" =
+    "name: " <STRING:PropertyValue> (blank)                                  
+  completion template LanguageProperty* : "id: STRING" =
+    "id: " <STRING:PropertyValue> (blank)                                      
+  completion template LanguageProperty* : "extensions: " =
+    "extensions: " <:PropertyValues> (blank)                                 
+  completion template LanguageProperty* : "description: STRING" =
+    "description: " <STRING:PropertyValue> (blank)                    
+  completion template LanguageProperty* : "table: STRING" =
+    "table: " <STRING:PropertyValue> (blank)                                
+  completion template LanguageProperty* : "table provider: StrategoId" =
+    "table provider: " <StrategoId:StrategoCall> (blank)       
+  completion template LanguageProperty* : "start symbols: " =
+    "start symbols: " <:Sort> (blank)                                     
+  completion template LanguageProperty* : "start symbols: " =
+    "start symbols: " <:PropertyValues> (blank)                           
+  completion template LanguageProperty* : "url: URL" =
+    "url: " <URL:URL> (blank)                                                    
+  completion template LanguageProperty* : "extends: " =
+    "extends: " <:PropertyValues> (blank)                                       
+  completion template LanguageProperty* : "aliases: " =
+    "aliases: " <:PropertyValues> (blank)                                       
+  completion template LanguageProperty* : "unmanaged table: Id*" =
+    "unmanaged table: " <Id:Id> "*" (blank)                          
+  completion template LanguageProperty* : "disambiguator: StrategoId" =
+    "disambiguator: " <StrategoId:StrategoCall> (blank)         
+  completion template LanguageProperty* : "unicode flatten: true" =
+    "unicode flatten: " <true:TrueOrFalse> (blank)                  
+  completion template LanguageProperty* : "line comment: STRING" =
+    "line comment: " <STRING:PropertyValue> (blank)                  
+  completion template LanguageProperty* : "block comment: STRING STRING" =
+    "block comment: " <STRING  STRING:BlockCommentDef> (blank)  
+  completion template LanguageProperty* : "fences: " =
+    "fences: " <:FenceDef> (blank)                                               
+  completion template LanguageProperty* : "indent after: " =
+    "indent after: " <:IndentDef> (blank)                                  
+  completion template LanguageProperty* : "identifier lexical: STRING" =
+    "identifier lexical: " <STRING:PropertyValue> (blank)      
+  completion template BlockCommentDef* : "STRING STRING STRING" =
+    <STRING:PropertyValue> " " <STRING:PropertyValue> " " <STRING:PropertyValue>  
+  completion template BlockCommentDef* : "STRING STRING" =
+    <STRING:PropertyValue> " " <:NoContinuation> " " <STRING:PropertyValue>  
+  completion template FenceDef* : "STRING STRING" =
+    <STRING:PropertyValue> " " <STRING:PropertyValue>                               
+  completion template TrueOrFalse : "true" =
+    "true"                                                                                
+  completion template TrueOrFalse : "false" =
+    "false"                                                                              
+  completion template Sort* : "Id *" =
+    <Id:Id> " *"                                                                                 
+  completion template Sort* : "Id._" =
+    <Id:Sort> "._"                                                                               
+  completion template Constructor* : "_.Id" =
+    "_." <Id:ConstructorId>                                                               
+  completion template Node* : "Id.Id" =
+    <Id:Sort> "." <Id:ConstructorId>                                                            
+  completion template Module : "module ReservedName " =
+    "module " <ReservedName:ModuleName> "\n\n" <:Imports> " " <:Section> (blank)
+  completion template Imports : "imports ReservedName" =
+    "imports\n\t" <ReservedName:Import> (blank)                               
+  completion template Import* : "ReservedName [ Id ]" =
+    <ReservedName:ModuleName> " [ " <Id:Id> " ]"                                
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str	Thu Nov  1 15:17:23 2012	(r25656)
@@ -0,0 +1,121 @@
+module analyze
+
+imports
+  libstratego-sglr
+  libstratego-sdf
+  lib/editor-common.generated
+  include/EditorService
+
+strategies //ESV
+
+  record-all-esvs =
+    <readdir> ".";
+    list-loop(
+      if <isdir> <filemode> then
+        chdir;
+        record-all-esvs;
+        <chdir> ".."
+      else
+        try(record-esv)
+      end
+    )
+  
+  record-esv:
+    filename -> filename
+    where
+      <has-extension(|"es")> filename;
+      <open-import(
+      	abspath, 
+      	parse-esvlanguage-file, 
+      	alltd(record-keybinding); alltd(record-color-def)
+     )> filename
+
+  record-keybinding =
+  	?kb at KeyBinding(keyCombi, binding);
+  	rules(KeyBindingDeclaration : keyCombi -> kb)
+
+  record-color-def =
+  	?cdef at ColorDef(cname, attr);
+  	rules(ColorDefDeclaration : cname -> attr)
+
+
+strategies //SDF 
+	
+
+  record-all-sdfs =
+    <readdir> ".";
+    list-loop(
+      if <isdir> <filemode> then
+        chdir;
+        record-all-sdfs;
+        <chdir> ".."
+      else
+        try(record-sdf)
+      end
+    )
+
+  record-sdf:
+    filename -> filename
+    where
+      <has-extension(|"sdf")> filename;
+      <open-import(abspath, parse-sdf-module-file, alltd(record-prod))> filename
+
+  record-sdf:
+    filename -> filename
+    where
+      <has-extension(|"def")> filename;
+      <open-import(abspath, parse-sdf-definition-file, alltd(record-prod))> filename
+
+  record-prod:
+    renamed-module(x, renamings(y)) -> <id>
+    where
+      let record-sort = \x -> x with rules(SortDeclaration : x -> x)\
+      in
+        <all(try(?symbol(_, sort(<id>)); record-sort))> y
+      end
+
+  record-prod:
+    prod @ prod(lhs, sort, attrs) -> <id>
+    where
+      !sort;
+      try(?cf(<id>) + ?lex(<id>));
+      repeat(?label(_, <id>));
+      (?sort(x) + ?parameterized-sort(x, _))
+    with
+      rules(
+        SortDeclaration   :  x -> x
+        SortProductionLHS :+ x -> lhs
+      );
+      <try(record-constructor(|x))> attrs
+
+  record-constructor(|sort) =
+ 	oncetd( //"\"AddDynRule\""
+		?appl(unquoted("cons"), [fun(quoted(consname))]) <+
+		?cons(consname)
+	); 
+ 	x := <try(un-double-quote)> consname;
+    rules(
+      SortAndConstructorDeclaration:  (sort, x){} -> (sort, x){}
+    )
+ 	
+rules
+
+get-all-sorts =	
+      all-keys-SortDeclaration
+
+get-all-constructors =	
+      all-keys-SortAndConstructorDeclaration;
+      map(Snd); 
+      make-set
+
+get-all-constructors(|sort) =	
+      all-keys-SortAndConstructorDeclaration;
+       filter(?(sort, _); Snd); 
+       make-set
+
+
+strategies 
+	
+//Stratego TODO: record builders, refactoring and analysis rules?
+
+//ESV todo: store module names	
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/check.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/check.str	Thu Nov  1 15:17:23 2012	(r25656)
@@ -0,0 +1,71 @@
+module check
+
+imports
+  lib/editor-common.generated
+  include/EditorService
+  analyze
+
+strategies
+
+  constraint-error:
+    Sort(x) -> (x, $[Unknown sort [x]])
+    where
+      not(<SortDeclaration> x)
+
+  constraint-error:
+    Constructor(x) -> (x, $[Unknown constructor [x]])
+    where
+      not(get-all-constructors; fetch-elem(?x))
+
+  constraint-error:
+    SortAndConstructor(Sort(srt), Constructor(x)) -> (x, $[Unknown constructor [x] for sort [srt]])
+    where
+      not(get-all-constructors(|srt); fetch-elem(?x))
+      
+  constraint-error:
+    PlaceholderWithSort(_,x) -> (x, $[Unknown sort [x]])
+    where
+      not(<SortDeclaration> x)
+
+  constraint-error:
+    SemanticProvider(x) -> (x, $[Must be a generated .ctree or .jar file])
+    where
+      not(<string-ends-with(|".jar") + string-ends-with(|".ctree")> x)
+ 
+  constraint-error:
+  	Shortcut(kc at KeyCombination(keycombination)) -> (kc, $[Must be declared as keybinding in keybindings section.])
+	where
+		<not(KeyBindingDeclaration)> kc
+
+  constraint-error:
+    AttributeRef(x) -> (x, $[Unknown color reference [x]])
+    where
+      	not(<ColorDefDeclaration> x)
+
+
+	
+  constraint-warning:
+    CompletionTrigger(".", _) -> $[Trigger is a regular expression that matches any character. Use \. instead]
+
+  constraint-warning:
+    Refactoring(_, _, _, annos, _) -> (err-anno, $[the '[<origin-text <+ pp-esvlanguage-string> err-anno]' annotation is not used for refactorings])
+    where
+      [err-anno] := <filter(?OpenEditor() <+ ?Persistent()<+?RealTime())> annos
+
+  constraint-warning:
+    r at Refactoring(_, _, _, annos, _) -> (r, $['openeditor, persistent, realtime' annotations are not used for refactorings])
+    where
+      [_,_|_] := <filter(?OpenEditor() <+ ?Persistent()<+?RealTime())> annos
+
+  constraint-error:
+  	uidefs -> (uidefs, $[A refactoring can only have one (or zero) input with multiple fields])
+  	where
+  	  filter(?UserInput(_)); ?[_,_|_]
+
+  constraint-error:
+  	uidefs -> (uidefs, $[A refactoring can only have one (or zero) shortcuts])
+  	where
+  	  filter(?Shortcut(_)); ?[_,_|_]
+  
+  constraint-info = fail
+  

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str	Thu Nov  1 15:17:23 2012	(r25656)
@@ -0,0 +1,122 @@
+module complete
+
+imports
+  libstratego-sglr
+  libstratego-sdf
+  lib/editor-common.generated
+  include/EditorService
+  analyze
+
+strategies
+
+  editor-complete:
+    (Sort(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    where
+      proposals := <get-all-sorts>
+
+  editor-complete:
+    (PlaceholderWithSort(_,COMPLETION(_)), position, ast, path, project-path) -> proposals
+    where
+      proposals := <get-all-sorts>
+
+  editor-complete:
+    (Constructor(COMPLETION(_)), position, ast, path, project-path) -> ["_"|proposals]
+    where
+      //Sort + constructor
+      <oncetd(?SortAndConstructor(Sort(srt), Constructor(COMPLETION(_))))> ast;
+      proposals := <get-all-constructors(|srt)>
+ 
+  editor-complete:
+    (Constructor(COMPLETION(_)), position, ast, path, project-path) -> ["_"|proposals]
+    where
+      //Unknown Sort + constructor
+      <oncetd(
+      	?ConstructorOnly(Constructor(COMPLETION(_))) <+
+      	?NOCONTEXT(Constructor(COMPLETION(_)))
+      )> ast;
+      proposals := <get-all-constructors>
+      
+  editor-complete:
+    (KeyCombination(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    where
+      proposals := <
+      	all-keys-KeyBindingDeclaration;
+      	make-set;
+      	map(pp-esvlanguage-string)
+      >
+
+  editor-complete:
+    (AttributeRef(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    where
+      proposals := <
+      	all-keys-ColorDefDeclaration;
+      	make-set;
+      	map(!(<pp-esvlanguage-string>, <ColorDefDeclaration; pp-esvlanguage-string>))
+      >
+
+  editor-complete:
+    (_, position, ast, path, project-path) -> proposals
+    where
+      <oncetd(
+     	?CompletionTemplateEx([Sort(sort)],_,COMPLETION(""),_) <+
+     	?CompletionTemplateEx([Sort(sort)],_,[String(COMPLETION(""))],_)
+      )> ast;
+      lhs*      := <bagof-SortProductionLHS> sort;
+      lhs'*     := <topdown(repeat(remove-completion-irrelevant))> lhs*;
+      proposals := <make-set> <filter(to-completion-parts-top)> lhs'*
+
+
+
+rules //helper rules
+    	
+  to-completion-parts-top:
+    [lit(first) | tail] -> $[[trigger'] [rest']]
+    where
+      trigger  := [lit(first) | <take-while(?lit(<is-alpha>))> tail];
+      trigger' := <to-completion-parts> trigger;
+      rest     := <drop-while(?lit(<is-alpha>))> tail;
+      rest'    := <to-completion-parts> <separate-by(|lit(" "))> rest
+
+  to-completion-parts:
+    [lit(x) | tail] -> [ lits' | tail']
+    where
+      lits  := <map(?lit(<id>))> <take-while(?lit(_))>;
+      lits' := <escape> <concat-strings> <separate-by(|" ")> lits;
+      tail' := <to-completion-parts> <drop-while(?lit(_))> tail
+
+  to-completion-parts:
+    [sort(x) | tail] -> ["<", x, "> " | <to-completion-parts> tail]
+
+  to-completion-parts:
+    [iter-star(sort(x)) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
+
+  to-completion-parts:
+    [iter-star-sep(sort(x), _) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
+
+  to-completion-parts:
+    [iter(sort(x)) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
+
+  to-completion-parts:
+    [iter-sep(sort(x), _) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
+
+  to-completion-parts:
+    [opt(sort(x)) | tail] -> ["<", x, "> " | <to-completion-parts> tail]
+
+  to-completion-parts:
+    [] -> []
+
+  remove-completion-irrelevant:
+    parameterized-sort(x, _) -> sort(x)
+
+  remove-completion-irrelevant:
+    cf(x) -> x
+
+  remove-completion-irrelevant:
+    lex(x) -> x
+
+  remove-completion-irrelevant:
+    opt(layout()) -> lit(" ")
+
+//TODO: complete module and import names
+
+//TODO complete stratego calls
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str	Thu Nov  1 12:44:56 2012	(r25655)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/editorservice.str	Thu Nov  1 15:17:23 2012	(r25656)
@@ -5,11 +5,14 @@
 // TODO: check if there is _any_ provider for observer etc.
 
 imports
-  libstratego-lib
+  libstratego-lib  
   libstratego-sglr
   libstratego-sdf
   lib/editor-common.generated
   include/EditorService
+  check
+  analyze
+  complete
 
 rules
 	
@@ -20,7 +23,7 @@
   	  target := <KeyBindingDeclaration; ?KeyBinding(<id>, _)> selected
 
   editor-hover:
-  	(selected, position, ast, path, project-path) -> <try(origin-text)>target
+  	(selected, position, ast, path, project-path) -> <try(origin-text)> target
   	where
   	  <?KeyCombination(_)> selected;
   	  target := <KeyBindingDeclaration; ?KeyBinding(_, <id>)> selected
@@ -29,8 +32,8 @@
     (ast, path, project-path) -> (ast, error*, warning*, info*)
     with
       <chdir> project-path;
-      <record-all-sdfs> ".";
-      <record-all-esvs> ast;
+      record-all-sdfs;
+      record-all-esvs;
       error*   := <collect-all(constraint-error, conc)> ast;
       warning* := <collect-all(constraint-warning, conc)> ast;
       info* := <collect-all(constraint-info, conc)> ast
@@ -40,179 +43,4 @@
     where
       filename  := <guarantee-extension(|"aterm")> path
 
-  editor-complete:
-    (Sort(COMPLETION(_)), position, ast, path, project-path) -> proposals
-    where
-      proposals := <all-keys-SortDeclaration>
-
-  editor-complete:
-    (KeyCombination(COMPLETION(_)), position, ast, path, project-path) -> proposals
-    where
-      proposals := <
-      	all-keys-KeyBindingDeclaration;
-      	make-set;
-      	map(origin-text)
-      >
-
-  editor-complete:
-    (CompletionTemplateEx([Sort(sort)], COMPLETION(_), _, _), position, ast, path, project-path) -> proposals
-    where
-      lhs*      := <bagof-SortProductionLHS> sort;
-      lhs'*     := <topdown(repeat(remove-completion-irrelevant))> lhs*;
-      proposals := <make-set> <filter(to-completion-parts-top)> lhs'*
-
-  record-all-esvs =
-    <readdir> ".";
-    list-loop(
-      if <isdir> <filemode> then
-        chdir;
-        record-all-esvs;
-        <chdir> ".."
-      else
-        try(record-esv)
-      end
-    )
-  
-  record-esv:
-    filename -> filename
-    where
-      <has-extension(|"esv")> filename;
-      <open-import(abspath, parse-editorservice-file, alltd(record-keybinding))> filename
-
-  record-keybinding =
-  	?kb at KeyBinding(keyCombi, binding);
-  	rules(KeyBindingDeclaration : keyCombi -> kb)
-
-  record-all-sdfs =
-    <readdir> ".";
-    list-loop(
-      if <isdir> <filemode> then
-        chdir;
-        record-all-sdfs;
-        <chdir> ".."
-      else
-        try(record-sdf)
-      end
-    )
-
-  record-sdf:
-    filename -> filename
-    where
-      <has-extension(|"sdf")> filename;
-      <open-import(abspath, parse-sdf-module-file, alltd(record-prod))> filename
-
-  record-sdf:
-    filename -> filename
-    where
-      <has-extension(|"def")> filename;
-      <open-import(abspath, parse-sdf-definition-file, alltd(record-prod))> filename
-
-  record-prod:
-    renamed-module(x, renamings(y)) -> <id>
-    where
-      let record-sort = \x -> x with rules(SortDeclaration : x -> x)\
-      in
-        <all(try(?symbol(_, sort(<id>)); record-sort))> y
-      end
-
-  record-prod:
-    prod @ prod(lhs, sort, attrs) -> <id>
-    where
-      !sort;
-      try(?cf(<id>) + ?lex(<id>));
-      repeat(?label(_, <id>));
-      (?sort(x) + ?parameterized-sort(x, _))
-    with
-      rules(
-        SortDeclaration   :  x -> x
-        SortProductionLHS :+ x -> lhs
-      )
-
-  to-completion-parts:
-    [lit(x) | tail] -> ["\"", lits', "\" " | tail']
-    where
-      lits  := <map(?lit(<id>))> <take-while(?lit(_))>;
-      lits' := <escape> <concat-strings> <separate-by(|" ")> lits;
-      tail' := <to-completion-parts> <drop-while(?lit(_))> tail
-
-  to-completion-parts-top:
-    [lit(first) | tail] -> $[[trigger'] [rest']]
-    where
-      trigger  := [lit(first) | <take-while(?lit(<is-alpha>))> tail];
-      trigger' := <to-completion-parts> trigger;
-      rest     := <drop-while(?lit(<is-alpha>))> tail;
-      rest'    := <to-completion-parts> <separate-by(|lit(" "))> rest
-
-  to-completion-parts:
-    [sort(x) | tail] -> ["<", x, "> " | <to-completion-parts> tail]
-
-  to-completion-parts:
-    [iter-star(sort(x)) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
-
-  to-completion-parts:
-    [iter-star-sep(sort(x), _) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
-
-  to-completion-parts:
-    [iter(sort(x)) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
-
-  to-completion-parts:
-    [iter-sep(sort(x), _) | tail] -> ["<", x, "*> " | <to-completion-parts> tail]
-
-  to-completion-parts:
-    [opt(sort(x)) | tail] -> ["<", x, "> " | <to-completion-parts> tail]
-
-  to-completion-parts:
-    [] -> []
-
-  remove-completion-irrelevant:
-    parameterized-sort(x, _) -> sort(x)
-
-  remove-completion-irrelevant:
-    cf(x) -> x
-
-  remove-completion-irrelevant:
-    lex(x) -> x
-
-  remove-completion-irrelevant:
-    opt(layout()) -> lit(" ")
-
-  constraint-error:
-    Sort(x) -> (x, $[Unknown sort [x]])
-    where
-      not(<SortDeclaration> x)
-
-  constraint-error:
-    SemanticProvider(x) -> (x, $[Must be a generated .ctree or .jar file])
-    where
-      not(<string-ends-with(|".jar") + string-ends-with(|".ctree")> x)
- 
-  constraint-error:
-  	Shortcut(kc at KeyCombination(keycombination)) -> (kc, $[Must be declared as keybinding in keybindings section.])
-	where
-		<not(KeyBindingDeclaration)> kc
-	
-  constraint-warning:
-    CompletionTrigger(".", _) -> $[Trigger is a regular expression that matches any character. Use \. instead]
-
-  constraint-warning:
-    Refactoring(_, _, _, annos, _) -> (err-anno, $[the '[<try(origin-text)> err-anno]' annotation is not used for refactorings])
-    where
-      [err-anno] := <filter(?OpenEditor() <+ ?Persistent()<+?RealTime())> annos
-
-  constraint-warning:
-    r at Refactoring(_, _, _, annos, _) -> (r, $['openeditor, persistent, realtime' annotations are not used for refactorings])
-    where
-      [_,_|_] := <filter(?OpenEditor() <+ ?Persistent()<+?RealTime())> annos
-
-  constraint-error:
-  	uidefs -> (uidefs, $[A refactoring can only have one (or zero) input with multiple fields])
-  	where
-  	  filter(?UserInput(_)); ?[_,_|_]
-
-  constraint-error:
-  	uidefs -> (uidefs, $[A refactoring can only have one (or zero) shortcuts])
-  	where
-  	  filter(?Shortcut(_)); ?[_,_|_]
-  
-  constraint-info = fail
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf	Thu Nov  1 12:44:56 2012	(r25655)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf	Thu Nov  1 15:17:23 2012	(r25656)
@@ -7,19 +7,18 @@
   
   syntax
   
-    "builders" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Builders")}
+    "builders" <SectionName-LEX> <LAYOUT?-CF> <BuilderRule*-CF> -> <Section-CF> {cons("Builders")}
 
     "builders" -> <ReservedName-CF>
   
-    "analysis" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Builders"), deprecated("Use 'builders' instead")}
-
-    "analysis" -> <ReservedName-CF>
-
   context-free syntax
     
-    "observer" ":" StrategoCall ObserverOption*           -> SemanticRule {cons("SemanticObserver")}
-    "builder"  ":" String "=" StrategoCall BuilderOption* -> SemanticRule {cons("Builder")}
-    "builder" "caption" ":" PropertyValue                 -> SemanticRule {cons("BuilderCaption")}
+    "observer" ":" StrategoCall ObserverOption*                         -> BuilderRule {cons("SemanticObserver")}    
+    "provider" ":" PropertyValue                                        -> BuilderRule {cons("SemanticProvider")}
+    "on" "save" ":" StrategoCall OnSaveAnno                             -> BuilderRule {cons("OnSave")}
+    "builder"  ":" String "=" StrategoCall BuilderOption* -> BuilderRule {cons("Builder")}
+    %%"builder"  SemanticNode* ":" String "=" StrategoCall BuilderOption* -> BuilderRule {cons("Builder")}
+    "builder" "caption" ":" PropertyValue                               -> BuilderRule {cons("BuilderCaption")}
     
     "(multifile)"  -> ObserverOption {cons("MultiFile")}
     
@@ -28,4 +27,5 @@
     "(persistent)" -> BuilderOption {cons("Persistent")}
     "(meta)"       -> BuilderOption {cons("Meta")}
     "(cursor)"     -> BuilderOption {cons("Cursor")}
-    "(source)"     -> BuilderOption {cons("Source")}
\ No newline at end of file
+    "(source)"     -> BuilderOption {cons("Source")}
+        
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Thu Nov  1 12:44:56 2012	(r25655)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Thu Nov  1 15:17:23 2012	(r25656)
@@ -10,34 +10,22 @@
 
   syntax
 
-    "completions" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Completions")}
+    "completions" <SectionName-LEX> <LAYOUT?-CF> <CompletionRule*-CF> -> <Section-CF> {cons("Completions")}
 
     "completions" -> <ReservedName-CF>
 
   context-free syntax
 
-    "completion" "proposer" ":" StrategoCall -> SemanticRule {cons("CompletionProposer")}
+    %%"identifier" "lexical" ":" PropertyValue -> CompletionRule {cons("IdentifierLexical")}
 
-    "completion" "lexical" ":" PropertyValue -> SemanticRule {cons("IdentifierLexical"), deprecated("Use 'identifier lexical' instead")}
 
-    "identifier" "lexical" ":" PropertyValue -> SemanticRule {cons("IdentifierLexical")}
+    "completion" "trigger" ":" PropertyValue OptCompletionAnno -> CompletionRule {cons("CompletionTrigger")}
 
-    "completion" "keyword" ":" PropertyValue OptCompletionAnno -> SemanticRule {cons("CompletionKeyword")}
+    "completion" "proposer" ":" StrategoCall -> CompletionRule {cons("CompletionProposer")}
 
-    %% Deprecated: conflicts with content completion
-    "completion" "template" ":" Id CompletionPart+ OptCompletionAnno -> SemanticRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
+    "completion" "keyword" ":" PropertyValue OptCompletionAnno -> CompletionRule {cons("CompletionKeyword")}
 
-    %% Deprecated: replaced by CompletionTemplateEx
-    "completion" "template" ":" Sort "=" CompletionPart CompletionPart* OptCompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort"), avoid} %% deprecated("Move the sort before ':' and remove '='")
-
-    %% Used as content completion triggers
-    %% "completion" "template" PropertyValue CompletionPart* OptCompletionAnno -> SemanticRule {cons("CompletionTemplate"), recover, avoid}
-    "completion" "template" Sort* ":" PropertyValue CompletionPart* CompletionAnno* -> SemanticRule {cons("CompletionTemplateEx"), recover, avoid}
-
-    "completion" "trigger" ":" PropertyValue OptCompletionAnno -> SemanticRule {cons("CompletionTrigger")}
-
-    %% New completion template
-    "completion" "template" Sort* ":" CompletionPrefix CompletionPart+ CompletionAnno* -> SemanticRule {cons("CompletionTemplateEx")}
+    "completion" "template" Sort* ":" CompletionPrefix CompletionPart+ CompletionAnno* -> CompletionRule {cons("CompletionTemplateEx")}
 
                -> CompletionPrefix {cons("NoCompletionPrefix")}
     String "=" -> CompletionPrefix {cons("CompletionPrefix")}
@@ -61,7 +49,6 @@
     CompletionAnno -> OptCompletionAnno
 
     "(disabled)" -> CompletionAnno {cons("Disable")}
-    "(disable)"  -> CompletionAnno {cons("Disable"), deprecated("Use (disabled) instead")}
     "(blank)"    -> CompletionAnno {cons("Blank")}
     "(linked)"   -> CompletionAnno {cons("Linked")}
     "(blank)"    -> PropertyValue {reject}

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService.sdf	Thu Nov  1 12:44:56 2012	(r25655)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService.sdf	Thu Nov  1 15:17:23 2012	(r25656)
@@ -10,6 +10,7 @@
   CompletionsService
   BuildersService
   RefactoringsService
+  RecoveryRules
 
 hiddens
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/FoldingService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/FoldingService.sdf	Thu Nov  1 12:44:56 2012	(r25655)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/FoldingService.sdf	Thu Nov  1 15:17:23 2012	(r25656)
@@ -21,7 +21,6 @@
           Node FoldingAnno -> FoldingRule {cons("FoldRule")}
     "all" Node FoldingAnno -> FoldingRule {cons("FoldRuleAll")}
 
-    "(disable)"  -> FoldingAnno {cons("Disable"), deprecated("Use (disabled) instead")}
     "(disabled)" -> FoldingAnno {cons("Disable")}
     "(folded)"   -> FoldingAnno {cons("Folded")}
                  -> FoldingAnno {cons("None")}

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/RecoveryRules.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/RecoveryRules.sdf	Thu Nov  1 15:17:23 2012	(r25656)
@@ -0,0 +1,53 @@
+module RecoveryRules
+  
+exports
+  
+  context-free syntax %% Recover rules to help content completion
+  
+    "completion" "template" Sort* ":" CompletionPrefix COMPLETIONPREFIX CompletionAnno* -> CompletionRule {cons("CompletionTemplateEx"), completion}
+
+    COMPLETIONPREFIX -> KeyCombination{cons("KeyCombination"), completion}
+
+
+
+  syntax %% Rules for Deprecated Constructs
+
+    "analysis" <SectionName-LEX> <LAYOUT?-CF> <BuilderRule*-CF> -> <Section-CF> {cons("Builders"), deprecated("Use 'builders' instead")}
+
+    "analysis" -> <ReservedName-CF>
+
+  context-free syntax %% Rules for Deprecated Constructs
+
+    "provider" PropertyValue -> BuilderRule {cons("SemanticProvider"), deprecated("Use 'provider :'")}
+
+    "completion" "lexical" ":" PropertyValue -> CompletionRule {cons("IdentifierLexical"), deprecated("Use 'identifier lexical' instead")}
+
+    %% Deprecated: conflicts with content completion
+    "completion" "template" ":" Id CompletionPart+ OptCompletionAnno -> CompletionRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
+
+    %% Deprecated: replaced by CompletionTemplateEx
+    "completion" "template" ":" Sort "=" CompletionPart CompletionPart* OptCompletionAnno -> CompletionRule {cons("CompletionTemplateWithSort"), avoid, deprecated("Move the sort before ':' and remove '='")} %% deprecated("Move the sort before ':' and remove '='")
+
+    "(disable)" -> CompletionAnno {cons("Disable"), deprecated("Use (disabled) instead")}
+
+    "(disable)" -> FoldingAnno {cons("Disable"), deprecated("Use (disabled) instead")}
+
+    "pp-table" ":" StrategoCall -> RefactoringRule {cons("PPTable"), deprecated("use 'pretty-print' instead")}
+
+    "reference"  SemanticNode ":" StrategoCall StrategoCall -> ReferenceRule {cons("ReferenceHoverRule"), deprecated}
+    
+    RefactoringRule -> BuilderRule {deprecated("Refactoring rules must be defined in their own section in MyLang-Refactorings.esv")}
+
+
+
+  lexical syntax %%%%%% REMOVE THIS SECTION
+     
+    "|#Section|"          -> Section          {completion}
+    "|#ReservedName|"     -> ReservedName     {completion}
+                             -> "provider"      {recover, reject}
+                             
+    "|#KeyCombination|" -> KeyCombination{completion}
+
+    "|#Key|" -> Key{completion}
+
+    "completion123" -> COMPLETIONPREFIX

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/RefactoringsService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/RefactoringsService.sdf	Thu Nov  1 12:44:56 2012	(r25655)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/RefactoringsService.sdf	Thu Nov  1 15:17:23 2012	(r25656)
@@ -8,7 +8,7 @@
   
   syntax
   
-    "refactorings" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Refactorings")}
+    "refactorings" <SectionName-LEX> <LAYOUT?-CF> <RefactoringRule*-CF> -> <Section-CF> {cons("Refactorings")}
 
     "refactorings" -> <ReservedName-CF>
 
@@ -17,18 +17,16 @@
     "keybindings" -> <ReservedName-CF>
   
   context-free syntax
-  	
-  	"pp-table" ":" StrategoCall     -> SemanticRule {cons("PPTable"), deprecated("use 'pretty-print' instead")}
-  	"pretty-print" ":" StrategoCall -> SemanticRule {cons("PrettyPrint")}
- 	"parenthesize" ":" StrategoCall -> SemanticRule {cons("Parenthesize")}
- 	"override" "reconstruction" ":" StrategoCall -> SemanticRule {cons("OverrideReconstruction")}
- 	"resugar" ":" StrategoCall -> SemanticRule {cons("Resugar")}
+  
+    "pretty-print" ":" StrategoCall              -> RefactoringRule {cons("PrettyPrint")}
+    "parenthesize" ":" StrategoCall              -> RefactoringRule {cons("Parenthesize")}
+    "override" "reconstruction" ":" StrategoCall -> RefactoringRule {cons("OverrideReconstruction")}
+    "resugar" ":" StrategoCall                   -> RefactoringRule {cons("Resugar")}
 
-    "refactoring" SemanticNode* ":" String "=" StrategoCall BuilderOption* UIOption* 
-    								-> SemanticRule {cons("Refactoring")}
+    "refactoring" SemanticNode* ":" String "=" StrategoCall BuilderOption* UIOption*  -> RefactoringRule {cons("Refactoring")}
     
     "shortcut" ":" KeyCombination -> UIOption {cons("Shortcut")}
-    "shortcut" ":" InteractionId -> UIOption {cons("Shortcut")}
+    "shortcut" ":" InteractionId  -> UIOption {cons("Shortcut")}
     
     String -> InteractionId {cons("InteractionId")}
           
@@ -37,57 +35,38 @@
     %% identifier input field [= text field + validation] 
     "identifier" ":" String                  -> InputField {ast("IdInputField(<1>, \"\")")}
     "identifier" ":" String "=" String       -> InputField {cons("IdInputField")}
-    "identifier" ":" String "=" StrategoCall -> InputField {cons("IdInputField")}
+    %%"identifier" ":" String "=" StrategoCall -> InputField {cons("IdInputField")}
     
     %% text input field 
     "text" ":" String                  -> InputField {ast("TextInputField(<1>, \"\")")}
     "text" ":" String "=" String       -> InputField {cons("TextInputField")}
-    "text" ":" String "=" StrategoCall -> InputField {cons("TextInputField")}
+    %%"text" ":" String "=" StrategoCall -> InputField {cons("TextInputField")}
 
     %% boolean input field 
     "boolean" ":" String                  -> InputField {ast("BooleanInputField(<1>, FalseValue()")}
     "boolean" ":" String "=" BooleanValue -> InputField {cons("BooleanInputField"), prefer}
-    "boolean" ":" String "=" StrategoCall -> InputField {cons("BooleanInputField"), avoid}
+    %%"boolean" ":" String "=" StrategoCall -> InputField {cons("BooleanInputField"), avoid}
 
-     "true"  -> BooleanValue {cons("TrueValue")}
-     "false" ->  BooleanValue {cons("FalseValue")}
+    "true"  -> BooleanValue {cons("TrueValue")}
+    "false" ->  BooleanValue {cons("FalseValue")}
      
     %% choice input field 
     %% list input field
   
      %% Avoid ambiguities with semantic nodes
-     "pp-table"  -> SemanticNode {reject}
-     "pretty-print"  -> SemanticNode {reject}
-     "refactoring"  -> SemanticNode {reject}
+    "pp-table"      -> SemanticNode {reject}
+    "pretty-print"  -> SemanticNode {reject}
+    "refactoring"   -> SemanticNode {reject}
 
 context-free syntax
-	
-     %% Predefined Keybindings
+
+    %% Predefined Keybindings
     KeyCombination "=" String -> KeyBinding {cons("KeyBinding")} %% key binding (e.g., Shift + Alt + R = "org.eclipse.jdt.ui.edit.text.java.rename.element")
     {Key "+"}+                -> KeyCombination {cons("KeyCombination")}   %% key combination (e.g., 'Shift + Alt + R')
 
 lexical syntax
      
-     "Shift"  -> Key
-     "Alt"    -> Key
-     "Ctrl"   -> Key
-     [A-Z]    -> Key
-
-context-free syntax 
-	    
-    %%recover rules for completion
-    "shortcut" ":" Id -> UIOption {ast("Shortcut(KeyCombination([<1>]))"), completion, avoid}    
-    "keybindings"  Id KeyBinding* -> Section {ast("KeyBindings(\"\", [KeyBinding(KeyCombination([<1>]), \"\")])"), completion, avoid}
-    "refactorings" Id SemanticRule* -> Section {ast("Refactorings(\"\", [Refactoring([],None(), None(), [],[])])"), completion, avoid}
-
-    "refactoring" SemanticNode* ":" String "=" StrategoCall BuilderOption* "(" Id ")" BuilderOption* UIOption* -> 
-    SemanticRule {ast("Refactoring(<1>, <2>, <3>, [<5>], <7>)"), completion, avoid}
-    
-    "refactoring" SemanticNode* ":" String "=" StrategoCall BuilderOption* UIOption? Id UIOption? -> 
-    SemanticRule {ast("Refactoring(<1>, <2>, <3>, <4>, [<6>])"), completion, avoid}
-    
-    "input" InputField* Id InputField* -> UIOption {ast("UserInput([<2>])"), completion, avoid}
-    
-    -> "keybindings" {recover, reject}
-    -> "refactorings" {recover, reject}
-    -> "provider" {recover, reject}
+    "Shift"  -> Key
+    "Alt"    -> Key
+    "Ctrl"   -> Key
+    [A-Z]    -> Key
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/ReferencesService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/ReferencesService.sdf	Thu Nov  1 12:44:56 2012	(r25655)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/ReferencesService.sdf	Thu Nov  1 15:17:23 2012	(r25656)
@@ -7,19 +7,17 @@
 
   syntax
   
-    "references" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("References")}
+    "references" <SectionName-LEX> <LAYOUT?-CF> <ReferenceRule*-CF> -> <Section-CF> {cons("References")}
 
     "references" -> <ReservedName-CF>
 
   context-free syntax
   
-    "reference"  SemanticNode ":" StrategoCall StrategoCall -> SemanticRule {cons("ReferenceHoverRule"), deprecated}
+    "reference"  SemanticNode ":" StrategoCall -> ReferenceRule {cons("ReferenceRule")}
 
-    "reference"  SemanticNode ":" StrategoCall -> SemanticRule {cons("ReferenceRule")}
-
-    "hover"      SemanticNode ":" StrategoCall -> SemanticRule {cons("HoverRule")}
+    "hover"      SemanticNode ":" StrategoCall -> ReferenceRule {cons("HoverRule")}
   
-    "occurrence" SemanticNode ":" StrategoCall -> SemanticRule {cons("OccurrenceRule")}
+    "occurrence" SemanticNode ":" StrategoCall -> ReferenceRule {cons("OccurrenceRule")}
   
   context-free syntax
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/SemanticServices.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/SemanticServices.sdf	Thu Nov  1 12:44:56 2012	(r25655)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/SemanticServices.sdf	Thu Nov  1 15:17:23 2012	(r25656)
@@ -21,10 +21,6 @@
   context-free syntax
      
      Node -> SemanticNode
-    "provider"     PropertyValue -> SemanticRule {cons("SemanticProvider"), deprecated("Use 'provider :'")}
-    "provider" ":" PropertyValue -> SemanticRule {cons("SemanticProvider")}
-
-    "on" "save" ":" StrategoCall OnSaveAnno -> SemanticRule {cons("OnSave")}
 
              StrategoId -> StrategoCall {cons("Strategy")}
     "id" "." StrategoId -> StrategoCall {cons("Attribute")}

From m.dejonge at tudelft.nl  Thu Nov  1 16:24:53 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 15:24:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25657 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax
Message-ID: <20121101152453.81713108C02A@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 15:24:53 2012
New Revision: 25657
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25657&sc=1

Log:
Templates

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService.tmpl

Added: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService.tmpl
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService.tmpl	Thu Nov  1 15:24:53 2012	(r25657)
@@ -0,0 +1,322 @@
+%% Templates that were used to generate the completion templates in the EditorService-Completions.esv file.
+%% Not intended as a full language description since some .sdf details are not covered 
+templates
+
+  Section.Builders = <
+    builders
+    
+      <BuilderRule*>
+  >
+  Section.Refactorings = <
+    refactorings
+    
+      <RefactoringRule*>
+  >
+  Section.Colorer = <
+    colorer
+    
+      <ColorRule*>
+  >
+  Section.Folding = <
+    folding
+    
+      <FoldingRule*>
+  >
+  Section.Outliner = <
+    outliner
+    
+      <OutlineRule*>
+  >
+  Section.Completions = <
+    completions
+    
+      <CompletionRule*>
+  >
+  Section.Language = <
+    language
+    
+      <LanguageProperty*>
+  >
+  Section.References = <
+    references
+    
+      <ReferenceRule*>
+  >
+  Section.KeyBindings = <
+    keybindings
+    
+      <KeyBinding*>
+  >
+  
+  
+  RefactoringRule.PrettyPrint = <
+    pretty-print : <StrategoCall>
+  >
+  RefactoringRule.Parenthesize = <
+    parenthesize : <StrategoCall>
+  >
+  RefactoringRule.OverrideReconstruction = <
+    override reconstruction : <StrategoCall>
+  >
+  RefactoringRule.Resugar = <
+    resugar : <StrategoCall>
+  >
+  RefactoringRule.Refactoring = <
+    refactoring <SemanticNode*> : <String> = <StrategoCall> <BuilderOption*> <UIOption*>
+  >
+  UIOption.Shortcut = <
+    shortcut : <KeyCombination>
+  >
+  UIOption.Shortcut = <
+    shortcut : <InteractionId>
+  >
+  InteractionId.InteractionId = <<String>>
+  UIOption.UserInput = <
+    input <InputField+>
+  >
+  InputField.IdInputField = <
+    identifier : <String> = <String>
+  >
+  InputField.IdInputField = <
+    identifier : <String>
+  >
+  InputField.TextInputField = <
+    text : <String> = <String>
+  >
+  InputField.TextInputField = <
+    text : <String>
+  >
+  InputField = <
+    boolean : <String>
+  > 
+  InputField.BooleanInputField = <
+    boolean : <String> = <BooleanValue>
+  > 
+  BooleanValue.TrueValue = <true>
+  BooleanValue.FalseValue = <false>
+  KeyBinding.KeyBinding = <
+    <KeyCombination> = <String>
+  >
+  KeyCombination.KeyCombination = <<Key+; separator="+">>
+  
+  
+  BuilderRule.SemanticObserver = <
+    observer : <StrategoCall> <ObserverOption*>
+  >
+  BuilderRule.SemanticProvider = <
+    provider : <PropertyValue>
+  >
+  BuilderRule.OnSave = <
+    on save : <StrategoCall> <OnSaveAnno>
+  >
+  BuilderRule.Builder = <
+    builder <SemanticNode*> : <String> = <StrategoCall> <BuilderOption*>
+  >
+  BuilderRule.BuilderCaption = <
+    builder caption : <PropertyValue>
+  >
+  ObserverOption.MultiFile = <(multifile)>
+  BuilderOption.OpenEditor = <(openeditor)>
+  BuilderOption.RealTime = <(realtime)>
+  BuilderOption.Persistent = <(persistent)>
+  BuilderOption.Meta = <(meta)>
+  BuilderOption.Cursor = <(cursor)>
+  BuilderOption.Source = <(source)>
+
+
+
+  CompletionRule.CompletionTrigger = <
+    completion trigger : <PropertyValue> <OptCompletionAnno>
+  >
+  CompletionRule.CompletionProposer = <
+    completion proposer : <StrategoCall>
+  >
+  CompletionRule.CompletionKeyword = <
+    completion keyword : <PropertyValue> <OptCompletionAnno>
+  >
+  CompletionRule.CompletionTemplateEx = <
+    completion template <Sort*> : <CompletionPrefix> 
+      <CompletionPart+> <CompletionAnno*>
+  >
+  CompletionPrefix.NoCompletionPrefix = <>
+  CompletionPrefix.CompletionPrefix = <<String>>
+  CompletionPart = <<String>>
+  CompletionPart.Placeholder = <<Placeholder>>
+  CompletionPart.Cursor = <(cursor)>
+  OptCompletionAnno.None = <>
+  OptCompletionAnno = <<CompletionAnno>>
+  CompletionAnno.Disable = <(disabled)>
+  CompletionAnno.Blank = <(blank)>
+  CompletionAnno.Linked = <(linked)>
+
+
+
+  ReferenceRule.ReferenceRule = <
+    reference <SemanticNode> : <StrategoCall>
+  >
+  ReferenceRule.HoverRule = <
+    hover <SemanticNode> : <StrategoCall>
+  >
+  ReferenceRule.OccurrenceRule = <
+    occurrence <SemanticNode> : <StrategoCall>
+  >
+
+
+
+  ColorRule.ColorRuleAll = <
+    environment <ColorNode> : <Attribute>
+  >
+  ColorRule.ColorRule = <
+    <ColorNode> : <Attribute>
+  >
+  ColorRule.ColorRuleAllNamed = <
+    environment <ColorNode> : <String> = <Attribute>
+  >
+  ColorRule.ColorRuleNamed = <
+    <ColorNode> : <String> = <Attribute>
+  >
+  Attribute.Attribute = <<Color> <MaybeColor> <Font>>
+  Attribute.AttributeRef = <<AttributeId>>
+  ColorNode = <<Node>>
+  ColorNode.Token = <<TokenKindName>>
+  ColorNode.Literal = <token <Id>>
+  TokenKindName.TK_IDENTIFIER = <identifier>
+  TokenKindName.TK_NUMBER = <number>
+  TokenKindName.TK_LAYOUT = <layout>
+  TokenKindName.TK_STRING = <string>
+  TokenKindName.TK_KEYWORD = <keyword>
+  TokenKindName.TK_OPERATOR = <operator>
+  TokenKindName.TK_VAR = <var>
+  TokenKindName.TK_ERROR = <error>
+  TokenKindName.TK_UNKNOWN = <unknown>
+  Font.NORMAL = <>
+  Font.BOLD = <bold>
+  Font.ITALIC = <italic>
+  Font.BOLD_ITALIC = <bold italic>
+  Font.BOLD_ITALIC = <italic bold>
+  Color.ColorDefault = <_>
+  Color.ColorRGB = <<Int> <Int> <Int>>
+  NoColor.NoColor = <>
+  MaybeColor = <<Color>>
+  MaybeColor = <<NoColor>>
+  ColorRule.ColorDef = <
+    <AttributeId> = <Attribute>
+  >
+  AttributeId = <<Id>>
+  AttributeId = <<String>>
+
+
+
+  OutlineRule.OutlineRule = <
+    <Node>
+  >
+  FoldingRule.FoldRule = <
+    <Node> <FoldingAnno>
+  >
+  FoldingRule.FoldRuleAll = <
+    all <Node> <FoldingAnno>
+  >
+  FoldingAnno.Disable = <(disabled)>
+  FoldingAnno.Folded = <(folded)>
+  FoldingAnno.None = <>
+
+
+  SemanticNode = <<Node>>
+  StrategoCall.Strategy = <<StrategoId>>
+  StrategoCall.Attribute = <id.<StrategoId>>
+  OnSaveAnno.None = <>
+  PropertyValues.Values = <<PropertyValue*; separator=",">>
+  PropertyValue = <<String>>
+
+
+  LanguageProperty.LanguageName = <
+    name: <PropertyValue>
+  >
+  LanguageProperty.LanguageId = <
+    id: <PropertyValue>
+  >
+  LanguageProperty.Extensions = <
+    extensions: <PropertyValues>
+  >
+  LanguageProperty.Description = <
+    description: <PropertyValue>
+  >
+  LanguageProperty.Table = <
+    table: <PropertyValue>
+  >
+  LanguageProperty.TableProvider = <
+    table provider: <StrategoCall>
+  >
+  LanguageProperty.StartSymbols = <
+    start symbols: <Sort*>
+  >
+  LanguageProperty.StartSymbols = <
+    start symbols: <PropertyValues>
+  >
+  LanguageProperty.URL = <
+    url: <URL>
+  >
+  LanguageProperty.Extends = <
+    extends: <PropertyValues>
+  >
+  LanguageProperty.Aliases = <
+    aliases: <PropertyValues>
+  >
+  LanguageProperty.UnmanagedTablePrefix = <
+    unmanaged table: <Id>*
+  >
+  LanguageProperty.Disambiguator = <
+    disambiguator: <StrategoCall>
+  >
+  LanguageProperty.FlattenUnicode = <
+    unicode flatten: <TrueOrFalse>
+  >
+  LanguageProperty.LineCommentPrefix = <
+    line comment: <PropertyValue>
+  >
+  LanguageProperty.BlockCommentDefs = <
+    block comment: <BlockCommentDef>
+  >
+  LanguageProperty.FenceDefs = <
+    fences: <FenceDef*>
+  >
+  LanguageProperty.IndentDefs = <
+    indent after: <IndentDef*>
+  >
+  LanguageProperty.IdentifierLexical = <
+    identifier lexical: <PropertyValue>
+  >
+
+
+  BlockCommentDef.BlockCommentDef = <<PropertyValue> <PropertyValue> <PropertyValue>>
+  BlockCommentDef.BlockCommentDef = <<PropertyValue> <NoContinuation> <PropertyValue>>
+  NoContinuation.NoContinuation = <>
+  FenceDef.FenceDef = <<PropertyValue> <PropertyValue>>
+  IndentDef.IndentDef = <<PropertyValue>>
+
+  TrueOrFalse.True = <true>
+  TrueOrFalse.False = <false>
+
+  Sort.Sort = <<Id>>
+  Sort.ListSort = <<Id> *>
+  String.String = <<STRING>>
+  Sort = <<Sort>._>
+  Constructor.ConstructorOnly = <_.<ConstructorId>>
+  ConstructorId.Constructor = <<Id>>
+  Node = <<Sort>>
+  Node = <<Constructor>>
+  Node.SortAndConstructor = <<Sort>.<ConstructorId>>
+  Node = <<ReservedName>>
+  ModuleName = <<ReservedName>> 
+  Module.Module = <
+    module <ModuleName>  
+       
+    <Imports> <Section*>
+  >
+  Imports.Imports = <
+    imports 
+      <Import+>
+  >
+  Imports.NoImports = <>
+  Import.Import = <<ModuleName>>
+  Import.ImportRenamed = <<ModuleName> [ <Id> ]>
\ No newline at end of file

From m.dejonge at tudelft.nl  Thu Nov  1 16:40:38 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 15:40:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25658 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax
Message-ID: <20121101154038.ECBD92B8019@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 15:40:37 2012
New Revision: 25658
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25658&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Keywords.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Keywords.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Keywords.sdf	Thu Nov  1 15:24:53 2012	(r25657)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Keywords.sdf	Thu Nov  1 15:40:37 2012	(r25658)
@@ -11,6 +11,7 @@
   context-free syntax
     Constructor                 -> Attribute {prefer, cons("Constructor")}
     "recover"                   -> Attribute {prefer, ast("term(default(fun(unquoted(\"recover\"))))")}
+    "completion"                -> Attribute {prefer, ast("term(default(fun(unquoted(\"completion\"))))")}
     "incremental"               -> Attribute {prefer, ast("term(default(fun(unquoted(\"incremental\"))))")}
     "deprecated"                -> Attribute {prefer, ast("term(default(fun(unquoted(\"deprecated\"))))")}
     "deprecated" "(" StrCon ")" -> Attribute {prefer, ast("term(default(appl(unquoted(\"deprecated\"), [fun(quoted(<1>))])))")}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.sdf	Thu Nov  1 15:24:53 2012	(r25657)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.sdf	Thu Nov  1 15:40:37 2012	(r25658)
@@ -12,4 +12,8 @@
 
   %% HACK
   context-free syntax
-    Group "." -> Group {non-assoc,cons("non-transitive")}
\ No newline at end of file
+    Group "." -> Group {non-assoc,cons("non-transitive")}
+    
+  %% Completion Rules
+  lexical syntax
+    "completion123"                          -> Sort %%{cons("Completion")}

From m.dejonge at tudelft.nl  Thu Nov  1 16:50:03 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 15:50:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25659 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor
Message-ID: <20121101155003.64960108C054@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 15:50:03 2012
New Revision: 25659
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25659&sc=1

Log:


Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Refactorings.esv
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv	Thu Nov  1 15:40:37 2012	(r25658)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv	Thu Nov  1 15:50:03 2012	(r25659)
@@ -34,21 +34,3 @@
   builder : "PP Stratego String" =
     pp-builder (source) (openeditor) (meta) 
     
-refactorings 
-   
-  pretty-print: pp-stratego-string
-   
-  refactoring Id: "Rename" = rename-refactoring
-  shortcut: "org.eclipse.jdt.ui.edit.text.java.rename.element"
-  input
-    identifier : "New Name"
-  	
-  // UNDONE: experimental formatting
-  // refactoring: "Pretty-Print (Warning: Looses Comments in Selection!)" = format-refactoring (source) 
-  // shortcut: "org.eclipse.jdt.ui.edit.text.java.format"
-  
-  refactoring: "Remove debug" = remove-debug-refactoring
-
-  refactoring: "Inline" = inline-refactoring
-
-  refactoring: "Extract" = extract-refactoring (meta)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Refactorings.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Refactorings.esv	Thu Nov  1 15:50:03 2012	(r25659)
@@ -0,0 +1,24 @@
+module Stratego-Sugar-Refactorings
+
+imports Stratego-Sugar-Refactorings.generated
+
+refactorings 
+   
+  pretty-print: pp-stratego-string
+   
+  refactoring Id: "Rename" = rename-refactoring
+  shortcut: "org.eclipse.jdt.ui.edit.text.java.rename.element"
+  input
+    boolean: "label" = false
+    
+    identifier : "New Name"
+    
+  // UNDONE: experimental formatting
+  // refactoring: "Pretty-Print (Warning: Looses Comments in Selection!)" = format-refactoring (source) 
+  // shortcut: "org.eclipse.jdt.ui.edit.text.java.format"
+  
+  refactoring: "Remove debug" = remove-debug-refactoring
+
+  refactoring: "Inline" = inline-refactoring
+
+  refactoring: "Extract" = extract-refactoring (meta)

From m.dejonge at tudelft.nl  Thu Nov  1 16:56:38 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 15:56:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25660 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans
Message-ID: <20121101155638.168E47F801E@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 15:56:37 2012
New Revision: 25660
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25660&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str	Thu Nov  1 15:50:03 2012	(r25659)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str	Thu Nov  1 15:56:37 2012	(r25660)
@@ -23,10 +23,10 @@
   record-esv:
     filename -> filename
     where
-      <has-extension(|"es")> filename;
+      <has-extension(|"esv")> filename;
       <open-import(
       	abspath, 
-      	parse-esvlanguage-file, 
+      	parse-editorservice-file, 
       	alltd(record-keybinding); alltd(record-color-def)
      )> filename
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/check.str	Thu Nov  1 15:50:03 2012	(r25659)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/check.str	Thu Nov  1 15:56:37 2012	(r25660)
@@ -48,7 +48,7 @@
     CompletionTrigger(".", _) -> $[Trigger is a regular expression that matches any character. Use \. instead]
 
   constraint-warning:
-    Refactoring(_, _, _, annos, _) -> (err-anno, $[the '[<origin-text <+ pp-esvlanguage-string> err-anno]' annotation is not used for refactorings])
+    Refactoring(_, _, _, annos, _) -> (err-anno, $[the '[<origin-text <+ pp-editorservice-string> err-anno]' annotation is not used for refactorings])
     where
       [err-anno] := <filter(?OpenEditor() <+ ?Persistent()<+?RealTime())> annos
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str	Thu Nov  1 15:50:03 2012	(r25659)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str	Thu Nov  1 15:56:37 2012	(r25660)
@@ -42,7 +42,7 @@
       proposals := <
       	all-keys-KeyBindingDeclaration;
       	make-set;
-      	map(pp-esvlanguage-string)
+      	map(pp-editorservice-string)
       >
 
   editor-complete:
@@ -51,7 +51,7 @@
       proposals := <
       	all-keys-ColorDefDeclaration;
       	make-set;
-      	map(!(<pp-esvlanguage-string>, <ColorDefDeclaration; pp-esvlanguage-string>))
+      	map(!(<pp-editorservice-string>, <ColorDefDeclaration; pp-editorservice-string>))
       >
 
   editor-complete:

From m.dejonge at tudelft.nl  Thu Nov  1 17:46:22 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 16:46:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25661 -
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive
Message-ID: <20121101164622.CF323CC1C5@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 16:46:22 2012
New Revision: 25661
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25661&sc=1

Log:
added:
- COMPLETIONPREFIX production
- lexical sort productions

Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/completion-sections.astr

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/completion-sections.astr
==============================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/completion-sections.astr	Thu Nov  1 15:56:37 2012	(r25660)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/completion-sections.astr	Thu Nov  1 16:46:22 2012	(r25661)
@@ -2,27 +2,27 @@
 
 imports
 
-
 rules //extend grammar with completion helper rules for syntactic completion templates
 
   generate-sort-completion-rules:
     ast -> ast'
     where
-      completion-prods := <create-sort-completion-rules> ast;
+      completion-prods := 
+        [<completion-prefix-production>|<create-sort-completion-rules> ast];
       ast' := <try(oncetd(add-lexical-prods(|completion-prods)))> ast
         
   add-lexical-prods(|more-prods):
     lexical-syntax(prods) -> lexical-syntax(<conc> (prods, more-prods))
 
   create-sort-completion-rules =
-    collect-all(?context-free-syntax(_) <+ ?syntax(_));
+    collect-all(?context-free-syntax(_) <+ ?syntax(_) <+ ?lexical-syntax(_));
     collect-all(prod-to-sort);
     map(create-sort-completion-rule)
         
   prod-to-sort: 
     prod(lhs, rhs, _) -> sortname{}
     where
-      <fetch-elem(?lit(_))> lhs;
+      <fetch-elem(?lit(_) <+ ?iter-sep(_, _) <+ ?iter-star-sep(_, _))> lhs;
       <oncetd(?sort(sortname))> rhs 
     
   create-sort-completion-rule:
@@ -32,6 +32,13 @@
     , attrs([term(default(fun(unquoted("completion"))))])
     )  
 
+  completion-prefix-production =
+    !prod(
+      [lit($["completion123"])]
+    , sort("COMPLETIONPREFIX")
+    , attrs([term(default(fun(unquoted("completion"))))])
+    )
+
 
 rules //extend grammar with completion rules for semantic completions
 

From m.dejonge at tudelft.nl  Thu Nov  1 17:58:58 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 16:58:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25662 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/lib
Message-ID: <20121101165858.0AB82CC16A@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 16:58:57 2012
New Revision: 25662
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25662&sc=1

Log:
- COMPLETIONPREFIX rule
- more completion sort rules

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
==============================================================================
Binary file (source and/or target). No diff available.

From gabrielkonat at gmail.com  Thu Nov  1 19:26:24 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Thu, 01 Nov 2012 18:26:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25663 - in
	spoofax-contrib/index-examples: entity-with-aspects
	entity-with-aspects/lib entity-with-aspects/trans
	index-libraries/lib
Message-ID: <20121101182624.AE56E108C020@mx3.tudelft.nl>

Author: gkonat
Date: Thu Nov  1 18:26:24 2012
New Revision: 25663
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25663&sc=1

Log:
Added parallel/sequential analyses time measuring.

Modified:
   spoofax-contrib/index-examples/entity-with-aspects/   (props changed)
   spoofax-contrib/index-examples/entity-with-aspects/lib/editor-common.generated.str
   spoofax-contrib/index-examples/entity-with-aspects/trans/entitywithaspects.str
   spoofax-contrib/index-examples/entity-with-aspects/trans/generate-test.str
   spoofax-contrib/index-examples/entity-with-aspects/trans/splitter.str
   spoofax-contrib/index-examples/index-libraries/lib/analysis-library-internal.str
   spoofax-contrib/index-examples/index-libraries/lib/analysis-library.str

Modified: spoofax-contrib/index-examples/entity-with-aspects/lib/editor-common.generated.str
==============================================================================
--- spoofax-contrib/index-examples/entity-with-aspects/lib/editor-common.generated.str	Thu Nov  1 16:58:57 2012	(r25662)
+++ spoofax-contrib/index-examples/entity-with-aspects/lib/editor-common.generated.str	Thu Nov  1 18:26:24 2012	(r25663)
@@ -135,8 +135,13 @@
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
 
+  origin-language-description =
+    prim("SSL_EXT_languagedescription", <id>)
+
   origin-language =
-    prim("SSL_EXT_origin_language", <id>)
+    origin-file; 
+    origin-language-description;
+    Fst
   
   origin-surrounding-comments =
     prim("SSL_EXT_origin_surrounding_comments", "EntityWithAspects", <id>)
@@ -152,6 +157,13 @@
   origin-track-forced(s) =
     ![<id>]; all(s); ?[<id>]
 
+  origin-relative-path:
+    trm -> rel-path
+    where
+      full-path := <origin-file> trm;
+      len-project-prefix := <project-path; string-length; inc>;
+      rel-path := <string-as-chars(drop(|len-project-prefix))> full-path
+      
 strategies
 
   desugar-position(desugar|ast):

Modified: spoofax-contrib/index-examples/entity-with-aspects/trans/entitywithaspects.str
==============================================================================
--- spoofax-contrib/index-examples/entity-with-aspects/trans/entitywithaspects.str	Thu Nov  1 16:58:57 2012	(r25662)
+++ spoofax-contrib/index-examples/entity-with-aspects/trans/entitywithaspects.str	Thu Nov  1 18:26:24 2012	(r25663)
@@ -38,6 +38,7 @@
   editor-analyze:
     (ast, path, project-path) -> (ast', errors, warnings, notes)
     with
+      <debug(!"editor-analyze one: ")> path;
       editor-init;
       (ast', errors, warnings, notes, filesToAnalyze) := <analyze> (ast, path, project-path);
       <try(editor-queue-analysis)> <remove-all(?path)> filesToAnalyze
@@ -46,23 +47,24 @@
   editor-analyze:
     files -> None()
     where
-      not(is-tuple)
+      not(is-tuple);
+      debug(!"editor-analyze list: ")
     with
     	index-setup(|<language>, [<project-path>], ".");
-      disable-commit-and-compile // Disable compilation during analysis.
-    with
+      //disable-commit-and-compile // Disable compilation during analysis.
+    //with
       editor-queue-analysis
-    with
+    //with
       // Enable and trigger compilation after all files have been analysed.
-      <enable-commit-and-compile> <language>;
-      <trigger-commit-and-compile> <language>
+      //<enable-commit-and-compile> <language>;
+      //<trigger-commit-and-compile> <language>
       
   // Called when current file is saved.
   editor-save:
     (_, _, _, _, _) -> None()
-    with
-      index-setup(|<language>, [<project-path>], ".");
-      <trigger-commit-and-compile> <language>
+    //with
+      //index-setup(|<language>, [<project-path>], ".");
+      //<trigger-commit-and-compile> <language>
 
 rules // Editor services
   
@@ -168,10 +170,23 @@
   
   // Queue parallel analysis for given list of files.
   editor-queue-analysis = 
-    not(?[]); queue-strategy(|"editor-parallel-analyze", "Analyzing files")
+    not(?[]); queue-strategy(|"editor-sequential-analyze", "Analyzing files") 
       
   // Executes parallel analysis using the index library.
   editor-parallel-analyze:
-    files -> None()
-    with
-      index-parallel-analyze-files(analyze)
\ No newline at end of file
+  	files -> None()
+  	with
+  		before := <times>;
+      <index-parallel-analyze-files(analyze)> files;
+      after := <times>;
+      <debug(!"Time taken: ")> <times-to-seconds> <diff-times> (after, before)
+    
+  // Executes sequential analysis using the index library.
+  editor-sequential-analyze:
+  	files -> None()
+  	with
+      before := <times>;
+      <index-sequential-analyze-files(analyze)> files;
+      after := <times>;
+      <debug(!"Time taken: ")> <times-to-seconds> <diff-times> (after, before)
+    
\ No newline at end of file

Modified: spoofax-contrib/index-examples/entity-with-aspects/trans/generate-test.str
==============================================================================
--- spoofax-contrib/index-examples/entity-with-aspects/trans/generate-test.str	Thu Nov  1 16:58:57 2012	(r25662)
+++ spoofax-contrib/index-examples/entity-with-aspects/trans/generate-test.str	Thu Nov  1 18:26:24 2012	(r25663)
@@ -16,19 +16,20 @@
   testgen-internal-file = !"/.internal/testgen"
   testgen-module-name = !"TestGen"
   
-  testgen-num-files = !100
+  testgen-num-files-per-group = !30
+  testgen-num-groups = !3
   
-  testgen-min-entities = !1
+  testgen-min-entities = !3
   testgen-max-entities = !5
   
-  testgen-min-properties = !5
-  testgen-max-properties = !15
+  testgen-min-properties = !1
+  testgen-max-properties = !5
   
-  testgen-min-functions = !3
-  testgen-max-functions = !10
+  testgen-min-functions = !1
+  testgen-max-functions = !5
   
-  testgen-min-statements = !5
-  testgen-max-statements = !15
+  testgen-min-statements = !3
+  testgen-max-statements = !10
   
   testgen-min-aspects = !1
   testgen-max-aspects = !3
@@ -68,16 +69,13 @@
     with
       <index-set-current-file> file;
       
-      // Add Unresolved annotations, record globals
-      (Some(ast2), edefs) := <analyze-defs> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
+      (Some(ast2), edefs) := <analyze-defs> Some(ast);
       defs := <map(Snd)> edefs;
       <index-add-all(|file)> defs;
 
-      // Gather all data for each definition.
-      ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2; // Parent pointers needed.
+      ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2;
       data := <origin-track-forced(analyze-tree-data)> ast3;
-      
-      // Resolve all references in gathered data.
+
       (data2, _) := <analyze-uses> data;
       <index-add-all(|file)> data2
   
@@ -96,11 +94,17 @@
   testgen:
   	(selected, position, ast, path, project-path) -> None()
   	with
-  	  index-clear; // Clear index so definitions from the index are not chosen for code generation.
-  		files := <map(\n -> $[[project-path]/testgen/test_[n].ewa]\)> <range> <testgen-num-files>;
-  		<map(testgen-file)> <reverse> files;
-  		index-clear  // Clean index to avoid duplicate definitions created during code generation.
+  		groups := <map(\n -> (project-path, n)\)> <range> <testgen-num-groups>;
+  		<map(testgen-group)> groups;
+  		index-clear
   
+  testgen-group:
+    (project-path, group) -> None()
+    with
+      index-clear;
+      files := <map(\n -> $[[project-path]/testgen/test_[group]_[n].ewa]\)> <range> <testgen-num-files-per-group>;
+      <map(testgen-file)> <reverse> files
+      
   testgen-file:
   	file -> None()
   	with

Modified: spoofax-contrib/index-examples/entity-with-aspects/trans/splitter.str
==============================================================================
--- spoofax-contrib/index-examples/entity-with-aspects/trans/splitter.str	Thu Nov  1 16:58:57 2012	(r25662)
+++ spoofax-contrib/index-examples/entity-with-aspects/trans/splitter.str	Thu Nov  1 18:26:24 2012	(r25663)
@@ -6,7 +6,7 @@
  
 rules
   
-  index-split = id
+  index-split = fail
   index-is-toplevel = ?Entity(_, _)
   index-is-qualifier = ?Module(_, _, _)
   index-qualifier-subelements = ?Module(_, _, <id>)

Modified: spoofax-contrib/index-examples/index-libraries/lib/analysis-library-internal.str
==============================================================================
--- spoofax-contrib/index-examples/index-libraries/lib/analysis-library-internal.str	Thu Nov  1 16:58:57 2012	(r25662)
+++ spoofax-contrib/index-examples/index-libraries/lib/analysis-library-internal.str	Thu Nov  1 18:26:24 2012	(r25663)
@@ -76,8 +76,8 @@
         (added, removed) := ([], []);
         filesToAnalyze := []
       end
-    with
-      <list-loop(analyze-top-store-ast(|full-path))> astFilePairs4
+    //with
+    //  <list-loop(analyze-top-store-ast(|full-path))> astFilePairs4
       
   /**
    * Add URI annotations to each definition and unresolved URI annotations to each use site.
@@ -324,36 +324,38 @@
       
 rules // Parallel analysis
   
+  index-parallel-analyze(analyze) = index-analyze(parallel-unordered(all(index-do-analysis(analyze))))
+  index-sequential-analyze(analyze) = index-analyze(all(index-do-analysis(analyze)))
+  
   /** @internal */
-  index-parallel-analyze(analyze):
+  index-analyze(do-analysis):
     files -> allResults
     with
-      map(index-parse-file); // Parsing cannot be done in parallel.
-      map(\(ast, file) -> (ast, file, <project-path>)\);
-      parallel-unordered(all(index-analyze(analyze)));
-      ?results;
-      with(<eq> (<length> results, <length> files) | "Input size not equal to output size");
-      filesToAnalyze := <make-set> <mapconcat(?ParallelResults(_, _, _, _, _, <id>))> results;
-      if not([] := filesToAnalyze) then
-        allResults := <concat> [results, <index-parallel-analyze(analyze)> filesToAnalyze]
+      <debug(!"index-analyze: ")> files;
+      asts      := <map(index-parse-file)> files; 
+      data      := <map(\(ast, file) -> (ast, file, <project-path>)\)> asts;
+      results   := <do-analysis> data;
+      reanalyze := <make-set> <mapconcat(?ParallelResults(_, _, _, _, _, <id>))> results;
+      if not([] := reanalyze) then
+        allResults := <conc> (results, <index-analyze(do-analysis)> reanalyze)
       else
         allResults := results
       end
   
-  /** @internal */   
+  /** @internal */
   index-parse-file:
     file -> (ast', file)
     with
-	    if <file-exists> file then
-	    	if ast := <parse-file> file then
-	    		ast' := ast
-	      else
-	      	ast' := ()
-      	end
-	    else
-	      ast' := ()
-	    end
-   
+      if <file-exists> file then
+        if ast := <parse-file> file then
+          ast' := ast
+        else
+          ast' := ()
+        end
+      else
+        ast' := ()
+      end
+      
   /** @internal */   
   index-set-markers:
     ParallelResults(ast, ast', errors, warnings, notes, diffs) -> <id>
@@ -361,11 +363,11 @@
       <set-markers(|ast)> (ast', errors, warnings, notes)
       
   /** @internal */
-  index-analyze(analyze):
-    (ast, path, project-path) -> ParallelResults(ast, ast', errors, warnings, notes, filesToAnalyze)
+  index-do-analysis(analyze):
+    (ast, path, project-path) -> ParallelResults(ast, ast', errors, warnings, notes, reanalyze)
     with
-      (ast', errors, warnings, notes, filesToAnalyze) := <analyze>;
-      if [] := filesToAnalyze then
+      (ast', errors, warnings, notes, reanalyze) := <analyze>;
+      if [] := reanalyze then
         complete-work-unit
       end
       

Modified: spoofax-contrib/index-examples/index-libraries/lib/analysis-library.str
==============================================================================
--- spoofax-contrib/index-examples/index-libraries/lib/analysis-library.str	Thu Nov  1 16:58:57 2012	(r25662)
+++ spoofax-contrib/index-examples/index-libraries/lib/analysis-library.str	Thu Nov  1 18:26:24 2012	(r25663)
@@ -194,6 +194,9 @@
   
 rules // Parallel analysis
   
+  index-parallel-analyze-files(analyze) = index-analyze-files(index-parallel-analyze(analyze))
+  index-sequential-analyze-files(analyze) = index-analyze-files(index-sequential-analyze(analyze))
+  
   /**
    * Does a parallel analysis of given files using the specified analysis strategy. Automatically does parallel
    * analysis of dependent files that have changed during the analysis.
@@ -206,13 +209,13 @@
    *                a (ast', errors, warnings, notes, filesToAnalyze) tuple as output.
    * @type List((file, subfile) or file) -> None()
    */
-  index-parallel-analyze-files(analyze):
+  index-analyze-files(internal-analyze):
     files -> None()
     with
       length; 
       set-total-work-units
     with
-      index-parallel-analyze(analyze);
+      internal-analyze;
       filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
       
 rules // Splitter

From m.dejonge at tudelft.nl  Thu Nov  1 22:01:07 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 01 Nov 2012 21:01:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25664 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax
Message-ID: <20121101210107.44F9D108C02F@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Nov  1 21:01:05 2012
New Revision: 25664
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25664&sc=1

Log:
separate builder, refactoring, reference and completion rules

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf	Thu Nov  1 18:26:24 2012	(r25663)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf	Thu Nov  1 21:01:05 2012	(r25664)
@@ -4,12 +4,14 @@
   EditorService
   
 %%Comments[Section]
-  Comments[SemanticRule]
+  Comments[BuilderRule]
+  Comments[CompletionRule]
+  Comments[RefactoringRule]
+  Comments[ReferenceRule]
   Comments[ColorRule]
   Comments[OutlineRule]
   Comments[FoldingRule]
   Comments[LanguageProperty]
-  Comments[ReferenceRule]
 
 exports
   context-free start-symbols Module[[StrategoHost]]
@@ -28,12 +30,20 @@
     "descriptor" "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
     "descriptor" "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
     "descriptor" "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
-    "descriptor" "|[" SemanticRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+    "descriptor" "|[" BuilderRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+    "descriptor" "|[" CompletionRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+    "descriptor" "|[" RefactoringRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+    "descriptor" "|[" ReferenceRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
     
                  "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
                  "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
                  "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
-                 "|[" SemanticRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+                 "|[" BuilderRule     "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" CompletionRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" RefactoringRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" ReferenceRule   "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
 
     QuotedTerm -> Id {cons("FromMetaExpr"), avoid}
     QuotedTerm -> PropertyValue {cons("FromMetaExpr"), avoid}
@@ -43,13 +53,21 @@
     QuotedTerm -> Color {cons("FromMetaExpr")}
     QuotedTerm -> Font  {cons("FromMetaExpr")}
     QuotedTerm -> SectionName {cons("FromMetaExpr")}
-    QuotedTerm -> SemanticRule {cons("FromMetaExpr"), avoid}
+
+    QuotedTerm -> BuilderRule {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> CompletionRule {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> RefactoringRule {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> ReferenceRule {cons("FromMetaExpr"), avoid}
     
     QuotedTerms -> OutlineRule*   {cons("FromMetaExpr")}
     QuotedTerms -> ColorRule*     {cons("FromMetaExpr")}
     QuotedTerms -> FoldingRule*   {cons("FromMetaExpr")}
     QuotedTerms -> PropertyValues {cons("FromMetaExpr")}
-    QuotedTerms -> SemanticRule*  {cons("FromMetaExpr")}
+
+    QuotedTerms -> BuilderRule*  {cons("FromMetaExpr")}
+    QuotedTerms -> CompletionRule*  {cons("FromMetaExpr")}
+    QuotedTerms -> RefactoringRule*  {cons("FromMetaExpr")}
+    QuotedTerms -> ReferenceRule*  {cons("FromMetaExpr")}
 
     "~"  Term[[StrategoHost]] -> QuotedTerm  {bracket}
     "~*" Term[[StrategoHost]] -> QuotedTerms {bracket}

From m.dejonge at tudelft.nl  Fri Nov  2 08:16:14 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Fri, 02 Nov 2012 07:16:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25665 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/incremental
Message-ID: <20121102071614.606382B8004@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Fri Nov  2 07:16:12 2012
New Revision: 25665
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25665&sc=1

Log:


Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/incremental/IncrementalSortSet.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/incremental/IncrementalSortSet.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/incremental/IncrementalSortSet.java	Thu Nov  1 21:01:05 2012	(r25664)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/incremental/IncrementalSortSet.java	Fri Nov  2 07:16:12 2012	(r25665)
@@ -61,7 +61,6 @@
 		lexFun = table.getFactory().makeConstructor("lex", 1);
 		incrementalSorts = expand ? getInjectionsTo(table, sorts, false) : sorts; 
 		//TODO: what about list sorts? e.g. given a* -> b, add a if b specified
-		//TODO: not rejects
 		incrementalContainerSorts = expandReverse ? getInjectionsTo(table, incrementalSorts, true) : incrementalSorts;
 	}
 	

From m.dejonge at tudelft.nl  Fri Nov  2 10:16:30 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Fri, 02 Nov 2012 09:16:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25666 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax
Message-ID: <20121102091630.A4A98CC246@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Fri Nov  2 09:16:29 2012
New Revision: 25666
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25666&sc=1

Log:
some follow restrictions

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/ColorerService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/FoldingService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/RefactoringsService.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf	Fri Nov  2 07:16:12 2012	(r25665)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf	Fri Nov  2 09:16:29 2012	(r25666)
@@ -28,4 +28,7 @@
     "(meta)"       -> BuilderOption {cons("Meta")}
     "(cursor)"     -> BuilderOption {cons("Cursor")}
     "(source)"     -> BuilderOption {cons("Source")}
-        
\ No newline at end of file
+ 
+ lexical restrictions
+  "builders" "builder" "on" -/- [A-Za-z0-9\_]
+       
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/ColorerService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/ColorerService.sdf	Fri Nov  2 07:16:12 2012	(r25665)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/ColorerService.sdf	Fri Nov  2 09:16:29 2012	(r25666)
@@ -64,3 +64,6 @@
     "_"            -> AttributeId {reject}
     Font           -> AttributeId {reject}
     "environment"  -> AttributeId {reject}
+
+lexical restrictions
+  "environment" "colorer" "bold" "italic" -/- [A-Za-z0-9\_]

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Fri Nov  2 07:16:12 2012	(r25665)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Fri Nov  2 09:16:29 2012	(r25666)
@@ -64,3 +64,6 @@
     "<" PlaceholderChar* ":" -> PlaceholderWithSortPrefix
     "<" PlaceholderChar* ">" -> Placeholder
     ~[\:\>\n]                -> PlaceholderChar
+
+lexical restrictions
+  "completions" "completion" "template" -/- [A-Za-z0-9\_]

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/FoldingService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/FoldingService.sdf	Fri Nov  2 07:16:12 2012	(r25665)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/FoldingService.sdf	Fri Nov  2 09:16:29 2012	(r25666)
@@ -24,3 +24,6 @@
     "(disabled)" -> FoldingAnno {cons("Disable")}
     "(folded)"   -> FoldingAnno {cons("Folded")}
                  -> FoldingAnno {cons("None")}
+
+lexical restrictions
+  "all" "folding" -/- [A-Za-z0-9\_]

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/RefactoringsService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/RefactoringsService.sdf	Fri Nov  2 07:16:12 2012	(r25665)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/RefactoringsService.sdf	Fri Nov  2 09:16:29 2012	(r25666)
@@ -57,6 +57,10 @@
     "pp-table"      -> SemanticNode {reject}
     "pretty-print"  -> SemanticNode {reject}
     "refactoring"   -> SemanticNode {reject}
+    "refactorings" -> StrategoCall {reject}
+    "refactoring"  -> StrategoCall {reject}
+    "pretty-print"  -> StrategoCall {reject}
+    "keybindings"  -> StrategoCall {reject}
 
 context-free syntax
 
@@ -69,4 +73,9 @@
     "Shift"  -> Key
     "Alt"    -> Key
     "Ctrl"   -> Key
-    [A-Z]    -> Key
\ No newline at end of file
+    [A-Z]    -> Key
+    
+lexical restrictions
+  "refactoring" "refactorings" "keybindings" "override" "input" "true" "false" -/- [A-Za-z0-9\_]
+
+

From m.dejonge at tudelft.nl  Fri Nov  2 11:55:54 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Fri, 02 Nov 2012 10:55:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25667 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20121102105554.489E2108C008@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Fri Nov  2 10:55:54 2012
New Revision: 25667
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25667&sc=1

Log:
only use the left context (right context can not be trusted in a completion scenario)

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Fri Nov  2 09:16:29 2012	(r25666)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Fri Nov  2 10:55:54 2012	(r25667)
@@ -64,8 +64,8 @@
 	public static final String COMPLETION_TOKEN = "completion123";
 
 	private static final long REINIT_PARSE_DELAY = 4000;
-
-	private static final int RIGHT_CONTEXT_SIZE = 80; //limit on suffix parsing
+	
+	private static final String WHITESPACE_SEPARATION = "     ";
 
 	private final StrategoObserver observer;
 
@@ -92,7 +92,7 @@
 	private String errorMessage; //error results
 
 	
-	private IStrategoTerm completionAST; //intermediate results
+	private IStrategoTerm currentAST; //intermediate results
 	
 	private int startOffsetCompletionToken; //intermediate results
 
@@ -111,7 +111,7 @@
 		this.completionContexts = new java.util.HashSet<IStrategoTerm>();
 		this.sglrReuser = sglrReuser;
 		
-		this.completionAST = null;
+		this.currentAST = null;
 		this.startOffsetCompletionToken = -1;
 	}
 
@@ -171,19 +171,15 @@
 		parseController.scheduleParserUpdate(REINIT_PARSE_DELAY, true); // cancel current parse
 		parseController.getParseLock().lock();
 		try {
-
-			//sets document
-			String document = documentPrefix + COMPLETION_TOKEN + documentSuffix;
-
 			//sets AST for document (possible a slightly inferior AST with the empty string parsed instead of the completion identifier) 
-			setCompletionAst(parseController, completionPrefix, document);
-			if(this.completionAST == null)
+			setCompletionAst(parseController, documentPrefix, completionPrefix, documentSuffix);
+			if(this.currentAST == null)
 				return new java.util.HashSet<IStrategoTerm>();
 
-			//constructed partial trees around cursor location
+			//constructed partial trees around cursor location. 
+			//Only take into account the left context, since the right context can not be trusted
 			//SGLR sglr = parseController.getParser().getParser();
-			completionContexts = parseCompletionContext(parseController, document);
-			
+			completionContexts = parseCompletionContext(parseController, documentPrefix + COMPLETION_TOKEN + WHITESPACE_SEPARATION);			
 		} catch (Exception e) {
 			this.errorMessage = "No semantic proposals available - syntax errors";
 			Environment.logException(errorMessage, e);
@@ -204,19 +200,21 @@
 				sglr.findLongestLeftContextReductions(
 					parserConfigDocumentPrefix,
 					getCompletionOffsetMid(),
-					getCompletionOffsetMid() + RIGHT_CONTEXT_SIZE,
+					document.length() - 2,
 					document
 		);
 		return completionContexts;
 	}
 
 
-	private void setCompletionAst(SGLRParseController parseController, String completionPrefix, String document) 
-			throws BadTokenException, TokenExpectedException, ParseException, SGLRException {
-		this.completionAST = null;
+	private void setCompletionAst(SGLRParseController parseController, String documentPrefix, String completionPrefix, String documentSuffix) 
+			throws BadTokenException, TokenExpectedException, ParseException, SGLRException {		
+		this.currentAST = null;
+		//sets document
+		String document = documentPrefix + COMPLETION_TOKEN + documentSuffix;
 		if(completionPrefix.equals("") && document.length() < 2500){
 			try{
-				completionAST = parseController.parse(document, new NullProgressMonitor());
+				currentAST = parseController.parse(document, new NullProgressMonitor());
 				//(IStrategoTerm)sglr.parse(document, null, parseController.getParser().getStartSymbol(), true, this.completionTokenOffset);
 				return;
 			} catch (Exception e) {
@@ -225,7 +223,7 @@
 		}
 		//Better performance but less precise in case the completion-prefix is empty.
 		//That is, the empty string is parsed at the cursor location instead of the completion token.
-		completionAST = parseController.getCurrentAst(); 
+		currentAST = parseController.getCurrentAst(); 
 	}
 
 	private Set<IStrategoTerm> filterLeafnodes(Set<IStrategoTerm> completionContexts) {
@@ -310,7 +308,7 @@
 	}
 	
 	private IStrategoTerm constructASTForContext(IStrategoTerm completionContext) {
-		IStrategoTerm newCompletionAST = ((StrategoTerm)this.completionAST).clone(false);
+		IStrategoTerm newCompletionAST = ((StrategoTerm)this.currentAST).clone(false);
 		String sort = ImploderAttachment.getSort(completionContext);
 		IStrategoTerm nodeContext = findCompletionContext(newCompletionAST, sort);
 		if(nodeContext != null){

From M.A.Akhter at student.tudelft.nl  Fri Nov  2 19:20:49 2012
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 02 Nov 2012 18:20:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25668 - in
	spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax:
	editor editor/java/org/strategoxt/imp/editors/spoofax/ui
	editor/java/org/strategoxt/im...
Message-ID: <20121102182049.6490F2B800C@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Fri Nov  2 18:20:47 2012
New Revision: 25668
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25668&sc=1

Log:
updating svn repo. with the changes

Added:
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/perspective/
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/perspective/PerspectiveFactory.java
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/spx.name-analysis.str
Modified:
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang.main.esv
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/SpoofaxlangDependencyViewImages.java
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/model/SpxImportReferenceGroup.java
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/views/SpxDependencyVisualizationForm.java
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/editor-common.generated.spx
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/editor-services.generated.spx
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-adapters.spx
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-definitions.spx
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-descriptors.spx
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/editor/main.str
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang.main.esv
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang.main.esv	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang.main.esv	Fri Nov  2 18:20:47 2012	(r25668)
@@ -14,3 +14,4 @@
   extensions    : spx
   table         : include/SpoofaxLang.tbl
   start symbols : Start
+  unmanaged table : Stratego*
\ No newline at end of file

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/SpoofaxlangDependencyViewImages.java
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/SpoofaxlangDependencyViewImages.java	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/SpoofaxlangDependencyViewImages.java	Fri Nov  2 18:20:47 2012	(r25668)
@@ -46,6 +46,9 @@
 	public static final String IMG_OPEN = "opentype.gif";
 	public static final String IMG_IMPORT_REFS_GROUP = "impc_obj.gif";
 	public static final String IMG_IMPORT = "imp_obj.gif";
+	public static final String IMG_NEW_PROJ = "spx-project.png";
+	public static final String IMG_NEW_LANG = "spx-language.png";
+	
 	
 	
 	public static final ImageDescriptor DESC_SNAPSHOT = create(PATH_OBJ, IMG_SNAPSHOT);
@@ -65,6 +68,8 @@
 	public static final ImageDescriptor DESC_OPEN = create(PATH_OBJ, IMG_OPEN);
 	public static final ImageDescriptor DESC_IMPORT_GROUP = create(PATH_OBJ, IMG_IMPORT_REFS_GROUP);
 	public static final ImageDescriptor DESC_IMPORT       = create(PATH_OBJ, IMG_IMPORT);
+	public static final ImageDescriptor DESC_NEW_PROJ       = create(PATH_OBJ, IMG_NEW_PROJ);
+	public static final ImageDescriptor DESC_NEW_LANG       = create(PATH_OBJ, IMG_NEW_LANG);
 	
 	private static final void initialize() {
 		PLUGIN_REGISTRY = Activator.getInstance().getImageRegistry();
@@ -85,6 +90,8 @@
 		manage(IMG_OPEN, DESC_OPEN);
 		manage(IMG_IMPORT, DESC_IMPORT);
 		manage(IMG_IMPORT_REFS_GROUP, DESC_IMPORT_GROUP);
+		manage(IMG_NEW_PROJ, DESC_NEW_PROJ);
+		manage(IMG_NEW_LANG, DESC_NEW_LANG);
 		}
 
 	private static ImageDescriptor create(String prefix, String name) {

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/model/SpxImportReferenceGroup.java
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/model/SpxImportReferenceGroup.java	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/model/SpxImportReferenceGroup.java	Fri Nov  2 18:20:47 2012	(r25668)
@@ -5,7 +5,7 @@
 
 public class SpxImportReferenceGroup  extends SpxBaseDescriptor{
 
-	public static final String IMPORT_DECLARATIONS_LABEL_TEXT = "import declarations";
+	public static final String IMPORT_DECLARATIONS_LABEL_TEXT = "imports";
 	public static final String DEPENDANTS_LABEL_TEXT   = "dependants";
 	
 	

Added: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/perspective/PerspectiveFactory.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/perspective/PerspectiveFactory.java	Fri Nov  2 18:20:47 2012	(r25668)
@@ -0,0 +1,52 @@
+package org.strategoxt.imp.editors.spoofax.ui.perspective;
+
+import org.eclipse.ui.IFolderLayout;
+import org.eclipse.ui.IPageLayout;
+import org.eclipse.ui.IPerspectiveFactory;
+
+
+public class PerspectiveFactory implements IPerspectiveFactory {
+
+	public static final String ID = "org.strategoxt.imp.editors.spoofax.DefaultPerspective";
+	public static final String DEPENDENCY_EXPLORER_ID = "org.strategoxt.imp.editors.spoofax.ui.views.SpxDependencyVisualizationView";
+	public static final String PACKAGE_EXPLORER_ID = "org.strategoxt.imp.editors.spoofax.ui.views.SpoofaxPackageExplorerView";
+	public static final String NEW_PROJECT_WIZARD_ID = "org.strategoxt.imp.metatooling.wizards.NewSpxEditorWizard";
+	public static final String NEW_LANGUAGE_WIZARD_ID = "org.strategoxt.imp.metatooling.wizards.NewSpxLanguageWizard";
+	
+	public void createInitialLayout(IPageLayout layout) {
+	
+		String editorArea = layout.getEditorArea();
+	
+		layout.addNewWizardShortcut(NEW_PROJECT_WIZARD_ID);
+		layout.addNewWizardShortcut(NEW_LANGUAGE_WIZARD_ID);			 
+		layout.addNewWizardShortcut("org.eclipse.ui.wizards.new.file");
+		layout.addNewWizardShortcut("org.eclipse.ui.wizards.new.folder");
+	
+		
+		
+		IFolderLayout left = layout.createFolder("left", IPageLayout.LEFT,    (float) 0.20, editorArea);
+		IFolderLayout down = layout.createFolder("down", IPageLayout.BOTTOM,  (float) 0.80, editorArea);
+		IFolderLayout right = layout.createFolder("right", IPageLayout.RIGHT, (float) 0.75, editorArea);
+
+		IFolderLayout rightBottom = layout.createFolder("rightBottom", IPageLayout.BOTTOM, (float) 0.70, "right");
+		
+		
+		left.addView("org.eclipse.jdt.ui.PackageExplorer");
+		
+		down.addView(IPageLayout.ID_PROBLEM_VIEW);
+		down.addView("org.eclipse.ui.console.ConsoleView");
+		down.addView(DEPENDENCY_EXPLORER_ID);
+		
+		right.addView(PACKAGE_EXPLORER_ID);
+		rightBottom.addView(IPageLayout.ID_OUTLINE);
+
+		
+		layout.addShowViewShortcut(PACKAGE_EXPLORER_ID);
+		layout.addShowViewShortcut(DEPENDENCY_EXPLORER_ID);
+		layout.addShowViewShortcut("org.eclipse.ui.console.ConsoleView");
+		layout.addShowViewShortcut(IPageLayout.ID_PROBLEM_VIEW);
+		layout.addShowViewShortcut(IPageLayout.ID_OUTLINE);
+		layout.addShowViewShortcut(IPageLayout.ID_TASK_LIST);		
+	}
+
+}

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/views/SpxDependencyVisualizationForm.java
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/views/SpxDependencyVisualizationForm.java	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/views/SpxDependencyVisualizationForm.java	Fri Nov  2 18:20:47 2012	(r25668)
@@ -39,7 +39,7 @@
 	 * These are all the strings used in the form. These can probably be
 	 * abstracted for internationalization
 	 */
-	private static String SpoofaxProject_Dependency_Analysis = "SpoofaxLang Package Dependency Analysis";
+	private static String SpoofaxProject_Dependency_Analysis = "SpoofaxLang Dependency Analyzer";
 
 	/*
 	 * Some parts of the form we may need access to

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/editor-common.generated.spx
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/editor-common.generated.spx	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/editor-common.generated.spx	Fri Nov  2 18:20:47 2012	(r25668)
@@ -15,7 +15,7 @@
     | <import-term(include/Test.tbl)>
     )
 
-  parse-string = parse-test-string 
+  parse-string = parse-test-string  
   parse-test-string = 
     parse-string( 
       strsglr-report-parse-error

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/editor-services.generated.spx
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/editor-services.generated.spx	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/editor-services.generated.spx	Fri Nov  2 18:20:47 2012	(r25668)
@@ -40,7 +40,7 @@
   // while newly inserted nodes are pretty printed using a custom pretty-print strategy,                   
   // or the layout definitions in the pp-table.                                                            
   //   pp-table: get-pp-table                                                                              
-  //   pretty-print: prettyprint                                                                           
+  //   pretty-print: prettyprint                                                                            
   //                                                                                                       
   // Refactorings can be specified as shown below, whereby Property* indicates on which constructs the     
   // refactoring is specified (<sort>.<constructor>).                                                      

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-adapters.spx
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-adapters.spx	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-adapters.spx	Fri Nov  2 18:20:47 2012	(r25668)
@@ -20,12 +20,12 @@
 	// Reference resolving and hover help
 	references
 	  reference _ : editor-resolve
-	  hover _     : editor-hover
+	  hover _     : editor-hover   
 
 
 module Builders  
 	 	
-	rules 
+	rules		
 		// Transforms a selection to Java
 		generate-java:
 			(selected, position, ast, path, project-path) -> (filename, result)
@@ -45,7 +45,7 @@
 			(selected, position, ast, path, project-path) -> (filename, result)
 			with
   			filename := <guarantee-extension(|"pp.spo")> path;
-  			result   := <pp-entitylang>selected // we just return the input term
+  			result   := <pp-entitylang>selected // we just return the input term 
 
 module Reference-Resolver  
 	
@@ -64,7 +64,7 @@
 		
 	 
 
-module Code-Completion-Proposer
+module Code-Completion-Proposer   
 
 rules
 	 // Completes an identifier when the user presses control-space

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-definitions.spx
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-definitions.spx	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-definitions.spx	Fri Nov  2 18:20:47 2012	(r25668)
@@ -1,23 +1,25 @@
-package languages.entitylang     
+package languages.entitylang      
 
 // Following module define the main langauge constructs for this language
 module Language-Constructs-Main
 	imports languages.entitylang.generated 
 	
 	context-free syntax    
-    "module" ID Definition*       	-> Start      {"Module"} 
-   	"entity" ID "{" Property* "}" 	-> Definition {"Entity"}
+    "module" ID Definition*       	-> Start      {"Module"}
+    "entity" Type@=Entity@=ID "{" Member* "}"	-> Definition {"Entity", scope(Property, Function)} 
+     
+   	//"entity" ID "{" Property* "}" 	-> Definition {"Entity"}
     ID  ":" Type               			-> Property   {"Property"} 
 	
 	rules 
 		// Semantic analyses
 		// Reports an error if an entity is defined more than once.
 		// This constraint is implemented by testing if the "bag" of
-		// all entities x is not a singleton list.
+		// all entities x is not a singleton list. 
 		constraint-error:
 		  Entity(x, _) -> (x, $[Duplicate entity name])
 		  where
-		    not(<bagof-GetEntity> x => [_])
+		    not(<bagof-GetEntity> x => [_]) 
 		
 		constraint-warning:
 		  Entity(x, _) -> (x, $[Entity names must start with a capital])
@@ -33,7 +35,7 @@
 		to-java: Module(x, d*) ->
     $[ package [x];
        
-       [d'*]
+       [d'*]  
      ]
     with
       d'* := <to-java> d*
@@ -53,7 +55,7 @@
           return [x];
       }
       
-      public void set_[x] ([<to-java>type] [x]) {
+      public void set_[x] ([<to-java>type] [x]) {   
           this.[x] = [x];    
       }
   	 ]     
@@ -115,7 +117,7 @@
 		
 		pp-entitylang : IntegerType() -> "Int"
     
-    pp-entitylang : StringType() -> "String"  
+    pp-entitylang : StringType() -> "String"    
 
 	
 
@@ -126,7 +128,7 @@
 imports languages.entitylang.generated
 	
 	rules
-	  // Analysis: does a topdown traversal of the tree,
+	  // Analysis: does a topdown traversal of the tree,   
 	  // and tries to apply the record-entity rule.
 	  analyze:
 	    t -> t

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-descriptors.spx
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-descriptors.spx	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/entitylang-descriptors.spx	Fri Nov  2 18:20:47 2012	(r25668)
@@ -3,8 +3,6 @@
 module Entitylang-Descriptor
 	imports languages.entitylang.generated 
 	language General properties 
-                  
-	  name          : entitylang
 	  id            : SpoofaxEntityLanguage
 	  extends       : Root
 	                  
@@ -12,7 +10,8 @@
 	  url           : http://strategoxt.org
 	                  
 	  extensions    : spo 
-	  start symbols : Start   
+	  start symbols : Start   
+	  name : test         
      
 
 	

Added: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/spx.name-analysis.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/test/spx.name-analysis.str	Fri Nov  2 18:20:47 2012	(r25668)
@@ -0,0 +1,129 @@
+module analysis-generated
+
+signature
+  constructors
+    Entity2  : Namespace
+    Type     : Namespace
+    Module   : Namespace
+    Function : Namespace
+    Entity   : Namespace
+    Var      : Namespace
+    Property : Namespace
+
+
+rules
+
+  nam-get-scope-types :
+    Module(_, _) -> [Entity(), Module()]
+
+  nam-get-scope-types :
+    Entity(_, _) -> [Property(), Function()]
+
+  nam-get-scope-types :
+    Function(_, _, _) -> [Var()]
+
+  nam-get-scope-types :
+    Block(_) -> [Var()]
+
+  nam-get-definition-key :
+    Module(x, _) -> x
+
+  nam-get-definition :
+    Module(x, _) -> <nam-get-def(|Module())> x
+
+  nam-get-definition-key :
+    Entity(x, _) -> x
+
+  nam-get-definition :
+    Entity(x, _) -> <nam-get-def(|Entity2())> x
+
+  nam-get-definition-key :
+    Property(x, _) -> x
+
+  nam-get-definition :
+    Property(x, _) -> <nam-get-def(|Property())> x
+
+  nam-get-definition-key :
+    Function(x, _, _) -> x
+
+  nam-get-definition :
+    Function(x, _, _) -> <nam-get-def(|Function())> x
+
+  nam-get-definition-key :
+    Param(x, _) -> x
+
+  nam-get-definition :
+    Param(x, _) -> <nam-get-def(|Var())> x
+
+  nam-get-definition-key :
+    VarDecl(x, _) -> x
+
+  nam-get-definition :
+    VarDecl(x, _) -> <nam-get-def(|Var())> x
+
+  nam-get-definition-key :
+    VarDeclInit(x, _, _) -> x
+
+  nam-get-definition :
+    VarDeclInit(x, _, _) -> <nam-get-def(|Var())> x
+
+  nam-annotate-names(|def-path):
+    Module(r_5273, s_5273) -> Module(r_5273{def-path}, s_5273)
+
+  nam-annotate-names(|def-path):
+    Entity(p_5273, q_5273) -> Entity(p_5273{def-path}, q_5273)
+
+  nam-annotate-names(|def-path):
+    Import(o_5273) -> Import(<nam-annotate-use(|Module())> o_5273)
+
+  nam-annotate-names(|def-path):
+    Property(m_5273, n_5273) -> Property(
+                                  m_5273{def-path}
+                                , <nam-annotate-use(|Entity())> n_5273
+                                )
+
+  nam-annotate-names(|def-path):
+    Function(j_5273, k_5273, l_5273) -> Function(j_5273{def-path}, k_5273, l_5273)
+
+  nam-annotate-names(|def-path):
+    Param(h_5273, i_5273) -> Param(
+                               h_5273{def-path}
+                             , <nam-annotate-use(|Entity())> i_5273
+                             )
+
+  nam-annotate-names(|def-path):
+    Call(f_5273, g_5273) -> Call(
+                              <nam-annotate-use(|Function())> f_5273
+                            , g_5273
+                            )
+
+  nam-annotate-names(|def-path):
+    VarDecl(d_5273, e_5273) -> VarDecl(
+                                 d_5273{def-path}
+                               , <nam-annotate-use(|Entity())> e_5273
+                               )
+
+  nam-annotate-names(|def-path):
+    VarDeclInit(a_5273, b_5273, c_5273) -> VarDeclInit(
+                                             a_5273{def-path}
+                                           , <nam-annotate-use(|Entity())> b_5273
+                                           , c_5273
+                                           )
+
+  nam-annotate-names(|def-path):
+    Assign(y_5272, z_5272) -> Assign(
+                                <nam-annotate-use(|Var())> y_5272
+                              , z_5272
+                              )
+
+  nam-annotate-names(|def-path):
+    Var(x_5272) -> Var(<nam-annotate-use(|Var())> x_5272)
+
+  nam-annotate-names(|def-path):
+    PropAccess(v_5272, w_5272) -> PropAccess(
+                                    v_5272
+                                  , <nam-annotate-use(|Property())> w_5272
+                                  )
+
+  nam-annotate-names(|def-path):
+    Block(u_5272) -> Block(u_5272)
\ No newline at end of file

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Fri Nov  2 18:20:47 2012	(r25668)
@@ -241,7 +241,7 @@
 						<is-string>resolving-path // Verify that the resource has a known extension.
 						;	<has-known-extensions>resolving-path 
 						; {| GetEnclosingModuleName 
-					  	 : 		internal-module-qualified-name := <get_internal_module_qtname> <GetEnclosingPackageName>;
+					  	 : 		internal-module-qualified-name := <get_internal_module_qtname><GetEnclosingPackageName>;
     								<declare-current-module-scope>internal-module-qualified-name ;
 										// Known Extension found. Handling it.
 										// Parsing the legacy content.

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Fri Nov  2 18:20:47 2012	(r25668)
@@ -31,7 +31,9 @@
 		debug-compiler(!$[----Declaring global Symbols for: [<print-as-string>]]);
 		list-loop(
 				{| GetEnclosingModuleName
-				 : 	declare-current-module-scope;
+				 : 	
+				 		declare-current-module-scope ;
+				 	  where(<debug(!"declare-global-symbols for following scope:  ")><get-current-scope>);
 			 			with-spxverify(
 							get-desugared-module-ast;
 							declare-internal(declare-global-symbols)
@@ -157,9 +159,8 @@
 		where
 		   < has-extension(|"sdf") 
 			 + has-extension(|"def")
-			 > resolved-path
-		   ; <alltd(
-		   	   declare-sdf-definition-main) >legacy-content
+			 > resolved-path ;
+		    <declare-legacy-sdf-imports> legacy-content
 
 	declare-legacy-artifact(|resolved-path) : 
 		legacy-content -> legacy-content

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Fri Nov  2 18:20:47 2012	(r25668)
@@ -58,6 +58,11 @@
  
  declare-sdf-usage-main = alltd(declare-sdf-usage)
 
+	declare-legacy-sdf-imports = 	
+		   activate-global-scope(
+		   		alltd(declare-sdf-definition-main)			
+		   )
+		   
 rules
 	declare-sdf-definition :
 		context-free-start-symbols(s*) -> <id>
@@ -99,7 +104,9 @@
 	      		end
 	    			, !"Failed while storing sort.cons references at declare.declare-sdf-definition-internal"      
      		 	)
-    where	with-spxverify(
+	 	where with-spxverify(GetEnclosingModuleName ,"Failed, since current module scope is not declared at declare.declare-sdf-definition-internal." )
+	  where	with-spxverify(
+      			 
       			<index-symbol-definition>(x, SDFDeclaration(),prod );
       			<index-symbol-definition>(x , SortDeclaration(), (x, sortType));
     	  		dbg-declaration(

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/editor/main.str
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/editor/main.str	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/editor/main.str	Fri Nov  2 18:20:47 2012	(r25668)
@@ -37,11 +37,16 @@
   // (the completion identifier in the AST provides additional context information)
   editor-complete:
     (node, position, ast, path, project-path) -> proposals*
-    where debug 
+    where debug(!"code-completions |  ")  
     where editor-init
-    where <alltd(compute-proposals)> ast 
-    where <Proposals>() <+	![] => proposals* 
-    where <debug(!"Final Proposals : ")>proposals*
+    where <alltd(compute-proposals)> ast
+    where 
+    	(	<Proposals>() 
+    	<+	
+    		![]
+    	)
+    	; ?proposals*   	  
+    where <debug(!"Final proposals : ")> proposals* 
 			
 rules
 	
@@ -83,14 +88,18 @@
     	   			 :		rules(GetEnclosingModuleName := mId) 	
       	  					;	<collect-one(compute-proposals)>section*   		
       	  		|}
+     where <debug(!"4: ")><Proposals>()	
       	    	
 	compute-proposals:
 		ImportPackage(Name(COMPLETION(_))) -> <id>
 		where pId := <GetEnclosingPackageName> 
 		where debug
 		where get-package-list 
-					;	filter(not( ?pId ))   
+					; debug(!"package list: ")
+					;	filter(not( ?pId ))
+				 	; debug(!"filtered package list: ")   
 					;	map(?Package(<id>);convert-qname(|".")) => proposals
+				 	; debug(!"proposals ")
 					; rules(Proposals: () -> proposals) 	
 	
 	compute-proposals:

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Fri Nov  2 10:55:54 2012	(r25667)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Fri Nov  2 18:20:47 2012	(r25668)
@@ -66,7 +66,7 @@
 			?index-summary
 			 	
 	 /**
-   * Remove all the index entry related ti a compilation unit 
+   * Remove all the index entry related to a compilation unit 
    * located at resource-location.
    * 
    */

From M.A.Akhter at student.tudelft.nl  Fri Nov  2 19:23:20 2012
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 02 Nov 2012 18:23:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25669 - in
	spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src:
	jdbm/recman org/spoofax/interpreter/library/language/spxlang/index
	org/s...
Message-ID: <20121102182320.D98122B800C@mx2.tudelft.nl>

Author: MdAdilAkhter
Date: Fri Nov  2 18:23:20 2012
New Revision: 25669
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25669&sc=1

Log:
updating svn repo. with changes

Modified:
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/jdbm/recman/CacheRecordManager.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/BaseNamespace.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/GlobalNamespace.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/INamespace.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/LocalNamespace.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/ModuleNamespace.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/PackageNamespace.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexConfiguration.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexManager.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexUtils.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxPersistenceManager.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxPrimarySymbolTable.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxSemanticIndexFacade.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxSemanticIndexFacadeRegistry.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/data/NamespaceUri.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/tests/SpxPrimarySymbolTableTest.java
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/tests/SpxSymbolTableEntryTests.java

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/jdbm/recman/CacheRecordManager.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/jdbm/recman/CacheRecordManager.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/jdbm/recman/CacheRecordManager.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -32,6 +32,7 @@
  *
  * @author <a href="mailto:boisvert at intalio.com">Alex Boisvert</a>
  * @author <a href="cg at cdegroot.com">Cees de Groot</a>
+ * @author <a href="md.adilakhter at gmail.com">Cees de Groot</a>
  * @version $Id: CacheRecordManager.java,v 1.9 2005/06/25 23:12:32 doomdark Exp $
  */
 public class CacheRecordManager extends RecordManagerImpl
@@ -495,11 +496,11 @@
 		public void run() {
 			while(true)try{
 
-				//collect next item from cache,
-				//limit 10000 ms is to keep periodically checking if recman was GCed 
+				// collect next item from cache,
+				// limit 10000 ms is to keep periodically checking if recman was GCed 
 				SoftCacheEntry e = (SoftCacheEntry) entryQueue.remove(10000);
 
-				//check if  recman was GCed, cancel in that case
+				// check if  recman was GCed, cancel in that case
 				CacheRecordManager recman = recman2.get();
 				if(recman == null) 
 					return;

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/BaseNamespace.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/BaseNamespace.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/BaseNamespace.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -52,7 +52,7 @@
 		_currentNamespaceId = currentNamespace;
 		_enclosingNamespaceId = enclosingNamespace; 
 		
-		src = (_enclosingNamespaceId!= null) ? type.getName() + _currentNamespaceId.id() :  type.getName()   ; 
+		src = (_enclosingNamespaceId != null) ? type.getName() + _currentNamespaceId.id() :  type.getName(); 
 			
 		symbols = new HashMap<SpxSymbolKey, List<SpxSymbol>>();
 	}
@@ -86,7 +86,7 @@
 			if( entry.key.isOverridable())
 				values.add(entry.value);
 			else{
-				assert values.size() == 1;
+				assert values.size() == 1; // verifies following : STEs with an overload = false consist of only one entity.
 				values.set(0, entry.value);
 			}
 		}
@@ -282,7 +282,12 @@
 		return "Namespace { "+ src + "}";
 	}
 	
+	public abstract String getFormattedName();
+	
+	
 	public String getAbosoluteFilePath(){
 		return null;
 	}
+	
+	
 }
\ No newline at end of file

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/GlobalNamespace.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/GlobalNamespace.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/GlobalNamespace.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -4,7 +4,6 @@
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoConstructor;
 import org.spoofax.interpreter.terms.IStrategoList;
-import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 
 public final class GlobalNamespace extends BaseNamespace {
@@ -45,4 +44,10 @@
 		
 		return termFactory.makeList(facade.getCons().getGlobalNamespaceTypeCon());
 	}
+	
+	
+	public String getFormattedName(){
+		return  "Global";
+		
+	}
 }

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/INamespace.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/INamespace.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/INamespace.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -43,4 +43,6 @@
 	IStrategoAppl toTypedQualifiedName(SpxSemanticIndexFacade facade);
 
 	void clear();	
+	
+	String getFormattedName();
 }

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/LocalNamespace.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/LocalNamespace.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/LocalNamespace.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -52,4 +52,10 @@
 	public String getAbosoluteFilePath(){
 		return super.getAbosoluteFilePath();
 	}
+	
+	@Override
+	public String getFormattedName(){
+		return  "Local/" + this.namespaceUri().getFormattedStringID();
+		
+	}
 }

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/ModuleNamespace.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/ModuleNamespace.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/ModuleNamespace.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -62,4 +62,12 @@
 	public String getAbosoluteFilePath(){  
 		return moduleFilePath;
 	}
+	
+	
+	@Override
+	public String getFormattedName(){
+		return  "Module/" + this.namespaceUri().getFormattedStringID();
+		
+	}
+	
 }

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/PackageNamespace.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/PackageNamespace.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/PackageNamespace.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -365,4 +365,10 @@
 	public IStrategoAppl toTypedQualifiedName(SpxSemanticIndexFacade facade) {
 		return PackageDeclaration.toPackageQNameAppl(facade, this.namespaceUri().strategoID(facade.getTermFactory()));
 	}
+	
+	@Override
+	public String getFormattedName(){
+		return  "Package/" + this.namespaceUri().getFormattedStringID();
+		
+	}
 }
\ No newline at end of file

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexConfiguration.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexConfiguration.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexConfiguration.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -6,9 +6,9 @@
 	}
 	
 	public static final int NO_OF_ATTEMPT_TO_INIT_RECORDMANAGER = 0;
-	private static boolean LOG_SYMBOLS = true;
+	private static boolean LOG_SYMBOLS = false;
 	private static boolean DEBUG = false;
-	private static String CSVDelimiter = " __ ";  
+	private static String CSVDelimiter = " ; ";  
 	
 	
 	public static String getCSVDelimiter() { return CSVDelimiter; }

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexManager.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexManager.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexManager.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -209,7 +209,7 @@
 				SpxSemanticIndexFacade idxFacade = getSpxIndexFacade(idx, projectPath);
 				if(idxFacade!= null){
 					System.out.println("Closing Index for "+ projectPath );
-					idxFacade.close(false); // Also committing if the persistence manager is still open
+					idxFacade.close(true); // true => committing if the persistence manager is still open
 				}else
 					System.out.println("Index already closed for "+projectPath );
 			}

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexUtils.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexUtils.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexUtils.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -24,6 +24,10 @@
 import org.spoofax.terms.StrategoListIterator;
 import org.spoofax.terms.attachments.TermAttachmentSerializer;
 
+/**
+ * @author Md. Adil Akhter
+ * Created On : Jul 23, 2012
+ */
 public final class SpxIndexUtils {
 	private SpxIndexUtils() {
 		
@@ -148,48 +152,69 @@
 		return text.replace(",", SpxIndexConfiguration.getCSVDelimiter() );
 	}
 	
+	
+	
 	static  void logEntries(SpxSemanticIndexFacade f,  INamespace namespace , BufferedWriter logger) throws IOException, SpxSymbolTableException{
 		Map<SpxSymbolKey , List<SpxSymbol>> members = namespace.getMembers();
 		if( namespace instanceof PackageNamespace){
 			PackageNamespace ns = (PackageNamespace)namespace;
 			ns.ensureEnclosedNamespaceUrisLoaded(f);
 			ns.ensureImportedNamespaceUrisLoaded(f);
-			
-			logger.write("Enclosed Namespace Uris:\n");
+
 			for(NamespaceUri uri : ns.enclosedNamespaceUris ){
-				logger.write( SpxIndexUtils.getCsvFormatted(uri.toString()) +"\n");
+				logger.write(
+						namespace.namespaceUri().getFormattedStringID()  
+						+ ","
+						+ namespace.getFormattedName()
+						+ ",EnclosedNamespace,");
+				logger.write( uri.getFormattedStringID() +"\n");
 			}
 			logger.write("\n");
-			
-				
-			logger.write("Imported Namespace Uris:\n");
+
+
+
 			for(NamespaceUri uri : ns.importedNamespaceUris ){
-				logger.write(SpxIndexUtils.getCsvFormatted(uri.toString())+"\n");
+				logger.write(
+						namespace.namespaceUri().getFormattedStringID()  
+						+ ","
+						+ namespace.getFormattedName()
+						+ ",ImportedNamespace,");
+				logger.write(uri.getFormattedStringID()+"\n");
 			}
-			
+
 			logger.write("\n");
 		}
-		
-		
+
+
 		if( namespace instanceof ModuleNamespace){
-			logger.write("Parent Namespace = "+ ((ModuleNamespace) namespace).enclosingNamespaceUri()+"\n" );
+			logger.write(
+					namespace.namespaceUri().getFormattedStringID()
+					+ ","
+					+ namespace.getFormattedName()
+					+ ",ParentNamespace,"
+					+ ((ModuleNamespace) namespace).enclosingNamespaceUri()
+					.getFormattedStringID() + "\n");
 		}
-		
-		logger.write("\n");
-		if(members.keySet().size() >0)
-		{	
-			logger.write("Key, Type , Symbol\n");
-			for( SpxSymbolKey k : members.keySet()) {
-				for( SpxSymbol s : members.get(k) ){
-					logger.write(SpxIndexUtils.getCsvFormatted(k.printSymbolKey())+ ",");
-					logger.write( s.printSymbol(f) + "\n");
-				}
+
+		int symbolCount = 0;
+		for( SpxSymbolKey k : members.keySet()) {
+			for( SpxSymbol s : members.get(k) ){
+				symbolCount = symbolCount  + 1; 
+				logger.write(namespace.namespaceUri()
+						.getFormattedStringID()
+						+ ","
+						+ SpxIndexUtils.getCsvFormatted(k.printSymbolKey())
+						+ ",");
+				logger.write( s.printSymbol(f) + "\n");
 			}
 		}
-		else
-			logger.write("No Symbols\n");
+		logger.write(namespace.namespaceUri().getFormattedStringID() + ","
+				+ namespace.getFormattedName() + ",SymbolCount,"
+				+ symbolCount  + "\n");
 		
 		logger.write("\n");
+		
+		
 	}
 	
 	static void printSymbolTable(SpxSemanticIndexFacade f, boolean printIfDebug, String stageName) throws IOException {

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxPersistenceManager.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxPersistenceManager.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxPersistenceManager.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -72,6 +72,8 @@
 		//setting properties of RecordManager
 		options.put(RecordManagerOptions.INDEX_RELATIVE_PATH_OPTION, spxSemanticIndexFacade.getProjectPath()+ "/" + SpxIndexConfiguration.SPX_INDEX_DIRECTORY+ "/" );
 		options.put(RecordManagerOptions.CACHE_TYPE, "soft");
+		// TODO : TEST Cache Size
+		//options.put(RecordManagerOptions.CACHE_SIZE, "10000");
 		options.put(RecordManagerOptions.DISABLE_TRANSACTIONS, "true");
 		
 		tryInitRecordManager(spxSemanticIndexFacade,options);

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxPrimarySymbolTable.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxPrimarySymbolTable.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxPrimarySymbolTable.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -186,23 +186,31 @@
 	 * @throws SpxSymbolTableException 
 	 */
 	public void printSymbols(SpxSemanticIndexFacade f, String state , String projectPath , String indexId) throws IOException, SpxSymbolTableException{
+		// setting up directory + log file
 		new File(projectPath +"/"+SpxIndexConfiguration.SPX_INDEX_DIRECTORY+ "/.log").mkdirs();
-		
-		FileWriter fstream = new FileWriter(projectPath +"/"+ SpxIndexConfiguration.SPX_INDEX_DIRECTORY+ "/.log/"+indexId+"_symbols_"+SpxIndexUtils.now("yyyy-MM-dd HH.mm.ss.SSS")+".csv" , true);
-		BufferedWriter out = new BufferedWriter(fstream);
-		out.write(", , ,------------- Logging [" +state+ "] state of Symbol-Table at :" + SpxIndexUtils.now("yyyy-MM-dd HH.mm.ss")+"-------------\n");
-		try
-		{	
-			if(namespaces != null){
-				for(INamespace ns : namespaces.values()){
-					out.write("\n, --- "+ SpxIndexUtils.getCsvFormatted(ns.toString()) +"--- \n");
-					SpxIndexUtils.logEntries(f, ns,out) ;
+		String filepath = projectPath +"/"+ SpxIndexConfiguration.SPX_INDEX_DIRECTORY+ "/.log/"+indexId+"_symbols_"+SpxIndexUtils.now("yyyy-MM-dd HH.mm")+".csv";
+
+		if (!new File(filepath).exists()){
+
+			FileWriter fstream = new FileWriter(filepath, true);
+			BufferedWriter out = new BufferedWriter(fstream);
+			out.write("Namespace, Key, Type , Symbol\n");
+			try
+			{	
+				if(namespaces != null){
+					for(INamespace ns : namespaces.values()){
+						SpxIndexUtils.logEntries(f, ns,out) ;
+					}
 				}
+
+				// logging context
+				out.write("\n, ,#Logging Context#  ");
+				out.write(", ,#Logging [" +state+ "] state of Symbol-Table at :" + SpxIndexUtils.now("yyyy-MM-dd HH.mm.ss")+"#\n");
+			}catch(IOException ex){
+				//ignore 
 			}
-		}catch(IOException ex){ //ignore 
-			
+			finally{out.close();}
 		}
-		finally{out.close();}
 	}
 	
 	public INamespace resolveNamespace(IStrategoList id){

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxSemanticIndexFacade.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxSemanticIndexFacade.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxSemanticIndexFacade.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -138,6 +138,12 @@
 	synchronized void onIndexUpatingCompleted(){
 		ISpxPersistenceManager manager = this.getPersistenceManager();
 		manager.spxSymbolTable().setIndexUpdatedOn(this._currentIndexUpdatingStartedOn);
+		
+		try {
+			SpxIndexUtils.printSymbolTable(this, SpxIndexConfiguration.shouldLogSymbols(), "index updated completed");
+		} catch (IOException e) {
+			// do nothing
+		}
 	}
 	
 	synchronized void onInitCodeGeneration(){
@@ -1096,9 +1102,15 @@
 	 * @throws IOException
 	 */
 	public void commitChanges() throws IOException {
+		
+		System.out.println("Inside Commit changes. Writing to csv file :  " + SpxIndexConfiguration.shouldLogSymbols() );
+		
+		SpxIndexUtils.printSymbolTable(this, SpxIndexConfiguration.shouldLogSymbols(), "commit");
+		
 		ISpxPersistenceManager persistenceManager = this.getPersistenceManager();
 		persistenceManager.commit();
-//		SpxIndexUtils.printSymbolTable(this, SpxIndexConfiguration.shouldLogSymbols(), "commit");
+		
+		
 	}	
 
 	

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxSemanticIndexFacadeRegistry.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxSemanticIndexFacadeRegistry.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxSemanticIndexFacadeRegistry.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -55,7 +55,6 @@
 				fac = newFacade( projectPath, termFactory, agent);
 			}	
 		}
-	
 		return fac;
 	}
 	private SpxSemanticIndexFacade newFacade ( IStrategoTerm projectPath, ITermFactory termFactory , IOAgent agent ) throws Exception{

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/data/NamespaceUri.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/data/NamespaceUri.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/data/NamespaceUri.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -18,15 +18,13 @@
 	private static final long serialVersionUID = 7219193145612008432L;
 	private transient IStrategoList _id;
 	private final String _spxID;
+	private final String _formattedStringID;
 	
 	
 	public NamespaceUri(IStrategoList id){
-		this(toSpxID(id) );
-		_id = id ; 
-	}
-	
-	public NamespaceUri(String spxId){
-		_spxID = spxId.trim();
+		_id = id ;
+		_spxID = toSpxID(_id).trim(); // TODO : consider using formatted String ID 
+		_formattedStringID = SpxIndexUtils.listToString(id, ".");
 	}
 	
 	
@@ -101,4 +99,12 @@
 	public static IStrategoList toStrategoID(ITermFactory termFactory , String spxID) {
 		return (IStrategoList) SpxIndexUtils.stringToTerm(termFactory, spxID);
 	}
+
+
+	/**
+	 * @return the formattedStringID
+	 */
+	public String getFormattedStringID() {
+		return _formattedStringID;
+	}
 }

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/tests/SpxPrimarySymbolTableTest.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/tests/SpxPrimarySymbolTableTest.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/tests/SpxPrimarySymbolTableTest.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -1566,7 +1566,7 @@
 		Iterable<String> uris = symbol_table.getAllNamespaceSpxId();
 		
 		for(String uri : uris){
-			NamespaceUri i = new NamespaceUri(uri);
+			NamespaceUri i = new NamespaceUri(NamespaceUri.toStrategoID(termFactory(), uri));
 			
 			if ( i.equalSpoofaxId(this.termFactory() , GlobalNamespace.getGlobalNamespaceId(_facade)))
 				noOfGlobalNamespace = noOfGlobalNamespace  +1 ;

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/tests/SpxSymbolTableEntryTests.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/tests/SpxSymbolTableEntryTests.java	Fri Nov  2 18:20:47 2012	(r25668)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/tests/SpxSymbolTableEntryTests.java	Fri Nov  2 18:23:20 2012	(r25669)
@@ -1,6 +1,8 @@
 package org.spoofax.interpreter.library.language.spxlang.index.tests;
 
 import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
 
 import org.spoofax.interpreter.core.Interpreter;
 import org.spoofax.interpreter.library.IOAgent;
@@ -60,4 +62,89 @@
 	}
 
 	
+	public void testSpoofaxSymbolTableEntryBuilder2() {
+		
+		
+		SpxKey k1 = (SpxKey) new SpxOverloadedKey("Test" ,1);
+		SpxKey k2 = (SpxKey) new SpxOverloadedKey("Test" ,2);
+		
+		Map<SpxKey, SpxKey> symbols = new HashMap<SpxKey, SpxKey>();
+	
+		symbols.put(k1, k1);
+		symbols.put(k2, k2);
+		
+		SpxKey k3 = symbols.get(new SpxKey("Test"));
+		
+		
+		System.out.println(k3);
+	}
+
+	
+	
+	
+}
+
+class SpxOverloadedKey extends SpxKey{
+	int value;
+	
+	public SpxOverloadedKey(String s){
+		super(s);
+	}
+	public SpxOverloadedKey(String s, int value){
+		this(s);
+		this.value = value;
+	}
+	/* (non-Javadoc)
+	 * @see java.lang.Object#hashCode()
+	 */
+	@Override
+	public int hashCode() {
+		return super.hashCode();
+	}
+	/* (non-Javadoc)
+	 * @see java.lang.Object#equals(java.lang.Object)
+	 */
+	@Override
+	public boolean equals(Object obj) {
+		return super.equals(obj);
+	}
 }
+
+class SpxKey{
+	
+	String test;
+	public SpxKey( String s){
+		test = s;
+	}
+	/* (non-Javadoc)
+	 * @see java.lang.Object#hashCode()
+	 */
+	@Override
+	public int hashCode() {
+		final int prime = 31;
+		int result = 1;
+		result = prime * result + ((test == null) ? 0 : test.hashCode());
+		return result;
+	}
+	/* (non-Javadoc)
+	 * @see java.lang.Object#equals(java.lang.Object)
+	 */
+	@Override
+	public boolean equals(Object obj) {
+		if (this == obj)
+			return true;
+		if (obj == null)
+			return false;
+		if (!(obj instanceof SpxKey))
+			return false;
+		
+		SpxKey other = (SpxKey) obj;
+		if (test == null) {
+			if (other.test != null)
+				return false;
+		} else if (!test.equals(other.test))
+			return false;
+		return true;
+	}
+	
+}
\ No newline at end of file

From M.A.Akhter at student.tudelft.nl  Fri Nov  2 22:35:07 2012
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 02 Nov 2012 21:35:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25670 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context
Message-ID: <20121102213508.01C28CC21A@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Fri Nov  2 21:35:06 2012
New Revision: 25670
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25670&sc=1

Log:
avoiding warning for rule's arguments  e.g., "Unparenthesized constructor: use 'Type()' instead"

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-types.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-types.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-types.str	Fri Nov  2 18:23:20 2012	(r25669)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-types.str	Fri Nov  2 21:35:06 2012	(r25670)
@@ -27,18 +27,18 @@
 		<+ 
 		  	!typed-qname => Module(u-qname)
 
-	get-typed-qnames(|Type) : 
+	get-typed-qnames(|type) : 
 		list-qname -> result
 		where 
 			<is-list>list-qname
-		 	; <map(get-typed-qname(|Type))>list-qname => result
+		 	; <map(get-typed-qname(|type))>list-qname => result
 		
-	get-typed-qname(|Type) = 
+	get-typed-qname(|type) = 
 		?QName(q-name-parts*)
 		; where(<is-list>q-name-parts*)
-		;<get-typed-qname>(Type , <id>)
+		;<get-typed-qname>(type , <id>)
 	<+
-		dbg-symboltable(!$[Type| Failed to cast  [<print-as-string>] to [<print-as-string>Type]] | "get-typed-qname" ,<debug-level-WARNING>)
+		dbg-symboltable(!$[Type| Failed to cast  [<print-as-string>] to [<print-as-string>type]] | "get-typed-qname" ,<debug-level-WARNING>)
 		; fail 	
 	
 	get-typed-qname: 
@@ -53,15 +53,20 @@
 	get-module-typed-qname: 
 		(QName(package-qname-parts*), spxmodulename) -> <get-typed-qname(|ModuleType())>(<get-module-untyped-qname><id>)
 		  
+	
+	get-module-untyped-qname: 
+		(QName(package-qname-parts*), spxmodulename) -> <get-module-untyped-qname>(package-qname-parts*, spxmodulename)			
+		
+	
 	get-module-untyped-qname : 
-		p@(package-qname-parts*, spxmodulename) ->QName(<conc>( package-qname-parts* , [modname]))
+		p@(package-qname-parts*, spxmodulename) ->QName(<conc>(package-qname-parts* , [modname]))
 		where 
 	 		<is-list>package-qname-parts* 	
 			; if <is-string>spxmodulename then 
-	 				modname := spxmodulename 
+ 				modname := spxmodulename  
  			  else 
  			  	!spxmodulename => SPXModuleName(modname-string)
-	 			  ; modname := modname-string 
+ 			  	; modname := modname-string 
  			  <+ 
 	 		    dbg-symboltable(!"Type| Illegal <spxmodulename> argument in get-module-untyped-qname " | "get-module-untyped-qname" , <debug-level-ERROR>)
 	 		    ; fail
@@ -70,6 +75,5 @@
 			dbg-symboltable(! $[Type| FAIL |get-module-untyped-qname failed to cast  [<print-as-string>p] to [<print-as-string>ModuleType()]] | "get-module-untyped-qname" , <debug-level-WARNING>)
 			; fail 	
 
-	get-module-untyped-qname: 
-		(QName(package-qname-parts*), spxmodulename) -> <get-module-untyped-qname>(package-qname-parts*, spxmodulename)
-	 					
\ No newline at end of file
+
+	
\ No newline at end of file

From m.dejonge at tudelft.nl  Sun Nov  4 11:14:26 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Sun, 04 Nov 2012 10:14:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25671 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor
Message-ID: <20121104101426.514997F8020@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Sun Nov  4 10:14:24 2012
New Revision: 25671
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25671&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Fri Nov  2 21:35:06 2012	(r25670)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Sun Nov  4 10:14:24 2012	(r25671)
@@ -29,13 +29,4 @@
   builder  : "Generate signature (abstract, for selection)" = generate-signature-abstract (openeditor) (realtime)
   builder  : "Generate signature (concrete, for selection)" = generate-signature-concrete (openeditor) (realtime)
 
-refactorings
-
-  pretty-print : pp-templatelang-string
-
-  // refactoring ID : "Rename Entity" = rename-entity (source) (cursor)
-  //   shortcut : "org.eclipse.jdt.ui.edit.text.java.rename.element"
-  //   input
-  //     identifier : "new name" = ""
-
   on save: generate-all

From m.dejonge at tudelft.nl  Sun Nov  4 12:17:34 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Sun, 04 Nov 2012 11:17:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25672 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor
Message-ID: <20121104111734.94D19108C01C@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Sun Nov  4 11:17:33 2012
New Revision: 25672
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25672&sc=1

Log:
adaptions to conform more strict .esv syntax

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-References.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Syntax.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Sun Nov  4 10:14:24 2012	(r25671)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Sun Nov  4 11:17:33 2012	(r25672)
@@ -2,14 +2,7 @@
 
 imports Stratego-Sugar-Completions.generated
 
-references
-                                                                   
-  // This file can be used for custom reference resolving rules.   
-  // See the imported file for a brief introduction and examples.
-
-  completion proposer : editor-complete
-  
-  identifier lexical : [a-zA-Z\_][a-zA-Z0-9\'\-\_]*\*?
+completions
 
 /* TODO: enable completion triggers in a later release?
   completion trigger : "->[ \n\t]*[A-Za-z]"
@@ -23,13 +16,8 @@
   completion trigger : ":[ \n\t]*[A-Za-z]"
   completion trigger : ":= [A-Za-z]"
 */
-                                                                                 
-  reference _ : editor-resolve
-
-  hover _ : editor-hover
 
-
-completions
+  completion proposer : editor-complete
     
   completion template Module: 
     "module" " " <name> "\n\nstrategies\n\n\t" (blank)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-References.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-References.esv	Sun Nov  4 10:14:24 2012	(r25671)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-References.esv	Sun Nov  4 11:17:33 2012	(r25672)
@@ -6,4 +6,6 @@
                                                                                  
   reference _ : editor-resolve
 
-  hover _ : editor-hover
\ No newline at end of file
+  hover _ : editor-hover
+  
+  

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Syntax.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Syntax.esv	Sun Nov  4 10:14:24 2012	(r25671)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Syntax.esv	Sun Nov  4 11:17:33 2012	(r25672)
@@ -1,6 +1,8 @@
 module Stratego-Sugar-Syntax
 
 language
+
+  identifier lexical : [a-zA-Z\_][a-zA-Z0-9\'\-\_]*\*?
                   
   line comment  : "//"
   block comment : "/*" * "*/"

From m.dejonge at tudelft.nl  Sun Nov  4 17:02:44 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Sun, 04 Nov 2012 16:02:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25673 - in
	spoofax-imp/trunk: org.strategoxt.imp.generator/src/syntax
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/s...
Message-ID: <20121104160244.680C0CC342@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Sun Nov  4 16:02:44 2012
New Revision: 25673
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25673&sc=1

Log:
semantic nodes in proposer

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSyntactic.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ParseConfigReuser.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Sun Nov  4 11:17:33 2012	(r25672)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/CompletionsService.sdf	Sun Nov  4 16:02:44 2012	(r25673)
@@ -21,7 +21,7 @@
 
     "completion" "trigger" ":" PropertyValue OptCompletionAnno -> CompletionRule {cons("CompletionTrigger")}
 
-    "completion" "proposer" ":" StrategoCall -> CompletionRule {cons("CompletionProposer")}
+    "completion" "proposer" SemanticNode* ":" StrategoCall -> CompletionRule {cons("CompletionProposer")}
 
     "completion" "keyword" ":" PropertyValue OptCompletionAnno -> CompletionRule {cons("CompletionKeyword")}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java	Sun Nov  4 11:17:33 2012	(r25672)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ContentProposerFactory.java	Sun Nov  4 16:02:44 2012	(r25673)
@@ -55,24 +55,29 @@
 
 	@Override
 	public IContentProposer create(Descriptor descriptor, SGLRParseController controller) throws BadDescriptorException {
-		String completionFunction = descriptor.getProperty("CompletionProposer", null);
+		IStrategoAppl aCompletionProposer = TermReader.findTerm(descriptor.getDocument(), "CompletionProposer");
+		IStrategoTerm[] semanticNodes;
+		String completionFunction;
+		if(aCompletionProposer.getSubtermCount()>=2){
+			semanticNodes = termAt(aCompletionProposer, 0).getAllSubterms();
+			completionFunction = termContents(termAt(aCompletionProposer, 1));
+		}
+		else { //backwards compatibility
+			semanticNodes = new IStrategoTerm[0];
+			completionFunction = termContents(termAt(aCompletionProposer, 0));			
+		}
 		StrategoObserver feedback = descriptor.createService(StrategoObserver.class, controller);
-
 		Pattern identifierLexical = SyntaxPropertiesFactory.readIdentifierLexical(descriptor, true);
-
 		Set<String> completionKeywords = readCompletionKeywords(descriptor);
 		Set<Completion> templates = readCompletionTemplates(descriptor);
-
 		for (Completion template : templates) {
 			completionKeywords.remove(template.getPrefix());
 		}
 		for (String keyword : completionKeywords) {
 			templates.add(Completion.makeKeyword(keyword));
 		}
-
 		registerListener(descriptor, controller);
-
-		return new ContentProposer(feedback, completionFunction, identifierLexical, templates);
+		return new ContentProposer(controller, feedback, completionFunction, semanticNodes, identifierLexical, templates);
 	}
 
 	private static void registerListener(Descriptor descriptor, SGLRParseController controller)

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Sun Nov  4 11:17:33 2012	(r25672)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Sun Nov  4 16:02:44 2012	(r25673)
@@ -113,7 +113,7 @@
 		if (currentAst == null) forceInitialParse();
 		return currentAst;
 	}
-	
+		
 	public void internalSetAst(IStrategoTerm ast) {
 		currentAst = ast;
 		errorHandler.setRecoveryFailed(false);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Sun Nov  4 11:17:33 2012	(r25672)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Sun Nov  4 16:02:44 2012	(r25673)
@@ -26,6 +26,7 @@
 import org.eclipse.swt.graphics.Point;
 import org.eclipse.ui.progress.UIJob;
 import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.jsglr.client.ParseTable;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
@@ -89,14 +90,16 @@
 		return identifierLexical;
 	}
 
-	public ContentProposer(StrategoObserver observer, String completionFunction, Pattern identifierLexical, Set<Completion> templates) {
+	public ContentProposer(SGLRParseController parseController, StrategoObserver observer, String completionFunction, 
+			IStrategoTerm[] semanticNodes, Pattern identifierLexical, Set<Completion> templates) {
 		this.observer = observer;
 		this.identifierLexical = identifierLexical;
 		
 		//share the same reuser for performance
-		ParseConfigReuser sglrReuser = new ParseConfigReuser();		
+		ParseTable pt = parseController != null? parseController.getParser().getParseTable() : null;
+		ParseConfigReuser sglrReuser = new ParseConfigReuser(pt);		
 		this.syntacticProposer = new ContentProposerSyntactic(templates, sglrReuser);
-		this.semanticProposer = new ContentProposerSemantic(observer, completionFunction, new IStrategoTerm[0], sglrReuser); //TODO semantic nodes
+		this.semanticProposer = new ContentProposerSemantic(observer, completionFunction, semanticNodes, sglrReuser); //TODO semantic nodes
 	}
 
 	public ICompletionProposal[] getContentProposals(final IParseController controller, final int offset, final ITextViewer viewer) {
@@ -261,7 +264,7 @@
 	}
 	
 	public ContentProposal[] getTemplateProposalsForSort(String wantedSort, ITextViewer viewer) {
-		Set<Completion> templatesForSort = syntacticProposer.getTemplateProposalsForSort(getParser(controller), wantedSort, viewer);
+		Set<Completion> templatesForSort = syntacticProposer.getTemplateProposalsForSort(getParser(controller), wantedSort);
 		final Set<ContentProposal> results = new HashSet<ContentProposal>();
 		for (Completion proposal : templatesForSort) {
 			results.add(new ContentProposal(this, proposal, viewer));

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Sun Nov  4 11:17:33 2012	(r25672)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Sun Nov  4 16:02:44 2012	(r25673)
@@ -13,16 +13,18 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashSet;
+import java.util.Iterator;
 import java.util.Set;
 
-import org.eclipse.core.runtime.NullProgressMonitor;
 import org.eclipse.imp.parser.IParseController;
 import org.spoofax.interpreter.core.InterpreterErrorExit;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.core.InterpreterExit;
 import org.spoofax.interpreter.core.Tools;
 import org.spoofax.interpreter.core.UndefinedStrategyException;
+import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoConstructor;
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoString;
@@ -30,14 +32,10 @@
 import org.spoofax.interpreter.terms.IStrategoTuple;
 import org.spoofax.interpreter.terms.ITermFactory;
 import org.spoofax.jsglr.client.Frame;
-import org.spoofax.jsglr.client.ParseException;
 import org.spoofax.jsglr.client.imploder.ImploderAttachment;
 import org.spoofax.jsglr.client.imploder.Tokenizer;
 import org.spoofax.jsglr.io.SGLR;
 import org.spoofax.jsglr.shared.ArrayDeque;
-import org.spoofax.jsglr.shared.BadTokenException;
-import org.spoofax.jsglr.shared.SGLRException;
-import org.spoofax.jsglr.shared.TokenExpectedException;
 import org.spoofax.terms.StrategoTerm;
 import org.spoofax.terms.TermFactory;
 import org.spoofax.terms.TermTransformer;
@@ -102,7 +100,7 @@
 	public ContentProposerSemantic(StrategoObserver observer, String completionFunction, IStrategoTerm[] semanticNodes, ParseConfigReuser sglrReuser){
 		this.completionFunction = completionFunction;
 		this.observer = observer;
-		this.semanticNodes = semanticNodes;
+		this.semanticNodes = extendWithInjections(semanticNodes);
 		this.documentPrefix = "";
 		this.documentSuffix = "";
 		this.proposals = new java.util.HashSet<Completion>();
@@ -115,7 +113,6 @@
 		this.startOffsetCompletionToken = -1;
 	}
 
-
 	public Set<Completion> getSemanticCompletions(IParseController controller, String documentPrefix, String completionPrefix, String documentSuffix) { 
 		this.results = null;
 		if(!this.documentPrefix.equals(documentPrefix) || !this.documentSuffix.equals(documentSuffix)){ 
@@ -125,23 +122,33 @@
 			errorMessage = null;
 			
 			//calculate 'empty string' proposals
-			Set<IStrategoTerm> inputTerms = constructCompletionInputTerms(ContentProposer.getParser(controller), documentPrefix, completionPrefix, documentSuffix);
-			Set<IStrategoTerm> proposalLists = constructOutputTerms(controller, inputTerms);						
-			Set<Completion> proposals = constructProposals(proposalLists);
+			Set<Completion> proposals = calculateProposals(controller, documentPrefix, completionPrefix, documentSuffix, this.semanticNodes, false);
 
 			//store results for reuse
 			this.proposals = proposals;
 			this.documentPrefix = documentPrefix;
 			this.documentSuffix = documentSuffix;
-			
-			//store results for print tip
-			setCompletionContexts(inputTerms);
 		}	
 		this.results = filterProposals(completionPrefix);
 		return this.results;
 	}
+
+
+	private Set<Completion> calculateProposals(IParseController controller, String documentPrefix,
+			String completionPrefix, String documentSuffix, IStrategoTerm[] semanticNodes, boolean isRequiredMatch) {
+		Set<IStrategoTerm> inputTerms = constructCompletionInputTerms(ContentProposer.getParser(controller), 
+				documentPrefix, completionPrefix, documentSuffix, semanticNodes, isRequiredMatch);
+		Set<IStrategoTerm> proposalLists = constructOutputTerms(controller, inputTerms);						
+		Set<Completion> proposals = constructProposals(proposalLists);
+
+		//store results for print tip
+		setCompletionContexts(inputTerms);
+		return proposals;
+	}
 		
-	private Set<IStrategoTerm> constructCompletionInputTerms(SGLRParseController parseController, String documentPrefix, String completionPrefix, String documentSuffix) {	
+	private Set<IStrategoTerm> constructCompletionInputTerms(SGLRParseController parseController, 
+			String documentPrefix, String completionPrefix, String documentSuffix, 
+			IStrategoTerm[] semanticNodes, boolean isRequiredMatch) {	
 
 		this.startOffsetCompletionToken = documentPrefix.length(); 
 
@@ -150,10 +157,10 @@
 		//so that they can be used as input to the editor-complete rule.
 		//Also constructs and stores the AST of the document with the completion token filled in.
 		Set<IStrategoTerm> completionContexts = constructCompletionContexts(parseController, documentPrefix, completionPrefix, documentSuffix); 
-		completionContexts = filterLeafnodes(completionContexts); //remove IStrategoString("completion123"), not sufficient context, apparently a identifier is not expected 
-		completionContexts = removeDuplicatedTerms(completionContexts); //example: [Sort(Id("c123")), Id("c123"), "x"] => [Sort(Id("c123"))]
-		completionContexts = focusCompletionContexts(completionContexts); //example: Module( ...Assign(Var("i"), FunCall(Var("c123"))) ...) => FunCall(Var("c123"))
-					
+		
+		ArrayList<NodeMapping<String>> mappings = InputTermBuilder.createNodeMappings(semanticNodes);
+		completionContexts = focusCompletionContexts(completionContexts, mappings, isRequiredMatch); 
+		
 		//System.out.println(completionContexts);
 
 		//Build input tuples for editor-complete rule, e.g. (analyzed-context, position, analyzed-ast, path, project-path)
@@ -172,7 +179,7 @@
 		parseController.getParseLock().lock();
 		try {
 			//sets AST for document (possible a slightly inferior AST with the empty string parsed instead of the completion identifier) 
-			setCompletionAst(parseController, documentPrefix, completionPrefix, documentSuffix);
+			currentAST = parseController.getCurrentAst(); 
 			if(this.currentAST == null)
 				return new java.util.HashSet<IStrategoTerm>();
 
@@ -206,84 +213,47 @@
 		return completionContexts;
 	}
 
-
-	private void setCompletionAst(SGLRParseController parseController, String documentPrefix, String completionPrefix, String documentSuffix) 
-			throws BadTokenException, TokenExpectedException, ParseException, SGLRException {		
-		this.currentAST = null;
-		//sets document
-		String document = documentPrefix + COMPLETION_TOKEN + documentSuffix;
-		if(completionPrefix.equals("") && document.length() < 2500){
-			try{
-				currentAST = parseController.parse(document, new NullProgressMonitor());
-				//(IStrategoTerm)sglr.parse(document, null, parseController.getParser().getStartSymbol(), true, this.completionTokenOffset);
-				return;
-			} catch (Exception e) {
-				//try completion AST of parse controller
-			}
-		}
-		//Better performance but less precise in case the completion-prefix is empty.
-		//That is, the empty string is parsed at the cursor location instead of the completion token.
-		currentAST = parseController.getCurrentAst(); 
-	}
-
-	private Set<IStrategoTerm> filterLeafnodes(Set<IStrategoTerm> completionContexts) {
-		Set<IStrategoTerm> result = new java.util.HashSet<IStrategoTerm>();
-		for (IStrategoTerm subtree : completionContexts) {
-			if(subtree.getSubtermCount() > 0)
-				result.add(subtree);
-		}
-		return result;
-	}
-
-	private Set<IStrategoTerm> removeDuplicatedTerms(Set<IStrategoTerm> reductions) {
-		ArrayList<IStrategoTerm> reductionList = new ArrayList<IStrategoTerm>(reductions);
-		for (IStrategoTerm trm : reductionList) {
-			if(reductions.contains(trm) && reductions.size() > 1) //i.e., trm has not already been removed, possible removal terms
-				reductions = removeDuplicatedTerms(trm.getAllSubterms(), reductions);
-		}
-		return reductions;
-	}
-	
-	private Set<IStrategoTerm> removeDuplicatedTerms(IStrategoTerm[] coveredTerms, Set<IStrategoTerm> reductions) {
-		if(reductions.size() <= 1)
-			return reductions; 
-		for (int i = 0; i < coveredTerms.length; i++) {
-			IStrategoTerm trm = coveredTerms[i];
-			reductions.remove(trm);
-		}
-		for (int i = 0; i < coveredTerms.length; i++) {
-			IStrategoTerm trm = coveredTerms[i];
-			reductions = removeDuplicatedTerms(trm.getAllSubterms(), reductions);
-		}
-		return reductions;
-	}
-
-
-	private Set<IStrategoTerm> focusCompletionContexts(Set<IStrategoTerm> completionContexts) {		
-		ArrayList<NodeMapping<String>> mappings = InputTermBuilder.createNodeMappings(this.semanticNodes);
+	private Set<IStrategoTerm> focusCompletionContexts(Set<IStrategoTerm> completionContexts, 
+			ArrayList<NodeMapping<String>> mappings, boolean isRequiredMatch) {
 		Set<IStrategoTerm> result = new java.util.HashSet<IStrategoTerm>();
 		for (IStrategoTerm subtree : completionContexts) {
-			result.add(focusCompletionContext(mappings, subtree));
+			IStrategoTerm focusedContext = focusCompletionContext(subtree, mappings, isRequiredMatch);
+			if(focusedContext != null)
+				result.add(focusedContext);
 		}
 		return result;
 	}
 	
-	private IStrategoTerm focusCompletionContext(ArrayList<NodeMapping<String>> mappings, IStrategoTerm completionContext) {
-		if(InputTermBuilder.isMatchOnConstructorOrSort(mappings, completionContext))
-			return completionContext;
-		for (int i = 0; i < completionContext.getSubtermCount(); i++) {
-			IStrategoTerm subTerm = completionContext.getSubterm(i);
+	private IStrategoTerm focusCompletionContext(IStrategoTerm term, 
+			ArrayList<NodeMapping<String>> mappings, boolean isRequiredMatch) {
+		if(isSortConstructorMatch(term, mappings))
+			return term; //largest syntactic construct that matches sort and form
+		for (int i = 0; i < term.getSubtermCount(); i++) {
+			IStrategoTerm subTerm = term.getSubterm(i);
 			int startOffset = getStartOffset(subTerm);
 			int endOffset = getEndOffset(subTerm);
 			if(startOffset <= getCompletionOffsetMid() && getCompletionOffsetMid() <= endOffset){
-				return focusCompletionContext(mappings, subTerm);
+				IStrategoTerm childResult = focusCompletionContext(subTerm, mappings, isRequiredMatch);
+				if(childResult != null)
+					return childResult;
 			}
 		}
-		if(completionContext.getSubtermCount() == 0 && ParentAttachment.getParent(completionContext) != null)
-			return ParentAttachment.getParent(completionContext); //add a bit of context
-		return completionContext;
+		if(!checkSortCriterion(term, mappings, isRequiredMatch))
+			return null;
+		if(term.getSubtermCount() == 0)
+			return null; //a bit of context is required
+		return term;
+	}
+
+
+	private boolean isSortConstructorMatch(IStrategoTerm term,
+			ArrayList<NodeMapping<String>> mappings) {
+		return InputTermBuilder.isMatchOnConstructorOrSort(mappings, term);
 	}
 
+	private boolean checkSortCriterion(IStrategoTerm trm, ArrayList<NodeMapping<String>> mappings, boolean isRequiredMatch){
+		return !isRequiredMatch || isSortConstructorMatch(trm, mappings);
+	}
 	
 	private Set<IStrategoTerm> constructInputTerms(Set<IStrategoTerm> completionContexts) {
 		Set<IStrategoTerm> inputTerms = new java.util.HashSet<IStrategoTerm>();
@@ -706,6 +676,48 @@
 	protected static boolean isPartOfListPrefixAt(IStrategoTerm node, int offset) {
 		return node.isList() && offset >= Tokenizer.findLeftMostLayoutToken(getLeftToken(node)).getStartOffset();
 	}
+	
+	private IStrategoTerm[] extendWithInjections(IStrategoTerm[] semanticNodes) {
+		final ParentTermFactory factory = new ParentTermFactory(Environment.getTermFactory());
+		Set<String> additionalSorts = new HashSet<String>();
+		for (IStrategoTerm semanticNode : semanticNodes) {
+			if(TermReader.hasConstructor((IStrategoAppl)semanticNode, "Sort")){
+				String sort = TermReader.termContents(semanticNode);
+				additionalSorts.addAll(sglrReuser.getInjectionsFor(sort));
+				additionalSorts.remove(sort);
+			}
+		}
+
+		IStrategoTerm[] result = Arrays.copyOf(semanticNodes, additionalSorts.size() + semanticNodes.length);
+		int index = semanticNodes.length;
+		for (String srt : additionalSorts) {
+			result[index] =  factory.makeAppl(
+				factory.makeConstructor("Sort", 1), 
+				factory.makeList(factory.makeString(srt))
+			);
+			index++;
+		}
+		return result;
+	}
 
 
+
+//
+//	public Set<Completion> getSemanticProposalsForSort(IParseController controller, String sort, String programPrefix, String trustedSuffix) {
+//		final ParentTermFactory factory = new ParentTermFactory(Environment.getTermFactory());
+//		
+//		Set<String> injections = sglrReuser.getInjectionsFor(sort);
+//		Iterator<String> itInjections = injections.iterator();
+//		
+//		IStrategoTerm[] semanticSorts = new IStrategoTerm[injections.size()];
+//		for (int i = 0; i < semanticSorts.length; i++) {
+//			semanticSorts[i] =  factory.makeAppl(
+//				factory.makeConstructor("Sort", 1), 
+//				factory.makeList(factory.makeString(itInjections.next()))
+//			);
+//		}
+//
+//		//calculate 'empty string' proposals
+//		return calculateProposals(controller, programPrefix, "", trustedSuffix, semanticSorts, true);
+//	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSyntactic.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSyntactic.java	Sun Nov  4 11:17:33 2012	(r25672)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSyntactic.java	Sun Nov  4 16:02:44 2012	(r25673)
@@ -49,17 +49,12 @@
 
 	private final Map<String, Boolean> testedSorts; //for reuse purpose
 	
-	private final Map<String, Set<String>> injections; // cached mapping from sort to all sorts injecting into that sort, e.g. ClassBodyDec -> MethodDec
-	
-	
-	
 	public ContentProposerSyntactic(Set<Completion> templates, ParseConfigReuser sglrReuser){
 		this.templates = removeArtificialSortTemplates(templates);
 		this.errorMessage = null;
 		this.acceptedProposals = new java.util.HashSet<Completion>();
 		this.rejectedProposals = new java.util.HashSet<Completion>();
 		this.sglrReuser = sglrReuser;
-		this.injections = new HashMap<String, Set<String>>();
 		this.testedSorts = new HashMap<String, Boolean>();
 	}
 	
@@ -121,8 +116,7 @@
 	}
 
 
-	private boolean checkSyntacticContext(SGLRParseController parseController, String documentPrefix,
-			Completion proposal, String documentSuffix) {		
+	private boolean checkSyntacticContext(SGLRParseController parseController, String documentPrefix, Completion proposal, String documentSuffix) {						
 		SGLR parser = new SGLR(parseController.getParser().getParser().getTreeBuilder(), parseController.getParser().getParser().getParseTable());
 		parseController.scheduleParserUpdate(REINIT_PARSE_DELAY, true); // cancel current parse
 		parseController.getParseLock().lock();
@@ -169,8 +163,8 @@
 	private String createProposalParseString(Completion proposal) {
 		String sort = proposal.getSort();
 		String proposalString; 
-		if(proposal.getSort() != null){
-			proposalString = ARTIFICIAL_SORT_STRING_START + sort + ARTIFICIAL_SORT_STRING_END;
+		if(sort != null){
+			proposalString = createArtificialParseStringForSort(sort);
 		}
 		else{
 			proposalString = proposal.getNewText();
@@ -179,6 +173,13 @@
 		return proposalString;
 	}
 
+	public static String createArtificialParseStringForSort(String sort) {
+		if(sort == null || sort.equals(""))
+			return null;
+		String proposalString = ARTIFICIAL_SORT_STRING_START + sort + ARTIFICIAL_SORT_STRING_END;
+		return proposalString;
+	}
+
 	private boolean leftContextAcceptsProposal(SGLR parser, String documentPrefix, String proposalString, String documentSuffix) {
 		parser.setCompletionParse(true, documentPrefix.length() + 3);
 		String proposedDocument = documentPrefix + proposalString + WHITESPACE_SEPARATION + documentSuffix;
@@ -273,20 +274,13 @@
 		return templatesWithoutSort;
 	}
 	
-	public Set<Completion> getTemplateProposalsForSort(SGLRParseController parseController, String wantedSort, ITextViewer viewer) {
+	public Set<Completion> getTemplateProposalsForSort(SGLRParseController parseController, String wantedSort) {
 		// Add templates for sorts injected into wantedSort.
 		//  `sort -> wantedSort' => add templates for sort
 		//  `sub -> sort' => add templates for sub too
 
 		final Set<Completion> results = new HashSet<Completion>();
-		Set<String> wantedSorts = injections.get(wantedSort);
-
-		if (wantedSorts == null) {
-			final ParseTable pt = parseController.getParser().getParseTable();
-			final IncrementalSortSet iss = IncrementalSortSet.create(pt, true, false, wantedSort);
-			wantedSorts = iss.getIncrementalSorts();
-			injections.put(wantedSort, wantedSorts);
-		}
+		Set<String> wantedSorts = sglrReuser.getInjectionsFor(wantedSort); //injections.get(wantedSort);
 
 		for (Completion proposal : templates) {
 			if (wantedSorts.contains(proposal.getSort())) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ParseConfigReuser.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ParseConfigReuser.java	Sun Nov  4 11:17:33 2012	(r25672)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ParseConfigReuser.java	Sun Nov  4 16:02:44 2012	(r25673)
@@ -1,6 +1,12 @@
 package org.strategoxt.imp.runtime.services;
 
+import java.util.HashMap;
+import java.util.Map;
+import java.util.Set;
+
 import org.spoofax.jsglr.client.Frame;
+import org.spoofax.jsglr.client.ParseTable;
+import org.spoofax.jsglr.client.incremental.IncrementalSortSet;
 import org.spoofax.jsglr.io.SGLR;
 import org.spoofax.jsglr.shared.ArrayDeque;
 
@@ -17,6 +23,10 @@
 
 	private ArrayDeque<Frame> parserConfig;
 
+	private final Map<String, Set<String>> injections; // cached mapping from sort to all sorts injecting into that sort, e.g. ClassBodyDec -> MethodDec
+	
+	private final ParseTable pt;
+
 	public String getDocumentPrefix() {
 		return documentPrefix;
 	}
@@ -25,10 +35,12 @@
 		return lastOffset;
 	}
 
-	public ParseConfigReuser(){
+	public ParseConfigReuser(ParseTable pt){
 		this.documentPrefix = "";
 		this.lastOffset = Integer.MAX_VALUE;
 		this.parserConfig = null;
+		this.injections = new HashMap<String, Set<String>>();
+		this.pt = pt;
 	}
 	
 	public ArrayDeque<Frame> parsePrefix(SGLR parser, boolean useRecovery, boolean storeConfig, String document, int endOffset) {
@@ -71,4 +83,14 @@
 		stackNodes.addAll(parserConfig);
 		return stackNodes;
 	}
+
+	public Set<String> getInjectionsFor(String wantedSort) {
+		Set<String> wantedSorts = injections.get(wantedSort);
+		if (wantedSorts == null) {
+			final IncrementalSortSet iss = IncrementalSortSet.create(pt, true, false, wantedSort);
+			wantedSorts = iss.getIncrementalSorts();
+			injections.put(wantedSort, wantedSorts);
+		}
+		return wantedSorts;
+	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	Sun Nov  4 11:17:33 2012	(r25672)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	Sun Nov  4 16:02:44 2012	(r25673)
@@ -137,7 +137,9 @@
 					if (currentOrigin == origin1) return current;
 					IStrategoTerm currentImploderOrigin = ImploderAttachment.getImploderOrigin(currentOrigin);
 					IStrategoTerm imploderOrigin1 = ImploderAttachment.getImploderOrigin(origin1);
-					if (
+					if (	
+							currentImploderOrigin != null &&
+							imploderOrigin1 != null &&
 							ImploderAttachment.getLeftToken(currentImploderOrigin).getStartOffset() == ImploderAttachment.getLeftToken(imploderOrigin1).getStartOffset() &&
 							ImploderAttachment.getRightToken(currentImploderOrigin).getEndOffset() == ImploderAttachment.getRightToken(imploderOrigin1).getEndOffset()
 					){

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java	Sun Nov  4 11:17:33 2012	(r25672)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/test/org/strategoxt/imp/runtime/services/TestFilterCompletions.java	Sun Nov  4 16:02:44 2012	(r25673)
@@ -29,7 +29,7 @@
 
 	@Before
 	public void setUp() throws Exception {
-		cp = new ContentProposer(null, null, identifierLexical, null);
+		cp = new ContentProposer(null, null, null, identifierLexical, null);
 		completions = new HashSet<Completion>();
 		results = null;
 	}

From oskarvanrest at gmail.com  Mon Nov  5 02:19:12 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 01:19:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25674 - in
	modelware-bridging/trunk/org.spoofax.modelware.gmf: .
	META-INF schema src/org/spoofax/modelware/gmf
	src/org/spoofax/modelware/gmf/editorservices src/org/spoofax...
Message-ID: <20121105011912.F25D17F812C@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 01:19:11 2012
New Revision: 25674
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25674&sc=1

Log:
Synchronizer extension point. LanguageRegistry. EditorPairObserver.

Added:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/plugin.xml
   modelware-bridging/trunk/org.spoofax.modelware.gmf/schema/
   modelware-bridging/trunk/org.spoofax.modelware.gmf/schema/org.spoofax.modelware.gmf.synchronizer.exsd
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java
      - copied, changed from r25655, modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeUtil.java
      - copied, changed from r25653, modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairObserver.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Language.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/LanguageRegistry.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/ModelChangeListener.java
      - copied, changed from r25655, modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/RuntimeActivator.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/UndoRedoSynchronisation.java
Deleted:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java
Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/META-INF/MANIFEST.MF
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Debouncer.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/TextSelectionChangedListener.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/UndoRedoSynchronization.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResourceFactory.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/META-INF/MANIFEST.MF
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/META-INF/MANIFEST.MF	Sun Nov  4 16:02:44 2012	(r25673)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/META-INF/MANIFEST.MF	Mon Nov  5 01:19:11 2012	(r25674)
@@ -14,8 +14,9 @@
  org.eclipse.emf.compare.diff,
  org.eclipse.ui.ide,
  org.eclipse.ui.editors
-Bundle-ActivationPolicy: lazy
 Bundle-RequiredExecutionEnvironment: JavaSE-1.7
 Export-Package: org.spoofax.modelware.gmf,
  org.spoofax.modelware.gmf.editorservices,
  org.spoofax.modelware.gmf.resource
+Bundle-Activator: org.spoofax.modelware.gmf.RuntimeActivator
+Bundle-ActivationPolicy: lazy

Added: modelware-bridging/trunk/org.spoofax.modelware.gmf/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/plugin.xml	Mon Nov  5 01:19:11 2012	(r25674)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<?eclipse version="3.4"?>
+<plugin>
+   <extension-point id="org.spoofax.modelware.gmf.synchronizer" name="Synchronizer" schema="schema/org.spoofax.modelware.gmf.synchronizer.exsd"/>
+   <extension point="org.eclipse.ui.startup">
+      <startup
+            class="org.spoofax.modelware.gmf.RuntimeActivator">
+      </startup>
+   </extension>
+</plugin>

Added: modelware-bridging/trunk/org.spoofax.modelware.gmf/schema/org.spoofax.modelware.gmf.synchronizer.exsd
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/schema/org.spoofax.modelware.gmf.synchronizer.exsd	Mon Nov  5 01:19:11 2012	(r25674)
@@ -0,0 +1,120 @@
+<?xml version='1.0' encoding='UTF-8'?>
+<!-- Schema file written by PDE -->
+<schema targetNamespace="org.spoofax.modelware.gmf" xmlns="http://www.w3.org/2001/XMLSchema">
+<annotation>
+      <appinfo>
+         <meta.schema plugin="org.spoofax.modelware.gmf" id="org.spoofax.modelware.gmf.synchronizer" name="Synchronizer"/>
+      </appinfo>
+      <documentation>
+         [Enter API information here.]
+      </documentation>
+   </annotation>
+
+   <element name="extension">
+      <annotation>
+         <appinfo>
+            <meta.element />
+         </appinfo>
+      </annotation>
+      <complexType>
+         <choice minOccurs="1" maxOccurs="unbounded">
+            <element ref="synchronizer"/>
+         </choice>
+         <attribute name="point" type="string" use="required">
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name="id" type="string">
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name="name" type="string">
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+               <appinfo>
+                  <meta.attribute translatable="true"/>
+               </appinfo>
+            </annotation>
+         </attribute>
+      </complexType>
+   </element>
+
+   <element name="synchronizer">
+      <complexType>
+         <attribute name="textFileExtension" type="string">
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name="domainFileExtension" type="string">
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name="diagramFileExtension" type="string">
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+         <attribute name="packageName" type="string">
+            <annotation>
+               <documentation>
+                  
+               </documentation>
+            </annotation>
+         </attribute>
+      </complexType>
+   </element>
+
+   <annotation>
+      <appinfo>
+         <meta.section type="since"/>
+      </appinfo>
+      <documentation>
+         [Enter the first release in which this extension point appears.]
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appinfo>
+         <meta.section type="examples"/>
+      </appinfo>
+      <documentation>
+         [Enter extension point usage example here.]
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appinfo>
+         <meta.section type="apiinfo"/>
+      </appinfo>
+      <documentation>
+         [Enter API information here.]
+      </documentation>
+   </annotation>
+
+   <annotation>
+      <appinfo>
+         <meta.section type="implementation"/>
+      </appinfo>
+      <documentation>
+         [Enter information about supplied implementation of this extension point.]
+      </documentation>
+   </annotation>
+
+
+</schema>

Copied and modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java (from r25655, modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java)
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridge.java	Thu Nov  1 12:44:56 2012	(r25655, copy source)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -1,64 +1,49 @@
 package org.spoofax.modelware.gmf;
 
 import org.eclipse.emf.ecore.EObject;
+import org.eclipse.emf.ecore.impl.EPackageRegistryImpl;
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.commands.ICommandService;
-import org.spoofax.interpreter.terms.IStrategoAppl;
-import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.modelware.emf.Model2Term;
 import org.spoofax.modelware.emf.Term2Model;
 import org.spoofax.modelware.emf.compare.CompareUtil;
+import org.spoofax.modelware.gmf.EditorPair.BridgeEvent;
 import org.spoofax.modelware.gmf.editorservices.SaveSynchronization;
 import org.spoofax.modelware.gmf.editorservices.UndoRedoSynchronization;
 import org.spoofax.terms.TermFactory;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.services.ITextReplacer;
-import org.strategoxt.lang.Context;
 
-public class GMFBridge {
-
-	private static GMFBridge instance = new GMFBridge();
-	public static TermFactory termFactory = new TermFactory();
+/**
+ * @author Oskar van Rest
+ */
+public class Bridge {
+	
+	private static Bridge instance = new Bridge();
+	private TermFactory termFactory = new TermFactory();
 
-	private GMFBridge() {
+	private Bridge() {
 		ICommandService service = (ICommandService) PlatformUI.getWorkbench().getService(ICommandService.class);
 		service.addExecutionListener(new SaveSynchronization());
 		service.addExecutionListener(new UndoRedoSynchronization());
 	}
 
-	public static GMFBridge getInstance() {
+	public static Bridge getInstance() {
 		return instance;
 	}
 
-	public IStrategoTerm synchronize(Context context, IStrategoTerm analysedAST, IStrategoString textFilePath, IStrategoString packageName) {
-		EditorPair editorPair = EditorPairRegistry.getInstance().get(textFilePath.stringValue(), packageName.stringValue());
-
-		if (editorPair == null || !(analysedAST instanceof IStrategoAppl)) {
-			return analysedAST;
-		}
-
-		if (editorPair != null && analysedAST instanceof IStrategoAppl) {
-			if (editorPair.getLastAST() == null || !editorPair.getLastAST().equals(analysedAST)) {
-				if (editorPair.getDebouncer().text2modelAllowed()) {
-					term2Model(editorPair, analysedAST);
-				}
-			}
-			editorPair.setLastAST(analysedAST);
-		}
-
-		return analysedAST;
-	}
-
 	public void term2Model(EditorPair editorPair, IStrategoTerm analysedAST) {
+		editorPair.notifyObservers(BridgeEvent.Term2Model);
+		
 		final DiagramEditor diagramEditor = editorPair.getDiagramEditor();
 		
-		EObject newModel = new Term2Model(editorPair.getEPackage()).convert(analysedAST);
-		EObject currentModel = GMFBridgeUtil.getSemanticModel(diagramEditor);
+		EObject newModel = new Term2Model(EPackageRegistryImpl.INSTANCE.getEPackage(editorPair.getLanguage().getPackageName())).convert(analysedAST);
+		EObject currentModel = BridgeUtil.getSemanticModel(diagramEditor);
 
 		if (currentModel == null)
 			return;
@@ -71,14 +56,17 @@
 				diagramEditor.getDiagramEditPart().addNotify();
 			}
 		});
+		
 	}
 	
 	public void model2Term(EditorPair editorPair) {
+		editorPair.notifyObservers(BridgeEvent.Model2Term);
+		
 		final IEditorPart textEditor = editorPair.getTextEditor();
 		final DiagramEditor diagramEditor = editorPair.getDiagramEditor();
 
 		IStrategoTerm currentTerm = EditorState.getEditorFor(textEditor).getCurrentAst();
-		IStrategoTerm newTerm = new Model2Term(GMFBridge.termFactory).convert(GMFBridgeUtil.getSemanticModel(diagramEditor));
+		IStrategoTerm newTerm = new Model2Term(termFactory).convert(BridgeUtil.getSemanticModel(diagramEditor));
 
 		EditorState editor = EditorState.getEditorFor(textEditor);
 		ITextReplacer textReplacer = null;
@@ -87,7 +75,6 @@
 		} catch (BadDescriptorException e) {
 			e.printStackTrace();
 		}
-
-		textReplacer.replaceText(GMFBridge.termFactory.makeList(GMFBridge.termFactory.makeTuple(currentTerm, newTerm)));
+		textReplacer.replaceText(termFactory.makeList(termFactory.makeTuple(currentTerm, newTerm)));
 	}
 }
\ No newline at end of file

Copied and modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeUtil.java (from r25653, modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java)
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/GMFBridgeUtil.java	Thu Nov  1 12:20:54 2012	(r25653, copy source)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeUtil.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -1,5 +1,10 @@
 package org.spoofax.modelware.gmf;
 
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Iterator;
+import java.util.LinkedList;
+
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.IPath;
@@ -13,76 +18,63 @@
 import org.eclipse.ui.IEditorInput;
 import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.IEditorReference;
-import org.eclipse.ui.IWorkbench;
+import org.eclipse.ui.IFileEditorInput;
 import org.eclipse.ui.IWorkbenchPage;
 import org.eclipse.ui.IWorkbenchWindow;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.part.FileEditorInput;
 
-public class GMFBridgeUtil {
+/**
+ * @author Oskar van Rest
+ */
+public class BridgeUtil {
 
 	private static String IMPEditorID = "org.eclipse.imp.runtime.impEditor";
-	
-	public static UniversalEditor findTextEditor(String path) {
-		return (UniversalEditor) findEditor(path, IMPEditorID);
-	}
-	
+
 	public static UniversalEditor findTextEditor(IPath path) {
 		return (UniversalEditor) findEditor(path, IMPEditorID);
 	}
-	
-	public static DiagramEditor findDiagramEditor(String textfilePath, String packageName) {
-		String editorID = packageName + ".diagram.part." + packageName + "DiagramEditorID";
-		
-		String diagramfileExtension = packageName.toLowerCase() + "_diagram";
-		String diagramfilePath = textfilePath.substring(0, textfilePath.lastIndexOf(".")) + diagramfileExtension;
-		DiagramEditor editor = (DiagramEditor) findEditor(diagramfilePath, editorID);
-		
-		if (editor != null)
-			return editor;
-		
-		diagramfilePath = textfilePath + "_diagram";
-		return (DiagramEditor) findEditor(diagramfilePath, editorID);
-	}
 
-	private static IEditorPart findEditor(String path, String editorID) {
-		return findEditor(new Path(path), editorID);
-	}
-	
-	private static IEditorPart findEditor(IPath path, String editorID) {
+	public static IEditorPart findEditor(IPath path, String editorID) {
 		IFile file = ResourcesPlugin.getWorkspace().getRoot().getFileForLocation(path);
-		
+
 		if (file == null)
 			return null;
-		
+
 		IEditorInput editorInput = new FileEditorInput(file);
-		IWorkbenchPage page = getActivePage();
-		
-		IEditorPart editor = null;
-		IEditorReference[] editors = page.findEditors(editorInput, null, IWorkbenchPage.MATCH_INPUT);
-		for (int i = 0; i < editors.length; i++) {
-			if (editors[i].getId().equals(editorID)) {
-				editor = editors[i].getEditor(false);
+
+		Collection<IWorkbenchPage> pages = getAllWorkbenchPages();
+		Iterator<IWorkbenchPage> it = pages.iterator();
+
+		while (it.hasNext()) {
+			IWorkbenchPage page = it.next();
+			IEditorReference[] editors = page.findEditors(editorInput, null, IWorkbenchPage.MATCH_INPUT);
+			for (int i = 0; i < editors.length; i++) {
+				if (editors[i].getId().equals(editorID)) {
+					return editors[i].getEditor(false);
+				}
 			}
 		}
 
-		return editor;
+		return null;
 	}
 
-	public static IWorkbenchPage getActivePage() {
-		IWorkbench wb = PlatformUI.getWorkbench();
-		IWorkbenchWindow win = wb.getWorkbenchWindows()[0]; // TODO: getActiveWorkbenchWindow doesn't work
-		return win.getActivePage();
+	public static Collection<IWorkbenchPage> getAllWorkbenchPages() {
+		Collection<IWorkbenchPage> result = new LinkedList<IWorkbenchPage>();
+		for (IWorkbenchWindow window : PlatformUI.getWorkbench().getWorkbenchWindows()) {
+			result.addAll(Arrays.asList(window.getPages()));
+		}
+		return result;
 	}
 
 	public static Resource getSemanticModelResource(DiagramEditor diagramEditor) {
 		return getResource(diagramEditor, 1);
 	}
-	
+
 	public static Resource getNotationModelResource(DiagramEditor diagramEditor) {
 		return getResource(diagramEditor, 0);
 	}
-	
+
 	private static Resource getResource(DiagramEditor diagramEditor, int i) {
 		TransactionalEditingDomain editingDomain = diagramEditor.getEditingDomain();
 		ResourceSet diagramEditorResourceSet = editingDomain.getResourceSet();
@@ -96,8 +88,24 @@
 		else
 			return null;
 	}
-	
+
 	public static boolean isInitialised(DiagramEditor diagramEditor) {
 		return getSemanticModel(diagramEditor) != null && diagramEditor.getEditorSite().getSelectionProvider() != null;
 	}
+
+	public static String getFilePath(IEditorPart editor) {
+		return getFile(editor).getLocation().toString();
+	}
+
+	public static String getFileExtension(IEditorPart editor) {
+		return getFile(editor).getFileExtension();
+	}
+
+	public static IFile getFile(IEditorPart editor) {
+		if (editor.getEditorInput() instanceof IFileEditorInput) {
+			return ((IFileEditorInput) editor.getEditorInput()).getFile();
+		} else {
+			return null;
+		}
+	}
 }

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Debouncer.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Debouncer.java	Sun Nov  4 16:02:44 2012	(r25673)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Debouncer.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -1,5 +1,8 @@
 package org.spoofax.modelware.gmf;
 
+/**
+ * @author Oskar van Rest
+ */
 public class Debouncer {
 
 	private final int debounceConstant = 500;

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Sun Nov  4 16:02:44 2012	(r25673)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -1,8 +1,15 @@
 package org.spoofax.modelware.gmf;
 
+/**
+ * @author Oskar van Rest
+ */
+import java.util.ArrayList;
+import java.util.Collection;
+
+import org.eclipse.core.commands.operations.OperationHistoryFactory;
 import org.eclipse.emf.ecore.EObject;
-import org.eclipse.emf.ecore.EPackage;
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.ui.IEditorPart;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.modelware.gmf.editorservices.DiagramSelectionChangedListener;
@@ -10,26 +17,34 @@
 
 public class EditorPair {
 
-	private IEditorPart textEditor;
+	enum BridgeEvent { TextLayoutChange, DiagramLayoutChange, Term2Model, Model2Term, TextUndo, DiagramUndo, TextRedo, DiagramRedo};
+	Collection<EditorPairObserver> observers;
+	
+	private UniversalEditor textEditor;
 	private DiagramEditor diagramEditor;
-	private EPackage ePackage;
+	private Language language;
 	private Debouncer debouncer;
 	
 	private EObject semanticModel;
 	private IStrategoTerm lastAST;
 	
-	private SemanticModelContentAdapter semanticModelContentAdapter;
+	private ModelChangeListener semanticModelContentAdapter;
 	private DiagramSelectionChangedListener GMFSelectionChangedListener;
 	private TextSelectionChangedListener spoofaxSelectionChangedListener;
 
-	public EditorPair(IEditorPart textEditor, DiagramEditor diagramEditor, EPackage ePackage) {
+	public EditorPair(UniversalEditor textEditor, DiagramEditor diagramEditor, Language language) {
+		this.observers = new ArrayList<EditorPairObserver>();
+		
 		this.textEditor = textEditor;
 		this.diagramEditor = diagramEditor;
-		this.ePackage = ePackage;
+		this.language = language;
 		this.debouncer = new Debouncer();
 		
 		loadSemanticModel();
 		addSelectionChangeListeners();
+		textEditor.addModelListener(new TextChangeListener(this));
+
+		OperationHistoryFactory.getOperationHistory().addOperationHistoryListener(new OperationalHistoryListener(this));
 	}
 	
 	private void addSelectionChangeListeners() {
@@ -38,7 +53,7 @@
 	}
 
 	public void dispose() {
-		GMFBridgeUtil.getSemanticModel(diagramEditor).eAdapters().remove(semanticModelContentAdapter);
+		BridgeUtil.getSemanticModel(diagramEditor).eAdapters().remove(semanticModelContentAdapter);
 		diagramEditor.getEditorSite().getSelectionProvider().removeSelectionChangedListener(GMFSelectionChangedListener);
 		textEditor.getSite().getSelectionProvider().removeSelectionChangedListener(spoofaxSelectionChangedListener);
 	}
@@ -47,12 +62,12 @@
 		if (semanticModel != null && semanticModel.eAdapters().contains(semanticModelContentAdapter))
 			semanticModel.eAdapters().remove(semanticModelContentAdapter);
 			
-		semanticModel = GMFBridgeUtil.getSemanticModel(diagramEditor);
+		semanticModel = BridgeUtil.getSemanticModel(diagramEditor);
 		if (semanticModel != null)
-			semanticModel.eAdapters().add(semanticModelContentAdapter = new SemanticModelContentAdapter(this));
+			semanticModel.eAdapters().add(semanticModelContentAdapter = new ModelChangeListener(this));
 	}
 
-	public IEditorPart getTextEditor() {
+	public UniversalEditor getTextEditor() {
 		return textEditor;
 	}
 
@@ -60,8 +75,16 @@
 		return diagramEditor;
 	}
 	
-	public EPackage getEPackage() {
-		return ePackage;
+	public IEditorPart getPartner(IEditorPart editor) {
+		if (editor == textEditor)
+			return diagramEditor;
+		else if (editor == diagramEditor)
+			return textEditor;
+		else return null;
+	}
+	
+	public Language getLanguage() {
+		return language;
 	}
 
 	public Debouncer getDebouncer() {
@@ -75,4 +98,19 @@
 	public void setLastAST(IStrategoTerm AST) {
 		this.lastAST = AST;
 	}
+	
+	public void registerObserver(EditorPairObserver observer) {
+		observers.add(observer);
+	}
+	
+	public void unregisterObserver(EditorPairObserver observer) {
+		observers.remove(observer);
+	}
+	
+	public void notifyObservers(BridgeEvent event) {
+		System.out.println(event.toString());
+		for (EditorPairObserver observer : observers) {
+			observer.notify(event);
+		}
+	}
 }
\ No newline at end of file

Added: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairObserver.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairObserver.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -0,0 +1,12 @@
+package org.spoofax.modelware.gmf;
+
+import org.spoofax.modelware.gmf.EditorPair.BridgeEvent;
+
+/**
+ * @author Oskar van Rest
+ */
+public interface EditorPairObserver {
+
+	public abstract void notify(BridgeEvent event);
+	
+}

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java	Sun Nov  4 16:02:44 2012	(r25673)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -4,93 +4,158 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import org.eclipse.emf.ecore.EPackage;
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.IPartListener;
+import org.eclipse.ui.IWorkbenchPage;
 import org.eclipse.ui.IWorkbenchPart;
 
+/**
+ * @author Oskar van Rest
+ */
 public class EditorPairRegistry {
 
 	private static EditorPairRegistry instance = new EditorPairRegistry();
 	private Map<UniversalEditor, EditorPair> mapT = new HashMap<UniversalEditor, EditorPair>();
 	private Map<DiagramEditor, EditorPair> mapD = new HashMap<DiagramEditor, EditorPair>();
-	
+
 	private EditorPairRegistry() {
-		GMFBridgeUtil.getActivePage().addPartListener(new EditorCloseListener());
+		installEditorPartListener();
 	}
-	
+
+	private void installEditorPartListener() {
+		EditorPartListener listener = new EditorPartListener();
+		for (IWorkbenchPage page : BridgeUtil.getAllWorkbenchPages()) {
+			page.addPartListener(listener);
+		}
+	}
+
 	public static EditorPairRegistry getInstance() {
 		return instance;
 	}
-	
+
+	public void add(EditorPair editorPair) {
+		mapT.put(editorPair.getTextEditor(), editorPair);
+		mapD.put(editorPair.getDiagramEditor(), editorPair);
+		System.out.println("add");
+	}
+
 	public EditorPair remove(IEditorPart editor) {
 		EditorPair editorPair = get(editor);
-		if (editorPair != null) {		
+		if (editorPair != null) {
 			mapT.remove(editorPair.getTextEditor());
-			mapD.remove(editorPair.getDiagramEditor());	
-			
+			mapD.remove(editorPair.getDiagramEditor());
+
 			editorPair.dispose();
 		}
+		System.out.println("remove");
 		return editorPair;
 	}
-	
+
 	public EditorPair get(IEditorPart editor) {
 		if (editor instanceof UniversalEditor) {
 			return mapT.get(editor);
-		}
-		else {
+		} else {
 			return mapD.get(editor);
 		}
 	}
-	
-	public EditorPair get(String textFilePath) {
-		IEditorPart textEditor = GMFBridgeUtil.findTextEditor(textFilePath);
-		return mapT.get(textEditor);
-	}
-	
-	public EditorPair get(String textFilePath, String packageName) {
-		UniversalEditor textEditor = GMFBridgeUtil.findTextEditor(textFilePath);
-		if (contains(textEditor)) {
-			return get(textEditor);
-		}
-		
-		DiagramEditor diagramEditor = GMFBridgeUtil.findDiagramEditor(textFilePath, packageName);
-		EPackage ePackage = EPackage.Registry.INSTANCE.getEPackage(packageName);
-		
-		if (textEditor != null && diagramEditor != null && ePackage != null && GMFBridgeUtil.isInitialised(diagramEditor)) {
-			EditorPair editorPair = new EditorPair(textEditor, diagramEditor, ePackage);
-			mapT.put(textEditor, editorPair);
-			mapD.put(diagramEditor, editorPair);
-			return editorPair;
-		}
-		
-		return null;
-	}
-	
+
+	// public EditorPair get(String textFilePath) {
+	// IEditorPart textEditor = BridgeUtil.findTextEditor(textFilePath);
+	// return mapT.get(textEditor);
+	// }
+
+	// public EditorPair get(String textFilePath, String packageName) {
+	// UniversalEditor textEditor = BridgeUtil.findTextEditor(textFilePath);
+	// if (contains(textEditor)) {
+	// return get(textEditor);
+	// }
+	//
+	// DiagramEditor diagramEditor = BridgeUtil.findDiagramEditor(textFilePath, packageName);
+	// EPackage ePackage = EPackage.Registry.INSTANCE.getEPackage(packageName);
+	//
+	// if (textEditor != null && diagramEditor != null && ePackage != null && BridgeUtil.isInitialised(diagramEditor)) {
+	// EditorPair editorPair = new EditorPair(textEditor, diagramEditor, ePackage);
+	// mapT.put(textEditor, editorPair);
+	// mapD.put(diagramEditor, editorPair);
+	// return editorPair;
+	// }
+	//
+	// return null;
+	// }
+
 	public Collection<EditorPair> getAll() {
 		return mapT.values();
 	}
-	
+
 	public boolean contains(IEditorPart editor) {
 		return (get(editor) != null);
 	}
-	
-	class EditorCloseListener implements IPartListener {
+
+	class EditorPartListener implements IPartListener {
+
+		private HashMap<String, IEditorPart> singleEditors = new HashMap<String, IEditorPart>();
+
+		@Override
+		public void partOpened(IWorkbenchPart part) {
+			if (part instanceof UniversalEditor || part instanceof DiagramEditor) {
+				IEditorPart editor = (IEditorPart) part;
+
+				String filePath = BridgeUtil.getFilePath(editor);
+				String otherFilePath;
+
+				String extension = BridgeUtil.getFileExtension(editor);
+				String otherExtension;
+
+				Language language = LanguageRegistry.getInstance().get(extension);
+
+				UniversalEditor textEditor = null;
+				DiagramEditor diagramEditor = null;
+
+				if (editor instanceof UniversalEditor) {
+					textEditor = (UniversalEditor) editor;
+					otherExtension = language.getDiagramFileExtension();
+				} else {
+					diagramEditor = (DiagramEditor) editor;
+					otherExtension = language.getTextFileExtension();
+				}
+
+				StringBuilder sb = new StringBuilder(filePath);
+				sb.replace(filePath.lastIndexOf(extension), filePath.lastIndexOf(extension) + extension.length(), otherExtension);
+				otherFilePath = sb.toString();
+
+				if (singleEditors.containsKey(otherFilePath)) {
+					if (editor instanceof UniversalEditor) {
+						diagramEditor = (DiagramEditor) singleEditors.remove(otherFilePath);
+					} else {
+						textEditor = (UniversalEditor) singleEditors.remove(otherFilePath);
+					}
+
+					EditorPair editorPair = new EditorPair(textEditor, diagramEditor, language);
+					EditorPairRegistry.getInstance().add(editorPair);
+				} else {
+					singleEditors.put(filePath, editor);
+				}
+				;
+			}
+		}
 
 		@Override
 		public void partClosed(IWorkbenchPart part) {
-			
-			 if (part instanceof IEditorPart) {
-				 IEditorPart editor = (IEditorPart) part;
-				 
-				 if (getInstance().contains(editor)) {
-					 getInstance().remove(editor);
-				 }
-			 }
+			if (part instanceof UniversalEditor || part instanceof DiagramEditor) {
+				IEditorPart editor = (IEditorPart) part;
+
+				if (EditorPairRegistry.getInstance().contains(editor)) {
+					EditorPair editorPair = EditorPairRegistry.getInstance().remove(editor);
+					IEditorPart partner = editorPair.getPartner(editor);
+					singleEditors.put(BridgeUtil.getFilePath(partner), partner);
+				} else {
+					singleEditors.remove(BridgeUtil.getFilePath(editor));
+				}
+			}
 		}
-		
+
 		@Override
 		public void partActivated(IWorkbenchPart part) {
 		}
@@ -102,11 +167,5 @@
 		@Override
 		public void partDeactivated(IWorkbenchPart part) {
 		}
-
-		@Override
-		public void partOpened(IWorkbenchPart part) {
-		}
 	}
 }
-
-

Added: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Language.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Language.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -0,0 +1,40 @@
+package org.spoofax.modelware.gmf;
+
+/**
+ * @author Oskar van Rest
+ */
+public class Language {
+
+	private final String textFileExtension;
+	private final String domainFileExtension;
+	private final String diagramFileExtension;
+	private final String packageName;
+	
+	public Language(String textFileExtension, String domainFileExtension, String diagramFileExtension, String packageName) {
+		this.textFileExtension = textFileExtension;
+		this.domainFileExtension = domainFileExtension;
+		this.diagramFileExtension = diagramFileExtension;
+		this.packageName = packageName;
+	}
+
+	public String getTextFileExtension() {
+		return textFileExtension;
+	}
+
+	public String getDomainFileExtension() {
+		return domainFileExtension;
+	}
+
+	public String getDiagramFileExtension() {
+		return diagramFileExtension;
+	}
+
+	public String getPackageName() {
+		return packageName;
+	}
+	
+	@Override
+	public String toString() {
+		return "Language: " + "textFileExtension=" + textFileExtension + ", domainFileExtension=" + domainFileExtension + ", diagramFileExtension=" + diagramFileExtension + ", packageName=" + packageName;
+	}
+}

Added: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/LanguageRegistry.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/LanguageRegistry.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -0,0 +1,34 @@
+package org.spoofax.modelware.gmf;
+
+/**
+ * @author Oskar van Rest
+ */
+import java.util.ArrayList;
+import java.util.Collection;
+
+public class LanguageRegistry {
+
+	private static LanguageRegistry instance = new LanguageRegistry();
+
+	private Collection<Language> languages = new ArrayList<Language>();
+	
+	private LanguageRegistry() {
+	}
+	
+	public static LanguageRegistry getInstance() {
+		return instance;
+	}
+	
+	public void add(Language language) {
+		languages.add(language);
+	}
+	
+	public Language get(String fileExtension) {
+		for (Language language : languages) {
+			if (language.getTextFileExtension().equals(fileExtension) || language.getDiagramFileExtension().equals(fileExtension)) {
+				return language;
+			}
+		}
+		return null;
+	}
+}

Copied and modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/ModelChangeListener.java (from r25655, modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java)
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/SemanticModelContentAdapter.java	Thu Nov  1 12:44:56 2012	(r25655, copy source)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/ModelChangeListener.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -3,26 +3,44 @@
 import org.eclipse.emf.common.notify.Notification;
 import org.eclipse.emf.ecore.util.EContentAdapter;
 import org.eclipse.jface.viewers.ISelectionProvider;
+import org.spoofax.modelware.gmf.EditorPair.BridgeEvent;
 
-public class SemanticModelContentAdapter extends EContentAdapter {
+/**
+ * @author Oskar van Rest
+ */
+public class ModelChangeListener extends EContentAdapter {
 
 	private EditorPair editorPair;
+	private final int debounceConstant = 500;
+	private long debouncer;
 
-	public SemanticModelContentAdapter(EditorPair editorPair) {
+	public ModelChangeListener(EditorPair editorPair) {
 		this.editorPair = editorPair;
+		editorPair.registerObserver(new Debouncer());
 	}
 
 	public void notifyChanged(Notification n) {
 		super.notifyChanged(n);
 
 		if (n.getEventType() != Notification.REMOVING_ADAPTER) {
-			if (!editorPair.getDebouncer().model2textAllowed())
+			if (System.currentTimeMillis() - debouncer < debounceConstant)
 				return;
 			
-			GMFBridge.getInstance().model2Term(editorPair);
+			Bridge.getInstance().model2Term(editorPair);
 			
+			//TODO: move somewhere else
 			ISelectionProvider selectionProvider = editorPair.getDiagramEditor().getSite().getSelectionProvider();
 			selectionProvider.setSelection(selectionProvider.getSelection());
 		}
 	}
+	
+	private class Debouncer implements EditorPairObserver {
+
+		@Override
+		public void notify(BridgeEvent event) {
+			if (event == BridgeEvent.Term2Model) {
+				debouncer = System.currentTimeMillis();
+			}
+		}
+	}
 }
\ No newline at end of file

Added: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -0,0 +1,119 @@
+package org.spoofax.modelware.gmf;
+
+import org.eclipse.core.commands.operations.IOperationHistoryListener;
+import org.eclipse.core.commands.operations.IUndoContext;
+import org.eclipse.core.commands.operations.IUndoableOperation;
+import org.eclipse.core.commands.operations.OperationHistoryEvent;
+import org.eclipse.core.commands.operations.OperationHistoryFactory;
+import org.eclipse.emf.workspace.EMFCommandOperation;
+import org.eclipse.gmf.runtime.common.core.command.CompositeCommand;
+import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
+import org.eclipse.jface.text.IDocument;
+import org.eclipse.jface.viewers.StructuredSelection;
+import org.eclipse.text.undo.DocumentUndoManager;
+import org.eclipse.text.undo.DocumentUndoManagerRegistry;
+import org.eclipse.text.undo.IDocumentUndoManager;
+import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.IWorkbench;
+import org.eclipse.ui.IWorkbenchWindow;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.views.properties.PropertySheet;
+import org.spoofax.modelware.gmf.EditorPair.BridgeEvent;
+import org.strategoxt.imp.runtime.EditorState;
+
+/**
+ * @author Oskar van Rest
+ */
+public class OperationalHistoryListener implements IOperationHistoryListener {
+
+	private EditorPair editorPair;
+	private IDocumentUndoManager undoManager;
+	private boolean debouncer = false;
+
+	public OperationalHistoryListener(EditorPair editorPair) {
+		this.editorPair = editorPair;
+
+		editorPair.registerObserver(new StartNewCompoundChangeWhenModelChanges());
+
+		IDocument document = EditorState.getEditorFor(editorPair.getTextEditor()).getDocument();
+		undoManager = DocumentUndoManagerRegistry.getDocumentUndoManager(document);
+	}
+
+	@Override
+	public void historyNotification(OperationHistoryEvent event) {
+		if (debouncer) {
+			debouncer = false;
+			return;
+		}
+
+		IWorkbench wb = PlatformUI.getWorkbench();
+		IWorkbenchWindow win = wb.getWorkbenchWindows()[0];
+//		System.out.println(win.getSelectionService().getSelection().getClass().toString());
+		
+//		StructuredSelection ss = (StructuredSelection) win.getSelectionService().
+//		System.out.println("size = " + ss.size());
+		
+//		System.out.println(BridgeUtil.getActivePage().getActivePart().getClass().toString());
+//		if (BridgeUtil.getActivePage().getActivePart() instanceof PropertySheet) {
+//			(BridgeUtil.getActivePage().STATE_MAXIMIZED
+//			PropertySheet p = (PropertySheet) BridgeUtil.getActivePage().getActivePart() ;
+//			p.getSite().getSelectionProvider().
+////			editorPair.getDiagramEditor().getEditorSite().getSelectionProvider().
+//			
+//			StructuredSelection ss = (StructuredSelection) p.getSite().getSelectionProvider().getSelection();
+//			System.out.println(p.toString());
+//			
+//		
+//		}
+//		
+//		if (event.getOperation() instanceof CompositeCommand || event.getOperation() instanceof CompositeTransactionalCommand) {
+//			if (BridgeUtil.getActiveEditor() == editorPair.getDiagramEditor()) {
+//			switch (event.getEventType()) {
+//			case OperationHistoryEvent.OPERATION_ADDED:
+//				editorPair.notifyObservers(BridgeEvent.DiagramLayoutChange);
+//				break;
+//			case OperationHistoryEvent.ABOUT_TO_REDO:
+//				editorPair.notifyObservers(BridgeEvent.DiagramRedo);
+//				break;
+//			case OperationHistoryEvent.ABOUT_TO_UNDO:
+//				editorPair.notifyObservers(BridgeEvent.DiagramUndo);
+//				break;
+//			default:
+//				break;
+//			}
+//			}
+//		} else {
+//			if (BridgeUtil.getActiveEditor() == editorPair.getTextEditor()) {
+//				switch (event.getEventType()) {
+//				case OperationHistoryEvent.OPERATION_ADDED:
+//					editorPair.notifyObservers(BridgeEvent.TextLayoutChange);
+//					break;
+//				case OperationHistoryEvent.ABOUT_TO_REDO:
+//					editorPair.notifyObservers(BridgeEvent.TextRedo);
+//					break;
+//				case OperationHistoryEvent.ABOUT_TO_UNDO:
+//					editorPair.notifyObservers(BridgeEvent.TextUndo);
+//					break;
+//				default:
+//					break;
+//				}
+//			}
+//		}
+	}
+
+	private class StartNewCompoundChangeWhenModelChanges implements EditorPairObserver {
+
+		@Override
+		public void notify(BridgeEvent event) {
+			// start new compound change when Term2Model transformation is executed, so that we can always go back to this particular state.
+			if (event == BridgeEvent.Term2Model) {
+				undoManager.endCompoundChange();
+				undoManager.beginCompoundChange();
+			}
+			// don't generate a TextLayoutChange notification as a result of a model2term notification.
+			else if (event == BridgeEvent.Model2Term) {
+				debouncer = true;
+			}
+		}
+	}
+}

Added: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/RuntimeActivator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/RuntimeActivator.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -0,0 +1,54 @@
+package org.spoofax.modelware.gmf;
+
+import org.eclipse.core.runtime.IConfigurationElement;
+import org.eclipse.core.runtime.Platform;
+import org.eclipse.ui.IStartup;
+import org.eclipse.ui.plugin.AbstractUIPlugin;
+import org.osgi.framework.BundleContext;
+
+/**
+ * @author Oskar van Rest
+ */
+public class RuntimeActivator extends AbstractUIPlugin implements IStartup {
+
+	private static final String SYNCHRONIZER_ID = "org.spoofax.modelware.gmf.synchronizer";
+
+	/**
+	 * Like Eclipse IMP, this plug-in is activated on startup of the workbench
+	 */
+	@Override
+	public void earlyStartup() {
+	}
+
+	/**
+	 * This method is called upon plug-in activation
+	 */
+	public void start(BundleContext context) throws Exception {
+		super.start(context);
+
+		evaluateSynchronizerExtensions();
+		EditorPairRegistry.getInstance(); //initialize
+	}
+
+	/**
+	 * This method is called when the plug-in is stopped
+	 */
+	public void stop(BundleContext context) throws Exception {
+		super.stop(context);
+	}
+
+	private void evaluateSynchronizerExtensions() {
+		IConfigurationElement[] config = Platform.getExtensionRegistry().getConfigurationElementsFor(SYNCHRONIZER_ID);
+		for (IConfigurationElement e : config) {
+			String textFileExtension = e.getAttribute("textFileExtension");
+			String domainFileExtension = e.getAttribute("domainFileExtension");
+			String diagramFileExtension = e.getAttribute("diagramFileExtension");
+			String packageName = e.getAttribute("packageName");
+
+			if (textFileExtension != null && domainFileExtension != null && diagramFileExtension != null && packageName != null) {
+				Language language = new Language(textFileExtension, domainFileExtension, diagramFileExtension, packageName);
+				LanguageRegistry.getInstance().add(language);
+			}
+		}
+	}
+}

Added: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -0,0 +1,116 @@
+package org.spoofax.modelware.gmf;
+
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.imp.editor.UniversalEditor;
+import org.eclipse.imp.parser.IModelListener;
+import org.eclipse.imp.parser.IParseController;
+import org.eclipse.ui.ide.ResourceUtil;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.modelware.gmf.EditorPair.BridgeEvent;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.parser.SGLRParseController;
+import org.strategoxt.imp.runtime.services.StrategoObserver;
+
+/**
+ * @author Oskar van Rest
+ */
+public class TextChangeListener implements IModelListener {
+
+	private EditorPair editorPair;
+	private IStrategoTerm lastAST;
+	private long timeOfLastChange;
+	private Thread thread;
+	private static final long keyStrokeTimeout = 700;
+	private boolean debouncer = false;
+	
+	public TextChangeListener(EditorPair editorPair) {
+		this.editorPair = editorPair;
+		editorPair.registerObserver(new Debouncer());
+	}
+	
+	@Override
+	public AnalysisRequired getAnalysisRequired() {
+		return AnalysisRequired.NONE;
+	}
+
+	@Override
+	public void update(IParseController controller, IProgressMonitor monitor) {
+		if (debouncer) {
+			debouncer = false;
+			return;
+		}
+		
+		timeOfLastChange = System.currentTimeMillis();
+		if (thread == null || !thread.isAlive()) {
+			thread = new Thread(new Timer());
+			thread.start();
+		}
+	}
+	
+	private void executeTerm2Model() {
+		UniversalEditor textEditor = editorPair.getTextEditor();
+		EditorState activeEditor = EditorState.getEditorFor(textEditor);
+		IStrategoTerm AST = activeEditor.getCurrentAst();
+		
+		if (lastAST != null && lastAST.equals(AST)) {
+			return;
+		}
+		else {
+			lastAST = AST;
+		}
+
+		IResource resource = ResourceUtil.getResource(textEditor.getEditorInput());
+		Descriptor descriptor = activeEditor.getDescriptor();
+		SGLRParseController parseController = activeEditor.getParseController();
+		StrategoObserver observer = null;
+
+		try {
+			observer = descriptor.createService(StrategoObserver.class, null);
+		} catch (BadDescriptorException e) {
+			e.printStackTrace();
+		}
+
+		observer.getLock().lock();
+		try {
+			observer.update(parseController, new NullProgressMonitor());
+		} finally {
+			observer.getLock().unlock();
+		}
+		IStrategoTerm analysedAST = observer.getResultingAst(resource);
+
+		Bridge.getInstance().term2Model(editorPair, analysedAST);
+	}
+
+	private class Timer implements Runnable {
+		public void run() {
+			try {
+				long different = -1;
+				while(different < keyStrokeTimeout) {
+					different = System.currentTimeMillis() - timeOfLastChange;
+					Thread.sleep(Math.max(0, keyStrokeTimeout - different));
+				}
+				executeTerm2Model();
+			} catch (InterruptedException e) {
+				e.printStackTrace();
+			}
+		}
+	}
+	
+	private class Debouncer implements EditorPairObserver {
+
+		@Override
+		public void notify(BridgeEvent event) {
+			if (event == BridgeEvent.Model2Term) {
+				debouncer = true;
+				
+				UniversalEditor textEditor = editorPair.getTextEditor();
+				EditorState activeEditor = EditorState.getEditorFor(textEditor);
+				lastAST = activeEditor.getCurrentAst();
+			}
+		}
+	}
+}

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java	Sun Nov  4 16:02:44 2012	(r25673)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -19,9 +19,12 @@
 import org.spoofax.jsglr.client.imploder.ImploderAttachment;
 import org.spoofax.modelware.emf.Object2Subterm;
 import org.spoofax.modelware.gmf.EditorPair;
-import org.spoofax.modelware.gmf.GMFBridgeUtil;
+import org.spoofax.modelware.gmf.BridgeUtil;
 import org.strategoxt.imp.runtime.EditorState;
 
+/**
+ * @author Oskar van Rest
+ */
 public class DiagramSelectionChangedListener implements ISelectionChangedListener {
 
 	private EditorPair editorPair;
@@ -49,7 +52,7 @@
 		int left = Integer.MAX_VALUE;
 		int right = Integer.MIN_VALUE;
 
-		EObject root = GMFBridgeUtil.getSemanticModel(editorPair.getDiagramEditor());
+		EObject root = BridgeUtil.getSemanticModel(editorPair.getDiagramEditor());
 
 		for (int i = 0; i < selectedObjects.size(); i++) {
 			if (EcoreUtil.isAncestor(root, selectedObjects.get(i))) { // only take non-phantom nodes into account

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java	Sun Nov  4 16:02:44 2012	(r25673)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -13,6 +13,9 @@
 import org.spoofax.modelware.gmf.EditorPair;
 import org.spoofax.modelware.gmf.EditorPairRegistry;
 
+/**
+ * @author Oskar van Rest
+ */
 public class SaveSynchronization implements IExecutionListener {
 
 	@Override

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/TextSelectionChangedListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/TextSelectionChangedListener.java	Sun Nov  4 16:02:44 2012	(r25673)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/TextSelectionChangedListener.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -17,9 +17,12 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.modelware.emf.Subterm2Object;
 import org.spoofax.modelware.gmf.EditorPair;
-import org.spoofax.modelware.gmf.GMFBridgeUtil;
+import org.spoofax.modelware.gmf.BridgeUtil;
 import org.strategoxt.imp.runtime.EditorState;
 
+/**
+ * @author Oskar van Rest
+ */
 public class TextSelectionChangedListener implements ISelectionChangedListener {
 
 	private EditorPair editorPair;
@@ -44,7 +47,7 @@
 
 		List<IStrategoAppl> selectedIStrategoAppls = filterIStrategoAppls(selection);
 
-		EObject root = GMFBridgeUtil.getSemanticModel(diagramEditor);
+		EObject root = BridgeUtil.getSemanticModel(diagramEditor);
 		List<EObject> eObjectsToSelect = strategoApplToEObject(selectedIStrategoAppls, root);
 		eObjectsToSelect = addAllContents(eObjectsToSelect);
 		List<EditPart> editPartsToSelect = eObjectsToEditPart(eObjectsToSelect, diagramEditor.getDiagramEditPart());

Added: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/UndoRedoSynchronisation.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/UndoRedoSynchronisation.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -0,0 +1,29 @@
+package org.spoofax.modelware.gmf.editorservices;
+
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.imp.editor.UniversalEditor;
+import org.eclipse.imp.parser.IModelListener;
+import org.eclipse.imp.parser.IParseController;
+import org.eclipse.text.undo.DocumentUndoManager;
+import org.eclipse.text.undo.DocumentUndoManagerRegistry;
+import org.eclipse.text.undo.IDocumentUndoManager;
+import org.strategoxt.imp.runtime.EditorState;
+
+/**
+ * @author Oskar van Rest
+ */
+public class UndoRedoSynchronisation implements IModelListener {
+
+	@Override
+	public AnalysisRequired getAnalysisRequired() {
+		return AnalysisRequired.NONE;
+	}
+
+	@Override
+	public void update(IParseController controller, IProgressMonitor monitor) {
+//		EditorState e = EditorState.getActiveEditor();
+
+	
+	}
+
+}

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/UndoRedoSynchronization.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/UndoRedoSynchronization.java	Sun Nov  4 16:02:44 2012	(r25673)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/UndoRedoSynchronization.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -1,10 +1,33 @@
 package org.spoofax.modelware.gmf.editorservices;
 
+import java.util.Collection;
+
 import org.eclipse.core.commands.ExecutionEvent;
 import org.eclipse.core.commands.ExecutionException;
 import org.eclipse.core.commands.IExecutionListener;
 import org.eclipse.core.commands.NotHandledException;
-
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.emf.common.command.Command;
+import org.eclipse.emf.common.command.CommandStack;
+import org.eclipse.emf.compare.diff.merge.service.MergeService;
+import org.eclipse.emf.ecore.resource.Resource;
+import org.eclipse.emf.ecore.resource.impl.ResourceImpl;
+import org.eclipse.emf.transaction.RecordingCommand;
+import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.imp.editor.UniversalEditor;
+import org.eclipse.imp.parser.IModelListener;
+import org.eclipse.imp.parser.IParseController;
+import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.PlatformUI;
+import org.spoofax.modelware.gmf.EditorPair;
+import org.spoofax.modelware.gmf.Bridge;
+import org.spoofax.modelware.gmf.BridgeUtil;
+import org.strategoxt.imp.runtime.EditorState;
+
+/**
+ * @author Oskar van Rest
+ */
 public class UndoRedoSynchronization implements IExecutionListener {
 
 	@Override
@@ -21,6 +44,35 @@
 
 	@Override
 	public void preExecute(String commandId, ExecutionEvent event) {
+//		IEditorPart activeEditor = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getActiveEditor();
+//		if (activeEditor == null)
+//			return;
+//		
+//		final EditorPair editorPair = GMFBridge.getInstance().getEditorPairs().get(activeEditor);
+//		if (editorPair == null) {
+//			return;
+//		}
+//		
+//		CommandStack diagramCommmandStack = editorPair.getDiagramEditor().getEditingDomain().getCommandStack();
+
+//		if (activeEditor instanceof UniversalEditor) {
+////			
+////			if (commandId.equals("org.eclipse.ui.edit.undo"))
+////				//TODO
+////			else if (commandId.equals("org.eclipse.ui.edit.redo"))
+////				//TODO
+//			
+//		}
+//		else if (activeEditor instanceof DiagramEditor) {
+//			editorPair.getDebouncer().text2modelAllowed();
+//			
+//			UniversalEditor textEditor = (UniversalEditor) activeEditor;
+//			event.getCommand();
+//		}
+
+		
+		
+		
 		/**
 		 * if active editor == texteditor {
 		 * 	skip next text2model transformation using the debouncer
@@ -31,6 +83,7 @@
 		 * else if active editor == diagramEditor {
 		 *   etc... 
 		 */
+	
 		
 		
 	}

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java	Sun Nov  4 16:02:44 2012	(r25673)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -6,13 +6,16 @@
 
 import org.eclipse.core.runtime.NullProgressMonitor;
 import org.eclipse.emf.common.util.URI;
+import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.swt.widgets.Display;
-import org.eclipse.ui.IEditorPart;
 import org.spoofax.modelware.emf.resource.SpoofaxResource;
 import org.spoofax.modelware.gmf.EditorPair;
 import org.spoofax.modelware.gmf.EditorPairRegistry;
-import org.spoofax.modelware.gmf.GMFBridgeUtil;
+import org.spoofax.modelware.gmf.BridgeUtil;
 
+/**
+ * @author Oskar van Rest
+ */
 public class SpoofaxGMFResource extends SpoofaxResource {
 
 	public SpoofaxGMFResource(URI uri) {
@@ -25,7 +28,9 @@
 	protected void doLoad(InputStream inputStream, Map<?, ?> options) {
 		super.doLoad(inputStream, options);
 		
-		EditorPair editorPair = EditorPairRegistry.getInstance().get(filePath.toString());
+		//TODO: put this elsewhere
+		UniversalEditor textEditor = BridgeUtil.findTextEditor(filePath);
+		EditorPair editorPair = EditorPairRegistry.getInstance().get(textEditor);
 		if (editorPair != null) {
 			editorPair.loadSemanticModel();
 		}
@@ -35,7 +40,7 @@
 	 * @override
 	 */
 	protected void doSave(OutputStream outputStream, Map<?, ?> options) {
-		final IEditorPart textEditor = GMFBridgeUtil.findTextEditor(filePath);
+		final UniversalEditor textEditor = BridgeUtil.findTextEditor(filePath);
 		
 		if (textEditor == null || !textEditor.isDirty()) {
 			super.doSave(outputStream, options);

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResourceFactory.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResourceFactory.java	Sun Nov  4 16:02:44 2012	(r25673)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResourceFactory.java	Mon Nov  5 01:19:11 2012	(r25674)
@@ -4,6 +4,9 @@
 import org.eclipse.emf.ecore.resource.Resource;
 import org.eclipse.emf.ecore.resource.impl.ResourceFactoryImpl;
 
+/**
+ * @author Oskar van Rest
+ */
 public class SpoofaxGMFResourceFactory extends ResourceFactoryImpl {
 	
 	public SpoofaxGMFResourceFactory() {

From oskarvanrest at gmail.com  Mon Nov  5 04:21:13 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 03:21:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25675 - in
	experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual:
	. META-INF editor
	editor/java/org/spoofax/graphical/entitylang/textual/strate...
Message-ID: <20121105032113.34D877F8120@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 03:21:12 2012
New Revision: 25675
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25675&sc=1

Log:
Now integrates with synchronizer extension point.

Added:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Builders.generated.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Colorer.generated.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Completions.generated.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.generated.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.generated.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-References.generated.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Syntax.generated.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-auto.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library-internal.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/compilation-library.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/editor-common.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/index-library.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/refactor-common.generated.str
Deleted:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/to_modelware_0_3.java
Modified:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/META-INF/MANIFEST.MF
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/InteropRegisterer.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/plugin.xml
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/entitylang.str

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/META-INF/MANIFEST.MF
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/META-INF/MANIFEST.MF	Mon Nov  5 01:19:11 2012	(r25674)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/META-INF/MANIFEST.MF	Mon Nov  5 03:21:12 2012	(r25675)
@@ -16,7 +16,7 @@
  org.strategoxt.imp.runtime,
  org.spoofax.jsglr,
  org.strategoxt.strj,
- org.spoofax.graphical;bundle-version="1.0.0"
+ org.spoofax.modelware.gmf;bundle-version="1.0.0"
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Bundle-ActivationPolicy: lazy
 Export-Package: org.spoofax.graphical.entitylang.textual

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Builders.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Builders.generated.esv	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,71 @@
+
+module EntityLang-Builders.generated
+
+builders
+                                                                                                                    
+  // Building and analysis is defined in Stratego program or programs:                                              
+  //                                                                                                                
+  //   provider : stratego-program.ctree                                                                            
+  //   provider : stratego-library.jar                                                                              
+  //                                                                                                                
+  // Analysis is carried out by a Stratego rule that can be selected as follows:                                    
+  //                                                                                                                
+  //   observer : analysis-rule                                                                                     
+  //                                                                                                                
+  // Any dynamic rules set in the analysis may be used by other semantic services,                                  
+  // such as reference resolving or the builders.                                                                   
+  //                                                                                                                
+  // The (multifile) annotation can be added to an observer to indcate that this                                    
+  // observer will receive a list of files if multiple files change, instead of running                             
+  // the observer on every file separately.                                                                         
+  //                                                                                                                
+  // Builders may carry out custom transformations on a file or selection.                                          
+  // (At run-time, they can be accessed using the toolbar button with the star icon.)                               
+  // Builders can be specified as follows:                                                                          
+  //                                                                                                                
+  //   builder : "Generate Java code" = generate-java (openeditor) (persistent) (realtime)                          
+  //                                                                                                                
+  // In this example, the caption "Generate Java code" is used in the build button dropdown menu,                   
+  // and the generate-java rule is used to carry out the tranformation.                                             
+  // Builder definitions can also specify any combination of the following annotations:                             
+  //                                                                                                                
+  //   (cursor)      The builder should always transform the tree node at the cursor.                               
+  //   (meta)        Indicates the builder should only be available to meta-programmers                             
+  //                 (i.e., not when the plugin is deployed to end-users).                                          
+  //   (openeditor)  Indicates an editor should be opened with the result.                                          
+  //   (persistent)  Indicates that the resulting file should be saved to disk.                                     
+  //   (realtime)    Indicates that the resulting editor should be updated in real-time                             
+  //                 as the source file is edited.                                                                  
+  //   (source)      Always apply this builder to the source AST, not to the AST                                    
+  //                 after it has been analyzed/desugared by the observer.                                          
+  //                                                                                                                
+  // Refactorings are used for transformations that modify the original source code,                                
+  // while preserving the layout and syntactic sugar.                                                               
+  // A custom pretty-print strategy (T -> String) is used to format newly inserted nodes,                           
+  // a parenthesize strategy (T -> T) surrounds subterms with "Parenthetical(T)" when brackets are required,        
+  // resugar rules are required for desugarings that are not local-to-local or desugarings that duplicate terms     
+  // as the 'l' in \l -> []\ => {l: ( l -> [] )}.                                                                   
+  // Finally, text-reconstruction can be overruled with a strategy (T-old, T-new) -> <try(custom-pp)> T-new,        
+  // the resulting text will be indented according to its location.                                                 
+  // This is sometimes needed in case the node text can not be reconstructed by replacing child texts               
+  // in the original formatting.                                                                                    
+  //                                                                                                                
+  // Refactorings can be specified as shown below, whereby Property* indicates on which constructs the              
+  // refactoring is specified (<sort>.<constructor>).                                                               
+  //                                                                                                                
+  // refactorings                                                                                                   
+  //                                                                                                                
+  //   pretty-print: prettyprint                                                                                    
+  //   parenthesize: parenthesize                                                                                   
+  //   resugar: resugar-node                                                                                        
+  //   override reconstruction: disallow-reconstruction                                                             
+  //                                                                                                                
+  //   refactoring Property*: "Extract Entity" =  extract-entity (source)                                           
+  //     shortcut: Shift+Alt+M                                                                                      
+  //     input                                                                                                      
+  //       identifier: "entity name" = ""                                                                           
+  //       identifier: "property name" = ""                                                                         
+  //                                                                                                                
+  // The 'on save' handler can be used  to generate code as files are saved:                                        
+  //                                                                                                                
+  //   on save : editor-save                                                                                        
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Colorer.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Colorer.generated.esv	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,46 @@
+module EntityLang-Colorer.generated
+
+colorer
+                                                                                             
+  // Sort-based highlighting with background color                                           
+  //   Id: yellow green                                                                      
+  //                                                                                         
+  // Sort- and constructor-based highlighting                                                
+  //   ClassBodyDec.MethodDec: yellow                                                        
+  //                                                                                         
+  // Constructor-based highlighting                                                          
+  //   _.MethodDec: 255 0 0                                                                  
+  //                                                                                         
+  // Example: background colors for ToMetaExpr/FromMetaExpr, if supported by the grammar     
+  //   environment _.ToMetaExpr:   _ 220 230 200                                             
+  //   environment _.FromMetaExpr: _ white                                                   
+
+colorer Default, token-based highlighting
+                                  
+  keyword    : 127 0 85 bold      
+  identifier : default            
+  string     : blue               
+  number     : darkgreen          
+  var        : 255 0 100 italic   
+  operator   : 0 0 128            
+  layout     : 63 127 95 italic   
+
+colorer System colors
+                            
+  darkred   = 128 0 0       
+  red       = 255 0 0       
+  darkgreen = 0 128 0       
+  green     = 0 255 0       
+  darkblue  = 0 0 128       
+  blue      = 0 0 255       
+  cyan      = 0 255 255     
+  magenta   = 255 0 255     
+  yellow    = 255 255 0     
+  white     = 255 255 255   
+  black     = 0 0 0         
+  gray      = 128 128 128   
+  grey      = gray          
+  orange    = 255 165 0     
+  pink      = 255 105 180   
+  brown     = 139 69 19     
+  default   = _             
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Completions.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Completions.generated.esv	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,51 @@
+module EntityLang-Completions.generated
+
+completions
+                                                                                          
+  // Syntactic content completion can be defined as follows:                              
+  //                                                                                      
+  //   completion keyword  : "keyword"                                                    
+  //   completion template : "if " <e> " then\n\t" <s> "\nend"                            
+  //                                                                                      
+  // This defines keyword completion for "keyword" and                                    
+  // a template completion for the "if" keyword (note the use of \n, \t, and spaces).     
+  // In this template, the text selection expands to the "e" placeholder identifier       
+  // enclosed in <> brackets.                                                             
+  //                                                                                      
+  // Use the (blank) annotation if you want a template completion only to                 
+  // appear on blank lines:                                                               
+  //                                                                                      
+  //   completion template: "section " <title> "\n\t" (blank)                             
+  //                                                                                      
+  // You can specify a specific SDF sort for which a completion                           
+  // rule should trigger as follows:                                                      
+  //                                                                                      
+  //   completion template Section :                                                      
+  //     "section " <title> "\n\t" (blank)                                                
+  //                                                                                      
+  // Finally, you can override the prefix of the completion:                              
+  //                                                                                      
+  //   completion template Statement : "assignment" =                                     
+  //     <x> " = " <y> (blank)                                                            
+  //                                                                                      
+  // Semantic content completion can be defined as follows:                               
+  //                                                                                      
+  //   completion proposer : completion-function-call                                     
+  //   completion trigger  : "\."                                                         
+  //                                                                                      
+  // This sets completion-function-call as the completion strategy,                       
+  // and declares that [A-Za-z0-9_]+ may be used as a lexical pattern                     
+  // to parse identifiers (used to set the text selection with suggestions).              
+  // The completion trigger uses a regular expression to specify that                     
+  // completions should be proposed as the user types ".".                                
+  //                                                                                      
+  // Completions make use of the identifier lexical defined in YourLanguage-Syntax.esv    
+  // to select identifiers in completion suggestions.                                     
+  //                                                                                      
+  // Semantic completion uses the semantic provider defined in YourLanguage-Builders.esv  
+  // All semantic services may make use of the dynamic rules created by the observer.     
+
+completions
+                                     
+  // Derived completions may follow  
+                                     
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.generated.esv	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,24 @@
+module EntityLang-Folding.generated
+
+folding Default folding definitions
+  
+  // Folding rules indicate which syntactic constructs can be folded,
+  // and take one of the following forms:
+  //
+  //   <sort>.<constructor>
+  //
+  //   <sort>._
+  //
+  //   _.<constructor>
+  //
+  // To indicate that an element should always be folded, add
+  // a (folded) annotation:
+  //
+  //   _.Imports (folded)
+  //
+  // To disable a folding rule defined elsewhere, add a (disabled) annotation:
+  //
+  //   Definition._ (disabled)
+  
+  Start.Module
+  Type.Entity
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.generated.esv	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,16 @@
+module EntityLang-Outliner.generated
+
+outliner Default outliner        
+  
+  
+  // Outliner rules indicate which syntactic constructs should be shown in the outline
+  // and quick outline views, and take one of the following forms:
+  //
+  //   <sort>.<constructor>
+  //
+  //   <sort>._
+  //
+  //   _.<constructor>
+  
+  Start.Module
+  Type.Entity
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-References.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-References.generated.esv	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,19 @@
+
+module EntityLang-References.generated
+
+references
+                                                                                          
+  // Reference resolving rules can specify the syntax constructors for which              
+  // a reference resolving function is available:                                         
+  //                                                                                      
+  //   reference FunctionCall : resolve-function-call                                     
+  //                                                                                      
+  // This defines that for each FunctionCall, resolve-function-call                       
+  // will retrieve the AST node that declares it.                                         
+  //                                                                                      
+  // Likewise, hover help can be specified as follows:                                    
+  //                                                                                      
+  //   hover FunctionCall : hover-help-function-call                                      
+  //                                                                                      
+  // Reference resolving uses the semantic provider defined in YourLanguage-Builders.esv  
+  // All semantic services may make use of the dynamic rules created by the observer.     
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Syntax.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Syntax.generated.esv	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,21 @@
+module EntityLang-Syntax.generated
+
+language Syntax properties (static defaults)
+                                           
+  // Comment constructs:                   
+  line comment                           : "//"
+  block comment                          : "/*" * "*/"
+                                           
+  // Fences (used for matching,            
+  // inserting, indenting brackets):       
+  fences                                 : [ ]
+                                           ( )
+                                           { }
+                                           
+  // Automatic indent hints                
+  // (indent after these tokens):          
+  indent after                           : "="
+                                           ":"
+                                           
+  // Regular expression for identifiers:   
+  identifier lexical                     : "[A-Za-z0-9_]+"
\ No newline at end of file

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/InteropRegisterer.java
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/InteropRegisterer.java	Mon Nov  5 01:19:11 2012	(r25674)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/org/spoofax/graphical/entitylang/textual/strategies/InteropRegisterer.java	Mon Nov  5 03:21:12 2012	(r25675)
@@ -9,6 +9,6 @@
 public class InteropRegisterer extends JavaInteropRegisterer {
 
   public InteropRegisterer() {
-    super(new Strategy[] { java_strategy_0_0.instance, to_modelware_0_3.instance });
+    super(new Strategy[] { java_strategy_0_0.instance });
   }
 }

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-auto.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-auto.generated.str	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,14 @@
+module lib/analysis-auto.generated
+
+signature
+  constructors
+    Requirement : Namespace
+    Component   : Namespace
+    Behavior    : Namespace
+
+
+imports
+  lib/editor-common.generated
+
+
+rules

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library-internal.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library-internal.generated.str	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,836 @@
+module lib/analysis-library-internal.generated
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library.generated
+  lib/index-library.generated
+  
+signature constructors
+  
+  // Analysis
+  Results         : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) * List(File) -> Results
+  ParallelResults : AST * AST * List(Error) * List(Warning) * List(Note) * List(File) -> ParallelResults
+  
+  // Namespaces
+  Diff            : Namespace
+  ASTDiff         : Namespace
+  AST             : Namespace
+  
+  // Data
+  AST             : List(UriPart) * AST -> AST
+  
+  // Annotations 
+  Scope: Term -> Anno
+  
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @internal
+   * @type List((ast, (file, subfile))) -> Results(List(ast), List(def), List(use), List(data), List(addedElem), 
+   *                                       List(removedElem), List(fileToAnalyze@(file, subfile))))
+   */
+  analyze-top-internal(|phase, language, project-path, full-path):
+    astFilePairs -> Results(asts, defs, uses, data, added, removed, filesToAnalyze)
+    with
+      // Init
+      index-setup(|language, [project-path], full-path);
+      revision := <index-start-transaction>
+    with
+      // Store old elements
+      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> full-path;
+      <index-clear-file> full-path
+    with
+      {| Index-UnresolvedSet:
+        unresolvedSet := <new-iset>;
+        rules(Index-UnresolvedSet: _ -> unresolvedSet);
+        
+        (astFilePairs2, defsList) := <unzip> <map(analyze-top-defs)> astFilePairs;
+        defs := <concat> defsList;
+        (astFilePairs3, dataList) := <unzip> <map(analyze-top-data(|language, full-path))> astFilePairs2;
+        data := <concat> dataList;
+        (astFilePairs4, usesList) := <unzip> <map(analyze-top-uses(|language, full-path))> astFilePairs3;
+        uses := <concat> usesList;
+        (asts, _) := <unzip> astFilePairs4
+      |}
+    with
+      index-end-transaction
+    with
+      // Schedule re-analysis of dependent files (if current file is not testing language file)
+      // HACK: Depends on file extension, could be other languages with .spt extension?
+      if Editor() := phase; not(<is-test-file> full-path) then
+        newElems := <conc> (defs, <filter(index-diff-constructors)> data);
+        
+        // Find added and removed definitions
+        (added, removed) := <analyze-diff> (oldElems, newElems);
+        changed := <conc> (added, removed);
+        
+        // Store files that have changed in the index
+        index-transaction(
+          filesToAnalyze := <analyze-store-diff(|changed, revision)> astFilePairs4
+        )
+      else
+        (added, removed) := ([], []);
+        filesToAnalyze := []
+      end
+    with
+      <list-loop(analyze-top-store-ast(|full-path))> astFilePairs4
+      
+  /**
+   * Add URI annotations to each definition and unresolved URI annotations to each use site.
+   *
+   * @internal
+   */
+  analyze-top-defs:
+    (ast, file) -> ((ast2, file), defs)
+    with
+      <index-set-current-file> file;
+      (Some(ast2), edefs) := <analyze-defs> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
+      defs := <map(Snd)> edefs; 
+      <index-add-all(|file)> defs
+      
+  /**
+   * Gathers all data for each definition.
+   *
+   * @internal
+   */
+  analyze-top-data(|language, full-path):
+    (ast, file) -> ((ast2, file), data2)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Gather all data for each definition.
+        ast2 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast; // Parent pointers needed.
+        data := <origin-track-forced(analyze-tree-data)> ast2;
+        
+				// Resolve all references in gathered data.
+				(data2, _) := <analyze-uses> data;
+				<index-add-all(|file)> data2;
+				
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+      
+  /**
+   * Resolves all unresolved references for each use site.
+   *
+   * @internal
+   */
+  analyze-top-uses(|language, full-path):
+    (ast, file) -> ((ast3, file), uses)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Resolve all unresolved references for each use site.
+        (ast2, uses) := <analyze-uses> ast;
+        <index-add-all(|file)> uses;
+        
+        ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2; // AST changed, reset parent pointers.
+        
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+      
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast(|full-path):
+    (ast, (_, subfile)) -> <id>
+    where
+      <index-add(|full-path)> AST(subfile, ast)
+
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast(|full-path):
+    (ast, file) -> <id>
+    where
+      <is-string> file;
+      <index-add(|full-path)> AST([], ast)
+      
+  /**
+   * Identifies all definitions in the tree and annotates them with their URI.
+   * Also annotates uses with a preliminary "Unresolved(_)" URI.
+   *
+   * @internal
+   */
+  analyze-defs:
+  	ast -> (<analyze-defs(|[], set, Anon(), Anon())> ast, <iset-elements> set)
+  	where
+  		set := <new-iset>
+  		 
+  /** @internal */
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast{Scope([namespace, name | path])} -> ast'
+    where
+      paths' := <update-index-paths(|[(namespace, path)])> paths ;
+      ast'   := <rm-annotations; analyze-defs(|paths', defs, Anon(), Anon())> ast
+      
+  
+  /** @internal */
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast -> ast'
+    where
+    	<not(has-annos)> ast    	
+    with
+      if (namespace, path) := <nam-get-definition> ast then
+      	definition     := <nam-get-def(|paths, namespace)> path;
+      	Def(def-path)  := definition; 
+        head-scope-ns' := namespace;
+        head-scope'    := <Hd> path;
+        f#(children)   := <try(nam-annotate-scopes(|def-path))> ast;
+        <iset-add(|(<new>, definition))> defs
+      else
+        def-path       := INTERNAL_ERROR();
+        head-scope-ns' := head-scope-ns;
+        head-scope'    := head-scope;
+        f#(children)   := ast
+      end;
+      if scope-types := <nam-get-scope-types> ast then
+      	unique          := Anon(<new>);
+        updates         := <map(construct-index-path(|paths, head-scope', head-scope-ns', unique, ast))> scope-types;
+        paths'          := <update-index-paths(|updates)> paths;
+        head-scope-ns'' := Anon();
+        head-scope''    := Anon()
+      else
+      	paths'          := paths;
+      	head-scope-ns'' := head-scope-ns';
+        head-scope''    := head-scope'
+      end;
+      children' := <origin-track-forced(analyze-child-defs(|paths', defs, head-scope'', head-scope-ns''))> children;
+      ast'      := <try(nam-annotate-names(|paths', def-path))> f#(children') 
+       
+  /** @internal */
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[] -> []
+  	
+  /** @internal */
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[d|ds] -> [d'|ds']
+  	where
+  	  d'  := <analyze-defs(|paths, defs, head-scope, head-scope-ns)> d ;
+  	  if <nam-ordered-def> d then
+  	  	[namespace, name | path] := <nam-get-definition-key ; index-uri> d' ;
+        paths'                   := <update-index-paths(|[(namespace, path)])> paths ;
+  	  	ds'                      := <analyze-child-defs(|paths', defs, Anon(), Anon())> ds
+  	  else
+  	    ds' := <analyze-child-defs(|paths, defs, head-scope, head-scope-ns)> ds
+  	  end
+  
+  /** @internal */
+  construct-index-path(|paths, head-scope, head-scope-ns, unique, ast):
+    scope-type -> (scope-type, path'')
+    where
+      if !head-scope-ns => Anon() then
+        path  := <lookup-index-path> (scope-type, paths);
+        path' := <index-do-adjust-path(|scope-type, path, Anon(<new>))> ast
+      else
+        path  := <lookup-index-path> (head-scope-ns, paths);
+        path' := <index-do-adjust-path(|scope-type, path, head-scope)> ast
+      end;
+      // HACK: Disable generation of anonymous namespaces for unique definitions to let FieldAccess-like constructs work.
+      if /*<nam-unique> ast*/ fail then
+      	path'' := <index-do-adjust-path(|scope-type, path', unique)> ast
+      else
+      	path'' := path'
+      end
+      
+  /** @internal */
+  update-index-paths(|updates) = 
+    remove-all(?(<id>, _); !(<id>, updates) ; lookup') ; at-end(!updates)
+  
+  /** @internal */
+  lookup-index-path = 
+    lookup' <+ ![]
+ 
+  /** @internal */
+  index-do-adjust-path(|namespace, path, scope) =
+    adjust-index-path(origin-equal(|scope)|namespace, path)
+  <+
+    ![scope|path]
+ 
+  /**
+   * Analyze all uses, changing their preliminary "Unresolved(_)" URI to a definite URI of their definition.
+   *
+   * @internal
+   */
+  analyze-uses:
+    ast -> (ast'', uses')
+    with
+      analyzed     := <all(analyze-uses)> ast;
+      (ast', uses) := <unzip-analyzed> analyzed;
+      if !ast' => _{unresolved@[Unresolved(namespace), x | path]} then
+        if Def(def-uri) := <index-lookup> ast' then
+          ast'' := ast{def-uri};
+          uses' := [Use(def-uri) | uses]
+        else
+          ast'' := ast';
+          uses' := [BadUse([namespace, x]) | uses]
+        end
+      else
+        ast'' := ast';
+        uses' := uses
+      end
+ 
+  /**
+   * Collects all index data (e.g. types of definitions).
+   *
+   * @internal
+   */
+  analyze-tree-data:
+    tree -> data
+    where
+      set := <new-iset>;
+      <topdown(analyze-tree-data-part(|set))> tree;
+      data := <iset-elements> set
+      
+  /** @internal */
+  analyze-tree-data-part(|set):
+    tree -> tree
+    where
+      if def-term := <nam-get-definition-key> then
+        _{[namespace | path]} := def-term;
+        if result := <adjust-index-def-data(store-index-data-results(|set) |namespace, path)> tree then
+          <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
+        end
+      end
+  
+  /** @internal */
+  store-index-data-results(|set):
+    t -> <fail>
+    where
+      if is-list then
+        <iset-addlist(|t)> set
+      else
+        <iset-add(|t)> set
+      end
+      
+rules // Parallel analysis
+  
+  /** @internal */
+  index-parallel-analyze(analyze):
+    files -> allResults
+    with
+      map(index-parse-file); // Parsing cannot be done in parallel.
+      map(\(ast, file) -> (ast, file, <project-path>)\);
+      parallel-unordered(all(index-analyze(analyze)));
+      ?results;
+      with(<eq> (<length> results, <length> files) | "Input size not equal to output size");
+      filesToAnalyze := <make-set> <mapconcat(?ParallelResults(_, _, _, _, _, <id>))> results;
+      if not([] := filesToAnalyze) then
+        allResults := <concat> [results, <index-parallel-analyze(analyze)> filesToAnalyze]
+      else
+        allResults := results
+      end
+  
+  /** @internal */   
+  index-parse-file:
+    file -> (ast', file)
+    with
+	    if <file-exists> file then
+	    	if ast := <parse-file> file then
+	    		ast' := ast
+	      else
+	      	ast' := ()
+      	end
+	    else
+	      ast' := ()
+	    end
+   
+  /** @internal */   
+  index-set-markers:
+    ParallelResults(ast, ast', errors, warnings, notes, diffs) -> <id>
+    with
+      <set-markers(|ast)> (ast', errors, warnings, notes)
+      
+  /** @internal */
+  index-analyze(analyze):
+    (ast, path, project-path) -> ParallelResults(ast, ast', errors, warnings, notes, filesToAnalyze)
+    with
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyze>;
+      if [] := filesToAnalyze then
+        complete-work-unit
+      end
+      
+/** @internal */
+rules // Splitter
+  
+  /** @internal */
+  index-split = fail
+  /** @internal */
+  index-is-toplevel = fail
+  /** @internal */
+  index-is-qualifier = fail
+  /** @internal */
+  index-qualifier-subelements = fail
+  /** @internal */
+  index-create-qualifier(|qualifier) = fail
+  
+  /** @internal */
+  index-toplevel-split:
+    ast -> asts'
+    with
+      (ast', _) := <analyze-defs> ast;
+      asts      := <index-toplevel-split-internal> ast';
+      asts'     := <strip-annos> asts
+      
+  /** @internal */
+  index-toplevel-split-internal:
+    node -> units
+    with
+      switch id
+        case ?():
+          units := [((), [])]
+        case index-is-qualifier:
+          elems := <mapconcat(index-toplevel-split-internal)> <index-qualifier-subelements> node;
+          units := <map(index-transform-qualifier(|node))> elems
+        case index-is-toplevel:
+          units := [(node, <index-uri> <nam-get-definition-key> node)]
+        otherwise:
+          units := [(node, [])]
+      end
+      
+  /** @internal */
+  index-transform-qualifier(|node):
+    (elem, subfileName) -> (qualifier, subfileName)
+    with
+      qualifier := <index-create-qualifier(|node)> elem
+
+/** @internal */
+rules // Diffs
+  
+  /** @internal */
+  analyze-diff:
+    (defs1, defs2) -> (added, removed)
+    with
+      added   := <diff(index-diff-compare)> (defs2, defs1);
+      removed := <diff(index-diff-compare)> (defs1, defs2)
+    
+  /** @internal */
+  analyze-store-diff(|changedEntries, revision): 
+    astFilePairs -> analyzeFiles'
+    with
+      changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
+      dependentFiles  := <index-get-dependent-files> changedEntries;
+      
+      // Files to analyze
+      analyzeFiles := <make-set> <remove-all(fake-file)> dependentFiles;
+      analyzeFiles' := analyzeFiles;
+      // TODO: Is this extra check needed?
+      /*if <getfirst(index-get-file-revision; \r -> (r, revision)\; gt)> analyzeFiles then
+        // Add current file if the current file has read information from another file with a higher revision.
+        // This indicates that potentially outdated information was read.
+        analyzeFiles' := [file|analyzeFiles]
+      else
+        analyzeFiles' := analyzeFiles
+      end;*/
+      
+      // Files to compile
+      changedAstFiles := <filter(analyze-astdiff)> astFilePairs;
+      compileFiles := <make-set> <concat> [analyzeFiles', changedFiles, changedAstFiles];
+      // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
+      <map(analyze-add-compilediff)> compileFiles
+      
+  /** 
+   * Checks if ast for given file has changed. Succeeds if old ASTDiff is not found or if ASTDiff is different.
+   *
+   * @internal
+   */
+  analyze-astdiff:
+    (ast, file) -> file
+    where
+      name := <conc> (<index-file-to-uri> file, ["ast-checksum"]);
+      newChecksum := <checksum> ast;
+      if oldChecksum := <index-get-global(|name)> then
+        <index-set-global(|name)> newChecksum;
+        not(<eq> (oldChecksum, newChecksum))
+      else
+        <index-set-global(|name)> newChecksum
+      end
+      
+  /** 
+   * Adds given file to the list of files to compile.
+   *
+   * @internal
+   */
+  analyze-add-compilediff = index-add-global(|"compile-diff")
+  
+  /** 
+   * Gets the list of files to compile, and then clear it.
+   *
+   * @internal
+   */
+  analyze-get-compilediffs = index-get-all-globals(|"compile-diff"); index-clear-global(|"compile-diff")
+  
+rules // Index lookup rules (that take into account adjust-index-lookup)
+  
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s and outer scopes in namespace n that start with prefix p, returning the first 
+   * found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   *
+   * @type term -> ?Def(uri')
+   *
+   * @internal
+   */
+  index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> definition
+    where
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if StopLookup() := defs then
+        fail
+      end;
+      
+      if not(definition := <Hd> defs) then
+        [_|path']  := path;
+        definition := <index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x
+      end
+      
+  /** @internal */
+  index-lookup-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-internal(id, id, name-compare|namespace, path, prefix)
+
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for definitions in the scope of s 
+   * and outer scopes in namespace n that start with prefix p, returning all found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   *
+   * @internal
+   */
+  index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> defs'
+    where
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if [_|path'] := path then
+        defs2 := <index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x;
+        defs' := <conc> (defs, defs2)
+      else
+        defs' := defs
+      end
+
+  /** @internal */
+  index-lookup-all-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-internal(id, id, name-compare|namespace, path, prefix)
+      
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s in namespace n that start with prefix p, returning the first found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type term -> List(Def(uri))
+   *
+   * @internal
+   */
+  index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> defs
+    with
+      adjust-lookup;
+      adjusted := <index-do-adjust-lookup(|namespace, path, x, prefix)> x;
+      defs     := <index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix)> x
+    <+
+      adjust-import;
+      adjusted := <index-do-adjust-import(|namespace, path)> x;
+      defs     := <index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix)> x
+    <+
+      defs     := <index-get-children(\uri -> Def(uri)\, name-compare|namespace, prefix)> [namespace | path]
+      
+  /** @internal */
+  index-lookup-all-scoped-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-scoped-internal(id, id, name-compare|namespace, path, prefix)
+  
+  /** @internal */
+  index-do-adjust-import(|namespace, path) =
+    adjust-index-import(|namespace, path)
+    
+  /** @internal */
+  index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix):
+    x -> defs'
+    with
+      defs := 
+        <mapconcat(
+             index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix)
+          <+ fatal-err(|"Unexpected result from adjust-index-import, should be a list of [namespace | path].")
+        )> adjusted;
+        if not(<elem> (StopLookup(), defs)) then
+        	defs' := <filter(name-compare)> defs
+        else
+        	defs' := StopLookup()
+      	end
+      	
+  /** @internal */
+  index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix):
+  	[namespace|path] -> results'
+  	with
+  		results := <index-lookup-all-scoped-internal(fail, adjust-lookup, name-compare|namespace, path, prefix)> x;
+  		if not(<is-list> results) then
+  			results' := [results]
+  		else
+  			results' := results
+			end
+        
+  /** @internal */
+  index-do-adjust-lookup(|namespace, path, use, prefix) =
+    repeat-until(
+      prim("SSL_EXT_get_parent", <id>)
+    , adjust-index-lookup(origin-equal(|use)|namespace, path, prefix) 
+    )
+    
+  /** @internal */  
+  index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix):
+    x -> defs'
+    with
+      if StopLookup() := adjusted then
+        defs' := StopLookup()
+      else
+        defs := 
+          <mapconcat(
+               \d at Def(p) -> [d]\
+            <+ \[namespace'|path'] -> <index-lookup-all-scoped-internal(adjust-import, fail, name-compare|namespace', path', prefix)> x\
+            <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list of Def(uri) or [namespace | path], or StopLookup() to stop the lookup.")
+          )> adjusted;
+          defs' := <filter(name-compare)> defs
+      end
+      
+rules // Name comparisons
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-equal(|name):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri
+  
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-substring(|prefix):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given namespace.
+   * 
+   * @internal 
+   */      
+  index-compare-name-substring(|prefix, namespace):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <eq> (namespace, <index-uri-namespace> uri);
+      <is-substring(!prefix)> <index-uri-name> uri
+      
+rules // URI and value projections
+       
+  /** @internal */
+  index-uri-impl:
+    Def(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Use(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Read(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
+ 
+  /**
+   * TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
+   * 
+   * @internal 
+   */
+  index-uri-impl:
+    ReadWildcard(uri, _) -> uri
+
+  /** @internal */
+  index-value-impl:
+    Def(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Use(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Read(value) -> value
+  
+  /** @internal */
+  index-value-impl:
+    ReadWildcard(_, value) -> value
+    
+rules // Internal helpers
+
+  /**
+   * Transforms a term C( (a1, [b1]), (a2, [b2, b3]) ) to a tuple (C(a1, a2), [b1, b2, b3]).
+   *
+   * @internal
+   */
+  unzip-analyzed:
+    appl -> (appl', unzipped-parts)
+    with
+      appl'          := <all(\(a, _) -> a\)> appl;
+      unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
+       
+  /**
+   * Tests if the current file is just a testing language input
+   *
+   * @internal
+   */
+  is-test-file = 
+    string-ends-with(|".spt")
+  /** @internal */
+  is-test-language = 
+    ?"Spoofax-Testing"
+  /** @internal */
+  is-test-input(|language, path) = 
+    <is-test-language> language <+ <is-test-file> path
+      
+  /** @internal */
+  fake-file = 
+    is-test-file <+ index-is-fake-file
+  
+  /** @internal */
+  ast-uri-to-ast-file(|full-path):
+    (ast, uri) -> (ast, (full-path, uri))
+   
+  /** @internal */    
+  index-readwildcard-substring(|prefix):
+    ReadWildcard(_, name) -> <id>
+    where <is-substring(!prefix)> name
+  
+  /** @internal */  
+  store-wildcard-read(|namespace, path, prefix):
+    children -> <id>
+    with
+      if set := <Index-ReadSet> then
+        if 1 := <length> children then
+          // HACK: This solves the problem of ReadWildcards making too many files re-analyze, but this should
+          // be handled in the index primitives instead.
+          <iset-add(|Read([namespace, prefix|path]))> set
+        else
+          <iset-add(|ReadWildcard([namespace|path], prefix))> set
+        end
+      end
+  
+  /** @internal */    
+  index-is-unresolved(|x, uri) = 
+    Index-UnresolvedSet; (iset-contains(|(x, uri)) <+ fail)
+  /** @internal */
+  index-add-unresolved(|x, uri) = 
+    (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
+  
+  /** @internal */
+  index-file-dependent-construct: 
+    uri -> <conc> (uses, reads)
+    with
+      uses := <index-get-uses-all> Def(uri);
+      reads := <index-get-reads-all> Def(uri)
+  
+  /** @internal */  
+  index-file-dependency-filter = 
+    ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_)
+ 
+  /** @internal */
+  index-eq(|namespace, expected) =
+    where(
+      ?Def([_, name | _]);
+      <SRTS-EXT-eq-ignore-annos(|expected)> name
+    )
+  
+  /** @internal */
+  external SRTS-EXT-eq-ignore-annos(|t)
+  
+  /** @internal */
+  index-key-unwrap = 
+    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id
+    
+rules // Interface for generated code
+ 
+  /** @internal */
+  nam-get-def(|paths, namespace):
+    part* -> Def([namespace, part* | <lookup-index-path> (namespace, paths)])
+  
+  /** @internal */ 
+  nam-annotate-def(|path):
+    t -> result
+    with
+    	result := t{path}
+  
+  /** @internal */ 
+  nam-annotate-use(|paths, namespace):
+    t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  
+  /** @internal */ 
+  nam-annotate-use(|paths, namespace, namespace2, name):
+  	t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  	
+  /** @internal */ 
+  nam-annotate-scope(|path):
+    t -> t{Scope(path)}
+  
+  /** @internal */ 
+  nam-get-scope-types = fail
+  /** @internal */ 
+  nam-ordered-def = fail
+  /** @internal */
+  nam-get-definitions = fail
+  /** @internal */
+  nam-get-definition = nam-get-definitions ; Hd 
+  /** @internal */
+  nam-get-definition-keys = fail
+  /** @internal */
+  nam-get-definition-key = nam-get-definition-keys ; Hd
+  /** @internal */
+  nam-get-uses = fail
+  /** @internal */
+  nam-get-use = nam-get-uses ; Hd 
+  /** @internal */
+  nam-get-uses-keys = fail
+  /** @internal */
+  nam-get-use-key = nam-get-uses-keys ; Hd
+  /** @internal */
+  nam-annotate-names(|paths, def-path) = fail
+  /** @internal */
+  nam-annotate-scopes(|def-path) = fail
+  /** @internal */
+  nam-unique = fail

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-library.generated.str	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,634 @@
+module lib/analysis-library.generated
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library-internal.generated
+  lib/index-library.generated
+ 
+signature constructors
+ 
+  // Analyze constructors
+  Editor      : AnalysisPhase
+  Compile     : AnalysisPhase
+ 
+  // Index elements
+  Def          : List(UriPart) -> Summary
+  Use          : List(UriPart) -> Summary
+  BadUse       : List(UriPart) -> Summary
+  Read         : List(UriPart) -> Summary
+  ReadWildcard : List(UriPart) * String -> Summary
+  Diff         : List(UriPart) * List(Summary) -> Summary
+  
+  // Adjust lookup actions
+  StopLookup   : LookupAction
+  
+rules // Index analysis extension points
+ 
+  /**
+   * Extension point. Override this rule to adjust how the index analysis looks up use sites to definitions.
+   *
+   * The overriden rule must return a list that contains any of the following items:
+   *   - Def(uri)         : A definition with exactly this URI has been found. This tells the lookup to resolve the
+   *                        use site to this definition.
+   *   - [namespace|path] : This tells the lookup to do a new lookup at the given namespace and path.
+   * 
+   * Returning multiple of these in the list is allowed, these will all show up during content completion and possibly
+   * other custom strategies. If multiple items are returned during reference resolving for example, the first item
+   * will be used.
+   *
+   * If the lookup has failed, for example your custom rule cannot find any definitions, you can also return 
+   * StopLookup() instead of a list. This tells the lookup algorithm to stop any further lookups for this use site.
+   * This can be useful to stop lookups for recursive expressions like property access, preventing a lot of useless
+   * lookups that will always fail anyway.
+   *
+   * Extension example:
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     PropAccess(exp, name) -> properties
+   *     where
+   *       <check-target-name> name
+   *     with
+   *       if TYPE(type{_}) := <type-of> exp then
+   *         properties := <index-lookup-children(|Property(), prefix)> type
+   *       else
+   *         properties := StopLookup()
+   *       end
+   *
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     Var(name) -> [[Var() | path], [Property() | path]]
+   *     where
+   *       <check-target-name> name
+   *
+   * @param check-target-name   A strategy that should be used to check if the name of the current element is what the
+   *                            lookup algorithm is looking for.
+   * @param namespace           The namespace of the element that should be looked up.
+   * @param path                The path the lookup algorithm is currently looking at for the element.
+   * @param prefix              The prefix name of the element the lookup algorithm is looking for. This is usually the
+   *                            full name of the element, but could be a partial prefix during content completion.
+   * @type def -> List(Def(uri) or [namespace|path]) or StopLookup()
+   */
+  adjust-index-lookup(check-target-name|namespace, path, prefix) = fail
+  
+  /**
+   * Extension point.
+   */
+  adjust-index-import(|namespace, path) = fail
+  
+  /** 
+   * Extension point. Override this rule to store data about definitions in the index. Should call <store-results> on 
+   * a (list of) data that must be stored in the index.
+   *
+   * Note that store-results always fails, this is a trick to make every adjust-index-def-data override always fail so 
+   * that every overriden rule is called once for each definition. This can lead to unexpected behaviour when trying to 
+   * store multiple items by calling store-results in a map or filter! Be sure to always let your adjust-index-def-data 
+   * rule fail if you are doing a <filter(store-results)> for example.
+   *
+   * Extension example:
+   *   adjust-index-def-data(store-results|namespace, path):
+   *     def -> <store-results> Type([namespace|path], type)
+   *     where
+   *       type := <type-of> def
+   *
+   * @param store-results Call this on the data you want to store in the index.
+   * @param namespace     The namespace of the definition that the rule is being called on.
+   * @param path          The path of the definition that the rule is being called on.
+   * @type def -> fail 
+   */
+  adjust-index-def-data(store-results|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to adjust how the index assigns a namespace and path (URI) to definitions and
+   * use sites. Should return a path that will be assigned to the definition or use site.
+   *
+   * Extension example:
+   *   adjust-index-path(check-target-definition|namespace, path):
+   *     Start(_, _) -> [<string-replace(|<project-path>, "")> <Fst> <index-get-current-file>]
+   *
+   *
+   * @param check-target-definition 
+   * @param namespace               The namespace that would be given to the current definition or use site.
+   * @param path                    The path that would be given to the current definition or use site.
+   * @type def -> uri@[namespace|path]
+   */
+  adjust-index-path(check-target-definition|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to define index-stored constructors to check for difference during analysis.
+   * The index-diff-compare extension point is used to do the actual comparison. Defaults to Def constructs.
+   *
+   * Extension example:
+   *   index-diff-constructors = ?Type(_, _)
+   *
+   * @type a -> ?a
+   *
+   * @see index-diff-compare
+   */
+  index-diff-constructors = 
+    ?Def(_)
+  
+  /**
+   * Extension point. Override this rule to define a custom comparison of two index elements. It should fail if they 
+   * are not equal and return the indentity if they are equal. Only constructors defined by index-diff-constructors are
+   * compared.
+   *
+   * Extension example:
+   *   index-diff-compare:
+   *     (Type(u1, v1), Type(u2, v2)) -> <id>
+   *     where
+   *       <index-uri-eq> (u1, u2);
+   *       <eq> (v1, v2)
+   *
+   * @type (a, b) -> ?(a, b)
+   *
+   * @see index-diff-constructors
+   */
+  index-diff-compare:
+    (Def(u1), Def(u2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2)
+ 
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   * Defaults to Editor() phase.
+   *
+   * @param language  The name of the language that is being analysed.
+   *
+   * @type (ast, path, project-path) -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top(|phase, language)
+   */
+  analyze-top(|language):
+    (ast, path, project-path) -> <analyze-top(|Editor(), language, path, project-path)> ast
+   
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @param phase         The type of analysis phase. There are 2 phases to choose from:
+   *                      - Editor():   File dependencies are analysed.
+   *                      - Compile():  File dependencies are not analysed.
+   * @param language      The name of the language that is being analysed.
+   * @param path          The path of the file to analyze relative to project-path.
+   * @param project-path  The path of the directory that contains all the source files.
+   * @type ast -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top-internal(|phase, language, project-path, full-path)
+   */
+  analyze-top(|phase, language, path, project-path):
+    ast -> (ast', filesToAnalyze)
+    with
+      full-path := $[[project-path]/[path]];
+      if index-split then
+        index-setup(|language, [project-path], full-path); // Set up the index, splitting may require index calls.
+        asts := <index-toplevel-split> ast;
+        astsFilePairs := <map(ast-uri-to-ast-file(|full-path))> asts;
+        Results(ast', _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
+      else
+        Results(asts, _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, (full-path, []))];
+        ast' := <Hd> asts // Always returns a list of 1 AST if there is no splitter, so take the head.
+      end
+  
+rules // Parallel analysis
+  
+  /**
+   * Does a parallel analysis of given files using the specified analysis strategy. Automatically does parallel
+   * analysis of dependent files that have changed during the analysis.
+   *
+   * Example:
+   *   <index-parallel-analyze-files(analyze)> ["text/file1.ext", "text/file2.ext"]
+   *
+   * @param analyze (ast, path, project-path) -> (ast', errors, warnings, notes, filesToAnalyze). Strategy that 
+   *                analyzes a file using the index. Gets a (ast, path, project-path) tuple as input and must return 
+   *                a (ast', errors, warnings, notes, filesToAnalyze) tuple as output.
+   * @type List((file, subfile) or file) -> None()
+   */
+  index-parallel-analyze-files(analyze):
+    files -> None()
+    with
+      length; 
+      set-total-work-units
+    with
+      index-parallel-analyze(analyze);
+      filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
+      
+rules // Splitter
+  
+  /**
+   * Merges a top level definition back into an AST using splitter rules.
+   *
+   * @param toplevel  The top level definition to merge back into the given AST.
+   * @type ast -> ast'
+   */
+  index-merge-ast(|toplevel):
+    term -> merged
+    with
+      if <is-list> term then
+        [first-ast|_] := term;
+        merged        := <index-merge-ast(|toplevel)> first-ast
+      else
+        if <index-is-qualifier> term then
+          [elem|_]    := <index-qualifier-subelements> term;
+          merged      := <index-create-qualifier(|term)> <index-merge-ast(|toplevel)> elem
+        else
+          merged      := toplevel
+        end
+      end
+ 
+rules // Query primitives
+ 
+  /**
+   * Gets a DefData entry that matches the kind of data and given URI, or fail.
+   *
+   * Example:
+   *   <index-get-data(|Type())> Def([Entity(), "Bar"]) => [DefData([Entity(), "Bar"], Type(), TYPE("Bar")), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(DefData(uri, kind, value))
+   */
+  index-get-data(|kind):
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-value> DefData(uri, kind, ())
+      
+  /**
+   * Gets all DefData entries that match the kind of data and given URI
+   *
+   * Example:
+   *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(value)
+   */
+  index-get-data-all(|kind):
+     <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all-values> DefData(uri, kind, ())
+
+  /**
+   * Gets a Use entry that matches given URI, or fail.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))
+   */
+  index-get-use:
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)
+     
+  /**
+   * Gets all Use entries that match the given URI.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))
+   */
+  index-get-uses-all:
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)
+     
+  /**
+   * Gets all Read and ReadWildcard entries that match the given URI.
+   *
+   * Example:
+   *   <index-get-reads-all> [Property(), "Bar", "p"] => [Read([Property(), "Bar", "p"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Read(uri) or ReadWildcard(uri, prefix))
+   */
+  index-get-reads-all:
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <conc> (reads, readwildcards')
+    where
+      reads := <index-get-all> Read(uri);
+      if !uri => [namespace, prefix | path-parent] then
+        readwildcards  := <index-get-all> ReadWildcard([namespace | path-parent], ());
+        readwildcards' := <filter(index-readwildcard-substring(|prefix))> readwildcards
+      else
+        readwildcards' := []
+      end
+ 
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  index-get-all:
+    template -> <indexlib-get-all> template
+      with
+       if set := <Index-ReadSet> then
+         uri := <index-uri>;
+         <iset-add(|Read(uri))> set
+       end
+       
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  index-get-all-values:
+    template -> <map(index-value)> <index-get-all> template
+       
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  index-get:
+    template -> <?[<id>|_]> <index-get-all> template
+      
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  index-get-value:
+    template -> <index-value> <?[<id>|_]> <index-get-all> template
+
+  /**
+   * Gets all Def children elements of an URI in a certain namespace.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * Example:
+   *   <index-get-children(|Field())> Def([Entity(), "Baz"]) => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> [Entity(), "Baz"] => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(|namespace) = 
+    index-get-children(\uri -> Def(uri)\, id|namespace)
+  
+  /**
+   * Gets all children elements of an URI in a certain namespace using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
+   */
+  index-get-children(construct-template, name-compare|namespace):
+    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children
+    with
+      template  := <construct-template> [namespace | path];
+      children  := <prim("LANG_index_get_children", template)>;
+      <store-wildcard-read(|namespace, path, "")> children
+
+  /**
+   * Gets all Def children elements of an URI in a certain namespace where the name starts with a prefix.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * Example:
+   *   <index-get-children(|Field(), "fo")> Def([Entity(), "Baz"]) => [Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field(), "ba")> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), ...]
+   *   <index-get-children(|Field(), "ze")> [Entity(), "Baz"] => [...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @param prefix    Only child Def elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
+   */
+  index-get-children(|namespace, prefix) = 
+    index-get-children(\uri -> Def(uri)\, index-compare-name-substring(|prefix, namespace)|namespace, prefix)
+  
+  /**
+   * Gets all children elements of an URI in a certain namespace where the name starts with a prefix
+   * using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @param prefix              Only child elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
+   */
+  index-get-children(construct-template, name-compare|namespace, prefix):
+    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children'
+    with
+      template  := <construct-template> [namespace | path];
+      children  := <prim("LANG_index_get_children", template)>;
+      children' := <filter(name-compare)> children;
+      <store-wildcard-read(|namespace, path, prefix)> children'
+
+  /**
+   * Gets a set of all files that have a reference to the given index entries.
+   *
+   * Example:
+   *   <index-get-referenced-files(\uri -> [Read(uri), Use(uri, [])]\)> [Def([Entity(), "Bar"]), ...] => 
+   *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @param construct-from-uri  uri -> List(elements). Construction strategy that creates a list of reference 
+   *                            constructs from all given entries, such as \uri -> [Read(uri), Use(uri, [])]\
+   * @type List(elem) -> List((file, subfile))
+   */
+  index-get-referenced-files(construct-from-uri):
+    entries -> files
+    where
+      uris        := <filter(index-uri)> entries;
+      referenced  := <concat> <filter(construct-from-uri)> uris;
+      files       := <iset-elements> <iset-addlist(|<mapconcat(index-get-files-of)> referenced)> <new-iset>
+ 
+  /**
+   * Convenience function for finding files with Read and Use dependencies to the given definitions.
+   *
+   * Example:
+   *   <index-get-dependent-files> [Def([Entity(), "Bar"]), ...] => [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @type List(elem) -> List((file, subfile))
+   *
+   * @see index-get-referenced-files(construct-from-uri)
+   * @see index-file-dependent-construct
+   */
+  index-get-dependent-files = 
+    index-get-referenced-files(index-file-dependent-construct)
+     
+rules // Index lookup rules (that take into account adjust-index-lookup)
+ 
+  /**
+   * Given an annotated AST node, resolves it, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup:
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+ 
+  /**
+   * Given an annotated AST node, resolves it, returning all its definitions.
+   * Uses precise matching for names.
+   * 
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all:
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+ 
+  /**
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-substring(|prefix)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+      
+  /**
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names.
+   *
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+      
+  /**
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names. Imports are not considered.
+   *
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped-noimports:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(fail, id, index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+  
+  /**
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix in only the parent scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-scoped(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix)|ns, parent-path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      (<?[_|<id>]> path <+ !path) => parent-path
+
+  /**
+   * Given an annotated AST node and a namespace, returns all definitions inside given node with given namespace.
+   * Does not match names, all names are allowed.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-children(|namespace) = 
+    index-lookup-children(|namespace, "")
+      
+  /**
+   * Given an annotated AST node, a namespace and prefix, returns all definitions inside given node with given 
+   * namespace and prefix.
+   * Uses substring matching for names.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */    
+  index-lookup-children(|namespace, prefix):
+    x{[_|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix, namespace)|namespace, path, prefix)> x
+      
+rules // Index utilities
+  
+  /**
+   * Gets the namespace part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-namespace> "Bar"{[Entity(), "Bar", "Baz"]} => Entity()
+   *
+   * @type "name"{uri@[namespace|path]} -> namespace
+   */
+  index-uri-namespace:
+    x{[namespace|path]} -> <index-namespace-unwrap> namespace
+
+  /**
+   * Gets the path part of the URI for given key (term{uri} element). Resolves it if unresolved.
+   *
+   * Example:
+   *   <index-uri-path> "Bar"{[Entity(), "Bar", "Baz"]} => ["Bar", "Baz"]
+   *
+   * @type "name"{uri@[namespace|path]} -> path'
+   */
+  index-uri-path:
+    x{[namespace|path]} -> path'
+    where
+      if !namespace => Unresolved(namespace) then
+        Def(path') := <index-lookup>
+      else
+        path' := path
+      end
+      
+  /**
+   * Gets the name part of the URI for given key (term{uri} element).
+   *
+   * Example:
+   *   <index-uri-name> "Bar"{[Entity(), "Bar", "Baz"] => "Bar"
+   *
+   * @type "name"{uri@[namespace|[name|restPath]]} -> name
+   */ 
+  index-uri-name:
+    x{[_|[name|_]]} -> name
+    
+  /**
+   * Determines if a given AST node is a definition site, according to the syntax.
+   *
+   * FIXME: Also succeeds on use sites.
+   *
+   * @type def -> ?def
+   */
+  index-is-definition =
+    where(nam-get-definition-key)
+    
+  /**
+   * Checks if given keys (term{uri} elements) are equal. Discards unresolved URI's.
+   *
+   * Example:
+   *   <index-key-eq> ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]}) => 
+   *     ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]})
+   *   <index-key-eq> ("Foo"{[Entity(), "Foo"]}, "Bar"{[Entity(), "Bar"]}) => fail
+   *
+   * @type (k1, k2) -> ?(k1, k2)
+   */      
+  index-key-eq:
+    (k1, k2) -> <id>
+    where
+      <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)
+      
+  /**
+   * Given a list of file pairs, returns the list of real files.
+   *
+   * @type List((file, subfile)) -> List(file)
+   */    
+  index-filepairs-to-files:
+    filePairs -> files
+    with
+      files := <make-set> <map(Fst; string-replace(|<conc-strings> (<project-path>, "/"), ""))> filePairs

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/compilation-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/compilation-library.generated.str	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,244 @@
+module lib/compilation-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+rules // Extension points
+  
+  /**
+   * Extension point. Override this rule to define a desugaring that is applied to AST before analyzing and compiling.
+   *
+   * Extension example:
+   *   index-desugar-ast:
+   *     ast -> <desugar> ast
+   *
+   * @type ast -> ast'
+   */
+  index-desugar-ast = fail
+    
+  /**
+   * Extension point. Override this rule to define a compilation or transformation to some other target language. The
+   * index manages which files have to be compiled and calls this rule for each AST that has changed since the last
+   * compilation.
+   *
+   * Extensions example:
+   *   index-compile-ast(|file, subfile):
+   *     ast -> None()
+   *     with
+   *       java := <to-java> ast;
+   *       full-path := <dirname> file;
+   *       filename := <guarantee-extension(|"java")> <base-filename> file;
+   *       writePath := $[[full-path]/java/];
+   *       writeFile :=  $[[writePath][filename]];
+   *       try(<mkdir> writePath);
+   *       <fclose> <fputs> (java, <fopen> (writeFile, "w"))
+   *
+   * @param file    The file that must be compiled.
+   * @param subfile The subfile that must be compiled ("" if there is no subfile).
+   * @type ast -> None()
+   */
+  index-compile-ast(|file, subfile) = fail
+
+  /**
+   * Extension point. 
+   */
+  index-is-partial-ast = fail
+
+  /**
+   * Extension point. 
+   */
+  index-combine-asts = fail
+  
+rules // Compilation
+  
+  /**
+   * Schedules compilation in the background of all files that have changed since the last compilation.
+   *
+   * @type x -> x
+   */
+  index-schedule-compilation:
+    _ -> None()
+    with
+      queue-strategy(|"index-compilation", "Compiling files")
+  
+  /** @internal */
+  index-compilation:
+    language -> None()
+    with
+      // Init
+      project-path := <project-path>;
+      index-setup(|language, [project-path], ".")
+    with
+      // Determine the files to compile by looking at changed files
+      diffs         := <analyze-get-compilediffs>;
+      files         := <map(index-compilation-restore-read-file)> diffs;
+      filteredFiles := <make-set> <remove-all(index-compilation-filter-file)> files;
+      (completeFiles, partialFiles) := <index-split-partial-files> filteredFiles;
+      
+      // Clean compile time reads
+      <filter(index-compilation-clean-reads)> completeFiles;
+      <filter(index-compilation-clean-reads)> partialFiles;
+      
+      // Set total work units to number of files to compile for visual indication
+      <set-total-work-units> <add> (<length> completeFiles, <length> partialFiles);
+      
+      // Compile the files
+      <filter(index-compilation-file; complete-work-unit)> completeFiles;
+      <filter(index-compilation-partial-file; complete-work-unit)> partialFiles
+      
+  /** @internal */    
+  index-split-partial-files:
+    files -> (completeFiles, <make-set> splitFiles)
+    with
+      (completeFiles, splitFiles) := <partition(not(index-file-is-partial), index-file-is-partial)> files
+
+  /** @internal */
+  index-compilation-file:
+    (path, subfile) -> None()
+    with
+    	asts := <index-get-all-values> AST(subfile, ());
+      <map(index-compilation-ast(|path, subfile))> asts
+      
+  /** @internal */    
+  index-compilation-partial-file:
+    (path, subfile) -> None()
+    with
+      asts := <index-get-all-values> AST(subfile, ());
+      if 1 := <length> asts then
+      	ast := <?[<id>|_]> asts
+    	else
+    		ast := <try(index-combine-asts)> asts
+  		end;
+      <index-compilation-ast(|path, subfile)> ast
+      
+  /** @internal */
+  index-compilation-ast(|path, subfile):
+    ast -> None()
+    with
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Compile file
+        <try(index-compile-ast(|path, subfile))> ast;
+        
+        // Store compile-time reads.
+        reads := <iset-elements> readSet;
+        <index-add-all(|<index-compilation-file-tuple> (path, subfile))> reads
+      |} 
+
+  /** @internal */
+  index-compilation-filter-file:
+    (file, subfile) -> (file, subfile)
+    where
+      <is-test-file <+ index-is-fake-file <+ not(file-exists)> file
+    
+rules // On save handling
+  
+  /**
+   * Commits the index to disk and schedules compilation. Use trigger-commit-and-compile instead of this strategy.
+   *
+   * @see trigger-commit-and-compile
+   *
+   * @internal
+   */
+  commit-and-compile:
+    language -> None()
+    with
+      index-commit
+    with
+      index-schedule-compilation
+
+  /**
+   * Triggers commit and compilation, requires target language as current term.
+   * Compilation can be delayed by using disable-commit-and-compile. Compilation will be triggered when 
+   * enable-commit-and-compile is called.
+   *
+   * @type language -> language
+   *
+   * @see enable-commit-and-compile
+   * @see disable-commit-and-compile
+   */
+  trigger-commit-and-compile:
+    language -> <id>
+    with
+      if not(index-is-global-enabled(|"delay-compile")) then
+        commit-and-compile
+      else
+        index-enable-global(|"trigger-compile")
+      end
+  
+  /**
+   * Delays commit and compilation until enable-commit-and-compile is called.
+   *
+   * @type x -> x
+   *
+   * @see enable-commit-and-compile
+   */
+  disable-commit-and-compile = 
+    index-enable-global(|"delay-compile")
+  
+  /**
+   * Cancels the commit and compilation delay, requires target language as current term. 
+   * If commit and compilation was triggered during the delay, it is triggered now.
+   *
+   * @type language -> language
+   *
+   * @see disable-commit-and-compile
+   */
+  enable-commit-and-compile:
+    language -> <id>
+    with
+      if index-is-global-enabled(|"trigger-compile") then
+        commit-and-compile
+      end;
+      index-disable-global(|"delay-compile")
+      
+/** @internal */
+rules // Compile time reads
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    (file, subfile) -> (file', subfile)
+    where
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    file -> file'
+    where
+      not(<is-tuple> file);
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
+      end
+      
+  /** @internal */
+  index-compilation-clean-reads = 
+    ?(file, subfile); index-compilation-file-tuple; index-clear-file
+      
+  /** @internal */
+  index-compilation-file-tuple:
+    (file, subfile) -> ($[[<index-compilation-read-path>]/[file]], subfile)
+    
+  /** @internal */
+  index-compilation-read-path =
+    !"/.internal/reads/compile"
+    
+/** @internal */
+rules // Utility
+
+  /** @internal */
+  index-file-is-partial:
+  	file -> file
+  	where 
+      Snd; index-uri; index-is-partial-ast

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/editor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/editor-common.generated.str	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,269 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-entitylang-file
+  parse-entitylang-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/EntityLang.tbl)>
+    )
+
+  parse-string = parse-entitylang-string
+  parse-entitylang-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/EntityLang.tbl)>
+    )
+  
+  parse-stream = parse-entitylang-stream
+  parse-entitylang-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/EntityLang.tbl)>
+    )
+
+  pp-entitylang-string =
+    ast2abox(|[<import-term(include/EntityLang.generated.pp.af)>,
+               <import-term(include/EntityLang.pp.af)>]);
+    box2text-string(|100)
+    
+  language = !"EntityLang"
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          );
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+  
+  plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-offset    = prim("SSL_EXT_origin_offset", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-file      = prim("SSL_EXT_origin_file", <id>)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "EntityLang", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    ![<id>]; all(s); ?[<id>]
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+  True       : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/entitylang.str file. These definitions should also be automatically 
+  // generated in the imported include/EntityLang.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+  
+  Type     : Namespace
+  Property : Namespace
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+    
+  // Gets the number of background analyses for currenct project and language.
+  // Current term: ignored
+  analysis-count = prim("SSL_EXT_queue_analysis_count")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/index-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/index-library.generated.str	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,733 @@
+module lib/index-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+signature constructors
+  
+  // Index elements
+  DefData      : List(UriPart) * DefDataType * Term -> Summary
+    
+  // URI header
+  Namespace      : UriPart
+  Unresolved     : Namespace -> UriPart
+  INTERNAL_ERROR : UriPart
+  Timestamp      : UriPart
+ 
+  // Remainder of URI
+  String : UriPart
+  Anon   : Int -> UriPart
+  Anon   : UriPart
+  
+  FileEntries : Term * Term -> Term
+  
+  // Globals
+  Global : Namespace
+  Global : List(UriPart) -> Summary
+  Global : List(UriPart) * List(Summary) -> Summary
+  
+  // None namespace
+  None   : Namespace
+  
+rules // Index management
+   
+  /**
+   * Sets up the index library for given language and project paths.
+   * Must be called once before doing anything with the library.
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   *
+   * @obsolete
+   * @type x -> x
+   */
+  index-setup(|language, project-paths) =
+    obsolete(!"index-setup(|language, project-paths); use index-setup(|language, project-paths, current-file)");
+    index-setup(|language, project-paths, ".")
+    
+  /**
+   * Sets up the index library for given language, project paths and current file.
+   * Must be called once before doing anything with the library.
+   *
+   * Example:
+   *   <index-setup(|"MiniJava", [<project-path>], "test/test.mjv")
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   * @param current-file  The current file that is being analysed. Can be retrieved later using index-get-current-file.
+   *                      Can also be changed later using index-set-current-file.
+   * @type x -> x
+   */
+  index-setup(|language, project-paths, current-file) =
+    prim("LANG_index_setup", language, project-paths, current-file)
+    
+  /**
+   * Sets the current file the index (analysis) is operating on to the given file.
+   *
+   * Example:
+   *   <index-set-current-file> "fullpath/file.ext"
+   *   <index-set-current-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-set-current-file = 
+    prim("LANG_index_set_current_file", <id>)
+
+  /**
+   * Adds given element to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-add(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   *
+   * @param file  The file (and subfile) to add the element to.
+   * @type x -> ?x
+   */
+  index-add(|file) =
+    prim("LANG_index_add", <id>, file)
+
+  /**
+   * Adds all given elements to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-add-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to add the elements to.
+   * @type List(x) -> ?List(x)
+   */
+  index-add-all(|file) =
+    list-loop(with(index-add(|file)))
+    
+  /**
+   * Removes given element from the index that is contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-remove(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   * 
+   * @param file  The file (and subfile) to remove the element from.
+   * @type x -> ?x
+   */
+  index-remove(|file) =
+    prim("LANG_index_remove", <id>, file)
+    
+  /**
+   * Removes all given elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-remove-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to remove the elements from.
+   * @type List(x) -> ?List(x)
+   */
+  index-remove-all(|file) =
+    list-loop(with(index-remove(|file)))
+    
+  /**
+   * Removes all elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-clear-file> "fullpath/file.ext"
+   *   <index-clear-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-clear-file = 
+    prim("LANG_index_clear_file", <id>)
+    
+  /**
+   * Clears all elements from the index.
+   *
+   * @type x -> x
+   */
+  index-clear = 
+    prim("LANG_index_clear_all")
+    
+  /**
+   * Clears all elements from the index and re-analyzes all files in the project.
+   *
+   * @type x -> x
+   */
+  index-reload = 
+    prim("LANG_index_reload")
+   
+  /**
+   * Commits index to a file on disk.
+   *
+   * @type x -> x
+   */
+  index-commit = 
+    prim("LANG_index_commit")
+
+  /**
+   * Starts a transaction on the index for the current file. Additions to the index are not visible to other files 
+   * until index-end-transaction is called. Operations on the index are only thread safe during a transaction.
+   *
+   * @type x -> x
+   */
+  index-start-transaction = 
+    prim("LANG_index_start_transaction")
+  
+  /**
+   * Ends a transaction on the index for the current file. Additions made to the index during the transaction are
+   * added to the global index visible for other files. Operations on the index are not thread safe any more after 
+   * this call.
+   *
+   * @type x -> x
+   */
+  index-end-transaction = 
+    prim("LANG_index_end_transaction")
+  
+  /**
+   * Starts a transaction, applies given strategy and ends the transaction. All index operations used from the given
+   * strategy are thread safe.
+   * 
+   * @param s The strategy to apply. Transaction will still properly end if strategy fails.
+   * @type x -> x'
+   *
+   * @see index-start-transaction
+   * @see index-end-transaction
+   */
+  index-transaction(s) = 
+    prim("LANG_index_start_transaction"); try(s); prim("LANG_index_end_transaction")
+  
+rules // Index querying
+  
+  /**
+   * Gets the file that the analysis is currently in.
+   *
+   * @type x -> (file, subfile)
+   *
+   * @see index-setup(|language, project-paths, current-file)
+   * @see index-set-current-file
+   */
+  index-get-current-file =
+    prim("LANG_index_get_current_file")
+  
+  /**
+   * Gets a list of all files and subfiles for current project.
+   *
+   * Example:
+   *   <index-get-all-files> => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type x -> List((file, subfile))
+   */   
+  index-get-all-files =
+    prim("LANG_index_all_files")
+  
+  /**
+   * Gets all index entries for the given file path and optionally subfile.
+   *
+   * Examples:
+   *   <index-get-all-in-file> "fullpath/file.ext" => [Def([Entity(), "Bar"]), ...]
+   *   <index-get-all-in-file> ("fullpath/file.ext", "subfile") => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file:
+    filepath -> entries
+    with
+      entries := <prim("LANG_index_get_all_in_file", filepath)>
+   
+  /**
+   * Gets index entries in some namespace for the given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-get-all-in-file(|Import())> "fullpath/file.ext" => [Def([Import(), "Bar"]), ...]
+   *   <index-get-all-in-file(|Import())> ("fullpath/file.ext", "subfile") => [Def([Import(), "Bar"]), ...]
+   *
+   * @param namespace Only index entries from this namespace are retrieved.
+   * @type file or (file, subfile) -> List(elem)
+   */  
+  index-get-all-in-file(|namespace):
+    filepath -> entries
+    with
+      // TODO: Optimize -- add an argument to LANG_index_get_all_in_file to do this filtering
+      entries := <prim("LANG_index_get_all_in_file", filepath)>;
+      filter(where(index-uri => [namespace | _]))
+    
+  /**
+   * Gets the revision of a file and optionally subfile.
+   *
+   * Example:
+   *   <index-get-file-revision> "fullpath/file.ext" => 13
+   *   <index-get-file-revision> ("fullpath/file.ext", "subfile") => 37
+   *
+   * @type file or (file, subfile) -> Int
+   */
+  index-get-file-revision:
+    file -> <prim("LANG_index_get_file_revision", file)>
+    
+  /**
+   * Gets the containing files and subfiles of index entry with given template.
+   *
+   * Example:
+   *   <index-get-files-of> Def([Entity(), "Bar"]) => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type template -> List((file, subfile))
+   */  
+  index-get-files-of:
+    template -> <prim("LANG_index_get_files_of", template)>
+    
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
+   */
+  indexlib-get-all:
+    template -> <prim("LANG_index_get", template)>
+    
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * Example:
+   *   <indexlib-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
+   */
+  indexlib-get-all-values:
+    template -> <map(index-value)> <indexlib-get-all> template
+ 
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
+   */
+  indexlib-get:
+    template -> <?[<id>|_]> <indexlib-get-all> template
+   
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <indexlib-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
+   */
+  indexlib-get-value:
+    template -> <index-value> <?[<id>|_]> <indexlib-get-all> template
+    
+rules // Index globals
+    
+  /**
+   * Gets the 'fake' path where globals are stored in the index.
+   *
+   * @internal
+   */
+  index-globals-path = 
+    !"/.internal/globals"
+    
+  /**
+   * Gets the URI where globals are stored in the index for given name or names.
+   *
+   * @internal
+   * @type name or List(name) -> uri
+   */
+  index-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["globals", ".internal"]]
+      else
+        uri := [Global(), names, "global", ".internal"]
+      end
+    
+  /**
+   * Gets the first value in global storage with given name, or fail.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => Timestamp(1334322856)
+   *   index-get-global(|["last-compile", "file.str"]) => Timestamp(1334322856)
+   * 
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> ?value
+   */
+  index-get-global(|name):
+    _ -> value
+    where
+      value := <indexlib-get-value> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Gets all values in global storage with given name.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => [Timestamp(1334322856), ...]
+   *   index-get-global(|["last-compile", "file.str"]) => [Timestamp(1334322856), ...]
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> List(value)
+   */ 
+  index-get-all-globals(|name):
+    _ -> values
+    with
+      values := <indexlib-get-all-values> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Add value to global storage with given name.
+   *
+   * Example:
+   *   <index-add-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-add-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-add-global(|name):
+    value -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-globals-uri> name, value)
+      
+  /**
+   * Overwrites value in global storage with given value.
+   *
+   * Example:
+   *   <index-set-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-set-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-set-global(|name):
+    value -> <id>
+    with
+      index-clear-global(|name);
+      <index-add-global(|name)> value
+    
+  /**
+   * Removes all values from global storage with given name.
+   *
+   * Example:
+   *   index-clear-global(|"last-compile")
+   *   index-clear-global(|["last-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-clear-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-globals-uri> name, ())
+      
+  /**
+   * Gets the URI where boolean globals are stored in the index for given name or names.
+   *
+   * @internal
+   */
+  index-boolean-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["boolean", "globals", ".internal"]]
+      else
+        uri := [Global(), names, "boolean", "global", ".internal"]
+      end
+      
+  /**
+   * Sets boolean value true to global boolean storage with given name.
+   *
+   * Example:
+   *   index-enable-global(|"can-compile")
+   *   index-enable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-enable-global(|name):
+    _ -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Sets boolean value false to global boolean storage with given name.
+   *
+   * Example:
+   *   index-disable-global(|"can-compile")
+   *   index-disable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-disable-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Query for boolean value true in global boolean storage with given name.
+   *
+   * Example:
+   *   index-is-global-enabled(|"can-compile")
+   *   index-is-global-enabled(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> ?x
+   */   
+  index-is-global-enabled(|name):
+    _ -> <id>
+    where
+      <indexlib-get> Global(<index-boolean-globals-uri> name)
+
+rules // Index utility
+  
+  /**
+   * Gets the URI part for given term. Can be extended by defining a index-uri-impl rule. If no index-uri-impl rule
+   * is defined for the given term the first subterm is used as the URI. Fails if no URI can be retrieved from the
+   * given term.
+   *
+   * Example:
+   *   <index-uri> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => [Entity(), "Bar", "Baz"]
+   *
+   * @type elem -> ?uri
+   *
+   * @see index-uri-impl
+   * @see index-uri-generic
+   */ 
+  index-uri = 
+    index-uri-impl <+ index-uri-generic
+  
+  /**
+   * Gets the namespace part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => Entity()
+   *
+   * @type uri@[namespace|path] -> namespace
+   */ 
+  index-uri-namespace =
+    ?[<id>|_]
+  
+  /**
+   * Gets the path part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => ["Bar", "Baz"]
+   *   <index-uri-path> [Entity()] => []
+   *
+   * @type uri@[namespace|path] -> path
+   */ 
+  index-uri-path =
+    ?[_|<id>]
+    
+  /**
+   * Gets the name part of the given URI or fail if there is no name.
+   *
+   * Example:
+   *   <index-uri-name> [Entity(), "Bar", "Baz"] => "Bar"
+   *   <index-uri-name> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */ 
+  index-uri-name =
+    ?[_|[<id>|_]]
+    
+  /**
+   * Gets the parent of given URI or fail if the URI doesn't have a parent.
+   *
+   * Example:
+   *   <index-uri-parent> [Entity(), "Bar", "Baz"] => [Entity(), "Baz"]
+   *   <index-uri-parent> [Entity(), "Baz"] => [Entity()]
+   *   <index-uri-parent> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */     
+  index-uri-parent =
+    ?[ns|[_|<id>]]; ![ns|<id>]
+  
+  /**
+   * Gets the value part for given term. Can be extended by defining a index-value-impl rule. If no index-value-impl 
+   * rule is defined for the given term the second subterm is used as the value. Fails if no value can be retrieved
+   * from the given term.
+   *
+   * Example:
+   *   <index-value> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => TYPE("Bar")
+   *
+   * @type elem -> ?value
+   *
+   * @see index-value-impl
+   * @see index-value-generic
+   */  
+  index-value = 
+    index-value-impl <+ index-value-generic
+  
+  /**
+   * Queries if given index file is a 'fake' file for storing internal data.
+   *
+   * @type x -> ?x
+   */
+  index-is-fake-file = 
+    string-starts-with(|"/.internal")
+  
+  /**
+   * Checks if given URI's are equal. Discards anonymous scopes if necessary.
+   *
+   * Example:
+   *   <index-uri-eq> ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"]) => 
+   *     ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"])
+   *   <index-uri-eq> ([Entity(), "Foo"], [Entity(), "Bar"]) => fail
+   *
+   * @type (u1, u2) -> ?(u1, u2)
+   */
+  index-uri-eq:
+    (u1, u2) -> <id>
+    where
+      u1' := <index-uri-unwrap> u1;
+      u2' := <index-uri-unwrap> u2;
+      (<eq> (u1', u2') <+ <eq> (<remove-all(?Anon(_))> u1', <remove-all(?Anon(_))> u2'))
+  
+  /**
+   * Finds the first key (term{uri} element) for given term, or fail. 
+   *
+   * @type x -> ?name{uri}
+   */
+  index-find-key:
+    x -> key
+    where
+      key := <collect-one(?_{_})> x
+
+  /**
+   * Converts a path from an URI to a string.
+   *
+   * Example:
+   *   <index-path-to-string> ["Bar", "Baz"] => "Bar.Baz"
+   *
+   * @type path -> str
+   */
+  index-path-to-string:
+    path -> str
+    with
+      str := <take-until(?Anon(_)); reverse; separate-by(|"."); concat-strings> path
+      
+  /**
+   * Converts a URI to a string.
+   *
+   * Example:
+   *   <index-uri-to-string> [Entity(), "Bar", "Baz"] => "Entity://Bar.Baz"
+   *
+   * @type uri -> str
+   */
+  index-uri-to-string:
+    [ns|path] -> <concat-strings> [nsStr, "://", pathStr]
+    with
+      pathStr := <index-path-to-string> path;
+      nsStr := <?<id>#(_)> ns
+  
+  /**
+   * Converts a file to a string.
+   *
+   * Example:
+   *   <index-file-to-string> "fullpath/file.ext" => "fullpath/file.ext"
+   *
+   * @type file -> file
+   */
+  index-file-to-string:
+    file -> file
+    where
+      not(<is-tuple> file)
+  
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", []) => "fullpath/file.ext"
+   *
+   * @type (file, []) -> file
+   */
+  index-file-to-string:
+    (file, []) -> file
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => "fullpath/file.ext at Entity://Foo.Bar"
+   *
+   * @type (file, subfile) -> str
+   */
+  index-file-to-string:
+    (file, subfile) -> <concat-strings> [file, "@", <index-uri-to-string> subfile]
+    where
+      not([] := subfile)
+
+  /**
+   * Converts a file to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> "fullpath/file.ext" => [None(), "fullpath/file.ext"]
+   *
+   * @type file -> uri
+   */      
+  index-file-to-uri:
+    file -> [None(), file]
+    where
+      not(<is-tuple> file)
+      
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", []) => [None(), "fullpath/file.ext]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, []) -> [None(), file]
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => [Entity(), "Foo", "Bar", "fullpath/file.ext"]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, subfile) -> <conc> ([file], subfile)
+    where
+      not([] := subfile)
+      
+/** @internal */
+rules // URI and value projections
+
+  /** @internal */
+  index-uri-impl:
+    [_|_] -> <id>
+  
+  /** @internal */
+  index-uri-impl:
+    DefData(uri, _, _) -> uri
+
+  /** @internal */
+  index-uri-generic:
+    term -> <?_#(<?[<id>|_]>)> term
+  
+  /** @internal */
+  index-value-impl:
+    DefData(_, _, value) -> value
+    
+  /** @internal */
+  index-value-generic:
+    term -> <?_#(<?[_, <id>|_]> )> term
+     
+/** @internal */ 
+rules // Internal helpers
+  
+  /** @internal */
+  index-namespace-unwrap =
+    \Unresolved(n) -> n\ <+ id
+    
+  /** @internal */
+  index-uri-unwrap =
+    \[ns|xs] -> [<index-namespace-unwrap> ns|xs]\ <+ id

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/refactor-common.generated.str	Mon Nov  5 03:21:12 2012	(r25675)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/EntityLang.generated.pp.af)
+	

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/plugin.xml
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/plugin.xml	Mon Nov  5 01:19:11 2012	(r25674)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/plugin.xml	Mon Nov  5 03:21:12 2012	(r25675)
@@ -8,5 +8,14 @@
        <extension id="org.spoofax.graphical.entitylang.textual.parser" name="EntityLang Parser" point="org.eclipse.imp.runtime.parser">
           <parser class="org.spoofax.graphical.entitylang.textual.EntityLangParseController" language="EntityLang">
           </parser>
-       </extension>    
-    </plugin>
\ No newline at end of file
+       </extension>
+       <extension point="org.eclipse.emf.ecore.extension_parser"> <parser type="ent" class="org.spoofax.modelware.gmf.resource.SpoofaxGMFResourceFactory"/> </extension>
+    	<extension point="org.spoofax.modelware.gmf.synchronizer">
+          <synchronizer
+                textFileExtension="ent"
+                domainFileExtension="ent"
+                diagramFileExtension="ent_diagram"
+                packageName="EntityLang">
+          </synchronizer>
+       </extension> 
+</plugin>
\ No newline at end of file

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/entitylang.str
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/entitylang.str	Mon Nov  5 01:19:11 2012	(r25674)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/entitylang.str	Mon Nov  5 03:21:12 2012	(r25675)
@@ -37,8 +37,7 @@
     with
       editor-init;
       (ast', errors, warnings, notes, filesToAnalyze) := <analyze> (ast, path, project-path);
-      <try(editor-queue-analysis)> <remove-all(?path)> filesToAnalyze;
-	  <to-modelware> (ast', path, project-path)
+      <try(editor-queue-analysis)> <remove-all(?path)> filesToAnalyze
       
   // Main entry point for analyzes, called when multiple files have changed. 
   editor-analyze:
@@ -166,16 +165,3 @@
     files -> None()
     with
       index-parallel-analyze-files(analyze)
-
-rules // Graphical editor  
-
-  to-modelware:
-    (ast', path, project-path) -> None()
-    with
-      packageName := <get-config> "program";
-      textFilePath := $[[project-path]/[path]];
-      diagramFileExtension := <conc-strings> (<lower-case> packageName, "_diagram");
-      diagramFilePath := $[[project-path]/[<guarantee-extension(|diagramFileExtension)> path]];
-      <to-modelware(|textFilePath, diagramFilePath, packageName)> ast'
-      
-  external to-modelware(|diagramFilePath, packageName, textFilePath)
\ No newline at end of file

From oskarvanrest at gmail.com  Mon Nov  5 04:21:22 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 03:21:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25676 -
	experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model
Message-ID: <20121105032122.CB9DB108C012@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 03:21:22 2012
New Revision: 25676
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25676&sc=1

Log:
Diagram and domain file extensions.

Modified:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore	Mon Nov  5 03:21:12 2012	(r25675)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore	Mon Nov  5 03:21:22 2012	(r25676)
@@ -6,7 +6,10 @@
       <details key="0" value="id"/>
       <details key="1" value="types"/>
     </eAnnotations>
-    <eAnnotations source="gmf.diagram"/>
+    <eAnnotations source="gmf.diagram">
+      <details key="model.extension" value="ent"/>
+      <details key="diagram.extension" value="ent.diagram"/>
+    </eAnnotations>
     <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
         iD="true"/>
     <eStructuralFeatures xsi:type="ecore:EReference" name="types" upperBound="-1"

From oskarvanrest at gmail.com  Mon Nov  5 04:43:49 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 03:43:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25677 -
	experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model
Message-ID: <20121105034349.8666E108C012@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 03:43:49 2012
New Revision: 25677
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25677&sc=1

Log:
fix

Modified:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore	Mon Nov  5 03:21:22 2012	(r25676)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore	Mon Nov  5 03:43:49 2012	(r25677)
@@ -8,7 +8,7 @@
     </eAnnotations>
     <eAnnotations source="gmf.diagram">
       <details key="model.extension" value="ent"/>
-      <details key="diagram.extension" value="ent.diagram"/>
+      <details key="diagram.extension" value="ent_diagram"/>
     </eAnnotations>
     <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
         iD="true"/>

From oskarvanrest at gmail.com  Mon Nov  5 05:03:10 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 04:03:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25678 - in
	modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf:
	. resource
Message-ID: <20121105040310.3A4D7108C01F@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 04:03:09 2012
New Revision: 25678
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25678&sc=1

Log:
Default value bug fix

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/Model2Term.java
   modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/Model2Term.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/Model2Term.java	Mon Nov  5 03:43:49 2012	(r25677)
+++ modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/Model2Term.java	Mon Nov  5 04:03:09 2012	(r25678)
@@ -85,13 +85,17 @@
 
 	@Override
 	protected IStrategoTerm createDefaultValue(EAttribute attribute) {
-		return factory.makeString(attribute.getDefaultValueLiteral());
+		Object defaultValue = attribute.getEType().getDefaultValue();
+		return createDefaultValue(defaultValue);
 	}
 
 	@Override
 	protected IStrategoTerm createDefaultValue(EReference reference) {
-		Object defaultValue = reference.getEReferenceType().getEIDAttribute().getEAttributeType().getDefaultValue();
-
+		Object defaultValue = reference.getEReferenceType().getEIDAttribute().getEType().getDefaultValue();
+		return createDefaultValue(defaultValue);
+	}
+	
+	private IStrategoTerm createDefaultValue(Object defaultValue) {
 		if (defaultValue == null)
 			return factory.makeString("x");
 		else

Modified: modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java	Mon Nov  5 03:43:49 2012	(r25677)
+++ modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java	Mon Nov  5 04:03:09 2012	(r25678)
@@ -13,7 +13,6 @@
 import org.eclipse.emf.common.util.URI;
 import org.eclipse.emf.ecore.EAnnotation;
 import org.eclipse.emf.ecore.EClass;
-import org.eclipse.emf.ecore.EClassifier;
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.emf.ecore.EPackage;
 import org.eclipse.emf.ecore.impl.EPackageRegistryImpl;

From oskarvanrest at gmail.com  Mon Nov  5 05:29:21 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 04:29:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25679 -
	modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource
Message-ID: <20121105042921.705522B8120@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 04:29:21 2012
New Revision: 25679
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25679&sc=1

Log:
Error for unspecified root class

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java	Mon Nov  5 04:03:09 2012	(r25678)
+++ modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java	Mon Nov  5 04:29:21 2012	(r25679)
@@ -25,6 +25,7 @@
 import org.spoofax.modelware.emf.Term2Model;
 import org.spoofax.terms.TermFactory;
 import org.strategoxt.imp.generator.construct_textual_change_4_0;
+import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.FileState;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
@@ -59,9 +60,10 @@
 		} catch (BadDescriptorException | FileNotFoundException | ModelException e) {
 			e.printStackTrace();
 		}
-		
-		if (analysedAST == null);
-		
+
+		if (analysedAST == null)
+			;
+
 		String languageName = null;
 		try {
 			languageName = fileState.getDescriptor().getLanguage().getName();
@@ -69,26 +71,25 @@
 			e.printStackTrace();
 		}
 		EPackage ePackage = EPackageRegistryImpl.INSTANCE.getEPackage(languageName);
-		
+
 		EObject eObject = null;
-		
+
 		if (analysedAST == null) {
 			EAnnotation rootElementAnnotation = ePackage.getEAnnotation("Spoofax");
-			if (rootElementAnnotation != null) {
-				String rootElement = ePackage.getEAnnotation("Spoofax").getDetails().get("RootElement");
-				if (rootElement != null) {
-					EClass rootClassifier = (EClass) ePackage.getEClassifier(rootElement);
-					if (rootClassifier != null) {
-						eObject = ePackage.getEFactoryInstance().create(rootClassifier);
-					}
+			if (rootElementAnnotation == null || rootElementAnnotation.getDetails().get("RootElement") == null) {
+				Environment.logException("Root class unspecified");
+			} else {
+				EClass rootClassifier = (EClass) ePackage.getEClassifier(rootElementAnnotation.getDetails().get("RootElement"));
+				if (rootClassifier != null) {
+					eObject = ePackage.getEFactoryInstance().create(rootClassifier);
 				}
 			}
-		}
-		else {
-			Term2Model term2Model = new Term2Model(ePackage);		
+
+		} else {
+			Term2Model term2Model = new Term2Model(ePackage);
 			eObject = term2Model.convert(analysedAST);
 		}
-		
+
 		getContents().add(0, eObject);
 	}
 

From oskarvanrest at gmail.com  Mon Nov  5 05:32:19 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 04:32:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25680 -
	experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model
Message-ID: <20121105043219.463362B8120@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 04:32:19 2012
New Revision: 25680
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25680&sc=1

Log:
fix

Modified:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore	Mon Nov  5 04:29:21 2012	(r25679)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.graphical/model/EntityLang.ecore	Mon Nov  5 04:32:19 2012	(r25680)
@@ -1,15 +1,15 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="EntityLang" nsURI="EntityLang" nsPrefix="EntityLang">
+  <eAnnotations source="Spoofax">
+    <details key="RootElement" value="Module"/>
+  </eAnnotations>
   <eClassifiers xsi:type="ecore:EClass" name="Module">
     <eAnnotations source="StrategoTerm.index">
       <details key="0" value="id"/>
       <details key="1" value="types"/>
     </eAnnotations>
-    <eAnnotations source="gmf.diagram">
-      <details key="model.extension" value="ent"/>
-      <details key="diagram.extension" value="ent_diagram"/>
-    </eAnnotations>
+    <eAnnotations source="gmf.diagram"/>
     <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
         iD="true"/>
     <eStructuralFeatures xsi:type="ecore:EReference" name="types" upperBound="-1"

From oskarvanrest at gmail.com  Mon Nov  5 05:51:23 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 04:51:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25681 -
	modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource
Message-ID: <20121105045123.43FE12B8123@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 04:51:22 2012
New Revision: 25681
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25681&sc=1

Log:
Bug report

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java	Mon Nov  5 04:32:19 2012	(r25680)
+++ modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java	Mon Nov  5 04:51:22 2012	(r25681)
@@ -109,6 +109,10 @@
 		}
 
 		IStrategoTerm oldAST = fileState.getCurrentAst();
+		if (oldAST == null){
+			Environment.logException("Can't parse text file");
+			// TODO: see Spoofax.modelware/7
+		}
 		IStrategoTerm resultTuple = termFactory.makeList(termFactory.makeTuple(oldAST, newAST));
 
 		File file = filePath.toFile();

From oskarvanrest at gmail.com  Mon Nov  5 05:57:27 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 04:57:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25682 -
	modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource
Message-ID: <20121105045727.5F8A4108C065@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 04:57:27 2012
New Revision: 25682
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25682&sc=1

Log:


Modified:
   modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java	Mon Nov  5 04:51:22 2012	(r25681)
+++ modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/resource/SpoofaxResource.java	Mon Nov  5 04:57:27 2012	(r25682)
@@ -41,7 +41,7 @@
 	protected FileState fileState;
 
 	public SpoofaxResource(URI uri) {
-		this.uri = uri;
+		super(uri);
 
 		URI resolvedFile = CommonPlugin.resolve(uri);
 		this.filePath = new Path(resolvedFile.toFileString());
@@ -110,8 +110,8 @@
 
 		IStrategoTerm oldAST = fileState.getCurrentAst();
 		if (oldAST == null){
-			Environment.logException("Can't parse text file");
-			// TODO: see Spoofax.modelware/7
+			Environment.logException("Can't parse text file, see Spoofax.modelware/7");
+			// TODO: pretty-print newAST
 		}
 		IStrategoTerm resultTuple = termFactory.makeList(termFactory.makeTuple(oldAST, newAST));
 

From oskarvanrest at gmail.com  Mon Nov  5 05:57:45 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 04:57:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25683 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf
Message-ID: <20121105045745.ABAC87F8136@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 04:57:45 2012
New Revision: 25683
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25683&sc=1

Log:
Bugfix

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java	Mon Nov  5 04:57:27 2012	(r25682)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java	Mon Nov  5 04:57:45 2012	(r25683)
@@ -109,6 +109,9 @@
 				String otherExtension;
 
 				Language language = LanguageRegistry.getInstance().get(extension);
+				if (language == null) {
+					return;
+				}
 
 				UniversalEditor textEditor = null;
 				DiagramEditor diagramEditor = null;

From oskarvanrest at gmail.com  Mon Nov  5 09:09:14 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 08:09:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25684 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf
Message-ID: <20121105080914.1EEDE108C025@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 08:09:13 2012
New Revision: 25684
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25684&sc=1

Log:


Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java	Mon Nov  5 04:57:45 2012	(r25683)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java	Mon Nov  5 08:09:13 2012	(r25684)
@@ -82,7 +82,9 @@
 		}
 		IStrategoTerm analysedAST = observer.getResultingAst(resource);
 
-		Bridge.getInstance().term2Model(editorPair, analysedAST);
+		if (analysedAST != null) {
+			Bridge.getInstance().term2Model(editorPair, analysedAST);
+		}
 	}
 
 	private class Timer implements Runnable {

From m.dejonge at tudelft.nl  Mon Nov  5 09:37:23 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 05 Nov 2012 08:37:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25685 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice:
	editor trans
Message-ID: <20121105083723.133632B8016@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Nov  5 08:37:22 2012
New Revision: 25685
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25685&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Mon Nov  5 08:09:13 2012	(r25684)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Mon Nov  5 08:37:22 2012	(r25685)
@@ -5,7 +5,7 @@
 
 completions Semantic completion proposer
 
-  completion proposer: editor-complete
+  completion proposer Node.SortAndConstructor: editor-complete
     
   completion trigger: "\."
   completion trigger: ":"

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str	Mon Nov  5 08:09:13 2012	(r25684)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str	Mon Nov  5 08:37:22 2012	(r25685)
@@ -20,20 +20,15 @@
       proposals := <get-all-sorts>
 
   editor-complete:
-    (Constructor(COMPLETION(_)), position, ast, path, project-path) -> ["_"|proposals]
+    (SortAndConstructor(Sort(srt),Constructor(COMPLETION(""))), position, ast, path, project-path) -> ["_"|proposals]
     where
       //Sort + constructor
-      <oncetd(?SortAndConstructor(Sort(srt), Constructor(COMPLETION(_))))> ast;
       proposals := <get-all-constructors(|srt)>
  
   editor-complete:
     (Constructor(COMPLETION(_)), position, ast, path, project-path) -> ["_"|proposals]
     where
       //Unknown Sort + constructor
-      <oncetd(
-      	?ConstructorOnly(Constructor(COMPLETION(_))) <+
-      	?NOCONTEXT(Constructor(COMPLETION(_)))
-      )> ast;
       proposals := <get-all-constructors>
       
   editor-complete:

From m.dejonge at tudelft.nl  Mon Nov  5 10:44:05 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 05 Nov 2012 09:44:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25686 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans
Message-ID: <20121105094405.7A4DA108C025@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Nov  5 09:44:04 2012
New Revision: 25686
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25686&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str	Mon Nov  5 08:37:22 2012	(r25685)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str	Mon Nov  5 09:44:04 2012	(r25686)
@@ -80,7 +80,9 @@
       !sort;
       try(?cf(<id>) + ?lex(<id>));
       repeat(?label(_, <id>));
-      (?sort(x) + ?parameterized-sort(x, _))
+      (?sort(x) + ?parameterized-sort(x, _));
+      <not(oncetd(?"recover" <+ ?"deprecated" <+ ?"completion" <+ ?"reject"))> attrs; //does not help?
+      <not(?[lit(artificial)]; <string-starts-with(|"|#")> artificial)> lhs 
     with
       rules(
         SortDeclaration   :  x -> x

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str	Mon Nov  5 08:37:22 2012	(r25685)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str	Mon Nov  5 09:44:04 2012	(r25686)
@@ -50,12 +50,18 @@
       >
 
   editor-complete:
-    (_, position, ast, path, project-path) -> proposals
+    (CompletionTemplateEx([Sort(sort)],_,COMPLETION(""),_), position, ast, path, project-path) -> proposals
+    where
+      proposals := <get-template-proposals> sort
+
+  editor-complete:
+    (CompletionTemplateEx([Sort(sort)],_,[String(COMPLETION(""))],_), position, ast, path, project-path) -> proposals
+    where
+      proposals := <get-template-proposals> sort
+      
+  get-template-proposals:
+    sort -> proposals
     where
-      <oncetd(
-     	?CompletionTemplateEx([Sort(sort)],_,COMPLETION(""),_) <+
-     	?CompletionTemplateEx([Sort(sort)],_,[String(COMPLETION(""))],_)
-      )> ast;
       lhs*      := <bagof-SortProductionLHS> sort;
       lhs'*     := <topdown(repeat(remove-completion-irrelevant))> lhs*;
       proposals := <make-set> <filter(to-completion-parts-top)> lhs'*
@@ -73,7 +79,7 @@
       rest'    := <to-completion-parts> <separate-by(|lit(" "))> rest
 
   to-completion-parts:
-    [lit(x) | tail] -> [ lits' | tail']
+    [lit(x) | tail] -> ["\"", lits', "\" " | tail']
     where
       lits  := <map(?lit(<id>))> <take-while(?lit(_))>;
       lits' := <escape> <concat-strings> <separate-by(|" ")> lits;

From m.dejonge at tudelft.nl  Mon Nov  5 10:44:25 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 05 Nov 2012 09:44:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25687 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20121105094425.AF1ED108C136@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Nov  5 09:44:25 2012
New Revision: 25687
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25687&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Mon Nov  5 09:44:04 2012	(r25686)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Mon Nov  5 09:44:25 2012	(r25687)
@@ -15,10 +15,10 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashSet;
-import java.util.Iterator;
 import java.util.Set;
 
 import org.eclipse.imp.parser.IParseController;
+import org.eclipse.jface.text.rules.EndOfLineRule;
 import org.spoofax.interpreter.core.InterpreterErrorExit;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.core.InterpreterExit;
@@ -64,6 +64,8 @@
 	private static final long REINIT_PARSE_DELAY = 4000;
 	
 	private static final String WHITESPACE_SEPARATION = "     ";
+	
+	private static final int RIGHT_CONTEXT_SIZE = 40;
 
 	private final StrategoObserver observer;
 
@@ -186,7 +188,12 @@
 			//constructed partial trees around cursor location. 
 			//Only take into account the left context, since the right context can not be trusted
 			//SGLR sglr = parseController.getParser().getParser();
-			completionContexts = parseCompletionContext(parseController, documentPrefix + COMPLETION_TOKEN + WHITESPACE_SEPARATION);			
+			String documentFromPrefix = documentPrefix + COMPLETION_TOKEN + WHITESPACE_SEPARATION;
+			completionContexts = parseCompletionContext(parseController, documentFromPrefix, documentFromPrefix.length() - 2);			
+			String fullDocument = documentPrefix + COMPLETION_TOKEN + documentSuffix;
+			int endOffset = Math.min(fullDocument.length() - 2, (documentPrefix + COMPLETION_TOKEN).length() + RIGHT_CONTEXT_SIZE);
+			Set<IStrategoTerm> moreCompletionContexts = parseCompletionContext(parseController, fullDocument, endOffset);
+			completionContexts.addAll(moreCompletionContexts);
 		} catch (Exception e) {
 			this.errorMessage = "No semantic proposals available - syntax errors";
 			Environment.logException(errorMessage, e);
@@ -196,7 +203,7 @@
 		return completionContexts;
 	}
 
-	private Set<IStrategoTerm> parseCompletionContext(SGLRParseController parseController, String document) {
+	private Set<IStrategoTerm> parseCompletionContext(SGLRParseController parseController, String document, int endOffset) {
 		Set<IStrategoTerm> completionContexts;
 		SGLR sglr = new SGLR(parseController.getParser().getParser().getTreeBuilder(), parseController.getParser().getParser().getParseTable());
 		sglr.setCompletionParse(true, getCompletionOffsetMid());
@@ -207,7 +214,7 @@
 				sglr.findLongestLeftContextReductions(
 					parserConfigDocumentPrefix,
 					getCompletionOffsetMid(),
-					document.length() - 2,
+					endOffset,
 					document
 		);
 		return completionContexts;

From m.dejonge at tudelft.nl  Mon Nov  5 10:45:00 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 05 Nov 2012 09:45:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25688 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20121105094500.E0E217F808D@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Nov  5 09:45:00 2012
New Revision: 25688
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25688&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSyntactic.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Mon Nov  5 09:44:25 2012	(r25687)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Mon Nov  5 09:45:00 2012	(r25688)
@@ -18,7 +18,6 @@
 import java.util.Set;
 
 import org.eclipse.imp.parser.IParseController;
-import org.eclipse.jface.text.rules.EndOfLineRule;
 import org.spoofax.interpreter.core.InterpreterErrorExit;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.core.InterpreterExit;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSyntactic.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSyntactic.java	Mon Nov  5 09:44:25 2012	(r25687)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSyntactic.java	Mon Nov  5 09:45:00 2012	(r25688)
@@ -5,10 +5,8 @@
 import java.util.Map;
 import java.util.Set;
 import java.util.SortedSet;
-import org.eclipse.jface.text.ITextViewer;
+
 import org.spoofax.jsglr.client.Frame;
-import org.spoofax.jsglr.client.ParseTable;
-import org.spoofax.jsglr.client.incremental.IncrementalSortSet;
 import org.spoofax.jsglr.io.SGLR;
 import org.spoofax.jsglr.shared.ArrayDeque;
 import org.strategoxt.imp.runtime.Environment;

From oskarvanrest at gmail.com  Mon Nov  5 13:33:14 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 12:33:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25689 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource
Message-ID: <20121105123314.973FF7F813E@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 12:33:14 2012
New Revision: 25689
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25689&sc=1

Log:
Spoofax.modelware/8

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java	Mon Nov  5 09:45:00 2012	(r25688)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/resource/SpoofaxGMFResource.java	Mon Nov  5 12:33:14 2012	(r25689)
@@ -12,6 +12,7 @@
 import org.spoofax.modelware.gmf.EditorPair;
 import org.spoofax.modelware.gmf.EditorPairRegistry;
 import org.spoofax.modelware.gmf.BridgeUtil;
+import org.strategoxt.imp.runtime.Environment;
 
 /**
  * @author Oskar van Rest
@@ -48,7 +49,12 @@
 		else {
 			Display.getDefault().asyncExec((new Runnable() {
 				public void run() {
-					textEditor.doSave(new NullProgressMonitor());
+					if (textEditor.getDocumentProvider() != null) {
+						textEditor.doSave(new NullProgressMonitor());
+					}
+					else {
+						Environment.logException("Your text is lost. See Spoofax.modelware/8.");
+					}
 				}
 			}));
 		}

From m.dejonge at tudelft.nl  Mon Nov  5 14:18:26 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 05 Nov 2012 13:18:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25690 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice:
	editor trans
Message-ID: <20121105131826.EFDA87F8138@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Nov  5 13:18:26 2012
New Revision: 25690
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25690&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Mon Nov  5 12:33:14 2012	(r25689)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	Mon Nov  5 13:18:26 2012	(r25690)
@@ -16,6 +16,11 @@
 
 completions Custom rules
 
+  completion template Module : "module" =
+    "module " (cursor) (blank) 
+  completion template Imports : "imports" =
+    "imports\n\t" (cursor) (blank)                               
+
   completion template Import* : "ReservedName" =
     <ModuleName:ModuleName>  "\n" (cursor) (blank)                       
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str	Mon Nov  5 12:33:14 2012	(r25689)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/analyze.str	Mon Nov  5 13:18:26 2012	(r25690)
@@ -18,7 +18,8 @@
       else
         try(record-esv)
       end
-    )
+    );
+    rules(ESVFiles : filename -> filename)
   
   record-esv:
     filename -> filename

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str	Mon Nov  5 12:33:14 2012	(r25689)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/trans/complete.str	Mon Nov  5 13:18:26 2012	(r25690)
@@ -10,6 +10,16 @@
 strategies
 
   editor-complete:
+    (Module(COMPLETION(_),_,_), position, ast, path, project-path) -> proposals
+    where
+      proposals := [<base-filename; remove-extension> path]
+
+  editor-complete:
+    (Import(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    where
+      proposals := <all-keys-ESVFiles>
+  
+  editor-complete:
     (Sort(COMPLETION(_)), position, ast, path, project-path) -> proposals
     where
       proposals := <get-all-sorts>

From m.dejonge at tudelft.nl  Mon Nov  5 14:18:54 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 05 Nov 2012 13:18:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25691 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20121105131854.7A1D72B8145@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Nov  5 13:18:54 2012
New Revision: 25691
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25691&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ParseConfigReuser.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Mon Nov  5 13:18:26 2012	(r25690)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Mon Nov  5 13:18:54 2012	(r25691)
@@ -190,7 +190,7 @@
 			String documentFromPrefix = documentPrefix + COMPLETION_TOKEN + WHITESPACE_SEPARATION;
 			completionContexts = parseCompletionContext(parseController, documentFromPrefix, documentFromPrefix.length() - 2);			
 			String fullDocument = documentPrefix + COMPLETION_TOKEN + documentSuffix;
-			int endOffset = Math.min(fullDocument.length() - 2, (documentPrefix + COMPLETION_TOKEN).length() + RIGHT_CONTEXT_SIZE);
+			int endOffset = (documentPrefix + COMPLETION_TOKEN).length() + RIGHT_CONTEXT_SIZE;
 			Set<IStrategoTerm> moreCompletionContexts = parseCompletionContext(parseController, fullDocument, endOffset);
 			completionContexts.addAll(moreCompletionContexts);
 		} catch (Exception e) {
@@ -596,12 +596,24 @@
 			public IStrategoTerm preTransform(IStrategoTerm current) {
 				if (current == oldNode) {
 					replacementNode = newNode;
-					factory.copyAttachments(current, replacementNode, true);
+					if(replacementNode.getStorageType() == MUTABLE)
+						factory.copyAttachments(current, replacementNode, true);
 					return replacementNode;
 				} else {
 					return current;
 				}
 			}
+			@Override
+			public IStrategoTerm postTransform(IStrategoTerm current) {
+				if(current.getStorageType() != MUTABLE){
+					if(current.isList()){
+						return factory.makeList(current.getAllSubterms());
+					}
+					//assert false: "unexpected immutable term";
+				}					
+				return current;
+			}
+			
 		}
 
 		Transformer trans = new Transformer();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ParseConfigReuser.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ParseConfigReuser.java	Mon Nov  5 13:18:26 2012	(r25690)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ParseConfigReuser.java	Mon Nov  5 13:18:54 2012	(r25691)
@@ -47,7 +47,6 @@
 		if(endOffset <= 0){
 			return new ArrayDeque<Frame>();
 		}
-		assert document.length() >= endOffset - 1 || endOffset <=0;
 		ArrayDeque<Frame> newParserConfig = new ArrayDeque<Frame>();
 		if(document.startsWith(documentPrefix) && endOffset >= lastOffset){
 			if(endOffset == this.lastOffset){

From oskarvanrest at gmail.com  Mon Nov  5 14:40:39 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 13:40:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25692 - in
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf:
	. editorpair editorservices
Message-ID: <20121105134039.77A73108C150@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 13:40:39 2012
New Revision: 25692
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25692&sc=1

Log:
Bridge events

Added:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeEvent.java
Deleted:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Debouncer.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorpair/
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/UndoRedoSynchronisation.java
Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairObserver.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/ModelChangeListener.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/TextSelectionChangedListener.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java	Mon Nov  5 13:18:54 2012	(r25691)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java	Mon Nov  5 13:40:39 2012	(r25692)
@@ -11,7 +11,7 @@
 import org.spoofax.modelware.emf.Model2Term;
 import org.spoofax.modelware.emf.Term2Model;
 import org.spoofax.modelware.emf.compare.CompareUtil;
-import org.spoofax.modelware.gmf.EditorPair.BridgeEvent;
+import org.spoofax.modelware.gmf.BridgeEvent;
 import org.spoofax.modelware.gmf.editorservices.SaveSynchronization;
 import org.spoofax.modelware.gmf.editorservices.UndoRedoSynchronization;
 import org.spoofax.terms.TermFactory;
@@ -38,7 +38,6 @@
 	}
 
 	public void term2Model(EditorPair editorPair, IStrategoTerm analysedAST) {
-		editorPair.notifyObservers(BridgeEvent.Term2Model);
 		
 		final DiagramEditor diagramEditor = editorPair.getDiagramEditor();
 		
@@ -48,7 +47,9 @@
 		if (currentModel == null)
 			return;
 
+		editorPair.notifyObservers(BridgeEvent.PreTerm2Model);
 		CompareUtil.merge(newModel, currentModel);
+		editorPair.notifyObservers(BridgeEvent.PostTerm2Model);
 
 		// Workaround for http://www.eclipse.org/forums/index.php/m/885469/#msg_885469
 		Display.getDefault().asyncExec(new Runnable() {
@@ -56,11 +57,9 @@
 				diagramEditor.getDiagramEditPart().addNotify();
 			}
 		});
-		
 	}
 	
 	public void model2Term(EditorPair editorPair) {
-		editorPair.notifyObservers(BridgeEvent.Model2Term);
 		
 		final IEditorPart textEditor = editorPair.getTextEditor();
 		final DiagramEditor diagramEditor = editorPair.getDiagramEditor();
@@ -75,6 +74,9 @@
 		} catch (BadDescriptorException e) {
 			e.printStackTrace();
 		}
+
+		editorPair.notifyObservers(BridgeEvent.PreModel2Term);
 		textReplacer.replaceText(termFactory.makeList(termFactory.makeTuple(currentTerm, newTerm)));
+		editorPair.notifyObservers(BridgeEvent.PostModel2Term);
 	}
 }
\ No newline at end of file

Added: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeEvent.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeEvent.java	Mon Nov  5 13:40:39 2012	(r25692)
@@ -0,0 +1,28 @@
+package org.spoofax.modelware.gmf;
+
+public enum BridgeEvent {
+	PreTextLayoutChange, 
+	PostTextLayoutChange,
+	PreDiagramLayoutChange,
+	PostDiagramLayoutChange, 
+	
+	PreTerm2Model, 
+	PostTerm2Model, 
+	PreModel2Term, 
+	PostModel2Term, 
+	
+	PrTextUndo,  
+	PostTextUndo,
+	PreDiagramUndo,
+	PostDiagramUndo,
+	
+	PreTextRedo, 
+	PostTextRedo, 
+	PreDiagramRedo,
+	PostDiagramRedo, 
+	
+	PreTextSelection,
+	PostTextSelection,
+	PreDiagramSelection,
+	PostDiagramSelection
+}

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Mon Nov  5 13:18:54 2012	(r25691)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Mon Nov  5 13:40:39 2012	(r25692)
@@ -17,13 +17,11 @@
 
 public class EditorPair {
 
-	enum BridgeEvent { TextLayoutChange, DiagramLayoutChange, Term2Model, Model2Term, TextUndo, DiagramUndo, TextRedo, DiagramRedo};
 	Collection<EditorPairObserver> observers;
 	
 	private UniversalEditor textEditor;
 	private DiagramEditor diagramEditor;
 	private Language language;
-	private Debouncer debouncer;
 	
 	private EObject semanticModel;
 	private IStrategoTerm lastAST;
@@ -38,7 +36,6 @@
 		this.textEditor = textEditor;
 		this.diagramEditor = diagramEditor;
 		this.language = language;
-		this.debouncer = new Debouncer();
 		
 		loadSemanticModel();
 		addSelectionChangeListeners();
@@ -86,10 +83,6 @@
 	public Language getLanguage() {
 		return language;
 	}
-
-	public Debouncer getDebouncer() {
-		return debouncer;
-	}
 	
 	public IStrategoTerm getLastAST() {
 		return lastAST;

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairObserver.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairObserver.java	Mon Nov  5 13:18:54 2012	(r25691)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairObserver.java	Mon Nov  5 13:40:39 2012	(r25692)
@@ -1,7 +1,5 @@
 package org.spoofax.modelware.gmf;
 
-import org.spoofax.modelware.gmf.EditorPair.BridgeEvent;
-
 /**
  * @author Oskar van Rest
  */

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/ModelChangeListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/ModelChangeListener.java	Mon Nov  5 13:18:54 2012	(r25691)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/ModelChangeListener.java	Mon Nov  5 13:40:39 2012	(r25692)
@@ -3,7 +3,7 @@
 import org.eclipse.emf.common.notify.Notification;
 import org.eclipse.emf.ecore.util.EContentAdapter;
 import org.eclipse.jface.viewers.ISelectionProvider;
-import org.spoofax.modelware.gmf.EditorPair.BridgeEvent;
+import org.spoofax.modelware.gmf.BridgeEvent;
 
 /**
  * @author Oskar van Rest
@@ -11,8 +11,7 @@
 public class ModelChangeListener extends EContentAdapter {
 
 	private EditorPair editorPair;
-	private final int debounceConstant = 500;
-	private long debouncer;
+	private boolean debouncer;
 
 	public ModelChangeListener(EditorPair editorPair) {
 		this.editorPair = editorPair;
@@ -22,13 +21,14 @@
 	public void notifyChanged(Notification n) {
 		super.notifyChanged(n);
 
+		if (debouncer) {
+			return;
+		}
+		
 		if (n.getEventType() != Notification.REMOVING_ADAPTER) {
-			if (System.currentTimeMillis() - debouncer < debounceConstant)
-				return;
-			
 			Bridge.getInstance().model2Term(editorPair);
 			
-			//TODO: move somewhere else
+			//TODO: put this elsewhere
 			ISelectionProvider selectionProvider = editorPair.getDiagramEditor().getSite().getSelectionProvider();
 			selectionProvider.setSelection(selectionProvider.getSelection());
 		}
@@ -38,8 +38,11 @@
 
 		@Override
 		public void notify(BridgeEvent event) {
-			if (event == BridgeEvent.Term2Model) {
-				debouncer = System.currentTimeMillis();
+			if (event == BridgeEvent.PreTerm2Model) {
+				debouncer = true;
+			}
+			if (event == BridgeEvent.PostTerm2Model) {
+				debouncer = false;
 			}
 		}
 	}

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java	Mon Nov  5 13:18:54 2012	(r25691)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java	Mon Nov  5 13:40:39 2012	(r25692)
@@ -18,7 +18,6 @@
 import org.eclipse.ui.IWorkbenchWindow;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.views.properties.PropertySheet;
-import org.spoofax.modelware.gmf.EditorPair.BridgeEvent;
 import org.strategoxt.imp.runtime.EditorState;
 
 /**
@@ -105,13 +104,13 @@
 
 		@Override
 		public void notify(BridgeEvent event) {
-			// start new compound change when Term2Model transformation is executed, so that we can always go back to this particular state.
-			if (event == BridgeEvent.Term2Model) {
+			// start new compound change when Term2Model transformation is to be executed, so that we can always go back to this particular state.
+			if (event == BridgeEvent.PreTerm2Model) {
 				undoManager.endCompoundChange();
 				undoManager.beginCompoundChange();
 			}
 			// don't generate a TextLayoutChange notification as a result of a model2term notification.
-			else if (event == BridgeEvent.Model2Term) {
+			else if (event == BridgeEvent.PreModel2Term) {
 				debouncer = true;
 			}
 		}

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java	Mon Nov  5 13:18:54 2012	(r25691)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java	Mon Nov  5 13:40:39 2012	(r25692)
@@ -8,7 +8,7 @@
 import org.eclipse.imp.parser.IParseController;
 import org.eclipse.ui.ide.ResourceUtil;
 import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.spoofax.modelware.gmf.EditorPair.BridgeEvent;
+import org.spoofax.modelware.gmf.BridgeEvent;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
@@ -25,13 +25,13 @@
 	private long timeOfLastChange;
 	private Thread thread;
 	private static final long keyStrokeTimeout = 700;
-	private boolean debouncer = false;
-	
+	private boolean debouncer;
+
 	public TextChangeListener(EditorPair editorPair) {
 		this.editorPair = editorPair;
 		editorPair.registerObserver(new Debouncer());
 	}
-	
+
 	@Override
 	public AnalysisRequired getAnalysisRequired() {
 		return AnalysisRequired.NONE;
@@ -40,7 +40,6 @@
 	@Override
 	public void update(IParseController controller, IProgressMonitor monitor) {
 		if (debouncer) {
-			debouncer = false;
 			return;
 		}
 		
@@ -50,16 +49,15 @@
 			thread.start();
 		}
 	}
-	
+
 	private void executeTerm2Model() {
 		UniversalEditor textEditor = editorPair.getTextEditor();
 		EditorState activeEditor = EditorState.getEditorFor(textEditor);
 		IStrategoTerm AST = activeEditor.getCurrentAst();
-		
+
 		if (lastAST != null && lastAST.equals(AST)) {
 			return;
-		}
-		else {
+		} else {
 			lastAST = AST;
 		}
 
@@ -91,7 +89,7 @@
 		public void run() {
 			try {
 				long different = -1;
-				while(different < keyStrokeTimeout) {
+				while (different < keyStrokeTimeout) {
 					different = System.currentTimeMillis() - timeOfLastChange;
 					Thread.sleep(Math.max(0, keyStrokeTimeout - different));
 				}
@@ -101,17 +99,19 @@
 			}
 		}
 	}
-	
+
 	private class Debouncer implements EditorPairObserver {
 
 		@Override
 		public void notify(BridgeEvent event) {
-			if (event == BridgeEvent.Model2Term) {
+			if (event == BridgeEvent.PreModel2Term) {
 				debouncer = true;
-				
+
 				UniversalEditor textEditor = editorPair.getTextEditor();
 				EditorState activeEditor = EditorState.getEditorFor(textEditor);
 				lastAST = activeEditor.getCurrentAst();
+			} else if (event == BridgeEvent.PostModel2Term) {
+				debouncer = false;
 			}
 		}
 	}

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java	Mon Nov  5 13:18:54 2012	(r25691)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java	Mon Nov  5 13:40:39 2012	(r25692)
@@ -18,8 +18,10 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.client.imploder.ImploderAttachment;
 import org.spoofax.modelware.emf.Object2Subterm;
+import org.spoofax.modelware.gmf.BridgeEvent;
 import org.spoofax.modelware.gmf.EditorPair;
 import org.spoofax.modelware.gmf.BridgeUtil;
+import org.spoofax.modelware.gmf.EditorPairObserver;
 import org.strategoxt.imp.runtime.EditorState;
 
 /**
@@ -28,15 +30,19 @@
 public class DiagramSelectionChangedListener implements ISelectionChangedListener {
 
 	private EditorPair editorPair;
+	private boolean debouncer;
 
 	public DiagramSelectionChangedListener(EditorPair editorPair) {
 		this.editorPair = editorPair;
+		editorPair.registerObserver(new Debouncer());
 	}
 
 	@Override
 	public void selectionChanged(SelectionChangedEvent event) {
-		if (!editorPair.getDebouncer().diagramSelectionAllowed())
+		if (debouncer) {
+			debouncer = false;
 			return;
+		}
 
 		IEditorPart textEditor = editorPair.getTextEditor();
 		IStrategoTerm AST = EditorState.getEditorFor(textEditor).getCurrentAst();
@@ -45,7 +51,10 @@
 		TextSelection textSelection = calculateTextSelection(selectedObjects, AST);
 		
 		ISelectionProvider selectionProvider = textEditor.getEditorSite().getSelectionProvider();
+		
+		editorPair.notifyObservers(BridgeEvent.PreDiagramSelection);
 		selectionProvider.setSelection(textSelection);
+		editorPair.notifyObservers(BridgeEvent.PostDiagramSelection);
 	}
 	
 	private TextSelection calculateTextSelection(List<EObject> selectedObjects, IStrategoTerm AST) {
@@ -103,4 +112,14 @@
 
 		return result;
 	}
+	
+	private class Debouncer implements EditorPairObserver {
+
+		@Override
+		public void notify(BridgeEvent event) {
+			if (event == BridgeEvent.PreTextSelection) {
+				debouncer = true;
+			}
+		}
+	}
 }

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/TextSelectionChangedListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/TextSelectionChangedListener.java	Mon Nov  5 13:18:54 2012	(r25691)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/TextSelectionChangedListener.java	Mon Nov  5 13:40:39 2012	(r25692)
@@ -16,8 +16,10 @@
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.modelware.emf.Subterm2Object;
+import org.spoofax.modelware.gmf.BridgeEvent;
 import org.spoofax.modelware.gmf.EditorPair;
 import org.spoofax.modelware.gmf.BridgeUtil;
+import org.spoofax.modelware.gmf.EditorPairObserver;
 import org.strategoxt.imp.runtime.EditorState;
 
 /**
@@ -26,33 +28,41 @@
 public class TextSelectionChangedListener implements ISelectionChangedListener {
 
 	private EditorPair editorPair;
+	private boolean debouncer;
 
 	public TextSelectionChangedListener(EditorPair editorPair) {
 		this.editorPair = editorPair;
+		editorPair.registerObserver(new Debouncer());
 	}
 
 	@Override
 	public void selectionChanged(SelectionChangedEvent event) {
-		if (illegalSelection())
+		if (debouncer) {
 			return;
-		if (!editorPair.getDebouncer().textSelectionAllowed())
+		}
+
+		if (illegalSelection()) {
 			return;
+		}
 
 		IStrategoTerm selection = EditorState.getActiveEditor().getSelectionAst(true);
 		DiagramEditor diagramEditor = editorPair.getDiagramEditor();
+
+		editorPair.notifyObservers(BridgeEvent.PreTextSelection);
 		if (selection == null) {
 			diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection());
-			return;
-		}
+		} else {
 
-		List<IStrategoAppl> selectedIStrategoAppls = filterIStrategoAppls(selection);
+			List<IStrategoAppl> selectedIStrategoAppls = filterIStrategoAppls(selection);
 
-		EObject root = BridgeUtil.getSemanticModel(diagramEditor);
-		List<EObject> eObjectsToSelect = strategoApplToEObject(selectedIStrategoAppls, root);
-		eObjectsToSelect = addAllContents(eObjectsToSelect);
-		List<EditPart> editPartsToSelect = eObjectsToEditPart(eObjectsToSelect, diagramEditor.getDiagramEditPart());
+			EObject root = BridgeUtil.getSemanticModel(diagramEditor);
+			List<EObject> eObjectsToSelect = strategoApplToEObject(selectedIStrategoAppls, root);
+			eObjectsToSelect = addAllContents(eObjectsToSelect);
+			List<EditPart> editPartsToSelect = eObjectsToEditPart(eObjectsToSelect, diagramEditor.getDiagramEditPart());
 
-		diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection(editPartsToSelect));
+			diagramEditor.getSite().getSelectionProvider().setSelection(new StructuredSelection(editPartsToSelect));
+		}
+		editorPair.notifyObservers(BridgeEvent.PostTextSelection);
 	}
 
 	private boolean illegalSelection() {
@@ -136,4 +146,17 @@
 
 		return result;
 	}
+
+	private class Debouncer implements EditorPairObserver {
+
+		@Override
+		public void notify(BridgeEvent event) {
+			if (event == BridgeEvent.PreDiagramSelection) {
+				debouncer = true;
+			}
+			if (event == BridgeEvent.PostDiagramSelection) {
+				debouncer = false;
+			}
+		}
+	}
 }

From oskarvanrest at gmail.com  Mon Nov  5 14:43:31 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 13:43:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25693 - in
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf:
	. editorservices
Message-ID: <20121105134331.3C8232B8147@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 13:43:30 2012
New Revision: 25693
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25693&sc=1

Log:


Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeUtil.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/ModelChangeListener.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeUtil.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeUtil.java	Mon Nov  5 13:40:39 2012	(r25692)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeUtil.java	Mon Nov  5 13:43:30 2012	(r25693)
@@ -8,7 +8,6 @@
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.IPath;
-import org.eclipse.core.runtime.Path;
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.emf.ecore.resource.Resource;
 import org.eclipse.emf.ecore.resource.ResourceSet;

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/ModelChangeListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/ModelChangeListener.java	Mon Nov  5 13:40:39 2012	(r25692)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/ModelChangeListener.java	Mon Nov  5 13:43:30 2012	(r25693)
@@ -27,10 +27,6 @@
 		
 		if (n.getEventType() != Notification.REMOVING_ADAPTER) {
 			Bridge.getInstance().model2Term(editorPair);
-			
-			//TODO: put this elsewhere
-			ISelectionProvider selectionProvider = editorPair.getDiagramEditor().getSite().getSelectionProvider();
-			selectionProvider.setSelection(selectionProvider.getSelection());
 		}
 	}
 	

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java	Mon Nov  5 13:40:39 2012	(r25692)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/DiagramSelectionChangedListener.java	Mon Nov  5 13:43:30 2012	(r25693)
@@ -120,6 +120,10 @@
 			if (event == BridgeEvent.PreTextSelection) {
 				debouncer = true;
 			}
+			if (event == BridgeEvent.PostModel2Term) {
+				ISelectionProvider selectionProvider = editorPair.getDiagramEditor().getSite().getSelectionProvider();
+				selectionProvider.setSelection(selectionProvider.getSelection());
+			}
 		}
 	}
 }

From oskarvanrest at gmail.com  Mon Nov  5 14:50:51 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 13:50:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25694 - in
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf:
	. editorservices
Message-ID: <20121105135051.8975ACC3C9@mx4.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 13:50:51 2012
New Revision: 25694
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25694&sc=1

Log:
refactor

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeEvent.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java	Mon Nov  5 13:43:30 2012	(r25693)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java	Mon Nov  5 13:50:51 2012	(r25694)
@@ -5,15 +5,10 @@
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.ui.IEditorPart;
-import org.eclipse.ui.PlatformUI;
-import org.eclipse.ui.commands.ICommandService;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.modelware.emf.Model2Term;
 import org.spoofax.modelware.emf.Term2Model;
 import org.spoofax.modelware.emf.compare.CompareUtil;
-import org.spoofax.modelware.gmf.BridgeEvent;
-import org.spoofax.modelware.gmf.editorservices.SaveSynchronization;
-import org.spoofax.modelware.gmf.editorservices.UndoRedoSynchronization;
 import org.spoofax.terms.TermFactory;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
@@ -28,9 +23,6 @@
 	private TermFactory termFactory = new TermFactory();
 
 	private Bridge() {
-		ICommandService service = (ICommandService) PlatformUI.getWorkbench().getService(ICommandService.class);
-		service.addExecutionListener(new SaveSynchronization());
-		service.addExecutionListener(new UndoRedoSynchronization());
 	}
 
 	public static Bridge getInstance() {

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeEvent.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeEvent.java	Mon Nov  5 13:43:30 2012	(r25693)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeEvent.java	Mon Nov  5 13:50:51 2012	(r25694)
@@ -11,7 +11,7 @@
 	PreModel2Term, 
 	PostModel2Term, 
 	
-	PrTextUndo,  
+	PreTextUndo,  
 	PostTextUndo,
 	PreDiagramUndo,
 	PostDiagramUndo,

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Mon Nov  5 13:43:30 2012	(r25693)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Mon Nov  5 13:50:51 2012	(r25694)
@@ -11,8 +11,11 @@
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.commands.ICommandService;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.modelware.gmf.editorservices.DiagramSelectionChangedListener;
+import org.spoofax.modelware.gmf.editorservices.SaveSynchronization;
 import org.spoofax.modelware.gmf.editorservices.TextSelectionChangedListener;
 
 public class EditorPair {
@@ -42,6 +45,9 @@
 		textEditor.addModelListener(new TextChangeListener(this));
 
 		OperationHistoryFactory.getOperationHistory().addOperationHistoryListener(new OperationalHistoryListener(this));
+
+		ICommandService service = (ICommandService) PlatformUI.getWorkbench().getService(ICommandService.class);
+		service.addExecutionListener(new SaveSynchronization(this));
 	}
 	
 	private void addSelectionChangeListeners() {

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java	Mon Nov  5 13:43:30 2012	(r25693)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java	Mon Nov  5 13:50:51 2012	(r25694)
@@ -1,23 +1,25 @@
 package org.spoofax.modelware.gmf.editorservices;
 
-import java.util.Collection;
-
 import org.eclipse.core.commands.ExecutionEvent;
 import org.eclipse.core.commands.ExecutionException;
 import org.eclipse.core.commands.IExecutionListener;
 import org.eclipse.core.commands.NotHandledException;
 import org.eclipse.core.runtime.NullProgressMonitor;
-import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.PlatformUI;
 import org.spoofax.modelware.gmf.EditorPair;
-import org.spoofax.modelware.gmf.EditorPairRegistry;
 
 /**
  * @author Oskar van Rest
  */
 public class SaveSynchronization implements IExecutionListener {
 
+	private EditorPair editorPair;
+	
+	public SaveSynchronization(EditorPair editorPair) {
+		this.editorPair = editorPair;
+	}
+	
 	@Override
 	public void notHandled(String commandId, NotHandledException exception) {
 	}
@@ -36,19 +38,14 @@
 	@Override
 	public void preExecute(String commandId, ExecutionEvent event) {
 		if (commandId.equals("org.eclipse.ui.file.save")) {
+			//TODO: don't get the active editor, but obtain the last active editor
 			IEditorPart activeEditor = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getActiveEditor();
-			if (activeEditor != null && activeEditor instanceof UniversalEditor) {
-				EditorPair editorPair = EditorPairRegistry.getInstance().get(activeEditor);
-				if (editorPair != null) {
-					editorPair.getDiagramEditor().doSave(new NullProgressMonitor());
-				}
+			if (activeEditor == editorPair.getTextEditor()) {
+				editorPair.getDiagramEditor().doSave(new NullProgressMonitor());
 			}
 		}
 		else if (commandId.equals("org.eclipse.ui.file.saveAll")) {
-			Collection<EditorPair> eps = EditorPairRegistry.getInstance().getAll();
-			for (EditorPair ep : eps) {
-				ep.getDiagramEditor().doSave(new NullProgressMonitor());
-			}
+			editorPair.getDiagramEditor().doSave(new NullProgressMonitor());
 		}
 	}
 }

From oskarvanrest at gmail.com  Mon Nov  5 15:19:44 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 14:19:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25695 - in
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf:
	. editorservices
Message-ID: <20121105141944.0CFB37F815A@mx1.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 14:19:43 2012
New Revision: 25695
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25695&sc=1

Log:
last active editor

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/RuntimeActivator.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java	Mon Nov  5 13:50:51 2012	(r25694)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java	Mon Nov  5 14:19:43 2012	(r25695)
@@ -5,7 +5,11 @@
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.ui.IEditorPart;
+import org.eclipse.ui.IPartListener;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.IWorkbenchPart;
 import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
 import org.spoofax.modelware.emf.Model2Term;
 import org.spoofax.modelware.emf.Term2Model;
 import org.spoofax.modelware.emf.compare.CompareUtil;
@@ -20,15 +24,28 @@
 public class Bridge {
 	
 	private static Bridge instance = new Bridge();
-	private TermFactory termFactory = new TermFactory();
+	private ITermFactory termFactory = new TermFactory();
+	private IEditorPart lastActiveEditor;
 
 	private Bridge() {
+		installLastActiveEditorListener();
 	}
 
 	public static Bridge getInstance() {
 		return instance;
 	}
 
+	private void installLastActiveEditorListener() {
+		LastActiveEditorListener listener = new LastActiveEditorListener();
+		for (IWorkbenchPage page : BridgeUtil.getAllWorkbenchPages()) {
+			page.addPartListener(listener);
+		}
+	}
+	
+	public IEditorPart getLastActiveEditor() {
+		return lastActiveEditor;
+	}
+	
 	public void term2Model(EditorPair editorPair, IStrategoTerm analysedAST) {
 		
 		final DiagramEditor diagramEditor = editorPair.getDiagramEditor();
@@ -71,4 +88,31 @@
 		textReplacer.replaceText(termFactory.makeList(termFactory.makeTuple(currentTerm, newTerm)));
 		editorPair.notifyObservers(BridgeEvent.PostModel2Term);
 	}
+	
+	private class LastActiveEditorListener implements IPartListener {
+
+		@Override
+		public void partActivated(IWorkbenchPart part) {
+			if (part instanceof IEditorPart) {
+				lastActiveEditor = (IEditorPart) part;
+			}
+		}
+
+		@Override
+		public void partBroughtToTop(IWorkbenchPart part) {
+		}
+
+		@Override
+		public void partClosed(IWorkbenchPart part) {
+		}
+
+		@Override
+		public void partDeactivated(IWorkbenchPart part) {
+		}
+
+		@Override
+		public void partOpened(IWorkbenchPart part) {
+		}
+		
+	}
 }
\ No newline at end of file

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Mon Nov  5 13:50:51 2012	(r25694)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Mon Nov  5 14:19:43 2012	(r25695)
@@ -107,7 +107,10 @@
 	}
 	
 	public void notifyObservers(BridgeEvent event) {
-		System.out.println(event.toString());
+		if (event == BridgeEvent.PreTextLayoutChange || event == BridgeEvent.PreDiagramLayoutChange || event == BridgeEvent.PreDiagramUndo || event == BridgeEvent.PreTextUndo || event == BridgeEvent.PreTextRedo || event == BridgeEvent.PreDiagramRedo) {
+			System.out.println(event.toString());
+		}
+		
 		for (EditorPairObserver observer : observers) {
 			observer.notify(event);
 		}

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java	Mon Nov  5 13:50:51 2012	(r25694)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPairRegistry.java	Mon Nov  5 14:19:43 2012	(r25695)
@@ -38,7 +38,6 @@
 	public void add(EditorPair editorPair) {
 		mapT.put(editorPair.getTextEditor(), editorPair);
 		mapD.put(editorPair.getDiagramEditor(), editorPair);
-		System.out.println("add");
 	}
 
 	public EditorPair remove(IEditorPart editor) {
@@ -49,7 +48,6 @@
 
 			editorPair.dispose();
 		}
-		System.out.println("remove");
 		return editorPair;
 	}
 

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java	Mon Nov  5 13:50:51 2012	(r25694)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java	Mon Nov  5 14:19:43 2012	(r25695)
@@ -110,9 +110,9 @@
 				undoManager.beginCompoundChange();
 			}
 			// don't generate a TextLayoutChange notification as a result of a model2term notification.
-			else if (event == BridgeEvent.PreModel2Term) {
-				debouncer = true;
-			}
+//			else if (event == BridgeEvent.PreModel2Term) {
+//				debouncer = true;
+//			}
 		}
 	}
 }

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/RuntimeActivator.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/RuntimeActivator.java	Mon Nov  5 13:50:51 2012	(r25694)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/RuntimeActivator.java	Mon Nov  5 14:19:43 2012	(r25695)
@@ -27,7 +27,8 @@
 		super.start(context);
 
 		evaluateSynchronizerExtensions();
-		EditorPairRegistry.getInstance(); //initialize
+		EditorPairRegistry.getInstance(); // initialize
+		Bridge.getInstance(); // initialize
 	}
 
 	/**

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java	Mon Nov  5 13:50:51 2012	(r25694)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/SaveSynchronization.java	Mon Nov  5 14:19:43 2012	(r25695)
@@ -5,8 +5,7 @@
 import org.eclipse.core.commands.IExecutionListener;
 import org.eclipse.core.commands.NotHandledException;
 import org.eclipse.core.runtime.NullProgressMonitor;
-import org.eclipse.ui.IEditorPart;
-import org.eclipse.ui.PlatformUI;
+import org.spoofax.modelware.gmf.Bridge;
 import org.spoofax.modelware.gmf.EditorPair;
 
 /**
@@ -38,9 +37,7 @@
 	@Override
 	public void preExecute(String commandId, ExecutionEvent event) {
 		if (commandId.equals("org.eclipse.ui.file.save")) {
-			//TODO: don't get the active editor, but obtain the last active editor
-			IEditorPart activeEditor = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getActiveEditor();
-			if (activeEditor == editorPair.getTextEditor()) {
+			if (Bridge.getInstance().getLastActiveEditor() == editorPair.getTextEditor()) {
 				editorPair.getDiagramEditor().doSave(new NullProgressMonitor());
 			}
 		}

From oskarvanrest at gmail.com  Mon Nov  5 15:45:05 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 14:45:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25696 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf
Message-ID: <20121105144505.60797108C176@mx3.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 14:45:04 2012
New Revision: 25696
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25696&sc=1

Log:


Added:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalMessageGenerator.java
      - copied, changed from r25695, modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java
Deleted:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java
Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeEvent.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeEvent.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeEvent.java	Mon Nov  5 14:19:43 2012	(r25695)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/BridgeEvent.java	Mon Nov  5 14:45:04 2012	(r25696)
@@ -1,9 +1,7 @@
 package org.spoofax.modelware.gmf;
 
 public enum BridgeEvent {
-	PreTextLayoutChange, 
 	PostTextLayoutChange,
-	PreDiagramLayoutChange,
 	PostDiagramLayoutChange, 
 	
 	PreTerm2Model, 
@@ -12,14 +10,9 @@
 	PostModel2Term, 
 	
 	PreTextUndo,  
-	PostTextUndo,
 	PreDiagramUndo,
-	PostDiagramUndo,
-	
 	PreTextRedo, 
-	PostTextRedo, 
-	PreDiagramRedo,
-	PostDiagramRedo, 
+	PreDiagramRedo, 
 	
 	PreTextSelection,
 	PostTextSelection,

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Mon Nov  5 14:19:43 2012	(r25695)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Mon Nov  5 14:45:04 2012	(r25696)
@@ -44,7 +44,7 @@
 		addSelectionChangeListeners();
 		textEditor.addModelListener(new TextChangeListener(this));
 
-		OperationHistoryFactory.getOperationHistory().addOperationHistoryListener(new OperationalHistoryListener(this));
+		OperationHistoryFactory.getOperationHistory().addOperationHistoryListener(new OperationalMessageGenerator(this));
 
 		ICommandService service = (ICommandService) PlatformUI.getWorkbench().getService(ICommandService.class);
 		service.addExecutionListener(new SaveSynchronization(this));
@@ -107,7 +107,7 @@
 	}
 	
 	public void notifyObservers(BridgeEvent event) {
-		if (event == BridgeEvent.PreTextLayoutChange || event == BridgeEvent.PreDiagramLayoutChange || event == BridgeEvent.PreDiagramUndo || event == BridgeEvent.PreTextUndo || event == BridgeEvent.PreTextRedo || event == BridgeEvent.PreDiagramRedo) {
+		if (event == BridgeEvent.PostTextLayoutChange || event == BridgeEvent.PostDiagramLayoutChange || event == BridgeEvent.PreDiagramUndo || event == BridgeEvent.PreTextUndo || event == BridgeEvent.PreTextRedo || event == BridgeEvent.PreDiagramRedo) {
 			System.out.println(event.toString());
 		}
 		

Copied and modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalMessageGenerator.java (from r25695, modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java)
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalHistoryListener.java	Mon Nov  5 14:19:43 2012	(r25695, copy source)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalMessageGenerator.java	Mon Nov  5 14:45:04 2012	(r25696)
@@ -1,35 +1,23 @@
 package org.spoofax.modelware.gmf;
 
 import org.eclipse.core.commands.operations.IOperationHistoryListener;
-import org.eclipse.core.commands.operations.IUndoContext;
-import org.eclipse.core.commands.operations.IUndoableOperation;
 import org.eclipse.core.commands.operations.OperationHistoryEvent;
-import org.eclipse.core.commands.operations.OperationHistoryFactory;
-import org.eclipse.emf.workspace.EMFCommandOperation;
-import org.eclipse.gmf.runtime.common.core.command.CompositeCommand;
-import org.eclipse.gmf.runtime.emf.commands.core.command.CompositeTransactionalCommand;
 import org.eclipse.jface.text.IDocument;
-import org.eclipse.jface.viewers.StructuredSelection;
-import org.eclipse.text.undo.DocumentUndoManager;
 import org.eclipse.text.undo.DocumentUndoManagerRegistry;
 import org.eclipse.text.undo.IDocumentUndoManager;
 import org.eclipse.ui.IEditorPart;
-import org.eclipse.ui.IWorkbench;
-import org.eclipse.ui.IWorkbenchWindow;
-import org.eclipse.ui.PlatformUI;
-import org.eclipse.ui.views.properties.PropertySheet;
 import org.strategoxt.imp.runtime.EditorState;
 
 /**
  * @author Oskar van Rest
  */
-public class OperationalHistoryListener implements IOperationHistoryListener {
+public class OperationalMessageGenerator implements IOperationHistoryListener {
 
 	private EditorPair editorPair;
 	private IDocumentUndoManager undoManager;
-	private boolean debouncer = false;
+//	private boolean debouncer = false;
 
-	public OperationalHistoryListener(EditorPair editorPair) {
+	public OperationalMessageGenerator(EditorPair editorPair) {
 		this.editorPair = editorPair;
 
 		editorPair.registerObserver(new StartNewCompoundChangeWhenModelChanges());
@@ -40,64 +28,46 @@
 
 	@Override
 	public void historyNotification(OperationHistoryEvent event) {
-		if (debouncer) {
-			debouncer = false;
+//		if (debouncer) {
+//			debouncer = false;
+//			return;
+//		}
+
+		IEditorPart editor = Bridge.getInstance().getLastActiveEditor();
+
+		if (editor != editorPair.getTextEditor() && editor != editorPair.getDiagramEditor()) {
 			return;
 		}
 
-		IWorkbench wb = PlatformUI.getWorkbench();
-		IWorkbenchWindow win = wb.getWorkbenchWindows()[0];
-//		System.out.println(win.getSelectionService().getSelection().getClass().toString());
-		
-//		StructuredSelection ss = (StructuredSelection) win.getSelectionService().
-//		System.out.println("size = " + ss.size());
-		
-//		System.out.println(BridgeUtil.getActivePage().getActivePart().getClass().toString());
-//		if (BridgeUtil.getActivePage().getActivePart() instanceof PropertySheet) {
-//			(BridgeUtil.getActivePage().STATE_MAXIMIZED
-//			PropertySheet p = (PropertySheet) BridgeUtil.getActivePage().getActivePart() ;
-//			p.getSite().getSelectionProvider().
-////			editorPair.getDiagramEditor().getEditorSite().getSelectionProvider().
-//			
-//			StructuredSelection ss = (StructuredSelection) p.getSite().getSelectionProvider().getSelection();
-//			System.out.println(p.toString());
-//			
-//		
-//		}
-//		
-//		if (event.getOperation() instanceof CompositeCommand || event.getOperation() instanceof CompositeTransactionalCommand) {
-//			if (BridgeUtil.getActiveEditor() == editorPair.getDiagramEditor()) {
-//			switch (event.getEventType()) {
-//			case OperationHistoryEvent.OPERATION_ADDED:
-//				editorPair.notifyObservers(BridgeEvent.DiagramLayoutChange);
-//				break;
-//			case OperationHistoryEvent.ABOUT_TO_REDO:
-//				editorPair.notifyObservers(BridgeEvent.DiagramRedo);
-//				break;
-//			case OperationHistoryEvent.ABOUT_TO_UNDO:
-//				editorPair.notifyObservers(BridgeEvent.DiagramUndo);
-//				break;
-//			default:
-//				break;
-//			}
-//			}
-//		} else {
-//			if (BridgeUtil.getActiveEditor() == editorPair.getTextEditor()) {
-//				switch (event.getEventType()) {
-//				case OperationHistoryEvent.OPERATION_ADDED:
-//					editorPair.notifyObservers(BridgeEvent.TextLayoutChange);
-//					break;
-//				case OperationHistoryEvent.ABOUT_TO_REDO:
-//					editorPair.notifyObservers(BridgeEvent.TextRedo);
-//					break;
-//				case OperationHistoryEvent.ABOUT_TO_UNDO:
-//					editorPair.notifyObservers(BridgeEvent.TextUndo);
-//					break;
-//				default:
-//					break;
-//				}
-//			}
-//		}
+		if (editor == editorPair.getTextEditor()) {
+			switch (event.getEventType()) {
+			case OperationHistoryEvent.OPERATION_ADDED:
+				editorPair.notifyObservers(BridgeEvent.PostTextLayoutChange);
+				break;
+			case OperationHistoryEvent.ABOUT_TO_UNDO:
+				editorPair.notifyObservers(BridgeEvent.PreTextUndo);
+				break;
+			case OperationHistoryEvent.ABOUT_TO_REDO:
+				editorPair.notifyObservers(BridgeEvent.PreTextRedo);
+				break;
+			default:
+				break;
+			}
+		} else {
+			switch (event.getEventType()) {
+			case OperationHistoryEvent.OPERATION_ADDED:
+				editorPair.notifyObservers(BridgeEvent.PostDiagramLayoutChange);
+				break;
+			case OperationHistoryEvent.ABOUT_TO_UNDO:
+				editorPair.notifyObservers(BridgeEvent.PreDiagramUndo);
+				break;
+			case OperationHistoryEvent.ABOUT_TO_REDO:
+				editorPair.notifyObservers(BridgeEvent.PreDiagramRedo);
+				break;
+			default:
+				break;
+			}
+		}
 	}
 
 	private class StartNewCompoundChangeWhenModelChanges implements EditorPairObserver {
@@ -110,9 +80,9 @@
 				undoManager.beginCompoundChange();
 			}
 			// don't generate a TextLayoutChange notification as a result of a model2term notification.
-//			else if (event == BridgeEvent.PreModel2Term) {
-//				debouncer = true;
-//			}
+			// else if (event == BridgeEvent.PreModel2Term) {
+			// debouncer = true;
+			// }
 		}
 	}
 }

From oskarvanrest at gmail.com  Mon Nov  5 16:17:43 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 15:17:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25697 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf
Message-ID: <20121105151743.9971B2B815C@mx2.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 15:17:43 2012
New Revision: 25697
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25697&sc=1

Log:


Added:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalEventsGenerator.java
      - copied, changed from r25696, modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalMessageGenerator.java
Deleted:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalMessageGenerator.java
Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Mon Nov  5 14:45:04 2012	(r25696)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/EditorPair.java	Mon Nov  5 15:17:43 2012	(r25697)
@@ -13,7 +13,6 @@
 import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.commands.ICommandService;
-import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.modelware.gmf.editorservices.DiagramSelectionChangedListener;
 import org.spoofax.modelware.gmf.editorservices.SaveSynchronization;
 import org.spoofax.modelware.gmf.editorservices.TextSelectionChangedListener;
@@ -27,8 +26,6 @@
 	private Language language;
 	
 	private EObject semanticModel;
-	private IStrategoTerm lastAST;
-	
 	private ModelChangeListener semanticModelContentAdapter;
 	private DiagramSelectionChangedListener GMFSelectionChangedListener;
 	private TextSelectionChangedListener spoofaxSelectionChangedListener;
@@ -44,7 +41,7 @@
 		addSelectionChangeListeners();
 		textEditor.addModelListener(new TextChangeListener(this));
 
-		OperationHistoryFactory.getOperationHistory().addOperationHistoryListener(new OperationalMessageGenerator(this));
+		OperationHistoryFactory.getOperationHistory().addOperationHistoryListener(new OperationalEventsGenerator(this));
 
 		ICommandService service = (ICommandService) PlatformUI.getWorkbench().getService(ICommandService.class);
 		service.addExecutionListener(new SaveSynchronization(this));
@@ -90,14 +87,6 @@
 		return language;
 	}
 	
-	public IStrategoTerm getLastAST() {
-		return lastAST;
-	}
-	
-	public void setLastAST(IStrategoTerm AST) {
-		this.lastAST = AST;
-	}
-	
 	public void registerObserver(EditorPairObserver observer) {
 		observers.add(observer);
 	}
@@ -107,9 +96,9 @@
 	}
 	
 	public void notifyObservers(BridgeEvent event) {
-		if (event == BridgeEvent.PostTextLayoutChange || event == BridgeEvent.PostDiagramLayoutChange || event == BridgeEvent.PreDiagramUndo || event == BridgeEvent.PreTextUndo || event == BridgeEvent.PreTextRedo || event == BridgeEvent.PreDiagramRedo) {
+//		if (event == BridgeEvent.PostTextLayoutChange || event == BridgeEvent.PostDiagramLayoutChange || event == BridgeEvent.PreDiagramUndo || event == BridgeEvent.PreTextUndo || event == BridgeEvent.PreTextRedo || event == BridgeEvent.PreDiagramRedo) {
 			System.out.println(event.toString());
-		}
+//		}
 		
 		for (EditorPairObserver observer : observers) {
 			observer.notify(event);

Copied and modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalEventsGenerator.java (from r25696, modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalMessageGenerator.java)
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalMessageGenerator.java	Mon Nov  5 14:45:04 2012	(r25696, copy source)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalEventsGenerator.java	Mon Nov  5 15:17:43 2012	(r25697)
@@ -2,37 +2,21 @@
 
 import org.eclipse.core.commands.operations.IOperationHistoryListener;
 import org.eclipse.core.commands.operations.OperationHistoryEvent;
-import org.eclipse.jface.text.IDocument;
-import org.eclipse.text.undo.DocumentUndoManagerRegistry;
-import org.eclipse.text.undo.IDocumentUndoManager;
 import org.eclipse.ui.IEditorPart;
-import org.strategoxt.imp.runtime.EditorState;
 
 /**
  * @author Oskar van Rest
  */
-public class OperationalMessageGenerator implements IOperationHistoryListener {
+public class OperationalEventsGenerator implements IOperationHistoryListener {
 
 	private EditorPair editorPair;
-	private IDocumentUndoManager undoManager;
-//	private boolean debouncer = false;
 
-	public OperationalMessageGenerator(EditorPair editorPair) {
+	public OperationalEventsGenerator(EditorPair editorPair) {
 		this.editorPair = editorPair;
-
-		editorPair.registerObserver(new StartNewCompoundChangeWhenModelChanges());
-
-		IDocument document = EditorState.getEditorFor(editorPair.getTextEditor()).getDocument();
-		undoManager = DocumentUndoManagerRegistry.getDocumentUndoManager(document);
 	}
 
 	@Override
 	public void historyNotification(OperationHistoryEvent event) {
-//		if (debouncer) {
-//			debouncer = false;
-//			return;
-//		}
-
 		IEditorPart editor = Bridge.getInstance().getLastActiveEditor();
 
 		if (editor != editorPair.getTextEditor() && editor != editorPair.getDiagramEditor()) {
@@ -69,20 +53,4 @@
 			}
 		}
 	}
-
-	private class StartNewCompoundChangeWhenModelChanges implements EditorPairObserver {
-
-		@Override
-		public void notify(BridgeEvent event) {
-			// start new compound change when Term2Model transformation is to be executed, so that we can always go back to this particular state.
-			if (event == BridgeEvent.PreTerm2Model) {
-				undoManager.endCompoundChange();
-				undoManager.beginCompoundChange();
-			}
-			// don't generate a TextLayoutChange notification as a result of a model2term notification.
-			// else if (event == BridgeEvent.PreModel2Term) {
-			// debouncer = true;
-			// }
-		}
-	}
 }

From m.dejonge at tudelft.nl  Mon Nov  5 16:56:57 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 05 Nov 2012 15:56:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25698 -
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive
Message-ID: <20121105155657.22580CC3FF@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Nov  5 15:56:55 2012
New Revision: 25698
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25698&sc=1

Log:


Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/completion-sections.astr

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/completion-sections.astr
==============================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/completion-sections.astr	Mon Nov  5 15:17:43 2012	(r25697)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/completion-sections.astr	Mon Nov  5 15:56:55 2012	(r25698)
@@ -22,7 +22,7 @@
   prod-to-sort: 
     prod(lhs, rhs, _) -> sortname{}
     where
-      <fetch-elem(?lit(_) <+ ?iter-sep(_, _) <+ ?iter-star-sep(_, _))> lhs;
+      //<fetch-elem(?lit(_) <+ ?iter-sep(_, _) <+ ?iter-star-sep(_, _))> lhs;
       <oncetd(?sort(sortname))> rhs 
     
   create-sort-completion-rule:

From oskarvanrest at gmail.com  Mon Nov  5 16:58:43 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Mon, 05 Nov 2012 15:58:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25699 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf
Message-ID: <20121105155843.B4440CC40E@mx4.tudelft.nl>

Author: OskarVanRest
Date: Mon Nov  5 15:58:43 2012
New Revision: 25699
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25699&sc=1

Log:
Undo and Redo disabled.

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalEventsGenerator.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalEventsGenerator.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalEventsGenerator.java	Mon Nov  5 15:56:55 2012	(r25698)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalEventsGenerator.java	Mon Nov  5 15:58:43 2012	(r25699)
@@ -1,8 +1,19 @@
 package org.spoofax.modelware.gmf;
 
+import org.eclipse.core.commands.operations.IOperationApprover;
+import org.eclipse.core.commands.operations.IOperationHistory;
 import org.eclipse.core.commands.operations.IOperationHistoryListener;
+import org.eclipse.core.commands.operations.IUndoContext;
+import org.eclipse.core.commands.operations.IUndoableOperation;
 import org.eclipse.core.commands.operations.OperationHistoryEvent;
+import org.eclipse.core.commands.operations.OperationHistoryFactory;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.jface.text.IDocument;
+import org.eclipse.text.undo.DocumentUndoManagerRegistry;
 import org.eclipse.ui.IEditorPart;
+import org.strategoxt.imp.runtime.EditorState;
 
 /**
  * @author Oskar van Rest
@@ -13,17 +24,31 @@
 
 	public OperationalEventsGenerator(EditorPair editorPair) {
 		this.editorPair = editorPair;
+		
+//		IOperationHistory history = OperationHistoryFactory.getOperationHistory();
+//		IDocument document = EditorState.getEditorFor(editorPair.getTextEditor()).getDocument();
+//		IUndoContext context = DocumentUndoManagerRegistry.getDocumentUndoManager(document).getUndoContext();
+//		IOperationApprover approver = new BridgeOperationApprover();
+//		history.addOperationApprover(approver);
 	}
 
 	@Override
 	public void historyNotification(OperationHistoryEvent event) {
 		IEditorPart editor = Bridge.getInstance().getLastActiveEditor();
-
+		
 		if (editor != editorPair.getTextEditor() && editor != editorPair.getDiagramEditor()) {
 			return;
 		}
+		
+		// disable Undo/Redo for now. TODO: create own Undo Context.
+		IUndoContext[] contexts = event.getOperation().getContexts();
+		for (int i=0; i<contexts.length;i++) {
+			event.getOperation().removeContext(contexts[i]);
+		}
 
 		if (editor == editorPair.getTextEditor()) {
+
+			
 			switch (event.getEventType()) {
 			case OperationHistoryEvent.OPERATION_ADDED:
 				editorPair.notifyObservers(BridgeEvent.PostTextLayoutChange);
@@ -53,4 +78,20 @@
 			}
 		}
 	}
+	
+	private class BridgeOperationApprover implements IOperationApprover {
+
+		@Override
+		public IStatus proceedRedoing(IUndoableOperation operation, IOperationHistory history, IAdaptable info) {
+			System.out.println("proceedRedoing");
+			return Status.OK_STATUS;
+		}
+
+		@Override
+		public IStatus proceedUndoing(IUndoableOperation operation, IOperationHistory history, IAdaptable info) {
+			System.out.println("proceedUndoing");
+			return Status.OK_STATUS;
+		}
+		
+	}
 }

From m.dejonge at tudelft.nl  Mon Nov  5 17:10:38 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 05 Nov 2012 16:10:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25700 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor
Message-ID: <20121105161038.0B343108C191@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Nov  5 16:10:37 2012
New Revision: 25700
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25700&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Mon Nov  5 15:58:43 2012	(r25699)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Mon Nov  5 16:10:37 2012	(r25700)
@@ -1,6 +1,6 @@
 module SDF-Completions
 
-completions
+completions Completion triggers
 
   completion trigger:
     "->\s*[A-Za-z0-9]+\s*\{"
@@ -11,105 +11,234 @@
   completion trigger:
     "->[\ \t]+"
 
-  completion proposer:
-    editor-complete
-
-  completion template ImpSection*:
-  	"imports" "\n\t" (blank)
-
-  completion template Section*:
-  	"exports" "\n\t" <grammar:Grammar> (blank)
-
-  completion template Section*:
-    "hiddens" "\n\t" <grammar:Grammar> (blank)
-
-  completion template Grammar:
-  	"context-free start-symbols" "\n\t" <Start> (blank)
-
-  completion template Grammar:
-  	"lexical start-symbols" "\n\t" <Start> (blank)
-
-  completion template Grammar:
-  	"start-symbols" "\n\t" <Start> (blank)
-
-  completion template Module:
-  	"module" " " <x> "\n\t\nexports\n\t" <grammar:Grammar> (blank)
-
-  completion template Production: "production" = 
-    <symbol*> " -> " <sort> "{" <attr*:Attribute> "}" 
-
-  completion template Production: "production (no attributes)" =
-    <symbol*> " -> " <sort> 
-
-  completion template Attributes: "attributes" =
-    "{" <attr*:Attribute> "}"
 
-  completion template Grammar:
-    "context-free syntax" "\n\t" <prods:Production> (blank)
 
-  completion template Grammar:
-    "lexical syntax" "\n\t" <prods:Production> (blank)
+completions Semantic completion proposer rule
 
-  completion template Grammar:
-    "syntax" "\n\t" <prods:Production> (blank)
-
-  completion template Grammar:
-    "context-free restrictions" "\n\t" <r*:Restriction> (blank)
-
-  completion template Grammar:
-    "lexical restrictions" "\n\t" <r*:Restriction> (blank)
-
-  completion template Grammar:
-    "restrictions" "\n\t" <r*:Restriction> (blank)
-
-  completion template Restriction: "follow restriction" =
-    <Symbols> "-/-" <Lookaheads> 
-
-  completion template Grammar:
-    "sorts" "\n\t" (blank)
-
-  completion template Grammar:
-    "variables" "\n\t" <prods:Production> (blank)
-
-  completion template Grammar:
-    "aliases" "\n\t" (blank)
-
-  completion template Grammar:
-    "priorities" "\n\t" (blank)
-
-  completion template Grammar: 
-    "lexical variables" "\n\t" <prods:Production> (blank)
-    
-  completion template Attribute:
-    "cons" "(\"" <Name> "\")"
+  completion proposer:
+    editor-complete
 
-  completion template Attribute:
-    "deprecated" "(\"" <explanation> "\")"
 
-  completion template Attribute:
-    "reject"
 
-  completion template Attribute:
-    "left"
+completions Custom syntactic completion templates
 
-  completion template Attribute:
-    "right"
+  completion template Module: "sdf-module" =
+    "module" " " <m> "\n\t\nexports\n\t" <grammar:Grammar> (blank)
 
-  completion template Attribute:
-    "non-assoc"
+  completion template Module: "module" =
+    "module" " " <m> "\n\t\nexports\n\t" (cursor) (blank)
 
-  completion template Attribute:
-    "avoid"
+  completion template Production* Productions*: "production" = 
+    <lhs:Symbols> " -> " <rhs:Symbol> " " <attrs:Attributes> (blank)
 
-  completion template Attribute:
-    "prefer"
+  completion template Attributes: "attribute" =
+    "{" <attr:Attribute> "}"
 
-  completion template Attribute:
-    "bracket"
+  completion template Attributes: "attributes" =
+    "{" <attr:Attribute> ", " <attr:Attribute>"}"
 
-  completion template Attribute:
-    "recover"
+  completion template Symbols: "symbols" =
+    <s:Symbol> " " <symbols:Symbols>
 
-  completion template Attribute:
-    "completion"
+  completion template Symbols: "symbol" =
+    <s:Symbol>
 
+  completion template ImpSection*:
+    "imports" "\n\t" (cursor)(blank)
+       
+  completion template Productions*: "productions" =
+    <prod:Production> "\n" <prods:Productions>(blank)
+
+  completion template Priorities:
+    <priority:Priority> ",\n" <priorities:Priorities>
+
+  completion template Priorities Priority: "priority (>)" =
+    <G:Group> " > " <G:Group>
+
+  completion template Priorities Priority: "priority (> chain)" =
+    <G:Group> " > " <G:Group> " > " <G:Group>
+
+  completion template Priorities Priority: "priority (assoc)" =
+    <G:Group> " " <A:Associativity> " " <G:Group>
+
+
+completions Generated Syntactic completion templates (customized)
+
+  completion template Attribute : "recover" =
+    "recover"                       
+  completion template Attribute : "completion" =
+    "completion"                 
+  completion template Attribute : "incremental" =
+    "incremental"               
+  completion template Attribute : "deprecated" =
+    "deprecated"                 
+  completion template Attribute : "deprecated ( StrCon )" =
+    "deprecated ( " <StrCon:StrCon> " )"  
+  completion template Attribute : "ast ( StrCon )" =
+    "ast(\"" <StrCon:StrCon>"\")"  
+  completion template Attribute : "cons (\"StrCon\")" =
+    "cons(\"" <StrCon:Constructor>"\")"  
+  completion template Symbol : "ns at symbol" =
+    <IdCon:Namespace> "@=" <Symbol>  
+  completion template Attribute : "scope ( IdCon )" =
+    "scope ( " <IdCon:Namespace> " )"  
+  completion template Grammar* : "aliases Aliases" =
+    "aliases\n\t" <Aliases:Aliases> (blank)  
+  completion template Lookaheads : "( [ ] )" =
+    "( " <[  ]:Lookaheads> " )"    
+  completion template Restriction : "Symbols -/- [ ]" =
+    <Symbols:Symbols> " -/- " <[  ]:Lookaheads>  
+  completion template Grammar* : "restrictions Restrictions" =
+    "restrictions\n\t" <Restrictions:Restrictions> (blank)  
+  completion template Attribute : "reject" =
+    "reject"                         
+  completion template Attribute : "prefer" =
+    "prefer"                         
+  completion template Attribute : "avoid" =
+    "avoid"                           
+  completion template Symbol : "left:symbol" =
+    <left:Label> " : " <Symbol>  
+  completion template Grammar* : "start-symbols Symbols" =
+    "start-symbols\n\t" <Symbols:Symbols> (blank)  
+  completion template Grammar* : "lexical start-symbols Symbols" =
+    "lexical start-symbols\n\t" <Symbols:Symbols> (blank)  
+  completion template Grammar* : "context-free start-symbols Symbols" =
+    "context-free start-symbols\n\t" <Symbols:Symbols> (blank)  
+  completion template Grammar* : "sorts Symbols" =
+    "sorts " <Symbols:Symbols>  (blank)
+  completion template Character : "\\TOP" =
+    "\\TOP"                           
+  completion template Character : "\\EOF" =
+    "\\EOF"                           
+  completion template Character : "\\BOT" =
+    "\\BOT"                           
+  completion template Character : "\\LABEL_START" =
+    "\\LABEL_START"           
+  completion template CharRanges : "( \TOP )" =
+    "( " <\TOP:CharRanges> " )"   
+  completion template CharClass : "character-class" =
+    "[ " <:OptCharRanges> " ]"          
+  completion template CharClass : "character-class complement" =
+    "~ " <[  ]:CharClass>
+  completion template Associativity : "left" =
+    "left"                         
+  completion template Associativity : "right" =
+    "right"                       
+  completion template Associativity : "non-assoc" =
+    "non-assoc"               
+  completion template Associativity : "assoc" =
+    "assoc"                       
+  completion template Attribute : "bracket" =
+    "bracket"                       
+  completion template Group : "Group . ArgumentIndicator" =
+    <Group .:Group> " " <ArgumentIndicator:ArgumentIndicator>  
+  completion template Group : "Group . ." =
+    <Group .:Group> " ."              
+  completion template Group : "{ Productions }" =
+    "{ " <Productions:Productions> "\n}" (blank)  
+  completion template Group : "{ left : Productions }" =
+    "{ " <left:Associativity> " :\n\t\t" <Productions:Productions> "\n}" (blank)  
+  completion template Grammar* : "priorities Priorities" =
+    "priorities\n\t" <Priorities:Priorities> (blank)  
+  completion template Symbol : "symbol" =
+    <Symbol>                                  
+  completion template Symbol : "_? (optional)" =
+    <Symbol> "?"                    
+  completion template Symbol : "_+ (non-empty list)" =
+    <Symbol> "+"                    
+  completion template Symbol : "_* (list)" =
+    <Symbol> "*"                    
+  completion template Symbol : "_|_ (alternatives)" =
+    <Symbol> " | " <symbol>
+  completion template Section* : "exports (/)" =
+    "exports\n\t(/)" (blank)      
+  completion template Section* : "hiddens (/)" =
+    "hiddens\n\t(/)" (blank)      
+  completion template Attribute : "id ( left )" =
+    "id ( " <left:ModuleName> " )"  
+  completion template Import : "left Renamings" =
+    <left:ModuleName> " " <Renamings:Renamings>  
+  completion template Import : "( left )" =
+    "( " <left:Import> " )"           
+  completion template Grammar* : "lexical syntax Productions" =
+    "lexical syntax\n\t" <Productions:Productions> (blank)  
+  completion template Grammar* : "context-free syntax Productions" =
+    "context-free syntax\n\t" <Productions:Productions> (blank)  
+  completion template Grammar* : "variables Productions" =
+    "variables\n\t" <Productions:Productions> (blank)  
+  completion template Grammar* : "lexical variables Productions" =
+    "lexical variables\n\t" <Productions:Productions> (blank)  
+  completion template Symbol : "<_-CF>" =
+    "< " <Symbol> "-CF >"     
+  completion template Symbol : "<_-LEX>" =
+    "< " <Symbol> "-LEX >"   
+  completion template Symbol : "<_-VAR>" =
+    "< " <Symbol> "-VAR >"   
+  completion template Symbol : "LAYOUT" =
+    "LAYOUT"                            
+  completion template OptExp : "e NatCon" =
+    "e " <NatCon:IntCon>              
+  completion template Grammar* : "syntax Productions" =
+    "syntax\n\t" <Productions:Productions> (blank)  
+  completion template Grammar* : "lexical priorities Priorities" =
+    "lexical priorities\n\t" <Priorities:Priorities> (blank)  
+  completion template Grammar* : "context-free priorities Priorities" =
+    "context-free priorities\n\t" <Priorities:Priorities> (blank)  
+  completion template Grammar* : "lexical restrictions Restrictions" =
+    "lexical restrictions\n\t" <Restrictions:Restrictions> (blank)  
+  completion template Grammar* : "context-free restrictions Restrictions" =
+    "context-free restrictions\n\t" <Restrictions:Restrictions> (blank)  
+  completion template SDF : "definition Definition" =
+    "definition\n\t" <Definition:Definition> "\n\n" (cursor)(blank)  
+  completion template ModuleName : "aliases" =
+    "aliases"                      
+  completion template ModuleName : "lexical" =
+    "lexical"                      
+  completion template ModuleName : "priorities" =
+    "priorities"                
+  completion template ModuleName : "context-free" =
+    "context-free"            
+  completion template ModuleName : "definition" =
+    "definition"                
+  completion template ModuleName : "syntax" =
+    "syntax"                        
+  completion template ModuleName : "variables" =
+    "variables"                  
+  completion template ModuleName : "module" =
+    "module"                        
+  completion template ModuleName : "imports" =
+    "imports"                      
+  completion template ModuleName : "exports" =
+    "exports"                      
+  completion template ModuleName : "hiddens" =
+    "hiddens"                      
+  completion template ModuleName : "left" =
+    "left"                            
+  completion template ModuleName : "right" =
+    "right"                          
+  completion template ModuleName : "assoc" =
+    "assoc"                          
+  completion template ModuleName : "non-assoc" =
+    "non-assoc"                  
+  completion template ModuleName : "bracket" =
+    "bracket"                      
+  completion template ModuleName : "sorts" =
+    "sorts"                          
+  completion template ModuleName : "bracket" =
+    "bracket"                      
+  completion template ModuleName : "sorts" =
+    "sorts"                          
+  completion template ModuleName : "restrictions" =
+    "restrictions"            
+  completion template ATermAttribute : "reject" =
+    "reject"                    
+  completion template ATermAttribute : "prefer" =
+    "prefer"                    
+  completion template ATermAttribute : "avoid" =
+    "avoid"                      
+  completion template ATermAttribute : "bracket" =
+    "bracket"                  
+  completion template ATermAttribute : "id ( left )" =
+    "id ( " <left:ModuleName> " )"  
+  completion template Group : "Group . ." =
+    <Group .:Group> " ." 
\ No newline at end of file

From dgroenewegen at gmail.com  Mon Nov  5 17:57:42 2012
From: dgroenewegen at gmail.com (Danny Groenewegen)
Date: Mon, 05 Nov 2012 16:57:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25701 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans:
	. templatelang
Message-ID: <20121105165742.590B52B8162@mx2.tudelft.nl>

Author: dgroenewegen
Date: Mon Nov  5 16:57:41 2012
New Revision: 25701
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25701&sc=1

Log:
Fix lookup which allows one to write `Sort.Cons' where a production is expected.

This implementation was likely moved to Spoofaxlang at some point, however, we would like Templatelang to work independently as well. Instead of the Spoofaxlang lookup, a dynamic rule is used to store the definition during collect-sections.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Mon Nov  5 16:10:37 2012	(r25700)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Mon Nov  5 16:57:41 2012	(r25701)
@@ -43,8 +43,38 @@
 rules
 
   collect-sections =
-    collect-sections-1
-    <+ collect-sections-2
+    (collect-sections-1
+    <+ collect-sections-2)
+    ; with(filterconcat(?TemplateSection(<id>)); 
+           map(declare-syntax-template 
+               <+ declare-syntax-template-no-cons 
+               <+ debug(!"declare-syntax-template failed: "); fail))
+
+  declare-syntax-template :
+    d at Desugared(
+	  TemplateProduction(
+	    c#([])
+	  , _
+	  , attrs(
+	      [term(
+	         default(appl(_, [fun(quoted(consstring))]))
+	       ),xs*]
+	    )
+	  )
+	)
+	-> <create-template-production-dr> ((<un-double-quote>c, <un-double-quote> consstring), d)
+	
+  //todo:    figure out if this variant can be referred to and needs to be declared
+  //example: ReturnType   = <: <Type>>
+  declare-syntax-template-no-cons =
+    ?d at Desugared(
+	  TemplateProduction(
+	    c#([])
+	  , _
+	  , _
+	  )
+	)
+	//-> <create-template-production-dr> ((<un-double-quote>c, ?), d) 
 
   collect-sections-1:
     selection -> section*

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str	Mon Nov  5 16:10:37 2012	(r25700)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str	Mon Nov  5 16:57:41 2012	(r25701)
@@ -14,9 +14,31 @@
 
   /** @type List(TemplateSection | ...) -> List(grammar) */
   template-sections-to-sdf =
+  	alltd(desugar-sdf-redux-tmpl);
     filter(template-section-to-sdf);
     concat
 
+rules // lookup of template production, e.g. Exp.Plus
+
+  desugar-sdf-redux-tmpl:
+    simple-ref-group(ref) -> simple-group(<SortCons-to-prod-tmpl> ref)
+
+  desugar-sdf-redux-tmpl:
+    prods-ref-group(ref*) -> prods-group(<map(SortCons-to-prod-tmpl)> ref*)
+
+  desugar-sdf-redux-tmpl:
+    assoc-ref-group(a, ref*) -> assoc-group(a, <map(SortCons-to-prod-tmpl)> ref*)
+
+  SortCons-to-prod-tmpl:
+    SortCons(sort, cons) -> t
+    with <TemplateProductionDef; template-production-to-sdf-no-attrs> (sort, cons) => t 
+		   
+  create-template-production-dr :
+  	(lhs, rhs) -> <rules( TemplateProductionDef : lhs -> rhs )>
+  	where <debug(!"template production: ")> (lhs, rhs) 
+
+rules
+
   /** @type TemplateSection -> grammar */
   template-section-to-sdf:
     TemplateSection(x) -> [context-free-syntax(p*), inj*, restr*]

From m.dejonge at tudelft.nl  Mon Nov  5 18:26:23 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 05 Nov 2012 17:26:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25702 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor
Message-ID: <20121105172623.77D092B817E@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Mon Nov  5 17:26:23 2012
New Revision: 25702
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25702&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Mon Nov  5 16:57:41 2012	(r25701)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Mon Nov  5 17:26:23 2012	(r25702)
@@ -22,7 +22,7 @@
 
 completions Custom syntactic completion templates
 
-  completion template Module: "sdf-module" =
+  completion template Module: "module (template)" =
     "module" " " <m> "\n\t\nexports\n\t" <grammar:Grammar> (blank)
 
   completion template Module: "module" =
@@ -61,6 +61,8 @@
   completion template Priorities Priority: "priority (assoc)" =
     <G:Group> " " <A:Associativity> " " <G:Group>
 
+  completion template Module: "module (parameterized)" =
+    "module " <ModuleName:ModuleId> "[" <Params:Symbols> "]" 
 
 completions Generated Syntactic completion templates (customized)
 
@@ -156,10 +158,6 @@
     "hiddens\n\t(/)" (blank)      
   completion template Attribute : "id ( left )" =
     "id ( " <left:ModuleName> " )"  
-  completion template Import : "left Renamings" =
-    <left:ModuleName> " " <Renamings:Renamings>  
-  completion template Import : "( left )" =
-    "( " <left:Import> " )"           
   completion template Grammar* : "lexical syntax Productions" =
     "lexical syntax\n\t" <Productions:Productions> (blank)  
   completion template Grammar* : "context-free syntax Productions" =
@@ -190,55 +188,5 @@
     "context-free restrictions\n\t" <Restrictions:Restrictions> (blank)  
   completion template SDF : "definition Definition" =
     "definition\n\t" <Definition:Definition> "\n\n" (cursor)(blank)  
-  completion template ModuleName : "aliases" =
-    "aliases"                      
-  completion template ModuleName : "lexical" =
-    "lexical"                      
-  completion template ModuleName : "priorities" =
-    "priorities"                
-  completion template ModuleName : "context-free" =
-    "context-free"            
-  completion template ModuleName : "definition" =
-    "definition"                
-  completion template ModuleName : "syntax" =
-    "syntax"                        
-  completion template ModuleName : "variables" =
-    "variables"                  
-  completion template ModuleName : "module" =
-    "module"                        
-  completion template ModuleName : "imports" =
-    "imports"                      
-  completion template ModuleName : "exports" =
-    "exports"                      
-  completion template ModuleName : "hiddens" =
-    "hiddens"                      
-  completion template ModuleName : "left" =
-    "left"                            
-  completion template ModuleName : "right" =
-    "right"                          
-  completion template ModuleName : "assoc" =
-    "assoc"                          
-  completion template ModuleName : "non-assoc" =
-    "non-assoc"                  
-  completion template ModuleName : "bracket" =
-    "bracket"                      
-  completion template ModuleName : "sorts" =
-    "sorts"                          
-  completion template ModuleName : "bracket" =
-    "bracket"                      
-  completion template ModuleName : "sorts" =
-    "sorts"                          
-  completion template ModuleName : "restrictions" =
-    "restrictions"            
-  completion template ATermAttribute : "reject" =
-    "reject"                    
-  completion template ATermAttribute : "prefer" =
-    "prefer"                    
-  completion template ATermAttribute : "avoid" =
-    "avoid"                      
-  completion template ATermAttribute : "bracket" =
-    "bracket"                  
-  completion template ATermAttribute : "id ( left )" =
-    "id ( " <left:ModuleName> " )"  
   completion template Group : "Group . ." =
     <Group .:Group> " ." 
\ No newline at end of file

From oskarvanrest at gmail.com  Tue Nov  6 04:57:07 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Tue, 06 Nov 2012 03:57:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25703 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf
Message-ID: <20121106035707.AABF7108C247@mx3.tudelft.nl>

Author: OskarVanRest
Date: Tue Nov  6 03:57:05 2012
New Revision: 25703
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25703&sc=1

Log:
temp workaround for problems with undo-redo

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalEventsGenerator.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java	Mon Nov  5 17:26:23 2012	(r25702)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/Bridge.java	Tue Nov  6 03:57:05 2012	(r25703)
@@ -1,8 +1,17 @@
 package org.spoofax.modelware.gmf;
 
+import org.eclipse.core.commands.operations.IOperationApprover;
+import org.eclipse.core.commands.operations.IOperationHistory;
+import org.eclipse.core.commands.operations.IUndoableOperation;
+import org.eclipse.core.commands.operations.OperationHistoryFactory;
+import org.eclipse.core.commands.operations.TriggeredOperations;
+import org.eclipse.core.runtime.IAdaptable;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
 import org.eclipse.emf.ecore.EObject;
 import org.eclipse.emf.ecore.impl.EPackageRegistryImpl;
 import org.eclipse.gmf.runtime.diagram.ui.parts.DiagramEditor;
+import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.IPartListener;
@@ -29,6 +38,7 @@
 
 	private Bridge() {
 		installLastActiveEditorListener();
+		OperationHistoryFactory.getOperationHistory().addOperationApprover(new BridgeOperationApprover());
 	}
 
 	public static Bridge getInstance() {
@@ -115,4 +125,21 @@
 		}
 		
 	}
+	
+	private class BridgeOperationApprover implements IOperationApprover {
+
+		@Override
+		public IStatus proceedRedoing(IUndoableOperation operation, IOperationHistory history, IAdaptable info) {
+			return Status.OK_STATUS;
+		}
+
+		@Override
+		public IStatus proceedUndoing(IUndoableOperation operation, IOperationHistory history, IAdaptable info) {
+			if (operation instanceof TriggeredOperations && lastActiveEditor instanceof UniversalEditor && EditorPairRegistry.getInstance().contains(lastActiveEditor)) {
+				return Status.CANCEL_STATUS;
+			}
+			return Status.OK_STATUS;
+		}
+		
+	}
 }
\ No newline at end of file

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalEventsGenerator.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalEventsGenerator.java	Mon Nov  5 17:26:23 2012	(r25702)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/OperationalEventsGenerator.java	Tue Nov  6 03:57:05 2012	(r25703)
@@ -1,19 +1,8 @@
 package org.spoofax.modelware.gmf;
 
-import org.eclipse.core.commands.operations.IOperationApprover;
-import org.eclipse.core.commands.operations.IOperationHistory;
 import org.eclipse.core.commands.operations.IOperationHistoryListener;
-import org.eclipse.core.commands.operations.IUndoContext;
-import org.eclipse.core.commands.operations.IUndoableOperation;
 import org.eclipse.core.commands.operations.OperationHistoryEvent;
-import org.eclipse.core.commands.operations.OperationHistoryFactory;
-import org.eclipse.core.runtime.IAdaptable;
-import org.eclipse.core.runtime.IStatus;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.jface.text.IDocument;
-import org.eclipse.text.undo.DocumentUndoManagerRegistry;
 import org.eclipse.ui.IEditorPart;
-import org.strategoxt.imp.runtime.EditorState;
 
 /**
  * @author Oskar van Rest
@@ -24,12 +13,6 @@
 
 	public OperationalEventsGenerator(EditorPair editorPair) {
 		this.editorPair = editorPair;
-		
-//		IOperationHistory history = OperationHistoryFactory.getOperationHistory();
-//		IDocument document = EditorState.getEditorFor(editorPair.getTextEditor()).getDocument();
-//		IUndoContext context = DocumentUndoManagerRegistry.getDocumentUndoManager(document).getUndoContext();
-//		IOperationApprover approver = new BridgeOperationApprover();
-//		history.addOperationApprover(approver);
 	}
 
 	@Override
@@ -39,16 +22,8 @@
 		if (editor != editorPair.getTextEditor() && editor != editorPair.getDiagramEditor()) {
 			return;
 		}
-		
-		// disable Undo/Redo for now. TODO: create own Undo Context.
-		IUndoContext[] contexts = event.getOperation().getContexts();
-		for (int i=0; i<contexts.length;i++) {
-			event.getOperation().removeContext(contexts[i]);
-		}
 
 		if (editor == editorPair.getTextEditor()) {
-
-			
 			switch (event.getEventType()) {
 			case OperationHistoryEvent.OPERATION_ADDED:
 				editorPair.notifyObservers(BridgeEvent.PostTextLayoutChange);
@@ -78,20 +53,4 @@
 			}
 		}
 	}
-	
-	private class BridgeOperationApprover implements IOperationApprover {
-
-		@Override
-		public IStatus proceedRedoing(IUndoableOperation operation, IOperationHistory history, IAdaptable info) {
-			System.out.println("proceedRedoing");
-			return Status.OK_STATUS;
-		}
-
-		@Override
-		public IStatus proceedUndoing(IUndoableOperation operation, IOperationHistory history, IAdaptable info) {
-			System.out.println("proceedUndoing");
-			return Status.OK_STATUS;
-		}
-		
-	}
 }

From oskarvanrest at gmail.com  Tue Nov  6 05:59:19 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Tue, 06 Nov 2012 04:59:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25704 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf
Message-ID: <20121106045919.DBFE52B81F1@mx2.tudelft.nl>

Author: OskarVanRest
Date: Tue Nov  6 04:59:19 2012
New Revision: 25704
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25704&sc=1

Log:
fix

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java	Tue Nov  6 03:57:05 2012	(r25703)
+++ modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/TextChangeListener.java	Tue Nov  6 04:59:19 2012	(r25704)
@@ -40,6 +40,8 @@
 	@Override
 	public void update(IParseController controller, IProgressMonitor monitor) {
 		if (debouncer) {
+			debouncer = false;
+			setLastAST();
 			return;
 		}
 		
@@ -49,6 +51,12 @@
 			thread.start();
 		}
 	}
+	
+	private void setLastAST() {
+		UniversalEditor textEditor = editorPair.getTextEditor();
+		EditorState activeEditor = EditorState.getEditorFor(textEditor);
+		lastAST = activeEditor.getCurrentAst();
+	}
 
 	private void executeTerm2Model() {
 		UniversalEditor textEditor = editorPair.getTextEditor();
@@ -58,7 +66,7 @@
 		if (lastAST != null && lastAST.equals(AST)) {
 			return;
 		} else {
-			lastAST = AST;
+			setLastAST();
 		}
 
 		IResource resource = ResourceUtil.getResource(textEditor.getEditorInput());
@@ -106,12 +114,6 @@
 		public void notify(BridgeEvent event) {
 			if (event == BridgeEvent.PreModel2Term) {
 				debouncer = true;
-
-				UniversalEditor textEditor = editorPair.getTextEditor();
-				EditorState activeEditor = EditorState.getEditorFor(textEditor);
-				lastAST = activeEditor.getCurrentAst();
-			} else if (event == BridgeEvent.PostModel2Term) {
-				debouncer = false;
 			}
 		}
 	}

From oskarvanrest at gmail.com  Tue Nov  6 06:00:09 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Tue, 06 Nov 2012 05:00:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25705 -
	modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices
Message-ID: <20121106050009.A33617F822A@mx1.tudelft.nl>

Author: OskarVanRest
Date: Tue Nov  6 05:00:09 2012
New Revision: 25705
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25705&sc=1

Log:


Deleted:
   modelware-bridging/trunk/org.spoofax.modelware.gmf/src/org/spoofax/modelware/gmf/editorservices/UndoRedoSynchronization.java

From m.dejonge at tudelft.nl  Tue Nov  6 07:19:29 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 06:19:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25706 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf: editor
	syntax trans
Message-ID: <20121106061929.B1AD7108C270@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 06:19:29 2012
New Revision: 25706
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25706&sc=1

Log:


Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/completion.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Tue Nov  6 05:00:09 2012	(r25705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Completions.esv	Tue Nov  6 06:19:29 2012	(r25706)
@@ -152,10 +152,10 @@
     <Symbol> "*"                    
   completion template Symbol : "_|_ (alternatives)" =
     <Symbol> " | " <symbol>
-  completion template Section* : "exports (/)" =
-    "exports\n\t(/)" (blank)      
-  completion template Section* : "hiddens (/)" =
-    "hiddens\n\t(/)" (blank)      
+  completion template Section* : "exports" =
+    "exports\n\t" (blank)      
+  completion template Section* : "hiddens" =
+    "hiddens\n\t" (blank)      
   completion template Attribute : "id ( left )" =
     "id ( " <left:ModuleName> " )"  
   completion template Grammar* : "lexical syntax Productions" =

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.sdf	Tue Nov  6 05:00:09 2012	(r25705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.sdf	Tue Nov  6 06:19:29 2012	(r25706)
@@ -16,4 +16,18 @@
     
   %% Completion Rules
   lexical syntax
-    "completion123"                          -> Sort %%{cons("Completion")}
+    
+                          -> Sort {completion}
+                          -> ModuleWord {completion}
+                          -> IdCon {completion}
+
+    "completion123"       -> Sort {completion}
+    "completion123"       -> ModuleWord {completion}
+    "completion123"       -> IdCon {completion}
+
+  context-free syntax
+                          -> COMPLETIONPREFIX{ast("COMPLETION(\"\")")}
+
+  context-free syntax
+    "module" COMPLETIONPREFIX list:ImpSection* Sections -> Module {cons("Module")}    %%{ast("module(\"\", <1>)")}
+

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/analysis.str	Tue Nov  6 05:00:09 2012	(r25705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/analysis.str	Tue Nov  6 06:19:29 2012	(r25706)
@@ -19,7 +19,16 @@
         ProjectDir  := project-path
       )
     with
-      ast' := <declare-globals-top> ast
+      ast' := <declare-globals-top> ast;
+      if <get-module-name; not(ModuleName)> ast then 
+        record-all-module-names
+      end
+
+  get-module-name:
+    ast -> mname
+    where
+      mname := <get-arguments; Hd; get-arguments; Hd> ast
+
 
 rules
 
@@ -114,14 +123,41 @@
         rules(Usage: text -> text)
       end
 
-  propose-completion:
-    sort(COMPLETION(x)) -> [decl*, use*]
-    with
-      decl* := <all-keys-Declaration> x;
-      use*  := <all-keys-Usage> x
-
-  propose-completion:
-    NOCONTEXT(COMPLETION(x)) -> [decl*, use*]
-    with
-      decl* := <all-keys-Declaration> x;
-      use*  := <all-keys-Usage> x
+strategies
+  
+  record-all-module-names =
+    record-all-definitions(
+        alltd(record-module-name)
+      , parse-sdf-string
+      | "sdf"
+    )
+  
+  record-module-name =
+    ?unparameterized(mname);
+    rules(ModuleName : mname -> mname)
+
+  record-module-name =
+    ?parameterized(mname, _);
+    rules(ModuleName : mname -> mname)
+  
+  record-all-definitions(record, parse|ext) =
+    <readdir> ".";
+    list-loop(
+      if <isdir> <filemode> then
+        chdir;
+        record-all-definitions(record, parse|ext);
+        <chdir> ".."
+      else
+        try(record-definitions(record, parse|ext))
+      end
+    )
+  
+  record-definitions(record, parse|ext):
+    filename -> filename
+    where
+      <has-extension(|ext)> filename;
+      <open-import(
+        abspath, 
+        parse, 
+        record
+     )> filename

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/check.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/check.str	Tue Nov  6 06:19:29 2012	(r25706)
@@ -0,0 +1,168 @@
+module check
+
+imports
+  libstratego-sglr
+  analysis
+  include/SDF
+
+strategies
+  
+    fetch-sdf-errors =
+    ?context-free-syntax(<collect-om(context-free-syntax-error)>)
+  + ?lexical-syntax(<collect-om(lexical-syntax-error)>)
+  
+  fetch-sdf-warnings =
+    ?context-free-syntax(<collect-om(context-free-syntax-warning)>)
+  + ?lexical-syntax(<collect-om(lexical-syntax-warning)>)
+
+rules // Limited exisiting sort checking
+
+  context-free-syntax-sort-error:
+    renamed-module(x, renamings(y)) -> [] // not supported
+
+  context-free-syntax-sort-error:
+    sort(x) -> (x, $[No definition for [x]])
+    where
+      not(<Declaration> x)
+
+  context-free-syntax-sort-error:
+    parameterized-sort(_, _) -> [] // not supported
+
+  context-free-syntax-sort-error:
+    'sorts(_) -> [] // ignored
+
+  lexical-syntax-error = fail
+
+rules // Local checks
+
+  context-free-syntax-warning:
+    prod(p*, s, a*) -> (target, $[Missing {cons("Label")} attribute to label the abstract syntax])
+    where
+      (
+        not(<occurrences(?sort(_))> p* => 1; <occurrences(?lit(_))> p* => 0)
+      <+
+        <oncetd(is-iter + ?opt(_))> p*
+      <+
+        <oncetd(?namespaceref(_) + ?namespaceref2(_, _) + ?namespacedef(_, _))> p*
+      );
+      if !a* => attrs(a'*) then
+        not(<one(term(default(appl(unquoted("cons" + "ast"), [fun(quoted(not("\"\"")))]))))> a'*);
+        not(<one(Constructor(not("\"\"")))> a'*);
+        not(<one(bracket() + reject())> a'*);
+        not(!s; (sort("Keyword") + sort("\"Keyword\"")));
+        target := a*
+      else
+        target := s
+      end
+
+  context-free-syntax-warning:
+    t @ term(default(appl(unquoted("cons"), a*))) -> (t, $[Single argument expected for {cons("Name")} attribute])
+    where
+      not(<length> a* => 1)
+
+  context-free-syntax-warning:
+    term(default(appl(unquoted("cons"), [t @ fun(quoted("\"Nil\""))])))
+      -> (t, $[In Stratego, Nil is the empty list, and Nil() does not match this constructor (use a different constructor)])
+
+  lexical-syntax-warning:
+    attrs(lst) -> (t, $[Constructor only expected in context-free syntax])
+    where
+        <fetch(?t at term(default(appl(unquoted("cons"), a*))))> lst;
+        <not(fetch(?term(default(fun(unquoted("recover"))))))> lst;
+        <not(fetch(?term(default(fun(unquoted("completion"))))))> lst
+
+  context-free-syntax-warning:
+    t @ term(default(annotated(_, _))) -> (t, $[Use round parentheses () for attribute arguments])
+
+  context-free-syntax-error:
+    prod([x], s, attrs(a*)) -> (a*, $[Illegal use of {bracket} attribute])
+    where
+      <one(bracket())> a*
+
+  // TODO: don't warn for | in {reject} productions
+  context-free-syntax-warning:
+    alt(x, y) -> (<id>, $[The | construct is deprecated: instead of A|B->C use A->C B->C])
+
+  // TODO: don't warn for ? in {ast("...")} productions
+  context-free-syntax-warning:
+    opt(s @ seq(_, _)) -> (s, $[Extract sequence in optional to separate productions to ensure acceptable abstract syntax])
+    where
+      not(<occurrences(is-non-terminal)> s => 1)
+
+  // TODO: don't warn for ? in {ast("...")} productions
+  context-free-syntax-warning:
+    opt(lit(_)) -> (<id>, $[Extract literal in optional to separate productions to ensure consistent abstract syntax])
+
+  /**
+   * Tests if something is a non-terminal in terms of the AST produced.
+   */
+  is-non-terminal =
+    ?sort(_) + ?opt(_) + is-iter
+  + namespacedef(id, is-non-terminal) + namespaceref(is-non-terminal)
+  + namespaceref2(id, is-non-terminal)
+
+  is-iter =
+    ?iter(_) + ?iter-star(_) + ?iter-sep(_, _) + ?iter-star-sep(_, _)
+
+  // Instruct users to use { X "," }*
+
+  context-free-syntax-warning:
+    [sort(x), iter-star(seq(lit(sep), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [lit(sep)])), sort(x) | _] ->
+    (<id>, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    [opt(sort(x)), iter-star(seq(lit(sep), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [lit(sep)])), opt(sort(x)) | _] ->
+    (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    prod(lhs @ [sort(x), opt(seq(lit(sep), [sort(xs)]))], sort(xs), _) ->
+    (lhs, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
+
+  // Instruct users to use { X ","? }* (seen in MDSD 2010)
+
+  context-free-syntax-warning:
+    [sort(x), iter-star(seq(opt(lit(sep)), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [opt(lit(sep))])), sort(x) | _] ->
+    (<id>, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    [opt(sort(x)), iter-star(seq(opt(lit(sep)), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]?}* instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [opt(lit(sep))])), opt(sort(x)) | _] ->
+    (<id>, $[Use {[x] [sep]?}* instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    prod(lhs @ [sort(x), opt(seq(opt(lit(sep)), [sort(xs)]))], sort(xs), _) ->
+    (lhs, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    [_ | t*] -> <context-free-syntax-warning> t*
+
+  context-free-syntax-warning:
+    iter-star(cs) -> (<id>, $[Character class iteration should be in lexical syntax section])
+    where
+      <oncetd(?range(_, _))> cs
+
+  context-free-syntax-warning:
+    iter(cs) -> (<id>, $[Character class iteration should be in lexical syntax section])
+    where
+      <oncetd(?range(_, _))> cs
+
+  context-free-syntax-warning:
+    iter-sep(_, bad @ sort(_)) -> (bad, "Non-terminal used as a list separator (use round braces for grouping non-terminals)")
+
+  context-free-syntax-warning:
+    iter-star-sep(_, bad @ sort(_)) -> (bad, "Non-terminal used as a list separator (use round braces for grouping non-terminals)")

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/completion.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/completion.str	Tue Nov  6 06:19:29 2012	(r25706)
@@ -0,0 +1,50 @@
+module completion
+
+imports
+  analysis
+  libstratego-sglr
+  include/SDF
+  lib/editor-common.generated
+
+strategies
+
+  editor-complete:
+    (sort(COMPLETION(_)), position, ast, path, project-path) -> [decl*, use*]
+    where
+      decl* := <all-keys-Declaration>;
+      use*  := <all-keys-Usage>
+
+  editor-complete:
+    (unparameterized(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    where
+      proposals := <
+        new-module-name-proposals(|path) <+ 
+        imported-module-name-proposals
+      > ast
+
+  editor-complete:
+    (parameterized(COMPLETION(_), _), position, ast, path, project-path) -> proposals
+    where
+      proposals := <all-keys-ModuleName>
+
+  new-module-name-proposals(|path):
+    ast -> proposals
+    where
+      <get-module-name; ?COMPLETION(_)> ast;
+      proposals := [
+        <base-filename; remove-extension> path,
+        <remove-extension> path
+      ]
+      
+  imported-module-name-proposals:
+    ast -> proposals'
+    where
+      proposals := <all-keys-ModuleName>;
+      excluded-proposals :=
+        <collect-all(
+          \unparameterized(t) -> t\ <+
+          \parameterized(t, _) -> t\
+        )> ast;
+      proposals':= <diff> (proposals, excluded-proposals)
+
+

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Tue Nov  6 05:00:09 2012	(r25705)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Tue Nov  6 06:19:29 2012	(r25706)
@@ -10,6 +10,8 @@
   to-name-analysis
   lib/editor-common.generated
   include/SDF
+  completion
+  check
 
 rules
 
@@ -34,18 +36,6 @@
         warning'* := warning*
       end
 
-  fetch-sdf-errors =
-    ?context-free-syntax(<collect-om(context-free-syntax-error)>)
-  + ?lexical-syntax(<collect-om(lexical-syntax-error)>)
-  
-  fetch-sdf-warnings =
-    ?context-free-syntax(<collect-om(context-free-syntax-warning)>)
-  + ?lexical-syntax(<collect-om(lexical-syntax-warning)>)
-
-  editor-complete:
-    (node, position, ast, path, project-path) -> proposals
-    where
-      proposals := <propose-completion <+ ![]> node
 
   editor-resolve:
     (sort(x), position, ast, path, project-path) -> target
@@ -59,157 +49,6 @@
 
   override pp-sdf-string = fail // ensure compiler doesn't blow up
 
-rules // Limited exisiting sort checking
-
-  context-free-syntax-sort-error:
-    renamed-module(x, renamings(y)) -> [] // not supported
-
-  context-free-syntax-sort-error:
-    sort(x) -> (x, $[No definition for [x]])
-    where
-      not(<Declaration> x)
-
-  context-free-syntax-sort-error:
-    parameterized-sort(_, _) -> [] // not supported
-
-  context-free-syntax-sort-error:
-    'sorts(_) -> [] // ignored
-
-  lexical-syntax-error = fail
-
-rules // Local checks
-
-  context-free-syntax-warning:
-    prod(p*, s, a*) -> (target, $[Missing {cons("Label")} attribute to label the abstract syntax])
-    where
-      (
-        not(<occurrences(?sort(_))> p* => 1; <occurrences(?lit(_))> p* => 0)
-      <+
-        <oncetd(is-iter + ?opt(_))> p*
-      <+
-        <oncetd(?namespaceref(_) + ?namespaceref2(_, _) + ?namespacedef(_, _))> p*
-      );
-      if !a* => attrs(a'*) then
-        not(<one(term(default(appl(unquoted("cons" + "ast"), [fun(quoted(not("\"\"")))]))))> a'*);
-        not(<one(Constructor(not("\"\"")))> a'*);
-        not(<one(bracket() + reject())> a'*);
-        not(!s; (sort("Keyword") + sort("\"Keyword\"")));
-        target := a*
-      else
-        target := s
-      end
-
-  context-free-syntax-warning:
-    t @ term(default(appl(unquoted("cons"), a*))) -> (t, $[Single argument expected for {cons("Name")} attribute])
-    where
-      not(<length> a* => 1)
-
-  context-free-syntax-warning:
-    term(default(appl(unquoted("cons"), [t @ fun(quoted("\"Nil\""))])))
-      -> (t, $[In Stratego, Nil is the empty list, and Nil() does not match this constructor (use a different constructor)])
-
-  lexical-syntax-warning:
-    attrs(lst) -> (t, $[Constructor only expected in context-free syntax])
-    where
-        <fetch(?t at term(default(appl(unquoted("cons"), a*))))> lst;
-        <not(fetch(?term(default(fun(unquoted("recover"))))))> lst;
-        <not(fetch(?term(default(fun(unquoted("completion"))))))> lst
-
-  context-free-syntax-warning:
-    t @ term(default(annotated(_, _))) -> (t, $[Use round parentheses () for attribute arguments])
-
-  context-free-syntax-error:
-    prod([x], s, attrs(a*)) -> (a*, $[Illegal use of {bracket} attribute])
-    where
-      <one(bracket())> a*
-
-  // TODO: don't warn for | in {reject} productions
-  context-free-syntax-warning:
-    alt(x, y) -> (<id>, $[The | construct is deprecated: instead of A|B->C use A->C B->C])
-
-  // TODO: don't warn for ? in {ast("...")} productions
-  context-free-syntax-warning:
-    opt(s @ seq(_, _)) -> (s, $[Extract sequence in optional to separate productions to ensure acceptable abstract syntax])
-    where
-      not(<occurrences(is-non-terminal)> s => 1)
-
-  // TODO: don't warn for ? in {ast("...")} productions
-  context-free-syntax-warning:
-    opt(lit(_)) -> (<id>, $[Extract literal in optional to separate productions to ensure consistent abstract syntax])
-
-  /**
-   * Tests if something is a non-terminal in terms of the AST produced.
-   */
-  is-non-terminal =
-    ?sort(_) + ?opt(_) + is-iter
-  + namespacedef(id, is-non-terminal) + namespaceref(is-non-terminal)
-  + namespaceref2(id, is-non-terminal)
-
-  is-iter =
-    ?iter(_) + ?iter-star(_) + ?iter-sep(_, _) + ?iter-star-sep(_, _)
-
-  // Instruct users to use { X "," }*
-
-  context-free-syntax-warning:
-    [sort(x), iter-star(seq(lit(sep), [sort(x)])) | _] ->
-    (<id>, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
-
-  context-free-syntax-warning:
-    [iter-star(seq(sort(x), [lit(sep)])), sort(x) | _] ->
-    (<id>, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
-
-  context-free-syntax-warning:
-    [opt(sort(x)), iter-star(seq(lit(sep), [sort(x)])) | _] ->
-    (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
-
-  context-free-syntax-warning:
-    [iter-star(seq(sort(x), [lit(sep)])), opt(sort(x)) | _] ->
-    (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
-
-  context-free-syntax-warning:
-    prod(lhs @ [sort(x), opt(seq(lit(sep), [sort(xs)]))], sort(xs), _) ->
-    (lhs, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
-
-  // Instruct users to use { X ","? }* (seen in MDSD 2010)
-
-  context-free-syntax-warning:
-    [sort(x), iter-star(seq(opt(lit(sep)), [sort(x)])) | _] ->
-    (<id>, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
-
-  context-free-syntax-warning:
-    [iter-star(seq(sort(x), [opt(lit(sep))])), sort(x) | _] ->
-    (<id>, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
-
-  context-free-syntax-warning:
-    [opt(sort(x)), iter-star(seq(opt(lit(sep)), [sort(x)])) | _] ->
-    (<id>, $[Use {[x] [sep]?}* instead for [sep]?-separated lists])
-
-  context-free-syntax-warning:
-    [iter-star(seq(sort(x), [opt(lit(sep))])), opt(sort(x)) | _] ->
-    (<id>, $[Use {[x] [sep]?}* instead for [sep]?-separated lists])
-
-  context-free-syntax-warning:
-    prod(lhs @ [sort(x), opt(seq(opt(lit(sep)), [sort(xs)]))], sort(xs), _) ->
-    (lhs, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
-
-  context-free-syntax-warning:
-    [_ | t*] -> <context-free-syntax-warning> t*
-
-  context-free-syntax-warning:
-    iter-star(cs) -> (<id>, $[Character class iteration should be in lexical syntax section])
-    where
-      <oncetd(?range(_, _))> cs
-
-  context-free-syntax-warning:
-    iter(cs) -> (<id>, $[Character class iteration should be in lexical syntax section])
-    where
-      <oncetd(?range(_, _))> cs
-
-  context-free-syntax-warning:
-    iter-sep(_, bad @ sort(_)) -> (bad, "Non-terminal used as a list separator (use round braces for grouping non-terminals)")
-
-  context-free-syntax-warning:
-    iter-star-sep(_, bad @ sort(_)) -> (bad, "Non-terminal used as a list separator (use round braces for grouping non-terminals)")
 
 rules
 

From m.dejonge at tudelft.nl  Tue Nov  6 07:24:37 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 06:24:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25707 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20121106062437.3D3CF2B8230@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 06:24:36 2012
New Revision: 25707
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25707&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Tue Nov  6 06:19:29 2012	(r25706)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Tue Nov  6 06:24:36 2012	(r25707)
@@ -309,7 +309,7 @@
 				return document.substring(lastGoodPrefixStart, offset);
 			}
 		}
-		return document.substring(0, offset);
+		return document.substring(lastGoodPrefixStart, offset);
 	}
 	
 	private void filterResultsOnPrefix(String completionPrefix, Position position, ITextViewer viewer) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Tue Nov  6 06:19:29 2012	(r25706)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Tue Nov  6 06:24:36 2012	(r25707)
@@ -52,6 +52,8 @@
  */
 public class ContentProposerSemantic {
 
+	private static final String COMPLETION_PREFIX = "COMPLETIONPREFIX";
+
 	public static final IStrategoConstructor COMPLETION_CONSTRUCTOR =
 			getTermFactory().makeConstructor("COMPLETION", 1);
 
@@ -288,7 +290,7 @@
 		String sort = ImploderAttachment.getSort(completionContext);
 		IStrategoTerm nodeContext = findCompletionContext(newCompletionAST, sort);
 		if(nodeContext != null){
-			if(hasSort(nodeContext, sort)){ 
+			if(hasSort(nodeContext, sort) || hasSort(nodeContext, COMPLETION_PREFIX)){ 
 				newCompletionAST = getRoot(replaceNode(nodeContext, completionContext));
 			}
 			else {
@@ -316,15 +318,19 @@
 					if(result != null){
 						return result; //term that covers the cursor offset and has the right sort
 					}
-					if(trm.isList()){
+					else if(trm.isList()){
 						IStrategoTerm altResult = findAlternateReplaceTerm(subterm, sort); 
 						if(altResult != null){
 							return altResult; //term nearby cursor offset with the right sort, subterm local (cursor offset) scope
 						}
 					}
+					else {
+						break;
+					}
+					
 				} 
 			}
-			if (hasSort(trm, sort)) {
+			if (hasSort(trm, sort) || hasSort(trm, COMPLETION_PREFIX)) {
 				return trm;
 			}
 			if(trm.isList()){
@@ -621,7 +627,7 @@
 		return trans.replacementNode;
 	}
 
-	private int getEndOffset(IStrategoTerm trm) {
+	private static int getEndOffset(IStrategoTerm trm) {
 		IStrategoTerm imploderOrigin = ImploderAttachment.getImploderOrigin(trm);
 		if(imploderOrigin == null){
 			if(trm.getSubtermCount() > 0)
@@ -631,7 +637,7 @@
 		return ImploderAttachment.getRightToken(imploderOrigin).getEndOffset();
 	}
 
-	private int getStartOffset(IStrategoTerm trm) {
+	private static int getStartOffset(IStrategoTerm trm) {
 		IStrategoTerm imploderOrigin = ImploderAttachment.getImploderOrigin(trm);
 		if(imploderOrigin == null){
 			if(trm.getSubtermCount() > 0)
@@ -676,6 +682,8 @@
 			return true;
 		if (startOffsetTrm >= this.startOffsetCompletionToken && isPartOfListPrefixAt(trm, this.startOffsetCompletionToken))
 			return true;
+		if(isAdjacentToEmptyStringProd(trm, this.startOffsetCompletionToken))
+			return true;
 		return startOffsetTrm <= this.startOffsetCompletionToken && this.startOffsetCompletionToken <= endOffsetTrm;
 	}
 	
@@ -694,7 +702,18 @@
 	protected static boolean isPartOfListPrefixAt(IStrategoTerm node, int offset) {
 		return node.isList() && offset >= Tokenizer.findLeftMostLayoutToken(getLeftToken(node)).getStartOffset();
 	}
-	
+
+	/**
+	 * Tests if an offset is part of a list prefix
+	 * (considers the layout preceding the list also part of the list).
+	 */
+	protected static boolean isAdjacentToEmptyStringProd(IStrategoTerm node, int offset) {
+		return 
+				getStartOffset(node) >= getEndOffset(node) &&  
+				offset >= Tokenizer.findLeftMostLayoutToken(getLeftToken(node)).getStartOffset() &&
+		        offset >= Tokenizer.findLeftMostLayoutToken(getLeftToken(node)).getStartOffset();
+	}
+
 	private IStrategoTerm[] extendWithInjections(IStrategoTerm[] semanticNodes) {
 		final ParentTermFactory factory = new ParentTermFactory(Environment.getTermFactory());
 		Set<String> additionalSorts = new HashSet<String>();

From m.dejonge at tudelft.nl  Tue Nov  6 07:38:13 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 06:38:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25708 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20121106063813.CCF66108C022@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 06:38:13 2012
New Revision: 25708
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25708&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Tue Nov  6 06:24:36 2012	(r25707)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Tue Nov  6 06:38:13 2012	(r25708)
@@ -66,8 +66,6 @@
 	
 	private static final String WHITESPACE_SEPARATION = "     ";
 	
-	private static final int RIGHT_CONTEXT_SIZE = 40;
-
 	private final StrategoObserver observer;
 
 	private final String completionFunction; //stratego rule that implements completion transformation
@@ -192,7 +190,9 @@
 			String documentFromPrefix = documentPrefix + COMPLETION_TOKEN + WHITESPACE_SEPARATION;
 			completionContexts = parseCompletionContext(parseController, documentFromPrefix, documentFromPrefix.length() - 2);			
 			String fullDocument = documentPrefix + COMPLETION_TOKEN + documentSuffix;
-			int endOffset = (documentPrefix + COMPLETION_TOKEN).length() + RIGHT_CONTEXT_SIZE;
+			int rightContextsize = gePositiontFirstNonLayoutCharacter(documentSuffix) + 3;
+			int endOffset = (documentPrefix + COMPLETION_TOKEN).length() + rightContextsize;
+			//required to support empty string insertion recoveries, e.g. "  -> COMPLETIONPREFIX"
 			Set<IStrategoTerm> moreCompletionContexts = parseCompletionContext(parseController, fullDocument, endOffset);
 			completionContexts.addAll(moreCompletionContexts);
 		} catch (Exception e) {
@@ -204,6 +204,15 @@
 		return completionContexts;
 	}
 
+	private int gePositiontFirstNonLayoutCharacter(String str) {
+		for (int i = 0; i < str.length(); i++) {
+			if(!Character.isWhitespace(str.charAt(i))){
+				return i;
+			}
+		}
+		return -1;
+	}
+
 	private Set<IStrategoTerm> parseCompletionContext(SGLRParseController parseController, String document, int endOffset) {
 		Set<IStrategoTerm> completionContexts;
 		SGLR sglr = new SGLR(parseController.getParser().getParser().getTreeBuilder(), parseController.getParser().getParser().getParseTable());

From m.dejonge at tudelft.nl  Tue Nov  6 10:36:30 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 09:36:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25709 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor
Message-ID: <20121106093630.708D6CC5AE@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 09:36:30 2012
New Revision: 25709
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25709&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Tue Nov  6 06:38:13 2012	(r25708)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Completions.esv	Tue Nov  6 09:36:30 2012	(r25709)
@@ -2,7 +2,7 @@
 
 imports Stratego-Sugar-Completions.generated
 
-completions
+completions Triggers
 
 /* TODO: enable completion triggers in a later release?
   completion trigger : "->[ \n\t]*[A-Za-z]"
@@ -17,10 +17,20 @@
   completion trigger : ":= [A-Za-z]"
 */
 
+
+completions Semantic proposer
+
   completion proposer : editor-complete
     
-  completion template Module: 
-    "module" " " <name> "\n\nstrategies\n\n\t" (blank)
+
+
+completions Syntactic templates
+ 
+  completion template Module: "module" = 
+    "module" " " (cursor) (blank)
+
+  completion template Module: "module (template)" = 
+    "module" " " <name> "\n\n" <decl*:Decl> (blank)
     
   completion template Decl*:
     "strategies" "\n\t" <def:Def> (blank)
@@ -32,7 +42,7 @@
     "overlays" "\n\t" <ol:Overlay> (blank)
   
   completion template Decl*:
-    "imports" "\n\t" <module> (blank)
+    "imports" "\n\t" (cursor) (blank)
   
   completion template Decl*:
     "signature" <sdecl:Sdecl> "\n\t" (blank)
@@ -100,13 +110,13 @@
 //  completion template Strategy: "s" =
 //    <s> 
 
-  completion template Strategy: "left choice" =
+  completion template Strategy: "_ <+ _>" =
     <s> " <+ " <s>
 
-  completion template Strategy: "guarded left choice" =
+  completion template Strategy: "_ < _ + _" =
     <s> " < " <s> "+" <s>
 
-  completion template Strategy: "sequential" =
+  completion template Strategy: "_ ; _" =
     <s> "; " <s>
 
   completion template Strategy: 
@@ -154,10 +164,10 @@
   completion template Strategy: "if-else" =
     "if" " " <s> " then\n\t" <s> "\nelse\n\t" <s> "\nend"
 
-  completion template Strategy: "assign ( => )" = 
+  completion template Strategy: "_ => _" = 
       <s> " => " <t>
 
-  completion template Strategy: "assign ( := )" = 
+  completion template Strategy: "_ := _" = 
       <t> " := " <t>
       
   completion template Strategy: 
@@ -172,7 +182,7 @@
   completion template Strategy:
   	"let" "\n\t" <x> " = " <s> "\nin\n\t" <s> "\nend"
 
-  completion template Strategy: "dynamic rule scope" =
+  completion template Strategy: "{| Dr: s |}" =
   "{| " <labels:DynRuleScopeId> ":" "\n\t" <s> "\n" "|}" (blank)
 
   completion template DynRuleScopeId: "scope-name (labeled)" =

From m.dejonge at tudelft.nl  Tue Nov  6 15:29:10 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 14:29:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25710 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans
Message-ID: <20121106142910.8AE1ACC673@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 14:29:10 2012
New Revision: 25710
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25710&sc=1

Log:
completion for module names and imports

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/complete.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Tue Nov  6 09:36:30 2012	(r25709)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Tue Nov  6 14:29:10 2012	(r25710)
@@ -6,6 +6,7 @@
   desugar
   lib/editor-common.generated
   sourcedir
+  
 
 strategies
 
@@ -32,6 +33,12 @@
       rules(
         DecoratedAst := ast'
       )
+    with //to allow module name completion
+      <?Module(mname, _)> ast;
+      if <not(ModuleName)> mname then 
+        record-all-module-names
+      end
+
 
   analyze-ast-local =
     if not(bagof-Declaration => [_ | _]) then // TODO: nicer "has done global analysis" check
@@ -800,3 +807,38 @@
       <string-starts-with(|"../")> f
 
   // TODO: overlapping signatures
+
+strategies
+  
+  record-all-module-names =
+    record-all-definitions(
+        record-module-name
+      , parse-stratego_sugar-string
+      | "str"
+    )
+  
+  record-module-name =
+    ?Module(mname, _);
+    rules(ModuleName : mname -> mname)
+  
+  record-all-definitions(record, parse|ext) =
+    <readdir> ".";
+    list-loop(
+      if <isdir> <filemode> then
+        chdir;
+        record-all-definitions(record, parse|ext);
+        <chdir> ".."
+      else
+        try(record-definitions(record, parse|ext))
+      end
+    )
+  
+  record-definitions(record, parse|ext):
+    filename -> filename
+    where
+      <has-extension(|ext)> filename;
+      <open-import(
+        abspath, 
+        parse, 
+        record
+     )> filename

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/complete.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/complete.str	Tue Nov  6 14:29:10 2012	(r25710)
@@ -0,0 +1,67 @@
+module complete
+
+imports
+  analysis
+  libstrc
+  lib/editor-common.generated
+
+
+strategies
+  
+  editor-complete:
+    (Var(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    with
+      <analyze-ast-local> ast;
+      proposals := <ContentProposals>
+      
+  editor-complete:
+    (SVar(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    with
+      <analyze-ast-local> ast;
+      proposals := <ContentProposals>
+
+  editor-complete:
+    (SVar(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    with
+      <analyze-ast-local> ast;
+      proposals := <ContentProposals>
+
+  editor-complete:
+    (Import(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    where
+      debug(!"Import: ");
+      proposals := <imported-module-name-proposals> ast
+
+  editor-complete:
+    (Module(COMPLETION(_), _), position, ast, path, project-path) -> proposals
+    where
+      proposals := <new-module-name-proposals> path
+
+  editor-complete:
+    (SortVar(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    where
+      proposals := [] //TODO
+
+  editor-complete:
+    (RDecT(COMPLETION(_), _, _), position, ast, path, project-path) -> proposals
+    where
+      proposals := [] //TODO
+
+
+rules //helpers
+
+   imported-module-name-proposals:
+    ast -> proposals'
+    where
+      proposals := <all-keys-ModuleName>;
+      excluded-proposals :=
+        [<?Module(<id>,_)> ast | <collect-all(?Import(<id>))> ast];
+      proposals':= <diff> (proposals, excluded-proposals)
+
+  new-module-name-proposals:
+    path -> proposals
+    where
+      proposals := [
+        <base-filename; remove-extension> path,
+        <remove-extension> path
+      ]

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str	Tue Nov  6 09:36:30 2012	(r25709)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/stratego_sugar.str	Tue Nov  6 14:29:10 2012	(r25710)
@@ -11,6 +11,7 @@
   refactoring/rename
   refactoring/format
   refactoring/helpers/builders
+  complete
 
 strategies
 
@@ -37,18 +38,7 @@
         end
       end
 
-  editor-complete:
-    (node, position, ast, path, project-path) -> proposals
-    where
-      <not(oncetd(?SortVar(COMPLETION(_))))> node;
-      <not(oncetd(?DynRuleScopeId(COMPLETION(_))))> node
-      //TODO: DynRuleScopeId(COMPLETION(""))
-      //TODO: SortVar
-    with
-      //debug(!"editor-complete: ");
-      <analyze-ast-local> ast;
-      proposals := <ContentProposals>
- 
+
   /* TODO: return ast' from analysis and use this rule based on the decorated ast
   editor-resolve:
     (selected, position, ast, path, project-path) -> target

From m.dejonge at tudelft.nl  Tue Nov  6 17:56:54 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 16:56:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25711 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans
Message-ID: <20121106165654.BD266CC6D5@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 16:56:54 2012
New Revision: 25711
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25711&sc=1

Log:
completion support for dynamic rule names

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/complete.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Tue Nov  6 14:29:10 2012	(r25710)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Tue Nov  6 16:56:54 2012	(r25711)
@@ -574,7 +574,9 @@
         case ?SVar(_):
           all-signatures' := <filter(?(_, _, _))> all-signatures
         case ?DynRuleScopeId(_):
-          all-signatures' := <filter(?(_, _, _); not(is-congruence-signature))> all-signatures
+          all-signatures' := <filter(dr-name-filter; not(is-congruence-signature))> all-signatures
+        case ?RDecT(_,_,_): //add rule to existing rule set
+          all-signatures' := <filter(dr-name-filter; not(is-congruence-signature))> all-signatures
         case ?Import(_):
           all-signatures' := []
         otherwise: // unknown context
@@ -585,6 +587,11 @@
         ContentProposals := proposals
       )
 
+  dr-name-filter: //HACK: only show dynamic rules
+  (dr-name, x, y) -> (name, x, y) 
+  where
+    name := <string-starts-with(|"all-keys-"); string-as-chars(drop(|9))> dr-name
+    
   propose-completion:
     Rule(lhs, rhs @ Var(COMPLETION(_)), _) -> proposals
     where

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/complete.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/complete.str	Tue Nov  6 14:29:10 2012	(r25710)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/complete.str	Tue Nov  6 16:56:54 2012	(r25711)
@@ -9,27 +9,30 @@
 strategies
   
   editor-complete:
-    (Var(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    (v at Var(COMPLETION(_)), position, ast, path, project-path) -> proposals
     with
       <analyze-ast-local> ast;
-      proposals := <ContentProposals>
+      proposals := <get-completion-proposals> v
       
   editor-complete:
-    (SVar(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    (sv at SVar(COMPLETION(_)), position, ast, path, project-path) -> proposals
     with
       <analyze-ast-local> ast;
-      proposals := <ContentProposals>
+      proposals := <get-completion-proposals> sv 
 
   editor-complete:
-    (SVar(COMPLETION(_)), position, ast, path, project-path) -> proposals
-    with
-      <analyze-ast-local> ast;
-      proposals := <ContentProposals>
+    (dr at DynRuleScopeId(COMPLETION(_)), position, ast, path, project-path) -> proposals
+    where
+      proposals := <get-completion-proposals> dr 
+
+  editor-complete:
+    (rd at RDecT(COMPLETION(_), _, _), position, ast, path, project-path) -> proposals
+    where
+      proposals := <get-completion-proposals> rd //Completion support for adding a dynamic rule
 
   editor-complete:
     (Import(COMPLETION(_)), position, ast, path, project-path) -> proposals
     where
-      debug(!"Import: ");
       proposals := <imported-module-name-proposals> ast
 
   editor-complete:
@@ -41,16 +44,18 @@
     (SortVar(COMPLETION(_)), position, ast, path, project-path) -> proposals
     where
       proposals := [] //TODO
-
-  editor-complete:
-    (RDecT(COMPLETION(_), _, _), position, ast, path, project-path) -> proposals
-    where
-      proposals := [] //TODO
+ 
 
 
 rules //helpers
+  
+  get-completion-proposals :
+    cn at completion-node -> proposals
+    where
+      //Fallback in case analysis fails, only global vars are shown
+      proposals := <ContentProposals <+ <propose-completion> cn <+ ![]> 
 
-   imported-module-name-proposals:
+  imported-module-name-proposals:
     ast -> proposals'
     where
       proposals := <all-keys-ModuleName>;

From m.dejonge at tudelft.nl  Tue Nov  6 18:00:39 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 17:00:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25712 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20121106170039.B82AACC6DE@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 17:00:39 2012
New Revision: 25712
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25712&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Tue Nov  6 16:56:54 2012	(r25711)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerSemantic.java	Tue Nov  6 17:00:39 2012	(r25712)
@@ -70,10 +70,7 @@
 
 	private final String completionFunction; //stratego rule that implements completion transformation
 
-	//TODO: let user specify what constructs are preferred as context, 
-	// e.g. Assign(y,Var(x)) may be more interesting than Var(x)
-	// because the type info of y can be taken into account
-	private final IStrategoTerm[] semanticNodes; //determine the syntactic context that is returned, e.g. the first term of the lhs of the rule
+	private final IStrategoTerm[] semanticNodes; //determine the syntactic context that is returned
 
 	
 	private ParseConfigReuser sglrReuser; //for reuse purpose
@@ -137,6 +134,9 @@
 
 	private Set<Completion> calculateProposals(IParseController controller, String documentPrefix,
 			String completionPrefix, String documentSuffix, IStrategoTerm[] semanticNodes, boolean isRequiredMatch) {
+		if(this.completionFunction == null || this.completionFunction.equals("")){
+			return new HashSet<Completion>();
+		}
 		Set<IStrategoTerm> inputTerms = constructCompletionInputTerms(ContentProposer.getParser(controller), 
 				documentPrefix, completionPrefix, documentSuffix, semanticNodes, isRequiredMatch);
 		Set<IStrategoTerm> proposalLists = constructOutputTerms(controller, inputTerms);						
@@ -181,9 +181,6 @@
 		try {
 			//sets AST for document (possible a slightly inferior AST with the empty string parsed instead of the completion identifier) 
 			currentAST = parseController.getCurrentAst(); 
-			if(this.currentAST == null)
-				return new java.util.HashSet<IStrategoTerm>();
-
 			//constructed partial trees around cursor location. 
 			//Only take into account the left context, since the right context can not be trusted
 			//SGLR sglr = parseController.getParser().getParser();
@@ -279,7 +276,7 @@
 			try {
 				observer.getLock().lock();
 				completionAST = analyzeAST(completionAST);
-				IStrategoTerm inputTerm = observer.getInputBuilder().makeInputTermResultingAst(completionAST, completionContext, true);
+				IStrategoTerm inputTerm = makeInputTerm(completionContext, completionAST);
 				if(inputTerm != null){
 					//completionContext is not in completionAST
 					inputTerms.add(inputTerm);
@@ -293,8 +290,21 @@
 		}
 		return inputTerms;
 	}
+
+	private IStrategoTerm makeInputTerm(IStrategoTerm completionContext, IStrategoTerm completionAST) {
+		if(completionAST == null){
+			final ParentTermFactory factory = new ParentTermFactory(Environment.getTermFactory());
+			return observer.getInputBuilder().makeInputTerm(
+				completionContext, true, factory.makeList(), completionContext, 
+				factory.makeAppl(factory.makeConstructor("None", 0), factory.makeList()));
+		}
+		IStrategoTerm inputTerm = observer.getInputBuilder().makeInputTermResultingAst(completionAST, completionContext, true);
+		return inputTerm;
+	}
 	
 	private IStrategoTerm constructASTForContext(IStrategoTerm completionContext) {
+		if(this.currentAST == null)
+			return null;
 		IStrategoTerm newCompletionAST = ((StrategoTerm)this.currentAST).clone(false);
 		String sort = ImploderAttachment.getSort(completionContext);
 		IStrategoTerm nodeContext = findCompletionContext(newCompletionAST, sort);
@@ -308,13 +318,13 @@
 				newCompletionAST = getRoot(replaceNode(nodeContext, insertedCompletionContext));			
 			}			
 		}
-		else{
-			final ParentTermFactory factory = new ParentTermFactory(Environment.getTermFactory());
-			IStrategoTerm[] terms = new IStrategoTerm[2];
-			terms[0] = newCompletionAST;
-			terms[1] = factory.makeAppl(COMPLETION_UNKNOWN, completionContext);
-			newCompletionAST = factory.makeTuple(terms);
-		}
+//		else {
+//			final ParentTermFactory factory = new ParentTermFactory(Environment.getTermFactory());
+//			IStrategoTerm[] terms = new IStrategoTerm[2];
+//			terms[0] = newCompletionAST;
+//			terms[1] = factory.makeAppl(COMPLETION_UNKNOWN, completionContext);
+//			newCompletionAST = factory.makeTuple(terms);
+//		}
 		return newCompletionAST;		
 	}
 
@@ -386,7 +396,7 @@
 		ArrayList<IStrategoTerm> elems = new ArrayList<IStrategoTerm>();
 		boolean isInserted = false;
 		for (int i = 0; i < list.getSubtermCount(); i++) {
-			int startOffset = this.getStartOffset(list.getSubterm(i));
+			int startOffset = getStartOffset(list.getSubterm(i));
 			if(!isInserted && getCompletionOffsetMid() <= startOffset){
 				elems.add(insertedElem);
 				isInserted = true;
@@ -400,12 +410,20 @@
 
 	private IStrategoTerm analyzeAST(IStrategoTerm ast) throws UndefinedStrategyException, //TODO let user specify analyze function in .esv
 			InterpreterErrorExit, InterpreterExit, InterpreterException {
-		IStrategoTuple inputTermAnalysis = observer.getInputBuilder().makeInputTerm(ast, false);
-		File file = SourceAttachment.getFile(ast);
-		IStrategoTerm analysisResult = observer.invoke(observer.getFeedbackFunction(), inputTermAnalysis, file);
-		ast = TermReader.termAt(analysisResult, 0);
-		setParents(ast);
-		return ast;
+		if(ast == null)
+			return null;
+		try {
+			IStrategoTuple inputTermAnalysis = observer.getInputBuilder().makeInputTerm(ast, false);
+			File file = SourceAttachment.getFile(ast);
+			IStrategoTerm analysisResult = observer.invoke(observer.getFeedbackFunction(), inputTermAnalysis, file);
+			IStrategoTerm astAnalyzed = TermReader.termAt(analysisResult, 0);
+			setParents(astAnalyzed);
+			return astAnalyzed;
+		} catch (Exception e) {
+			// TODO Auto-generated catch block
+			e.printStackTrace();
+			return ast;
+		}
 	}
 
 	private void setParents(IStrategoTerm term) {
@@ -718,9 +736,9 @@
 	 */
 	protected static boolean isAdjacentToEmptyStringProd(IStrategoTerm node, int offset) {
 		return 
-				getStartOffset(node) >= getEndOffset(node) &&  
+				getStartOffset(node) > getEndOffset(node) &&  
 				offset >= Tokenizer.findLeftMostLayoutToken(getLeftToken(node)).getStartOffset() &&
-		        offset >= Tokenizer.findLeftMostLayoutToken(getLeftToken(node)).getStartOffset();
+				offset <= Tokenizer.findRightMostLayoutToken(getRightToken(node)).getEndOffset();
 	}
 
 	private IStrategoTerm[] extendWithInjections(IStrategoTerm[] semanticNodes) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Tue Nov  6 16:56:54 2012	(r25711)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Tue Nov  6 17:00:39 2012	(r25712)
@@ -136,7 +136,7 @@
 		return makeInputTerm(node, includeSubNode, termPath, targetTerm, rootTerm);
 	}
 
-	private IStrategoTuple makeInputTerm(IStrategoTerm node, boolean includeSubNode,
+	public IStrategoTuple makeInputTerm(IStrategoTerm node, boolean includeSubNode,
 			IStrategoList termPath, IStrategoTerm targetTerm,
 			IStrategoTerm rootTerm) {
 		ITermFactory factory = Environment.getTermFactory();

From m.dejonge at tudelft.nl  Tue Nov  6 18:04:00 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 17:04:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25713 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20121106170400.CE2EB2B805A@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 17:04:00 2012
New Revision: 25713
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25713&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Tue Nov  6 17:00:39 2012	(r25712)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Tue Nov  6 17:04:00 2012	(r25713)
@@ -64,6 +64,8 @@
 	)
 	-> <create-template-production-dr> ((<un-double-quote>c, <un-double-quote> consstring), d)
 	
+	create-template-production-dr = fail //TODO
+	
   //todo:    figure out if this variant can be referred to and needs to be declared
   //example: ReturnType   = <: <Type>>
   declare-syntax-template-no-cons =

From m.dejonge at tudelft.nl  Tue Nov  6 18:09:24 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 17:09:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25714 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20121106170924.189922B82CB@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 17:09:23 2012
New Revision: 25714
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25714&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Tue Nov  6 17:04:00 2012	(r25713)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Tue Nov  6 17:09:23 2012	(r25714)
@@ -10,6 +10,8 @@
   include/libtemplatelang
   lib/EditorService
   lib/editor-common.generated
+  templatelang/to-sdf
+  
 imports
   analyze
 
@@ -63,9 +65,7 @@
 	  )
 	)
 	-> <create-template-production-dr> ((<un-double-quote>c, <un-double-quote> consstring), d)
-	
-	create-template-production-dr = fail //TODO
-	
+		
   //todo:    figure out if this variant can be referred to and needs to be declared
   //example: ReturnType   = <: <Type>>
   declare-syntax-template-no-cons =

From m.dejonge at tudelft.nl  Tue Nov  6 18:16:05 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 17:16:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25715 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20121106171605.798937F8050@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 17:16:05 2012
New Revision: 25715
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25715&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Tue Nov  6 17:09:23 2012	(r25714)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Tue Nov  6 17:16:05 2012	(r25715)
@@ -10,7 +10,6 @@
   include/libtemplatelang
   lib/EditorService
   lib/editor-common.generated
-  templatelang/to-sdf
   
 imports
   analyze

From m.dejonge at tudelft.nl  Tue Nov  6 19:14:25 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 18:14:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25716 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/trans
Message-ID: <20121106181425.438E0108C047@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 18:14:24 2012
New Revision: 25716
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25716&sc=1

Log:


Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/trans/

From m.dejonge at tudelft.nl  Tue Nov  6 19:18:24 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 18:18:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25717 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/generated
Message-ID: <20121106181824.2C32ACC6F6@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 18:18:23 2012
New Revision: 25717
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25717&sc=1

Log:


Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/generated/

From m.dejonge at tudelft.nl  Tue Nov  6 19:21:47 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 18:21:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25718 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/.settings
Message-ID: <20121106182147.EA43F2B806A@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 18:21:47 2012
New Revision: 25718
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25718&sc=1

Log:


Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.settings/

From m.dejonge at tudelft.nl  Tue Nov  6 19:24:19 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 06 Nov 2012 18:24:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25719 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/utils
Message-ID: <20121106182419.877E2CC6FF@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Tue Nov  6 18:24:19 2012
New Revision: 25719
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25719&sc=1

Log:


Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/utils/

From m.dejonge at tudelft.nl  Wed Nov  7 12:29:03 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 07 Nov 2012 11:29:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25720 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax
Message-ID: <20121107112903.1369C7F80DE@mx1.tudelft.nl>

Author: MaartjeDeJonge
Date: Wed Nov  7 11:29:02 2012
New Revision: 25720
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25720&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	Tue Nov  6 18:24:19 2012	(r25719)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	Wed Nov  7 11:29:02 2012	(r25720)
@@ -22,6 +22,8 @@
    FalseValue                             -- H [KW["false"]],
    ReferenceHoverRule   -- R [ H [ KW["reference"] _1 ] KW[":"] H [ _2 _3 ] ],
    ReferenceRule        -- R [ H [ KW["reference"] _1 ] KW[":"] _2 ],
+   CompletionProposer   -- R [ H [ KW["completion"] KW["proposer"] _1 ] KW[":"] _2 ],
+   CompletionProposer.1:iter-star         -- _1,
    CompletionProposer   -- R [ H [ KW["completion"] KW["proposer"] ] KW[":"] _1 ],
    CompletionLexical    -- R [ H [ KW["completion"] KW["lexical"] ] KW[":"] _1 ],
    IdentifierLexical    -- R [ H [ KW["identifier"] KW["lexical"] ] KW[":"] _1 ],

From m.dejonge at tudelft.nl  Wed Nov  7 13:10:49 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 07 Nov 2012 12:10:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25721 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <20121107121049.C7BCD2B80C0@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Wed Nov  7 12:10:48 2012
New Revision: 25721
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25721&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	Wed Nov  7 11:29:02 2012	(r25720)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	Wed Nov  7 12:10:48 2012	(r25721)
@@ -103,6 +103,7 @@
   // (the completion identifier in the AST provides additional context information)
   editor-complete:
     (node, position, ast, path, project-path) -> proposals'
+    where
       item at COMPLETION(name) := <collect-one(?COMPLETION(_))> node;
       index-transaction(
         (<index-lookup-all(|name)> item <+ ![]) => proposals

From v.vergu+vc at gmail.com  Fri Nov  9 14:12:29 2012
From: v.vergu+vc at gmail.com (Vlad Vergu)
Date: Fri, 09 Nov 2012 13:12:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25722 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
Message-ID: <20121109131229.6D634108C111@mx3.tudelft.nl>

Author: VladVergu
Date: Fri Nov  9 13:12:28 2012
New Revision: 25722
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25722&sc=1

Log:
hack-fix for http://yellowgrass.org/issue/Spoofax/532

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	Wed Nov  7 12:10:48 2012	(r25721)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	Fri Nov  9 13:12:28 2012	(r25722)
@@ -75,8 +75,22 @@
 
 		if (lastEditor == null && EditorState.isUIThread()) {
 			lastEditor = EditorState.getEditorFor(this);
-			if (lastEditor != null)
-				initializeEagerServices(result);
+			/**
+			 * XXX: Hack-fix for Spoofax/532 (http://yellowgrass.org/issue/Spoofax/532)
+			 * @author VladVergu
+			 * - Some service factories (eg AutoEditStrategyFactory.init()) require that the ISourceViewer 
+			 * is set on the editor.
+			 * - IMP initializes the parser controllers on TextEditor.createPartControl(), see org.eclipse.imp.runtime.UniversalEditor.createPartControl(...)
+			 * - the initialization sequence has changed between Eclipse 3.x and 4.x and the ISourceViewer is only initialized later
+			 * 
+			 * This hack delays the eager initialization of services until we actually have a source viewer.
+			 */
+			if (lastEditor.getEditor().getServiceControllerManager().getSourceViewer() != null) {
+				if (lastEditor != null)
+					initializeEagerServices(result);
+			}else{
+				lastEditor = null;
+			}
 		}
 		return result;
 	}

From gabrielkonat at gmail.com  Sun Nov 11 15:28:52 2012
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Sun, 11 Nov 2012 14:28:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25723 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <20121111142852.970A52B80F3@mx2.tudelft.nl>

Author: gkonat
Date: Sun Nov 11 14:28:50 2012
New Revision: 25723
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25723&sc=1

Log:
More efficient queuing of files in new/changed projects that have a multi-file observer.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java	Fri Nov  9 13:12:28 2012	(r25722)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java	Sun Nov 11 14:28:50 2012	(r25723)
@@ -88,14 +88,21 @@
 	}
 
 	private void notifyNewProjectFiles(File file) {
-		if (file.isFile()) {
-			if (isIndexedFile(new Path(file.getAbsolutePath())))
-				notifyFileChanges(file.toURI(), null);
+		notifyFileChanges(getProjectFileSubfiles(file).toArray(new FileSubfile[0]));
+	}
+	
+	private List<FileSubfile> getProjectFileSubfiles(File file) {
+		List<FileSubfile> fileSubfiles = new ArrayList<FileSubfile>();
+		if(file.isFile()) {
+			if (isIndexedFile(new Path(file.getAbsolutePath()))) {
+				fileSubfiles.add(new FileSubfile(file.toURI(), null));
+			}
 		} else {
-			for (File child : file.listFiles()) {
-				notifyNewProjectFiles(child);
+			for(File child : file.listFiles()) {
+				fileSubfiles.addAll(getProjectFileSubfiles(child));
 			}
 		}
+		return fileSubfiles;
 	}
 
 	public static boolean isIndexedFile(IPath path) {

From v.vergu+vc at gmail.com  Sun Nov 11 16:02:38 2012
From: v.vergu+vc at gmail.com (Vlad Vergu)
Date: Sun, 11 Nov 2012 15:02:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25724 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
Message-ID: <20121111150238.A7DF37F814B@mx1.tudelft.nl>

Author: VladVergu
Date: Sun Nov 11 15:02:37 2012
New Revision: 25724
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25724&sc=1

Log:
prevent NPE

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	Sun Nov 11 14:28:50 2012	(r25723)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	Sun Nov 11 15:02:37 2012	(r25724)
@@ -85,8 +85,7 @@
 			 * 
 			 * This hack delays the eager initialization of services until we actually have a source viewer.
 			 */
-			if (lastEditor.getEditor().getServiceControllerManager().getSourceViewer() != null) {
-				if (lastEditor != null)
+			if (lastEditor != null && lastEditor.getEditor().getServiceControllerManager().getSourceViewer() != null) {
 					initializeEagerServices(result);
 			}else{
 				lastEditor = null;

From chrismelman at hotmail.com  Mon Nov 19 16:47:19 2012
From: chrismelman at hotmail.com (Chris Melman)
Date: Mon, 19 Nov 2012 15:47:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25725 - hydra/webdsl
Message-ID: <20121119154719.11441108C023@mx3.tudelft.nl>

Author: ChrisMelman
Date: Mon Nov 19 15:47:18 2012
New Revision: 25725
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25725&sc=1

Log:
added reposearch to hydra buildfarrm

Modified:
   hydra/webdsl/tests.nix

Modified: hydra/webdsl/tests.nix
==============================================================================
--- hydra/webdsl/tests.nix	Sun Nov 11 15:02:37 2012	(r25724)
+++ hydra/webdsl/tests.nix	Mon Nov 19 15:47:18 2012	(r25725)
@@ -56,6 +56,6 @@
   researchr   = { researchrSrc ? { outPath = ../../researchr; rev = 1234; } }     : build "researchr" researchrSrc [];
   webdslorg   = { webdslorgSrc ? { outPath = ../../webdslorg; rev = 1234; } }     : build "webdslorg" webdslorgSrc [];
   yellowgrass = { yellowgrassSrc ? { outPath = ../../yellowgrass; rev = 1234; } } : build "yellowgrass" yellowgrassSrc ["chrismelman at hotmail.com""s.d.vermolen at tudelft.nl"] ;
-  yellowgrass_webservices = { yellowgrasswebservicesSrc ? { outPath = ../../yellowgrass; rev = 1234; } } : build "yellowgrass" yellowgrasswebservicesSrc [];
+  reposearch  = { reposearchSrc ? { outPath = ../../webdslorg; rev = 1234; } }    : build "reposearch" reposearchSrc [];
   feedback    = { feedbackSrc ? { outPath = ../../feedback; rev = 1234; } }       : build "evaluaties" feedbackSrc ["chrismelman at hotmail.com"];
 }

From oskarvanrest at gmail.com  Wed Nov 21 04:10:06 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Wed, 21 Nov 2012 03:10:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25726 - in
	experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual:
	. editor lib trans
Message-ID: <20121121031006.5A09D108C008@mx3.tudelft.nl>

Author: OskarVanRest
Date: Wed Nov 21 03:10:04 2012
New Revision: 25726
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25726&sc=1

Log:
fix

Deleted:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Builders.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Colorer.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Completions.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-References.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Syntax.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang.main.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/lib/analysis-auto.generated.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/analysis-manual.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/check.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/entitylang.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/generate.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/names.nd
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/refactor.str
Modified:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.generated.xml
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.generated.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.generated.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/plugin.xml
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/names.str

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.generated.xml
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.generated.xml	Mon Nov 19 15:47:18 2012	(r25725)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/build.generated.xml	Wed Nov 21 03:10:04 2012	(r25726)
@@ -7,8 +7,8 @@
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${src-gen}/org/spoofax/graphical/entitylang/textual/strategies/Main.java" property="java.jar.enabled"/>
-        <condition property="java.jar.import" value="-la org.spoofax.graphical.entitylang.textual.strategies" else="">
+        <available file="${src-gen}/EntityLang/strategies/Main.java" property="java.jar.enabled"/>
+        <condition property="java.jar.import" value="-la EntityLang.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>
         <condition property="java.jar.classpath" value=":${include}/${strmodule}-java.jar" else="">

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.generated.esv
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.generated.esv	Mon Nov 19 15:47:18 2012	(r25725)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.generated.esv	Wed Nov 21 03:10:04 2012	(r25726)
@@ -21,4 +21,4 @@
   //   Definition._ (disabled)
   
   Start.Module
-  Type.Entity
\ No newline at end of file
+  Definition.Entity
\ No newline at end of file

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.generated.esv
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.generated.esv	Mon Nov 19 15:47:18 2012	(r25725)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.generated.esv	Wed Nov 21 03:10:04 2012	(r25726)
@@ -13,4 +13,4 @@
   //   _.<constructor>
   
   Start.Module
-  Type.Entity
\ No newline at end of file
+  Definition.Entity
\ No newline at end of file

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/plugin.xml
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/plugin.xml	Mon Nov 19 15:47:18 2012	(r25725)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/plugin.xml	Wed Nov 21 03:10:04 2012	(r25726)
@@ -13,8 +13,8 @@
     	<extension point="org.spoofax.modelware.gmf.synchronizer">
           <synchronizer
                 textFileExtension="ent"
-                domainFileExtension="ent"
-                diagramFileExtension="ent_diagram"
+                domainFileExtension="entitylang"
+                diagramFileExtension="entitylang_diagram"
                 packageName="EntityLang">
           </synchronizer>
        </extension> 

Modified: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/names.str
==============================================================================
--- experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/names.str	Mon Nov 19 15:47:18 2012	(r25725)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/names.str	Wed Nov 21 03:10:04 2012	(r25726)
@@ -25,6 +25,9 @@
 
 rules
 
+  nam-get-scope-types :
+    Module(x, _) -> [Type()]
+
   nam-get-definition-keys :
     Module(x, _) -> [x]
 
@@ -40,6 +43,9 @@
 
 rules
 
+  nam-get-scope-types :
+    Entity(x, _) -> [Property()]
+
   nam-get-definition-keys :
     Entity(x, _) -> [x]
 

From oskarvanrest at gmail.com  Wed Nov 21 04:21:35 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Wed, 21 Nov 2012 03:21:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25727 - in
	experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual:
	editor editor/java/EntityLang test trans
Message-ID: <20121121032135.E08697F8024@mx1.tudelft.nl>

Author: OskarVanRest
Date: Wed Nov 21 03:21:35 2012
New Revision: 25727
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25727&sc=1

Log:


Added:
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Builders.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Colorer.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Completions.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-References.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Syntax.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang.main.esv
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/Activator.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/EntityLangParseController.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/EntityLangParseControllerGenerated.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/EntityLangValidator.java
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/test/example.analyzed.aterm
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/check.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/entitylang.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/generate.str
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/names.nd
   experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/refactor.str

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Builders.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Builders.esv	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,37 @@
+module EntityLang-Builders
+
+imports EntityLang-Builders.generated
+
+builders
+                                                                                   
+  // This file can be used for custom analysis, builder and refactoring rules.     
+  //                                                                               
+  // See the imported file for a brief introduction and examples.                  
+
+builders
+                                                                                                                            
+  provider : include/entitylang.ctree                                                                                       
+  provider : include/entitylang-java.jar                                                                                    
+                                                                                                                            
+  observer : editor-analyze                        (multifile)                                                              
+                                                                                                                            
+  builder  : "Show abstract syntax"                = debug-generate-aterm (openeditor) (realtime) (source)           
+  builder  : "Show deffed syntax"                  = debug-generate-deffed (openeditor) (realtime) (meta) (source)          
+  builder  : "Show analyzed syntax"                = debug-generate-analyzed (openeditor) (realtime) (source)  
+  builder  : "Show index entries for current file" = debug-index-show-current-file (openeditor) (realtime) (meta) (source)  
+  builder  : "Show index entries for all files"    = debug-index-show-all-files (openeditor) (realtime) (meta) (source)     
+  builder  : "Clear index for current file"        = debug-index-clear-current (meta) (source)                              
+  builder  : "Clear index"                         = debug-index-clear (meta) (source)                                      
+  builder  : "Reload index"                        = debug-index-reload (meta) (source)                                     
+                                                                                                                            
+
+refactorings
+
+  pretty-print : pp-entitylang-string
+
+  refactoring ID : "Rename Entity" = rename-entity (source) (cursor)
+    shortcut : "org.eclipse.jdt.ui.edit.text.java.rename.element"
+    input
+      identifier : "new name" = ""
+
+  on save : editor-save
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Colorer.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Colorer.esv	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,9 @@
+module EntityLang-Colorer
+
+imports EntityLang-Colorer.generated
+
+colorer
+                                                                      
+  // This file can be used for custom colorer rules.                  
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Completions.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Completions.esv	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,31 @@
+module EntityLang-Completions
+
+imports EntityLang-Completions.generated
+
+completions
+                                                                   
+  // This file is used to define content completion.               
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
+                                                                   
+
+completions
+                                             
+  // Syntax completion:                      
+                                             
+  completion template Start :
+    "module " <m> (blank)  
+                                             
+  completion template Definition :
+    "entity " <e> " {" (cursor) "}" (blank)  
+                                             
+  completion template Property : "property : Type" =
+    <x> " : " <T> (blank)  
+                                             
+
+completions
+  // Semantic (identifier) completion:   
+                                         
+  completion proposer                  : editor-complete
+                                         
+  completion trigger                   : ":"
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Folding.esv	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,9 @@
+module EntityLang-Folding
+
+imports EntityLang-Folding.generated
+
+folding
+  
+  // This file can be used for custom folding rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Outliner.esv	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,9 @@
+module EntityLang-Outliner
+
+imports EntityLang-Outliner.generated
+
+outliner
+  
+  // This file can be used for custom outliner rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-References.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-References.esv	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,15 @@
+module EntityLang-References
+
+imports EntityLang-References.generated
+
+references
+                                                                                                   
+  // This file can be used to specify reference resolving and hover help, and content completion.  
+  //                                                                                               
+  // See the imported file for a brief introduction and examples.                                  
+                                                                                                   
+
+references
+                
+  reference _ : editor-resolve
+  hover _     : editor-hover
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Syntax.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang-Syntax.esv	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,9 @@
+module EntityLang-Syntax
+
+imports EntityLang-Syntax.generated
+
+language
+                                                                   
+  // This file can be used for custom syntax rules.                
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang.main.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/EntityLang.main.esv	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,16 @@
+module EntityLang.main
+
+imports EntityLang-Builders EntityLang-Colorer EntityLang-Completions EntityLang-Folding EntityLang-Outliner EntityLang-References EntityLang-Syntax
+
+language General properties
+                  
+  name          : EntityLang
+  id            : EntityLang
+  extends       : Root
+                  
+  description   : "Spoofax/IMP-generated editor for the EntityLang language"
+  url           : http://strategoxt.org
+                  
+  extensions    : ent
+  table         : include/EntityLang.tbl
+  start symbols : Start
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/Activator.java	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,44 @@
+package EntityLang;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "EntityLang";
+
+  public static final String kLanguageName = "EntityLang";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/EntityLangParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/EntityLangParseController.java	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,4 @@
+package EntityLang;
+
+public class EntityLangParseController extends EntityLangParseControllerGenerated 
+{ }
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/EntityLangParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/EntityLangParseControllerGenerated.java	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,108 @@
+package EntityLang;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class EntityLangParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("EntityLang");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    EntityLangParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = EntityLangParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = EntityLangParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(EntityLangParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return EntityLangParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/EntityLangValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/editor/java/EntityLang/EntityLangValidator.java	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,12 @@
+package EntityLang;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class EntityLangValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return EntityLangParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/test/example.analyzed.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/test/example.analyzed.aterm	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,16 @@
+( Module(
+    "example"{[Module(), "example"]}
+  , [ Entity(
+        "User"{[Type(), "User", "example"]}
+      , [Property("name"{[Property(), "name", "User", "example"]}, "String"{[Type(), "String", "example"]}), Property("password"{[Property(), "password", "User", "example"]}, "String"{[Type(), "String", "example"]}), Property("homepage"{[Property(), "homepage", "User", "example"]}, "URL"{[Type(), "URL", "example"]})]
+      )
+    , Entity(
+        "BlogPosting"{[Type(), "BlogPosting", "example"]}
+      , [Property("poster"{[Property(), "poster", "BlogPosting", "example"]}, "User"{[Type(), "User", "example"]}), Property("body"{[Property(), "body", "BlogPosting", "example"]}, "String"{[Type(), "String", "example"]})]
+      )
+    , Entity("URL"{[Type(), "URL", "example"]}, [Property("location"{[Property(), "location", "URL", "example"]}, "String"{[Type(), "String", "example"]})])
+    , DataType("String"{[Type(), "String", "example"]})
+    ]
+  )
+, []
+)
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/check.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/check.str	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,21 @@
+module check
+
+imports
+  libstratego-lib
+  include/EntityLang
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/nbl-library.generated
+
+rules // Other
+  
+  constraint-warning:
+    Entity(x, _) -> (x, $[Entity names must start with a capital])
+    where
+      not(<string-starts-with-capital> x)
+  
+  constraint-note:
+    Module(x @ "example", _) -> (x, $[This is just an example program in the "entities" language
+                                      (this note is defined in trans/check.str) ])

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/entitylang.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/entitylang.str	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,168 @@
+module entitylang
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/EntityLang
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/compilation-library.generated
+  lib/nbl-library.generated
+  names
+  check
+  generate
+  refactor
+
+rules // Analysis
+  
+	// Analyzes the current program, returning a tuple with the analyzed AST, errors, warnings, notes and
+	// files that should be re-analyzed.
+  analyze:
+    (ast, path, project-path) -> (ast'', errors, warnings, notes, filesToAnalyze')
+    with
+      ast'                    := <id> ast; // Optional AST desugaring
+      (ast'', filesToAnalyze) := <analyze-top(|<language>)> (ast', path, project-path);
+      index-transaction(
+	      errors                := <collect-all(constraint-error, conc)> ast'';
+	      warnings              := <collect-all(constraint-warning, conc)> ast'';
+	      notes                 := <collect-all(constraint-note, conc)> ast''
+      );
+      filesToAnalyze'         := <index-filepairs-to-files> filesToAnalyze
+
+  // Main entry point for analyzes, called when a single file is opened in the editor.
+  editor-analyze:
+    (ast, path, project-path) -> (ast', errors, warnings, notes)
+    with
+      editor-init;
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyze> (ast, path, project-path);
+      <try(editor-queue-analysis)> <remove-all(?path)> filesToAnalyze
+      
+  // Main entry point for analyzes, called when multiple files have changed. 
+  editor-analyze:
+    files -> None()
+    where
+      not(is-tuple)
+    with
+    	index-setup(|<language>, [<project-path>], ".");
+      disable-commit-and-compile // Disable compilation during analysis.
+    with
+      editor-queue-analysis
+    with
+      // Enable and trigger compilation after all files have been analysed.
+      <enable-commit-and-compile> <language>;
+      <trigger-commit-and-compile> <language>
+      
+  // Called when current file is saved.
+  editor-save:
+    (_, _, _, _, _) -> None()
+    with
+      index-setup(|<language>, [<project-path>], ".");
+      <trigger-commit-and-compile> <language>
+
+rules // Editor services
+  
+  // Resolves a reference when the user control-clicks or presses F3 in the editor.
+  editor-resolve:
+    (node, position, ast, path, project-path) -> target
+    where
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-transaction(
+        target := <index-lookup> node
+      )
+
+  // Returns "hover help" information for a particular node in the editor.
+  // For references, this rule is invoked using the resolved term.
+  editor-hover:
+    (target, position, ast, path, project-path) -> $[[uriString]]
+    where
+      uriString := <index-uri-to-string> <index-uri> <index-find-key> target
+
+  // Completes an identifier when the user presses control-space
+  // (the completion identifier in the AST provides additional context information)
+  editor-complete:
+    (node, position, ast, path, project-path) -> proposals'
+    where
+      editor-init;
+      (ast', _) := <analyze-top(|<language>)> (ast, path, project-path);
+      item at COMPLETION(name) := <collect-one(?COMPLETION(_))> ast';
+      index-transaction(
+        (<index-lookup-all(|name)> item <+ ![]) => proposals
+      );
+      proposals' := <map(index-uri; index-uri-name)> proposals
+
+rules // Debugging
+  
+  // Prints the abstract syntax ATerm of a selection.
+  debug-generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected
+      
+  // Prints the definition annotated abstract syntax ATerm of a selection.
+  debug-generate-deffed:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := <analyze-defs> selected
+      
+  // Prints the analyzed annotated abstract syntax ATerm of a selection.
+  debug-generate-analyzed:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      editor-init;
+      filename := <guarantee-extension(|"analyzed.aterm")> path;
+      result   := <analyze-top(|<language>)> (selected, path, project-path)   
+      
+  // Prints the entries in the index of the current file.
+  debug-index-show-current-file:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      filename := <guarantee-extension(|"index.currentfile.aterm")> path;
+      result   := <index-get-all-in-file> path
+      
+  // Prints the entries in the index of all files.
+  debug-index-show-all-files:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      filename := <guarantee-extension(|"index.allfiles.aterm")> path;
+      result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
+
+  // Cleans current file from the index.
+  debug-index-clear-current:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      <index-clear-file> $[[project-path]/[path]]
+      
+  // Cleans all data from the index.
+  debug-index-clear:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-clear
+      
+  // Cleans all data from the index and re-analyzes every file.
+  debug-index-reload:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-reload
+    
+rules // Utility
+  
+  // Queue parallel analysis for given list of files.
+  editor-queue-analysis = 
+    not(?[]); queue-strategy(|"editor-parallel-analyze", "Analyzing files")
+      
+  // Executes parallel analysis using the index library.
+  editor-parallel-analyze:
+    files -> None()
+    with
+      index-parallel-analyze-files(analyze)

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/generate.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/generate.str	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,64 @@
+module generate
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/EntityLang
+  lib/editor-common.generated
+  lib/compilation-library.generated
+
+rules // Incremental code generation of project using compilation library.
+      
+  index-compile-ast(|file, subfile):
+    ast -> None()
+    with
+      java := <to-java> ast;
+      full-path := <dirname> file;
+      filename := <guarantee-extension(|"java")> <base-filename> file;
+      writePath := $[[full-path]/];
+      writeFile :=  $[[writePath][filename]];
+      try(<mkdir> writePath);
+      <fclose> <fputs> (java, <fopen> (writeFile, "w"))
+
+rules // Transformation to java strings.
+
+  to-java:
+    [_] -> <concat-strings> <map(to-java)>
+
+  to-java:
+    Module(x, d*) ->
+    $[ package [x];
+       
+       [d'*]
+     ]
+    with
+      d'* := <to-java> d*
+  
+  to-java:
+    Entity(x, p*) ->
+    $[ class [x] {
+           [p'*]
+       }
+     ]
+    with
+      p'* := <to-java> p*
+
+  to-java:
+    Property(x, Type(t)) -> $[
+      private [t] [x];
+      
+      public [t] get_[x] {
+          return [x];
+      }
+      
+      public void set_[x] ([t] [x]) {
+          this.[x] = [x];    
+      }
+  ]
+  
+  to-java:
+    Type(t) -> t
+
+  to-java:
+    t* -> <map(to-java)> t*

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/names.nd
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/names.nd	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,29 @@
+module names
+
+imports
+	
+	include/EntityLang
+	
+namespaces
+	
+	Module
+	Type
+	Property
+	
+rules
+
+	Module(x, _) : 
+		defines Module x
+		scopes Type
+		
+	Entity(x, _) :
+		defines Type x
+		scopes Property
+
+	DataType(x) :
+		defines Type x
+		
+	Property(x, t) :
+		defines Property x
+		refers to Type t
+		
\ No newline at end of file

Added: experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/refactor.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ experimental/graphical-editor/entitylang/org.spoofax.graphical.entitylang.textual/trans/refactor.str	Wed Nov 21 03:21:35 2012	(r25727)
@@ -0,0 +1,28 @@
+module refactor
+
+imports
+  lib/refactor-common.generated
+  include/EntityLang
+  lib/editor-common.generated  
+  entitylang
+
+rules
+ 
+  rename-entity:
+    (newname, selected-name, position, ast, path, project-path) -> ([(ast, new-ast)], fatal-errors, errors, warnings)
+    with
+      new-ast  := <topdown(try(rename-type(|selected-name, newname)))> ast; 
+      (errors, warnings) := <semantic-constraint-issues> (ast, new-ast);
+      fatal-errors := []
+
+  rename-type(|old-name, new-name):
+    Entity(old-name, y) -> Entity(new-name, y)
+
+  rename-type(|old-name, new-name):
+    Type(old-name) -> Type(new-name)
+    
+  semantic-constraint-issues:
+    (ast, new-ast) -> (<diff>(new-errors, errors), <diff>(new-warnings, warnings))
+    where
+    	(_, errors, warnings, _) := <editor-analyze> (ast, "", "");
+    	(_, new-errors, new-warnings, _) := <editor-analyze> (new-ast, "", "")

From oskarvanrest at gmail.com  Wed Nov 21 04:33:31 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Wed, 21 Nov 2012 03:33:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25728 -
	modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf
Message-ID: <20121121033331.EE3867F8024@mx1.tudelft.nl>

Author: OskarVanRest
Date: Wed Nov 21 03:33:31 2012
New Revision: 25728
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25728&sc=1

Log:
log exception when reference in the analysed AST has no annotation.

Modified:
   modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/Term2Model.java

Modified: modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/Term2Model.java
==============================================================================
--- modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/Term2Model.java	Wed Nov 21 03:21:35 2012	(r25727)
+++ modelware-bridging/trunk/org.spoofax.modelware.emf/src/org/spoofax/modelware/emf/Term2Model.java	Wed Nov 21 03:33:31 2012	(r25728)
@@ -20,6 +20,7 @@
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.Environment;
 
 /**
  * @author Oskar van Rest
@@ -119,6 +120,14 @@
 	}
 
 	private void setReference(IStrategoString term, EObject source, EReference eReference) {
+		if (
+				term.getAnnotations().size() == 0 || 
+				!(term.getAnnotations().head().isList()) || 
+				((IStrategoList) term.getAnnotations().head()).size() <= 1) {
+			Environment.logException("The analysed AST does not provide an index for reference " + term.toString() + ", or, the index is not in the expected format. Most likely, there is something wrong with the name binding specification of your language.");
+			return;
+		}
+		
 		IStrategoList path = ((IStrategoList) term.getAnnotations().head()).tail();
 		List<EObject> defs = findDefs(path, eReference.getEType());
 

From g.h.wachsmuth at tudelft.nl  Wed Nov 21 10:29:31 2012
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Wed, 21 Nov 2012 09:29:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25729 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice: .
	editor editor/java
Message-ID: <20121121092931.5CCF3108C026@mx3.tudelft.nl>

Author: GuidoWachsmuth
Date: Wed Nov 21 09:29:29 2012
New Revision: 25729
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25729&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/   (props changed)
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/   (props changed)

From karltk at strategoxt.org  Wed Nov 21 14:40:09 2012
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Wed, 21 Nov 2012 13:40:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25730 -
	spoofax/trunk/spoofax/org.spoofax.terms
Message-ID: <20121121134010.0721D7F8052@mx1.tudelft.nl>

Author: karltk
Date: Wed Nov 21 13:40:08 2012
New Revision: 25730
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25730&sc=1

Log:
Include full LGPL 2.1 license text.

Modified:
   spoofax/trunk/spoofax/org.spoofax.terms/LICENSE

Modified: spoofax/trunk/spoofax/org.spoofax.terms/LICENSE
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.terms/LICENSE	Wed Nov 21 09:29:29 2012	(r25729)
+++ spoofax/trunk/spoofax/org.spoofax.terms/LICENSE	Wed Nov 21 13:40:08 2012	(r25730)
@@ -1 +1,458 @@
-Licensed under the GNU Lesser General Public License v2.1
+		  GNU LESSER GENERAL PUBLIC LICENSE
+		       Version 2.1, February 1999
+
+ Copyright (C) 1991, 1999 Free Software Foundation, Inc.
+ 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+[This is the first released version of the Lesser GPL.  It also counts
+ as the successor of the GNU Library Public License, version 2, hence
+ the version number 2.1.]
+
+			    Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+Licenses are intended to guarantee your freedom to share and change
+free software--to make sure the software is free for all its users.
+
+  This license, the Lesser General Public License, applies to some
+specially designated software packages--typically libraries--of the
+Free Software Foundation and other authors who decide to use it.  You
+can use it too, but we suggest you first think carefully about whether
+this license or the ordinary General Public License is the better
+strategy to use in any particular case, based on the explanations below.
+
+  When we speak of free software, we are referring to freedom of use,
+not price.  Our General Public Licenses are designed to make sure that
+you have the freedom to distribute copies of free software (and charge
+for this service if you wish); that you receive source code or can get
+it if you want it; that you can change the software and use pieces of
+it in new free programs; and that you are informed that you can do
+these things.
+
+  To protect your rights, we need to make restrictions that forbid
+distributors to deny you these rights or to ask you to surrender these
+rights.  These restrictions translate to certain responsibilities for
+you if you distribute copies of the library or if you modify it.
+
+  For example, if you distribute copies of the library, whether gratis
+or for a fee, you must give the recipients all the rights that we gave
+you.  You must make sure that they, too, receive or can get the source
+code.  If you link other code with the library, you must provide
+complete object files to the recipients, so that they can relink them
+with the library after making changes to the library and recompiling
+it.  And you must show them these terms so they know their rights.
+
+  We protect your rights with a two-step method: (1) we copyright the
+library, and (2) we offer you this license, which gives you legal
+permission to copy, distribute and/or modify the library.
+
+  To protect each distributor, we want to make it very clear that
+there is no warranty for the free library.  Also, if the library is
+modified by someone else and passed on, the recipients should know
+that what they have is not the original version, so that the original
+author's reputation will not be affected by problems that might be
+introduced by others.
+
+  Finally, software patents pose a constant threat to the existence of
+any free program.  We wish to make sure that a company cannot
+effectively restrict the users of a free program by obtaining a
+restrictive license from a patent holder.  Therefore, we insist that
+any patent license obtained for a version of the library must be
+consistent with the full freedom of use specified in this license.
+
+  Most GNU software, including some libraries, is covered by the
+ordinary GNU General Public License.  This license, the GNU Lesser
+General Public License, applies to certain designated libraries, and
+is quite different from the ordinary General Public License.  We use
+this license for certain libraries in order to permit linking those
+libraries into non-free programs.
+
+  When a program is linked with a library, whether statically or using
+a shared library, the combination of the two is legally speaking a
+combined work, a derivative of the original library.  The ordinary
+General Public License therefore permits such linking only if the
+entire combination fits its criteria of freedom.  The Lesser General
+Public License permits more lax criteria for linking other code with
+the library.
+
+  We call this license the "Lesser" General Public License because it
+does Less to protect the user's freedom than the ordinary General
+Public License.  It also provides other free software developers Less
+of an advantage over competing non-free programs.  These disadvantages
+are the reason we use the ordinary General Public License for many
+libraries.  However, the Lesser license provides advantages in certain
+special circumstances.
+
+  For example, on rare occasions, there may be a special need to
+encourage the widest possible use of a certain library, so that it becomes
+a de-facto standard.  To achieve this, non-free programs must be
+allowed to use the library.  A more frequent case is that a free
+library does the same job as widely used non-free libraries.  In this
+case, there is little to gain by limiting the free library to free
+software only, so we use the Lesser General Public License.
+
+  In other cases, permission to use a particular library in non-free
+programs enables a greater number of people to use a large body of
+free software.  For example, permission to use the GNU C Library in
+non-free programs enables many more people to use the whole GNU
+operating system, as well as its variant, the GNU/Linux operating
+system.
+
+  Although the Lesser General Public License is Less protective of the
+users' freedom, it does ensure that the user of a program that is
+linked with the Library has the freedom and the wherewithal to run
+that program using a modified version of the Library.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.  Pay close attention to the difference between a
+"work based on the library" and a "work that uses the library".  The
+former contains code derived from the library, whereas the latter must
+be combined with the library in order to run.
+
+		  GNU LESSER GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License Agreement applies to any software library or other
+program which contains a notice placed by the copyright holder or
+other authorized party saying it may be distributed under the terms of
+this Lesser General Public License (also called "this License").
+Each licensee is addressed as "you".
+
+  A "library" means a collection of software functions and/or data
+prepared so as to be conveniently linked with application programs
+(which use some of those functions and data) to form executables.
+
+  The "Library", below, refers to any such software library or work
+which has been distributed under these terms.  A "work based on the
+Library" means either the Library or any derivative work under
+copyright law: that is to say, a work containing the Library or a
+portion of it, either verbatim or with modifications and/or translated
+straightforwardly into another language.  (Hereinafter, translation is
+included without limitation in the term "modification".)
+
+  "Source code" for a work means the preferred form of the work for
+making modifications to it.  For a library, complete source code means
+all the source code for all modules it contains, plus any associated
+interface definition files, plus the scripts used to control compilation
+and installation of the library.
+
+  Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running a program using the Library is not restricted, and output from
+such a program is covered only if its contents constitute a work based
+on the Library (independent of the use of the Library in a tool for
+writing it).  Whether that is true depends on what the Library does
+and what the program that uses the Library does.
+  
+  1. You may copy and distribute verbatim copies of the Library's
+complete source code as you receive it, in any medium, provided that
+you conspicuously and appropriately publish on each copy an
+appropriate copyright notice and disclaimer of warranty; keep intact
+all the notices that refer to this License and to the absence of any
+warranty; and distribute a copy of this License along with the
+Library.
+
+  You may charge a fee for the physical act of transferring a copy,
+and you may at your option offer warranty protection in exchange for a
+fee.
+
+  2. You may modify your copy or copies of the Library or any portion
+of it, thus forming a work based on the Library, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) The modified work must itself be a software library.
+
+    b) You must cause the files modified to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    c) You must cause the whole of the work to be licensed at no
+    charge to all third parties under the terms of this License.
+
+    d) If a facility in the modified Library refers to a function or a
+    table of data to be supplied by an application program that uses
+    the facility, other than as an argument passed when the facility
+    is invoked, then you must make a good faith effort to ensure that,
+    in the event an application does not supply such function or
+    table, the facility still operates, and performs whatever part of
+    its purpose remains meaningful.
+
+    (For example, a function in a library to compute square roots has
+    a purpose that is entirely well-defined independent of the
+    application.  Therefore, Subsection 2d requires that any
+    application-supplied function or table used by this function must
+    be optional: if the application does not supply it, the square
+    root function must still compute square roots.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Library,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Library, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote
+it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Library.
+
+In addition, mere aggregation of another work not based on the Library
+with the Library (or with a work based on the Library) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may opt to apply the terms of the ordinary GNU General Public
+License instead of this License to a given copy of the Library.  To do
+this, you must alter all the notices that refer to this License, so
+that they refer to the ordinary GNU General Public License, version 2,
+instead of to this License.  (If a newer version than version 2 of the
+ordinary GNU General Public License has appeared, then you can specify
+that version instead if you wish.)  Do not make any other change in
+these notices.
+
+  Once this change is made in a given copy, it is irreversible for
+that copy, so the ordinary GNU General Public License applies to all
+subsequent copies and derivative works made from that copy.
+
+  This option is useful when you wish to copy part of the code of
+the Library into a program that is not a library.
+
+  4. You may copy and distribute the Library (or a portion or
+derivative of it, under Section 2) in object code or executable form
+under the terms of Sections 1 and 2 above provided that you accompany
+it with the complete corresponding machine-readable source code, which
+must be distributed under the terms of Sections 1 and 2 above on a
+medium customarily used for software interchange.
+
+  If distribution of object code is made by offering access to copy
+from a designated place, then offering equivalent access to copy the
+source code from the same place satisfies the requirement to
+distribute the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  5. A program that contains no derivative of any portion of the
+Library, but is designed to work with the Library by being compiled or
+linked with it, is called a "work that uses the Library".  Such a
+work, in isolation, is not a derivative work of the Library, and
+therefore falls outside the scope of this License.
+
+  However, linking a "work that uses the Library" with the Library
+creates an executable that is a derivative of the Library (because it
+contains portions of the Library), rather than a "work that uses the
+library".  The executable is therefore covered by this License.
+Section 6 states terms for distribution of such executables.
+
+  When a "work that uses the Library" uses material from a header file
+that is part of the Library, the object code for the work may be a
+derivative work of the Library even though the source code is not.
+Whether this is true is especially significant if the work can be
+linked without the Library, or if the work is itself a library.  The
+threshold for this to be true is not precisely defined by law.
+
+  If such an object file uses only numerical parameters, data
+structure layouts and accessors, and small macros and small inline
+functions (ten lines or less in length), then the use of the object
+file is unrestricted, regardless of whether it is legally a derivative
+work.  (Executables containing this object code plus portions of the
+Library will still fall under Section 6.)
+
+  Otherwise, if the work is a derivative of the Library, you may
+distribute the object code for the work under the terms of Section 6.
+Any executables containing that work also fall under Section 6,
+whether or not they are linked directly with the Library itself.
+
+  6. As an exception to the Sections above, you may also combine or
+link a "work that uses the Library" with the Library to produce a
+work containing portions of the Library, and distribute that work
+under terms of your choice, provided that the terms permit
+modification of the work for the customer's own use and reverse
+engineering for debugging such modifications.
+
+  You must give prominent notice with each copy of the work that the
+Library is used in it and that the Library and its use are covered by
+this License.  You must supply a copy of this License.  If the work
+during execution displays copyright notices, you must include the
+copyright notice for the Library among them, as well as a reference
+directing the user to the copy of this License.  Also, you must do one
+of these things:
+
+    a) Accompany the work with the complete corresponding
+    machine-readable source code for the Library including whatever
+    changes were used in the work (which must be distributed under
+    Sections 1 and 2 above); and, if the work is an executable linked
+    with the Library, with the complete machine-readable "work that
+    uses the Library", as object code and/or source code, so that the
+    user can modify the Library and then relink to produce a modified
+    executable containing the modified Library.  (It is understood
+    that the user who changes the contents of definitions files in the
+    Library will not necessarily be able to recompile the application
+    to use the modified definitions.)
+
+    b) Use a suitable shared library mechanism for linking with the
+    Library.  A suitable mechanism is one that (1) uses at run time a
+    copy of the library already present on the user's computer system,
+    rather than copying library functions into the executable, and (2)
+    will operate properly with a modified version of the library, if
+    the user installs one, as long as the modified version is
+    interface-compatible with the version that the work was made with.
+
+    c) Accompany the work with a written offer, valid for at
+    least three years, to give the same user the materials
+    specified in Subsection 6a, above, for a charge no more
+    than the cost of performing this distribution.
+
+    d) If distribution of the work is made by offering access to copy
+    from a designated place, offer equivalent access to copy the above
+    specified materials from the same place.
+
+    e) Verify that the user has already received a copy of these
+    materials or that you have already sent this user a copy.
+
+  For an executable, the required form of the "work that uses the
+Library" must include any data and utility programs needed for
+reproducing the executable from it.  However, as a special exception,
+the materials to be distributed need not include anything that is
+normally distributed (in either source or binary form) with the major
+components (compiler, kernel, and so on) of the operating system on
+which the executable runs, unless that component itself accompanies
+the executable.
+
+  It may happen that this requirement contradicts the license
+restrictions of other proprietary libraries that do not normally
+accompany the operating system.  Such a contradiction means you cannot
+use both them and the Library together in an executable that you
+distribute.
+
+  7. You may place library facilities that are a work based on the
+Library side-by-side in a single library together with other library
+facilities not covered by this License, and distribute such a combined
+library, provided that the separate distribution of the work based on
+the Library and of the other library facilities is otherwise
+permitted, and provided that you do these two things:
+
+    a) Accompany the combined library with a copy of the same work
+    based on the Library, uncombined with any other library
+    facilities.  This must be distributed under the terms of the
+    Sections above.
+
+    b) Give prominent notice with the combined library of the fact
+    that part of it is a work based on the Library, and explaining
+    where to find the accompanying uncombined form of the same work.
+
+  8. You may not copy, modify, sublicense, link with, or distribute
+the Library except as expressly provided under this License.  Any
+attempt otherwise to copy, modify, sublicense, link with, or
+distribute the Library is void, and will automatically terminate your
+rights under this License.  However, parties who have received copies,
+or rights, from you under this License will not have their licenses
+terminated so long as such parties remain in full compliance.
+
+  9. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Library or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Library (or any work based on the
+Library), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Library or works based on it.
+
+  10. Each time you redistribute the Library (or any work based on the
+Library), the recipient automatically receives a license from the
+original licensor to copy, distribute, link with or modify the Library
+subject to these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties with
+this License.
+
+  11. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Library at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Library by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Library.
+
+If any portion of this section is held invalid or unenforceable under any
+particular circumstance, the balance of the section is intended to apply,
+and the section as a whole is intended to apply in other circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  12. If the distribution and/or use of the Library is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Library under this License may add
+an explicit geographical distribution limitation excluding those countries,
+so that distribution is permitted only in or among countries not thus
+excluded.  In such case, this License incorporates the limitation as if
+written in the body of this License.
+
+  13. The Free Software Foundation may publish revised and/or new
+versions of the Lesser General Public License from time to time.
+Such new versions will be similar in spirit to the present version,
+but may differ in detail to address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Library
+specifies a version number of this License which applies to it and
+"any later version", you have the option of following the terms and
+conditions either of that version or of any later version published by
+the Free Software Foundation.  If the Library does not specify a
+license version number, you may choose any version ever published by
+the Free Software Foundation.
+
+  14. If you wish to incorporate parts of the Library into other free
+programs whose distribution conditions are incompatible with these,
+write to the author to ask for permission.  For software which is
+copyrighted by the Free Software Foundation, write to the Free
+Software Foundation; we sometimes make exceptions for this.  Our
+decision will be guided by the two goals of preserving the free status
+of all derivatives of our free software and of promoting the sharing
+and reuse of software generally.
+
+			    NO WARRANTY
+
+  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO
+WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.
+EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR
+OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY
+KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
+LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME
+THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
+WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY
+AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU
+FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR
+CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE
+LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING
+RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A
+FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF
+SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
+DAMAGES.
+
+		     END OF TERMS AND CONDITIONS

From karltk at strategoxt.org  Wed Nov 21 14:41:29 2012
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Wed, 21 Nov 2012 13:41:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25731 -
	spoofax/trunk/spoofax/org.spoofax.terms
Message-ID: <20121121134130.008722B8039@mx2.tudelft.nl>

Author: karltk
Date: Wed Nov 21 13:41:29 2012
New Revision: 25731
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25731&sc=1

Log:
Added minimal README.

Added:
   spoofax/trunk/spoofax/org.spoofax.terms/README

Added: spoofax/trunk/spoofax/org.spoofax.terms/README
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.terms/README	Wed Nov 21 13:41:29 2012	(r25731)
@@ -0,0 +1 @@
+A flexible term library.

From karltk at strategoxt.org  Wed Nov 21 15:47:37 2012
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Wed, 21 Nov 2012 14:47:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25732 -
	spoofax/trunk/spoofax/org.spoofax.jsglr
Message-ID: <20121121144737.367BC2B8042@mx2.tudelft.nl>

Author: karltk
Date: Wed Nov 21 14:47:36 2012
New Revision: 25732
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25732&sc=1

Log:
Added bindist target, where javadoc and source code is included into a tarball along with the compiled jars.

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/build.ant.xml

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/build.ant.xml
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/build.ant.xml	Wed Nov 21 13:41:29 2012	(r25731)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/build.ant.xml	Wed Nov 21 14:47:36 2012	(r25732)
@@ -38,7 +38,7 @@
         <chmod perm="a+x" file="${prefix}/bin/jsglr" />
    </target>
 
-   <target name="dist" description="--> create the dist tarball">
+   <target name="dist" description="--> create the source dist tarball">
        <tar destfile="${build.dir}/${jarname}-${version}.tar">
            <tarfileset prefix="${jarname}-${version}/" dir="." includes="src/"/>
            <!-- THIS IS 3VIL! Should be removed once the deps are properly packaged -->
@@ -57,6 +57,19 @@
        <gzip zipfile="${build.dir}/${jarname}-${version}.tar.gz" src="${build.dir}/${jarname}-${version}.tar"/>
    </target>
 
+  <target name="bindist" depends="dist,jar" description="--> create the binary dist tarball">
+       <javadoc sourcepath="src/" destdir="target/doc"/>
+       <jar destfile="${build.dir}/${jarname}-${version}-javadoc.jar" basedir="${build.dir}/doc" />
+       <jar destfile="${build.dir}/${jarname}-${version}-sources.jar" basedir="src/" />
+       <tar destfile="${build.dir}/${jarname}-${version}-bin.tar">
+           <tarfileset prefix="${jarname}-${version}/" dir="${build.dir}" includes="${jarname}-${version}.jar"/>
+           <tarfileset prefix="${jarname}-${version}/" dir="${build.dir}" includes="${jarname}-${version}-sources.jar"/>
+           <tarfileset prefix="${jarname}-${version}/" dir="${build.dir}" includes="${jarname}-${version}-javadoc.jar"/>
+           <tarfileset prefix="${jarname}-${version}/" dir="." includes="INSTALL AUTHORS README LICENSE"/>
+       </tar>
+       <gzip zipfile="${build.dir}/${jarname}-${version}-bin.tar.gz" src="${build.dir}/${jarname}-${version}-bin.tar"/>
+   </target>
+
    <target name="jar" depends="compile">
         <jar destfile="${build.dir}/${jarname}-${version}.jar" basedir="${build.dir}/classes" />
     </target>

From karltk at strategoxt.org  Wed Nov 21 15:48:04 2012
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Wed, 21 Nov 2012 14:48:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25733 -
	spoofax/trunk/spoofax/org.spoofax.terms
Message-ID: <20121121144804.378DE2B803C@mx2.tudelft.nl>

Author: karltk
Date: Wed Nov 21 14:48:03 2012
New Revision: 25733
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25733&sc=1

Log:
Added javadoc into the bindist target.

Modified:
   spoofax/trunk/spoofax/org.spoofax.terms/build.ant.xml

Modified: spoofax/trunk/spoofax/org.spoofax.terms/build.ant.xml
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.terms/build.ant.xml	Wed Nov 21 14:47:36 2012	(r25732)
+++ spoofax/trunk/spoofax/org.spoofax.terms/build.ant.xml	Wed Nov 21 14:48:03 2012	(r25733)
@@ -32,12 +32,15 @@
        <gzip zipfile="${build.dir}/${jarname}-${version}.tar.gz" src="${build.dir}/${jarname}-${version}.tar"/>
    </target>
 
-   <target name="bindist" depends="jar" description="--> create the binary dist tarball">
+   <target name="bindist" depends="dist,jar" description="--> create the binary dist tarball">
+       <javadoc sourcepath="src/" destdir="target/doc"/>
+       <jar destfile="${build.dir}/${jarname}-${version}-javadoc.jar" basedir="${build.dir}/doc" />
        <jar destfile="${build.dir}/${jarname}-${version}-sources.jar" basedir="src/" />
        <tar destfile="${build.dir}/${jarname}-${version}-bin.tar">
            <tarfileset prefix="${jarname}-${version}/" dir="${build.dir}" includes="${jarname}-${version}.jar"/>
            <tarfileset prefix="${jarname}-${version}/" dir="${build.dir}" includes="${jarname}-${version}-sources.jar"/>
-           <tarfileset prefix="${jarname}-${version}/" dir="." includes="INSTALL AUTHORS"/>
+           <tarfileset prefix="${jarname}-${version}/" dir="${build.dir}" includes="${jarname}-${version}-javadoc.jar"/>
+           <tarfileset prefix="${jarname}-${version}/" dir="." includes="INSTALL AUTHORS README LICENSE"/>
        </tar>
        <gzip zipfile="${build.dir}/${jarname}-${version}-bin.tar.gz" src="${build.dir}/${jarname}-${version}-bin.tar"/>
    </target>

From karltk at strategoxt.org  Wed Nov 21 15:58:55 2012
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Wed, 21 Nov 2012 14:58:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25734 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client
Message-ID: <20121121145855.D52BD2B8031@mx2.tudelft.nl>

Author: karltk
Date: Wed Nov 21 14:58:54 2012
New Revision: 25734
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25734&sc=1

Log:
Added initial documentation for the ITreeBuilder interface. Incomplete.

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ITreeBuilder.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ITreeBuilder.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ITreeBuilder.java	Wed Nov 21 14:48:03 2012	(r25733)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ITreeBuilder.java	Wed Nov 21 14:58:54 2012	(r25734)
@@ -3,21 +3,49 @@
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.jsglr.client.imploder.ITokenizer;
 
+/**
+ * Top-level interface for participants of the tree building process during parsing. 
+ */
 public interface ITreeBuilder {
 
+	/**
+	 * Informs the tree builder about the properties of the parse table that will
+	 * be used during parsing. This method is called once before the parsing starts.
+	 */
 	void initializeTable(ParseTable table, int productionCount, int labelStart, int labelCount);
+	
+	/** 
+	 * Informs the tree builder about all of the parse tree productions that will 
+	 * be used during parsing. This method call is called repeatedly until the 
+	 * productions for all known labels have been accounted for.
+	 * 
+	 * @param labelNumber
+	 * @param parseTreeProduction
+	 */
 	void initializeLabel(int labelNumber, IStrategoAppl parseTreeProduction);
+	
+	/**
+	 * Informs the tree builder about the document that will be be parsed. This 
+	 * method is called once before parsing starts.
+	 */
 	void initializeInput(String input, String filename);
 	
 	Object buildTree(AbstractParseNode node);
 	Object buildTreeTop(Object subtree, int ambiguityCount);
 	
+	/**
+	 * Called before parsing starts so that the tree builder can reset internal
+	 * state and be ready for another parsing pass.
+	 */
 	void reset();
 
 	void reset(int startOffset);
 
 	/**
-	 * Gets the tokenizer, if applicable and initialized, or null.
+	 * The tree builder should return an initialized tokenizer, if applicable,
+	 * or null.
+	 * 
+	 * @return initialized tokenizer, or null.
 	 */
 	ITokenizer getTokenizer();
 }

From g.h.wachsmuth at tudelft.nl  Tue Nov 27 01:51:36 2012
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Tue, 27 Nov 2012 00:51:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25735 - in
	spoofax-contrib/jasmin-spoofax/trunk: examples lib test trans
	trans/analysis/names trans/editor
Message-ID: <20121127005136.D2D862B8019@mx2.tudelft.nl>

Author: GuidoWachsmuth
Date: Tue Nov 27 00:51:35 2012
New Revision: 25735
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25735&sc=1

Log:
updated to current Spoofax unstable

Added:
   spoofax-contrib/jasmin-spoofax/trunk/examples/
      - copied from r25734, spoofax-contrib/jasmin-spoofax/trunk/test/
   spoofax-contrib/jasmin-spoofax/trunk/lib/analysis-library-internal.generated.str
   spoofax-contrib/jasmin-spoofax/trunk/lib/nbl-library.generated.str
   spoofax-contrib/jasmin-spoofax/trunk/trans/analysis/names/binding.nd
   spoofax-contrib/jasmin-spoofax/trunk/trans/analysis/names/binding.str
Deleted:
   spoofax-contrib/jasmin-spoofax/trunk/lib/analysis-auto.generated.str
   spoofax-contrib/jasmin-spoofax/trunk/test/
Modified:
   spoofax-contrib/jasmin-spoofax/trunk/lib/analysis-library.generated.str
   spoofax-contrib/jasmin-spoofax/trunk/lib/compilation-library.generated.str
   spoofax-contrib/jasmin-spoofax/trunk/lib/editor-common.generated.str
   spoofax-contrib/jasmin-spoofax/trunk/lib/index-library.generated.str
   spoofax-contrib/jasmin-spoofax/trunk/trans/editor/builders.meta.str
   spoofax-contrib/jasmin-spoofax/trunk/trans/editor/complete.str
   spoofax-contrib/jasmin-spoofax/trunk/trans/editor/resolve.str
   spoofax-contrib/jasmin-spoofax/trunk/trans/jasminxt.str

Added: spoofax-contrib/jasmin-spoofax/trunk/lib/analysis-library-internal.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/jasmin-spoofax/trunk/lib/analysis-library-internal.generated.str	Tue Nov 27 00:51:35 2012	(r25735)
@@ -0,0 +1,836 @@
+module lib/analysis-library-internal.generated
+ 
+imports
+  libstratego-lib
+  libstratego-parallel
+  lib/editor-common.generated
+  lib/analysis-library.generated
+  lib/index-library.generated
+  
+signature constructors
+  
+  // Analysis
+  Results         : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) * List(File) -> Results
+  ParallelResults : AST * AST * List(Error) * List(Warning) * List(Note) * List(File) -> ParallelResults
+  
+  // Namespaces
+  Diff            : Namespace
+  ASTDiff         : Namespace
+  AST             : Namespace
+  
+  // Data
+  AST             : List(UriPart) * AST -> AST
+  
+  // Annotations 
+  Scope: Term -> Anno
+  
+rules // Analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @internal
+   * @type List((ast, (file, subfile))) -> Results(List(ast), List(def), List(use), List(data), List(addedElem), 
+   *                                       List(removedElem), List(fileToAnalyze@(file, subfile))))
+   */
+  analyze-top-internal(|phase, language, project-path, full-path):
+    astFilePairs -> Results(asts, defs, uses, data, added, removed, filesToAnalyze)
+    with
+      // Init
+      index-setup(|language, [project-path], full-path);
+      revision := <index-start-transaction>
+    with
+      // Store old elements
+      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> full-path;
+      <index-clear-file> full-path
+    with
+      {| Index-UnresolvedSet:
+        unresolvedSet := <new-iset>;
+        rules(Index-UnresolvedSet: _ -> unresolvedSet);
+        
+        (astFilePairs2, defsList) := <unzip> <map(analyze-top-defs)> astFilePairs;
+        defs := <concat> defsList;
+        (astFilePairs3, dataList) := <unzip> <map(analyze-top-data(|language, full-path))> astFilePairs2;
+        data := <concat> dataList;
+        (astFilePairs4, usesList) := <unzip> <map(analyze-top-uses(|language, full-path))> astFilePairs3;
+        uses := <concat> usesList;
+        (asts, _) := <unzip> astFilePairs4
+      |}
+    with
+      index-end-transaction
+    with
+      // Schedule re-analysis of dependent files (if current file is not testing language file)
+      // HACK: Depends on file extension, could be other languages with .spt extension?
+      if Editor() := phase; not(<is-test-file> full-path) then
+        newElems := <conc> (defs, <filter(index-diff-constructors)> data);
+        
+        // Find added and removed definitions
+        (added, removed) := <analyze-diff> (oldElems, newElems);
+        changed := <conc> (added, removed);
+        
+        // Store files that have changed in the index
+        index-transaction(
+          filesToAnalyze := <analyze-store-diff(|changed, revision)> astFilePairs4
+        )
+      else
+        (added, removed) := ([], []);
+        filesToAnalyze := []
+      end
+    with
+      <list-loop(analyze-top-store-ast(|full-path))> astFilePairs4
+      
+  /**
+   * Add URI annotations to each definition and unresolved URI annotations to each use site.
+   *
+   * @internal
+   */
+  analyze-top-defs:
+    (ast, file) -> ((ast2, file), defs)
+    with
+      <index-set-current-file> file;
+      (Some(ast2), edefs) := <analyze-defs> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
+      defs := <map(Snd)> edefs; 
+      <index-add-all(|file)> defs
+      
+  /**
+   * Gathers all data for each definition.
+   *
+   * @internal
+   */
+  analyze-top-data(|language, full-path):
+    (ast, file) -> ((ast2, file), data2)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Gather all data for each definition.
+        ast2 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast; // Parent pointers needed.
+        data := <origin-track-forced(analyze-tree-data)> ast2;
+        
+				// Resolve all references in gathered data.
+				(data2, _) := <analyze-uses> data;
+				<index-add-all(|file)> data2;
+				
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+      
+  /**
+   * Resolves all unresolved references for each use site.
+   *
+   * @internal
+   */
+  analyze-top-uses(|language, full-path):
+    (ast, file) -> ((ast3, file), uses)
+    with
+      <index-set-current-file> file;
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Resolve all unresolved references for each use site.
+        (ast2, uses) := <analyze-uses> ast;
+        <index-add-all(|file)> uses;
+        
+        ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2; // AST changed, reset parent pointers.
+        
+        // Store reads into the index (if not testing language)
+        if not(is-test-input(|language, full-path)) then
+          <index-add-all(|file)> <iset-elements> readSet
+        end
+      |}
+      
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast(|full-path):
+    (ast, (_, subfile)) -> <id>
+    where
+      <index-add(|full-path)> AST(subfile, ast)
+
+  /**
+   * Stores AST from file to the index.
+   *
+   * @internal
+   */   
+  analyze-top-store-ast(|full-path):
+    (ast, file) -> <id>
+    where
+      <is-string> file;
+      <index-add(|full-path)> AST([], ast)
+      
+  /**
+   * Identifies all definitions in the tree and annotates them with their URI.
+   * Also annotates uses with a preliminary "Unresolved(_)" URI.
+   *
+   * @internal
+   */
+  analyze-defs:
+  	ast -> (<analyze-defs(|[], set, Anon(), Anon())> ast, <iset-elements> set)
+  	where
+  		set := <new-iset>
+  		 
+  /** @internal */
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast{Scope([namespace, name | path])} -> ast'
+    where
+      paths' := <update-index-paths(|[(namespace, path)])> paths ;
+      ast'   := <rm-annotations; analyze-defs(|paths', defs, Anon(), Anon())> ast
+      
+  
+  /** @internal */
+  analyze-defs(|paths, defs, head-scope, head-scope-ns):
+    ast -> ast'
+    where
+    	<not(has-annos)> ast    	
+    with
+      if (namespace, path) := <nam-get-definition> ast then
+      	definition     := <nam-get-def(|paths, namespace)> path;
+      	Def(def-path)  := definition; 
+        head-scope-ns' := namespace;
+        head-scope'    := <Hd> path;
+        f#(children)   := <try(nam-annotate-scopes(|def-path))> ast;
+        <iset-add(|(<new>, definition))> defs
+      else
+        def-path       := INTERNAL_ERROR();
+        head-scope-ns' := head-scope-ns;
+        head-scope'    := head-scope;
+        f#(children)   := ast
+      end;
+      if scope-types := <nam-get-scope-types> ast then
+      	unique          := Anon(<new>);
+        updates         := <map(construct-index-path(|paths, head-scope', head-scope-ns', unique, ast))> scope-types;
+        paths'          := <update-index-paths(|updates)> paths;
+        head-scope-ns'' := Anon();
+        head-scope''    := Anon()
+      else
+      	paths'          := paths;
+      	head-scope-ns'' := head-scope-ns';
+        head-scope''    := head-scope'
+      end;
+      children' := <origin-track-forced(analyze-child-defs(|paths', defs, head-scope'', head-scope-ns''))> children;
+      ast'      := <try(nam-annotate-names(|paths', def-path))> f#(children') 
+       
+  /** @internal */
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[] -> []
+  	
+  /** @internal */
+  analyze-child-defs(|paths, defs, head-scope, head-scope-ns):
+  	[d|ds] -> [d'|ds']
+  	where
+  	  d'  := <analyze-defs(|paths, defs, head-scope, head-scope-ns)> d ;
+  	  if <nam-ordered-def> d then
+  	  	[namespace, name | path] := <nam-get-definition-key ; index-uri> d' ;
+        paths'                   := <update-index-paths(|[(namespace, path)])> paths ;
+  	  	ds'                      := <analyze-child-defs(|paths', defs, Anon(), Anon())> ds
+  	  else
+  	    ds' := <analyze-child-defs(|paths, defs, head-scope, head-scope-ns)> ds
+  	  end
+  
+  /** @internal */
+  construct-index-path(|paths, head-scope, head-scope-ns, unique, ast):
+    scope-type -> (scope-type, path'')
+    where
+      if !head-scope-ns => Anon() then
+        path  := <lookup-index-path> (scope-type, paths);
+        path' := <index-do-adjust-path(|scope-type, path, Anon(<new>))> ast
+      else
+        path  := <lookup-index-path> (head-scope-ns, paths);
+        path' := <index-do-adjust-path(|scope-type, path, head-scope)> ast
+      end;
+      // HACK: Disable generation of anonymous namespaces for unique definitions to let FieldAccess-like constructs work.
+      if /*<nam-unique> ast*/ fail then
+      	path'' := <index-do-adjust-path(|scope-type, path', unique)> ast
+      else
+      	path'' := path'
+      end
+      
+  /** @internal */
+  update-index-paths(|updates) = 
+    remove-all(?(<id>, _); !(<id>, updates) ; lookup') ; at-end(!updates)
+  
+  /** @internal */
+  lookup-index-path = 
+    lookup' <+ ![]
+ 
+  /** @internal */
+  index-do-adjust-path(|namespace, path, scope) =
+    adjust-index-path(origin-equal(|scope)|namespace, path)
+  <+
+    ![scope|path]
+ 
+  /**
+   * Analyze all uses, changing their preliminary "Unresolved(_)" URI to a definite URI of their definition.
+   *
+   * @internal
+   */
+  analyze-uses:
+    ast -> (ast'', uses')
+    with
+      analyzed     := <all(analyze-uses)> ast;
+      (ast', uses) := <unzip-analyzed> analyzed;
+      if !ast' => _{unresolved@[Unresolved(namespace), x | path]} then
+        if Def(def-uri) := <index-lookup> ast' then
+          ast'' := ast{def-uri};
+          uses' := [Use(def-uri) | uses]
+        else
+          ast'' := ast';
+          uses' := [BadUse([namespace, x]) | uses]
+        end
+      else
+        ast'' := ast';
+        uses' := uses
+      end
+ 
+  /**
+   * Collects all index data (e.g. types of definitions).
+   *
+   * @internal
+   */
+  analyze-tree-data:
+    tree -> data
+    where
+      set := <new-iset>;
+      <topdown(analyze-tree-data-part(|set))> tree;
+      data := <iset-elements> set
+      
+  /** @internal */
+  analyze-tree-data-part(|set):
+    tree -> tree
+    where
+      if def-term := <nam-get-definition-key> then
+        _{[namespace | path]} := def-term;
+        if result := <adjust-index-def-data(store-index-data-results(|set) |namespace, path)> tree then
+          <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
+        end
+      end
+  
+  /** @internal */
+  store-index-data-results(|set):
+    t -> <fail>
+    where
+      if is-list then
+        <iset-addlist(|t)> set
+      else
+        <iset-add(|t)> set
+      end
+      
+rules // Parallel analysis
+  
+  /** @internal */
+  index-parallel-analyze(analyze):
+    files -> allResults
+    with
+      map(index-parse-file); // Parsing cannot be done in parallel.
+      map(\(ast, file) -> (ast, file, <project-path>)\);
+      parallel-unordered(all(index-analyze(analyze)));
+      ?results;
+      with(<eq> (<length> results, <length> files) | "Input size not equal to output size");
+      filesToAnalyze := <make-set> <mapconcat(?ParallelResults(_, _, _, _, _, <id>))> results;
+      if not([] := filesToAnalyze) then
+        allResults := <concat> [results, <index-parallel-analyze(analyze)> filesToAnalyze]
+      else
+        allResults := results
+      end
+  
+  /** @internal */   
+  index-parse-file:
+    file -> (ast', file)
+    with
+	    if <file-exists> file then
+	    	if ast := <parse-file> file then
+	    		ast' := ast
+	      else
+	      	ast' := ()
+      	end
+	    else
+	      ast' := ()
+	    end
+   
+  /** @internal */   
+  index-set-markers:
+    ParallelResults(ast, ast', errors, warnings, notes, diffs) -> <id>
+    with
+      <set-markers(|ast)> (ast', errors, warnings, notes)
+      
+  /** @internal */
+  index-analyze(analyze):
+    (ast, path, project-path) -> ParallelResults(ast, ast', errors, warnings, notes, filesToAnalyze)
+    with
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyze>;
+      if [] := filesToAnalyze then
+        complete-work-unit
+      end
+      
+/** @internal */
+rules // Splitter
+  
+  /** @internal */
+  index-split = fail
+  /** @internal */
+  index-is-toplevel = fail
+  /** @internal */
+  index-is-qualifier = fail
+  /** @internal */
+  index-qualifier-subelements = fail
+  /** @internal */
+  index-create-qualifier(|qualifier) = fail
+  
+  /** @internal */
+  index-toplevel-split:
+    ast -> asts'
+    with
+      (ast', _) := <analyze-defs> ast;
+      asts      := <index-toplevel-split-internal> ast';
+      asts'     := <strip-annos> asts
+      
+  /** @internal */
+  index-toplevel-split-internal:
+    node -> units
+    with
+      switch id
+        case ?():
+          units := [((), [])]
+        case index-is-qualifier:
+          elems := <mapconcat(index-toplevel-split-internal)> <index-qualifier-subelements> node;
+          units := <map(index-transform-qualifier(|node))> elems
+        case index-is-toplevel:
+          units := [(node, <index-uri> <nam-get-definition-key> node)]
+        otherwise:
+          units := [(node, [])]
+      end
+      
+  /** @internal */
+  index-transform-qualifier(|node):
+    (elem, subfileName) -> (qualifier, subfileName)
+    with
+      qualifier := <index-create-qualifier(|node)> elem
+
+/** @internal */
+rules // Diffs
+  
+  /** @internal */
+  analyze-diff:
+    (defs1, defs2) -> (added, removed)
+    with
+      added   := <diff(index-diff-compare)> (defs2, defs1);
+      removed := <diff(index-diff-compare)> (defs1, defs2)
+    
+  /** @internal */
+  analyze-store-diff(|changedEntries, revision): 
+    astFilePairs -> analyzeFiles'
+    with
+      changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
+      dependentFiles  := <index-get-dependent-files> changedEntries;
+      
+      // Files to analyze
+      analyzeFiles := <make-set> <remove-all(fake-file)> dependentFiles;
+      analyzeFiles' := analyzeFiles;
+      // TODO: Is this extra check needed?
+      /*if <getfirst(index-get-file-revision; \r -> (r, revision)\; gt)> analyzeFiles then
+        // Add current file if the current file has read information from another file with a higher revision.
+        // This indicates that potentially outdated information was read.
+        analyzeFiles' := [file|analyzeFiles]
+      else
+        analyzeFiles' := analyzeFiles
+      end;*/
+      
+      // Files to compile
+      changedAstFiles := <filter(analyze-astdiff)> astFilePairs;
+      compileFiles := <make-set> <concat> [analyzeFiles', changedFiles, changedAstFiles];
+      // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
+      <map(analyze-add-compilediff)> compileFiles
+      
+  /** 
+   * Checks if ast for given file has changed. Succeeds if old ASTDiff is not found or if ASTDiff is different.
+   *
+   * @internal
+   */
+  analyze-astdiff:
+    (ast, file) -> file
+    where
+      name := <conc> (<index-file-to-uri> file, ["ast-checksum"]);
+      newChecksum := <checksum> ast;
+      if oldChecksum := <index-get-global(|name)> then
+        <index-set-global(|name)> newChecksum;
+        not(<eq> (oldChecksum, newChecksum))
+      else
+        <index-set-global(|name)> newChecksum
+      end
+      
+  /** 
+   * Adds given file to the list of files to compile.
+   *
+   * @internal
+   */
+  analyze-add-compilediff = index-add-global(|"compile-diff")
+  
+  /** 
+   * Gets the list of files to compile, and then clear it.
+   *
+   * @internal
+   */
+  analyze-get-compilediffs = index-get-all-globals(|"compile-diff"); index-clear-global(|"compile-diff")
+  
+rules // Index lookup rules (that take into account adjust-index-lookup)
+  
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s and outer scopes in namespace n that start with prefix p, returning the first 
+   * found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   *
+   * @type term -> ?Def(uri')
+   *
+   * @internal
+   */
+  index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> definition
+    where
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if StopLookup() := defs then
+        fail
+      end;
+      
+      if not(definition := <Hd> defs) then
+        [_|path']  := path;
+        definition := <index-lookup-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x
+      end
+      
+  /** @internal */
+  index-lookup-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-internal(id, id, name-compare|namespace, path, prefix)
+
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for definitions in the scope of s 
+   * and outer scopes in namespace n that start with prefix p, returning all found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path or part of this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   *
+   * @internal
+   */
+  index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> defs'
+    where
+      defs := <index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix)> x;
+      
+      if [_|path'] := path then
+        defs2 := <index-lookup-all-internal(adjust-import, adjust-lookup, name-compare|namespace, path', prefix)> x;
+        defs' := <conc> (defs, defs2)
+      else
+        defs' := defs
+      end
+
+  /** @internal */
+  index-lookup-all-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-internal(id, id, name-compare|namespace, path, prefix)
+      
+  /**
+   * Given a term x, namespace n, path s and prefix p, looks for a definition in the 
+   * scope of s in namespace n that start with prefix p, returning the first found definition.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param path      Only definitions with this path are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type term -> List(Def(uri))
+   *
+   * @internal
+   */
+  index-lookup-all-scoped-internal(adjust-import, adjust-lookup, name-compare|namespace, path, prefix):
+    x -> defs
+    with
+      adjust-lookup;
+      adjusted := <index-do-adjust-lookup(|namespace, path, x, prefix)> x;
+      defs     := <index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix)> x
+    <+
+      adjust-import;
+      adjusted := <index-do-adjust-import(|namespace, path)> x;
+      defs     := <index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix)> x
+    <+
+      defs     := <index-get-children(\uri -> Def(uri)\, name-compare|namespace, prefix)> [namespace | path]
+      
+  /** @internal */
+  index-lookup-all-scoped-internal(name-compare|namespace, path, prefix) = 
+    index-lookup-all-scoped-internal(id, id, name-compare|namespace, path, prefix)
+  
+  /** @internal */
+  index-do-adjust-import(|namespace, path) =
+    adjust-index-import(|namespace, path)
+    
+  /** @internal */
+  index-get-adjust-import-results(adjust-lookup, name-compare|adjusted, prefix):
+    x -> defs'
+    with
+      defs := 
+        <mapconcat(
+             index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix)
+          <+ fatal-err(|"Unexpected result from adjust-index-import, should be a list of [namespace | path].")
+        )> adjusted;
+        if not(<elem> (StopLookup(), defs)) then
+        	defs' := <filter(name-compare)> defs
+        else
+        	defs' := StopLookup()
+      	end
+      	
+  /** @internal */
+  index-adjust-import-recurse(adjust-lookup, name-compare|x, prefix):
+  	[namespace|path] -> results'
+  	with
+  		results := <index-lookup-all-scoped-internal(fail, adjust-lookup, name-compare|namespace, path, prefix)> x;
+  		if not(<is-list> results) then
+  			results' := [results]
+  		else
+  			results' := results
+			end
+        
+  /** @internal */
+  index-do-adjust-lookup(|namespace, path, use, prefix) =
+    repeat-until(
+      prim("SSL_EXT_get_parent", <id>)
+    , adjust-index-lookup(origin-equal(|use)|namespace, path, prefix) 
+    )
+    
+  /** @internal */  
+  index-get-adjust-lookup-results(adjust-import, name-compare|adjusted, prefix):
+    x -> defs'
+    with
+      if StopLookup() := adjusted then
+        defs' := StopLookup()
+      else
+        defs := 
+          <mapconcat(
+               \d at Def(p) -> [d]\
+            <+ \[namespace'|path'] -> <index-lookup-all-scoped-internal(adjust-import, fail, name-compare|namespace', path', prefix)> x\
+            <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list of Def(uri) or [namespace | path], or StopLookup() to stop the lookup.")
+          )> adjusted;
+          defs' := <filter(name-compare)> defs
+      end
+      
+rules // Name comparisons
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-equal(|name):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri
+  
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison.
+   * 
+   * @internal 
+   */     
+  index-compare-name-substring(|prefix):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given namespace.
+   * 
+   * @internal 
+   */      
+  index-compare-name-substring(|prefix, namespace):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <eq> (namespace, <index-uri-namespace> uri);
+      <is-substring(!prefix)> <index-uri-name> uri
+      
+rules // URI and value projections
+       
+  /** @internal */
+  index-uri-impl:
+    Def(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Use(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    Read(uri) -> uri
+    
+  /** @internal */  
+  index-uri-impl:
+    x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
+ 
+  /**
+   * TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
+   * 
+   * @internal 
+   */
+  index-uri-impl:
+    ReadWildcard(uri, _) -> uri
+
+  /** @internal */
+  index-value-impl:
+    Def(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Use(value) -> value
+
+  /** @internal */
+  index-value-impl:
+    Read(value) -> value
+  
+  /** @internal */
+  index-value-impl:
+    ReadWildcard(_, value) -> value
+    
+rules // Internal helpers
+
+  /**
+   * Transforms a term C( (a1, [b1]), (a2, [b2, b3]) ) to a tuple (C(a1, a2), [b1, b2, b3]).
+   *
+   * @internal
+   */
+  unzip-analyzed:
+    appl -> (appl', unzipped-parts)
+    with
+      appl'          := <all(\(a, _) -> a\)> appl;
+      unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
+       
+  /**
+   * Tests if the current file is just a testing language input
+   *
+   * @internal
+   */
+  is-test-file = 
+    string-ends-with(|".spt")
+  /** @internal */
+  is-test-language = 
+    ?"Spoofax-Testing"
+  /** @internal */
+  is-test-input(|language, path) = 
+    <is-test-language> language <+ <is-test-file> path
+      
+  /** @internal */
+  fake-file = 
+    is-test-file <+ index-is-fake-file
+  
+  /** @internal */
+  ast-uri-to-ast-file(|full-path):
+    (ast, uri) -> (ast, (full-path, uri))
+   
+  /** @internal */    
+  index-readwildcard-substring(|prefix):
+    ReadWildcard(_, name) -> <id>
+    where <is-substring(!prefix)> name
+  
+  /** @internal */  
+  store-wildcard-read(|namespace, path, prefix):
+    children -> <id>
+    with
+      if set := <Index-ReadSet> then
+        if 1 := <length> children then
+          // HACK: This solves the problem of ReadWildcards making too many files re-analyze, but this should
+          // be handled in the index primitives instead.
+          <iset-add(|Read([namespace, prefix|path]))> set
+        else
+          <iset-add(|ReadWildcard([namespace|path], prefix))> set
+        end
+      end
+  
+  /** @internal */    
+  index-is-unresolved(|x, uri) = 
+    Index-UnresolvedSet; (iset-contains(|(x, uri)) <+ fail)
+  /** @internal */
+  index-add-unresolved(|x, uri) = 
+    (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
+  
+  /** @internal */
+  index-file-dependent-construct: 
+    uri -> <conc> (uses, reads)
+    with
+      uses := <index-get-uses-all> Def(uri);
+      reads := <index-get-reads-all> Def(uri)
+  
+  /** @internal */  
+  index-file-dependency-filter = 
+    ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_)
+ 
+  /** @internal */
+  index-eq(|namespace, expected) =
+    where(
+      ?Def([_, name | _]);
+      <SRTS-EXT-eq-ignore-annos(|expected)> name
+    )
+  
+  /** @internal */
+  external SRTS-EXT-eq-ignore-annos(|t)
+  
+  /** @internal */
+  index-key-unwrap = 
+    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id
+    
+rules // Interface for generated code
+ 
+  /** @internal */
+  nam-get-def(|paths, namespace):
+    part* -> Def([namespace, part* | <lookup-index-path> (namespace, paths)])
+  
+  /** @internal */ 
+  nam-annotate-def(|path):
+    t -> result
+    with
+    	result := t{path}
+  
+  /** @internal */ 
+  nam-annotate-use(|paths, namespace):
+    t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  
+  /** @internal */ 
+  nam-annotate-use(|paths, namespace, namespace2, name):
+  	t -> t{[Unresolved(namespace), t | <lookup-index-path> (namespace, paths)]}
+  	
+  /** @internal */ 
+  nam-annotate-scope(|path):
+    t -> t{Scope(path)}
+  
+  /** @internal */ 
+  nam-get-scope-types = fail
+  /** @internal */ 
+  nam-ordered-def = fail
+  /** @internal */
+  nam-get-definitions = fail
+  /** @internal */
+  nam-get-definition = nam-get-definitions ; Hd 
+  /** @internal */
+  nam-get-definition-keys = fail
+  /** @internal */
+  nam-get-definition-key = nam-get-definition-keys ; Hd
+  /** @internal */
+  nam-get-uses = fail
+  /** @internal */
+  nam-get-use = nam-get-uses ; Hd 
+  /** @internal */
+  nam-get-uses-keys = fail
+  /** @internal */
+  nam-get-use-key = nam-get-uses-keys ; Hd
+  /** @internal */
+  nam-annotate-names(|paths, def-path) = fail
+  /** @internal */
+  nam-annotate-scopes(|def-path) = fail
+  /** @internal */
+  nam-unique = fail

Modified: spoofax-contrib/jasmin-spoofax/trunk/lib/analysis-library.generated.str
==============================================================================
--- spoofax-contrib/jasmin-spoofax/trunk/lib/analysis-library.generated.str	Wed Nov 21 14:58:54 2012	(r25734)
+++ spoofax-contrib/jasmin-spoofax/trunk/lib/analysis-library.generated.str	Tue Nov 27 00:51:35 2012	(r25735)
@@ -2,423 +2,301 @@
  
 imports
   libstratego-lib
+  libstratego-parallel
   lib/editor-common.generated
+  lib/analysis-library-internal.generated
   lib/index-library.generated
  
 signature constructors
  
   // Analyze constructors
-  AnalysedResult : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) -> AnalysedResult
   Editor      : AnalysisPhase
   Compile     : AnalysisPhase
  
   // Index elements
   Def          : List(UriPart) -> Summary
-  Use          : List(UriPart) * List(UriPart) -> Summary
+  Use          : List(UriPart) -> Summary
   BadUse       : List(UriPart) -> Summary
   Read         : List(UriPart) -> Summary
   ReadWildcard : List(UriPart) * String -> Summary
   Diff         : List(UriPart) * List(Summary) -> Summary
-    
-  // Namespaces
-  Diff         : Namespace
-  ASTDiff      : Namespace
   
   // Adjust lookup actions
   StopLookup   : LookupAction
   
-rules // extension points
- 
-  // Should return list of Def(_) and/or [namespace | path] or StopLookup() to stop the lookup
-  adjust-index-lookup(is-use |namespace, path, prefix) = fail
- 
-  // adjust-index-select(|namespace, path, use) = fail // (e.g., for imports)
- 
-  // Should call <store-results> on a (list of) DefData
-  adjust-index-def-data(store-results |namespace, path) = fail
- 
-  // Should return a path
-  adjust-index-path(is-def |namespace, path) = fail
+rules // Index analysis extension points
  
-  // adjust-index-path-from-filesystem(|project-path, path)
+  /**
+   * Extension point. Override this rule to adjust how the index analysis looks up use sites to definitions.
+   *
+   * The overriden rule must return a list that contains any of the following items:
+   *   - Def(uri)         : A definition with exactly this URI has been found. This tells the lookup to resolve the
+   *                        use site to this definition.
+   *   - [namespace|path] : This tells the lookup to do a new lookup at the given namespace and path.
+   * 
+   * Returning multiple of these in the list is allowed, these will all show up during content completion and possibly
+   * other custom strategies. If multiple items are returned during reference resolving for example, the first item
+   * will be used.
+   *
+   * If the lookup has failed, for example your custom rule cannot find any definitions, you can also return 
+   * StopLookup() instead of a list. This tells the lookup algorithm to stop any further lookups for this use site.
+   * This can be useful to stop lookups for recursive expressions like property access, preventing a lot of useless
+   * lookups that will always fail anyway.
+   *
+   * Extension example:
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     PropAccess(exp, name) -> properties
+   *     where
+   *       <check-target-name> name
+   *     with
+   *       if TYPE(type{_}) := <type-of> exp then
+   *         properties := <index-lookup-children(|Property(), prefix)> type
+   *       else
+   *         properties := StopLookup()
+   *       end
+   *
+   *   adjust-index-lookup(check-target-name|namespace, path, prefix):
+   *     Var(name) -> [[Var() | path], [Property() | path]]
+   *     where
+   *       <check-target-name> name
+   *
+   * @param check-target-name   A strategy that should be used to check if the name of the current element is what the
+   *                            lookup algorithm is looking for.
+   * @param namespace           The namespace of the element that should be looked up.
+   * @param path                The path the lookup algorithm is currently looking at for the element.
+   * @param prefix              The prefix name of the element the lookup algorithm is looking for. This is usually the
+   *                            full name of the element, but could be a partial prefix during content completion.
+   * @type def -> List(Def(uri) or [namespace|path]) or StopLookup()
+   */
+  adjust-index-lookup(check-target-name|namespace, path, prefix) = fail
   
   /**
-   * Should define constructors to check for difference during analysis. Defaults to Def constructs.
+   * Extension point.
+   */
+  adjust-index-import(|namespace, path) = fail
+  
+  /** 
+   * Extension point. Override this rule to store data about definitions in the index. Should call <store-results> on 
+   * a (list of) data that must be stored in the index.
+   *
+   * Note that store-results always fails, this is a trick to make every adjust-index-def-data override always fail so 
+   * that every overriden rule is called once for each definition. This can lead to unexpected behaviour when trying to 
+   * store multiple items by calling store-results in a map or filter! Be sure to always let your adjust-index-def-data 
+   * rule fail if you are doing a <filter(store-results)> for example.
+   *
+   * Extension example:
+   *   adjust-index-def-data(store-results|namespace, path):
+   *     def -> <store-results> Type([namespace|path], type)
+   *     where
+   *       type := <type-of> def
+   *
+   * @param store-results Call this on the data you want to store in the index.
+   * @param namespace     The namespace of the definition that the rule is being called on.
+   * @param path          The path of the definition that the rule is being called on.
+   * @type def -> fail 
+   */
+  adjust-index-def-data(store-results|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to adjust how the index assigns a namespace and path (URI) to definitions and
+   * use sites. Should return a path that will be assigned to the definition or use site.
+   *
+   * Extension example:
+   *   adjust-index-path(check-target-definition|namespace, path):
+   *     Start(_, _) -> [<string-replace(|<project-path>, "")> <Fst> <index-get-current-file>]
+   *
+   *
+   * @param check-target-definition 
+   * @param namespace               The namespace that would be given to the current definition or use site.
+   * @param path                    The path that would be given to the current definition or use site.
+   * @type def -> uri@[namespace|path]
+   */
+  adjust-index-path(check-target-definition|namespace, path) = fail
+  
+  /**
+   * Extension point. Override this rule to define index-stored constructors to check for difference during analysis.
+   * The index-diff-compare extension point is used to do the actual comparison. Defaults to Def constructs.
    *
    * Extension example:
    *   index-diff-constructors = ?Type(_, _)
+   *
+   * @type a -> ?a
+   *
+   * @see index-diff-compare
    */
-  index-diff-constructors = ?Def(_)
+  index-diff-constructors = 
+    ?Def(_)
   
   /**
-   * Should compare two index elements and fail if they are not equal.
+   * Extension point. Override this rule to define a custom comparison of two index elements. It should fail if they 
+   * are not equal and return the indentity if they are equal. Only constructors defined by index-diff-constructors are
+   * compared.
    *
    * Extension example:
-     *   index-diff-compare:
+   *   index-diff-compare:
    *     (Type(u1, v1), Type(u2, v2)) -> <id>
    *     where
    *       <index-uri-eq> (u1, u2);
    *       <eq> (v1, v2)
+   *
+   * @type (a, b) -> ?(a, b)
+   *
+   * @see index-diff-constructors
    */
   index-diff-compare:
     (Def(u1), Def(u2)) -> <id>
     where
        <index-uri-eq> (u1, u2)
-       
-  post-analyze-top(|phase, language, full-path) = fail
  
-rules // analysis traversals
+rules // Analysis traversals
   
   /**
    * Analyses given AST and annotates definition and use sites found in the AST with URIs.
-   * Defaults to Editor() phase and tries to automatically determine language name.
+   * Defaults to Editor() phase.
    *
-   * @see analyze-top(|phase, language)
-   */
-  analyze-top = analyze-top(|Editor())
-  
-  /**
-   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
-   * Tries to automatically determine language name.
+   * @param language  The name of the language that is being analysed.
+   *
+   * @type (ast, path, project-path) -> (ast', List(fileToAnalyze@(file, subfile)))
    *
    * @see analyze-top(|phase, language)
    */
-  analyze-top(|phase) = ?(ast, _, _); analyze-top(|phase, <index-origin-language> ast)
+  analyze-top(|language):
+    (ast, path, project-path) -> <analyze-top(|Editor(), language, path, project-path)> ast
    
   /**
    * Analyses given AST and annotates definition and use sites found in the AST with URIs.
    *
-   * @param phase     The type of analysis phase. There are currently 2 phases to choose from:
-   *                  - Editor():   All information is stored into the index and dependent files
-   *                                are automatically scheduled for re-analysis.
-   *                  - Compile():  No information is stored and no re-analysis is done.
-   * @param language  The name of the language that is being analysed.
-   *
-   * @see analyze-top-internal(|phase, language)
-   */
-  analyze-top(|phase, language):
-    (ast, path, project-path) -> ast'
-    with
-      AnalysedResult(ast', _, _, _, _, _) := <analyze-top-internal(|phase, language)> (ast, path, project-path)
+   * @param phase         The type of analysis phase. There are 2 phases to choose from:
+   *                      - Editor():   File dependencies are analysed.
+   *                      - Compile():  File dependencies are not analysed.
+   * @param language      The name of the language that is being analysed.
+   * @param path          The path of the file to analyze relative to project-path.
+   * @param project-path  The path of the directory that contains all the source files.
+   * @type ast -> (ast', List(fileToAnalyze@(file, subfile)))
+   *
+   * @see analyze-top-internal(|phase, language, project-path, full-path)
+   */
+  analyze-top(|phase, language, path, project-path):
+    ast -> (ast', filesToAnalyze)
+    with
+      full-path := $[[project-path]/[path]];
+      if index-split then
+        index-setup(|language, [project-path], full-path); // Set up the index, splitting may require index calls.
+        asts := <index-toplevel-split> ast;
+        astsFilePairs := <map(ast-uri-to-ast-file(|full-path))> asts;
+        Results(ast', _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> astsFilePairs
+      else
+        Results(asts, _, _, _, _, _, filesToAnalyze) := 
+          <analyze-top-internal(|phase, language, project-path, full-path)> [(ast, (full-path, []))];
+        ast' := <Hd> asts // Always returns a list of 1 AST if there is no splitter, so take the head.
+      end
+  
+rules // Parallel analysis
   
   /**
-   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   * Does a parallel analysis of given files using the specified analysis strategy. Automatically does parallel
+   * analysis of dependent files that have changed during the analysis.
    *
-   * @internal
+   * Example:
+   *   <index-parallel-analyze-files(analyze)> ["text/file1.ext", "text/file2.ext"]
+   *
+   * @param analyze (ast, path, project-path) -> (ast', errors, warnings, notes, filesToAnalyze). Strategy that 
+   *                analyzes a file using the index. Gets a (ast, path, project-path) tuple as input and must return 
+   *                a (ast', errors, warnings, notes, filesToAnalyze) tuple as output.
+   * @type List((file, subfile) or file) -> None()
    */
-  analyze-top-internal = 
-    analyze-top-internal(|Editor())
-  analyze-top-internal(|phase) = 
-    ?(ast, path, project-path); analyze-top-internal(|phase, <index-origin-language> ast)
-  analyze-top-internal(|phase, language) = 
-    ?(_, path, project-path); analyze-top-internal(|phase, language, $[[project-path]/[path]])
-  analyze-top-internal(|phase, language, full-path):
-    (ast, path, project-path) -> AnalysedResult(ast5, defs, uses, data', added, removed)
-    with
-      // Init
-      index-setup(|language, [project-path], full-path)
-    with
-      file := (full-path, ""); // TODO: Get subfile or add subfile param.
-        // Store copy of elements for diff and clear file
-      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> file;
-      <index-clear-file> file
-    with
-      {| Index-ReadSet, Index-UnresolvedSet:
-        readSet := <new-iset>;
-        unresolvedSet := <new-iset>;
-        
-        rules(Index-ReadSet: _ -> readSet);
-        rules(Index-UnresolvedSet: _ -> unresolvedSet);
-       
-        // Add Unresolved annotations, record globals
-        (Some(ast2), defs) := <analyze-defs(|Anon(), Anon())> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
-        <index-add-all(|file)> defs;
-
-        // Find DefData
-        ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2;
-        data := <origin-track-forced(analyze-tree-data)> ast3;
-        <index-add-all(|file)> data;
-
-        // Resolve an references in DefData (using what we just stored)
-        (data', data-uses) := <analyze-uses> data;
-        <index-remove-all(|file)> data;
-        <index-add-all(|file)> data';
-       
-        // Resolve all unresolved references in the tree
-        (ast4, uses) := <analyze-uses> ast3;
-        <index-add-all(|file)> uses;
-        
-        ast5 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast4;
-       
-        // Store reads into the index (if current language is not testing language)
-        if not(<is-test-input(|language)> (ast, path)) then
-          <index-add-all(|file)> <iset-elements> readSet
-        end
-      |}
-    with
-      // Schedule re-analysis of dependent files (if current file is not testing language file)
-      // HACK: Depends on file extension, could be other languages with .spt extension?
-      if Editor() := phase; not(<is-test-file> path) then
-        newElems := <conc> (defs, <filter(index-diff-constructors)> data');
-        
-          // Find added and removed definitions
-          (added, removed) := <analyze-diff> (oldElems, newElems);
-          changed := <conc> (added, removed);
-
-          // Schedule re-analysis of files that depend on added or removed elements
-          <reanalyze-all(|full-path)> changed;
-          
-          // TODO: Move diff stuff to compilation-library somehow.
-          // Store added and removed elements in the index
-          analyze-store-diff(|changed, file, ast)
-        else
-          (added, removed) := ([], [])
-      end
+  index-parallel-analyze-files(analyze):
+    files -> None()
     with
-      try(post-analyze-top(|phase, language, full-path))
-
-  analyze-diff:
-    (defs1, defs2) -> (added, removed)
+      length; 
+      set-total-work-units
     with
-      added   := <diff(index-diff-compare)> (defs2, defs1);
-      removed := <diff(index-diff-compare)> (defs1, defs2)
-  
-  reanalyze-all(|file) =
-    index-get-dependent-files; 
-    filter(not(analyze-changed-filter-file(|file)); reanalyze-file)
-    
-  analyze-changed-filter-file(|file) = 
-    ?files@(<id>, _); (is-test-file <+ index-is-fake-file <+ ?file); !files
-    
-  reanalyze-file = 
-    ?(<id>, _); debug(!"Re-analyzing "); prim("SSL_EXT_queue_analysis")
-    
-  analyze-store-diff(|changedEntries, file, ast): 
-    _ -> <id>
-    with
-      // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
-      changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
-      dependentFiles  := <index-get-dependent-files> changedEntries;
-      files := <conc> (changedFiles, dependentFiles);
+      index-parallel-analyze(analyze);
+      filter(not(?ParallelResults((), (), _, _, _, _) <+ ?ParallelResults((), [()], _, _, _, _)); index-set-markers)
       
-      if not(<analyze-astdiff(|ast)> file) then
-        // Add current file if the AST has changed. Cannot use dependency tracking here because
-        // the originating file of a removed definition is not in the index any more.
-        files' := <make-set> [file|files] 
-        else
-            files' := <make-set> files
-        end;
-      
-      if not([] := files') then
-        storePath := <analyze-diff-path>;
-        <map(analyze-add-diff(|storePath))> files'
-      end
-      
-  analyze-add-diff(|storePath):
-    file -> <id>
-    with
-      <index-add-all(|storePath)> [Diff([Diff(), ".internal"], file)]
-      
-  analyze-get-diffs:
-    _ -> diffs
-    with
-        diffs := <make-set> <index-get-all-values> Diff([Diff(), ".internal"], ())
-        
-  // Fails if old ASTDiff is not found or if ASTDiff is different.
-  analyze-astdiff(|ast):
-    (file, subfile) -> <id>
-    where
-      storePath := <analyze-diff-path>;
-        newChecksum := <checksum> ast;
-      if oldChecksum := <index-get-value> Diff([ASTDiff(), file, ".internal"], ()) then
-        <index-remove-all(|storePath)> [Diff([ASTDiff(), file, ".internal"], ())];
-          <index-add-all(|storePath)> [Diff([ASTDiff(), file, ".internal"], newChecksum)];
-        <eq> (oldChecksum, newChecksum)
-        else
-            <index-add-all(|storePath)> [Diff([ASTDiff(), file, ".internal"], newChecksum)];
-            fail
-        end
-      
-  analyze-clean-diff:
-    _ -> <id>
-    with
-        storePath := <analyze-diff-path>; 
-      <index-remove-all(|storePath)> [Diff([Diff(), ".internal"], ())]
-        
-  analyze-diff-path = 
-    !"/.internal/diff"
- 
+rules // Splitter
+  
   /**
-   * Identifies all definitions in the tree
-   * and annotates them with their URI.
-   * Also annotates uses with a preliminary "Unresolved(_)" URI.
+   * Merges a top level definition back into an AST using splitter rules.
+   *
+   * @param toplevel  The top level definition to merge back into the given AST.
+   * @type ast -> ast'
    */
-  analyze-defs(|head-scope, head-scope-ns):
-    ast -> (ast', defs')
+  index-merge-ast(|toplevel):
+    term -> merged
     with
-      if def := <nam-get-definition> ast then
-        Def(def-path)                     := def;
-        [head-scope-ns', head-scope' | _] := def-path
-      else
-        def-path       := INTERNAL_ERROR();
-        head-scope-ns' := head-scope-ns;
-        head-scope'    := head-scope
-      end;
-      if scope-types := <nam-get-scope-types> ast then
-        {| IndexPath:
-          <list-loop(update-index-path(|head-scope', head-scope-ns', ast))> scope-types;
-          // <balanced-update-path> head-scope';
-          (ast', defs) := <analyze-defs-recurse(|Anon(), Anon(), def-path)> ast
-        |}
-      else
-        (ast', defs) := <analyze-defs-recurse(|head-scope', head-scope-ns', def-path)> ast
-      end;
-      defs' := <![def | defs] <+ !defs>
- 
-  analyze-defs-recurse(|head-scope, head-scope-ns, def-path):
-    ast -> (ast'', defs)
-    where
-      analyzed      := <all(analyze-defs(|head-scope, head-scope-ns))> ast;
-      (ast', defs)  := <unzip-analyzed> analyzed;
-      ast''         := <try(nam-annotate-names(|def-path))> ast'
- 
-  update-index-path(|head-scope, head-scope-ns, ast):
-    scope-type -> scope-type
-    where
-      if !head-scope-ns => Anon() then
-        path  := <IndexPath <+ ![]> scope-type;
-        path' := <do-adjusted-index-path(|scope-type, path, Anon(<new>))> ast
-      else
-        path  := <IndexPath <+ ![]> head-scope-ns;
-        path' := <do-adjusted-index-path(|scope-type, path, head-scope)> ast
-      end;
-      rules(IndexPath: scope-type -> path')
- 
-  /* TODO: consider using simple-update-def-path
-   *       which uses "balanced" path scopes
-   *       e.g. when Entity doesn't scope Function
-   *       then it's hard to access properties from a function
-  balanced-update-index-path:
-    head-scope -> head-scope
-    where
-      if !head-scope => Anon() then
-        head-scope' := Anon(<new>)
+      if <is-list> term then
+        [first-ast|_] := term;
+        merged        := <index-merge-ast(|toplevel)> first-ast
       else
-        head-scope' := head-scope
-      end;
-      (something with do-adjust-path)
-      rules(IndexPath := [head-scope' | <IndexPath <+ ![]> ()])
-  */
- 
-  /**
-   * Analyze all uses, changing their preliminary
-   * "Unresolve(_)" URI to a definite URI of their definition.
-   */
-  analyze-uses = analyze-uses(|None())
-  analyze-uses(|parent):
-    ast -> (ast'', uses')
-    with
-      analyzed     := <all(analyze-uses(|ast))> ast;
-      (ast', uses) := <unzip-analyzed> analyzed;
-      if !ast' => _{unresolved@[Unresolved(namespace), x | path]} then
-        if Def(def-uri) := <index-lookup(id |namespace, path, <strip-annos> ast')> ast' then
-          ast'' := ast{def-uri};
-          if key{keyUri} := <nam-get-definition-key> parent ; not(<eq>(key, ast')) then
-            uses' := [Use(def-uri, keyUri) | uses]
-          else
-            uses' := [Use(def-uri, [namespace | path]) | uses]
-          end
+        if <index-is-qualifier> term then
+          [elem|_]    := <index-qualifier-subelements> term;
+          merged      := <index-create-qualifier(|term)> <index-merge-ast(|toplevel)> elem
         else
-          ast'' := ast';
-          uses' := [BadUse([namespace, x]) | uses]
+          merged      := toplevel
         end
-      else
-        ast'' := ast';
-        uses' := uses
       end
  
-  /**
-   * Collects all index data (e.g., types of definitions).
-   */
-  analyze-tree-data:
-    tree -> data
-    where
-      set := <new-iset>;
-      <topdown(analyze-tree-data-part(|set))> tree;
-      data := <iset-elements> set
- 
-  analyze-tree-data-part(|set):
-    tree -> tree
-    where
-      if def-term := <nam-get-definition-key> then
-        _{[namespace | path]} := def-term;
-        if result := <adjust-index-def-data(store-index-data-results(|set) |namespace, path)> tree then
-          <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
-        end
-      end
- 
-  store-index-data-results(|set):
-    t -> <fail>
-    where
-      if is-list then
-        <iset-addlist(|t)> set
-      else
-        <iset-add(|t)> set
-      end
- 
-  /**
-   * Transforms a term C( (a1, [b1]), (a2, [b2, b3]) )
-   * to a tuple (C(a1, a2), [b1, b2, b3]).
-   */
-  unzip-analyzed:
-    appl -> (appl', unzipped-parts)
-    with
-      appl'          := <all(\(a, _) -> a\)> appl;
-      unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
- 
-rules // index API primitives
+rules // Query primitives
  
   /**
-   * Gets all DefData entries that match the kind of data and URI in given definition.
-   *
-   * @param kind Only data of this kind is returned.
+   * Gets a DefData entry that matches the kind of data and given URI, or fail.
    *
    * Example:
    *   <index-get-data(|Type())> Def([Entity(), "Bar"]) => [DefData([Entity(), "Bar"], Type(), TYPE("Bar")), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(DefData(uri, kind, value))
    */
   index-get-data(|kind):
-    <with(?Def(uri) | "Def expected")> -> <index-get-value> DefData(uri, kind, ())
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-value> DefData(uri, kind, ())
       
-    /**
-     * Gets all data entries that match the kind of data and URI in given definition.
-     *
-     * @param kind Only data of this kind is returned.
-     *
-     * Example:
-     *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
-     */
+  /**
+   * Gets all DefData entries that match the kind of data and given URI
+   *
+   * Example:
+   *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
+   *
+   * @param kind Only data of this kind is returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(value)
+   */
   index-get-data-all(|kind):
-    <with(?Def(uri) | "Def expected")> -> <index-get-all-values> DefData(uri, kind, ())
+     <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all-values> DefData(uri, kind, ())
+
+  /**
+   * Gets a Use entry that matches given URI, or fail.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))
+   */
+  index-get-use:
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)
      
   /**
-   * Gets all Use entries that match the URI in given definition.
+   * Gets all Use entries that match the given URI.
    *
    * Example:
-   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"], [Entity(), "M"]), ...]
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Use(uri))
    */
   index-get-uses-all:
-    <with(?Def(uri) | "Def expected")> -> <index-get-all> Use(uri, [])
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <index-get-all> Use(uri)
      
   /**
-   * Gets all Read or ReadWildcard entries that match the given template.
+   * Gets all Read and ReadWildcard entries that match the given URI.
    *
    * Example:
    *   <index-get-reads-all> [Property(), "Bar", "p"] => [Read([Property(), "Bar", "p"]), ...]
+   *
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Read(uri) or ReadWildcard(uri, prefix))
    */
   index-get-reads-all:
-    template -> <conc> (reads, readwildcards')
+    <with(uri := <index-uri> | "Def, key or URI expected")> -> <conc> (reads, readwildcards')
     where
-      uri   := <index-uri> template;
       reads := <index-get-all> Read(uri);
       if !uri => [namespace, prefix | path-parent] then
         readwildcards  := <index-get-all> ReadWildcard([namespace | path-parent], ());
@@ -432,6 +310,8 @@
    *
    * Example:
    *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
    */
   index-get-all:
     template -> <indexlib-get-all> template
@@ -444,10 +324,12 @@
   /**
    * Get all values of index entries that match the given template.
    *
-   * @see index-value
-   *
    * Example:
    *   <index-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
    */
   index-get-all-values:
     template -> <map(index-value)> <index-get-all> template
@@ -457,6 +339,8 @@
    *
    * Example:
    *   <index-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
    */
   index-get:
     template -> <?[<id>|_]> <index-get-all> template
@@ -464,411 +348,287 @@
   /**
    * Get the value of first index entry that matches the given template, or fail.
    *
-   * @see index-value
-   *
    * Example:
    *   <index-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
    */
   index-get-value:
     template -> <index-value> <?[<id>|_]> <index-get-all> template
-   
-  /**
-   * Gets the namespace part of the URI for given term.
-   */
-  index-namespace:
-    x{[namespace | path]} -> <index-namespace-unwrap> namespace
 
   /**
-   * Gets the path part of the URI for given term.
+   * Gets all Def children elements of an URI in a certain namespace.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * Example:
+   *   <index-get-children(|Field())> Def([Entity(), "Baz"]) => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field())> [Entity(), "Baz"] => [Def([Field(), "Bar"]), Def([Field(), "Foo"]), ...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
    */
-  index-path:
-    x{[namespace | path]} -> path'
-    where
-      if !namespace => Unresolved(namespace) then
-        Def(path') := <index-lookup>
-      else
-        path' := path
-      end
-    
+  index-get-children(|namespace) = 
+    index-get-children(\uri -> Def(uri)\, id|namespace)
+  
   /**
-   * Determines if a given AST node is a definition site,
-   * according to the syntax.
+   * Gets all children elements of an URI in a certain namespace using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @type Def(uri) or "name"{uri} or uri@[namespace|path] -> List(Def(uri))
    */
-  index-is-definition =
-    where(nam-get-definition-key)
- 
+  index-get-children(construct-template, name-compare|namespace):
+    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children
+    with
+      template  := <construct-template> [namespace | path];
+      children  := <prim("LANG_index_get_children", template)>;
+      <store-wildcard-read(|namespace, path, "")> children
+
   /**
-   * Returns all children of a Def.
-   *
-   * @param namespace Only child Defs with this namespace are returned.
-   * @param prefix    Only Defs with a name that starts with this
-   *                  string are returned.
+   * Gets all Def children elements of an URI in a certain namespace where the name starts with a prefix.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
    *
+   * Example:
+   *   <index-get-children(|Field(), "fo")> Def([Entity(), "Baz"]) => [Def([Field(), "Foo"]), ...]
+   *   <index-get-children(|Field(), "ba")> "Foo"{[Entity(), "Baz"]} => [Def([Field(), "Bar"]), ...]
+   *   <index-get-children(|Field(), "ze")> [Entity(), "Baz"] => [...]
+   *
+   * @param namespace Only child Def elements in this namespace are returned.
+   * @param prefix    Only child Def elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
+   */
+  index-get-children(|namespace, prefix) = 
+    index-get-children(\uri -> Def(uri)\, index-compare-name-substring(|prefix, namespace)|namespace, prefix)
+  
+  /**
+   * Gets all children elements of an URI in a certain namespace where the name starts with a prefix
+   * using custom templates.
+   * URI can be contained in a Def(uri), key (term{uri} element) or the uri itself.
+   *
+   * @param construct-template  uri -> template. Should create a template to match index entries with, given an URI.
+   * @param name-compare        element -> ?element. Strategy for filtering children elements.
+   * @param namespace           Only child elements in this namespace are returned.
+   * @param prefix              Only child elements where the name starts with this prefix are returned.
+   * @type Def(uri) or "name"{uri} or [namespace|path] -> List(Def(uri))
    */
-  index-get-children(|namespace, prefix):
-    <with(?Def([parent-ns | path]) | "Def expected")> -> children'
+  index-get-children(construct-template, name-compare|namespace, prefix):
+    <with([parent-ns | path] := <index-uri> | "Def, key or URI expected")> -> children'
     with
-      with(not(!namespace => Def(_)) | "index-get-children interface changed");
-      prefix'   := <strip-annos> prefix;
-      template  := Def([namespace | path]);
+      template  := <construct-template> [namespace | path];
       children  := <prim("LANG_index_get_children", template)>;
-      children' := <filter(index-is-name-substring(|prefix'))> children;
-      store     := [namespace, prefix' | path];
-      // Store read in index.
-      if set := <Index-ReadSet> then
-        if 1 := <length> children' then
-          // HACK: This solves the problem of ReadWildcards making too many files re-analyze, but this should
-          // be handled in the index primitives instead.
-          <iset-add(|Read([namespace, prefix' | path]))> set
-        else
-          <iset-add(|ReadWildcard([namespace | path], prefix'))> set
-        end
-      end
+      children' := <filter(name-compare)> children;
+      <store-wildcard-read(|namespace, path, prefix)> children'
 
   /**
    * Gets a set of all files that have a reference to the given index entries.
    *
-   * @param construct-from-uri  Construction strategy that creates a list of reference constructs from all 
-   *                            given entries, such as \uri -> [Read(uri), Use(uri, [])]\
-   *
    * Example:
    *   <index-get-referenced-files(\uri -> [Read(uri), Use(uri, [])]\)> [Def([Entity(), "Bar"]), ...] => 
    *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @param construct-from-uri  uri -> List(elements). Construction strategy that creates a list of reference 
+   *                            constructs from all given entries, such as \uri -> [Read(uri), Use(uri, [])]\
+   * @type List(elem) -> List((file, subfile))
    */
   index-get-referenced-files(construct-from-uri):
     entries -> files
     where
       uris        := <filter(index-uri)> entries;
       referenced  := <concat> <filter(construct-from-uri)> uris;
-      files       := <make-set> <mapconcat(index-get-files-of)> referenced
+      files       := <iset-elements> <iset-addlist(|<mapconcat(index-get-files-of)> referenced)> <new-iset>
  
   /**
    * Convenience function for finding files with Read and Use dependencies to the given definitions.
    *
-   * @see index-get-referenced-files(construct-from-uri)
-   * @see index-file-dependent-construct
-   *
    * Example:
    *   <index-get-dependent-files> [Def([Entity(), "Bar"]), ...] => [("fullpath/otherfile.ext", "subfile"), ...]
+   *
+   * @type List(elem) -> List((file, subfile))
+   *
+   * @see index-get-referenced-files(construct-from-uri)
+   * @see index-file-dependent-construct
    */
   index-get-dependent-files = 
     index-get-referenced-files(index-file-dependent-construct)
      
-rules // index lookup rules (take into account adjust-index-lookup)
+rules // Index lookup rules (that take into account adjust-index-lookup)
  
   /**
-   * Given an annotated AST node, resolves it, returning its Def.
+   * Given an annotated AST node, resolves it, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @type "name"{uri} -> ?Def(uri')
    */
   index-lookup:
-    x{[namespace | path]} -> <index-lookup(id |<index-namespace-unwrap> namespace, path, <strip-annos> x)>
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
  
   /**
-   * Given an annotated AST node, resolves it, returning all its Defs.
+   * Given an annotated AST node, resolves it, returning all its definitions.
+   * Uses precise matching for names.
+   * 
+   * @type "name"{uri} -> List(Def(uri'))
    */
   index-lookup-all:
-    x{[namespace | path]} -> <index-lookup-all(id |<index-namespace-unwrap> namespace, path, <strip-annos> x)>
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-equal(|name)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
  
   /**
-   * Given an annotated AST node, resolves it, returning all its Defs.
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
    *
-   * @param prefix    Only Defs with a name that starts with this
-   *                  string are returned.
-   *
-   * @internal
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
    */
-  index-lookup(is-adjust-lookup-enabled |namespace, path, prefix):
-    x -> def
+  index-lookup-all(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-name-substring(|prefix)|ns, path, prefix)> x
     where
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
-      if <?StopLookup()> candidates then
-        fail
-      else
-        def        := <index-select(|namespace, path, x)>
-      <+
-          // TODO: optimize: try not to call do-adjust-index-lookup from here
-          [_ | path'] := path;
-          def         := <index-lookup(is-adjust-lookup-enabled |namespace, path', prefix)> x
-      end
-
+      ns := <index-namespace-unwrap> namespace
+      
   /**
-   * Given an annotated AST node, resolves it, returning all its Defs.
-   *
-   * @param prefix    Only Defs with a name that starts with this
-   *                  string are returned.
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names.
    *
-   * @internal
+   * @type "name"{uri} -> List(Def(uri'))
    */
-  index-lookup-all(is-adjust-lookup-enabled |namespace, path, prefix):
-    x -> defs'
-    where
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
-      defs       := <index-select-all(|namespace, path, x)>;
-      // TODO: optimize: try not to call do-adjust-index-lookup from here
-      if [_ | path'] := path then
-        defs2 := <index-lookup-all(is-adjust-lookup-enabled |namespace, path', prefix)> x;
-        defs' := <conc> (defs, defs2)
-      else
-        defs' := defs
-      end
- 
+  index-lookup-all-scoped:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+      
   /**
-   * Given an annotated AST node, returns the outermost Def with a corresponding URI.
+   * Given an annotated AST node, resolves it in only the parent scope of the given node, returning all its definitions.
+   * Uses precise matching for names. Imports are not considered.
    *
-   * @param prefix    Only Defs with a name that starts with this
-   *                  string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
    */
-  index-lookup-outermost(|prefix):
-    x{[namespace | path]} -> <index-lookup-outermost(id |<index-namespace-unwrap> namespace, path, prefix)>
- 
+  index-lookup-all-scoped-noimports:
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(fail, id, index-compare-name-equal(|name)|ns, parent-path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x;
+      (<?[_|<id>]> path <+ !path) => parent-path
+  
   /**
-   * Given an annotated AST node, returns the outermost Def with a corresponding URI.
+   * Given an annotated AST node and a prefix, looks for all definitions with given prefix in only the parent scope of 
+   * the given node.
+   * Uses substring matching for names.
    *
-   * @param prefix    Only Defs with a name that starts with this
-   *                  string are returned.
-   *
-   * @internal
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
    */
-  index-lookup-outermost(is-adjust-lookup-enabled |namespace, path, prefix):
-    x -> def
+  index-lookup-all-scoped(|prefix):
+    x{[namespace|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix)|ns, parent-path, prefix)> x
     where
-      // TODO: optimize: just like index-lookup
-      [_ | path'] := path;
-      def         := <index-lookup-outermost(is-adjust-lookup-enabled |namespace, path', prefix)> x
-    <+
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
-      def        := <index-select(|namespace, path, x)>
- 
+      ns := <index-namespace-unwrap> namespace;
+      (<?[_|<id>]> path <+ !path) => parent-path
+
   /**
-   * Given an annotated AST node, returns a Def that has the same parent URI.
+   * Given an annotated AST node and a namespace, returns all definitions inside given node with given namespace.
+   * Does not match names, all names are allowed.
    *
-   * @param prefix    Only Defs with a name that starts with this
-   *                  string are returned.
+   * @param namespace Only definitions with this namespace are returned.
+   * @type "name"{uri} -> List(Def(uri'))
    */
-  index-lookup-one-level(|prefix):
-    x{[namespace | path]} -> <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
- 
+  index-lookup-children(|namespace) = 
+    index-lookup-children(|namespace, "")
+      
   /**
-   * Given an annotated AST node, resolves it, and
-   * returns all possibly matching Defs with a common ancestor URI. 
-   *
-   * @param namespace Only Defs with this namespace are returned.
-   * @param prefix    Indicates that only Defs with a name that starts with this
-   *                  string are demanded.
-   */
-  index-lookup-one-level(is-adjusted-lookup-enabled |namespace, path, prefix):
-    x{_} -> defs
-    with
-      is-adjusted-lookup-enabled;
-      do-adjust-index-lookup(|namespace, path, x, prefix);
-      if ?StopLookup() then
-        defs := StopLookup()
-      else
-        mapconcat(\d at Def(p) -> [d]\
-          <+ \[namespace' | path'] -> <index-lookup-one-level(fail |namespace', path', prefix)> x\
-          <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
-        ?defs
-      end
-    <+
-      defs := <index-get-children(|namespace, prefix)> Def([namespace | path])
+   * Given an annotated AST node, a namespace and prefix, returns all definitions inside given node with given 
+   * namespace and prefix.
+   * Uses substring matching for names.
+   *
+   * @param namespace Only definitions with this namespace are returned.
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */    
+  index-lookup-children(|namespace, prefix):
+    x{[_|path]} -> <index-lookup-all-scoped-internal(index-compare-name-substring(|prefix, namespace)|namespace, path, prefix)> x
       
+rules // Index utilities
+  
   /**
-   * Given an annotated AST node, resolves it, and
-   * returns all possibly matching Defs with a common ancestor URI. 
+   * Gets the namespace part of the URI for given key (term{uri} element).
    *
-   * @param namespace Only Defs with this namespace are returned.
-   * @param prefix    Indicates that only Defs with a name that starts with this
-   *                  string are demanded.
+   * Example:
+   *   <index-uri-namespace> "Bar"{[Entity(), "Bar", "Baz"]} => Entity()
+   *
+   * @type "name"{uri@[namespace|path]} -> namespace
    */
-  index-lookup-all-levels(|prefix):
-    x{[namespace | path]} -> <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, prefix)>
- 
+  index-uri-namespace:
+    x{[namespace|path]} -> <index-namespace-unwrap> namespace
+
   /**
-   * Given an annotated AST node, resolves it, and
-   * returns all possibly matching Defs with a common ancestor URI. 
+   * Gets the path part of the URI for given key (term{uri} element). Resolves it if unresolved.
    *
-   * @param prefix    Indicates that only Defs with a name that starts with this
-   *                  string are demanded.
+   * Example:
+   *   <index-uri-path> "Bar"{[Entity(), "Bar", "Baz"]} => ["Bar", "Baz"]
+   *
+   * @type "name"{uri@[namespace|path]} -> path'
    */
-  index-lookup-all-levels(is-adjust-lookup-enabled |namespace, path, prefix):
-    x{_} -> all-defs
-    with
-      is-adjust-lookup-enabled;
-      do-adjust-index-lookup(|namespace, path, x, prefix);
-      if ?StopLookup() then
-        all-defs := []
-      else
-          mapconcat(\d at Def(p) -> [d]\
-              <+ \[namespace' | path'] -> <index-lookup-all-levels(fail |namespace', path', prefix)> x\
-              <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
-          ?all-defs
-      end
-    <+
-      one-level := <index-get-children(|namespace, prefix)> Def([namespace | path]);
-      if [_ | path'] := path then
-        all-defs := <concat> [one-level, <index-lookup-all-levels(fail |namespace, path', prefix)> x]
+  index-uri-path:
+    x{[namespace|path]} -> path'
+    where
+      if !namespace => Unresolved(namespace) then
+        Def(path') := <index-lookup>
       else
-        all-defs := one-level
+        path' := path
       end
- 
-  /** @Deprecated */
-  index-lookup-contained(|namespace, prefix) =
-    obsolete(!"index-lookup-contained; use index-lookup-children");
-    index-lookup-children(|namespace, prefix)
-   
-  /** @Deprecated */
-  index-lookup-contained-all-levels(|namespace, name) =
-    obsolete(!"index-lookup-contained-all-levels; use index-lookup-descendants");
-    index-lookup-descendants(|namespace, name)
- 
+      
   /**
-   * Given an annotated AST node, resolves it,
-   * and returns all child Defs of its definition.
+   * Gets the name part of the URI for given key (term{uri} element).
    *
-   * @param namespace Only child Defs with this namespace are returned.
-   * @param prefix    Only child Defs with a name that starts with this
-   *                  string are returned.
-   */
-  index-lookup-children(|namespace, prefix): // TODO: how does this compare w/ index-lookup-one-level?
-    x{[ns | path]} -> defs
-    with
-      if !ns => Unresolved(_) then
-        Def([_ | def-path]) := <index-lookup>;
-        defs := <index-lookup-one-level(id|namespace, def-path, prefix)> x
-      else
-        defs := <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
-      end
-    <+
-      defs := []
- 
+   * Example:
+   *   <index-uri-name> "Bar"{[Entity(), "Bar", "Baz"] => "Bar"
+   *
+   * @type "name"{uri@[namespace|[name|restPath]]} -> name
+   */ 
+  index-uri-name:
+    x{[_|[name|_]]} -> name
+    
   /**
-   * Given an annotated AST node, resolves it,
-   * and returns all descendant Defs of its definition.
+   * Determines if a given AST node is a definition site, according to the syntax.
+   *
+   * FIXME: Also succeeds on use sites.
    *
-   * @param namespace Only child Defs with this namespace are returned.
-   * @param prefix    Only child Defs with a name that starts with this
-   *                  string are returned.
+   * @type def -> ?def
    */
-  index-lookup-descendants(|namespace, name):
-    x{[ns | path]} -> defs
-    with
-      if !ns => Unresolved(_) then
-        Def([_ | def-path]) := <index-lookup>;
-        defs := <index-lookup-all-levels(id|namespace, def-path, name)> x
-      else
-        defs := <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, name)>
-      end
-    <+
-      defs := []
-       
-/** @internal */
-rules // URI and value projections
-       
-  index-uri-impl:
-    Def(uri) -> uri
-    
-  index-uri-impl:
-    Use(uri, _) -> uri
-    
-  index-uri-impl:
-    Read(uri) -> uri
-    
-  index-uri-impl:
-    x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
- 
-  // TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
-  index-uri-impl:
-    ReadWildcard(uri, _) -> uri
-
-  index-value-impl:
-    Def(value) -> value
-
-  index-value-impl:
-    Use(_, value) -> value
-
-  index-value-impl:
-    Read(value) -> value
+  index-is-definition =
+    where(nam-get-definition-key)
     
-  index-value-impl:
-    ReadWildcard(_, value) -> value
-       
-/** @internal */
-rules // Internal helpers
-       
-  index-origin-language = (origin-term <+ id); prim("SSL_EXT_origin_language", <id>)
-       
-  // Tests if the current file is just a testing language input
-  is-test-file = string-ends-with(|".spt")
-  is-test-input(|language):
-    (ast, path) -> (ast, path)
-    where
-      <is-test-file> path;
-      not(!language => "Spoofax-Testing")
-       
-  index-is-name-substring(|name):
-    template -> <id>
-    with
-      [_, uri-name | _] := <index-uri>
+  /**
+   * Checks if given keys (term{uri} elements) are equal. Discards unresolved URI's.
+   *
+   * Example:
+   *   <index-key-eq> ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]}) => 
+   *     ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]})
+   *   <index-key-eq> ("Foo"{[Entity(), "Foo"]}, "Bar"{[Entity(), "Bar"]}) => fail
+   *
+   * @type (k1, k2) -> ?(k1, k2)
+   */      
+  index-key-eq:
+    (k1, k2) -> <id>
     where
-      <is-substring(!name)> uri-name
-      
-  index-readwildcard-substring(|prefix):
-    ReadWildcard(_, name) -> <id>
-    where <is-substring(!prefix)> name
+      <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)
       
-  index-is-unresolved(|x, uri) = Index-UnresolvedSet; (iset-contains(|(x, uri)) <+ fail)
-  index-add-unresolved(|x, uri) = (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
-  
-  index-file-dependent-construct: 
-    uri -> <conc> (uses, reads)
+  /**
+   * Given a list of file pairs, returns the list of real files.
+   *
+   * @type List((file, subfile)) -> List(file)
+   */    
+  index-filepairs-to-files:
+    filePairs -> files
     with
-        uses := <index-get-uses-all> Def(uri);
-        reads := <index-get-reads-all> Def(uri)
-    
-  index-file-dependency-filter = ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _)
- 
-  do-adjust-index-lookup(|namespace, path, use, prefix) =
-    // UNDONE: try(origin-term);
-    repeat-until(
-      prim("SSL_EXT_get_parent", <id>)
-    , adjust-index-lookup(origin-equal(|use) |namespace, path, prefix) 
-    )
- 
-  index-select(|namespace, path, use) =
-    getfirst(
-      where(
-        ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
-      )
-    )
- 
-  index-select-all(|namespace, path, use) =
-    filter(
-      where(
-        ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
-      )
-    )
- 
-  do-adjusted-index-path(|namespace, path, def) =
-    adjust-index-path(origin-equal(|def) |namespace, path)
-  <+
-    ![def | path]
- 
-  index-eq(|namespace, expected) =
-    where(
-      ?Def([_, name | _]);
-      <SRTS-EXT-eq-ignore-annos(|expected)> name
-    )
-  
-  external SRTS-EXT-eq-ignore-annos(|t)
- 
-rules // interface for generated code
- 
-  nam-get-def(|namespace):
-    x -> Def([namespace, x | <IndexPath <+ ![]> namespace])
-   
-  nam-annotate-use(|namespace):
-    t -> t{[Unresolved(namespace), t | <IndexPath <+ ![]> namespace]}
-   
-  nam-get-scope-types = fail
-  nam-get-definition = fail
-  nam-get-definition-key = fail
-  nam-annotate-names(|def-path) = fail
+      files := <make-set> <map(Fst; string-replace(|<conc-strings> (<project-path>, "/"), ""))> filePairs

Modified: spoofax-contrib/jasmin-spoofax/trunk/lib/compilation-library.generated.str
==============================================================================
--- spoofax-contrib/jasmin-spoofax/trunk/lib/compilation-library.generated.str	Wed Nov 21 14:58:54 2012	(r25734)
+++ spoofax-contrib/jasmin-spoofax/trunk/lib/compilation-library.generated.str	Tue Nov 27 00:51:35 2012	(r25735)
@@ -5,139 +5,240 @@
   lib/editor-common.generated
   lib/index-library.generated
   lib/analysis-library.generated
+  lib/analysis-library-internal.generated
   
 rules // Extension points
+  
+  /**
+   * Extension point. Override this rule to define a desugaring that is applied to AST before analyzing and compiling.
+   *
+   * Extension example:
+   *   index-desugar-ast:
+   *     ast -> <desugar> ast
+   *
+   * @type ast -> ast'
+   */
+  index-desugar-ast = fail
     
-  // Should compile given analysed ast.
-  index-compile-ast(|file, subfile, project-path) = fail
+  /**
+   * Extension point. Override this rule to define a compilation or transformation to some other target language. The
+   * index manages which files have to be compiled and calls this rule for each AST that has changed since the last
+   * compilation.
+   *
+   * Extensions example:
+   *   index-compile-ast(|file, subfile):
+   *     ast -> None()
+   *     with
+   *       java := <to-java> ast;
+   *       full-path := <dirname> file;
+   *       filename := <guarantee-extension(|"java")> <base-filename> file;
+   *       writePath := $[[full-path]/java/];
+   *       writeFile :=  $[[writePath][filename]];
+   *       try(<mkdir> writePath);
+   *       <fclose> <fputs> (java, <fopen> (writeFile, "w"))
+   *
+   * @param file    The file that must be compiled.
+   * @param subfile The subfile that must be compiled ("" if there is no subfile).
+   * @type ast -> None()
+   */
+  index-compile-ast(|file, subfile) = fail
+
+  /**
+   * Extension point. 
+   */
+  index-is-partial-ast = fail
+
+  /**
+   * Extension point. 
+   */
+  index-combine-asts = fail
   
 rules // Compilation
   
+  /**
+   * Schedules compilation in the background of all files that have changed since the last compilation.
+   *
+   * @type x -> x
+   */
   index-schedule-compilation:
-    <with(?(_, _, _) | "(ast, path, project-path) tuple expected")> -> None()
+    _ -> None()
     with
-      queue-strategy(|"index-compilation", "Compiling!")
-    
-  index-compilation:
-    (ast, path, project-path) -> <index-compilation(|path, project-path)> ast
+      queue-strategy(|"index-compilation", "Compiling files")
   
-  index-compilation(|path, project-path):
-    ast -> None()
+  /** @internal */
+  index-compilation:
+    language -> None()
     with
       // Init
-      full-path := $[[project-path]/[path]];
-      language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], full-path)
+      project-path := <project-path>;
+      index-setup(|language, [project-path], ".")
     with
-      // Determine the files to compile by looking at changed files.
-      diffs         := <analyze-get-diffs>;
+      // Determine the files to compile by looking at changed files
+      diffs         := <analyze-get-compilediffs>;
       files         := <map(index-compilation-restore-read-file)> diffs;
       filteredFiles := <make-set> <remove-all(index-compilation-filter-file)> files;
+      (completeFiles, partialFiles) := <index-split-partial-files> filteredFiles;
       
-      // Clean compile time reads.
-      <filter(index-compilation-clean-reads)> filteredFiles;
+      // Clean compile time reads
+      <filter(index-compilation-clean-reads)> completeFiles;
+      <filter(index-compilation-clean-reads)> partialFiles;
       
-      <set-total-work-units> <length> filteredFiles;
+      // Set total work units to number of files to compile for visual indication
+      <set-total-work-units> <add> (<length> completeFiles, <length> partialFiles);
       
       // Compile the files
-      <filter(index-compilation-file(|language, project-path); complete-work-unit)> filteredFiles;
+      <filter(index-compilation-file; complete-work-unit)> completeFiles;
+      <filter(index-compilation-partial-file; complete-work-unit)> partialFiles
       
-      // Clean diffs
-      analyze-clean-diff
-
-  index-compilation-file(|language, project-path):
-    (file, subfile) -> None()
+  /** @internal */    
+  index-split-partial-files:
+    files -> (completeFiles, <make-set> splitFiles)
     with
-      // Parse and analyze ast.
-      ast                                 := <parse-file> file;
-      AnalysedResult(ast', _, _, _, _, _) := <analyze-top-internal(|Compile(), language, file)> (ast, file, project-path)
+      (completeFiles, splitFiles) := <partition(not(index-file-is-partial), index-file-is-partial)> files
+
+  /** @internal */
+  index-compilation-file:
+    (path, subfile) -> None()
+    with
+    	asts := <index-get-all-values> AST(subfile, ());
+      <map(index-compilation-ast(|path, subfile))> asts
+      
+  /** @internal */    
+  index-compilation-partial-file:
+    (path, subfile) -> None()
+    with
+      asts := <index-get-all-values> AST(subfile, ());
+      if 1 := <length> asts then
+      	ast := <?[<id>|_]> asts
+    	else
+    		ast := <try(index-combine-asts)> asts
+  		end;
+      <index-compilation-ast(|path, subfile)> ast
+      
+  /** @internal */
+  index-compilation-ast(|path, subfile):
+    ast -> None()
     with
       {| Index-ReadSet:
         readSet := <new-iset>;
         rules(Index-ReadSet: _ -> readSet);
         
         // Compile file
-        <index-compile-ast(|file, subfile, project-path)> ast';
+        <try(index-compile-ast(|path, subfile))> ast;
         
         // Store compile-time reads.
         reads := <iset-elements> readSet;
-        <index-add-all(|<index-compilation-file-tuple> (file, subfile))> reads
-      |}
-
-  index-compilation-filter-file = 
-    ?(<id>, _); (is-test-file <+ index-is-fake-file <+ not(file-exists))
-
-rules // Compile time reads
-
-  index-compilation-restore-read-file:
-    (file, subfile) -> (file', subfile)
-    with
-      file' := <string-replace(|<index-compilation-read-path>, "")> file
-      
-  index-compilation-clean-reads = 
-    ?(file, subfile); index-compilation-file-tuple; index-clear-file
-      
-  index-compilation-file-tuple:
-    (file, subfile) -> ($[[<index-compilation-read-path>]/[file]], subfile)
-    
-  index-compilation-read-path =
-    !"/.internal/reads/compile"
-    
-signature constructors // On save handling
+        <index-add-all(|<index-compilation-file-tuple> (path, subfile))> reads
+      |} 
 
-  CommitAndCompile : List(UriPart) -> Summary
-  CommitAndCompile : Namespace
+  /** @internal */
+  index-compilation-filter-file:
+    (file, subfile) -> (file, subfile)
+    where
+      <is-test-file <+ index-is-fake-file <+ not(file-exists)> file
     
 rules // On save handling
   
+  /**
+   * Commits the index to disk and schedules compilation. Use trigger-commit-and-compile instead of this strategy.
+   *
+   * @see trigger-commit-and-compile
+   *
+   * @internal
+   */
   commit-and-compile:
-    (_, path, project-path) -> <id>
+    language -> None()
     with
       index-commit
     with
       index-schedule-compilation
-  
-  index-on-save:
-    (ast, _, _, path, project-path) -> None()
+
+  /**
+   * Triggers commit and compilation, requires target language as current term.
+   * Compilation can be delayed by using disable-commit-and-compile. Compilation will be triggered when 
+   * enable-commit-and-compile is called.
+   *
+   * @type language -> language
+   *
+   * @see enable-commit-and-compile
+   * @see disable-commit-and-compile
+   */
+  trigger-commit-and-compile:
+    language -> <id>
     with
-      if 0 := <analysis-count> then
-        disable-commit-and-compile;
-        <commit-and-compile> (ast, path, project-path)
+      if not(index-is-global-enabled(|"delay-compile")) then
+        commit-and-compile
       else
-        enable-commit-and-compile
+        index-enable-global(|"trigger-compile")
       end
-      
-  post-analyze-top(|phase, language, full-path):
-    _ -> <id>
+  
+  /**
+   * Delays commit and compilation until enable-commit-and-compile is called.
+   *
+   * @type x -> x
+   *
+   * @see enable-commit-and-compile
+   */
+  disable-commit-and-compile = 
+    index-enable-global(|"delay-compile")
+  
+  /**
+   * Cancels the commit and compilation delay, requires target language as current term. 
+   * If commit and compilation was triggered during the delay, it is triggered now.
+   *
+   * @type language -> language
+   *
+   * @see disable-commit-and-compile
+   */
+  enable-commit-and-compile:
+    language -> <id>
     with
-      if Editor() := phase then 
-          scheduledAnalyses := <analysis-count>
+      if index-is-global-enabled(|"trigger-compile") then
+        commit-and-compile
+      end;
+      index-disable-global(|"delay-compile")
+      
+/** @internal */
+rules // Compile time reads
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    (file, subfile) -> (file', subfile)
+    where
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
       else
-        scheduledAnalyses := -1
+        file' := file
       end
-    with
-      if 0 := scheduledAnalyses; check-commit-and-compile then
-        disable-commit-and-compile;
-        commit-and-compile
+
+  /** @internal */
+  index-compilation-restore-read-file:
+    file -> file'
+    where
+      not(<is-tuple> file);
+      if removedPath := <string-replace(|<index-compilation-read-path>, "")> file then
+        file' := removedPath
+      else
+        file' := file
       end
       
-  analysis-count = 
-    prim("SSL_EXT_queue_analysis_count")
-      
-  enable-commit-and-compile:
-    _ -> <id>
-    with
-      <index-add-all(|<index-commit-and-compile-path>)> [CommitAndCompile([CommitAndCompile(), ".internal"])]
-      
-  disable-commit-and-compile:
-    _ -> <id>
-    with
-      <index-clear-file> <index-commit-and-compile-path>
-      
-  check-commit-and-compile:
-    _ -> <id>
-    where
-        <index-get> CommitAndCompile([CommitAndCompile(), ".internal"])
+  /** @internal */
+  index-compilation-clean-reads = 
+    ?(file, subfile); index-compilation-file-tuple; index-clear-file
       
-  index-commit-and-compile-path =
-    !"/.internal/commit-and-compile"
+  /** @internal */
+  index-compilation-file-tuple:
+    (file, subfile) -> ($[[<index-compilation-read-path>]/[file]], subfile)
+    
+  /** @internal */
+  index-compilation-read-path =
+    !"/.internal/reads/compile"
+    
+/** @internal */
+rules // Utility
+
+  /** @internal */
+  index-file-is-partial:
+  	file -> file
+  	where 
+      Snd; index-uri; index-is-partial-ast

Modified: spoofax-contrib/jasmin-spoofax/trunk/lib/editor-common.generated.str
==============================================================================
--- spoofax-contrib/jasmin-spoofax/trunk/lib/editor-common.generated.str	Wed Nov 21 14:58:54 2012	(r25734)
+++ spoofax-contrib/jasmin-spoofax/trunk/lib/editor-common.generated.str	Tue Nov 27 00:51:35 2012	(r25735)
@@ -32,6 +32,8 @@
     ast2abox(|[<import-term(include/JasminXT.generated.pp.af)>,
                <import-term(include/JasminXT.pp.af)>]);
     box2text-string(|100)
+    
+  language = !"JasminXT"
 
 strategies
   
@@ -226,6 +228,9 @@
   Entity   : ID * List(Property) -> Entity
   Property : ID * Type           -> Property
   Type     : ID                  -> Type
+  
+  Type     : Namespace
+  Property : Namespace
 
 strategies
   

Modified: spoofax-contrib/jasmin-spoofax/trunk/lib/index-library.generated.str
==============================================================================
--- spoofax-contrib/jasmin-spoofax/trunk/lib/index-library.generated.str	Wed Nov 21 14:58:54 2012	(r25734)
+++ spoofax-contrib/jasmin-spoofax/trunk/lib/index-library.generated.str	Tue Nov 27 00:51:35 2012	(r25735)
@@ -22,18 +22,70 @@
   
   FileEntries : Term * Term -> Term
   
+  // Globals
+  Global : Namespace
+  Global : List(UriPart) -> Summary
+  Global : List(UriPart) * List(Summary) -> Summary
+  
+  // None namespace
+  None   : Namespace
+  
 rules // Index management
    
+  /**
+   * Sets up the index library for given language and project paths.
+   * Must be called once before doing anything with the library.
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   *
+   * @obsolete
+   * @type x -> x
+   */
   index-setup(|language, project-paths) =
     obsolete(!"index-setup(|language, project-paths); use index-setup(|language, project-paths, current-file)");
     index-setup(|language, project-paths, ".")
     
   /**
-   * Sets up the index library for given language and project paths.
+   * Sets up the index library for given language, project paths and current file.
    * Must be called once before doing anything with the library.
+   *
+   * Example:
+   *   <index-setup(|"MiniJava", [<project-path>], "test/test.mjv")
+   *
+   * @param language      The language to set the index up for.
+   * @param project-path  The project paths that contain all source files to analyse and compile.
+   * @param current-file  The current file that is being analysed. Can be retrieved later using index-get-current-file.
+   *                      Can also be changed later using index-set-current-file.
+   * @type x -> x
    */
   index-setup(|language, project-paths, current-file) =
     prim("LANG_index_setup", language, project-paths, current-file)
+    
+  /**
+   * Sets the current file the index (analysis) is operating on to the given file.
+   *
+   * Example:
+   *   <index-set-current-file> "fullpath/file.ext"
+   *   <index-set-current-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
+   */
+  index-set-current-file = 
+    prim("LANG_index_set_current_file", <id>)
+
+  /**
+   * Adds given element to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-add(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   *
+   * @param file  The file (and subfile) to add the element to.
+   * @type x -> ?x
+   */
+  index-add(|file) =
+    prim("LANG_index_add", <id>, file)
 
   /**
    * Adds all given elements to the index with given file path and optionally subfile.
@@ -41,9 +93,25 @@
    * Example:
    *   <index-add-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
    *   <index-add-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to add the elements to.
+   * @type List(x) -> ?List(x)
    */
   index-add-all(|file) =
-    list-loop(with(prim("LANG_index_add", <id>, file)))
+    list-loop(with(index-add(|file)))
+    
+  /**
+   * Removes given element from the index that is contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove(|"fullpath/file.ext")> Def([Entity(), "Bar"])
+   *   <index-remove(|("fullpath/file.ext", "subfile"))> Def([Entity(), "Bar"])
+   * 
+   * @param file  The file (and subfile) to remove the element from.
+   * @type x -> ?x
+   */
+  index-remove(|file) =
+    prim("LANG_index_remove", <id>, file)
     
   /**
    * Removes all given elements from the index that are contained in given file path and optionally subfile.
@@ -51,9 +119,12 @@
    * Example:
    *   <index-remove-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
    *   <index-remove-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   *
+   * @param file  The file (and subfile) to remove the elements from.
+   * @type List(x) -> ?List(x)
    */
-  index-remove-all(|files) =
-    list-loop(with(prim("LANG_index_remove", <id>, files)))
+  index-remove-all(|file) =
+    list-loop(with(index-remove(|file)))
     
   /**
    * Removes all elements from the index that are contained in given file path and optionally subfile.
@@ -61,38 +132,88 @@
    * Example:
    *   <index-clear-file> "fullpath/file.ext"
    *   <index-clear-file> ("fullpath/file.ext", "subfile")
+   *
+   * @type x -> ?x
    */
   index-clear-file = 
     prim("LANG_index_clear_file", <id>)
     
   /**
    * Clears all elements from the index.
+   *
+   * @type x -> x
    */
   index-clear = 
     prim("LANG_index_clear_all")
+    
+  /**
+   * Clears all elements from the index and re-analyzes all files in the project.
+   *
+   * @type x -> x
+   */
+  index-reload = 
+    prim("LANG_index_reload")
    
   /**
    * Commits index to a file on disk.
+   *
+   * @type x -> x
    */
   index-commit = 
-    if not(index-timestamp-get-updates(|"LANG_index_commit") => []) then
-      prim("LANG_index_commit");
-      index-timestamp-set-updated(|"LANG_index_commit")
-    end
+    prim("LANG_index_commit")
+
+  /**
+   * Starts a transaction on the index for the current file. Additions to the index are not visible to other files 
+   * until index-end-transaction is called. Operations on the index are only thread safe during a transaction.
+   *
+   * @type x -> x
+   */
+  index-start-transaction = 
+    prim("LANG_index_start_transaction")
   
-rules // Index API
+  /**
+   * Ends a transaction on the index for the current file. Additions made to the index during the transaction are
+   * added to the global index visible for other files. Operations on the index are not thread safe any more after 
+   * this call.
+   *
+   * @type x -> x
+   */
+  index-end-transaction = 
+    prim("LANG_index_end_transaction")
+  
+  /**
+   * Starts a transaction, applies given strategy and ends the transaction. All index operations used from the given
+   * strategy are thread safe.
+   * 
+   * @param s The strategy to apply. Transaction will still properly end if strategy fails.
+   * @type x -> x'
+   *
+   * @see index-start-transaction
+   * @see index-end-transaction
+   */
+  index-transaction(s) = 
+    prim("LANG_index_start_transaction"); try(s); prim("LANG_index_end_transaction")
+  
+rules // Index querying
   
   /**
    * Gets the file that the analysis is currently in.
+   *
+   * @type x -> (file, subfile)
+   *
+   * @see index-setup(|language, project-paths, current-file)
+   * @see index-set-current-file
    */
   index-get-current-file =
     prim("LANG_index_get_current_file")
   
   /**
-   * Gets a list of all files and subfile for current project.
+   * Gets a list of all files and subfiles for current project.
    *
    * Example:
-   *   <index-get-all-files> => ["fullpath/file.ext", ...]
+   *   <index-get-all-files> => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type x -> List((file, subfile))
    */   
   index-get-all-files =
     prim("LANG_index_all_files")
@@ -103,6 +224,8 @@
    * Examples:
    *   <index-get-all-in-file> "fullpath/file.ext" => [Def([Entity(), "Bar"]), ...]
    *   <index-get-all-in-file> ("fullpath/file.ext", "subfile") => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type file or (file, subfile) -> List(elem)
    */  
   index-get-all-in-file:
     filepath -> entries
@@ -110,10 +233,14 @@
       entries := <prim("LANG_index_get_all_in_file", filepath)>
    
   /**
-   * Gets all index entries for the given file path and optionally subfile.
+   * Gets index entries in some namespace for the given file path and optionally subfile.
    *
    * Example:
    *   <index-get-all-in-file(|Import())> "fullpath/file.ext" => [Def([Import(), "Bar"]), ...]
+   *   <index-get-all-in-file(|Import())> ("fullpath/file.ext", "subfile") => [Def([Import(), "Bar"]), ...]
+   *
+   * @param namespace Only index entries from this namespace are retrieved.
+   * @type file or (file, subfile) -> List(elem)
    */  
   index-get-all-in-file(|namespace):
     filepath -> entries
@@ -123,29 +250,35 @@
       filter(where(index-uri => [namespace | _]))
     
   /**
+   * Gets the revision of a file and optionally subfile.
+   *
+   * Example:
+   *   <index-get-file-revision> "fullpath/file.ext" => 13
+   *   <index-get-file-revision> ("fullpath/file.ext", "subfile") => 37
+   *
+   * @type file or (file, subfile) -> Int
+   */
+  index-get-file-revision:
+    file -> <prim("LANG_index_get_file_revision", file)>
+    
+  /**
    * Gets the containing files and subfiles of index entry with given template.
    *
    * Example:
    *   <index-get-files-of> Def([Entity(), "Bar"]) => [("fullpath/file.ext", "subfile"), ...]
+   *
+   * @type template -> List((file, subfile))
    */  
   index-get-files-of:
     template -> <prim("LANG_index_get_files_of", template)>
     
   /**
-   * Gets all index entries (of every file for current project).
-   *
-   * Example:
-   *   <indexlib-get-all-elements> => [Def([Entity(), "Bar"]), ...]
-   */
-  indexlib-get-all-elements =
-    // TODO: is there a use case for this? doing this is *expensive*
-    <mapconcat(index-get-all-in-file)> <index-get-all-files>
-    
-  /**
    * Get all index entries that match the given template.
    *
    * Example:
    *   <indexlib-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *
+   * @type template -> List(elem)
    */
   indexlib-get-all:
     template -> <prim("LANG_index_get", template)>
@@ -153,10 +286,12 @@
   /**
    * Get all values of index entries that match the given template.
    *
-   * @see index-value
-   *
    * Example:
    *   <indexlib-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   *
+   * @type template -> List(value)
+   *
+   * @see index-value
    */
   indexlib-get-all-values:
     template -> <map(index-value)> <indexlib-get-all> template
@@ -166,6 +301,8 @@
    *
    * Example:
    *   <indexlib-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *
+   * @type template -> ?elem
    */
   indexlib-get:
     template -> <?[<id>|_]> <indexlib-get-all> template
@@ -173,43 +310,265 @@
   /**
    * Get the value of first index entry that matches the given template, or fail.
    *
-   * @see index-value
-   *
    * Example:
    *   <indexlib-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   *
+   * @type template -> ?value
+   *
+   * @see index-value
    */
   indexlib-get-value:
     template -> <index-value> <?[<id>|_]> <indexlib-get-all> template
- 
+    
+rules // Index globals
+    
   /**
-   * Updates the "last updated" timestamp for the given service name.
+   * Gets the 'fake' path where globals are stored in the index.
    *
-   * @see index-get-changes-since-timestamp(|service)
+   * @internal
    */
-  index-timestamp-set-updated(|service) =
-    file := $[/.internal/timestamps/[service]];
-    <index-clear-file> file;
-    prim("LANG_index_add", DefData([Timestamp(), "timestamps", ".internal"], Timestamp(), []), file)
-   
+  index-globals-path = 
+    !"/.internal/globals"
+    
   /**
-   * Gets all files with changes since the last time stamp update for the given service name.
+   * Gets the URI where globals are stored in the index for given name or names.
+   *
+   * @internal
+   * @type name or List(name) -> uri
    */
-  index-timestamp-get-updates(|service):
-    _ -> files'
+  index-globals-uri:
+    names -> uri
     with
-      timestampName := $[/.internal/timestamps/[service]];
-      files := <prim("LANG_index_get_files_newer_than", timestampName)>;
-      files' := <remove-all(?(timestampName, _))> files
-
+      if is-list then
+        uri := <concat> [[Global()], names, ["globals", ".internal"]]
+      else
+        uri := [Global(), names, "global", ".internal"]
+      end
+    
   /**
-   * Queries if given index file is a 'fake' file for storing internal data.
+   * Gets the first value in global storage with given name, or fail.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => Timestamp(1334322856)
+   *   index-get-global(|["last-compile", "file.str"]) => Timestamp(1334322856)
+   * 
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> ?value
    */
-  index-is-fake-file = string-starts-with(|"/.internal")
+  index-get-global(|name):
+    _ -> value
+    where
+      value := <indexlib-get-value> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Gets all values in global storage with given name.
+   *
+   * Example:
+   *   index-get-global(|"last-compile") => [Timestamp(1334322856), ...]
+   *   index-get-global(|["last-compile", "file.str"]) => [Timestamp(1334322856), ...]
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type _ -> List(value)
+   */ 
+  index-get-all-globals(|name):
+    _ -> values
+    with
+      values := <indexlib-get-all-values> Global(<index-globals-uri> name, ())
+    
+  /**
+   * Add value to global storage with given name.
+   *
+   * Example:
+   *   <index-add-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-add-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-add-global(|name):
+    value -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-globals-uri> name, value)
+      
+  /**
+   * Overwrites value in global storage with given value.
+   *
+   * Example:
+   *   <index-set-global(|"last-compile")> Timestamp(1334322856)
+   *   <index-set-global(|["last-compile", "file.str"])> Timestamp(1334322856)
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-set-global(|name):
+    value -> <id>
+    with
+      index-clear-global(|name);
+      <index-add-global(|name)> value
+    
+  /**
+   * Removes all values from global storage with given name.
+   *
+   * Example:
+   *   index-clear-global(|"last-compile")
+   *   index-clear-global(|["last-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global value.
+   * @type x -> x
+   */   
+  index-clear-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-globals-uri> name, ())
+      
+  /**
+   * Gets the URI where boolean globals are stored in the index for given name or names.
+   *
+   * @internal
+   */
+  index-boolean-globals-uri:
+    names -> uri
+    with
+      if is-list then
+        uri := <concat> [[Global()], names, ["boolean", "globals", ".internal"]]
+      else
+        uri := [Global(), names, "boolean", "global", ".internal"]
+      end
+      
+  /**
+   * Sets boolean value true to global boolean storage with given name.
+   *
+   * Example:
+   *   index-enable-global(|"can-compile")
+   *   index-enable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-enable-global(|name):
+    _ -> <id>
+    with
+      <index-add(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Sets boolean value false to global boolean storage with given name.
+   *
+   * Example:
+   *   index-disable-global(|"can-compile")
+   *   index-disable-global(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> x
+   */   
+  index-disable-global(|name):
+    _ -> <id>
+    with
+      <index-remove(|<index-globals-path>)> Global(<index-boolean-globals-uri> name)
+      
+  /**
+   * Query for boolean value true in global boolean storage with given name.
+   *
+   * Example:
+   *   index-is-global-enabled(|"can-compile")
+   *   index-is-global-enabled(|["can-compile", "file.str"])
+   *
+   * @param name  The name or list of names to identify the global boolean value.
+   * @type x -> ?x
+   */   
+  index-is-global-enabled(|name):
+    _ -> <id>
+    where
+      <indexlib-get> Global(<index-boolean-globals-uri> name)
+
+rules // Index utility
+  
+  /**
+   * Gets the URI part for given term. Can be extended by defining a index-uri-impl rule. If no index-uri-impl rule
+   * is defined for the given term the first subterm is used as the URI. Fails if no URI can be retrieved from the
+   * given term.
+   *
+   * Example:
+   *   <index-uri> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => [Entity(), "Bar", "Baz"]
+   *
+   * @type elem -> ?uri
+   *
+   * @see index-uri-impl
+   * @see index-uri-generic
+   */ 
+  index-uri = 
+    index-uri-impl <+ index-uri-generic
+  
+  /**
+   * Gets the namespace part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => Entity()
+   *
+   * @type uri@[namespace|path] -> namespace
+   */ 
+  index-uri-namespace =
+    ?[<id>|_]
+  
+  /**
+   * Gets the path part of the given URI.
+   *
+   * Example:
+   *   <index-uri-path> [Entity(), "Bar", "Baz"] => ["Bar", "Baz"]
+   *   <index-uri-path> [Entity()] => []
+   *
+   * @type uri@[namespace|path] -> path
+   */ 
+  index-uri-path =
+    ?[_|<id>]
     
   /**
-   * Gets the URI part for given term.
+   * Gets the name part of the given URI or fail if there is no name.
+   *
+   * Example:
+   *   <index-uri-name> [Entity(), "Bar", "Baz"] => "Bar"
+   *   <index-uri-name> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
    */ 
-  index-uri = index-uri-impl <+ index-uri-generic
+  index-uri-name =
+    ?[_|[<id>|_]]
+    
+  /**
+   * Gets the parent of given URI or fail if the URI doesn't have a parent.
+   *
+   * Example:
+   *   <index-uri-parent> [Entity(), "Bar", "Baz"] => [Entity(), "Baz"]
+   *   <index-uri-parent> [Entity(), "Baz"] => [Entity()]
+   *   <index-uri-parent> [Entity()] => fail
+   *
+   * @type uri@[namespace|[name|restPath]] -> ?name
+   */     
+  index-uri-parent =
+    ?[ns|[_|<id>]]; ![ns|<id>]
+  
+  /**
+   * Gets the value part for given term. Can be extended by defining a index-value-impl rule. If no index-value-impl 
+   * rule is defined for the given term the second subterm is used as the value. Fails if no value can be retrieved
+   * from the given term.
+   *
+   * Example:
+   *   <index-value> DefData([Entity(), "Bar", "Baz"], Type(), TYPE("Bar")) => TYPE("Bar")
+   *
+   * @type elem -> ?value
+   *
+   * @see index-value-impl
+   * @see index-value-generic
+   */  
+  index-value = 
+    index-value-impl <+ index-value-generic
+  
+  /**
+   * Queries if given index file is a 'fake' file for storing internal data.
+   *
+   * @type x -> ?x
+   */
+  index-is-fake-file = 
+    string-starts-with(|"/.internal")
   
   /**
    * Checks if given URI's are equal. Discards anonymous scopes if necessary.
@@ -218,6 +577,8 @@
    *   <index-uri-eq> ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"]) => 
    *     ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"])
    *   <index-uri-eq> ([Entity(), "Foo"], [Entity(), "Bar"]) => fail
+   *
+   * @type (u1, u2) -> ?(u1, u2)
    */
   index-uri-eq:
     (u1, u2) -> <id>
@@ -225,56 +586,148 @@
       u1' := <index-uri-unwrap> u1;
       u2' := <index-uri-unwrap> u2;
       (<eq> (u1', u2') <+ <eq> (<remove-all(?Anon(_))> u1', <remove-all(?Anon(_))> u2'))
+  
+  /**
+   * Finds the first key (term{uri} element) for given term, or fail. 
+   *
+   * @type x -> ?name{uri}
+   */
+  index-find-key:
+    x -> key
+    where
+      key := <collect-one(?_{_})> x
 
   /**
-   * Checks if given keys (term{uri} elements) are equal. Discards unresolved URI's.
+   * Converts a path from an URI to a string.
    *
    * Example:
-   *   <index-key-eq> ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]}) => 
-   *     ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]})
-   *   <index-key-eq> ("Foo"{[Entity(), "Foo"]}, "Bar"{[Entity(), "Bar"]}) => fail
-   */      
-  index-key-eq:
-    (k1, k2) -> <id>
-    where
-      <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)
+   *   <index-path-to-string> ["Bar", "Baz"] => "Bar.Baz"
+   *
+   * @type path -> str
+   */
+  index-path-to-string:
+    path -> str
+    with
+      str := <take-until(?Anon(_)); reverse; separate-by(|"."); concat-strings> path
+      
+  /**
+   * Converts a URI to a string.
+   *
+   * Example:
+   *   <index-uri-to-string> [Entity(), "Bar", "Baz"] => "Entity://Bar.Baz"
+   *
+   * @type uri -> str
+   */
+  index-uri-to-string:
+    [ns|path] -> <concat-strings> [nsStr, "://", pathStr]
+    with
+      pathStr := <index-path-to-string> path;
+      nsStr := <?<id>#(_)> ns
   
   /**
-   * Gets the value part for given term.
-   */  
-  index-value = index-value-impl <+ index-value-generic
+   * Converts a file to a string.
+   *
+   * Example:
+   *   <index-file-to-string> "fullpath/file.ext" => "fullpath/file.ext"
+   *
+   * @type file -> file
+   */
+  index-file-to-string:
+    file -> file
+    where
+      not(<is-tuple> file)
   
   /**
-   * Finds the first key (term{uri} element) for given term, or fail. 
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", []) => "fullpath/file.ext"
+   *
+   * @type (file, []) -> file
    */
-  index-find-key:
-    x -> key
+  index-file-to-string:
+    (file, []) -> file
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a string.
+   *
+   * Example:
+   *   <index-file-to-string> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => "fullpath/file.ext at Entity://Foo.Bar"
+   *
+   * @type (file, subfile) -> str
+   */
+  index-file-to-string:
+    (file, subfile) -> <concat-strings> [file, "@", <index-uri-to-string> subfile]
     where
-      key := <collect-one(?_{_})> x
+      not([] := subfile)
+
+  /**
+   * Converts a file to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> "fullpath/file.ext" => [None(), "fullpath/file.ext"]
+   *
+   * @type file -> uri
+   */      
+  index-file-to-uri:
+    file -> [None(), file]
+    where
+      not(<is-tuple> file)
+      
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", []) => [None(), "fullpath/file.ext]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, []) -> [None(), file]
+    
+  /**
+   * Converts a file ((file, subfile) tuple) to a URI.
+   *
+   * Example:
+   *   <index-file-to-uri> ("fullpath/file.ext", [Entity(), "Foo" "Bar"]) => [Entity(), "Foo", "Bar", "fullpath/file.ext"]
+   *
+   * @type (file, subfile) -> uri
+   */      
+  index-file-to-uri:
+    (file, subfile) -> <conc> ([file], subfile)
+    where
+      not([] := subfile)
       
 /** @internal */
 rules // URI and value projections
-    
+
+  /** @internal */
+  index-uri-impl:
+    [_|_] -> <id>
+  
+  /** @internal */
   index-uri-impl:
     DefData(uri, _, _) -> uri
 
+  /** @internal */
   index-uri-generic:
     term -> <?_#(<?[<id>|_]>)> term
   
+  /** @internal */
   index-value-impl:
     DefData(_, _, value) -> value
     
+  /** @internal */
   index-value-generic:
     term -> <?_#(<?[_, <id>|_]> )> term
      
 /** @internal */ 
 rules // Internal helpers
   
+  /** @internal */
   index-namespace-unwrap =
     \Unresolved(n) -> n\ <+ id
     
+  /** @internal */
   index-uri-unwrap =
     \[ns|xs] -> [<index-namespace-unwrap> ns|xs]\ <+ id
-    
-  index-key-unwrap = 
-    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id

Added: spoofax-contrib/jasmin-spoofax/trunk/lib/nbl-library.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/jasmin-spoofax/trunk/lib/nbl-library.generated.str	Tue Nov 27 00:51:35 2012	(r25735)
@@ -0,0 +1,144 @@
+module lib/nbl-library.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library.generated
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  
+signature constructors
+  
+  Type        : DefDataKind
+  Import      : DefDataKind
+  Transitive  : ImportAnno
+  CurrentFile : ImportAnno
+  
+rules // Import adjust rule
+     
+  import-transitive =
+    collect-one(?Transitive())
+  import-standard =
+    not(import-transitive)
+    
+  import-values(|namespace, path) =
+    <index-get-all-values> DefData([namespace| path], Import(), ())
+    
+  import-currentfile-values(|namespace) =
+    <index-get-all-values> DefData([namespace|[<index-file-to-string> <index-get-current-file>]], Import(), ())  
+    
+  adjust-index-import(|namespace, path):
+    _ -> <concat> [[[namespace | path]], currentFileImportDefs, importDefs]
+    with
+      uri := [namespace | path]
+    where
+      allImports := <import-values(|namespace, path)> ;
+      importDefs := <mapconcat(import-defs(|namespace, [uri]))> allImports
+    where
+      currentfileImports := <import-currentfile-values(|namespace)> ;
+      currentFileImportDefs := <mapconcat(import-defs(|namespace, [uri]))> currentfileImports
+    
+  import-defs(|namespace, seen):
+    (key, <import-standard>) -> [uri]
+    with
+      uri := [namespace | <index-uri-path> key]
+      
+  import-defs(|namespace, seen):
+    (key, <import-transitive>) -> <conc> ([uri], transitiveUris)
+    with
+      path := <index-uri-path> key ;
+      uri := [namespace | path] ;
+      
+      if not(<elem> (uri, seen)) then
+        allImports := <import-values(|namespace, path)> ;
+        transitiveUris := <mapconcat(import-defs(|namespace, [uri|seen]))> allImports
+      else
+        transitiveUris := []
+      end
+
+rules // Adjust difference comparison
+    
+  // Add Type to the constructors to check for differences.
+  index-diff-constructors = ?DefData(_, Type(), _)
+  
+  // Type definitions are equal if their URI is equal and if their values are equal.
+  index-diff-compare:
+    (DefData(u1, Type(), v1), DefData(u2, Type(), v2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2);
+       <index-key-eq> (v1, v2)
+
+rules // Error checks
+  
+  constraint-error:
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+  constraint-error:
+    definition -> (key, $[Duplicate definition])
+    where
+      <nam-unique> definition;
+      key := <nam-get-definition-key> definition;
+      defs := <index-lookup-all-scoped-noimports> key;
+      <gt> (<length> defs, 1)
+      
+rules // Type dependant lookup
+	
+	/**
+   * Given an annotated AST node and a type, resolves it and checks if type equals given type, returning its definition.
+   * Uses precise matching for names.
+   *
+   * @param type	Only definitions with this type are returned.
+   * @type "name"{uri} -> ?Def(uri')
+   */
+  index-lookup-typed(|type):
+    x{[namespace|path]} -> <index-lookup-internal(index-compare-nametype-equal(|name, type)|ns, path, name)> x
+    where
+      ns := <index-namespace-unwrap> namespace;
+      name := <strip-annos> x
+
+  /**
+   * Given an annotated AST node, a prefix and a type, looks for all definitions with given prefix and type starting at the scope of 
+   * the given node.
+   * Uses substring matching for names.
+   *
+   * @param prefix    Only definitions with a name that starts with this string are returned.
+   * @param type			Only definitions with this type are returned.
+   * @type "name"{uri} -> List(Def(uri'))
+   */
+  index-lookup-all-typed(|prefix, type):
+    x{[namespace|path]} -> <index-lookup-all-internal(index-compare-nametype-substring(|prefix, type)|ns, path, prefix)> x
+    where
+      ns := <index-namespace-unwrap> namespace
+
+  /**
+   * Compares given element (with an URI) to given name using string equality comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-equal(|name, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <SRTS-EXT-eq-ignore-annos(|name)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+      
+  /**
+   * Compares given element (with an URI) to given prefix using substring comparison and given type using equality.
+   * 
+   * @internal 
+   */     
+  index-compare-nametype-substring(|prefix, type):
+    element -> <id>
+    where
+      uri := <index-uri> element;
+      <is-substring(!prefix)> <index-uri-name> uri;
+      <nbl-type-eq(|type)> <nbl-get-type> uri
+  
+  /** @internal */
+  nbl-get-type:
+  	uri -> <index-get-data(|Type())> Def(uri)
+  
+  // TODO: Allow user defined type equality.
+  /** @internal */	
+  nbl-type-eq(|type) = 
+  	<eq> (<id>, type)

Added: spoofax-contrib/jasmin-spoofax/trunk/trans/analysis/names/binding.nd
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/jasmin-spoofax/trunk/trans/analysis/names/binding.nd	Tue Nov 27 00:51:35 2012	(r25735)
@@ -0,0 +1,17 @@
+module binding
+
+imports
+
+	include/JasminXT
+	
+namespaces
+
+	Label
+	
+rules
+
+	JBCMethod(_, _, _, _): scopes Label
+	
+	JBCLabel(l): defines Label l
+	LabelRef(l): refers to Label l
+	
\ No newline at end of file

Added: spoofax-contrib/jasmin-spoofax/trunk/trans/analysis/names/binding.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/jasmin-spoofax/trunk/trans/analysis/names/binding.str	Tue Nov 27 00:51:35 2012	(r25735)
@@ -0,0 +1,54 @@
+module binding
+
+imports
+  lib/analysis-library.generated
+  lib/analysis-library-internal.generated
+  lib/index-library.generated
+
+
+imports
+  include/JasminXT
+
+
+signature
+  constructors
+    Type        : DefDataKind
+    Import      : DefDataKind
+    Transitive  : ImportAnno
+    CurrentFile : ImportAnno
+
+  constructors
+    Label : Namespace
+
+
+rules
+
+  nam-get-scope-types :
+    JBCMethod(_, _, _, _) -> [Label()]
+
+
+rules
+
+  nam-get-definition-keys :
+    JBCLabel(l) -> [l]
+
+  nam-get-definitions :
+    JBCLabel(l) -> [(Label(), [l])]
+
+  nam-annotate-names(|paths__, path__):
+    JBCLabel(l) -> <JBCLabel(nam-annotate-def(|path__))>
+
+  nam-unique :
+    JBCLabel(l) -> <id>
+
+
+rules
+
+  nam-get-uses-keys :
+    LabelRef(l) -> [l]
+
+  nam-get-uses :
+    LabelRef(l) -> [(Label(), [l])]
+
+  nam-annotate-names(|paths__, path__):
+    LabelRef(l) -> <LabelRef(nam-annotate-use(|paths__, Label()))>
\ No newline at end of file

Modified: spoofax-contrib/jasmin-spoofax/trunk/trans/editor/builders.meta.str
==============================================================================
--- spoofax-contrib/jasmin-spoofax/trunk/trans/editor/builders.meta.str	Wed Nov 21 14:58:54 2012	(r25734)
+++ spoofax-contrib/jasmin-spoofax/trunk/trans/editor/builders.meta.str	Tue Nov 27 00:51:35 2012	(r25735)
@@ -12,21 +12,7 @@
 		with
 			filename := <guarantee-extension(|"aterm")> path;
 			result	 := selected 
-			
-	generate-defs:
-	(selected, position, ast, path, project-path) -> (filename, result)
-			with
-			editor-init;
-			filename := <guarantee-extension(|"analysed.aterm")> path;
-			AnalysedResult(_, result, _, _, _, _) := <analyze-top-internal> (selected, path, project-path)
-	
-	generate-uses:
-		(selected, position, ast, path, project-path) -> (filename, result)
-		with
-			editor-init;
-			filename := <guarantee-extension(|"analysed.aterm")> path;
-			AnalysedResult(_, _, result, _, _, _) := <analyze-top-internal> (selected, path, project-path)
-	
+				
 	/*
 	generate-reads:
 		(selected, position, ast, path, project-path) -> (filename, result)
@@ -47,7 +33,6 @@
 	index-allfiles:
 		(selected, position, ast, path, project-path) -> (filename, result)
 		with
-			language	:= <index-origin-language> ast;
-			index-setup(|language, [project-path], $[[project-path]/[path]]);
+			index-setup(|<language>, [project-path], $[[project-path]/[path]]);
 			filename := <guarantee-extension(|"index.currentfile.aterm")> path;
 			result	 := <map(\filename -> FileEntries(filename, <index-get-all-in-file> filename)\)> <index-get-all-files>

Modified: spoofax-contrib/jasmin-spoofax/trunk/trans/editor/complete.str
==============================================================================
--- spoofax-contrib/jasmin-spoofax/trunk/trans/editor/complete.str	Wed Nov 21 14:58:54 2012	(r25734)
+++ spoofax-contrib/jasmin-spoofax/trunk/trans/editor/complete.str	Tue Nov 27 00:51:35 2012	(r25735)
@@ -8,20 +8,15 @@
 		
 rules // generic
 
-	editor-complete:
-		(node, position, ast, path, project-path) -> proposals
-		where
-			editor-init;
-			<analyze-top> (ast, path, project-path) => ast';
-     		<collect-one(complete) <+ ![]> ast' => proposals
-     		
-	def-to-name:
-		Def([namespace, name | _]) -> name
-	
-rules
-	
-	complete:
-		LabelRef(c at COMPLETION(name)) -> proposals
-		where
-			<index-lookup-all-levels(|name)> c => defs ;
-			<map(def-to-name)> defs => proposals
\ No newline at end of file
+  // Completes an identifier when the user presses control-space
+  // (the completion identifier in the AST provides additional context information)
+  editor-complete:
+    (node, position, ast, path, project-path) -> proposals'
+    where
+      editor-init;
+      (ast', _) := <analyze-top(|<language>)> (ast, path, project-path);
+      item at COMPLETION(name) := <collect-one(?COMPLETION(_)); debug> ast';
+      index-transaction(
+        (<index-lookup-all(|name)> item <+ ![]) => proposals
+      );
+      proposals' := <map(index-uri; index-uri-name)> proposals

Modified: spoofax-contrib/jasmin-spoofax/trunk/trans/editor/resolve.str
==============================================================================
--- spoofax-contrib/jasmin-spoofax/trunk/trans/editor/resolve.str	Wed Nov 21 14:58:54 2012	(r25734)
+++ spoofax-contrib/jasmin-spoofax/trunk/trans/editor/resolve.str	Tue Nov 27 00:51:35 2012	(r25735)
@@ -6,17 +6,14 @@
 	lib/analysis-library.generated
 	include/JasminXT
 		
-rules // generic
-
-	editor-resolve:
-		(node, position, ast, path, project-path) -> target
-		where
-			language:= <index-origin-language> ast;
-			index-setup(|language, [project-path], $[[project-path]/[path]]);
-			<resolve> node => target <+
-			<parent-at-position(|position) ; resolve> ast => target
-
 rules
-	
-	resolve: LabelRef(l) -> <index-lookup> l
+
+	// Resolves a reference when the user control-clicks or presses F3 in the editor.
+  editor-resolve:
+    (node, position, ast, path, project-path) -> target
+    where
+      index-setup(|<language>, [project-path], $[[project-path]/[path]]);
+      index-transaction(
+        target := <index-lookup> node
+      )
 	
\ No newline at end of file

Modified: spoofax-contrib/jasmin-spoofax/trunk/trans/jasminxt.str
==============================================================================
--- spoofax-contrib/jasmin-spoofax/trunk/trans/jasminxt.str	Wed Nov 21 14:58:54 2012	(r25734)
+++ spoofax-contrib/jasmin-spoofax/trunk/trans/jasminxt.str	Tue Nov 27 00:51:35 2012	(r25735)
@@ -2,12 +2,14 @@
 
 imports
 	lib/editor-common.generated
-	lib/analysis-auto.generated
- 	lib/index-library.generated
+	lib/index-library.generated
 	lib/analysis-library.generated
+	lib/nbl-library.generated
+	lib/compilation-library.generated
 	
 	include/JasminXT
 
+	analysis/names/binding
 	analysis/names/check 
 	editor/resolve
 	editor/complete
@@ -16,12 +18,49 @@
 	
 rules // Main editor interface (defined by editor/JasminXT-Builders and -References.esv)
  
-	editor-analyse:
-		(ast, path, project-path) -> (ast', errors, warnings, notes)//(ast', errors, warnings, notes)
-		with
-			editor-init;
-			analyze-top => ast';
-			<collect-all(editor-error, conc)> ast' 		=> errors;
-			<collect-all(editor-warning, conc)> ast' 	=> warnings;
-			<collect-all(editor-note, conc)> ast'		=> notes
+// Analyses the current program, returning a tuple with the analyzed AST, errors, warnings, notes and
+  // files that should be re-analyzed.
+  analyse:
+    (ast, path, project-path) -> (ast', errors, warnings, notes, filesToAnalyze')
+    with
+      (ast', filesToAnalyze)   := <analyze-top(|<language>)> (ast, path, project-path);
+      index-transaction(
+        errors                := <collect-all(editor-error, conc)> ast';
+        warnings              := <collect-all(editor-warning, conc)> ast';
+        notes                 := <collect-all(editor-note, conc)> ast'
+      );
+      filesToAnalyze'         := <index-filepairs-to-files> filesToAnalyze
+
+  // Main entry point for analyses, called when a single file is opened in the editor.
+  editor-analyse:
+    (ast, path, project-path) -> (ast', errors, warnings, notes)
+    with
+      editor-init;
+      (ast', errors, warnings, notes, filesToAnalyze) := <analyse> (ast, path, project-path);
+      <try(editor-queue-analysis)> <remove-all(?path)> filesToAnalyze
+      
+  // Main entry point for analyzes, called when multiple files have changed. 
+  editor-analyse:
+    files -> None()
+    where
+      not(is-tuple)
+    with
+      index-setup(|<language>, [<project-path>], ".");
+      disable-commit-and-compile // Disable compilation during analysis.
+    with
+      editor-queue-analysis
+    with
+      // Enable and trigger compilation after all files have been analysed.
+      <enable-commit-and-compile> <language>;
+      <trigger-commit-and-compile> <language>
+
+  // Queue parallel analysis for given list of files.
+  editor-queue-analysis = 
+    not(?[]); queue-strategy(|"editor-parallel-analyse", "Analyzing files")
+      
+  // Executes parallel analysis using the index library.
+  editor-parallel-analyse:
+    files -> None()
+    with
+      index-parallel-analyze-files(analyse)
 	 

From g.h.wachsmuth at tudelft.nl  Tue Nov 27 01:55:30 2012
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Tue, 27 Nov 2012 00:55:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r25736 -
	spoofax-contrib/jasmin-spoofax/trunk/editor
Message-ID: <20121127005530.B9873CC18E@mx4.tudelft.nl>

Author: GuidoWachsmuth
Date: Tue Nov 27 00:55:30 2012
New Revision: 25736
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=25736&sc=1

Log:
removed some builders

Modified:
   spoofax-contrib/jasmin-spoofax/trunk/editor/JasminXT-Builders.esv

Modified: spoofax-contrib/jasmin-spoofax/trunk/editor/JasminXT-Builders.esv
==============================================================================
--- spoofax-contrib/jasmin-spoofax/trunk/editor/JasminXT-Builders.esv	Tue Nov 27 00:51:35 2012	(r25735)
+++ spoofax-contrib/jasmin-spoofax/trunk/editor/JasminXT-Builders.esv	Tue Nov 27 00:55:30 2012	(r25736)
@@ -21,11 +21,7 @@
                                                                                                                             
   builder: "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta) (source)  
   builder: "Show analysed syntax (for selection)" = generate-aterm (openeditor) (realtime) (meta)
-  builder: "Show defintions (for selection)" = generate-defs (openeditor) (realtime) (meta) (source)
-  builder: "Show uses (for selection)" = generate-uses (openeditor) (realtime) (meta) (source)
-  builder: "Show index entries for current file" = index-currentfile (openeditor) (realtime) (source)   
-  builder: "Show index entries for all files" = index-allfiles (openeditor) (realtime) (source)
-
+  
 builders user
  
   builder: "Generate class file" = generate-class (source)    

