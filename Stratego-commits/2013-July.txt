From v.vergu+vc at gmail.com  Mon Jul  1 22:12:06 2013
From: v.vergu+vc at gmail.com (Vlad Vergu)
Date: Mon, 01 Jul 2013 20:12:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r26143 -
	hydra/jobs/spoofax-git
Message-ID: <20130701201206.E0E252B8017@mx2.tudelft.nl>

Author: VladVergu
Date: Mon Jul  1 20:12:06 2013
New Revision: 26143
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=26143&sc=1

Log:
Remove revCount reference to the SVN repo

Modified:
   hydra/jobs/spoofax-git/spoofax-master.nix

Modified: hydra/jobs/spoofax-git/spoofax-master.nix
==============================================================================
--- hydra/jobs/spoofax-git/spoofax-master.nix	Fri Jun 28 23:31:02 2013	(r26142)
+++ hydra/jobs/spoofax-git/spoofax-master.nix	Mon Jul  1 20:12:06 2013	(r26143)
@@ -37,7 +37,7 @@
         nabl.revCount sdf.revCount esv.revCount aster.revCount box.revCount spx.revCount 
         rtg.revCount stratego.revCount spt.revCount tdl.revCount spoofax.revCount 
         spoofaxdebug.revCount spoofaxdeploy.revCount spoofaximppatches.revCount strategoxt.revCount 
-        metaborgRuntime.revCount javaFront.revCount hydraConfig.revCount]) ;
+        metaborgRuntime.revCount javaFront.revCount]) ;
 
   pkgs = import nixpkgs { system = "i686-linux"; };
 

From v.vergu+vc at gmail.com  Tue Jul  9 19:08:21 2013
From: v.vergu+vc at gmail.com (Vlad Vergu)
Date: Tue, 09 Jul 2013 17:08:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r26144 -
	hydra/jobs/spoofax-git
Message-ID: <20130709170821.7A79B108C003@mx3.tudelft.nl>

Author: VladVergu
Date: Tue Jul  9 17:08:21 2013
New Revision: 26144
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=26144&sc=1

Log:
Clone job for debugger

Added:
   hydra/jobs/spoofax-git/spoofax-master-debugger.nix

Added: hydra/jobs/spoofax-git/spoofax-master-debugger.nix
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ hydra/jobs/spoofax-git/spoofax-master-debugger.nix	Tue Jul  9 17:08:21 2013	(r26144)
@@ -0,0 +1,442 @@
+{
+  nixpkgs ? ../../../nixpkgs
+
+, jsglr ? { outPath = ../../../jsglr ; revCount = 9999; }
+, mbexec ? { outPath = ../../../mb-exec ; revCount = 9999; }
+, mbexecdeps ? { outPath = ../../../mb-exec-deps ; revCount = 9999; }
+, mbrep ? { outPath = ../../../mb-rep ; revCount = 9999; }
+, nabl ? { outPath = ../../../nabl ; revCount = 9999; }
+, sdf ? { outPath = ../../../sdf ; revCount = 9999; }
+, esv ? { outPath = ../../../esv ; revCount = 9999; }
+, aster ? { outPath = ../../../aster ; revCount = 9999; }
+, box ? { outPath = ../../../box ; revCount = 9999; }
+, spx ? { outPath = ../../../spx ; revCount = 9999; }
+, rtg ? { outPath = ../../../rtg ; revCount = 9999; }
+, stratego ? { outPath = ../../../stratego ; revCount = 9999; }
+, spt ? { outPath = ../../../spt ; revCount = 9999; }
+, tdl ? { outPath = ../../../tdl ; revCount = 9999; }
+, spoofax ? { outPath = ../../../spoofax ; revCount = 9999; }
+, spoofaxdebug ? { outPath = ../../../spoofax-debug ; revCount = 9999; }
+, spoofaxdeploy ? { outPath = ../../../spoofax-deploy ; revCount = 9999; }
+, spoofaximppatches ? { outPath = ../../../spoofax-imp-patches ; revCount = 9999; }
+, lpgRuntime ? { outPath = ../../../lpg.runtime.java ; rev = 9999; }
+, metaborgRuntime ? { outPath = ../../../runtime-libraries ; revCount = 9999; }
+
+, strategoxt ? { outPath = ../../../strategoxt ; revCount = 9999; }
+, strategoxtCVersion ? { outPath = ../../../strategoxt-cver ; revCount = 9999; }
+, javaFront ? { outPath = ../../../java-front ; revCount = 9999; }
+
+, hydraConfig ? { outPath = ../../. ; revCount = 9999; }
+}:
+let
+  plus = a : b : ( builtins.add a b );
+  sumrev = xs : pkgs.lib.foldl plus 0 xs ;
+  
+  spoofaxRev = toString (sumrev 
+      [lpgRuntime.rev jsglr.revCount mbexec.revCount mbexecdeps.revCount mbrep.revCount
+        nabl.revCount sdf.revCount esv.revCount aster.revCount box.revCount spx.revCount 
+        rtg.revCount stratego.revCount spt.revCount tdl.revCount spoofax.revCount 
+        spoofaxdebug.revCount spoofaxdeploy.revCount spoofaximppatches.revCount strategoxt.revCount 
+        metaborgRuntime.revCount javaFront.revCount]) ;
+
+  pkgs = import nixpkgs { system = "i686-linux"; };
+
+  orgEclipseImp = pkgs.fetchsvn {
+    url = http://dev.eclipse.org/svnroot/technology/org.eclipse.imp/trunk;
+    rev = 22255;
+    sha256 = "0mknky2wpqvpcaqnz1l6wh6p1p8zjmd299hlf1nnwm91paiqmm85";
+  };
+
+  jline = pkgs.fetchurl {
+    url = http://spoofax.org/mirror/extras/jline-1.0.jar;
+    sha256 = "6d35823d5ae86ea4c71bc653747d1234c1587662882a76738d2881fb409394ab";
+  };
+
+  shrike = pkgs.fetchsvn {
+    url = https://wala.svn.sourceforge.net/svnroot/wala/trunk/com.ibm.wala.shrike;
+    rev = 3073;
+    sha256 = "0y13i31xlhian5glk4cahbzxg4mky4q61qzc5g03qkg4d67k12zd";
+  };
+
+  guava = pkgs.fetchurl {
+    url = http://search.maven.org/remotecontent?filepath=com/google/guava/guava/14.0.1/guava-14.0.1.jar;
+    sha256 = "d69df3331840605ef0e5fe4add60f2d28e870e3820937ea29f713d2035d9ab97";
+  };
+
+  junit-benchmarks = pkgs.fetchurl {
+    url = http://labs.carrotsearch.com/download/junit-benchmarks/0.6.0/junit-benchmarks-0.6.0.zip;
+    sha256 = "07f189bd06e4294b329b4e3b0c7f54ce8236bba0393991a212a94cbb39ecd5b1";
+  };
+
+  eclipseFun = import ../../eclipse.nix pkgs ; 
+    
+  eclipse = eclipseFun {
+    name = "eclipse-plain";
+    src =  pkgs.fetchurl {
+      url = http://download.springsource.com/release/ECLIPSE/helios/SR1/eclipse-SDK-3.6.1-linux-gtk.tar.gz ;
+      sha256 = "0s48rjaswi8m5gan1zlqvfwb4l06x5nslkq41wpkrbyj9ka8gh4x";
+    };
+  }; 
+
+  eclipseTest = eclipseFun {
+    name = "eclipse-spoofax-install-test";
+    src =  pkgs.fetchurl {
+      url = http://download.springsource.com/release/ECLIPSE/helios/SR1/eclipse-SDK-3.6.1-linux-gtk.tar.gz ;
+      sha256 = "0s48rjaswi8m5gan1zlqvfwb4l06x5nslkq41wpkrbyj9ka8gh4x";
+    };
+    updatesites = [ "file://${jobs.build}/site" ];
+    installIUs = [ "org.strategoxt.imp.feature.group" ];
+    dontInstall = true;
+  }; 
+
+  strcj = (import ../strc-java.nix {
+      inherit nixpkgs hydraConfig;
+      strcJavaCheckout = strategoxtCVersion;
+    }).build { system = "i686-linux"; };
+
+
+  strategoxtNixExpr = pkgs.lib.concatStrings [strategoxt.outPath "/strategoxt/strategoxt-java-bootstrap.nix" ] ;
+
+  strj = (import strategoxtNixExpr {
+    inherit nixpkgs javaFront;
+    strategoxtJava = strategoxt;
+    baseline = strcj;
+  }).bootstrap3;
+
+  jobs = with pkgs.lib; {
+    tests.install = eclipseTest;
+    src = pkgs.stdenv.mkDerivation {
+      name = "spoofax-imp-src-s${spoofaxRev}";
+
+
+      buildInputs = with pkgs; [ unzip ];
+
+      buildCommand = ''
+        ensureDir $out
+        cd $out
+            
+        header "Preparing org.eclipse.imp"
+    
+        for d in ${orgEclipseImp}/org.eclipse.imp.cheatsheets \
+                 ${orgEclipseImp}/org.eclipse.imp.java.hosted \
+                 ${orgEclipseImp}/org.eclipse.imp.lpg \
+                 ${orgEclipseImp}/org.eclipse.imp.lpg.ide \
+                 ${orgEclipseImp}/org.eclipse.imp.lpg.metatooling \
+                 ${orgEclipseImp}/org.eclipse.imp.metatooling \
+                 ${orgEclipseImp}/org.eclipse.imp.preferences \
+                 ${orgEclipseImp}/org.eclipse.imp.prefspecs \
+                 ${orgEclipseImp}/org.eclipse.imp.presentation \
+                 ${orgEclipseImp}/org.eclipse.imp.runtime \
+                 ${orgEclipseImp}/org.eclipse.imp.smapi \
+                 ${orgEclipseImp}/org.eclipse.imp.smapifier \
+                 ${orgEclipseImp}/org.eclipse.imp.xform \
+                 ${mbexec}/org.spoofax.compiler \
+                 ${mbexec}/org.spoofax.interpreter.core \
+                 ${mbexec}/org.spoofax.interpreter \
+                 ${mbexec}/org.spoofax.interpreter.ui \
+                 ${mbexec}/org.spoofax.interpreter.library.xml \
+                 ${mbexec}/org.spoofax.interpreter.library.interpreter \
+                 ${mbexec}/org.spoofax.interpreter.library.jline \
+                 ${mbexec}/org.spoofax.interpreter.adapter.ecj \
+                 ${mbexec}/org.spoofax.interpreter.library.eclipse \
+                 ${mbexec}/org.spoofax.interpreter.library.java \
+                 ${mbexecdeps}/org.spoofax.interpreter.externaldeps \
+                 ${metaborgRuntime}/org.metaborg.runtime.task \
+                 ${mbrep}/org.spoofax.interpreter.library.index \
+                 ${mbrep}/org.spoofax.aterm \
+                 ${mbrep}/org.spoofax.terms \
+                 ${mbrep}/org.strategoxt.imp.editors.aterm \
+                 ${jsglr}/org.spoofax.jsglr \
+                 ${jsglr}/org.spoofax.interpreter.library.jsglr \
+                 ${sdf}/org.strategoxt.imp.editors.sdf \
+                 ${sdf}/org.strategoxt.imp.editors.template \
+                 ${stratego}/org.strategoxt.imp.editors.stratego \
+                 ${aster}/org.strategoxt.imp.editors.aster \
+                 ${esv}/org.strategoxt.imp.editors.editorservice \
+                 ${box}/org.strategoxt.imp.editors.pp \
+                 ${rtg}/org.strategoxt.imp.editors.rtg \
+                 ${spx}/org.strategoxt.imp.editors.spoofax \
+                 ${spx}/org.spoofax.interpreter.library.language \
+                 ${spx}/org.strategoxt.imp.editors.spoofax.configuration \
+                 ${spx}/org.strategoxt.imp.spoofax.generator \
+                 ${nabl}/org.metaborg.meta.lang.nabl \
+                 ${spt}/org.strategoxt.imp.testing \
+                 ${spt}/org.strategoxt.imp.testing.ui \
+                 ${spoofax}/org.strategoxt.imp.generator \
+                 ${spoofax}/org.strategoxt.imp.metatooling \
+                 ${spoofax}/org.strategoxt.imp.nativebundle \
+                 ${spoofax}/org.strategoxt.imp.runtime \
+                 ${spoofax}/org.strategoxt.imp.runtime.sidebyside.main \
+                 ${spoofax}/org.strategoxt.imp.runtime.sidebyside.legacy \
+                 ${spoofax}/org.strategoxt.imp.runtime.sidebyside.latest \
+                 ${spoofaxdebug}/org.strategoxt.imp.debug.core \
+                 ${spoofaxdebug}/org.strategoxt.imp.debug.stratego.core \
+                 ${spoofaxdebug}/org.strategoxt.imp.debug.stratego.runtime \
+                 ${spoofaxdebug}/org.strategoxt.imp.debug.stratego.test \
+                 ${spoofaxdebug}/org.strategoxt.imp.debug.stratego.transformer \
+                 ${spoofaxdebug}/org.strategoxt.imp.debug.ui \
+                 ${spoofaxdeploy}/org.strategoxt.imp.feature \
+                 ${spoofaxdeploy}/org.strategoxt.imp.updatesite
+        do
+          header "Copying $d"
+          cp -R $d .
+          stopNest
+        done
+
+        cp -R ${shrike} com.ibm.wala.shrike
+        cp -R ${lpgRuntime} lpg.runtime.java
+        cp -R ${strategoxt}/strategoxt/stratego-libraries/java-backend org.strategoxt.strj
+        
+        chmod -R +w .
+        ensureDir org.spoofax.interpreter.externaldeps/lib
+        cp ${guava} org.spoofax.interpreter.externaldeps/lib/guava.jar
+        unzip ${junit-benchmarks} -d org.spoofax.interpreter.externaldeps/lib/
+            
+        chmod -R +w .
+        rm -rf \
+              org.spoofax.jsglr/src/org/spoofax/jsglr/shared/RemoteParseTableService* \
+              org.spoofax.jsglr/src/org/spoofax/client/JSGLREntryPoint.java \
+              org.spoofax.jsglr/src/org/spoofax/jsglr/server/RemoteParseTableServiceImpl.java \
+              org.spoofax.terms/src/org/spoofax/gwt/
+        sed -Ei 's|\.[0-9]\{12\}|.qualifier|g' org.strategoxt.imp.updatesite/site.xml
+        sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-s${spoofaxRev}"/' org.strategoxt.imp.updatesite/site.xml
+        sed -Ei 's|\.[0-9]\{12\}|.qualifier|g' org.strategoxt.imp.feature/feature.xml
+        sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-s${spoofaxRev}"/' org.strategoxt.imp.feature/feature.xml
+
+        header "Patching org.eclipse.imp using ${spoofaximppatches}/org.eclipse.imp/org.eclipse.imp.runtime.patch"
+        patch -p0 < ${spoofaximppatches}/org.eclipse.imp/org.eclipse.imp.runtime.patch
+        stopNest
+                    
+        stopNest
+      '';
+    };
+
+    generator = pkgs.releaseTools.antBuild {
+      name = "spoofax-imp-generator-s${spoofaxRev}";
+      inherit (jobs) src;
+
+      buildInputs = with pkgs; [strategoPackages.sdf strategoPackages.strategoxt 
+strategoPackages.javafront ecj openjdk ];
+
+      preConfigure = ''
+        cd org.strategoxt.imp.generator
+        ulimit -s unlimited
+      '';
+
+      postUnpack = ''
+        echo ${pkgs.strategoPackages.strategoxt}
+        echo ${pkgs.strategoPackages.sdf}
+        echo ${pkgs.strategoPackages.javafront}
+      '';
+
+      antTargets = [ "install" ];
+      antProperties = [
+	{ name = "sdf2bundle"; value = pkgs.strategoPackages.sdf; }
+        { name = "strategoxt"; value = "${pkgs.strategoPackages.strategoxt}/share"; }
+        { name = "sdf"; value = pkgs.strategoPackages.sdf; }
+        { name = "java-front"; value = "${pkgs.strategoPackages.javafront}/share/java-front"; }
+        { name = "install-prefix"; value = "$out/dist"; }
+      ];
+      antBuildInputs = [ pkgs.ecj strcj ];
+
+      ANT_OPTS="-Xss16m -Xmx1024m -server -XX:+UseParallelGC -XX:MaxPermSize=256m";
+
+      dontInstall = true;
+    };
+
+
+    build = pkgs.stdenv.mkDerivation rec {
+      name = "spoofax-imp-s${spoofaxRev}";
+      inherit (jobs) src;
+      inherit (jobs) generator;
+          
+      buildInputs = with pkgs; [ maven3 strcj pkgconfig which ecj openjdk apacheAntOpenJDK strategoPackages.sdf ];
+      mvnFlags = "-Dversion=1.0.0-SNAPSHOT -DgroupId=spoofax -Dtycho.targetPlatform=${eclipse}/eclipse -Dmaven.repo.local=/tmp/m3";
+
+      M2_REPO="/tmp/m3";
+      MAVEN_OPTS="-Xss8m -Xmx1024m";
+      STRATEGOXT=pkgs.strategoPackages.strategoxt;
+      JAVA_FRONT=pkgs.strategoPackages.javafront;
+      SDF=pkgs.strategoPackages.sdf;
+
+      buildPhase = ''
+        ulimit -s unlimited
+
+        #hack
+        mkdir -p plugins
+        export eclipsefakehome=`pwd`
+            
+        mvn org.sonatype.tycho:maven-tycho-plugin:generate-poms ${mvnFlags}
+
+        mkdir -p org.strategoxt.strj/java
+        cp ${strj}/share/strategoxt/strategoxt.jar org.strategoxt.strj/java/
+
+        header "Copying back org.strategoxt.imp.generator"
+        cp -r ${generator}/dist org.strategoxt.imp.generator/
+
+        stopNest
+
+        for e in */build.generated.xml
+        do
+          POM=`dirname $e`/pom.xml
+          if [[ -f $POM ]] ; then
+             sed -i 's|</project>||' $POM
+             echo '
+  <build>
+    <plugins>
+ <plugin>
+    <groupId>org.apache.maven.plugins</groupId>
+    <artifactId>maven-antrun-plugin</artifactId>
+    <dependencies>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>aster</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>''${basedir}/../org.strategoxt.imp.generator/dist/aster.jar</systemPath>
+        </dependency>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>strategoxt</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>''${basedir}/../org.strategoxt.strj/java/strategoxt.jar</systemPath>
+        </dependency>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>sdf2imp</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>''${basedir}/../org.strategoxt.imp.generator/dist/sdf2imp.jar</systemPath>
+        </dependency>
+        <dependency>
+            <groupId>local</groupId>
+            <artifactId>make_permissive.jar</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>''${basedir}/../org.strategoxt.imp.generator/dist/make_permissive.jar</systemPath>
+        </dependency>
+        <dependency>
+           <groupId>com.sun</groupId>
+            <artifactId>tools</artifactId>
+            <version>1.4.2</version>
+            <scope>system</scope>
+            <systemPath>''${java.home}/../lib/tools.jar</systemPath>
+        </dependency>
+        <dependency>
+           <groupId>ecj</groupId>
+            <artifactId>ecj</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>${pkgs.ecj}/lib/java/ecj.jar</systemPath>
+        </dependency>
+        <dependency>
+           <groupId>jline</groupId>
+            <artifactId>jline</artifactId>
+            <version>1.0</version>
+            <scope>system</scope>
+            <systemPath>''${basedir}/../org.spoofax.interpreter.library.jline/lib/jline-1.0.jar</systemPath>
+        </dependency>
+    </dependencies>
+    <executions>
+       <execution>
+               <id>generate-sources</id>
+               <phase>generate-sources</phase>
+               <configuration>
+                  <tasks>
+                          <echo>Running ant script</echo>
+                          <property name="externaljarx" refid="maven.compile.classpath"/>
+                          <property name="eclipse.spoofaximp.jars" value="''${basedir}/../org.strategoxt.imp.generator/dist/"/>
+                          <property name="eclipse.spoofaximp.strategojar" value="''${basedir}/../org.strategoxt.strj/java/strategoxt.jar"/>
+                          <property name="eclipse.home" value="${eclipse}/eclipse"/>
+                          <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+                          <ant antfile="build.main.xml" inheritRefs="true">
+                          </ant>
+                  </tasks>
+               </configuration>
+               <goals>
+                  <goal>run</goal>
+               </goals>
+       </execution>
+       <execution>
+               <id>process-classes</id>
+               <phase>process-classes</phase>
+               <configuration>
+                  <tasks>
+                          <echo>Running ant script</echo>
+                          <property name="eclipse.spoofaximp.jars" value="''${basedir}/../org.strategoxt.imp.generator/dist/"/>
+                          <property name="eclipse.spoofaximp.strategojar" value="''${basedir}/../org.strategoxt.strj/java/strategoxt.jar"/>
+                          <property name="eclipse.home" value="${eclipse}/eclipse"/>
+                          <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+                          <ant antfile="build.main.xml" inheritRefs="true">
+                            <target name="java.jar"/> 
+                          </ant>
+                  </tasks>
+               </configuration>
+               <goals>
+                  <goal>run</goal>
+               </goals>
+       </execution>
+    </executions>
+  </plugin>
+    </plugins>
+</build></project>' >>$POM
+          fi
+        done
+
+        for e in */build.ant.xml
+        do
+          POM=`dirname $e`/pom.xml
+          if [[ -f $POM ]] ; then
+             sed -i 's|</project>||' $POM
+             echo '
+  <build>
+    <plugins>
+ <plugin>
+    <groupId>org.apache.maven.plugins</groupId>
+    <artifactId>maven-antrun-plugin</artifactId>
+    <executions>
+       <execution>
+               <id>generate-sources</id>
+               <phase>generate-sources</phase>
+               <configuration>
+                  <tasks>
+                          <echo>Running ant script</echo>
+                          <property name="strategoxt.dir" value="${STRATEGOXT}"/>
+                          <property name="sdf.dir" value="${SDF}"/>
+                          <ant antfile="build.ant.xml" inheritRefs="true">
+                              <target name="bundle-ctree" />
+                          </ant>
+                  </tasks>
+               </configuration>
+               <goals>
+                  <goal>run</goal>
+               </goals>
+       </execution>
+    </executions>
+  </plugin>
+    </plugins>
+</build></project>' >>$POM
+          fi
+        done
+
+        mvn package ${mvnFlags} -e
+        mvn integration-test ${mvnFlags} -e
+      '';
+          
+      installPhase = ''
+        ensureDir $out/nix-support
+        cp -Rv org.strategoxt.imp.updatesite/target/site $out/
+        touch $out/site/index.html
+        cd $out
+        tar cvzf $out/${name}.tar.gz site
+        echo "file site $out/site" >> $out/nix-support/hydra-build-products
+        echo "file tar $out/${name}.tar.gz" >> $out/nix-support/hydra-build-products
+      '';
+
+       __noChroot = true;
+       meta.maintainers = ["lclkats at gmail.com" "m.dejonge at tudelft.nl" "rob.vermaas at gmail.com" "karltk at strategoxt.org" "g.h.wachsmuth at tudelft.nl" "gabrielkonat at gmail.com" "v.vergu at gmail.com"];
+     } ;     
+  } ;
+
+in jobs

From gabrielkonat at gmail.com  Thu Jul 11 19:01:51 2013
From: gabrielkonat at gmail.com (Gabriël Konat)
Date: Thu, 11 Jul 2013 17:01:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r26145 -
	hydra/jobs/spoofax-git
Message-ID: <20130711170151.AF51E108C00A@mx3.tudelft.nl>

Author: gkonat
Date: Thu Jul 11 17:01:51 2013
New Revision: 26145
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=26145&sc=1

Log:
Include strategoxtCVersion in the revCount

Modified:
   hydra/jobs/spoofax-git/spoofax-master.nix

Modified: hydra/jobs/spoofax-git/spoofax-master.nix
==============================================================================
--- hydra/jobs/spoofax-git/spoofax-master.nix	Tue Jul  9 17:08:21 2013	(r26144)
+++ hydra/jobs/spoofax-git/spoofax-master.nix	Thu Jul 11 17:01:51 2013	(r26145)
@@ -36,7 +36,7 @@
       [lpgRuntime.rev jsglr.revCount mbexec.revCount mbexecdeps.revCount mbrep.revCount
         nabl.revCount sdf.revCount esv.revCount aster.revCount box.revCount spx.revCount 
         rtg.revCount stratego.revCount spt.revCount tdl.revCount spoofax.revCount 
-        spoofaxdebug.revCount spoofaxdeploy.revCount spoofaximppatches.revCount strategoxt.revCount 
+        spoofaxdebug.revCount spoofaxdeploy.revCount spoofaximppatches.revCount strategoxt.revCount strategoxtCVersion.revCount
         metaborgRuntime.revCount javaFront.revCount]) ;
 
   pkgs = import nixpkgs { system = "i686-linux"; };

