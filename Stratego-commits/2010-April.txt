From L.C.L.Kats at tudelft.nl  Thu Apr  1 17:14:49 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 01 Apr 2010 15:14:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20746 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
	strc-java/trunk/java
Message-ID: <201004011614.o31GEnp5016495@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-01 15:14:49 +0000 (Thu, 01 Apr 2010)
New Revision: 20746

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20746&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_modification_time.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Match.java
   strc-java/trunk/java/spoofax-libs.jar

Log:
- StrategoXT/806: Matching fails with annotations in interpreter
- Time in milliseconds was wrapped to a negative number; using seconds instead

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_modification_time.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_modification_time.java	2010-03-31 14:36:24 UTC (rev 20745)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_modification_time.java	2010-04-01 15:14:49 UTC (rev 20746)
@@ -37,8 +37,8 @@
         if(f == null)
             return false;
         
-        // FIXME not good
-        env.setCurrent(env.getFactory().makeInt((int)f.lastModified()));
+        long result = f.lastModified() / 1000;
+        env.setCurrent(env.getFactory().makeInt((int) result));
         return true;
     }
 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Match.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Match.java	2010-03-31 14:36:24 UTC (rev 20745)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Match.java	2010-04-01 15:14:49 UTC (rev 20746)
@@ -656,7 +656,7 @@
             DebugUtil.debug("  pattern is Str");
         }
         IStrategoString s = Tools.stringAt(p, 0);
-        if(s.match(t)) {
+        if(s.stringValue().equals(t.stringValue())) {
             return emptyList();
         }
         return null;

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Thu Apr  1 21:11:57 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 01 Apr 2010 19:11:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20747 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	. services
Message-ID: <201004012011.o31KBvsW018719@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-01 19:11:57 +0000 (Thu, 01 Apr 2010)
New Revision: 20747

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20747&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java

Log:
Fixed "Could not determine original file name for parsed string" encountered by Nathan and Zef.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-04-01 15:14:49 UTC (rev 20746)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-04-01 19:11:57 UTC (rev 20747)
@@ -204,6 +204,7 @@
 		IMPJSGLRLibrary impSglrLibrary = new IMPJSGLRLibrary(sglrLibrary);
 		result.addOperatorRegistry(impSglrLibrary);
 		result.addOperatorRegistry(new IMPLibrary());
+		// (all libraries added here must also be in StrategoObserver.initialize())
 		impSglrLibrary.addOverrides(result.getCompiledContext());
 		assert result.getContext().lookupOperator(IMPParseStringPTPrimitive.NAME) instanceof IMPParseStringPTPrimitive;
 		assert result.getCompiledContext().lookupPrimitive(IMPParseStringPTPrimitive.NAME) instanceof IMPParseStringPTPrimitive;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-04-01 15:14:49 UTC (rev 20746)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-04-01 19:11:57 UTC (rev 20747)
@@ -145,6 +145,8 @@
 					IMPJSGLRLibrary.REGISTRY_NAME, // is spoofax-specific
 					JSGLRLibrary.REGISTRY_NAME,    // connected to the library above
 					IMPLibrary.REGISTRY_NAME);     // also used
+			IMPJSGLRLibrary parseLibrary = ((IMPJSGLRLibrary) runtime.getContext().getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME));
+			parseLibrary.addOverrides(runtime.getCompiledContext());
 			return;
 		}
 		



From L.C.L.Kats at tudelft.nl  Tue Apr  6 10:53:24 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 06 Apr 2010 08:53:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20749 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans
	spoofax-imp/trunk/org.strategoxt.imp.feature
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter
	spoofax-imp/trunk/org.strategoxt.imp.updatesite
	strc-java/trunk/java/runtime/org/strategoxt/lang/terms
Message-ID: <201004060953.o369rOsg023929@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-06 08:53:23 +0000 (Tue, 06 Apr 2010)
New Revision: 20749

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20749&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/AbstractOriginPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginEqualPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginStripPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSurroundingCommentsPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTermPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AmbAsfixImploder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixAnalyzer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRToken.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeAppl.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java

Log:
Release 0.4.3:

- Spoofax/11: Stratego API for origin tracking / position information

- Spoofax/79: As an application of Spoofax/11, the Stratego checker now uses
  origin-equals to check for multiple assignments of the same variable
  (I made the Stratego scoping rules a bit stricter for this)

- Spoofax/62: fixed origins for empty lists with Nathan's patch

- Spoofax/77, Spoofax/65: fixed hash code for annotated WrappedAstNodeLink 

- AsfixImploder no longer creates empty tokens for empty layout,
  and splits up normal layout and comments, ensuring better
  syntax error marking and making it easier to extract comments
  
- Improved the asfix imploder's stack consumption (and possibly performance)
  by eliminating AmbAsfixImploder.implodeAppl and inlining
  AsfixImploder.implodeChildAppl()

- Slightly changed closing bracket insertion so they are not inserted
  when an identifier follows after the cursor


Changes (first 1000 lines of the diffs):

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	2010-04-06 08:53:23 UTC (rev 20749)
@@ -106,7 +106,31 @@
     path -> <prim("SSL_EXT_refreshresource", path)>
 
 strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "Stratego-Sugar", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    !Some(<id>); all(s); ?Some(<id>)
 
+strategies
+
   desugar-position(desugar|ast):
     position -> position'
     where

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-04-06 08:53:23 UTC (rev 20749)
@@ -359,7 +359,7 @@
     Scope(v*, s) -> Scope(v*, s')
     with
       {| DeclareCookie:
-        <list-loop({?x; rules(DeclareCookie :- x)})> v*;
+        <list-loop({ sig := (<id>, 0); rules(DeclareCookie :- sig)})> v*;
         s' := <declare-bodies-top> s
       |}
 
@@ -420,9 +420,8 @@
   declare-bodies:
     GuardedLChoice(c, s1, s2) -> GuardedLChoice(c', s1', s2')
     with
-      c' := <declare-bodies-top> c
-    with
-      s1' := <declare-bodies-top> s1
+      ( c' := <declare-bodies-top> c;
+        s1' := <declare-bodies-top> s1)
     \DeclareCookie/
       s2' := <declare-bodies-top> s2
 
@@ -494,7 +493,7 @@
       all-signatures := <filter-by-prefix(|prefix)> <all-keys-DeclareCookie>;
       switch !completion
         case ?Var(_):
-          all-signatures' := <try(filter(?(_, _)); not([]))> all-signatures
+          all-signatures2' := <try(filter(?(_, _)); not([]))> all-signatures
         case ?SVar(_):
           all-signatures' := <filter(?(_, _, _))> all-signatures
         case ?DynRuleScopeId(_):
@@ -504,7 +503,7 @@
         otherwise: // unknown context
           all-signatures' := <filter(not(is-congruence-signature))> all-signatures
       end;
-      proposals := <map(signature-to-proposal)> all-signatures'; // DEBUG
+      proposals := <map(signature-to-proposal)> all-signatures';
       rules(
         ContentProposals := proposals
       )
@@ -658,6 +657,12 @@
       filter(not(?RootApp(_) + ?App(_, _)));
       map(!(<id>, "Build symbol in match pattern")) => builds;
       require([])
+  
+  constraint-warning:
+    Assign(v @ Var(x), _) -> (x, $[Variable '[x]' may be bound already])
+    where
+      Var(x') := <declaration-of> v;
+      require(<origin-equal(|x)> x')
 
   constraint-warning:
     Var(x) -> (x, $[Conflicts with nullary constructor: use '[x]()' instead])

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/desugar.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/desugar.str	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/desugar.str	2010-04-06 08:53:23 UTC (rev 20749)
@@ -64,21 +64,27 @@
     RuleNoCond(t1, t2) -> Rule(t1, t2, [])
 
   basic-desugar:
-    Choice(s1, s2) -> GuardedLChoice(s1, Id(), s2)
+    Choice(s1, s2) -> <try(basic-desugar)> GuardedLChoice(s1, Id(), s2)
 
   basic-desugar:
-    LChoice(s1, s2) -> GuardedLChoice(s1, Id(), s2)
+    LChoice(s1, s2) -> <try(basic-desugar)> GuardedLChoice(s1, Id(), s2)
 
   basic-desugar:
-    RChoice(s1, s2) -> GuardedLChoice(s2, Id(), s1)
+    RChoice(s1, s2) -> <try(basic-desugar)> GuardedLChoice(s2, Id(), s1)
 
   basic-desugar:
-    CondChoice(c, s1, s2) -> GuardedLChoice(Where(c), s1, s2)
+    CondChoice(c, s1, s2) -> <try(basic-desugar)> GuardedLChoice(Where(c), s1, s2)
 
   basic-desugar:
-    IfThen(c, s1) -> GuardedLChoice(Where(c), s1, Id())
+    IfThen(c, s1) -> <try(basic-desugar)> GuardedLChoice(Where(c), s1, Id())
 
   basic-desugar:
+    GuardedLChoice(Where(Not(c)), s1, s2) -> GuardedLChoice(Where(c), s2, s1)
+
+  basic-desugar:
+    GuardedLChoice(Not(c), s1, s2) -> GuardedLChoice(Where(c), s2, s1)
+
+  basic-desugar:
     ToMetaExpr(t) -> ToMetaExpr(<extract-meta-expr-escapes> t)
 
   basic-desugar:
@@ -92,7 +98,18 @@
 
   basic-desugar:
     ToStrategy(t) -> ToStrategy(<extract-meta-expr-escapes> t)
+  
+  basic-desugar:
+    SwitchChoiceNoOtherwise(init, c*) ->
+    <basic-desugar> SwitchChoice(init, c*, Fail())
 
+  basic-desugar:
+    SwitchChoice(init, [SwitchCase(c, s) | c*], o) ->
+    Seq(init, GuardedLChoice(c, s, SwitchChoice(Id(), c*, o)))
+
+  basic-desugar:
+    SwitchChoice(init, [], o) -> Seq(init, o)
+
   // HACK: eliminate embedded languages
   extract-meta-expr-escapes:
     t -> t'

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-06 08:53:23 UTC (rev 20749)
@@ -2,11 +2,14 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.2.1"
+      version="0.4.3"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">
-      Spoofax/IMP metatooling environment
+      The Spoofax/IMP language workbench.
+
+Home page:  http://www.spoofax.org
+Change log: http://strategoxt.org/Spoofax/ChangeLog
    </description>
 
    <copyright url="http://www.lclnet.nl/software/spoofax-imp/">

Copied: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str (from rev 20741, spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	2010-04-06 08:53:23 UTC (rev 20749)
@@ -0,0 +1,226 @@
+module sdf2imp/project/create-common-trans
+
+imports
+  sdf2imp/util/-
+
+strategies
+
+  create-common-trans =
+    name     := <trans-module-name>;
+    sdf-name := <get-sdf-main-module>;
+
+try(<file-exists <+ mkdir> "lib");
+<output-text-file(|["lib"], "editor-common.generated.str")>
+${module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+
+strategies
+
+  parse-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/{sdf-name}.tbl)>
+    )
+
+  parse-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/{sdf-name}.tbl)>
+    )
+  
+  parse-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/{sdf-name}.tbl)>
+    )
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          if <is-newer> (cache-path, path) then
+            file := <ReadFromFile> cache-path
+          else
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          end;
+          ${$| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |$}$
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(resolve-path, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"{"\\\\"}", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "{sdf-name}", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    !Some(<id>); all(s); ?Some(<id>)
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>${$MARKER()$}$|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos(${$?x; desugar; not(?x)$}$)))> ast';
+      position' := <position-of-term({$[{?_{a*}; <one(?MARKER())> a*}]})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  {"" /* TODO: pretty-printer
+  // Pretty prints the {sdf-name} language to a string
+  pp-{name}-string =
+    ast2abox(|[<import-term(include/{sdf-name}.generated.pp.af)>,
+               <import-term(include/{sdf-name}.pp.af)>]);
+    box2text-string(|100)*/
+  }
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/{name}.str file. These definitions should also be automatically 
+  // generated in the imported include/{sdf-name}.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	2010-04-06 08:53:23 UTC (rev 20749)
@@ -184,200 +184,4 @@
     Module(x @ "example", _) -> (x, $[This is just an example program in the "entities" language
                                       (this note is defined in trans/check.str) ])
 }
-end
-
-  create-common-trans =
-    name     := <trans-module-name>;
-    sdf-name := <get-sdf-main-module>;
-
-try(<file-exists <+ mkdir> "lib");
-<output-text-file(|["lib"], "editor-common.generated.str")>
-${module lib/editor-common.generated
-
-imports
-  libstratego-lib
-  libstratego-sglr
-
-strategies
-
-  parse-file =
-    parse-file(
-      strsglr-perror, strsglr-report-parse-error
-    | <import-term(include/{sdf-name}.tbl)>
-    )
-
-  parse-string =
-    parse-string(
-      strsglr-report-parse-error
-    | <import-term(include/{sdf-name}.tbl)>
-    )
-  
-  parse-stream =
-    parse-stream(
-      strsglr-report-parse-error
-    | <import-term(include/{sdf-name}.tbl)>
-    )
-
-strategies
-  
-  /**
-   * Processes an import during semantic analysis.
-   * Ensures proper caching of files and prevents
-   * processing duplicate imports more than once.
-   *
-   * @param resolve-path  Resolves the filesystem path of this import
-   * @param parse-file    Parses a file (optionally removing definition bodies
-   *                      so only signatures are stored in the cache)
-   * @param record-declarations
-   *                      Performs semantic analysis on a tree
-   */
-  open-import(resolve-path, parse-file, record-declarations):
-    import -> import
-    where
-      if not(!import => COMPLETION(_)) then
-        path       := <resolve-path> import;
-        cache-path := <import-cache-path> path;
-        if not(<IsImported> path) then
-          rules(
-            IsImported: path
-          );
-          if <is-newer> (cache-path, path) then
-            file := <ReadFromFile> cache-path
-          else
-            file := <parse-file> path;
-            if <file-exists> path then
-              // Only cache if on filesystem (e.g., ignore libstratego-lib)
-              <WriteToBinaryFile> (cache-path, file)
-            end        
-          end;
-          ${$| CurrentFile:
-            rules(CurrentFile := path);
-            <record-declarations> file
-          |$}$
-        end
-      end
-
-  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
-    import -> import
-    where
-      if not(!import => COMPLETION(_)) then
-        path := <resolve-path> import;
-        readdir;
-        list-loop(
-          if is-source-file then
-            <open-import(resolve-path, parse-file, record-declarations)>
-              $[[path]/[<id>]]
-          <+
-            try(?one-failed)
-          end
-        );
-        not(!one-failed)
-      end
-  
-  import-cache-path:
-    full-path -> cache-path
-    with
-      project-path := <project-path>;
-      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
-      full-path'   := <string-replace(|"/", "+"); string-replace(|"{"\\\\"}", "+"); string-replace(|":", "+")> full-path;
-      cache-path   := $[[cache-dir]/[full-path'].sig]
-
-  project-path = prim("SSL_EXT_projectpath")
-
-  is-newer:
-    (file1, file2) -> <id>
-    where
-      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
-
-strategies
-  
-  editor-init =
-    // Ensure all dynamic rules are properly scoped
-    try(dr-scope-all-end);
-    dr-scope-all-start
-  
-  refresh-workspace-file:
-    path -> <prim("SSL_EXT_refreshresource", path)>
-
-strategies
-
-  desugar-position(desugar|ast):
-    position -> position'
-    where
-      ast'  := <at-position(!<id>${$MARKER()$}$|position)> ast;
-      ast'' := <topdown(repeat(preserve-annos(${$?x; desugar; not(?x)$}$)))> ast';
-      position' := <position-of-term({$[{?_{a*}; <one(?MARKER())> a*}]})> ast''
-   
-  at-position(s|position):
-    c#(t*) -> t'
-    where
-      !position => [i | position']
-    where
-      t' := c#(<at-index(at-position(s|position'))> (i, t*))
-
-  at-position(s|position):
-    t -> t'
-    where
-      !position => [];
-      t' := <s> t
-
-  position-of-term(is-term):
-    t -> []
-    where
-      is-term
-  
-  position-of-term(is-term):
-    _#(t*) -> <position-of-term(is-term|0)> t*
-  
-  position-of-term(is-term|start-index):
-    [t | t*] -> position
-    where
-      if i* := <position-of-term(is-term)> t then
-        position := [start-index | i*]
-      else
-        position := <position-of-term(is-term | <inc> start-index)> t*
-      end
-
-  term-at-position(|position):
-    t -> t'
-    where
-      at-position(?t'|position) 
-
-  parent-at-position(|position):
-    t -> t'
-    where
-      !position => [i, _];
-      t' := <subterm-at(|i)> t
-  
-  parent-at-position(|position):
-    t -> <parent-at-position(|position')> t'
-    where
-      !position => [i | position' @ [_, _ | _]];
-      t' := <subterm-at(|i)> t
-
-  subterm-at(|index):
-    _#(t*) -> <index(|<inc> index)> t*
-  {"" /* TODO: pretty-printer
-  // Pretty prints the {sdf-name} language to a string
-  pp-{name}-string =
-    ast2abox(|[<import-term(include/{sdf-name}.generated.pp.af)>,
-               <import-term(include/{sdf-name}.pp.af)>]);
-    box2text-string(|100)*/
-  }
-signature constructors
-
-  COMPLETION : String -> Term
-  NOCONTEXT  : Term   -> Term
-  MARKER     : Term
-
-  // Below are copies of the signatures of the terms used in example
-  // trans/{name}.str file. These definitions should also be automatically 
-  // generated in the imported include/{sdf-name}.str module. However,
-  // to ensure that the example transformation doesn't break when the
-  // syntax is changed, we also hard-coded them here.
-          
-  Module   : ID * List(Entity)   -> Module
-  Entity   : ID * List(Property) -> Entity
-  Property : ID * Type           -> Property
-  Type     : ID                  -> Type
-}
+end
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str	2010-04-06 08:53:23 UTC (rev 20749)
@@ -30,7 +30,7 @@
           observer: editor-analyze
           ~~
           builder: "Generate Java code"   = generate-java  (openeditor) (realtime)
-          builder: "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta)
+          builder: "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)
           ~~
           on save: generate-java
       ]|

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AmbAsfixImploder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AmbAsfixImploder.java	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AmbAsfixImploder.java	2010-04-06 08:53:23 UTC (rev 20749)
@@ -1,9 +1,9 @@
 package org.strategoxt.imp.runtime.parser.ast;
 
-import static org.spoofax.jsglr.Term.*;
+import static org.spoofax.jsglr.Term.asAppl;
+import static org.spoofax.jsglr.Term.isAppl;
+import static org.spoofax.jsglr.Term.termAt;
 
-import java.util.ArrayList;
-
 import org.strategoxt.imp.runtime.parser.tokens.TokenKindManager;
 
 import aterm.ATerm;
@@ -22,42 +22,6 @@
 		super(tokenManager);
 	}
 	
-	@Override
-	protected AstNode implodeAppl(ATerm term) {
-		// TODO: Stack-optimize AsfixImploder
-		//       crunch long AmbAsfixImploder.implodeAppl->AsfixImploder.implodeAppl->.implodeChildNodes chains
-		//       by eliminating this method and by maybe inlining implodeChildNodes
-		ATermAppl appl = resolveAmbiguities(term);
-		
-		if (appl.getName().equals("amb"))
-			return implodeAmbAppl(appl);
-		else
-			return super.implodeAppl(term);
-	}
-	
-	protected AmbAstNode implodeAmbAppl(ATermAppl node) { 
-		final ATermListImpl ambs = termAt(node, 0);
-		final ArrayList<AstNode> results = new ArrayList<AstNode>();
-		
-		final int oldOffset = offset;
-		final int oldBeginOffset = tokenizer.getStartOffset();
-		final boolean oldLexicalContext = inLexicalContext;
-		
-		for (ATerm amb : ambs) {
-			// Restore lexical state for each branch
-			offset = oldOffset;
-			tokenizer.setStartOffset(oldBeginOffset);
-			inLexicalContext = oldLexicalContext;
-			
-			AstNode result = implodeAppl(amb);
-			if (result == null)
-				return null;
-			results.add(result);
-		}
-		
-		return new AmbAstNode(results);
-	}
-	
 	/**
 	 * Resolve or ambiguities with avoid/prefer annotations.
 	 * 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixAnalyzer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixAnalyzer.java	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixAnalyzer.java	2010-04-06 08:53:23 UTC (rev 20749)
@@ -1,6 +1,7 @@
 package org.strategoxt.imp.runtime.parser.ast;
 
 import static org.spoofax.jsglr.Term.applAt;
+import jjtraveler.Visitable;
 import aterm.ATermAppl;
 
 public class AsfixAnalyzer {
@@ -57,4 +58,11 @@
 		return "varsym".equals(rhs.getName());
 	}
 
+	public static boolean isLexLayout(ATermAppl rhs) {
+		if (rhs.getChildCount() != 1) return false;
+		Visitable child = rhs.getChildAt(0);
+		return child instanceof ATermAppl && "layout".equals(((ATermAppl) child).getName())
+			&& "lex".equals(rhs.getName());
+	}
+
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java	2010-04-06 08:53:23 UTC (rev 20749)
@@ -1,8 +1,13 @@
 package org.strategoxt.imp.runtime.parser.ast;
 
-import static java.lang.Math.*;
-import static org.spoofax.jsglr.Term.*;
-import static org.strategoxt.imp.runtime.parser.tokens.TokenKind.*;
+import static java.lang.Math.max;
+import static org.spoofax.jsglr.Term.applAt;
+import static org.spoofax.jsglr.Term.asAppl;
+import static org.spoofax.jsglr.Term.intAt;
+import static org.spoofax.jsglr.Term.isAppl;
+import static org.spoofax.jsglr.Term.isInt;
+import static org.spoofax.jsglr.Term.termAt;
+import static org.strategoxt.imp.runtime.parser.tokens.TokenKind.TK_LAYOUT;
 
 import java.util.ArrayList;
 
@@ -15,7 +20,6 @@
 import org.strategoxt.imp.runtime.Debug;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.ParseErrorHandler;
-import org.strategoxt.imp.runtime.parser.tokens.SGLRToken;
 import org.strategoxt.imp.runtime.parser.tokens.SGLRTokenizer;
 import org.strategoxt.imp.runtime.parser.tokens.TokenKindManager;
 
@@ -112,16 +116,20 @@
 	 * Implode any appl(_, _).
 	 */
 	protected AstNode implodeAppl(ATerm term) {
+		// Note that this method significantly impacts our stack usage;
+		// method extraction should be carefully considered...
+		
 		ATermAppl appl = resolveAmbiguities(term);
+		if (appl.getName().equals("amb"))
+			return implodeAmbAppl(appl);
+		
 		ATermAppl prod = termAt(appl, APPL_PROD);
 		ATermList lhs = termAt(prod, PROD_LHS);
 		ATermAppl rhs = termAt(prod, PROD_RHS);
 		ATermAppl attrs = termAt(prod, PROD_ATTRS);
 		ATermList contents = termAt(appl, APPL_CONTENTS);
-		ATermList annos = appl.getAnnotations();
-		// TODO: use annos as annotations for resulting terms
-		
 		IToken prevToken = tokenizer.currentToken();
+		int lastOffset = offset;
 		
 		// Enter lexical context if this is a lex node
 		boolean lexicalStart = !inLexicalContext && AsfixAnalyzer.isLexicalNode(rhs);
@@ -129,7 +137,7 @@
 		if (lexicalStart) inLexicalContext = true;
 		
 		if (!inLexicalContext && "sort".equals(rhs.getName()) && lhs.getLength() == 1 && termAt(contents, 0).getType() == ATerm.INT) {
-			return setAnnos(createIntTerminal(contents, rhs), annos);
+			return setAnnos(createIntTerminal(contents, rhs), appl.getAnnotations());
 		}
 		
 		boolean isList = !inLexicalContext && AsfixAnalyzer.isList(rhs);
@@ -137,19 +145,58 @@
 		
 		if (isVar) inLexicalContext = true;
 		
-		// Recurse the tree (and set children if applicable)
-		ArrayList<AstNode> children =
-			implodeChildNodes(contents);
+		ArrayList<AstNode> children = null;
+		if (!inLexicalContext)
+			children = new ArrayList<AstNode>(max(EXPECTED_NODE_CHILDREN, contents.getChildCount()));
+
+		// Recurse
+		for (int i = 0; i < contents.getLength(); i++) {
+			ATerm child = contents.elementAt(i);
+			if (isInt(child)) {
+				consumeLexicalChar((ATermInt) child);
+			} else {
+				AstNode childNode = implodeAppl(child);
+				if (childNode != null) children.add(childNode);
+			}
+		}
 		
 		if (lexicalStart || isVar) {
-			return setAnnos(createStringTerminal(lhs, rhs, attrs), annos);
+			return setAnnos(createStringTerminal(lhs, rhs, attrs), appl.getAnnotations());
 		} else if (inLexicalContext) {
+			// Create separate tokens for >1 char layout lexicals (e.g., comments)
+			if (offset > lastOffset + 1 && AsfixAnalyzer.isLexLayout(rhs)) {
+				tokenizer.makeToken(lastOffset, TK_LAYOUT, false);
+				tokenizer.makeToken(offset, TK_LAYOUT, false);
+			}
 			return null; // don't create tokens inside lexical context; just create one big token at the top
 		} else {
-			return setAnnos(createNodeOrInjection(lhs, rhs, attrs, prevToken, children, isList), annos);
+			return setAnnos(createNodeOrInjection(lhs, rhs, attrs, prevToken, children, isList), appl.getAnnotations());
 		}
 	}
 	
+	protected AmbAstNode implodeAmbAppl(ATermAppl node) { 
+		final ATermListImpl ambs = termAt(node, 0);
+		final ArrayList<AstNode> results = new ArrayList<AstNode>();
+		
+		final int oldOffset = offset;
+		final int oldBeginOffset = tokenizer.getStartOffset();
+		final boolean oldLexicalContext = inLexicalContext;
+		
+		for (ATerm amb : ambs) {
+			// Restore lexical state for each branch
+			offset = oldOffset;
+			tokenizer.setStartOffset(oldBeginOffset);
+			inLexicalContext = oldLexicalContext;
+			
+			AstNode result = implodeAppl(amb);
+			if (result == null)
+				return null;
+			results.add(result);
+		}
+		
+		return new AmbAstNode(results);
+	}
+	
 	private AstNode setAnnos(AstNode node, ATermList annos) {
 		if (node != null && annos != null && !annos.isEmpty()) {
 			IStrategoTerm termAnnos = Environment.getATermConverter().convert(annos);
@@ -158,33 +205,10 @@
 		return node;
 	}
 
-	protected ArrayList<AstNode> implodeChildNodes(ATermList contents) {
-		ArrayList<AstNode> results = inLexicalContext
-				? null
-				: new ArrayList<AstNode>(
-						min(EXPECTED_NODE_CHILDREN, contents.getChildCount()));
-
-		for (int i = 0; i < contents.getLength(); i++) {
-			ATerm child = contents.elementAt(i);
-
-			if (isInt(child)) {
-				consumeLexicalChar((ATermInt) child);
-			} else {
-				// Recurse
-				AstNode childNode = implodeAppl(child);
-
-				if (childNode != null)
-					results.add(childNode);
-			}
-		}
-
-		return results;
-	}
-
 	private AstNode createStringTerminal(ATermList lhs, ATermAppl rhs, ATermAppl attrs) {
 		inLexicalContext = false;
-		IToken token = tokenizer.makeToken(offset, tokenManager.getTokenKind(lhs, rhs), true);
 		String sort = reader.getSort(rhs);
+		IToken token = tokenizer.makeToken(offset, tokenManager.getTokenKind(lhs, rhs), sort != null);
 		
 		if (sort == null) return null;
 		
@@ -284,7 +308,7 @@
 				char c = result.charAt(i);
 				if (c != ' ' && c != '\t') result.setCharAt(i, ' ');
 			}
-			result.append(SGLRToken.toString(startToken, startToken));
+			result.append(startToken.toString());
 			return result.toString();
 		} else {
 			return null; // lazily load token string value

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRToken.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRToken.java	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/tokens/SGLRToken.java	2010-04-06 08:53:23 UTC (rev 20749)
@@ -23,9 +23,14 @@
 	public void setAstNode(AstNode value) {
 		astNode = value;
 	}
+	
+	@Override
+	public String toString() {
+		return toString(this, this);
+	}
 
 	public static String toString(IToken left, IToken right) {
-		ILexStream lex = left.getIPrsStream().getILexStream();
+		ILexStream lex = left.getILexStream();
 		
 		int length = right.getEndOffset() - left.getStartOffset() + 1;
 		StringBuilder result = new StringBuilder(length);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	2010-04-06 08:53:23 UTC (rev 20749)
@@ -1,11 +1,12 @@
 package org.strategoxt.imp.runtime.services;
 
 import static java.lang.Math.min;
+import static org.eclipse.ui.texteditor.ITextEditorExtension3.*;
 import static org.eclipse.ui.texteditor.AbstractDecoratedTextEditorPreferenceConstants.EDITOR_SPACES_FOR_TABS;
 import static org.eclipse.ui.texteditor.AbstractDecoratedTextEditorPreferenceConstants.EDITOR_TAB_WIDTH;
-import static org.eclipse.ui.texteditor.ITextEditorExtension3.SMART_INSERT;
 
 import java.util.regex.Matcher;
+import java.util.regex.Pattern;
 
 import lpg.runtime.IAst;
 import lpg.runtime.IPrsStream;
@@ -188,7 +189,8 @@
 				String openFence = document.get(offset - i, i) + input;
 				String closeFence = getMatchingCloseFence(openFence);
 				if (closeFence != null) {
-					if (isParsedAsLexicalOrLayout(document, offset, input))
+					if (isParsedAsLexicalOrLayout(document, offset, input)
+							|| isIdentifierAfterOffset(document, offset))
 						return false;
 					String lineStart = getLineBeforeOffset(document, offset);
 					closeFence = formatInsertedText(closeFence, lineStart);
@@ -205,7 +207,27 @@
  		}
 		return false;
 	}
+	
+	private boolean isIdentifierAfterOffset(IDocument document, int offset) throws BadLocationException {
+		final int ASSUMED_IDENTIFIER_SIZE = 6;
 
+		if (syntax instanceof SyntaxProperties) {
+			Pattern identifierPattern = ((SyntaxProperties) syntax).getIdentifierLexical();
+		
+			for (int i = offset, max = document.getLength(); i < max; i++) {
+				char c = document.getChar(i);
+				if (c == '\n' || c == '\r')
+					return false;
+				if (Character.isWhitespace(c))
+					continue;
+				int end = min(max, i + ASSUMED_IDENTIFIER_SIZE);
+				String word = document.get(i, end - i);
+				return identifierPattern.matcher(word).lookingAt();
+			}
+		}
+		return false;
+	}
+
 	public static String formatInsertedText(String text, String lineStart) {
 		return text.replace("\\n", "\n" + getIndentation(lineStart, true))
 				.replace("\\t", createIndentationLevel())
@@ -287,7 +309,7 @@
 				&& text.trim().length() > 0;
 	}
 	
-	private static String setIndentation(String text, String indentation) {
+	public static String setIndentation(String text, String indentation) {
 		String oldIndentation = getMultiLineIndentation(text);
 		text = removeIndentation(text, oldIndentation.toCharArray());
 		

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java	2010-04-06 08:53:23 UTC (rev 20749)
@@ -34,8 +34,8 @@
 		synchronizedMap(new HashMap<String, String>());
 	
 	public CustomStrategyBuilder(StrategoObserver observer, EditorState derivedFromEditor) {
-		// TODO: reconsider source = false here?
-		super(observer, "Apply custom rule...", null, true, true, false, false, false, derivedFromEditor);
+		// TODO: reconsider source = true here?
+		super(observer, "Apply custom rule...", null, true, true, false, true, false, derivedFromEditor);
 	}
 	
 	@Override

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	2010-04-01 20:11:16 UTC (rev 20748)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	2010-04-06 08:53:23 UTC (rev 20749)
@@ -195,7 +195,7 @@
 			}
 		} catch (CoreException e) {
 			Environment.logException("Builder failed", e);
-			openError(editor, "Failed (see error log): " + e.getMessage());
+			openError(editor, "Builder failed (" + e.getClass().getName() + "; see error log): " + e.getMessage());
 		}
 	}
 

(636 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Tue Apr  6 12:03:46 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 06 Apr 2010 10:03:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20750 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib
Message-ID: <201004061103.o36B3kPh025363@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-06 10:03:46 +0000 (Tue, 06 Apr 2010)
New Revision: 20750

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20750&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	2010-04-06 08:53:23 UTC (rev 20749)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	2010-04-06 10:03:46 UTC (rev 20750)
@@ -106,7 +106,31 @@
     path -> <prim("SSL_EXT_refreshresource", path)>
 
 strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "SDF", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    !Some(<id>); all(s); ?Some(<id>)
 
+strategies
+
   desugar-position(desugar|ast):
     position -> position'
     where



From L.C.L.Kats at tudelft.nl  Wed Apr  7 10:00:08 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 07 Apr 2010 08:00:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20751 - LennartKats -
	in spoofax-imp/trunk: org.eclipse.imp
	org.strategoxt.imp.editors.stratego/trans org.strategoxt.imp.feature
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.updatesite
Message-ID: <201004070900.o37908Uh008461@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-07 08:00:08 +0000 (Wed, 07 Apr 2010)
New Revision: 20751

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20751&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorerHelper.java
Modified:
   spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Spoofax/34: Syntax highlighting blinks with semantic error markers

Changes:

Modified: spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
===================================================================
--- spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	2010-04-06 10:03:46 UTC (rev 20750)
+++ spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	2010-04-07 08:00:08 UTC (rev 20751)
@@ -122,8 +122,8 @@
  
          if (bigRegion != null) {
 +        	// LK: (no changes, just a comment)
-+        	// No synchronized statement here avoids a deadlock in the colorer implementation,
-+        	// which might need main thread access to create new SWT Color Objects 
++        	// Implicit synchronization here risks a deadlock in the colorer implementation,
++        	// which might need main thread access to create new SWT Color Objects
              fWorkItems.push(bigRegion);
          }
      }
@@ -205,17 +205,18 @@
  import java.util.Iterator;
  import java.util.List;
  import java.util.Map;
-@@ -31,7 +32,9 @@
+@@ -31,7 +32,10 @@
  import org.eclipse.core.runtime.CoreException;
  import org.eclipse.core.runtime.IPath;
  import org.eclipse.core.runtime.IProgressMonitor;
 +import org.eclipse.core.runtime.IStatus;
  import org.eclipse.core.runtime.NullProgressMonitor;
++import org.eclipse.core.runtime.OperationCanceledException;
 +import org.eclipse.core.runtime.Status;
  import org.eclipse.debug.ui.actions.IToggleBreakpointsTarget;
  import org.eclipse.debug.ui.actions.ToggleBreakpointAction;
  import org.eclipse.help.IContextProvider;
-@@ -42,6 +45,7 @@
+@@ -42,6 +46,7 @@
  import org.eclipse.imp.editor.internal.AnnotationCreator;
  import org.eclipse.imp.editor.internal.EditorErrorTickUpdater;
  import org.eclipse.imp.editor.internal.FoldingController;
@@ -223,7 +224,7 @@
  import org.eclipse.imp.editor.internal.ProblemMarkerManager;
  import org.eclipse.imp.editor.internal.ToggleBreakpointsAdapter;
  import org.eclipse.imp.help.IMPHelp;
-@@ -163,6 +167,7 @@
+@@ -163,6 +168,7 @@
  import org.eclipse.ui.editors.text.TextSourceViewerConfiguration;
  import org.eclipse.ui.handlers.IHandlerActivation;
  import org.eclipse.ui.handlers.IHandlerService;
@@ -231,7 +232,7 @@
  import org.eclipse.ui.texteditor.AbstractTextEditor;
  import org.eclipse.ui.texteditor.ContentAssistAction;
  import org.eclipse.ui.texteditor.IEditorStatusLine;
-@@ -240,6 +245,9 @@
+@@ -240,6 +246,9 @@
      private static final String BUNDLE_FOR_CONSTRUCTED_KEYS= MESSAGE_BUNDLE;//$NON-NLS-1$
  
      private static final String IMP_EDITOR_CONTEXT= RuntimePlugin.IMP_RUNTIME + ".imp_editor_context";
@@ -241,7 +242,7 @@
  
      static ResourceBundle fgBundleForConstructedKeys= ResourceBundle.getBundle(BUNDLE_FOR_CONSTRUCTED_KEYS);
  
-@@ -257,6 +265,41 @@
+@@ -257,6 +266,41 @@
          setInsertMode(SMART_INSERT);
          fProblemMarkerManager= new ProblemMarkerManager();
      }
@@ -283,7 +284,7 @@
  
      public Object getAdapter(Class required) {
          if (IContentOutlinePage.class.equals(required)) {
-@@ -697,7 +740,8 @@
+@@ -697,7 +741,8 @@
          IFile file= EditorInputUtils.getFile(editorInput);
          IPath filePath= EditorInputUtils.getPath(editorInput);
          try {
@@ -293,7 +294,7 @@
  
              fLanguageServiceManager.getParseController().initialize(filePath, srcProject, fAnnotationCreator);
          } catch (ModelException e) {
-@@ -1491,6 +1535,7 @@
+@@ -1491,6 +1536,7 @@
              ContentAssistant ca= new ContentAssistant();
              ca.setContentAssistProcessor(fServiceControllerManager.getCompletionProcessor(), IDocument.DEFAULT_CONTENT_TYPE);
              ca.setInformationControlCreator(getInformationControlCreator(sourceViewer));
@@ -301,7 +302,7 @@
              return ca;
          }
  
-@@ -1771,7 +1816,8 @@
+@@ -1771,7 +1817,8 @@
                  if (fServiceControllerManager.getPresentationController() != null) {
  //                  System.out.println("Scheduling repair for damage to region " + damage.getOffset() + ":" + damage.getLength() + " in doc of length " + fDocument.getLength());
                      fServiceControllerManager.getPresentationController().damage(damage);
@@ -311,7 +312,7 @@
  //                      System.out.println("** Forcing repair for hyperlink damage to region " + damage.getOffset() + ":" + damage.getLength() + " in doc of length " + fDocument.getLength());
                          fServiceControllerManager.getPresentationController().update(fLanguageServiceManager.getParseController(), fProgressMonitor);
                      }
-@@ -1845,6 +1891,7 @@
+@@ -1845,6 +1892,7 @@
      }
  
      public IParseController getParseController() {
@@ -319,7 +320,7 @@
          return fLanguageServiceManager.getParseController();
      }
      
-@@ -1861,7 +1908,12 @@
+@@ -1861,7 +1909,12 @@
  		// SMS 25 Apr 2007:  Removing parser annotations here
  		// may not hurt but also doesn't seem to be necessary
  		//removeParserAnnotations();

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-04-06 10:03:46 UTC (rev 20750)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-04-07 08:00:08 UTC (rev 20751)
@@ -23,7 +23,7 @@
       if <file-exists> $[[project-path]/.warn-global-analysis] then
         <debug(!"analysis limited to warnings only: ")> project-path;
         rules(WarnAnalysis: _)
-      end
+    end
     with
       <basic-desugar-top> ast;
       declare-globals-top;
@@ -665,7 +665,7 @@
       require(<origin-equal(|x)> x')
 
   constraint-warning:
-    Var(x) -> (x, $[Conflicts with nullary constructor: use '[x]()' instead])
+    Var(x) -> (x, $[Unparenthesized constructor: use '[x]()' instead])
     where
       require(not(is-constructor))
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-06 10:03:46 UTC (rev 20750)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-07 08:00:08 UTC (rev 20751)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.3"
+      version="0.4.3.2"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	2010-04-06 10:03:46 UTC (rev 20750)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseController.java	2010-04-07 08:00:08 UTC (rev 20751)
@@ -20,6 +20,7 @@
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
+import org.strategoxt.imp.runtime.services.TokenColorerHelper;
 
 /**
  * Dynamic proxy class to a parse controller.
@@ -51,10 +52,12 @@
 	 * in case this is not statically known.
 	 */
 	private Language findLanguage(IPath filePath) {
-		if (lastEditor == null && EditorState.isUIThread())
-			lastEditor = EditorState.getEditorFor(this);
-		if (lastEditor != null)
-			return lastEditor.getLanguage();
+		// Best to not set lastEditor here; only in getWrapped()
+		EditorState editor = lastEditor;
+		if (editor == null && EditorState.isUIThread())
+			editor = EditorState.getEditorFor(this);
+		if (editor != null)
+			return editor.getLanguage();
 		
 		// No active editor; try the registry instead
 		return LanguageRegistry.findLanguage(filePath, null);
@@ -70,10 +73,13 @@
 
 		if (lastEditor == null && EditorState.isUIThread()) {
 			lastEditor = EditorState.getEditorFor(this);
-			Descriptor descriptor = Environment.getDescriptor(getLanguage());
-			ContentProposerFactory.eagerInit(descriptor, result, lastEditor);
-			AutoEditStrategyFactory.eagerInit(descriptor, result, lastEditor);
-			OnSaveServiceFactory.eagerInit(descriptor, result, lastEditor);
+			if (lastEditor != null) {
+				Descriptor descriptor = Environment.getDescriptor(getLanguage());
+				ContentProposerFactory.eagerInit(descriptor, result, lastEditor);
+				AutoEditStrategyFactory.eagerInit(descriptor, result, lastEditor);
+				OnSaveServiceFactory.eagerInit(descriptor, result, lastEditor);
+				TokenColorerHelper.register(lastEditor, (SGLRParseController) result);
+			}
 		}
 		return result;
 	}
@@ -136,6 +142,8 @@
 	
 	@Override
 	public void reinitialize(Descriptor newDescriptor) throws BadDescriptorException {
+		if (isInitialized() && getLastEditor() != null)
+			TokenColorerHelper.unregister(getLastEditor());
 		super.reinitialize(newDescriptor);
 		isReinitialized = true;
 		if (lastEditor != null) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-04-06 10:03:46 UTC (rev 20750)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-04-07 08:00:08 UTC (rev 20751)
@@ -25,6 +25,7 @@
 import org.eclipse.imp.services.IAnnotationTypeInfo;
 import org.eclipse.imp.services.ILanguageSyntaxProperties;
 import org.eclipse.jface.text.IRegion;
+import org.eclipse.jface.text.ITextPresentationListener;
 import org.eclipse.jface.text.Region;
 import org.spoofax.jsglr.BadTokenException;
 import org.spoofax.jsglr.InvalidParseTableException;
@@ -90,6 +91,8 @@
 	
 	private Exception unmanagedParseTableMismatch;
 	
+	private ITextPresentationListener colorerBlocker;
+	
 	private volatile boolean isStartupParsed;
 	
 	private volatile boolean disallowColorer;
@@ -414,22 +417,23 @@
 	 * Gets the token iterator for this parse controller. The current
 	 * implementation assumes it is only used for syntax highlighting.
 	 * 
-	 * @return The token iterator, or an empty token iterator if coloring is not
-	 *         allowed or no parse stream is available the time of invocation
+	 * @return The token iterator, or an empty token iterator
+	 * 
+	 * @throws OperationCanceledException
+	 *             Thrown if coloring is not allowed or no parse stream is
+	 *             available at the time of invocation.
 	 */
 	public Iterator<IToken> getTokenIterator(IRegion region) {
 		return getTokenIterator(region, false);
 	}
 	
-	
 	public Iterator<IToken> getTokenIterator(IRegion region, boolean force) {
 		// Threading concerns:
 		// - the colorer runs in the main thread and should not be blocked by ANY lock
 		// - CANNOT acquire parse lock:
 		//   - a parser thread with a parse lock may forceRecolor(), acquiring the colorer queue lock 
-		//   - a parser thread with a parse lock may need main thread acess to report locks
+		//   - a parser thread with a parse lock may need main thread acess to report errors
 		
-		
 		IPrsStream stream = currentParseStream;
 		
 		if (!force && (stream == null || disallowColorer || (editor != null && stream.getILexStream().getStreamLength() != editor.getDocument().getLength()))) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java	2010-04-06 10:03:46 UTC (rev 20750)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java	2010-04-07 08:00:08 UTC (rev 20751)
@@ -24,7 +24,11 @@
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IMarker;
 import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IWorkspace;
+import org.eclipse.core.resources.IWorkspaceRunnable;
+import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.core.runtime.NullProgressMonitor;
 import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.imp.parser.IMessageHandler;
@@ -61,7 +65,15 @@
 	
 	private final String markerType;
 
-	private final Set<IMarker> asyncActiveMarkers = new HashSet<IMarker>();
+	/**
+	 * A set of all active markers.
+	 * Should be locked using synchronized(asyncActiveMarkers),
+	 * but care should be taken not to acquire workspace locks
+	 * (as done by setAttributes()) or wait for the main thread
+	 * (as done by some other attribute methods) when in a
+	 * synchronized lock.
+	 */
+	private volatile Set<IMarker> asyncActiveMarkers = new HashSet<IMarker>();
 	
 	private final Map<MarkerSignature, IMarker> markersToReuse = new HashMap<MarkerSignature, IMarker>();
 	
@@ -222,21 +234,26 @@
 	 * @see #commitAllChanges()  To commit the changes made by this action.
 	 */
 	public void clearAllMarkers() {
+		// Copy the active markers so we only need to synchronize here,
+		// and not in the loop (risking deadlocks)
+		Set<IMarker> toDelete;
 		synchronized (asyncActiveMarkers) {
-			for (IMarker marker : asyncActiveMarkers) {
-				try {
-					markersToReuse.put(new MarkerSignature(marker), marker);
-					for (IMarker otherMarker : marker.getResource().findMarkers(markerType, true, 0)) {
-						IMarker dupe = markersToReuse.put(new MarkerSignature(otherMarker), otherMarker);
-						if (dupe != null) markersToDelete.add(dupe);
-					}
-				} catch (CoreException e) {
-					Environment.logException("Unable find related markers: " + marker, e);
+			toDelete = asyncActiveMarkers;
+			asyncActiveMarkers = null;
+		}
+		
+		for (IMarker marker : toDelete) {
+			try {
+				markersToReuse.put(new MarkerSignature(marker), marker);
+				for (IMarker otherMarker : marker.getResource().findMarkers(markerType, true, 0)) {
+					IMarker dupe = markersToReuse.put(new MarkerSignature(otherMarker), otherMarker);
+					if (dupe != null) markersToDelete.add(dupe);
 				}
+			} catch (CoreException e) {
+				Environment.logException("Unable find related markers: " + marker, e);
 			}
-			asyncActiveMarkers.clear();
-			markersToAdd.clear();
 		}
+		markersToAdd.clear();
 	}
 	
 	/**
@@ -266,8 +283,12 @@
 	 * deletes markers as instructed using clearMarkers().
 	 */
 	public void commitAllChanges() {
-		commitAdditions();
-		commitDeletions();
+		runInWorkspace(new Runnable() {
+			public void run() {
+				commitAdditions();
+				commitDeletions();
+			}
+		});
 	}
 
 	/**
@@ -275,10 +296,14 @@
 	 */
 	public void commitDeletions() {
 		try {
-			deleteMarkers(markersToReuse.values());
-			markersToReuse.clear();
-			deleteMarkers(markersToDelete);
-			markersToDelete.clear();
+			runInWorkspace(new Runnable() {
+				public void run() {
+					deleteMarkers(markersToReuse.values());
+					markersToReuse.clear();
+					deleteMarkers(markersToDelete);
+					markersToDelete.clear();
+				}
+			});
 		} catch (RuntimeException e) {
 			Environment.logException("Unable to clear markers", e);
 		}
@@ -286,19 +311,34 @@
 	
 	/**
 	 * Commit any newly added error markers that are on lines with 
-	 * that previously had or currently have other error markers\
+	 * that previously had or currently have other error markers
 	 * (these should typically not be displayed using a delay).
 	 * 
 	 * If this method is not called, multi-error line markers will still be
 	 * added by {@link #commitAdditions()}.
 	 */
 	public void commitMultiErrorLineAdditions() {
+		runInWorkspace(new Runnable() {
+			public void run() {
+				commitMultiErrorLineAdditionsInWS();
+			}
+		});
+	}
+	
+	private void commitMultiErrorLineAdditionsInWS() {	
 		assert !Thread.holdsLock(asyncActiveMarkers) : "Potential deadlock: need main thread access for markers";
+
+		// Clone active markers so we only need to synchronize here
+		// and not in markerExistsOnSameLine
+		Set<IMarker> activeMarkers;
+		synchronized (asyncActiveMarkers) {
+			activeMarkers = new HashSet<IMarker>(asyncActiveMarkers);
+		}
 		
 		Iterator<MarkerSignature> signatures = markersToAdd.iterator();
 		while (signatures.hasNext()) {
 			MarkerSignature signature = signatures.next();
-			if (markerExistsOnSameLine(signature)) {
+			if (markerExistsOnSameLine(signature, activeMarkers)) {
 				try {
 					IMarker marker = signature.getResource().createMarker(markerType);
 					marker.setAttributes(signature.getAttributes(), signature.getValues());
@@ -313,31 +353,29 @@
 		}
 	}
 	
-	private boolean markerExistsOnSameLine(MarkerSignature signature) {
+	private boolean markerExistsOnSameLine(MarkerSignature signature, Set<IMarker> activeMarkers) {
 		// TODO: optimize markerExistsOnSameLine()?
-		synchronized (asyncActiveMarkers) {
-			IResource resource = signature.getResource();
-			int line = signature.getLine();
-			for (IMarker marker : asyncActiveMarkers) {
-				if (marker.getResource().equals(resource)
-						&& marker.getAttribute(IMarker.LINE_NUMBER, -1) == line) {
-					return true;
-				}
+		IResource resource = signature.getResource();
+		int line = signature.getLine();
+		for (IMarker marker : activeMarkers) {
+			if (marker.getResource().equals(resource)
+					&& marker.getAttribute(IMarker.LINE_NUMBER, -1) == line) {
+				return true;
 			}
-			for (IMarker marker : markersToReuse.values()) {
-				if (marker.getResource().equals(resource)
-						&& marker.getAttribute(IMarker.LINE_NUMBER, -1) == line) {
-					return true;
-				}
+		}
+		for (IMarker marker : markersToReuse.values()) {
+			if (marker.getResource().equals(resource)
+					&& marker.getAttribute(IMarker.LINE_NUMBER, -1) == line) {
+				return true;
 			}
-			for (IMarker marker : markersToDelete) {
-				if (marker.getResource().equals(resource)
-						&& marker.getAttribute(IMarker.LINE_NUMBER, -1) == line) {
-					return true;
-				}
+		}
+		for (IMarker marker : markersToDelete) {
+			if (marker.getResource().equals(resource)
+					&& marker.getAttribute(IMarker.LINE_NUMBER, -1) == line) {
+				return true;
 			}
-			return false;
 		}
+		return false;
 	}
 	
 	/**
@@ -352,7 +390,7 @@
 	/**
 	 * Commit any newly added error markers.
 	 * Can be invoked asynchronously, but care should be taken
-	 * that only one thread can access the input list. 
+	 * that only one thread can access the 'markers' input list. 
 	 */
 	public List<IMarker> asyncCommitAdditions(List<MarkerSignature> markers) {
 		Environment.assertNotMainThread();
@@ -361,7 +399,21 @@
 		return commitAdditions(markers);
 	}
 
-	private List<IMarker> commitAdditions(List<MarkerSignature> markers) {
+	private List<IMarker> commitAdditions(final List<MarkerSignature> markers) {
+		class Action implements Runnable {
+			List<IMarker> results;
+			
+			public void run() {
+				results = commitAdditionsInWS(markers);
+			}
+		};
+		
+		Action action = new Action();
+		runInWorkspace(action);
+		return action.results;
+	}
+
+	private List<IMarker> commitAdditionsInWS(List<MarkerSignature> markers) {
 		assert !Environment.isMainThread() || !Thread.holdsLock(asyncActiveMarkers) : "Potential deadlock"; 
 
 		List<IMarker> results = new ArrayList<IMarker>();
@@ -409,6 +461,18 @@
 	public List<MarkerSignature> getAdditions() {
 		return markersToAdd;
 	}
+	
+	private static void runInWorkspace(final Runnable action) {
+		try {
+			ResourcesPlugin.getWorkspace().run(new IWorkspaceRunnable() {
+				public void run(IProgressMonitor monitor) throws CoreException {
+					action.run();
+				}
+			}, null, IWorkspace.AVOID_UPDATE, new NullProgressMonitor());
+		} catch (CoreException e) {
+			Environment.logException("Exception in message handler", e);
+		}
+	}
 
 	/**
 	 * Force editor recoloring events to be processed,

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java	2010-04-06 10:03:46 UTC (rev 20750)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorer.java	2010-04-07 08:00:08 UTC (rev 20751)
@@ -179,6 +179,7 @@
 		
 		// Always damage the complete source
 		// TODO: Is always damaging the complete source still necessary??
+		// Right now, TokenColorerHelper.isParserBasedPresentation() depends on this property
 		IAst ast = (IAst) parseController.getCurrentAst();
 		return new Region(0, ast.getRightIToken().getIPrsStream().getILexStream().getStreamLength() - 1);
 		// return seed;

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorerHelper.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorerHelper.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TokenColorerHelper.java	2010-04-07 08:00:08 UTC (rev 20751)
@@ -0,0 +1,63 @@
+package org.strategoxt.imp.runtime.services;
+
+import static java.util.Collections.synchronizedMap;
+
+import java.util.Map;
+import java.util.WeakHashMap;
+
+import org.eclipse.jface.text.ITextPresentationListener;
+import org.eclipse.jface.text.ITextViewerExtension4;
+import org.eclipse.jface.text.TextPresentation;
+import org.eclipse.jface.text.source.ISourceViewer;
+import org.eclipse.swt.custom.StyleRange;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.parser.SGLRParseController;
+
+/**
+ * This class cancels any presentation update events
+ * that occur before the parser completes.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class TokenColorerHelper implements ITextPresentationListener {
+	
+	private static Map<ISourceViewer, TokenColorerHelper> helpers =
+		synchronizedMap(new WeakHashMap<ISourceViewer, TokenColorerHelper>());
+	
+	private TokenColorerHelper(SGLRParseController controller) {
+		// Not using controller atm
+	}
+	
+	public static void register(EditorState editor, SGLRParseController controller) {
+		ISourceViewer viewer = editor.getEditor().getServiceControllerManager().getSourceViewer();
+		if (helpers.get(viewer) == null && viewer instanceof ITextViewerExtension4) {
+			TokenColorerHelper listener = new TokenColorerHelper(controller);
+			((ITextViewerExtension4) viewer).addTextPresentationListener(listener);
+			helpers.put(viewer, listener);
+		}
+	}
+	
+	public static void unregister(EditorState editor) {
+		ISourceViewer viewer = editor.getEditor().getServiceControllerManager().getSourceViewer();
+		ITextPresentationListener listener = helpers.remove(viewer);
+		if (listener != null)
+			((ITextViewerExtension4) viewer).removeTextPresentationListener(listener);
+	}
+	
+	public void applyTextPresentation(TextPresentation presentation) {
+		if (!isParserBasedPresentation(presentation))
+			presentation.clear();
+	}
+
+	/**
+	 * Determines if a presentation is based on the result of the parser,
+	 * or if it is just an intermediate presentation before the parser runs.
+	 */
+	private static boolean isParserBasedPresentation(TextPresentation presentation) {
+		if (presentation.isEmpty())
+			return false;
+		StyleRange last = presentation.getLastStyleRange();
+		StyleRange first = presentation.getFirstStyleRange();
+		return first.start == 0 && last.start + last.length >= presentation.getExtent().getLength();
+	}
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-06 10:03:46 UTC (rev 20750)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-07 08:00:08 UTC (rev 20751)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.3.jar" id="org.strategoxt.imp" version="0.4.3">
+   <feature url="features/org.strategoxt.imp_0.4.3.2.jar" id="org.strategoxt.imp" version="0.4.3.2">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Wed Apr  7 14:20:04 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 07 Apr 2010 12:20:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20752 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter
Message-ID: <201004071320.o37DK4Gp012227@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-07 12:20:04 +0000 (Wed, 07 Apr 2010)
New Revision: 20752

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20752&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java

Log:
Simplified WrappedAstNodeLink to eliminate further problems related to Spoofax/65 and Spoofax/77.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java	2010-04-07 08:00:08 UTC (rev 20751)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java	2010-04-07 12:20:04 UTC (rev 20752)
@@ -11,6 +11,7 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.IStrategoTuple;
 import org.spoofax.interpreter.terms.ITermPrinter;
+import org.strategoxt.lang.terms.StrategoTerm;
 import org.strategoxt.lang.terms.TermFactory;
 
 /**
@@ -61,19 +62,7 @@
 
 	@Override
 	protected boolean doSlowMatch(IStrategoTerm second, int commonStorageType) {
-		IStrategoTerm wrapped = getWrapped();
-		IStrategoList annotations = getAnnotations();
-		IStrategoList secondAnnotations = second.getAnnotations();
-		
-		if (annotations != secondAnnotations && !annotations.match(secondAnnotations))
-        	return false;
-		
-		if (annotations.isEmpty()) {
-			return wrapped.match(second);
-		} else {
-			second = factory.annotateTerm(second, TermFactory.EMPTY_LIST);
-			return wrapped.match(second);
-		}
+		return wrapped == second || wrapped.match(this);
 	}
 
 	@Override



From L.C.L.Kats at tudelft.nl  Thu Apr  8 11:12:57 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 08 Apr 2010 09:12:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20753 - LennartKats -
	in spoofax-imp/trunk: org.eclipse.imp
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201004081012.o38ACvgC026659@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-08 09:12:57 +0000 (Thu, 08 Apr 2010)
New Revision: 20753

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20753&view=rev

Modified:
   spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java

Log:
Spoofax/80: Configuring indentation levels does not work

Changes:

Modified: spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
===================================================================
--- spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	2010-04-07 12:20:04 UTC (rev 20752)
+++ spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	2010-04-08 09:12:57 UTC (rev 20753)
@@ -197,7 +197,13 @@
 ===================================================================
 --- org.eclipse.imp.runtime/src/org/eclipse/imp/editor/UniversalEditor.java	(revision 22255)
 +++ org.eclipse.imp.runtime/src/org/eclipse/imp/editor/UniversalEditor.java	(working copy)
-@@ -15,6 +15,7 @@
+@@ -11,10 +11,13 @@
+ 
+ package org.eclipse.imp.editor;
+ 
++import static org.eclipse.ui.texteditor.AbstractDecoratedTextEditorPreferenceConstants.EDITOR_TAB_WIDTH;
++
+ import java.lang.reflect.InvocationTargetException;
  import java.lang.reflect.Method;
  import java.util.ArrayList;
  import java.util.HashMap;
@@ -205,7 +211,7 @@
  import java.util.Iterator;
  import java.util.List;
  import java.util.Map;
-@@ -31,7 +32,10 @@
+@@ -31,7 +34,10 @@
  import org.eclipse.core.runtime.CoreException;
  import org.eclipse.core.runtime.IPath;
  import org.eclipse.core.runtime.IProgressMonitor;
@@ -216,7 +222,7 @@
  import org.eclipse.debug.ui.actions.IToggleBreakpointsTarget;
  import org.eclipse.debug.ui.actions.ToggleBreakpointAction;
  import org.eclipse.help.IContextProvider;
-@@ -42,6 +46,7 @@
+@@ -42,6 +48,7 @@
  import org.eclipse.imp.editor.internal.AnnotationCreator;
  import org.eclipse.imp.editor.internal.EditorErrorTickUpdater;
  import org.eclipse.imp.editor.internal.FoldingController;
@@ -224,7 +230,7 @@
  import org.eclipse.imp.editor.internal.ProblemMarkerManager;
  import org.eclipse.imp.editor.internal.ToggleBreakpointsAdapter;
  import org.eclipse.imp.help.IMPHelp;
-@@ -163,6 +168,7 @@
+@@ -163,6 +170,7 @@
  import org.eclipse.ui.editors.text.TextSourceViewerConfiguration;
  import org.eclipse.ui.handlers.IHandlerActivation;
  import org.eclipse.ui.handlers.IHandlerService;
@@ -232,7 +238,7 @@
  import org.eclipse.ui.texteditor.AbstractTextEditor;
  import org.eclipse.ui.texteditor.ContentAssistAction;
  import org.eclipse.ui.texteditor.IEditorStatusLine;
-@@ -240,6 +246,9 @@
+@@ -240,6 +248,9 @@
      private static final String BUNDLE_FOR_CONSTRUCTED_KEYS= MESSAGE_BUNDLE;//$NON-NLS-1$
  
      private static final String IMP_EDITOR_CONTEXT= RuntimePlugin.IMP_RUNTIME + ".imp_editor_context";
@@ -242,7 +248,7 @@
  
      static ResourceBundle fgBundleForConstructedKeys= ResourceBundle.getBundle(BUNDLE_FOR_CONSTRUCTED_KEYS);
  
-@@ -257,6 +266,41 @@
+@@ -257,6 +268,41 @@
          setInsertMode(SMART_INSERT);
          fProblemMarkerManager= new ProblemMarkerManager();
      }
@@ -284,7 +290,7 @@
  
      public Object getAdapter(Class required) {
          if (IContentOutlinePage.class.equals(required)) {
-@@ -697,7 +741,8 @@
+@@ -697,7 +743,8 @@
          IFile file= EditorInputUtils.getFile(editorInput);
          IPath filePath= EditorInputUtils.getPath(editorInput);
          try {
@@ -294,7 +300,22 @@
  
              fLanguageServiceManager.getParseController().initialize(filePath, srcProject, fAnnotationCreator);
          } catch (ModelException e) {
-@@ -1491,6 +1536,7 @@
+@@ -1470,7 +1517,13 @@
+         public int getTabWidth(ISourceViewer sourceViewer) {
+             boolean langSpecificSetting= fLangSpecificPrefs != null && fLangSpecificPrefs.isDefined(PreferenceConstants.P_TAB_WIDTH);
+ 
+-            return langSpecificSetting ? fLangSpecificPrefs.getIntPreference(PreferenceConstants.P_TAB_WIDTH) : PreferenceCache.tabWidth;
++            if (langSpecificSetting) {
++            	return fLangSpecificPrefs.getIntPreference(PreferenceConstants.P_TAB_WIDTH);
++            } else {
++            	// LK: instead of using PreferenceCache.tabWidth, use one of the language-generic settings of Eclipse
++        		IPreferenceStore preferences = getThePreferenceStore();
++        		return preferences.getInt(EDITOR_TAB_WIDTH);
++            }
+         }
+ 
+         public IPresentationReconciler getPresentationReconciler(ISourceViewer sourceViewer) {
+@@ -1491,6 +1544,7 @@
              ContentAssistant ca= new ContentAssistant();
              ca.setContentAssistProcessor(fServiceControllerManager.getCompletionProcessor(), IDocument.DEFAULT_CONTENT_TYPE);
              ca.setInformationControlCreator(getInformationControlCreator(sourceViewer));
@@ -302,7 +323,7 @@
              return ca;
          }
  
-@@ -1771,7 +1817,8 @@
+@@ -1771,7 +1825,8 @@
                  if (fServiceControllerManager.getPresentationController() != null) {
  //                  System.out.println("Scheduling repair for damage to region " + damage.getOffset() + ":" + damage.getLength() + " in doc of length " + fDocument.getLength());
                      fServiceControllerManager.getPresentationController().damage(damage);
@@ -312,7 +333,7 @@
  //                      System.out.println("** Forcing repair for hyperlink damage to region " + damage.getOffset() + ":" + damage.getLength() + " in doc of length " + fDocument.getLength());
                          fServiceControllerManager.getPresentationController().update(fLanguageServiceManager.getParseController(), fProgressMonitor);
                      }
-@@ -1845,6 +1892,7 @@
+@@ -1845,6 +1900,7 @@
      }
  
      public IParseController getParseController() {
@@ -320,7 +341,7 @@
          return fLanguageServiceManager.getParseController();
      }
      
-@@ -1861,7 +1909,12 @@
+@@ -1861,7 +1917,12 @@
  		// SMS 25 Apr 2007:  Removing parser annotations here
  		// may not hurt but also doesn't seem to be necessary
  		//removeParserAnnotations();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	2010-04-07 12:20:04 UTC (rev 20752)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	2010-04-08 09:12:57 UTC (rev 20753)
@@ -318,8 +318,9 @@
 
 	private static String removeIndentation(String text, char[] indentation) {
 		StringBuilder result = new StringBuilder();
+		int tabWidth = getTabWidth();
 		for (String line : text.split("\n")) {
-			result.append(removeSingleLineIndentation(line, indentation) + "\n");
+			result.append(removeSingleLineIndentation(line, indentation, tabWidth) + "\n");
 		}
 		result.deleteCharAt(result.length() - 1);
 		
@@ -327,7 +328,7 @@
 		return text;
 	}
 
-	private static String removeSingleLineIndentation(String line, char[] indentation) {
+	private static String removeSingleLineIndentation(String line, char[] indentation, int tabWidth) {
 		int lineOffset = 0;
 		for (char charToStrip : indentation) {
 			if (lineOffset == line.length())
@@ -337,7 +338,7 @@
 					lineOffset++;
 				} else {
 					// TODO: Better support for mixed tabs and spaces when pasting text?
-					for (int i = 0; i < PreferenceCache.tabWidth; i++) {
+					for (int i = 0; i < tabWidth; i++) {
 						if (line.charAt(lineOffset) != ' ')
 							break;
 						lineOffset++;
@@ -375,15 +376,19 @@
 	}
 
 	private static String createSpacesIndentationLevel() {
-		IPreferenceStore preferences = lastEditor.getThePreferenceStore();
 		StringBuilder result = new StringBuilder();
-		int tabWidth = preferences.getInt(EDITOR_TAB_WIDTH); // PreferenceCache.tabWidth;
+		int tabWidth = getTabWidth();
 		for (int i = 0; i < tabWidth; i++) {
 			result.append(' ');
 		}
 		return result.toString();
 	}
 	
+	private static int getTabWidth() {
+		IPreferenceStore preferences = lastEditor.getThePreferenceStore();
+		return preferences.getInt(EDITOR_TAB_WIDTH); // PreferenceCache.tabWidth;
+	}
+	
 	private static String getIndentation(String line) {
 		return getIndentation(line, false);
 	}



From L.C.L.Kats at tudelft.nl  Thu Apr  8 11:14:41 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 08 Apr 2010 09:14:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20754 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter
	org.strategoxt.imp.updatesite
Message-ID: <201004081014.o38AEfjg026676@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-08 09:14:41 +0000 (Thu, 08 Apr 2010)
New Revision: 20754

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20754&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNode.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeList.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeParent.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Revised the way origin tracking works for lists. Now Cons nodes are no longer origin tracked. Also fixed annotations disappearing on Cons nodes (Spoofax/62).

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-08 09:12:57 UTC (rev 20753)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-08 09:14:41 UTC (rev 20754)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.3.2"
+      version="0.4.3.3"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNode.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNode.java	2010-04-08 09:12:57 UTC (rev 20753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNode.java	2010-04-08 09:14:41 UTC (rev 20754)
@@ -17,8 +17,12 @@
 		return node;
 	}
 	
-	protected WrappedAstNode(IStrategoAstNode node) {
-		super(null);
+	public WrappedAstNode(IStrategoAstNode node) {
+		this(node, null);
+	}
+	
+	public WrappedAstNode(IStrategoAstNode node, IStrategoList annotations) {
+		super(annotations);
 		this.node = node;
 		assert node != null;
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java	2010-04-08 09:12:57 UTC (rev 20753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java	2010-04-08 09:14:41 UTC (rev 20754)
@@ -99,22 +99,29 @@
 	public IStrategoTerm makeLink(IStrategoTerm term, IWrappedAstNode origin) {
 		if (term.getTermType() == LIST && term.getSubtermCount() == origin.getSubtermCount()
 				&& origin.getTermType() == LIST) {
-			return replaceList((IStrategoList) term, (IStrategoList) origin);
+			return makeListLink((IStrategoList) term, (IStrategoList) origin);
 		} else {
 			return new WrappedAstNodeLink(this, term, origin);
 		}
 	}
 	
+	/**
+	 * Replaces all subterms in a list,
+	 * maintaining only the outer annotations.
+	 */
 	private IStrategoList replaceList(IStrategoTerm[] terms, int index, IStrategoList old, IStrategoList annos) {
 		if (index == terms.length) {
 			assert old.isEmpty();
-			return EMPTY_LIST; // we don't bother linking empty lists	 
+			 // we don't bother linking empty lists
+			return annos == null
+				? EMPTY_LIST
+				: (IStrategoList) annotateTerm(EMPTY_LIST, annos); 
 		} else {
 			IStrategoTerm head = ensureLink(terms[index], old.head());
 			IStrategoList tail = replaceList(terms, index + 1, old.tail(), null);
 			if (old instanceof WrappedAstNodeList) {
 				WrappedAstNodeList oldList = (WrappedAstNodeList) old;
-				return new WrappedAstNodeList(oldList.getNode(), oldList.getOffset(), head, tail);
+				return new WrappedAstNodeList(oldList.getNode(), oldList.getOffset(), head, tail, annos);
 			} else {
 				// UNDONE: assert !(old instanceof IWrappedAstNode);
 				return makeListCons(head, tail, annos);
@@ -122,26 +129,33 @@
 		}
 	}
 	
-	private IStrategoList replaceList(IStrategoList terms, IStrategoList old) {
-		if (terms.isEmpty()) {
+	/**
+	 * Adds origin tracking information to all subterms of a list.
+	 * May add origin tracking information to list Cons nodes.
+	 */
+	private IStrategoList makeListLink(IStrategoList terms, IStrategoList old) {
+		if (terms instanceof IWrappedAstNode) {
+			assert terms.getStorageType() != MUTABLE; // children will be wrapped as well
+			return terms;
+		} else if (terms.isEmpty()) {
 			assert old.isEmpty();
 			// We don't bother linking empty lists
-			IStrategoList annos = terms.getAnnotations();
-			if (annos == EMPTY_LIST) {
-				return EMPTY_LIST;
-			} else {
-				return (IStrategoList) annotateTerm(EMPTY_LIST, annos);
-			} 
+			return terms;
 		} else {
-			IStrategoTerm head = ensureLink(terms.head(), old.head());
-			IStrategoList tail = replaceList(terms.tail(), old.tail());
+			IStrategoTerm head = terms.head();
+			IStrategoList tail = terms.tail();
+			IStrategoTerm newHead = ensureLink(head, old.head());
+			IStrategoList newTail = makeListLink(tail, old.tail());
+			
+			/* UNDONE: Origin tracking for Cons nodes
+			           (relatively expensive, and who cares about them?)
 			if (old instanceof WrappedAstNodeList) {
 				WrappedAstNodeList oldList = (WrappedAstNodeList) old;
-				return new WrappedAstNodeList(oldList.getNode(), oldList.getOffset(), head, tail);
-			} else {
-				// UNDONE: assert !(old instanceof IWrappedAstNode);
-				return makeListCons(head, tail);
+				return new WrappedAstNodeList(oldList.getNode(), oldList.getOffset(), head, tail, terms.getAnnotations());
 			}
+			*/
+			if (head == newHead && tail == newTail) return terms;
+			return makeListCons(newHead, newTail);
 		}
 	}
 	
@@ -165,6 +179,7 @@
 	
 	protected IStrategoTerm ensureLink(IStrategoTerm term, IStrategoTerm oldTerm) {
 		if (term instanceof IWrappedAstNode) {
+			assert term.getStorageType() != MUTABLE; // children will be wrapped as well
 			return term;
 		} else if (oldTerm instanceof IWrappedAstNode) {
 			return makeLink(term, (IWrappedAstNode) oldTerm);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java	2010-04-08 09:12:57 UTC (rev 20753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java	2010-04-08 09:14:41 UTC (rev 20754)
@@ -11,8 +11,6 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.IStrategoTuple;
 import org.spoofax.interpreter.terms.ITermPrinter;
-import org.strategoxt.lang.terms.StrategoTerm;
-import org.strategoxt.lang.terms.TermFactory;
 
 /**
  * A wrapper class linking any {@link IStrategoTerm} to an {@link IAst} node.
@@ -30,11 +28,10 @@
 	private final IStrategoTerm wrapped;
 	
 	protected WrappedAstNodeLink(WrappedAstNodeFactory factory, IStrategoTerm term, IWrappedAstNode origin) {
-		super(origin.getNode());
+		super(origin.getNode(), term.getAnnotations());
 		this.factory = factory;
 		this.wrapped = term;
 		this.origin = origin;
-		internalSetAnnotations(term.getAnnotations());
 		
 		assert !(wrapped instanceof IWrappedAstNode) : "Already wrapped";
 		assert wrapped.getTermType() != LIST || origin.getTermType() != LIST

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeList.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeList.java	2010-04-08 09:12:57 UTC (rev 20753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeList.java	2010-04-08 09:14:41 UTC (rev 20754)
@@ -33,8 +33,8 @@
 	/**
 	 * Creates a new WrappedAstNodeList with the given head and tail.
 	 */
-	protected WrappedAstNodeList(IStrategoAstNode node, int offset, IStrategoTerm head, IStrategoList tail) {
-		super(node);
+	protected WrappedAstNodeList(IStrategoAstNode node, int offset, IStrategoTerm head, IStrategoList tail, IStrategoList annos) {
+		super(node, annos);
 		this.factory = null;
 		this.offset = offset;
 		this.head = head;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeParent.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeParent.java	2010-04-08 09:12:57 UTC (rev 20753)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeParent.java	2010-04-08 09:14:41 UTC (rev 20754)
@@ -2,6 +2,7 @@
 
 import java.util.ArrayList;
 
+import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 
 /**
@@ -13,8 +14,12 @@
 
 	IStrategoTerm[] subterms;
 	
+	protected WrappedAstNodeParent(IStrategoAstNode node, IStrategoList annotations) {
+		super(node);
+	}
+	
 	protected WrappedAstNodeParent(IStrategoAstNode node) {
-		super( node);
+		super(node);
 	}
 
 	@Override

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-08 09:12:57 UTC (rev 20753)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-08 09:14:41 UTC (rev 20754)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.3.2.jar" id="org.strategoxt.imp" version="0.4.3.2">
+   <feature url="features/org.strategoxt.imp_0.4.3.3.jar" id="org.strategoxt.imp" version="0.4.3.3">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Thu Apr  8 18:00:17 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 08 Apr 2010 16:00:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20755 - LennartKats -
	in strc-java/trunk/java: . runtime/org/strategoxt/lang/terms
Message-ID: <201004081700.o38H0H6l031245@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-08 16:00:17 +0000 (Thu, 08 Apr 2010)
New Revision: 20755

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20755&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java
   strc-java/trunk/java/spoofax-libs.jar

Log:
Fixed a problem where comparing two empty lists (with empty lists of annotations) could lead to an endless loop.

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java	2010-04-08 09:14:41 UTC (rev 20754)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoTerm.java	2010-04-08 16:00:17 UTC (rev 20755)
@@ -23,6 +23,7 @@
     private IStrategoList annotations;
     
     protected StrategoTerm(IStrategoList annotations) {
+        assert annotations == null || annotations.isEmpty() || annotations == TermFactory.EMPTY_LIST;
     	if (annotations != TermFactory.EMPTY_LIST)
     		this.annotations = annotations;
     }
@@ -160,6 +161,7 @@
     }
     
     protected final void internalSetAnnotations(IStrategoList annotations) {
+        assert annotations == null || annotations.isEmpty() || annotations == TermFactory.EMPTY_LIST;
     	if (annotations == TermFactory.EMPTY_LIST)
     		annotations = null; // essential for hash code calculation
     	

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java	2010-04-08 09:14:41 UTC (rev 20754)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java	2010-04-08 16:00:17 UTC (rev 20755)
@@ -165,7 +165,11 @@
             storageType = min(storageType, getStorageType(head));
 			result = new StrategoList(head, result, outerAnnos, storageType);
         } else {
-        	return new StrategoList(null, null, outerAnnos, MY_STORAGE_TYPE);
+        	if (outerAnnos == null || outerAnnos.isEmpty()) {
+        		return EMPTY_LIST;
+        	} else {
+        		return new StrategoList(null, null, outerAnnos, MY_STORAGE_TYPE);
+        	}
         }
         return result;
     }

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Fri Apr  9 11:05:15 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 09 Apr 2010 09:05:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20756 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
	strc-java/trunk/java
Message-ID: <201004091005.o39A5FDI010389@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-09 09:05:14 +0000 (Fri, 09 Apr 2010)
New Revision: 20756

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20756&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java
   strc-java/trunk/java/spoofax-libs.jar

Log:
Spoofax/807: Wrong binding in interpreter

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java	2010-04-08 16:00:17 UTC (rev 20755)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java	2010-04-09 09:05:14 UTC (rev 20756)
@@ -37,17 +37,30 @@
             case IStrategoTerm.STRING:
                 return getHook().pop().onSuccess(env);
             case IStrategoTerm.APPL:
+                return evalAll(env, 0, t.getAllSubterms().clone());
             case IStrategoTerm.LIST:
             case IStrategoTerm.TUPLE:
                 // TODO: Optimize - treat IStrategoList as linked list or use iterator?
                 //       (same for some, all)
-                return evalAll(env, 0, t.getAllSubterms());
+                IStrategoTerm[] subterms = t.getAllSubterms();
+                assert isCopy(t, subterms);
+                return evalAll(env, 0, subterms);
             default:
                 throw new InterpreterException("Unknown ATerm type " + t.getTermType());
         }
 
     }
     
+    private static boolean isCopy(IStrategoTerm parent, IStrategoTerm[] kids) {
+        if (kids.length > 0) {
+            kids[0] = null;
+            IStrategoTerm subterm = parent.getSubterm(0);
+            if (subterm == null) return false;
+            kids[0] = subterm;
+        }
+        return true;
+    }
+    
     protected IConstruct evalAll(IContext env, final int i, final IStrategoTerm[] list) throws InterpreterException
     {
     	final IStrategoTerm old = env.current();

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Fri Apr  9 11:07:46 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 09 Apr 2010 09:07:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20757 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
Message-ID: <201004091007.o39A7koK010407@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-09 09:07:46 +0000 (Fri, 09 Apr 2010)
New Revision: 20757

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20757&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java

Log:


Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java	2010-04-09 09:05:14 UTC (rev 20756)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java	2010-04-09 09:07:46 UTC (rev 20757)
@@ -23,6 +23,8 @@
     public All(Strategy body) {
         this.body = body;
     }
+    
+    // TODO: Optimize 'all', based on SRTS_all.java, which doesn't do all the copying
 
     public IConstruct eval(IContext env) throws InterpreterException {
         if (DebugUtil.isDebugging()) {



From L.C.L.Kats at tudelft.nl  Sat Apr 10 13:40:04 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 10 Apr 2010 11:40:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20759 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.updatesite
Message-ID: <201004101240.o3ACe4LI027745@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-10 11:40:04 +0000 (Sat, 10 Apr 2010)
New Revision: 20759

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20759&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Release 0.4.3.4

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-10 10:15:26 UTC (rev 20758)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-10 11:40:04 UTC (rev 20759)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.3.3"
+      version="0.4.3.4"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-10 10:15:26 UTC (rev 20758)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-10 11:40:04 UTC (rev 20759)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.3.3.jar" id="org.strategoxt.imp" version="0.4.3.3">
+   <feature url="features/org.strategoxt.imp_0.4.3.4.jar" id="org.strategoxt.imp" version="0.4.3.4">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Sat Apr 10 12:15:27 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 10 Apr 2010 10:15:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20758 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	. services stratego/adapter
Message-ID: <201004101115.o3ABFRXQ027073@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-10 10:15:26 +0000 (Sat, 10 Apr 2010)
New Revision: 20758

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20758&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeParent.java

Log:
Spoofax/62, Spoofax/81 fixes.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-04-09 09:07:46 UTC (rev 20757)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-04-10 10:15:26 UTC (rev 20758)
@@ -99,9 +99,9 @@
 		if (!serverOption)
 			Environment.logWarning("Make sure Eclipse is started with -vmargs -server (can be set in eclipse.ini) for best performance");
 		if (!mxOption)
-			Environment.logWarning("Make sure Eclipse is started with -vmargs -Xmx 512m (can be set in eclipse.ini) for at least 512 MiB heap space");
+			Environment.logWarning("Make sure Eclipse is started with -vmargs -Xmx1024m (can be set in eclipse.ini) for at least 1024 MiB heap space (adjust downwards for low-memory systems)");
 		if (!ssOption)
-			Environment.logWarning("Make sure Eclipse is started with -vmargs -Xss 8m (can be set in eclipse.ini) for an 8 MiB stack size");
+			Environment.logWarning("Make sure Eclipse is started with -vmargs -Xss8m (can be set in eclipse.ini) for an 8 MiB stack size");
 	}
 	
 	// TODO: Split up shared and non-shared environment entities?

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	2010-04-09 09:07:46 UTC (rev 20757)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	2010-04-10 10:15:26 UTC (rev 20758)
@@ -1,9 +1,9 @@
 package org.strategoxt.imp.runtime.services;
 
 import static java.lang.Math.min;
-import static org.eclipse.ui.texteditor.ITextEditorExtension3.*;
 import static org.eclipse.ui.texteditor.AbstractDecoratedTextEditorPreferenceConstants.EDITOR_SPACES_FOR_TABS;
 import static org.eclipse.ui.texteditor.AbstractDecoratedTextEditorPreferenceConstants.EDITOR_TAB_WIDTH;
+import static org.eclipse.ui.texteditor.ITextEditorExtension3.SMART_INSERT;
 
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -14,7 +14,6 @@
 
 import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.imp.parser.IParseController;
-import org.eclipse.imp.preferences.PreferenceCache;
 import org.eclipse.imp.services.IAutoEditStrategy;
 import org.eclipse.imp.services.ILanguageSyntaxProperties;
 import org.eclipse.jface.preference.IPreferenceStore;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java	2010-04-09 09:07:46 UTC (rev 20757)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeFactory.java	2010-04-10 10:15:26 UTC (rev 20758)
@@ -155,7 +155,7 @@
 			}
 			*/
 			if (head == newHead && tail == newTail) return terms;
-			return makeListCons(newHead, newTail);
+			return makeListCons(newHead, newTail, terms.getAnnotations());
 		}
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeParent.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeParent.java	2010-04-09 09:07:46 UTC (rev 20757)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeParent.java	2010-04-10 10:15:26 UTC (rev 20758)
@@ -15,7 +15,7 @@
 	IStrategoTerm[] subterms;
 	
 	protected WrappedAstNodeParent(IStrategoAstNode node, IStrategoList annotations) {
-		super(node);
+		super(node, annotations);
 	}
 	
 	protected WrappedAstNodeParent(IStrategoAstNode node) {



From L.C.L.Kats at tudelft.nl  Tue Apr 13 16:10:06 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 13 Apr 2010 14:10:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20760 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <201004131510.o3DFA6GB028000@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-13 14:10:05 +0000 (Tue, 13 Apr 2010)
New Revision: 20760

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20760&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/LazyTerm.java

Log:
Fixed some stupid copy/paste bugs reported by Nathan.

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/LazyTerm.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/LazyTerm.java	2010-04-10 11:40:04 UTC (rev 20759)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/LazyTerm.java	2010-04-13 14:10:05 UTC (rev 20760)
@@ -123,25 +123,25 @@
 
 	public IStrategoConstructor getConstructor() {
 		if (getTermType() != APPL)
-			throw new TermWrapperException("Called getConstructor() on a term that is not of type LIST");
+			throw new TermWrapperException("Called getConstructor() on a term that is not of type APPL");
 		return ((IStrategoAppl) getWrapped()).getConstructor();
 	}
 
 	public int intValue() {
-		if (getTermType() != APPL)
-			throw new TermWrapperException("Called intValue() on a term that is not of type LIST");
+		if (getTermType() != INT)
+			throw new TermWrapperException("Called intValue() on a term that is not of type INT");
 		return ((IStrategoInt) getWrapped()).intValue();
 	}
 
 	public double realValue() {
-		if (getTermType() != APPL)
-			throw new TermWrapperException("Called realValue() on a term that is not of type LIST");
+		if (getTermType() != REAL)
+			throw new TermWrapperException("Called realValue() on a term that is not of type REAL");
 		return ((IStrategoReal) getWrapped()).realValue();
 	}
 
 	public String stringValue() {
 		if (getTermType() != STRING)
-			throw new TermWrapperException("Called stringValue() on a term that is not of type LIST");
+			throw new TermWrapperException("Called stringValue() on a term that is not of type STRING");
 		return ((IStrategoString) getWrapped()).stringValue();
 	}
 



From L.C.L.Kats at tudelft.nl  Tue Apr 13 16:16:29 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 13 Apr 2010 14:16:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20761 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.feature strc-java/trunk
	strc-java/trunk/META-INF
Message-ID: <201004131516.o3DFGTrn028036@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-13 14:16:29 +0000 (Tue, 13 Apr 2010)
New Revision: 20761

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20761&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   strc-java/trunk/META-INF/MANIFEST.MF
   strc-java/trunk/configure.ac

Log:
Bumped STRJ version to 0.17.9

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-13 14:10:05 UTC (rev 20760)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-13 14:16:29 UTC (rev 20761)
@@ -212,7 +212,7 @@
          id="org.strategoxt.strj"
          download-size="0"
          install-size="0"
-         version="0.2.3.qualifier"/>
+         version="0.17.9.qualifier"/>
 
    <plugin
          id="org.strategoxt.imp.generator"

Modified: strc-java/trunk/META-INF/MANIFEST.MF
===================================================================
--- strc-java/trunk/META-INF/MANIFEST.MF	2010-04-13 14:10:05 UTC (rev 20760)
+++ strc-java/trunk/META-INF/MANIFEST.MF	2010-04-13 14:16:29 UTC (rev 20761)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: Stratego/XT Java runtime
 Bundle-SymbolicName: org.strategoxt.strj;singleton:=true
-Bundle-Version: 0.2.3.qualifier
+Bundle-Version: 0.17.9.qualifier
 Export-Package: .,
  aterm,
  aterm.pure,

Modified: strc-java/trunk/configure.ac
===================================================================
--- strc-java/trunk/configure.ac	2010-04-13 14:10:05 UTC (rev 20760)
+++ strc-java/trunk/configure.ac	2010-04-13 14:16:29 UTC (rev 20761)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.58])
-AC_INIT([strc-java],[0.2.3],[bugs at strategoxt.org])
+AC_INIT([strc-java],[0.17.9],[bugs at strategoxt.org])
 AM_INIT_AUTOMAKE
 
 # set the prefix immediately to the default prefix



From L.C.L.Kats at tudelft.nl  Wed Apr 14 17:36:53 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 14 Apr 2010 15:36:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20762 - LennartKats -
	in spoofax/trunk/spoofax:
	org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
	org.spoofax.jsglr/src/org/spoofax/jsglr
Message-ID: <201004141636.o3EGarTn015078@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-14 15:36:53 +0000 (Wed, 14 Apr 2010)
New Revision: 20762

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20762&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/SGLR.java

Log:


Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java	2010-04-13 14:16:29 UTC (rev 20761)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/All.java	2010-04-14 15:36:53 UTC (rev 20762)
@@ -24,7 +24,7 @@
         this.body = body;
     }
     
-    // TODO: Optimize 'all', based on SRTS_all.java, which doesn't do all the copying
+    // TODO: Optimize 'all', based on SRTS_all.java, which doesn't do all the copying and recursion
 
     public IConstruct eval(IContext env) throws InterpreterException {
         if (DebugUtil.isDebugging()) {

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/SGLR.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/SGLR.java	2010-04-13 14:16:29 UTC (rev 20761)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/SGLR.java	2010-04-14 15:36:53 UTC (rev 20762)
@@ -6,20 +6,20 @@
  * Licensed under the GNU Lesser General Public License, v2.1
  */
 package org.spoofax.jsglr;
-import java.util.LinkedHashSet;
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.PushbackInputStream;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.Collections;
+import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Queue;
+import java.util.Set;
 import java.util.Timer;
 import java.util.TimerTask;
 import java.util.concurrent.CancellationException;
-import java.util.Set;
+
 import org.spoofax.ArrayDeque;
 
 import aterm.ATerm;



From L.C.L.Kats at tudelft.nl  Wed Apr 14 17:43:00 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 14 Apr 2010 15:43:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20763 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	strc-java/trunk/java/runtime/org/strategoxt/lang
	strc-java/trunk/trans
Message-ID: <201004141643.o3EGh0K7015107@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-14 15:43:00 +0000 (Wed, 14 Apr 2010)
New Revision: 20763

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20763&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java
   strc-java/trunk/trans/s2j.str

Log:
Fixed what seems to be the cause of a memory leak, found by Karl.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-04-14 15:36:53 UTC (rev 20762)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-04-14 15:43:00 UTC (rev 20763)
@@ -19,6 +19,7 @@
 import org.spoofax.interpreter.adapter.aterm.WrappedATermFactory;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.core.InterpreterExit;
+import org.spoofax.interpreter.library.jsglr.JSGLRLibrary;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.InvalidParseTableException;
 import org.spoofax.jsglr.ParseTable;
@@ -198,6 +199,7 @@
 				}
 			};
 		
+		result.getCompiledContext().getExceptionHandler().setEnabled(false);
 		result.getCompiledContext().registerComponent("stratego_lib"); // ensure op. registry available
 		result.getCompiledContext().registerComponent("stratego_sglr"); // ensure op. registry available
 		SGLRCompatLibrary sglrLibrary = (SGLRCompatLibrary) result.getContext().getOperatorRegistry(SGLRCompatLibrary.REGISTRY_NAME);
@@ -214,6 +216,17 @@
 		
 		return result;
 	}
+
+	public static HybridInterpreter createInterpreter(HybridInterpreter prototype) {
+		HybridInterpreter result = new HybridInterpreter(prototype,
+				IMPJSGLRLibrary.REGISTRY_NAME, // is spoofax-specific
+				JSGLRLibrary.REGISTRY_NAME,    // connected to the library above
+				IMPLibrary.REGISTRY_NAME);     // also used
+		result.getCompiledContext().getExceptionHandler().setEnabled(false);
+		IMPJSGLRLibrary parseLibrary = ((IMPJSGLRLibrary) result.getContext().getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME));
+		parseLibrary.addOverrides(result.getCompiledContext());
+		return result;
+	}
 	
 	public static ParseTable registerParseTable(Language language, InputStream parseTable)
 			throws IOException, InvalidParseTableException {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-04-14 15:36:53 UTC (rev 20762)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-04-14 15:43:00 UTC (rev 20763)
@@ -33,7 +33,6 @@
 import org.spoofax.interpreter.core.StackTracer;
 import org.spoofax.interpreter.core.UndefinedStrategyException;
 import org.spoofax.interpreter.library.LoggingIOAgent;
-import org.spoofax.interpreter.library.jsglr.JSGLRLibrary;
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
@@ -54,7 +53,6 @@
 import org.strategoxt.imp.runtime.parser.ast.AstMessageHandler;
 import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
 import org.strategoxt.imp.runtime.stratego.IMPJSGLRLibrary;
-import org.strategoxt.imp.runtime.stratego.IMPLibrary;
 import org.strategoxt.imp.runtime.stratego.StrategoConsole;
 import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
@@ -141,12 +139,7 @@
 		
 		HybridInterpreter prototype = cachedRuntimes.get(descriptor);
 		if (prototype != null) {
-			runtime = new HybridInterpreter(prototype,
-					IMPJSGLRLibrary.REGISTRY_NAME, // is spoofax-specific
-					JSGLRLibrary.REGISTRY_NAME,    // connected to the library above
-					IMPLibrary.REGISTRY_NAME);     // also used
-			IMPJSGLRLibrary parseLibrary = ((IMPJSGLRLibrary) runtime.getContext().getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME));
-			parseLibrary.addOverrides(runtime.getCompiledContext());
+			runtime = Environment.createInterpreter(prototype);
 			return;
 		}
 		

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2010-04-14 15:36:53 UTC (rev 20762)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2010-04-14 15:43:00 UTC (rev 20763)
@@ -39,6 +39,10 @@
     
     private final UncaughtExceptionHandler exceptionHandler =
     	new UncaughtExceptionHandler(this);
+    
+	@SuppressWarnings("unused")
+	private final UncaughtExceptionHandler.Finalizer exceptionHandlerFinalizer =
+    	exceptionHandler.new Finalizer();
 	
 	private final ITermFactory factory;
     

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java	2010-04-14 15:36:53 UTC (rev 20762)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/UncaughtExceptionHandler.java	2010-04-14 15:43:00 UTC (rev 20763)
@@ -1,6 +1,7 @@
 package org.strategoxt.lang;
 
 import java.lang.management.ManagementFactory;
+import java.lang.ref.WeakReference;
 
 import org.spoofax.interpreter.core.StackTracer;
 
@@ -9,10 +10,11 @@
  */
 public class UncaughtExceptionHandler  {
 	
-	private final StackTracer stackTracer;
+	private final WeakReference<StackTracer> stackTracer;
 	
 	private final ActualHandler handler = new ActualHandler();
 	
+	// We keep the original handler (may be used by someone else) intact
 	private Thread.UncaughtExceptionHandler originalHandler;
 	
 	private boolean enabled;
@@ -20,7 +22,7 @@
 	private boolean dumpedError;
 	
 	public UncaughtExceptionHandler(StackTracer stackTracer) {
-		this.stackTracer = stackTracer;
+		this.stackTracer = new WeakReference<StackTracer>(stackTracer);
 	}
 	
 	public boolean isEnabled() {
@@ -41,7 +43,7 @@
 		}
 	}
 	
-	public void disable() {
+	private void disable() {
 		if (enabled) {
 			enabled = false;
 			try {
@@ -56,10 +58,11 @@
     protected synchronized boolean dumpError(String startMessage) {
     	if (dumpedError) return true;
 
-    	if (stackTracer.getTraceDepth(true) > 0) {
+    	StackTracer tracer = stackTracer.get();
+    	if (tracer != null && tracer.getTraceDepth(true) > 0) {
     		if (startMessage != null) System.err.println(startMessage);
 	    	try {
-	    		stackTracer.printStackTrace(true);
+	    		tracer.printStackTrace(true);
 	    	} catch (RuntimeException e) {
 	    		// gracefully accept exceptions in case of a race codition
 	    	}
@@ -75,6 +78,7 @@
 	 * Class that handles shutdown and unhandled exception events.
 	 */
     private class ActualHandler extends Thread implements Thread.UncaughtExceptionHandler {
+    	
 		public void uncaughtException(Thread t, Throwable e) {
 			originalHandler.uncaughtException(t, e);
 			if (e instanceof StackOverflowError && dumpError("Fatal error at")) {
@@ -100,5 +104,12 @@
 			dumpError("Aborted at");
 		}
 	}
+    
+    class Finalizer {
+    	@Override
+    	protected void finalize() throws Throwable {
+    		setEnabled(false);
+    	}
+    }
 
 }

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2010-04-14 15:36:53 UTC (rev 20762)
+++ strc-java/trunk/trans/s2j.str	2010-04-14 15:43:00 UTC (rev 20763)
@@ -253,12 +253,15 @@
          if (result == null) {
            System.err.println("~x_name" + (TRACES_ENABLED ? ": rewriting failed, trace:" : ": rewriting failed"));
            context.printStackTrace();
+           context.setStandAlone(false);
            System.exit(1); 
          } else {
            System.out.println(result);
+           context.setStandAlone(false);
            System.exit(0);
          }
        } catch (StrategoExit exit) {
+         context.setStandAlone(false);
          System.exit(exit.getValue());
        }
      }



From L.C.L.Kats at tudelft.nl  Wed Apr 14 18:12:35 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 14 Apr 2010 16:12:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20764 - LennartKats -
	spoofax-imp/trunk/org.eclipse.imp
Message-ID: <201004141712.o3EHCZPP015488@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-14 16:12:35 +0000 (Wed, 14 Apr 2010)
New Revision: 20764

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20764&view=rev

Modified:
   spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch

Log:
Spoofax/83: NullpointerException on opening a file from subclipse's history view

Changes:

Modified: spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
===================================================================
--- spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	2010-04-14 15:43:00 UTC (rev 20763)
+++ spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	2010-04-14 16:12:35 UTC (rev 20764)
@@ -11,16 +11,24 @@
  import org.eclipse.core.runtime.IConfigurationElement;
  import org.eclipse.core.runtime.IExtensionPoint;
  import org.eclipse.core.runtime.IPath;
-@@ -134,7 +136,7 @@
+@@ -134,7 +136,15 @@
  	public static Language findLanguage(IEditorInput editorInput, IDocumentProvider docProvider) {
  		if (!sIsFullyInitialized)
  			initializeRegistryAsNeeded();
 -		IPath path= EditorInputUtils.getPath(editorInput);
-+		IPath path= EditorInputUtils.getFile(editorInput).getFullPath(); // LK
++		
++		// LK: get full path
++		IFile file = EditorInputUtils.getFile(editorInput);
++		IPath path;
++		if (file != null) {
++			path = file.getFullPath();
++		} else {
++			path = EditorInputUtils.getPath(editorInput);
++		}
  
  		return findLanguage(path, docProvider.getDocument(editorInput));
  	}
-@@ -164,7 +166,9 @@
+@@ -164,7 +174,9 @@
  		            LanguageValidator validator = lang.getValidator();
  
  		            if (validator != null && docContents != null) {
@@ -31,7 +39,7 @@
  		                    return lang;
  		                }
  		            } else {
-@@ -383,7 +387,10 @@
+@@ -383,7 +395,10 @@
          for (String ext : extensions) {
  	        IFileEditorMapping mapping= findMappingFor(ext, mappings);
  
@@ -117,7 +125,15 @@
  import java.util.Iterator;
  import java.util.List;
  import java.util.Stack;
-@@ -109,6 +110,9 @@
+@@ -37,6 +38,7 @@
+ import org.eclipse.swt.SWT;
+ import org.eclipse.swt.custom.StyleRange;
+ import org.eclipse.swt.widgets.Display;
++import org.eclipse.ui.PlatformUI;
+ 
+ /**
+  * A class that does the real work of repairing the text presentation for an associated ISourceViewer.
+@@ -109,22 +111,36 @@
          IRegion bigRegion= fColorer.calculateDamageExtent(region, fParseCtlr);
  
          if (bigRegion != null) {
@@ -127,7 +143,11 @@
              fWorkItems.push(bigRegion);
          }
      }
-@@ -118,13 +122,23 @@
+ 
+     public void update(IParseController controller, IProgressMonitor monitor) {
+-        if (!monitor.isCanceled()) {
++        // LK: don't run in the main UI thread since it would risk dead locks based on SWT
++    	if (!monitor.isCanceled()) {
  //            if (fWorkItems.size() == 0) {
  //                ConsoleUtil.findConsoleStream(PresentationController.CONSOLE_NAME).println("PresentationController.update() called, but no damage in the work queue?");
  //            }
@@ -158,7 +178,7 @@
              }
          }
      }
-@@ -157,7 +171,7 @@
+@@ -157,7 +173,7 @@
              int offset= locator.getStartOffset(token);
              int end= locator.getEndOffset(token);
  
@@ -167,7 +187,7 @@
                  continue;
              }
              changeTokenPresentation(parseController, presentation, token, locator);
-@@ -176,7 +190,7 @@
+@@ -176,7 +192,7 @@
          
         // SMS 21 Jun 2007:  negative (possibly 0) length style ranges seem to cause problems;
          // but if you have one it should lead to an IllegalArgumentException in changeTextPresentation(..)
@@ -176,7 +196,7 @@
          } else {
              presentation.addStyleRange(styleRange);
          }
-@@ -190,6 +204,7 @@
+@@ -190,6 +206,7 @@
              	// SMS 16 Sep 2008
              	int charCount;
              	if (fSourceViewer != null) {
@@ -184,7 +204,7 @@
              		charCount = fSourceViewer.getDocument().getLength();
              	} else {
              		charCount = 0;
-@@ -201,7 +216,7 @@
+@@ -201,7 +218,7 @@
              	int lastLength = presentation.getLastStyleRange().length;
              	int end = lastStart + lastLength;
          		TextPresentation newPresentation = null;



From L.C.L.Kats at tudelft.nl  Wed Apr 14 18:15:02 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 14 Apr 2010 16:15:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20765 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	parser stratego
Message-ID: <201004141715.o3EHF2jB015515@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-14 16:15:02 +0000 (Wed, 14 Apr 2010)
New Revision: 20765

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20765&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPAnnoLocationPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPReadTextFromStream.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceMappings.java

Log:
Fixed senseless ATerm-to-StrategoTerm conversion and Spoofax/88: StackOverflowError when parsing with parse-file

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-04-14 16:12:35 UTC (rev 20764)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-04-14 16:15:02 UTC (rev 20765)
@@ -25,7 +25,6 @@
 import org.eclipse.imp.services.IAnnotationTypeInfo;
 import org.eclipse.imp.services.ILanguageSyntaxProperties;
 import org.eclipse.jface.text.IRegion;
-import org.eclipse.jface.text.ITextPresentationListener;
 import org.eclipse.jface.text.Region;
 import org.spoofax.jsglr.BadTokenException;
 import org.spoofax.jsglr.InvalidParseTableException;
@@ -89,10 +88,8 @@
 	
 	private MetaFile metaFile;
 	
-	private Exception unmanagedParseTableMismatch;
+	private Exception unmanagedParseTableMismatch;;
 	
-	private ITextPresentationListener colorerBlocker;
-	
 	private volatile boolean isStartupParsed;
 	
 	private volatile boolean disallowColorer;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPAnnoLocationPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPAnnoLocationPrimitive.java	2010-04-14 16:12:35 UTC (rev 20764)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPAnnoLocationPrimitive.java	2010-04-14 16:15:02 UTC (rev 20765)
@@ -1,5 +1,7 @@
 package org.strategoxt.imp.runtime.stratego;
 
+import static org.spoofax.interpreter.core.Tools.isTermAppl;
+
 import java.io.File;
 
 import org.spoofax.interpreter.core.IContext;
@@ -8,6 +10,7 @@
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.stratego.SourceMappings.MappableTerm;
 import org.strategoxt.lang.compat.sglr.STRSGLR_anno_location;
 
 import aterm.ATerm;
@@ -33,9 +36,12 @@
 		if (!result) return false;
 		
 		// Restore tree metadata mappings
-		IStrategoTerm newAsfix = env.current();
+		MappableTerm newAsfix = new MappableTerm(env.current());
+		env.setCurrent(newAsfix);
+		
 		char[] oldChars = mappings.getInputChars(oldAsfix);
-		if (oldChars == null) return true;
+		if (oldChars == null)
+			return true;
 
 		ATerm newAsfixTerm = Environment.getATermConverter().convert(newAsfix);
 		File inputFile = oldAsfix instanceof IStrategoAppl
@@ -43,8 +49,8 @@
 			: null;
 		mappings.putInputChars(newAsfix, oldChars);
 		mappings.putInputTerm(newAsfix, newAsfixTerm);
-		if (newAsfix instanceof IStrategoAppl)
-			mappings.putInputFile((IStrategoAppl) newAsfix, inputFile);
+		if (isTermAppl(newAsfix))
+			mappings.putInputFileForTree(newAsfix, inputFile);
 		mappings.putTokenizer(newAsfix, mappings.getTokenizer(oldAsfix));
 		
 		return true;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	2010-04-14 16:12:35 UTC (rev 20764)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	2010-04-14 16:15:02 UTC (rev 20765)
@@ -1,5 +1,7 @@
 package org.strategoxt.imp.runtime.stratego;
 
+import static org.spoofax.interpreter.core.Tools.isTermAppl;
+
 import java.io.File;
 
 import org.spoofax.interpreter.library.IOperatorRegistry;
@@ -40,7 +42,7 @@
 		SourceMappings mappings = ((IMPJSGLRLibrary) library).getMappings();
 		char[] inputChars = mappings.getInputChars(asfix);
 		ATerm asfixATerm = mappings.getInputTerm(asfix);
-		File inputFile = asfix instanceof IStrategoAppl
+		File inputFile = isTermAppl(asfix)
 				? mappings.getInputFile((IStrategoAppl) asfix)
 				: null;
 		SGLRTokenizer tokenizer = mappings.getTokenizer(asfix);
@@ -53,9 +55,5 @@
 		AstNode result = imploder.implode(asfixATerm, tokenizer);
 		result = RootAstNode.makeRoot(result, null, RefreshResourcePrimitive.getResource(inputFile));
 		return result.getTerm();
-		
-		// TODO: Make a RootAstNode object from this tree and for IMPSGLRIPrimitive
-		//       which either refers to a (possibly fresh) ParseController or
-		//       some other cookie that traces back the tree to the file
 	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java	2010-04-14 16:12:35 UTC (rev 20764)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java	2010-04-14 16:15:02 UTC (rev 20765)
@@ -2,12 +2,11 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.util.IdentityHashMap;
 import java.util.Map;
+import java.util.WeakHashMap;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
-import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.Disambiguator;
@@ -16,6 +15,7 @@
 import org.spoofax.jsglr.SGLRException;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.JSGLRI;
+import org.strategoxt.imp.runtime.stratego.SourceMappings.MappableTerm;
 import org.strategoxt.lang.LazyTerm;
 import org.strategoxt.lang.compat.sglr.JSGLR_parse_string_pt_compat;
 
@@ -32,7 +32,8 @@
 	
 	private final SourceMappings mappings;
 	
-	private Map<ParseTable, ParseTable> isNoRecoveryWarned = new IdentityHashMap<ParseTable, ParseTable>();
+	private Map<ParseTable, ParseTable> isNoRecoveryWarned =
+		new WeakHashMap<ParseTable, ParseTable>();
 
 	protected IMPParseStringPTPrimitive(ATermFactory atermFactory, Disambiguator filterSettings, 
 			SourceMappings mappings) {
@@ -55,21 +56,22 @@
 		try {
 			parser.setUseRecovery(true);
 		} catch (NoRecoveryRulesException e) {
+			assert table.hashCode() == System.identityHashCode(table);
 			if (!isNoRecoveryWarned.containsKey(table)) {
 				Environment.logException(NAME + ": warning - no recovery rules available in parse table", e);
-				// (we use an identity hash map to avoid parse table hashing)
 				isNoRecoveryWarned.put(table, table);
 			}
 		}
 		char[] inputChars = input.toCharArray();
 		
 		final ATerm asfix = parser.parseNoImplode(inputChars, path);
-		IStrategoAppl result = new LazyTerm() {
+		MappableTerm result = new MappableTerm(new LazyTerm() {
 			@Override
 			protected IStrategoTerm init() {
+				Environment.logWarning("Parse tree was converted to StrategoTerm format");
 				return Environment.getATermConverter().convert(asfix);
 			}
-		};
+		});
 
 		File inputFile = mappings.getInputFile(inputTerm);
 		if (inputFile == null)
@@ -77,7 +79,7 @@
 		
 		mappings.putInputTerm(result, asfix);
 		mappings.putInputChars(result, inputChars);
-		mappings.putInputFile(result, inputFile);
+		mappings.putInputFileForTree(result, inputFile);
 		mappings.putTokenizer(result, parser.getTokenizer());
 		
 		return result;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPReadTextFromStream.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPReadTextFromStream.java	2010-04-14 16:12:35 UTC (rev 20764)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPReadTextFromStream.java	2010-04-14 16:15:02 UTC (rev 20765)
@@ -24,8 +24,8 @@
 		
 		// Wrap in an unshared object; strings may be shared
 		// TODO: use identity hash code or something?
-		SourceMappings.MappableString mappableResult = new SourceMappings.MappableString(result); 
-		mappings.putInputFile(mappableResult, mappings.getInputFile(fd));
+		SourceMappings.MappableTerm mappableResult = new SourceMappings.MappableTerm(result); 
+		mappings.putInputFileForString(mappableResult, mappings.getInputFile(fd));
 		
 		return mappableResult;
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceMappings.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceMappings.java	2010-04-14 16:12:35 UTC (rev 20764)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceMappings.java	2010-04-14 16:15:02 UTC (rev 20765)
@@ -1,6 +1,8 @@
 package org.strategoxt.imp.runtime.stratego;
 
 import static org.spoofax.interpreter.core.Tools.isTermAppl;
+import static org.spoofax.interpreter.core.Tools.isTermString;
+import static org.strategoxt.imp.runtime.stratego.SourceMappings.MappableTerm.*;
 
 import java.io.File;
 import java.util.Map;
@@ -25,36 +27,38 @@
 	
 	private final Map<MappableKey, File> stringInputFileMap = new WeakHashMap<MappableKey, File>();
 	
-	private final Map<IStrategoTerm, File> asfixInputFileMap = new WeakHashMap<IStrategoTerm, File>();
+	private final Map<MappableKey, File> asfixInputFileMap = new WeakHashMap<MappableKey, File>();
 	
-	private final Map<IStrategoTerm, char[]> inputCharMap = new WeakHashMap<IStrategoTerm, char[]>();
+	private final Map<MappableKey, char[]> inputCharMap = new WeakHashMap<MappableKey, char[]>();
 
-	private final Map<IStrategoTerm, ATerm> inputTermMap = new WeakHashMap<IStrategoTerm, ATerm>();
+	private final Map<MappableKey, ATerm> inputTermMap = new WeakHashMap<MappableKey, ATerm>();
 
-	private final Map<IStrategoTerm, SGLRTokenizer> tokenizerMap = new WeakHashMap<IStrategoTerm, SGLRTokenizer>();
+	private final Map<MappableKey, SGLRTokenizer> tokenizerMap = new WeakHashMap<MappableKey, SGLRTokenizer>();
 
 	public File putInputFile(int fd, File file) {
 		return inputFileMap.put(fd, file);
 	}
 
-	public File putInputFile(MappableString string, File file) {
-		return stringInputFileMap.put(string.identityKey, file);
+	public File putInputFileForString(MappableTerm string, File file) {
+		assert isTermString(string);
+		return stringInputFileMap.put(string.key, file);
 	}
 	
-	public File putInputFile(IStrategoAppl asfix, File file) {
-		return asfixInputFileMap.put(asfix, file);
+	public File putInputFileForTree(MappableTerm asfix, File file) {
+		assert isTermAppl(asfix);
+		return asfixInputFileMap.put(asfix.key, file);
 	}
 
-	public char[] putInputChars(IStrategoTerm asfix, char[] inputChars) {
-		return inputCharMap.put(asfix, inputChars);
+	public char[] putInputChars(MappableTerm asfix, char[] inputChars) {
+		return inputCharMap.put(asfix.key, inputChars);
 	}
 
-	public ATerm putInputTerm(IStrategoTerm asfix, ATerm asfixATerm) {
-		return inputTermMap.put(asfix, asfixATerm);
+	public ATerm putInputTerm(MappableTerm asfix, ATerm asfixATerm) {
+		return inputTermMap.put(asfix.key, asfixATerm);
 	}
 	
-	public SGLRTokenizer putTokenizer(IStrategoTerm asfix, SGLRTokenizer tokenizer) {
-		return tokenizerMap.put(asfix, tokenizer);
+	public SGLRTokenizer putTokenizer(MappableTerm asfix, SGLRTokenizer tokenizer) {
+		return tokenizerMap.put(asfix.key, tokenizer);
 	}
 	
 	public File getInputFile(int fd) {
@@ -62,39 +66,37 @@
 	}
 	
 	public File getInputFile(IStrategoString string) {
-		if (string instanceof MappableString) {
-			MappableKey key = ((MappableString) string).identityKey;
-			return stringInputFileMap.get(key);
-		} else {
-			return null;
-		}
+		return getValue(stringInputFileMap, string);
 	}
 	
 	public File getInputFile(IStrategoAppl asfix) {
 		assert isTermAppl(asfix);
-		return asfixInputFileMap.get(asfix);
+		return getValue(asfixInputFileMap, asfix);
 	}
 	
 	public char[] getInputChars(IStrategoTerm asfix) {
-		return inputCharMap.get(asfix);
+		return getValue(inputCharMap, asfix);
 	}
 	
 	public ATerm getInputTerm(IStrategoTerm asfix) {
-		return inputTermMap.get(asfix);
+		return getValue(inputTermMap, asfix);
 	}
 	
 	public SGLRTokenizer getTokenizer(IStrategoTerm asfix) {
-		return tokenizerMap.get(asfix);
+		return getValue(tokenizerMap, asfix);
 	}
 	
 	/**
+	 * A wrapped term that provides a key with identity equality semantics
+	 * for use in Map implementations where identity equality is preferred.
+	 * 
 	 * @author Lennart Kats <lennart add lclnet.nl>
 	 */
-	public static class MappableString extends StrategoWrapped {
+	public static class MappableTerm extends StrategoWrapped {
 
-		final MappableKey identityKey = new MappableKey();
+		private final MappableKey key = new MappableKey();
 		
-		public MappableString(IStrategoString wrapped) {
+		public MappableTerm(IStrategoTerm wrapped) {
 			super(wrapped);
 		}
 
@@ -102,9 +104,17 @@
 		public int getStorageType() {
 			return IMMUTABLE;
 		}
+		
+		public static<T> T getValue(Map<? extends MappableKey, T> map, IStrategoTerm term) {
+			if (term instanceof MappableTerm) {
+				return map.get(((MappableTerm) term).key);
+			} else {
+				return null;
+			}
+		}
 	}
 	
-	private static class MappableKey {
+	public static class MappableKey {
 		// Just used for identity hashcode and equals implementation
 	}
 }



From L.C.L.Kats at tudelft.nl  Wed Apr 14 18:42:47 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 14 Apr 2010 16:42:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20766 - LennartKats -
	in spoofax-imp/trunk: org.eclipse.imp
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201004141742.o3EHglOH015695@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-14 16:42:47 +0000 (Wed, 14 Apr 2010)
New Revision: 20766

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20766&view=rev

Modified:
   spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LazyColor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoConsole.java

Log:
Spoofax/82: Deadlock while updating editor runtime
Now the presentation thread always runs in the UI thread

Changes:

Modified: spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
===================================================================
--- spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	2010-04-14 16:15:02 UTC (rev 20765)
+++ spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	2010-04-14 16:42:47 UTC (rev 20766)
@@ -133,7 +133,7 @@
  
  /**
   * A class that does the real work of repairing the text presentation for an associated ISourceViewer.
-@@ -109,22 +111,36 @@
+@@ -109,22 +111,38 @@
          IRegion bigRegion= fColorer.calculateDamageExtent(region, fParseCtlr);
  
          if (bigRegion != null) {
@@ -146,7 +146,9 @@
  
      public void update(IParseController controller, IProgressMonitor monitor) {
 -        if (!monitor.isCanceled()) {
-+        // LK: don't run in the main UI thread since it would risk dead locks based on SWT
++        // LK: only run in the UI thread so color objects are created there
++    	if (PlatformUI.getWorkbench().getActiveWorkbenchWindow() == null)
++        	return;
 +    	if (!monitor.isCanceled()) {
  //            if (fWorkItems.size() == 0) {
  //                ConsoleUtil.findConsoleStream(PresentationController.CONSOLE_NAME).println("PresentationController.update() called, but no damage in the work queue?");
@@ -178,7 +180,7 @@
              }
          }
      }
-@@ -157,7 +173,7 @@
+@@ -157,7 +175,7 @@
              int offset= locator.getStartOffset(token);
              int end= locator.getEndOffset(token);
  
@@ -187,7 +189,7 @@
                  continue;
              }
              changeTokenPresentation(parseController, presentation, token, locator);
-@@ -176,7 +192,7 @@
+@@ -176,7 +194,7 @@
          
         // SMS 21 Jun 2007:  negative (possibly 0) length style ranges seem to cause problems;
          // but if you have one it should lead to an IllegalArgumentException in changeTextPresentation(..)
@@ -196,7 +198,7 @@
          } else {
              presentation.addStyleRange(styleRange);
          }
-@@ -190,6 +206,7 @@
+@@ -190,6 +208,7 @@
              	// SMS 16 Sep 2008
              	int charCount;
              	if (fSourceViewer != null) {
@@ -204,7 +206,7 @@
              		charCount = fSourceViewer.getDocument().getLength();
              	} else {
              		charCount = 0;
-@@ -201,7 +218,7 @@
+@@ -201,7 +220,7 @@
              	int lastLength = presentation.getLastStyleRange().length;
              	int end = lastStart + lastLength;
          		TextPresentation newPresentation = null;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LazyColor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LazyColor.java	2010-04-14 16:15:02 UTC (rev 20765)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LazyColor.java	2010-04-14 16:42:47 UTC (rev 20766)
@@ -1,12 +1,11 @@
 package org.strategoxt.imp.runtime.services;
 
 import org.eclipse.swt.graphics.Color;
-import org.eclipse.swt.widgets.Display;
 
 /**
  * A class that lazily loads an SWT color object,
- * ensuring it is only loaded at an appropriate time,
- * i.e., when in the main thread). Doing so can avoid 
+ * ensuring that it is only loaded at an appropriate time
+ * (i.e., when in the main thread). Doing so can avoid 
  * deadlocks when Color is instantiated from another thread
  * and the main thread is waiting for a lock.
  * 
@@ -25,7 +24,7 @@
 	}
 	
 	public Color get() {
-		if (color == null) color = new Color(Display.getCurrent(), red, green, blue);
+		if (color == null) color = new Color(null, red, green, blue);
 		return color;
 	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoConsole.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoConsole.java	2010-04-14 16:15:02 UTC (rev 20765)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoConsole.java	2010-04-14 16:42:47 UTC (rev 20766)
@@ -10,6 +10,7 @@
 import org.eclipse.core.runtime.Status;
 import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.IWorkbenchWindow;
 import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
 import org.eclipse.ui.console.ConsolePlugin;
@@ -111,7 +112,9 @@
 					console.activate();
 					return Status.OK_STATUS;
 				}
-				IWorkbenchPage page = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
+				IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
+				if (window == null) return Status.OK_STATUS; // Eclipse exiting
+				IWorkbenchPage page = window.getActivePage();
 				try {
 					IConsoleView view = (IConsoleView) page.showView(ID, null, IWorkbenchPage.VIEW_VISIBLE);
 					view.display(console);



From L.C.L.Kats at tudelft.nl  Wed Apr 14 18:59:05 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 14 Apr 2010 16:59:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20767 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.updatesite
Message-ID: <201004141759.o3EHx5de015808@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-14 16:59:05 +0000 (Wed, 14 Apr 2010)
New Revision: 20767

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20767&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
First 0.4.4 unstable release.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-14 16:42:47 UTC (rev 20766)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-14 16:59:05 UTC (rev 20767)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.3.4"
+      version="0.4.4"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-14 16:42:47 UTC (rev 20766)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-14 16:59:05 UTC (rev 20767)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.3.4.jar" id="org.strategoxt.imp" version="0.4.3.4">
+   <feature url="features/org.strategoxt.imp_0.4.4.jar" id="org.strategoxt.imp" version="0.4.4">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Fri Apr 16 10:07:48 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 16 Apr 2010 08:07:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20768 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms
	strc-java/trunk/java
	strc-java/trunk/java/runtime/org/strategoxt/lang/terms
Message-ID: <201004160907.o3G97mCC013172@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-16 08:07:48 +0000 (Fri, 16 Apr 2010)
New Revision: 20768

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20768&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicStrategoList.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoList.java
   strc-java/trunk/java/spoofax-libs.jar

Log:
some tweaks

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicStrategoList.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicStrategoList.java	2010-04-14 16:59:05 UTC (rev 20767)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicStrategoList.java	2010-04-16 08:07:48 UTC (rev 20768)
@@ -99,12 +99,19 @@
         if (!getAnnotations().match(second.getAnnotations()))
             return false;
         
-        
+        // TODO: test equality of annos on cons nodes (see StrategoList)
         for (IStrategoList cur = this; !cur.isEmpty(); cur = cur.tail(), snd = snd.tail()) {
             if(!cur.head().match(snd.head()))
                 return false;
         }
-        return true;
+        
+        IStrategoList annotations = getAnnotations();
+        IStrategoList secondAnnotations = second.getAnnotations();
+        if (annotations == secondAnnotations) {
+            return true;
+        } else {
+            return annotations.match(secondAnnotations);
+        }
     }
 
     public void prettyPrint(ITermPrinter pp) {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java	2010-04-14 16:59:05 UTC (rev 20767)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java	2010-04-16 08:07:48 UTC (rev 20768)
@@ -15,10 +15,10 @@
 import java.io.OutputStream;
 import java.io.PushbackInputStream;
 import java.io.Writer;
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.HashSet;
-import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
 import java.util.Set;
@@ -208,11 +208,12 @@
 
     private List<IStrategoTerm> parseTermSequence(PushbackInputStream bis, char endChar) throws IOException {
         //System.err.println("sequence");
-        List<IStrategoTerm> els = new LinkedList<IStrategoTerm>();
+        List<IStrategoTerm> els = Collections.emptyList();
         parseSkip(bis);
         int ch = bis.read();
         if(ch == endChar)
             return els;
+        els = new ArrayList<IStrategoTerm>();
         bis.unread(ch);
         do {
             els.add(parseFromStream(bis));
@@ -227,7 +228,7 @@
         }
 
         if(ch != endChar)
-            throw new ParseError("Sequence must end with '" + endChar + "',saw '" + (char)ch + "'");
+            throw new ParseError("Sequence must end with '" + endChar + "', saw '" + (char)ch + "'");
         
         return els;
     }
@@ -278,13 +279,15 @@
     }
     
     private void parseSkip(PushbackInputStream input) throws IOException {
-        int b = input.read();
-        switch (b) {
-            case ' ': case '\t': case '\n':
-                parseSkip(input);
-                return;
-            default:
-                input.unread(b);
+        for (;;) {
+            int b = input.read();
+            switch (b) {
+                case ' ': case '\t': case '\n':
+                    continue;
+                default:
+                    input.unread(b);
+                    return;
+            }
         }
     }
 

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoList.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoList.java	2010-04-14 16:59:05 UTC (rev 20767)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/StrategoList.java	2010-04-16 08:07:48 UTC (rev 20768)
@@ -125,7 +125,7 @@
 
     @Override
     protected boolean doSlowMatch(IStrategoTerm second, int commonStorageType) {
-        if(second.getTermType() != IStrategoTerm.LIST)
+        if (second.getTermType() != IStrategoTerm.LIST)
             return false;
         
         final IStrategoList snd = (IStrategoList) second;
@@ -141,6 +141,7 @@
         	IStrategoList tail = tail();
         	IStrategoList tail2 = snd.tail();
         
+        	// TODO: test equality of annos on cons nodes (see BasicStrategoList)
 	        for (IStrategoList cons = tail, cons2 = tail2; !cons.isEmpty(); cons = cons.tail(), cons2 = cons2.tail()) {
 	            IStrategoTerm consHead = cons.head();
 				IStrategoTerm cons2Head = cons2.head();

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)



From m.dejonge at tudelft.nl  Fri Apr 16 16:54:01 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Fri, 16 Apr 2010 14:54:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20769 - MaartjeDeJonge -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201004161554.o3GFs12N018659@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-16 14:54:01 +0000 (Fri, 16 Apr 2010)
New Revision: 20769

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20769&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java

Log:
fix: location start+end coordinates
Primitives:
- extra origin tracking calls
- TextChange for inline transformations
 

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-16 08:07:48 UTC (rev 20768)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-16 14:54:01 UTC (rev 20769)
@@ -14,11 +14,17 @@
 		add(new ProjectPathPrimitive());
 		add(new RefreshResourcePrimitive());
 		add(new OriginLocationPrimitive());
+		add(new OriginCharPositionPrimitive());
 		add(new OriginStripPrimitive());
 		add(new OriginTermPrimitive());
+		add(new OriginSublistTermPrimitive());
 		add(new OriginTextPrimitive());
+		add(new OriginTextFragmentPrimitive());
 		add(new OriginEqualPrimitive());
 		add(new OriginSurroundingCommentsPrimitive());
+		add(new OriginLeftCommentLinesPrimitive());
+		add(new OriginRightLineCommentPrimitive());
+		add(new TextChangePrimitive());
 	}
 
 	public String getOperatorRegistryName() {

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java	2010-04-16 14:54:01 UTC (rev 20769)
@@ -0,0 +1,29 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+
+/**
+ * Returns the tuple (offset-start, offset-end) for an ast-node
+ * @author Maartje de Jonge
+ */
+public class OriginCharPositionPrimitive extends AbstractOriginPrimitive {
+
+	public OriginCharPositionPrimitive() {
+		super("SSL_EXT_origin_char_position");
+	}
+
+	@Override
+	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
+		ITermFactory factory = env.getFactory();
+		int start = node.getNode().getLeftIToken().getStartOffset();
+		int end = node.getNode().getRightIToken().getEndOffset();
+		return factory.makeTuple(
+				factory.makeInt(start),
+				factory.makeInt(end)
+		);
+	}
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	2010-04-16 14:54:01 UTC (rev 20769)
@@ -0,0 +1,65 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import lpg.runtime.IPrsStream;
+import lpg.runtime.IToken;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.parser.tokens.SGLRToken;
+import org.strategoxt.imp.runtime.parser.tokens.TokenKind;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+
+/**
+ * Extracts all comment lines directly in front of the current node
+ * @author Maartje de Jonge
+ */
+public class OriginLeftCommentLinesPrimitive extends AbstractPrimitive {
+	
+	private static final String NAME = "SSL_EXT_origin_left_comment";
+	
+
+	public OriginLeftCommentLinesPrimitive() {
+		super(NAME, 0, 1);
+	}
+	
+	@Override
+	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		
+		if (tvars[0] instanceof IWrappedAstNode) {
+			IStrategoTerm result = call(env, (IWrappedAstNode) tvars[0]);
+			if (result != null) {
+				env.setCurrent(result);
+				return true;
+			}
+		}
+		return false;
+	}
+	
+	private IStrategoTerm call(IContext env, IWrappedAstNode node) {		
+		IToken start = node.getNode().getLeftIToken(); 
+		IPrsStream tokenStream=start.getIPrsStream();
+		IToken comment=null;
+		IToken previousNodeToken=null;
+		int tokenIndex=start.getTokenIndex()-1;
+		while(tokenIndex>=0 && previousNodeToken==null){
+			IToken tok=tokenStream.getTokenAt(tokenIndex);
+			if(!SGLRToken.isWhiteSpace(tok)){
+				if(comment==null && TokenKind.valueOf(tok.getKind())==TokenKind.TK_LAYOUT){
+					comment=tok;
+				}
+				if(TokenKind.valueOf(tok.getKind())!=TokenKind.TK_LAYOUT){
+					previousNodeToken=tok;
+				}
+			}
+			tokenIndex--;
+		}
+		if(comment!=null && (previousNodeToken==null || previousNodeToken.getEndLine() < comment.getLine())){
+			String commentText=tokenStream.getTokenText(comment.getTokenIndex());
+			return env.getFactory().makeString(commentText.trim());
+		}
+		return null;
+	}
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java	2010-04-16 08:07:48 UTC (rev 20768)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java	2010-04-16 14:54:01 UTC (rev 20769)
@@ -20,12 +20,12 @@
 	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
 		ITermFactory factory = env.getFactory();
 		IToken start = node.getNode().getLeftIToken();
-		IToken end = node.getNode().getLeftIToken();
+		IToken end = node.getNode().getRightIToken(); //FIXME: getRightIToken() gives the first token of the last LIST element 
 		return factory.makeTuple(
 				factory.makeInt(start.getLine()),
 				factory.makeInt(start.getColumn()),
-				factory.makeInt(end.getLine()),
-				factory.makeInt(end.getColumn()));
+				factory.makeInt(end.getEndLine()),
+				factory.makeInt(end.getEndColumn()));
 	}
 
 }

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	2010-04-16 14:54:01 UTC (rev 20769)
@@ -0,0 +1,68 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import java.util.ArrayList;
+
+import lpg.runtime.IPrsStream;
+import lpg.runtime.IToken;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.parser.tokens.SGLRToken;
+import org.strategoxt.imp.runtime.parser.tokens.TokenKind;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+
+/**
+ * Extracts all comment lines directly after the current node on the same line
+ * @author Maartje de Jonge
+ */
+public class OriginRightLineCommentPrimitive extends AbstractPrimitive {
+	
+	private static final String NAME = "SSL_EXT_origin_right_comment";
+	
+
+	public OriginRightLineCommentPrimitive() {
+		super(NAME, 0, 1);
+	}
+	
+	@Override
+	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		
+		if (tvars[0] instanceof IWrappedAstNode) {
+			IStrategoTerm result = call(env, (IWrappedAstNode) tvars[0]);
+			if (result != null) {
+				env.setCurrent(result);
+				return true;
+			}
+		}
+		return false;
+	}
+	
+	private IStrategoTerm call(IContext env, IWrappedAstNode node) {		
+		IToken start = node.getNode().getRightIToken(); 
+		IPrsStream tokenStream=start.getIPrsStream();
+		ArrayList<IToken> comments=new ArrayList<IToken>();
+		int tokenIndex=start.getTokenIndex()+1;
+		boolean hasComment=false;
+		while(tokenIndex<tokenStream.getSize() && tokenStream.getLine(tokenIndex)==start.getEndLine()){
+			IToken tok=tokenStream.getTokenAt(tokenIndex);			
+			if(TokenKind.valueOf(tok.getKind())==TokenKind.TK_LAYOUT){
+				comments.add(tok);
+				if(!SGLRToken.isWhiteSpace(tok)){
+					hasComment=true;
+				}
+			}			
+			tokenIndex++;
+		}
+		if(hasComment){
+			String commentText="";
+			for (IToken comm_txt : comments) {
+				commentText+=tokenStream.getTokenText(comm_txt.getTokenIndex());
+			}
+			return env.getFactory().makeString(commentText.replaceAll("\\s+$", ""));
+		}
+		return null;
+	}
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java	2010-04-16 14:54:01 UTC (rev 20769)
@@ -0,0 +1,67 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import static org.spoofax.interpreter.core.Tools.isTermString;
+
+import java.util.ArrayList;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoList;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.parser.ast.ListAstNode;
+import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+
+/**
+ * Returns the (sub)list with origin nodes by mapping all subterms of a list one by one.
+ * It is checked that all origin nodes have the same list-parent and are sequential.
+ * @author Maartje de Jonge
+ */
+public class OriginSublistTermPrimitive extends AbstractPrimitive {
+	
+	private static final String NAME = "SSL_EXT_origin_sublist_term";
+
+	public OriginSublistTermPrimitive() {
+		super(NAME, 0, 2);
+	}
+	
+	@Override
+	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		if (!isTermString(tvars[0]) || !(tvars[1] instanceof IStrategoList))
+			return false;
+		IStrategoList list=(IStrategoList)tvars[1];
+		if(list.isEmpty())
+			return false;
+		for (IStrategoTerm child : list.getAllSubterms()) {
+			if(!(child instanceof IWrappedAstNode))
+				return false;
+		}
+		IStrategoAstNode firstChildNode=((IWrappedAstNode)list.get(0)).getNode();
+		IStrategoAstNode commonParentList=firstChildNode.getParent();
+		ArrayList<IStrategoAstNode> childNodes=commonParentList.getChildren();
+		if(!(commonParentList instanceof ListAstNode))
+			return false;
+		int startIndex=-1;
+		for (int i = 0; i < childNodes.size(); i++) {
+			if(childNodes.get(i)==firstChildNode){
+				startIndex=i;
+				break;
+			}
+		}
+		for (int i = 0; i < list.size(); i++) {
+			if(childNodes.size()<=i+startIndex)
+				return false;
+			IStrategoAstNode childNode=((IWrappedAstNode)list.get(i)).getNode();
+			if(childNodes.get(i+startIndex)!=childNode)
+				return false;
+		}
+		IStrategoAstNode lastChildNode=((IWrappedAstNode)list.get(list.size()-1)).getNode();
+		ListAstNode result = (ListAstNode)StrategoTermPath.findCommonAncestor(firstChildNode, lastChildNode);
+		if (result == null) 
+			return false;
+		env.setCurrent(result.getTerm());
+		return true;
+	}
+	
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java	2010-04-16 14:54:01 UTC (rev 20769)
@@ -0,0 +1,50 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import static org.spoofax.interpreter.core.Tools.isTermString;
+import lpg.runtime.ILexStream;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.lang.terms.StrategoInt;
+import org.strategoxt.lang.terms.StrategoTuple;
+
+/**
+ * Returns the textfragment that corresponds to the given char position (offset, offset-end)
+ * @author Maartje de Jonge
+ */
+public class OriginTextFragmentPrimitive extends AbstractPrimitive {
+
+private static final String NAME = "SSL_EXT_origin_textfragment";
+
+	public OriginTextFragmentPrimitive() {
+		super(NAME, 0, 2);
+	}
+	
+	@Override //TODO support (l,c,end-l,end-c)[see TextChangePrimitive]
+	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		if (!isTermString(tvars[0]) || !(tvars[1] instanceof StrategoTuple))
+			return false;
+		StrategoTuple position=(StrategoTuple)tvars[1];
+		if(!(position.get(0) instanceof StrategoInt && position.get(1) instanceof StrategoInt))
+			return false;
+		int pos_start=((StrategoInt)position.get(0)).intValue();
+		int pos_end=((StrategoInt)position.get(1)).intValue();
+		ILexStream lexStream= EditorState.getActiveEditor().getParseController().getCurrentAst().getLeftIToken().getILexStream();
+		if(isBadLocation(pos_start, pos_end, lexStream))
+			return false;
+		String textfragment=lexStream.toString(pos_start, pos_end);
+		IStrategoString result = env.getFactory().makeString(textfragment);
+		if (result == null) return false;
+		env.setCurrent(result);
+		return true;
+	}
+
+	private boolean isBadLocation(int pos_start, int pos_end, ILexStream lexStream) {
+		return pos_start < 0 || pos_start > pos_end || pos_end >= lexStream.getStreamLength();
+	}
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-04-16 14:54:01 UTC (rev 20769)
@@ -0,0 +1,108 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import static org.spoofax.interpreter.core.Tools.isTermString;
+
+import java.util.ArrayList;
+
+import lpg.runtime.ILexStream;
+
+import org.eclipse.jface.text.BadLocationException;
+import org.eclipse.jface.text.IDocument;
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNodeList;
+import org.strategoxt.lang.terms.StrategoInt;
+import org.strategoxt.lang.terms.StrategoTuple;
+
+/**
+ * Applies a text-change in the current document
+ * Arguments:
+ * a. (AstNode, "textfragment") of 
+ * b. ((offset, end-offset), "textfragment") of
+ * c. ((l, c, end-l, end-c), "textfragment")
+ * @author Maartje de Jonge
+ */
+public class TextChangePrimitive extends AbstractPrimitive {
+	
+	private static final String NAME = "SSL_EXT_text_change";
+
+	public TextChangePrimitive() {
+		super(NAME, 0, 2);
+	}
+	
+	@Override
+	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		if (tvars.length!=2 || !isTermString(tvars[1]))
+			return false;
+		if(!(tvars[0] instanceof IWrappedAstNode || islocationTuple(tvars[0])))
+			return false;
+		EditorState editor = EditorState.getActiveEditor();
+		ILexStream lexStream= editor.getParseController().getCurrentAst().getLeftIToken().getILexStream();
+		int position_start = -1;
+		int position_end = -1;
+		if(tvars[0] instanceof IWrappedAstNode){
+			position_start=((IWrappedAstNode)tvars[0]).getNode().getLeftIToken().getStartOffset();
+			position_end=((IWrappedAstNode)tvars[0]).getNode().getRightIToken().getEndOffset()+1;
+			//FIXME: getRightIToken() gives the first token of the last list element instead of the last token.
+			//This code block is a workaround
+			if(tvars[0] instanceof WrappedAstNodeList){
+				ArrayList childNodes=((IWrappedAstNode)tvars[0]).getNode().getChildren();
+				if(!childNodes.isEmpty()){
+					IStrategoAstNode lastChild=(IStrategoAstNode)childNodes.get(childNodes.size()-1);
+					position_end=lastChild.getRightIToken().getEndOffset()+1;
+				}
+			}
+		}
+		else{
+			StrategoTuple tuple=(StrategoTuple)tvars[0];
+			if(tuple.size()==2){
+				position_start=((StrategoInt)tuple.get(0)).intValue();
+				position_end=((StrategoInt)tuple.get(1)).intValue();
+			}
+			if(tuple.size()==4){
+				int line_start=((StrategoInt)tuple.get(0)).intValue()-1;
+				int col_start=((StrategoInt)tuple.get(1)).intValue();
+				int line_end=((StrategoInt)tuple.get(2)).intValue()-1;
+				int col_end=((StrategoInt)tuple.get(3)).intValue();
+				position_start=lexStream.getLineOffset(line_start)+col_start;
+				position_end=lexStream.getLineOffset(line_end)+col_end+1;
+			}
+		}
+		String text = ((IStrategoString)tvars[1]).stringValue();
+		try {
+			IDocument doc = editor.getDocument();
+			if(isBadLocation(position_start, position_end, lexStream))
+				return false;
+			doc.replace(position_start, position_end-position_start, text);
+		} 
+		catch (BadLocationException e) {
+			e.printStackTrace();
+			return false;
+		}
+		return true;
+	}
+
+	private boolean islocationTuple(IStrategoTerm term) {
+		if (!(term instanceof StrategoTuple))
+			return false;
+		StrategoTuple tuple=(StrategoTuple)term;
+		if(tuple.size()!=2 && tuple.size()!=4)
+			return false;
+		for (int i = 0; i < tuple.size(); i++) {
+			if(!(tuple.get(i) instanceof StrategoInt))
+				return false;
+		}
+		return true;
+	}
+	
+	private boolean isBadLocation(int pos_start, int pos_end, ILexStream lexStream) {
+		return pos_start < 0 || pos_start > pos_end || pos_end >= lexStream.getStreamLength();
+	}
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain



From m.dejonge at tudelft.nl  Mon Apr 19 09:24:01 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 19 Apr 2010 07:24:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20770 - MaartjeDeJonge -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201004190824.o3J8O0Uw010224@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-19 07:24:00 +0000 (Mon, 19 Apr 2010)
New Revision: 20770

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20770&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java

Log:
sublist containing one node

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java	2010-04-16 14:54:01 UTC (rev 20769)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java	2010-04-19 07:24:00 UTC (rev 20770)
@@ -9,6 +9,8 @@
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.parser.ast.AstNode;
+import org.strategoxt.imp.runtime.parser.ast.AstNodeFactory;
 import org.strategoxt.imp.runtime.parser.ast.ListAstNode;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
 import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
@@ -57,7 +59,7 @@
 				return false;
 		}
 		IStrategoAstNode lastChildNode=((IWrappedAstNode)list.get(list.size()-1)).getNode();
-		ListAstNode result = (ListAstNode)StrategoTermPath.findCommonAncestor(firstChildNode, lastChildNode);
+		AstNode result =new AstNodeFactory().createSublist((ListAstNode) commonParentList, firstChildNode, lastChildNode, true); 
 		if (result == null) 
 			return false;
 		env.setCurrent(result.getTerm());



From m.dejonge at tudelft.nl  Wed Apr 21 12:31:08 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 21 Apr 2010 10:31:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20771 - MaartjeDeJonge
	- in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	services stratego
Message-ID: <201004211031.o3LAV8jd019769@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-21 10:31:08 +0000 (Wed, 21 Apr 2010)
New Revision: 20771

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20771&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSourceTextPrimitive.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java

Log:
- primitives
- null pointer exception

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	2010-04-19 07:24:00 UTC (rev 20770)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	2010-04-21 10:31:08 UTC (rev 20771)
@@ -32,6 +32,7 @@
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.tokens.TokenKind;
+import org.strategoxt.stratego_lib.getenv_0_0;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
@@ -384,7 +385,13 @@
 	}
 	
 	private static int getTabWidth() {
-		IPreferenceStore preferences = lastEditor.getThePreferenceStore();
+		IPreferenceStore preferences;
+		if(lastEditor!=null){
+			preferences = lastEditor.getThePreferenceStore();
+		}
+		else{
+			preferences = EditorState.getActiveEditor().getEditor().getThePreferenceStore();
+		}
 		return preferences.getInt(EDITOR_TAB_WIDTH); // PreferenceCache.tabWidth;
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-19 07:24:00 UTC (rev 20770)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-21 10:31:08 UTC (rev 20771)
@@ -25,6 +25,8 @@
 		add(new OriginLeftCommentLinesPrimitive());
 		add(new OriginRightLineCommentPrimitive());
 		add(new TextChangePrimitive());
+		add(new OriginPositionToLocationPrimitive());
+		add(new OriginSourceTextPrimitive());
 	}
 
 	public String getOperatorRegistryName() {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	2010-04-19 07:24:00 UTC (rev 20770)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	2010-04-21 10:31:08 UTC (rev 20771)
@@ -57,7 +57,12 @@
 		}
 		if(comment!=null && (previousNodeToken==null || previousNodeToken.getEndLine() < comment.getLine())){
 			String commentText=tokenStream.getTokenText(comment.getTokenIndex());
-			return env.getFactory().makeString(commentText.trim());
+			return env.getFactory().makeTuple(
+					env.getFactory().makeInt(comment.getStartOffset()),
+					env.getFactory().makeInt(comment.getEndOffset()),
+					env.getFactory().makeString(commentText)
+			);
+			//return env.getFactory().makeString(commentText.trim());
 		}
 		return null;
 	}

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java	2010-04-21 10:31:08 UTC (rev 20771)
@@ -0,0 +1,51 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import static org.spoofax.interpreter.core.Tools.isTermString;
+import lpg.runtime.ILexStream;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.IStrategoTuple;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.lang.terms.StrategoInt;
+import org.strategoxt.lang.terms.StrategoTuple;
+
+/**
+ * Extracts all comment lines directly after the current node on the same line
+ * @author Maartje de Jonge
+ */
+public class OriginPositionToLocationPrimitive extends AbstractPrimitive {
+	
+	private static final String NAME = "SSL_EXT_origin_pos_to_loc";
+	
+
+	public OriginPositionToLocationPrimitive() {
+		super(NAME, 0, 1);
+	}
+	
+	@Override 
+	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		if (!(tvars[0] instanceof StrategoInt))
+			return false;
+		int position=((StrategoInt)tvars[0]).intValue();
+		ILexStream lexStream= EditorState.getActiveEditor().getParseController().getCurrentAst().getLeftIToken().getILexStream();
+		if(isBadLocation(position, lexStream))
+			return false;
+		int col=lexStream.getColumnOfCharAt(position);
+		int line=lexStream.getLineNumberOfCharAt(position);
+		IStrategoTuple result = env.getFactory().makeTuple(
+				env.getFactory().makeInt(line),
+				env.getFactory().makeInt(col)
+		);
+		env.setCurrent(result);
+		return true;
+	}
+
+	private boolean isBadLocation(int pos, ILexStream lexStream) {
+		return pos < 0 || pos >= lexStream.getStreamLength();
+	}
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	2010-04-19 07:24:00 UTC (rev 20770)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	2010-04-21 10:31:08 UTC (rev 20771)
@@ -60,7 +60,12 @@
 			for (IToken comm_txt : comments) {
 				commentText+=tokenStream.getTokenText(comm_txt.getTokenIndex());
 			}
-			return env.getFactory().makeString(commentText.replaceAll("\\s+$", ""));
+			return env.getFactory().makeTuple(
+					env.getFactory().makeInt(comments.get(0).getStartOffset()),
+					env.getFactory().makeInt(comments.get(comments.size()-1).getEndOffset()),
+					env.getFactory().makeString(commentText.replaceAll("\\s+$", ""))
+			);
+			//return env.getFactory().makeString(commentText.replaceAll("\\s+$", ""));
 		}
 		return null;
 	}

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSourceTextPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSourceTextPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSourceTextPrimitive.java	2010-04-21 10:31:08 UTC (rev 20771)
@@ -0,0 +1,36 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import static org.spoofax.interpreter.core.Tools.isTermString;
+import lpg.runtime.ILexStream;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.lang.terms.StrategoInt;
+import org.strategoxt.lang.terms.StrategoTuple;
+
+/**
+ * Returns the textfragment that corresponds to the current file
+ * @author Maartje de Jonge
+ */
+public class OriginSourceTextPrimitive extends AbstractPrimitive {
+
+private static final String NAME = "SSL_EXT_origin_source_text";
+
+	public OriginSourceTextPrimitive() {
+		super(NAME, 0, 2);
+	}
+	
+	@Override
+	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		ILexStream lexStream = EditorState.getActiveEditor().getCurrentAst()
+			.getLeftIToken().getILexStream();
+		String sourcetext=lexStream.toString(0, lexStream.getStreamLength()-1);
+		IStrategoString result = env.getFactory().makeString(sourcetext);
+		env.setCurrent(result);
+		return true;
+	}
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSourceTextPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java	2010-04-19 07:24:00 UTC (rev 20770)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java	2010-04-21 10:31:08 UTC (rev 20771)
@@ -29,22 +29,51 @@
 		if (!isTermString(tvars[0]) || !(tvars[1] instanceof StrategoTuple))
 			return false;
 		StrategoTuple position=(StrategoTuple)tvars[1];
+		String textfragment=null;
+		if (position.getSubtermCount()==2) {
+			textfragment = textFromCharPosition(position);
+		}
+		else if (position.getSubtermCount()==4) {
+			textfragment = textFromLocation(position);
+		}	
+		if (textfragment == null) return false;
+		IStrategoString result = env.getFactory().makeString(textfragment);
+		env.setCurrent(result);
+		return true;
+	}
+
+	private String textFromCharPosition(StrategoTuple position) {
 		if(!(position.get(0) instanceof StrategoInt && position.get(1) instanceof StrategoInt))
-			return false;
+			return null;
 		int pos_start=((StrategoInt)position.get(0)).intValue();
 		int pos_end=((StrategoInt)position.get(1)).intValue();
 		ILexStream lexStream= EditorState.getActiveEditor().getParseController().getCurrentAst().getLeftIToken().getILexStream();
 		if(isBadLocation(pos_start, pos_end, lexStream))
-			return false;
+			return null;
 		String textfragment=lexStream.toString(pos_start, pos_end);
-		IStrategoString result = env.getFactory().makeString(textfragment);
-		if (result == null) return false;
-		env.setCurrent(result);
-		return true;
+		return textfragment;
 	}
+	
+	private String textFromLocation(StrategoTuple position) {
+		if(!(position.get(0) instanceof StrategoInt && position.get(1) instanceof StrategoInt && position.get(2) instanceof StrategoInt && position.get(3) instanceof StrategoInt))
+			return null;
+		int line_start=((StrategoInt)position.get(0)).intValue();
+		int col_start=((StrategoInt)position.get(1)).intValue();
+		int line_end=((StrategoInt)position.get(2)).intValue();
+		int col_end=((StrategoInt)position.get(3)).intValue();
+		ILexStream lexStream= EditorState.getActiveEditor().getParseController().getCurrentAst().getLeftIToken().getILexStream();
+		int pos_start=lexStream.getLineOffset(line_start)+col_start; //FIXME: bad location
+		int pos_end=lexStream.getLineOffset(line_end)+col_end;
+		if(isBadLocation(pos_start, pos_end, lexStream))
+			return null;
+		String textfragment=lexStream.toString(pos_start, pos_end);
+		return textfragment;
+	}
 
 	private boolean isBadLocation(int pos_start, int pos_end, ILexStream lexStream) {
 		return pos_start < 0 || pos_start > pos_end || pos_end >= lexStream.getStreamLength();
 	}
+	
+	
 
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-04-19 07:24:00 UTC (rev 20770)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-04-21 10:31:08 UTC (rev 20771)
@@ -70,7 +70,7 @@
 				int col_start=((StrategoInt)tuple.get(1)).intValue();
 				int line_end=((StrategoInt)tuple.get(2)).intValue()-1;
 				int col_end=((StrategoInt)tuple.get(3)).intValue();
-				position_start=lexStream.getLineOffset(line_start)+col_start;
+				position_start=lexStream.getLineOffset(line_start)+col_start; //FIXME deal with bad location
 				position_end=lexStream.getLineOffset(line_end)+col_end+1;
 			}
 		}



From R.B.Vermaas at tudelft.nl  Wed Apr 21 21:43:59 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 21 Apr 2010 19:43:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20772 - rob -
	hydra/strategoxt
Message-ID: <201004211943.o3LJhxlc027694@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-04-21 19:43:58 +0000 (Wed, 21 Apr 2010)
New Revision: 20772

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20772&view=rev

Modified:
   hydra/strategoxt/packages.nix

Log:
change systems supported for dyad and strc-java

Changes:

Modified: hydra/strategoxt/packages.nix
===================================================================
--- hydra/strategoxt/packages.nix	2010-04-21 10:31:08 UTC (rev 20771)
+++ hydra/strategoxt/packages.nix	2010-04-21 19:43:58 UTC (rev 20772)
@@ -377,7 +377,7 @@
       rpmBuildSupported = true;
       rpmRequires = requires ++ [jdk];
       systemSupported = systemSupport pkgs {
-        powerpc = false; cygwin = false; bsd = false; darwin = false; mingw = false;
+        powerpc = false; cygwin = false; bsd = false; darwin = true; mingw = false;
       };
     };
 
@@ -435,6 +435,9 @@
           echo "file jar $out/share/strc-java/strategoxt.jar" >> $out/nix-support/hydra-build-products
         '';
       };
+      systemSupported = systemSupport pkgs {
+        powerpc = false; cygwin = false; bsd = false; darwin = true; mingw = false; 
+      };
     };
 
   /**



From m.dejonge at tudelft.nl  Wed Apr 21 22:44:45 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 21 Apr 2010 20:44:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20773 - MaartjeDeJonge -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201004212044.o3LKikWr028253@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-21 20:44:45 +0000 (Wed, 21 Apr 2010)
New Revision: 20773

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20773&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSourceTextPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java	2010-04-21 19:43:58 UTC (rev 20772)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java	2010-04-21 20:44:45 UTC (rev 20773)
@@ -1,17 +1,14 @@
 package org.strategoxt.imp.runtime.stratego;
 
-import static org.spoofax.interpreter.core.Tools.isTermString;
 import lpg.runtime.ILexStream;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.library.AbstractPrimitive;
 import org.spoofax.interpreter.stratego.Strategy;
-import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.IStrategoTuple;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.lang.terms.StrategoInt;
-import org.strategoxt.lang.terms.StrategoTuple;
 
 /**
  * Extracts all comment lines directly after the current node on the same line

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	2010-04-21 19:43:58 UTC (rev 20772)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	2010-04-21 20:44:45 UTC (rev 20773)
@@ -60,10 +60,12 @@
 			for (IToken comm_txt : comments) {
 				commentText+=tokenStream.getTokenText(comm_txt.getTokenIndex());
 			}
+			String lo_correctedText=commentText.replaceAll("\\s+$", "");
+			int endPosCorrection=commentText.length()-lo_correctedText.length();
 			return env.getFactory().makeTuple(
 					env.getFactory().makeInt(comments.get(0).getStartOffset()),
-					env.getFactory().makeInt(comments.get(comments.size()-1).getEndOffset()),
-					env.getFactory().makeString(commentText.replaceAll("\\s+$", ""))
+					env.getFactory().makeInt(comments.get(comments.size()-1).getEndOffset()-endPosCorrection),
+					env.getFactory().makeString(lo_correctedText)
 			);
 			//return env.getFactory().makeString(commentText.replaceAll("\\s+$", ""));
 		}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSourceTextPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSourceTextPrimitive.java	2010-04-21 19:43:58 UTC (rev 20772)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSourceTextPrimitive.java	2010-04-21 20:44:45 UTC (rev 20773)
@@ -1,6 +1,5 @@
 package org.strategoxt.imp.runtime.stratego;
 
-import static org.spoofax.interpreter.core.Tools.isTermString;
 import lpg.runtime.ILexStream;
 
 import org.spoofax.interpreter.core.IContext;
@@ -9,8 +8,6 @@
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.EditorState;
-import org.strategoxt.lang.terms.StrategoInt;
-import org.strategoxt.lang.terms.StrategoTuple;
 
 /**
  * Returns the textfragment that corresponds to the current file

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java	2010-04-21 19:43:58 UTC (rev 20772)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java	2010-04-21 20:44:45 UTC (rev 20773)
@@ -30,8 +30,10 @@
 	
 	@Override
 	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
-		if (!isTermString(tvars[0]) || !(tvars[1] instanceof IStrategoList))
+		if (!isTermString(tvars[0]) || !(tvars[1] instanceof IStrategoList))//|| (tvars[1].getTermType()!= IStrategoTerm.LIST)
 			return false;
+		if(tvars[1].getTermType()!= IStrategoTerm.LIST)
+			return false;
 		IStrategoList list=(IStrategoList)tvars[1];
 		if(list.isEmpty())
 			return false;



From m.dejonge at tudelft.nl  Thu Apr 22 14:33:34 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 22 Apr 2010 12:33:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20774 - MaartjeDeJonge
	- in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	parser/ast stratego
Message-ID: <201004221233.o3MCXZjK010633@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-22 12:33:34 +0000 (Thu, 22 Apr 2010)
New Revision: 20774

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20774&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SelectedFromToPrimitive.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ListAstNode.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/SubListAstNode.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java

Log:
bugfix: sublist containing duplicate nodes
primitive: selected-from-to
sublist: list-index-start (to calculate the position of a sublist child) 

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeFactory.java	2010-04-21 20:44:45 UTC (rev 20773)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeFactory.java	2010-04-22 12:33:34 UTC (rev 20774)
@@ -68,8 +68,8 @@
 	
 	public AstNode createSublist(ListAstNode list, IStrategoAstNode startChild, IStrategoAstNode endChild, boolean cloneFirst) {
 		ArrayList<AstNode> children = new ArrayList<AstNode>();
-		int startOffset = list.getChildren().indexOf(startChild);
-		int endOffset = list.getChildren().indexOf(endChild);
+		int startOffset = getChildIndex(list, startChild);
+		int endOffset = getChildIndex(list, endChild);
 		
 		for (int i = startOffset; i <= endOffset; i++) {
 			AstNode child = list.getChildren().get(i);
@@ -77,10 +77,21 @@
 			children.add(child);
 		}
 		
-		AstNode result = new SubListAstNode(list, list.getElementSort(), startChild.getLeftIToken(), endChild.getLeftIToken(), children);
+		AstNode result = new SubListAstNode(list, list.getElementSort(),
+				startChild.getLeftIToken(), endChild.getLeftIToken(), children, startOffset);
 		if (cloneFirst) result = result.cloneIgnoreTokens();
 		list.overrideReferences(list.getLeftIToken(), list.getRightIToken(), children, result);
 		result.setParent(list);
 		return result;
 	}
+
+	private int getChildIndex(ListAstNode list, IStrategoAstNode child) {
+		for (int i = 0; i<list.getChildren().size(); i++){
+			if (child==list.getChildren().get(i))
+			    return i;
+		}
+		return -1;
+	}
+	
+	
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ListAstNode.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ListAstNode.java	2010-04-21 20:44:45 UTC (rev 20773)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ListAstNode.java	2010-04-22 12:33:34 UTC (rev 20774)
@@ -38,4 +38,12 @@
 		}
 		printer.print("]");
 	}
+	
+	public AstNode getFirstChild() {
+		return getChildren().get(0);
+	}
+	
+	public AstNode getLastChild() {
+		return getChildren().get(getChildren().size() - 1);
+	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/SubListAstNode.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/SubListAstNode.java	2010-04-21 20:44:45 UTC (rev 20773)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/SubListAstNode.java	2010-04-22 12:33:34 UTC (rev 20774)
@@ -2,6 +2,8 @@
 
 import java.util.ArrayList;
 
+import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
+
 import lpg.runtime.IToken;
 
 /**
@@ -13,20 +15,24 @@
 
 	private final ListAstNode completeList;
 
-	public SubListAstNode(ListAstNode completeList, String elementSort, IToken leftToken, IToken rightToken, ArrayList<AstNode> children) {
+	private int indexStart;
+
+	public int getIndexStart() {
+		return indexStart;
+	}
+
+	public int getIndexEnd() {
+		return indexStart + this.getChildren().size()-1;
+	}
+
+	public SubListAstNode(ListAstNode completeList, String elementSort, IToken leftToken,
+			IToken rightToken, ArrayList<AstNode> children, int indexStart) {
 		super(elementSort, leftToken, rightToken, children);
 		this.completeList = completeList;
+		this.indexStart = indexStart;
 	}
 
 	public ListAstNode getCompleteList() {
 		return completeList;
 	}
-	
-	public AstNode getFirstChild() {
-		return getChildren().get(0);
-	}
-	
-	public AstNode getLastChild() {
-		return getChildren().get(getChildren().size() - 1);
-	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-21 20:44:45 UTC (rev 20773)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-22 12:33:34 UTC (rev 20774)
@@ -27,6 +27,7 @@
 		add(new TextChangePrimitive());
 		add(new OriginPositionToLocationPrimitive());
 		add(new OriginSourceTextPrimitive());
+		add(new SelectedFromToPrimitive());
 	}
 
 	public String getOperatorRegistryName() {

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SelectedFromToPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SelectedFromToPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SelectedFromToPrimitive.java	2010-04-22 12:33:34 UTC (rev 20774)
@@ -0,0 +1,69 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import static org.spoofax.interpreter.core.Tools.isTermString;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoList;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.parser.ast.AstNode;
+import org.strategoxt.imp.runtime.parser.ast.AstNodeFactory;
+import org.strategoxt.imp.runtime.parser.ast.ListAstNode;
+import org.strategoxt.imp.runtime.parser.ast.SubListAstNode;
+import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+
+/**
+ * Returns the start and end position of the selection
+ * The start and end position are relevant for selected sublists
+ * @author Maartje de Jonge
+ */
+public class SelectedFromToPrimitive extends AbstractPrimitive {
+	
+	private static final String NAME = "SSL_EXT_selected_from_to_position";
+
+	public SelectedFromToPrimitive() {
+		super(NAME, 0, 2);
+	}
+	
+	@Override
+	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		EditorState editor =EditorState.getActiveEditor();
+		IStrategoAstNode node = editor.getSelectionAst(true);
+		if (node == null) 
+			node = editor.getCurrentAst();
+		IStrategoList posStart;
+		IStrategoList posEnd;
+		if (node instanceof SubListAstNode){
+			int start = ((SubListAstNode)node).getIndexStart();
+			posStart = createPathToSublistChild((SubListAstNode)node, start);
+			int end = ((SubListAstNode)node).getIndexEnd();
+			posEnd = createPathToSublistChild((SubListAstNode)node, end);
+
+		} else{
+			posStart=StrategoTermPath.createPath(node);
+			posEnd=StrategoTermPath.createPath(node);
+		}
+		env.setCurrent(
+			env.getFactory().makeTuple(
+					posStart,
+					posEnd
+			)
+		);
+		return true;
+	}
+
+	private IStrategoList createPathToSublistChild(SubListAstNode node, int posInCompleteList) {
+		IStrategoList posStart;
+		List<Integer> pathToStart = StrategoTermPath.createPathList(node);
+		pathToStart.add(Integer.valueOf(posInCompleteList));
+		posStart =StrategoTermPath.toStrategoPath(pathToStart);
+		return posStart;
+	}
+	
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SelectedFromToPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-04-21 20:44:45 UTC (rev 20773)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-04-22 12:33:34 UTC (rev 20774)
@@ -38,18 +38,15 @@
 	}
 	
 	public static IStrategoList createPath(IStrategoAstNode node) {
-		if (node instanceof SubListAstNode)
-			node = ((SubListAstNode) node).getCompleteList();
+		List<Integer> pathInts=createPathList(node);
+		return toStrategoPath(pathInts);
+	}
+
+	public static IStrategoList toStrategoPath(List<Integer> pathInts) {
 		LinkedList<IStrategoTerm> results = new LinkedList<IStrategoTerm>();
-		
-		while (node.getParent() != null) {
-			IStrategoAstNode parent = node.getParent();
-			ArrayList children = parent.getChildren();
-			int index = indexOfIdentical(children, node);
-			results.addFirst(Environment.getTermFactory().makeInt(index));
-			node = node.getParent();
+		for (int i = 0; i < pathInts.size(); i++) {
+			results.add(Environment.getTermFactory().makeInt(pathInts.get(i)));
 		}
-		
 		return Environment.getTermFactory().makeList(results);
 	}
 	
@@ -64,7 +61,6 @@
 			results.addFirst(Integer.valueOf(index));
 			node = node.getParent();
 		}
-		
 		return results;
 	}
 	



From L.C.L.Kats at tudelft.nl  Thu Apr 22 15:25:46 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 22 Apr 2010 13:25:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20775 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.generator/src/sdf2imp/services
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
	org.strategoxt.imp.updatesite
Message-ID: <201004221325.o3MDPkEo011610@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-22 13:25:45 +0000 (Thu, 22 Apr 2010)
New Revision: 20775

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20775&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceMappings.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
- disabled 'on save' by default; problematic once you change the syntax and not semantics
- killed Spoofax/88 dead

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-22 12:33:34 UTC (rev 20774)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-22 13:25:45 UTC (rev 20775)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.4"
+      version="0.4.4.1"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str	2010-04-22 12:33:34 UTC (rev 20774)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-parse-controller.str	2010-04-22 13:25:45 UTC (rev 20775)
@@ -15,6 +15,9 @@
 
   create-parse-controller =
     // TODO: do not overwrite existing parse controller
+    //       or add a comment explaining it's always overwritten and users
+    //       can add a new class if they want to as long as they reference
+    //       it from plugin.xml
     x_name  := <parse-controller-name>;
     pkgname := <get-package-name>;
     table   := <get-sdf-main-module>;

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str	2010-04-22 12:33:34 UTC (rev 20774)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-builders-descriptor.str	2010-04-22 13:25:45 UTC (rev 20775)
@@ -32,7 +32,7 @@
           builder: "Generate Java code"   = generate-java  (openeditor) (realtime)
           builder: "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)
           ~~
-          on save: generate-java
+          ~// on save: generate-java
       ]|
     );
     

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	2010-04-22 12:33:34 UTC (rev 20774)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPImplodeAsfixStrategy.java	2010-04-22 13:25:45 UTC (rev 20775)
@@ -1,7 +1,5 @@
 package org.strategoxt.imp.runtime.stratego;
 
-import static org.spoofax.interpreter.core.Tools.isTermAppl;
-
 import java.io.File;
 
 import org.spoofax.interpreter.library.IOperatorRegistry;
@@ -42,9 +40,7 @@
 		SourceMappings mappings = ((IMPJSGLRLibrary) library).getMappings();
 		char[] inputChars = mappings.getInputChars(asfix);
 		ATerm asfixATerm = mappings.getInputTerm(asfix);
-		File inputFile = isTermAppl(asfix)
-				? mappings.getInputFile((IStrategoAppl) asfix)
-				: null;
+		File inputFile = mappings.getInputFile((IStrategoAppl) asfix);
 		SGLRTokenizer tokenizer = mappings.getTokenizer(asfix);
 		
 		if (inputChars == null || asfix == null) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceMappings.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceMappings.java	2010-04-22 12:33:34 UTC (rev 20774)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceMappings.java	2010-04-22 13:25:45 UTC (rev 20775)
@@ -1,8 +1,7 @@
 package org.strategoxt.imp.runtime.stratego;
 
-import static org.spoofax.interpreter.core.Tools.isTermAppl;
 import static org.spoofax.interpreter.core.Tools.isTermString;
-import static org.strategoxt.imp.runtime.stratego.SourceMappings.MappableTerm.*;
+import static org.strategoxt.imp.runtime.stratego.SourceMappings.MappableTerm.getValue;
 
 import java.io.File;
 import java.util.Map;
@@ -12,7 +11,7 @@
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.parser.tokens.SGLRTokenizer;
-import org.strategoxt.lang.terms.StrategoWrapped;
+import org.strategoxt.lang.LazyTerm;
 
 import aterm.ATerm;
 
@@ -45,7 +44,7 @@
 	}
 	
 	public File putInputFileForTree(MappableTerm asfix, File file) {
-		assert isTermAppl(asfix);
+		// assert isTermAppl(asfix);
 		return asfixInputFileMap.put(asfix.key, file);
 	}
 
@@ -70,7 +69,7 @@
 	}
 	
 	public File getInputFile(IStrategoAppl asfix) {
-		assert isTermAppl(asfix);
+		// assert isTermAppl(asfix);
 		return getValue(asfixInputFileMap, asfix);
 	}
 	
@@ -92,19 +91,31 @@
 	 * 
 	 * @author Lennart Kats <lennart add lclnet.nl>
 	 */
-	public static class MappableTerm extends StrategoWrapped {
+	public static class MappableTerm extends LazyTerm {
 
 		private final MappableKey key = new MappableKey();
 		
+		private final IStrategoTerm wrapped;
+		
 		public MappableTerm(IStrategoTerm wrapped) {
-			super(wrapped);
+			this.wrapped = wrapped;
 		}
+		
+		@Override
+		protected IStrategoTerm init() {
+			return wrapped;
+		}
 
 		@Override
 		public int getStorageType() {
 			return IMMUTABLE;
 		}
 		
+		@Override
+		public int getTermType() {
+			return wrapped.getTermType();
+		}
+		
 		public static<T> T getValue(Map<? extends MappableKey, T> map, IStrategoTerm term) {
 			if (term instanceof MappableTerm) {
 				return map.get(((MappableTerm) term).key);

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-22 12:33:34 UTC (rev 20774)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-22 13:25:45 UTC (rev 20775)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.4.jar" id="org.strategoxt.imp" version="0.4.4">
+   <feature url="features/org.strategoxt.imp_0.4.4.1.jar" id="org.strategoxt.imp" version="0.4.4.1">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From m.dejonge at tudelft.nl  Thu Apr 22 16:06:36 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 22 Apr 2010 14:06:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20776 - MaartjeDeJonge
	- in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	parser/ast stratego
Message-ID: <201004221406.o3ME6aDG012310@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-22 14:06:36 +0000 (Thu, 22 Apr 2010)
New Revision: 20776

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20776&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java

Log:
bugfix: right token for lists

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeFactory.java	2010-04-22 13:25:45 UTC (rev 20775)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeFactory.java	2010-04-22 14:06:36 UTC (rev 20776)
@@ -78,7 +78,7 @@
 		}
 		
 		AstNode result = new SubListAstNode(list, list.getElementSort(),
-				startChild.getLeftIToken(), endChild.getLeftIToken(), children, startOffset);
+				startChild.getLeftIToken(), endChild.getRightIToken(), children, startOffset);
 		if (cloneFirst) result = result.cloneIgnoreTokens();
 		list.overrideReferences(list.getLeftIToken(), list.getRightIToken(), children, result);
 		result.setParent(list);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java	2010-04-22 13:25:45 UTC (rev 20775)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLocationPrimitive.java	2010-04-22 14:06:36 UTC (rev 20776)
@@ -20,7 +20,7 @@
 	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
 		ITermFactory factory = env.getFactory();
 		IToken start = node.getNode().getLeftIToken();
-		IToken end = node.getNode().getRightIToken(); //FIXME: getRightIToken() gives the first token of the last LIST element 
+		IToken end = node.getNode().getRightIToken();  
 		return factory.makeTuple(
 				factory.makeInt(start.getLine()),
 				factory.makeInt(start.getColumn()),

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-04-22 13:25:45 UTC (rev 20775)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-04-22 14:06:36 UTC (rev 20776)
@@ -49,15 +49,6 @@
 		if(tvars[0] instanceof IWrappedAstNode){
 			position_start=((IWrappedAstNode)tvars[0]).getNode().getLeftIToken().getStartOffset();
 			position_end=((IWrappedAstNode)tvars[0]).getNode().getRightIToken().getEndOffset()+1;
-			//FIXME: getRightIToken() gives the first token of the last list element instead of the last token.
-			//This code block is a workaround
-			if(tvars[0] instanceof WrappedAstNodeList){
-				ArrayList childNodes=((IWrappedAstNode)tvars[0]).getNode().getChildren();
-				if(!childNodes.isEmpty()){
-					IStrategoAstNode lastChild=(IStrategoAstNode)childNodes.get(childNodes.size()-1);
-					position_end=lastChild.getRightIToken().getEndOffset()+1;
-				}
-			}
 		}
 		else{
 			StrategoTuple tuple=(StrategoTuple)tvars[0];



From m.dejonge at tudelft.nl  Fri Apr 23 18:21:44 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Fri, 23 Apr 2010 16:21:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20777 - MaartjeDeJonge -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201004231621.o3NGLiv0007811@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-23 16:21:43 +0000 (Fri, 23 Apr 2010)
New Revision: 20777

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20777&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java

Log:
make char-position-end exclusive

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java	2010-04-22 14:06:36 UTC (rev 20776)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java	2010-04-23 16:21:43 UTC (rev 20777)
@@ -18,8 +18,8 @@
 	@Override
 	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
 		ITermFactory factory = env.getFactory();
-		int start = node.getNode().getLeftIToken().getStartOffset();
-		int end = node.getNode().getRightIToken().getEndOffset();
+		int start = node.getNode().getLeftIToken().getStartOffset();//inclusive start
+		int end = node.getNode().getRightIToken().getEndOffset()+1; //exclusive end
 		return factory.makeTuple(
 				factory.makeInt(start),
 				factory.makeInt(end)

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	2010-04-22 14:06:36 UTC (rev 20776)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	2010-04-23 16:21:43 UTC (rev 20777)
@@ -59,7 +59,7 @@
 			String commentText=tokenStream.getTokenText(comment.getTokenIndex());
 			return env.getFactory().makeTuple(
 					env.getFactory().makeInt(comment.getStartOffset()),
-					env.getFactory().makeInt(comment.getEndOffset()),
+					env.getFactory().makeInt(comment.getEndOffset()+1),
 					env.getFactory().makeString(commentText)
 			);
 			//return env.getFactory().makeString(commentText.trim());

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	2010-04-22 14:06:36 UTC (rev 20776)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	2010-04-23 16:21:43 UTC (rev 20777)
@@ -64,7 +64,7 @@
 			int endPosCorrection=commentText.length()-lo_correctedText.length();
 			return env.getFactory().makeTuple(
 					env.getFactory().makeInt(comments.get(0).getStartOffset()),
-					env.getFactory().makeInt(comments.get(comments.size()-1).getEndOffset()-endPosCorrection),
+					env.getFactory().makeInt(comments.get(comments.size()-1).getEndOffset()+1-endPosCorrection),
 					env.getFactory().makeString(lo_correctedText)
 			);
 			//return env.getFactory().makeString(commentText.replaceAll("\\s+$", ""));

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java	2010-04-22 14:06:36 UTC (rev 20776)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java	2010-04-23 16:21:43 UTC (rev 20777)
@@ -46,7 +46,7 @@
 		if(!(position.get(0) instanceof StrategoInt && position.get(1) instanceof StrategoInt))
 			return null;
 		int pos_start=((StrategoInt)position.get(0)).intValue();
-		int pos_end=((StrategoInt)position.get(1)).intValue();
+		int pos_end=((StrategoInt)position.get(1)).intValue()-1;//exclusive
 		ILexStream lexStream= EditorState.getActiveEditor().getParseController().getCurrentAst().getLeftIToken().getILexStream();
 		if(isBadLocation(pos_start, pos_end, lexStream))
 			return null;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-04-22 14:06:36 UTC (rev 20776)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-04-23 16:21:43 UTC (rev 20777)
@@ -54,7 +54,7 @@
 			StrategoTuple tuple=(StrategoTuple)tvars[0];
 			if(tuple.size()==2){
 				position_start=((StrategoInt)tuple.get(0)).intValue();
-				position_end=((StrategoInt)tuple.get(1)).intValue();
+				position_end=((StrategoInt)tuple.get(1)).intValue()-1; //exclusive end pos
 			}
 			if(tuple.size()==4){
 				int line_start=((StrategoInt)tuple.get(0)).intValue()-1;



From L.C.L.Kats at tudelft.nl  Sat Apr 24 19:51:04 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 17:51:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20778 - LennartKats -
	in experimental: . sep-comp-tool
Message-ID: <201004241751.o3OHp4iV025500@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 17:51:04 +0000 (Sat, 24 Apr 2010)
New Revision: 20778

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20778&view=rev

Added:
   experimental/sep-comp-tool/
   experimental/sep-comp-tool/Makefile
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/editor-common.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:
Added experimental sep-comp-tool project.

Changes:

Added: experimental/sep-comp-tool/Makefile
===================================================================
--- experimental/sep-comp-tool/Makefile	                        (rev 0)
+++ experimental/sep-comp-tool/Makefile	2010-04-24 17:51:04 UTC (rev 20778)
@@ -0,0 +1,10 @@
+all : sep_comp_tool.jar
+
+sep-comp-tool : sep-comp-tool.str
+	strc -i $< -o $@ -la stratego-lib -la strc -la stratego-xtc -m main-sep-comp-tool
+
+sep_comp_tool.jar : sep_comp_tool.java
+	strj-jar -i $< -o $@
+
+sep_comp_tool.java : sep-comp-tool.str
+	strj -i $< -o $@ -la stratego-lib -la strc -la stratego-xtc -m main-sep-comp-tool

Added: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	                        (rev 0)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 17:51:04 UTC (rev 20778)
@@ -0,0 +1,14 @@
+module ast-diff
+
+signature constructors
+  
+  DefUse : Term * Term -> Term
+
+rules
+  
+  karltk-fetch-require-tuples(|library-imports, asts) =
+    // TODO
+    ![DefUse("foo", ["used1"]), DefUse("bar", ["used2"])]
+  
+  ast-diff:
+    (filename, oldast, newast) -> <id>
\ No newline at end of file

Added: experimental/sep-comp-tool/editor-common.str
===================================================================
--- experimental/sep-comp-tool/editor-common.str	                        (rev 0)
+++ experimental/sep-comp-tool/editor-common.str	2010-04-24 17:51:04 UTC (rev 20778)
@@ -0,0 +1,54 @@
+module editor-common
+
+imports
+  
+  sep-comp-tool
+
+overlays
+  
+  FS_TIMESTAMP_GRANULARITY = 2
+
+rules
+  
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      path       := <resolve-path> import;
+      cache-path := <import-cache-path> path;
+      if not(<IsImported> path) then
+        rules(
+          IsImported: path
+        );
+        if <is-newer> (cache-path, path) then
+          file := <ReadFromFile> cache-path
+        else
+          file := <parse-file> path;
+          if <file-exists> path then
+            // Only cache if on filesystem (e.g., ignore libstratego-lib)
+            <WriteToBinaryFile> (cache-path, file)
+          end        
+        end;
+        {| CurrentFile:
+          rules(CurrentFile := path);
+          <record-declarations> file
+        |}
+      end
+
+  // TODO: proper filesystem time granularity support
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1,
+            <file-exists; modification-time; add-fs-granularity> file2)
+  
+  add-fs-granularity:
+    timestamp -> <add> (timestamp, FS_TIMESTAMP_GRANULARITY)
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <SepInputDir>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+      

Added: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	                        (rev 0)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 17:51:04 UTC (rev 20778)
@@ -0,0 +1,81 @@
+module sep-comp-tool
+
+imports
+  libstratego-lib
+  libstratego-xtc
+  libstrc
+  editor-common
+  ast-diff
+
+signature constructors
+  
+  Removed : Term -> Term
+  Changed : Term -> Term
+
+rules
+  
+  main-sep-comp-tool =
+    option-wrap(
+      ArgOption(
+        "-i"
+      , rules(SepInputDir := <id>)
+      , !"-i  input directory"
+      )
+    + ArgOption(
+        "-o"
+      , rules(SepOutputFile := <id>)
+      , !"-o  output file"
+      )
+    , sep-comp-tool
+    )
+  
+  sep-comp-tool =
+    if not(<is-dir> <SepInputDir>) then
+      fatal-err(|"Please specify a valid input directory (-i)")
+    end;
+    ast-updates     := <ast-updates> <SepInputDir>;
+    library-imports := <library-imports> ast-updates;
+    def-uses        := <karltk-fetch-require-tuples(|library-imports, ast-updates)>;
+    ast-diffs       := <map(ast-diff)> ast-updates; 
+    new-defs        := <new-definitions> ast-diffs;
+    result          := <create-stratego-program> new-defs
+  
+  new-definitions:
+    // TODO: given all changed defs in the local files, return a list with the complete, merged changed definitions to be recompiled
+    changed-defs -> <id> 
+  
+  create-stratego-program:
+    // TODO: create a stratego program with the new defs
+    //       (or import everything if a constructor or overload changed?)
+    new-defs -> <id>
+  
+  ast-updates:
+    directory -> asts
+    where
+      is-dir
+    with
+      files := <map(<conc-strings> (directory, "/", <id>))> <readdir>;
+      asts  := <flatten-list> <filter(input-asts)> files
+  
+  input-asts:
+    file -> (file, old-ast, new-ast)
+    where
+      not(is-dir);
+      has-extension(|"str")
+    with
+      old-file := <import-cache-path> <conc-strings> ("old//", file)
+    where
+      not(<is-newer> (old-file, file))
+    with
+      old-ast := <file-exists; ReadFromFile <+ !None()> old-file; 
+      new-ast := <parse-stratego-file-cached> file
+  
+  is-dir = filemode; isdir
+  
+  library-imports =
+    // TODO: fetch library imports
+    !["libstratego-lib"]
+  
+  parse-stratego-file-cached =
+    // TODO: consider .meta file (see pack-stratego)
+    open-import(id, debug; <ps-parse-module-trm> FILE(<id>), ?x); !x



From L.C.L.Kats at tudelft.nl  Sat Apr 24 19:52:59 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 17:52:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20779 - LennartKats -
	experimental/sep-comp-tool
Message-ID: <201004241752.o3OHqxsZ025537@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 17:52:59 +0000 (Sat, 24 Apr 2010)
New Revision: 20779

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20779&view=rev

Modified:
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:
tuples to constructors

Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 17:51:04 UTC (rev 20778)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 17:52:59 UTC (rev 20779)
@@ -1,5 +1,8 @@
 module ast-diff
 
+imports
+  sep-comp-tool
+
 signature constructors
   
   DefUse : Term * Term -> Term
@@ -11,4 +14,4 @@
     ![DefUse("foo", ["used1"]), DefUse("bar", ["used2"])]
   
   ast-diff:
-    (filename, oldast, newast) -> <id>
\ No newline at end of file
+    Update(filename, oldast, newast) -> <id>
\ No newline at end of file

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 17:51:04 UTC (rev 20778)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 17:52:59 UTC (rev 20779)
@@ -9,8 +9,9 @@
 
 signature constructors
   
-  Removed : Term -> Term
-  Changed : Term -> Term
+  Update  : String * Module * Module -> Update
+  Removed : Def -> Term
+  Changed : Def -> Term
 
 rules
   
@@ -58,7 +59,7 @@
       asts  := <flatten-list> <filter(input-asts)> files
   
   input-asts:
-    file -> (file, old-ast, new-ast)
+    file -> Update(file, old-ast, new-ast)
     where
       not(is-dir);
       has-extension(|"str")



From L.C.L.Kats at tudelft.nl  Sat Apr 24 20:12:29 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 18:12:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20780 - LennartKats -
	in experimental/sep-comp-tool: . lib
Message-ID: <201004241812.o3OICTvE025835@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 18:12:29 +0000 (Sat, 24 Apr 2010)
New Revision: 20780

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20780&view=rev

Added:
   experimental/sep-comp-tool/lib/
   experimental/sep-comp-tool/lib/analysis.str
   experimental/sep-comp-tool/lib/desugar.str
   experimental/sep-comp-tool/lib/editor-common.str
Removed:
   experimental/sep-comp-tool/editor-common.str
Modified:
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:


Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 17:52:59 UTC (rev 20779)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 18:12:29 UTC (rev 20780)
@@ -2,6 +2,8 @@
 
 imports
   sep-comp-tool
+  libstrc
+  lib/-
 
 signature constructors
   
@@ -10,8 +12,19 @@
 rules
   
   karltk-fetch-require-tuples(|library-imports, asts) =
-    // TODO
     ![DefUse("foo", ["used1"]), DefUse("bar", ["used2"])]
   
   ast-diff:
-    Update(filename, oldast, newast) -> <id>
\ No newline at end of file
+    Update(filename, old-ast, new-ast) -> ast-diffs'
+    with
+      old-defs   := <all-definitions> old-ast;
+      new-defs   := <all-definitions> new-ast;
+      ast-diffs  := <zip(def-diff)> (old-defs, new-defs);
+      ast-diffs' := <filter(not(None))> ast-diffs
+  
+  def-diff = id
+  
+  all-definitions:
+    Module(x, sections) -> defs
+    with
+      defs := <concat> <filter(?_#([<id>]))> sections
\ No newline at end of file

Deleted: experimental/sep-comp-tool/editor-common.str
===================================================================
--- experimental/sep-comp-tool/editor-common.str	2010-04-24 17:52:59 UTC (rev 20779)
+++ experimental/sep-comp-tool/editor-common.str	2010-04-24 18:12:29 UTC (rev 20780)
@@ -1,54 +0,0 @@
-module editor-common
-
-imports
-  
-  sep-comp-tool
-
-overlays
-  
-  FS_TIMESTAMP_GRANULARITY = 2
-
-rules
-  
-  open-import(resolve-path, parse-file, record-declarations):
-    import -> import
-    where
-      path       := <resolve-path> import;
-      cache-path := <import-cache-path> path;
-      if not(<IsImported> path) then
-        rules(
-          IsImported: path
-        );
-        if <is-newer> (cache-path, path) then
-          file := <ReadFromFile> cache-path
-        else
-          file := <parse-file> path;
-          if <file-exists> path then
-            // Only cache if on filesystem (e.g., ignore libstratego-lib)
-            <WriteToBinaryFile> (cache-path, file)
-          end        
-        end;
-        {| CurrentFile:
-          rules(CurrentFile := path);
-          <record-declarations> file
-        |}
-      end
-
-  // TODO: proper filesystem time granularity support
-  is-newer:
-    (file1, file2) -> <id>
-    where
-      <gt> (<file-exists; modification-time> file1,
-            <file-exists; modification-time; add-fs-granularity> file2)
-  
-  add-fs-granularity:
-    timestamp -> <add> (timestamp, FS_TIMESTAMP_GRANULARITY)
-  
-  import-cache-path:
-    full-path -> cache-path
-    with
-      project-path := <SepInputDir>;
-      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
-      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
-      cache-path   := $[[cache-dir]/[full-path'].sig]
-      

Copied: experimental/sep-comp-tool/lib/analysis.str (from rev 20769, spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str)
===================================================================
--- experimental/sep-comp-tool/lib/analysis.str	                        (rev 0)
+++ experimental/sep-comp-tool/lib/analysis.str	2010-04-24 18:12:29 UTC (rev 20780)
@@ -0,0 +1,63 @@
+// Based on org.strategoxt.imp.editors.stratego/trans/analysis.str
+module analysis
+
+imports
+  libstratego-lib
+  libstrc
+  lib/desugar
+
+rules // Projections and lookup
+
+  signature-of:
+    SDefT(x, s*, t*, s) -> (<remove-quote> x, <length> s*, <length> t*)
+
+  signature-of:
+    RDecT(x, s*, t*) -> (<remove-quote> x, <length> s*, <length> t*)
+
+  signature-of:
+    ExtSDef(x, s*, t*) -> (<remove-quote> x, <length> s*, <length> t*) 
+
+  signature-of:
+    CallT(SVar(x), s*, t*) -> (<remove-quote> x, <length> s*, <length> t*)
+
+  signature-of-congruence:
+    CallT(SVar(x), s*, []) -> (<remove-quote> x, <length> s*) 
+
+  signature-of-congruence:
+    SDefT(x, s*, t*, []) -> (<remove-quote> x, <length> s*) 
+
+  signature-of:
+    Var(x) -> (<remove-quote> x, 0)
+
+  signature-of:
+    VarDec(x, t) -> (<remove-quote> x, 0)
+
+  signature-of:
+    Op(x, t*) -> (<remove-quote> x, <length> t*)
+
+  signature-of:
+    OpDecl(x, t) -> (<remove-quote> x, <dec> <occurrences(?ConstType(_))> t) 
+
+  signature-of:
+    ExtOpDecl(x, t) -> (<remove-quote> x, <dec> <occurrences(?ConstType(_))> t)
+    
+  signature-of:
+    Overlay(x, t*, _) -> (<remove-quote> x, <length> t*)
+
+  signature-of:
+    Rec(x, s) -> (<remove-quote> x, 0, 0)
+
+  signature-of:
+    LabeledDynRuleScopeId(x, _) -> <remove-quote> x
+
+  signature-of:
+    DynRuleScopeId(x) -> <remove-quote> x
+  
+  remove-quote: 
+    s -> s'
+    with
+      if explode-string => ['\'' | s_tail] then
+        s' := <implode-string> s_tail
+      else
+        s' := s
+      end
\ No newline at end of file

Copied: experimental/sep-comp-tool/lib/desugar.str (from rev 20769, spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/desugar.str)
===================================================================
--- experimental/sep-comp-tool/lib/desugar.str	                        (rev 0)
+++ experimental/sep-comp-tool/lib/desugar.str	2010-04-24 18:12:29 UTC (rev 20780)
@@ -0,0 +1,120 @@
+module desugar
+
+imports
+  libstratego-lib
+  libstrc
+
+signature constructors
+
+  FromMetaExpr     : Term -> Term
+  ToMetaExpr       : Term -> Term
+  FromTerm         : Term -> Term
+  ToTerm           : Term -> Term
+  FromMetaListExpr : Term -> Term
+  ToMetaListExpr   : Term -> Term
+  FromBuild        : Term -> Term
+  ToBuild          : Term -> Term
+  FromStrategy     : Term -> Term
+  ToStrategy       : Term -> Term
+  meta-var         : String -> Term
+  meta-listvar     : String -> Term
+
+rules
+
+  basic-desugar-top =
+    topdown(try(basic-desugar))
+
+  basic-desugar:
+    SDef(x, a*, s) -> SDefT(x, a*, [], s)
+
+  basic-desugar:
+    RDef(x, a*, s) -> SDefT(x, a*, [], s)
+
+  basic-desugar:
+    RDefT(x, s*, t*, s) -> SDefT(x, s*, t*, s)
+
+  basic-desugar:
+    RDec(x, a*) -> RDecT(x, a*, [])
+
+  basic-desugar:
+    SDefNoArgs(x, s) -> SDefT(x, [], [], s)
+
+  basic-desugar:
+    RDefNoArgs(x, s) -> SDefT(x, [], [], s)
+
+  basic-desugar:
+    OverlayNoArgs(x, o) -> Overlay(x, [], o)
+
+  basic-desugar:
+    RDecNoArgs(x) -> RDecT(x, [], [])
+
+  basic-desugar:
+    Call(x, s*) -> CallT(x, s*, [])
+
+  basic-desugar:
+    CallNoArgs(x) -> CallT(x, [], [])
+
+  basic-desugar:
+    ListVar(x) -> x
+
+  basic-desugar:
+    DefaultVarDec(x) -> VarDec(x, ConstType(SortNoArgs("ATerm")))
+
+  basic-desugar:
+    RuleNoCond(t1, t2) -> Rule(t1, t2, [])
+
+  basic-desugar:
+    Choice(s1, s2) -> <try(basic-desugar)> GuardedLChoice(s1, Id(), s2)
+
+  basic-desugar:
+    LChoice(s1, s2) -> <try(basic-desugar)> GuardedLChoice(s1, Id(), s2)
+
+  basic-desugar:
+    RChoice(s1, s2) -> <try(basic-desugar)> GuardedLChoice(s2, Id(), s1)
+
+  basic-desugar:
+    CondChoice(c, s1, s2) -> <try(basic-desugar)> GuardedLChoice(Where(c), s1, s2)
+
+  basic-desugar:
+    IfThen(c, s1) -> <try(basic-desugar)> GuardedLChoice(Where(c), s1, Id())
+
+  basic-desugar:
+    GuardedLChoice(Where(Not(c)), s1, s2) -> GuardedLChoice(Where(c), s2, s1)
+
+  basic-desugar:
+    GuardedLChoice(Not(c), s1, s2) -> GuardedLChoice(Where(c), s2, s1)
+
+  basic-desugar:
+    ToMetaExpr(t) -> ToMetaExpr(<extract-meta-expr-escapes> t)
+
+  basic-desugar:
+    ToBuild(t) -> ToBuild(<extract-meta-expr-escapes> t)
+
+  basic-desugar:
+    ToTerm(t) -> ToTerm(<extract-meta-expr-escapes> t)
+
+  basic-desugar:
+    ToMetaListExpr(t) -> ToMetaListExpr(<extract-meta-expr-escapes> t)
+
+  basic-desugar:
+    ToStrategy(t) -> ToStrategy(<extract-meta-expr-escapes> t)
+  
+  basic-desugar:
+    SwitchChoiceNoOtherwise(init, c*) ->
+    <basic-desugar> SwitchChoice(init, c*, Fail())
+
+  basic-desugar:
+    SwitchChoice(init, [SwitchCase(c, s) | c*], o) ->
+    Seq(init, GuardedLChoice(c, s, SwitchChoice(Id(), c*, o)))
+
+  basic-desugar:
+    SwitchChoice(init, [], o) -> Seq(init, o)
+
+  // HACK: eliminate embedded languages
+  extract-meta-expr-escapes:
+    t -> t'
+    with
+      t' := <collect-om(?FromTerm(_) + ?FromMetaExpr(_) + ?FromBuild(_)
+                      + ?FromMetaListExpr(_) + ?FromStrategy(_)
+                      + \meta-var(x) -> Var(x)\
+                      + \meta-listvar(x) -> Var(x)\, conc)> t

Copied: experimental/sep-comp-tool/lib/editor-common.str (from rev 20778, experimental/sep-comp-tool/editor-common.str)
===================================================================
--- experimental/sep-comp-tool/lib/editor-common.str	                        (rev 0)
+++ experimental/sep-comp-tool/lib/editor-common.str	2010-04-24 18:12:29 UTC (rev 20780)
@@ -0,0 +1,54 @@
+module editor-common
+
+imports
+  
+  sep-comp-tool
+
+overlays
+  
+  FS_TIMESTAMP_GRANULARITY = 2
+
+rules
+  
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      path       := <resolve-path> import;
+      cache-path := <import-cache-path> path;
+      if not(<IsImported> path) then
+        rules(
+          IsImported: path
+        );
+        if <is-newer> (cache-path, path) then
+          file := <ReadFromFile> cache-path
+        else
+          file := <parse-file> path;
+          if <file-exists> path then
+            // Only cache if on filesystem (e.g., ignore libstratego-lib)
+            <WriteToBinaryFile> (cache-path, file)
+          end        
+        end;
+        {| CurrentFile:
+          rules(CurrentFile := path);
+          <record-declarations> file
+        |}
+      end
+
+  // TODO: proper filesystem time granularity support
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1,
+            <file-exists; modification-time; add-fs-granularity> file2)
+  
+  add-fs-granularity:
+    timestamp -> <add> (timestamp, FS_TIMESTAMP_GRANULARITY)
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <SepInputDir>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+      

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 17:52:59 UTC (rev 20779)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 18:12:29 UTC (rev 20780)
@@ -4,7 +4,7 @@
   libstratego-lib
   libstratego-xtc
   libstrc
-  editor-common
+  lib/-
   ast-diff
 
 signature constructors
@@ -79,4 +79,4 @@
   
   parse-stratego-file-cached =
     // TODO: consider .meta file (see pack-stratego)
-    open-import(id, debug; <ps-parse-module-trm> FILE(<id>), ?x); !x
+    open-import(id, debug(!"reparsing "); <ps-parse-module-trm> FILE(<id>), ?x); !x



From L.C.L.Kats at tudelft.nl  Sat Apr 24 20:14:22 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 18:14:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20781 - LennartKats -
	experimental/sep-comp-tool
Message-ID: <201004241814.o3OIEMCa025850@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 18:14:22 +0000 (Sat, 24 Apr 2010)
New Revision: 20781

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20781&view=rev

Modified:
   experimental/sep-comp-tool/Makefile
   experimental/sep-comp-tool/sep-comp-tool.str

Log:


Changes:

Modified: experimental/sep-comp-tool/Makefile
===================================================================
--- experimental/sep-comp-tool/Makefile	2010-04-24 18:12:29 UTC (rev 20780)
+++ experimental/sep-comp-tool/Makefile	2010-04-24 18:14:22 UTC (rev 20781)
@@ -1,3 +1,5 @@
+STRS=$(wildcard *.str) $(wildcard */*.str)
+
 all : sep_comp_tool.jar
 
 sep-comp-tool : sep-comp-tool.str
@@ -6,5 +8,5 @@
 sep_comp_tool.jar : sep_comp_tool.java
 	strj-jar -i $< -o $@
 
-sep_comp_tool.java : sep-comp-tool.str
+sep_comp_tool.java : $(STRS)
 	strj -i $< -o $@ -la stratego-lib -la strc -la stratego-xtc -m main-sep-comp-tool

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 18:12:29 UTC (rev 20780)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 18:14:22 UTC (rev 20781)
@@ -4,7 +4,9 @@
   libstratego-lib
   libstratego-xtc
   libstrc
-  lib/-
+  lib/editor-common
+  lib/analysis
+  lib/desugar
   ast-diff
 
 signature constructors



From L.C.L.Kats at tudelft.nl  Sat Apr 24 20:49:18 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 18:49:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20782 - LennartKats -
	experimental/sep-comp-tool
Message-ID: <201004241849.o3OInIOL026050@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 18:49:18 +0000 (Sat, 24 Apr 2010)
New Revision: 20782

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20782&view=rev

Modified:
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:


Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 18:14:22 UTC (rev 20781)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 18:49:18 UTC (rev 20782)
@@ -3,7 +3,8 @@
 imports
   sep-comp-tool
   libstrc
-  lib/-
+  lib/analysis
+  lib/desugar
 
 signature constructors
   
@@ -15,16 +16,48 @@
     ![DefUse("foo", ["used1"]), DefUse("bar", ["used2"])]
   
   ast-diff:
-    Update(filename, old-ast, new-ast) -> ast-diffs'
+    Update(filename, old-ast, new-ast) -> ast-diffs
     with
-      old-defs   := <all-definitions> old-ast;
-      new-defs   := <all-definitions> new-ast;
-      ast-diffs  := <zip(def-diff)> (old-defs, new-defs);
-      ast-diffs' := <filter(not(None))> ast-diffs
+      {| SepOldDefinition, SepNewDefinition:
+        old-defs   := <all-definitions> old-ast;
+        new-defs   := <all-definitions> new-ast;
+        <list-loop(record-old-definition)> old-defs; 
+        <list-loop(record-new-definition)> old-defs;
+        new-sigs   := <make-set> <map(basic-desugar; signature-of)> new-defs;
+        ast-diffs  := <filter(def-diff)> new-sigs
+	    |}
   
-  def-diff = id
+  def-diff:
+    sig -> diff
+    where
+      if old-def := <SepOldDefinition> sig then
+        with(
+          new-def := <SepNewDefinition> sig
+        );
+        if <eq> (old-def, new-def) then
+          diff := Changed(sig)
+        end
+      else
+        diff := Removed(sig)
+      end
   
+  record-old-definition:
+    def -> def
+    with
+      sig := <basic-desugar; signature-of>;
+      rules(
+        SepOldDefinition: sig -> def
+      )
+  
+  record-new-definition:
+    def -> def
+    with
+      sig := <basic-desugar; signature-of>;
+      rules(
+        SepNewDefinition: sig -> def
+      )
+  
   all-definitions:
     Module(x, sections) -> defs
     with
-      defs := <concat> <filter(?_#([<id>]))> sections
\ No newline at end of file
+      defs := <concat> <filter(?_#([<id>]))> sections

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 18:14:22 UTC (rev 20781)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 18:49:18 UTC (rev 20782)
@@ -44,7 +44,7 @@
     result          := <create-stratego-program> new-defs
   
   new-definitions:
-    // TODO: given all changed defs in the local files, return a list with the complete, merged changed definitions to be recompiled
+    // TODO: given signatures of all changed defs in the local files, return a list with the complete, merged changed definitions to be recompiled
     changed-defs -> <id> 
   
   create-stratego-program:



From karltk at strategoxt.org  Sat Apr 24 20:51:42 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sat, 24 Apr 2010 18:51:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20783 - karltk -
	experimental/sep-comp-tool
Message-ID: <201004241851.o3OIpgFS026081@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-04-24 18:51:42 +0000 (Sat, 24 Apr 2010)
New Revision: 20783

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20783&view=rev

Modified:
   experimental/sep-comp-tool/Makefile
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:
  * Added def-use computation.
  * Some minor Makefile additions.



Changes:

Modified: experimental/sep-comp-tool/Makefile
===================================================================
--- experimental/sep-comp-tool/Makefile	2010-04-24 18:49:18 UTC (rev 20782)
+++ experimental/sep-comp-tool/Makefile	2010-04-24 18:51:42 UTC (rev 20783)
@@ -1,3 +1,4 @@
+all : sep_comp_tool.jar
 STRS=$(wildcard *.str) $(wildcard */*.str)
 
 all : sep_comp_tool.jar
@@ -2,9 +3,26 @@
 
-sep-comp-tool : sep-comp-tool.str
-	strc -i $< -o $@ -la stratego-lib -la strc -la stratego-xtc -m main-sep-comp-tool
+#sep-comp-tool : sep-comp-tool.str
+#	strc -i $< -o $@ -la stratego-lib -la strc -la stratego-xtc -m main-sep-comp-tool
 
-sep_comp_tool.jar : sep_comp_tool.java
-	strj-jar -i $< -o $@
+#sep_comp_tool.jar : sep_comp_tool.java
+#	strj-jar -i $< -o $@
 
+#sep_comp_tool.java : sep-comp-tool.str
+#	strj -i $< -o $@ -la stratego-lib -la strc -la stratego-xtc -m main-sep-comp-tool
+
 sep_comp_tool.java : $(STRS)
 	strj -i $< -o $@ -la stratego-lib -la strc -la stratego-xtc -m main-sep-comp-tool
+	
+
+% : %.str
+	strc -i $< -o $@ -la stratego-lib -la strc -la stratego-xtc -m main-$@
+
+%.jar : %.java
+	strj-jar -i $< -o $@
+
+%.java : %.str
+	strj -i $< -o $@ -la stratego-lib -la strc -la stratego-xtc -m main-$(basename $@)
+
+
+clean:
+	rm -f *.java sep_comp_tool.jar requires.jar *.dep *.c *.c.dep

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 18:49:18 UTC (rev 20782)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 18:51:42 UTC (rev 20783)
@@ -2,6 +2,7 @@
 
 imports
   sep-comp-tool
+  requires
   libstrc
   lib/analysis
   lib/desugar
@@ -12,8 +13,13 @@
 
 rules
   
-  karltk-fetch-require-tuples(|library-imports, asts) =
-    ![DefUse("foo", ["used1"]), DefUse("bar", ["used2"])]
+  compute-require-tuples(|library-imports, asts) =
+      <map(?Update(_,_, <id>) ; compute-defuses)> asts
+    ; concat
+
+  compute-dynrule-maps(|library-imports, asts) =
+      <map(?Update(_,_, <id>) ; compute-dynrule-maps)> asts
+    ; concat
   
   ast-diff:
     Update(filename, old-ast, new-ast) -> ast-diffs

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 18:49:18 UTC (rev 20782)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 18:51:42 UTC (rev 20783)
@@ -38,12 +38,13 @@
     end;
     ast-updates     := <ast-updates> <SepInputDir>;
     library-imports := <library-imports> ast-updates;
-    def-uses        := <karltk-fetch-require-tuples(|library-imports, ast-updates)>;
+    def-uses        := <compute-require-tuples(|library-imports, ast-updates)>; debug(!"Y ");
+    dyn-maps        := <compute-dynrule-maps(|library-imports, ast-updates)>; debug(!"Y ");
     ast-diffs       := <map(ast-diff)> ast-updates; 
-    new-defs        := <new-definitions> ast-diffs;
+    new-defs        := <new-definitions(|def-uses, dyn-maps)> ast-diffs;
     result          := <create-stratego-program> new-defs
   
-  new-definitions:
+  new-definitions(|def-uses, dyn-maps):
     // TODO: given signatures of all changed defs in the local files, return a list with the complete, merged changed definitions to be recompiled
     changed-defs -> <id> 
   



From karltk at strategoxt.org  Sat Apr 24 21:26:15 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sat, 24 Apr 2010 19:26:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20784 - karltk -
	experimental/sep-comp-tool
Message-ID: <201004241926.o3OJQFYk026505@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-04-24 19:26:15 +0000 (Sat, 24 Apr 2010)
New Revision: 20784

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20784&view=rev

Added:
   experimental/sep-comp-tool/requires.str

Log:
 * .. and the code.


Changes:

Added: experimental/sep-comp-tool/requires.str
===================================================================
--- experimental/sep-comp-tool/requires.str	                        (rev 0)
+++ experimental/sep-comp-tool/requires.str	2010-04-24 19:26:15 UTC (rev 20784)
@@ -0,0 +1,81 @@
+module requires 
+imports
+	libstratego-lib
+	libstrc
+
+signature
+	constructors
+		DepInfo : List(DefUse) * List(DynRules) -> DepInfo
+		DefUse  : Str * List(Str) -> DefUse
+		DynRules: Str * Str -> DynToTop
+			
+strategies
+	
+
+  main-requires:
+  	x -> DepInfo(defuses, dyns)
+  with
+  	t       := <import-term(test/test1.ast)> ; 
+  	defuses := <compute-defuses> t ;
+  	dyns    := <compute-dynrule-maps> t
+
+  compute-defuses:
+  	x -> defuses
+  with 
+  	{| Def:
+  	  require-usedefs ; 
+  	  defuses := <bagof-Def>
+  	|}
+  	
+  compute-dynrule-maps = collect(compute-dynrule-map)
+  
+  compute-dynrule-map = 
+  	def-of => (n, body)
+  	; collect(dynrule-name) => [_|_]
+  	; !DynRules(n, <id>)
+  	
+  dynrule-name:
+  	RDecNoArgs(n) -> n 
+  	
+  shadow-let-defs(s): 
+  	ld at Let(defs, body) -> ld
+  with
+  	{| LetDef:
+	  <map(register-let)> defs
+	; <map(def-of ; ?(_, <id>) ; require-usedefs)> defs
+	; <s> body
+	|}
+
+  let-overrides = LetDef
+
+  record-def = 
+  	(n, body) := <def-of> 
+  	; {| Use: 
+		  <require-usedefs> body 
+  		; uses := <bagof-Use> 
+  		; rules(Def :+ _ -> DefUse(n, uses)) 
+  	  |}
+  
+  register-let = 
+  	  (n, _) := <def-of> 
+  	; rules(LetDef :+ n -> 0)
+	  	 
+  require-usedefs =
+	   shadow-let-defs(require-usedefs)
+  	<+ record-def
+  	<+ record-use
+  	<+ all(try(require-usedefs))
+  
+  
+  def-of: SDefNoArgs(n, body) -> (n, body)
+  def-of: RDefNoArgs(n, body) -> (n, body)
+  def-of: RDef(n, _, body) -> (n, body)
+  def-of: SDef(n, _, body) -> (n, body)
+
+  record-use = 
+  	  u := <use-of> 
+  	; not(let-overrides) 
+  	; rules(Use :+ _ -> u)
+  
+  use-of: Call(SVar(n), _) -> n
+  use-of: CallNoArgs(SVar(n)) -> n



From L.C.L.Kats at tudelft.nl  Sat Apr 24 21:32:36 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 19:32:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20785 - LennartKats -
	experimental/sep-comp-tool
Message-ID: <201004241932.o3OJWaWJ026548@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 19:32:35 +0000 (Sat, 24 Apr 2010)
New Revision: 20785

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20785&view=rev

Modified:
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/requires.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:


Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 19:26:15 UTC (rev 20784)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 19:32:35 UTC (rev 20785)
@@ -2,7 +2,6 @@
 
 imports
   sep-comp-tool
-  requires
   libstrc
   lib/analysis
   lib/desugar
@@ -13,14 +12,6 @@
 
 rules
   
-  compute-require-tuples(|library-imports, asts) =
-      <map(?Update(_,_, <id>) ; compute-defuses)> asts
-    ; concat
-
-  compute-dynrule-maps(|library-imports, asts) =
-      <map(?Update(_,_, <id>) ; compute-dynrule-maps)> asts
-    ; concat
-  
   ast-diff:
     Update(filename, old-ast, new-ast) -> ast-diffs
     with
@@ -64,6 +55,9 @@
       )
   
   all-definitions:
+    None() -> []  
+  
+  all-definitions:
     Module(x, sections) -> defs
     with
       defs := <concat> <filter(?_#([<id>]))> sections

Modified: experimental/sep-comp-tool/requires.str
===================================================================
--- experimental/sep-comp-tool/requires.str	2010-04-24 19:26:15 UTC (rev 20784)
+++ experimental/sep-comp-tool/requires.str	2010-04-24 19:32:35 UTC (rev 20785)
@@ -2,6 +2,7 @@
 imports
 	libstratego-lib
 	libstrc
+	sep-comp-tool
 
 signature
 	constructors
@@ -19,6 +20,18 @@
   	defuses := <compute-defuses> t ;
   	dyns    := <compute-dynrule-maps> t
 
+rules
+  
+  compute-require-tuples:
+    asts -> tuples
+    with
+      tuples := <mapconcat(?Update(_,_, <id>) ; compute-defuses)> asts
+
+  compute-dynrule-maps(|library-imports, asts):
+    asts -> maps
+    with
+      maps := <mapconcat(?Update(_,_, <id>) ; compute-dynrule-maps)> asts
+
   compute-defuses:
   	x -> defuses
   with 

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 19:26:15 UTC (rev 20784)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 19:32:35 UTC (rev 20785)
@@ -7,6 +7,7 @@
   lib/editor-common
   lib/analysis
   lib/desugar
+  requires
   ast-diff
 
 signature constructors
@@ -38,8 +39,8 @@
     end;
     ast-updates     := <ast-updates> <SepInputDir>;
     library-imports := <library-imports> ast-updates;
-    def-uses        := <compute-require-tuples(|library-imports, ast-updates)>; debug(!"Y ");
-    dyn-maps        := <compute-dynrule-maps(|library-imports, ast-updates)>; debug(!"Y ");
+    def-uses        := <compute-require-tuples> ast-updates; debug(!"Y ");
+    dyn-maps        := <compute-dynrule-maps> ast-updates; debug(!"Y ");
     ast-diffs       := <map(ast-diff)> ast-updates; 
     new-defs        := <new-definitions(|def-uses, dyn-maps)> ast-diffs;
     result          := <create-stratego-program> new-defs



From karltk at strategoxt.org  Sat Apr 24 23:53:17 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sat, 24 Apr 2010 21:53:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20786 - karltk -
	experimental/sep-comp-tool
Message-ID: <201004242153.o3OLrHSx027757@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-04-24 21:53:16 +0000 (Sat, 24 Apr 2010)
New Revision: 20786

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20786&view=rev

Modified:
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:
 * Should only consider strategy/rule definitions in all-definitions
 * Don't desugar twice.



Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 19:32:35 UTC (rev 20785)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 21:53:16 UTC (rev 20786)
@@ -19,7 +19,7 @@
         old-defs   := <all-definitions> old-ast;
         new-defs   := <all-definitions> new-ast;
         <list-loop(record-old-definition)> old-defs; 
-        <list-loop(record-new-definition)> old-defs;
+        <list-loop(record-new-definition)> new-defs; 
         new-sigs   := <make-set> <map(basic-desugar; signature-of)> new-defs;
         ast-diffs  := <filter(def-diff)> new-sigs
 	    |}
@@ -49,7 +49,7 @@
   record-new-definition:
     def -> def
     with
-      sig := <basic-desugar; signature-of>;
+      sig := <try(basic-desugar) ; signature-of>;
       rules(
         SepNewDefinition: sig -> def
       )
@@ -60,4 +60,4 @@
   all-definitions:
     Module(x, sections) -> defs
     with
-      defs := <concat> <filter(?_#([<id>]))> sections
+      defs := <filter(?Strategies(<id>) + ?Rules(<id>)) ; concat> sections
\ No newline at end of file

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 19:32:35 UTC (rev 20785)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 21:53:16 UTC (rev 20786)
@@ -41,13 +41,15 @@
     library-imports := <library-imports> ast-updates;
     def-uses        := <compute-require-tuples> ast-updates; debug(!"Y ");
     dyn-maps        := <compute-dynrule-maps> ast-updates; debug(!"Y ");
-    ast-diffs       := <map(ast-diff)> ast-updates; 
+    ast-diffs       := <map(ast-diff <+ debug(!"EPI FAIC"))> ast-updates;
     new-defs        := <new-definitions(|def-uses, dyn-maps)> ast-diffs;
     result          := <create-stratego-program> new-defs
   
   new-definitions(|def-uses, dyn-maps):
     // TODO: given signatures of all changed defs in the local files, return a list with the complete, merged changed definitions to be recompiled
-    changed-defs -> <id> 
+    changed-defs -> <id>
+  where
+  	<debug(!"changed ")> changed-defs
   
   create-stratego-program:
     // TODO: create a stratego program with the new defs



From L.C.L.Kats at tudelft.nl  Sun Apr 25 00:19:15 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 22:19:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20787 - LennartKats -
	experimental/sep-comp-tool
Message-ID: <201004242219.o3OMJFSI028140@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 22:19:11 +0000 (Sat, 24 Apr 2010)
New Revision: 20787

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20787&view=rev

Modified:
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:


Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 21:53:16 UTC (rev 20786)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 22:19:11 UTC (rev 20787)
@@ -12,35 +12,37 @@
 
 rules
   
+  // TODO: consider dynamic rules
+  
   ast-diff:
     Update(filename, old-ast, new-ast) -> ast-diffs
     with
       {| SepOldDefinition, SepNewDefinition:
         old-defs   := <all-definitions> old-ast;
         new-defs   := <all-definitions> new-ast;
-        <list-loop(record-old-definition)> old-defs; 
-        <list-loop(record-new-definition)> new-defs; 
-        new-sigs   := <make-set> <map(basic-desugar; signature-of)> new-defs;
+        <list-loop(try(record-old-definition))> old-defs; 
+        <list-loop(try(record-new-definition))> new-defs;
+        old-sigs   := <filter(basic-desugar; signature-of)> old-defs;
+        new-sigs   := <filter(basic-desugar; signature-of)> new-defs;
+        all-sigs   := <make-set> <conc> (old-sigs, new-sigs);
         ast-diffs  := <filter(def-diff)> new-sigs
 	    |}
   
   def-diff:
     sig -> diff
     where
-      if old-def := <SepOldDefinition> sig then
-        with(
-          new-def := <SepNewDefinition> sig
-        );
-        if <eq> (old-def, new-def) then
-          diff := Changed(sig)
-        end
-      else
-        diff := Removed(sig)
+      old-def := <SepOldDefinition> sig;
+      new-def := <SepNewDefinition> sig;
+      if <eq> (old-def, new-def) then
+        diff := sig
       end
+    <+
+      // Doesn't exist in one of 'em
+      diff := sig
   
   record-old-definition:
     def -> def
-    with
+    where
       sig := <basic-desugar; signature-of>;
       rules(
         SepOldDefinition: sig -> def
@@ -48,14 +50,14 @@
   
   record-new-definition:
     def -> def
-    with
+    where
       sig := <try(basic-desugar) ; signature-of>;
       rules(
         SepNewDefinition: sig -> def
       )
   
   all-definitions:
-    None() -> []  
+    None() -> []
   
   all-definitions:
     Module(x, sections) -> defs

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 21:53:16 UTC (rev 20786)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 22:19:11 UTC (rev 20787)
@@ -13,8 +13,6 @@
 signature constructors
   
   Update  : String * Module * Module -> Update
-  Removed : Def -> Term
-  Changed : Def -> Term
 
 rules
   
@@ -41,7 +39,8 @@
     library-imports := <library-imports> ast-updates;
     def-uses        := <compute-require-tuples> ast-updates; debug(!"Y ");
     dyn-maps        := <compute-dynrule-maps> ast-updates; debug(!"Y ");
-    ast-diffs       := <map(ast-diff <+ debug(!"EPI FAIC"))> ast-updates;
+    ast-diffs       := <mapconcat(ast-diff)> ast-updates;
+    debug(!"ast-diff: "); 
     new-defs        := <new-definitions(|def-uses, dyn-maps)> ast-diffs;
     result          := <create-stratego-program> new-defs
   
@@ -72,7 +71,7 @@
     with
       old-file := <import-cache-path> <conc-strings> ("old//", file)
     where
-      not(<is-newer> (old-file, file))
+      not(<is-newer> (old-file, file); <debug(!"no change: ")> file)
     with
       old-ast := <file-exists; ReadFromFile <+ !None()> old-file; 
       new-ast := <parse-stratego-file-cached> file



From L.C.L.Kats at tudelft.nl  Sun Apr 25 00:34:09 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 22:34:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20788 - LennartKats -
	experimental/sep-comp-tool
Message-ID: <201004242234.o3OMY95X028270@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 22:34:08 +0000 (Sat, 24 Apr 2010)
New Revision: 20788

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20788&view=rev

Modified:
   experimental/sep-comp-tool/ast-diff.str

Log:


Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 22:19:11 UTC (rev 20787)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 22:34:08 UTC (rev 20788)
@@ -31,8 +31,8 @@
   def-diff:
     sig -> diff
     where
-      old-def := <SepOldDefinition> sig;
-      new-def := <SepNewDefinition> sig;
+      old-def := <bagof-SepOldDefinition> sig;
+      new-def := <bagof-SepNewDefinition> sig;
       if <eq> (old-def, new-def) then
         diff := sig
       end
@@ -45,7 +45,7 @@
     where
       sig := <basic-desugar; signature-of>;
       rules(
-        SepOldDefinition: sig -> def
+        SepOldDefinition :+ sig -> def
       )
   
   record-new-definition:
@@ -53,7 +53,7 @@
     where
       sig := <try(basic-desugar) ; signature-of>;
       rules(
-        SepNewDefinition: sig -> def
+        SepNewDefinition :+ sig -> def
       )
   
   all-definitions:



From L.C.L.Kats at tudelft.nl  Sun Apr 25 01:05:20 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 23:05:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20789 - LennartKats -
	in experimental/sep-comp-tool: . lib
Message-ID: <201004242305.o3ON5KsS028614@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 23:05:20 +0000 (Sat, 24 Apr 2010)
New Revision: 20789

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20789&view=rev

Modified:
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/lib/editor-common.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:
Added --mark option and fixed stuff

Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 22:34:08 UTC (rev 20788)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 23:05:20 UTC (rev 20789)
@@ -25,7 +25,9 @@
         old-sigs   := <filter(basic-desugar; signature-of)> old-defs;
         new-sigs   := <filter(basic-desugar; signature-of)> new-defs;
         all-sigs   := <make-set> <conc> (old-sigs, new-sigs);
-        ast-diffs  := <filter(def-diff)> new-sigs
+        debug(!"sigs-1: ");
+        ast-diffs  := <filter(def-diff)> new-sigs;
+        debug(!"sigs-2: ")
 	    |}
   
   def-diff:
@@ -33,7 +35,7 @@
     where
       old-def := <bagof-SepOldDefinition> sig;
       new-def := <bagof-SepNewDefinition> sig;
-      if <eq> (old-def, new-def) then
+      if not(<eq> (old-def, new-def)) then
         diff := sig
       end
     <+

Modified: experimental/sep-comp-tool/lib/editor-common.str
===================================================================
--- experimental/sep-comp-tool/lib/editor-common.str	2010-04-24 22:34:08 UTC (rev 20788)
+++ experimental/sep-comp-tool/lib/editor-common.str	2010-04-24 23:05:20 UTC (rev 20789)
@@ -34,7 +34,6 @@
         |}
       end
 
-  // TODO: proper filesystem time granularity support
   is-newer:
     (file1, file2) -> <id>
     where
@@ -42,7 +41,7 @@
             <file-exists; modification-time; add-fs-granularity> file2)
   
   add-fs-granularity:
-    timestamp -> <add> (timestamp, FS_TIMESTAMP_GRANULARITY)
+    timestamp -> <add> (timestamp, FS_TIMESTAMP_GRANULARITY())
   
   import-cache-path:
     full-path -> cache-path

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 22:34:08 UTC (rev 20788)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 23:05:20 UTC (rev 20789)
@@ -18,31 +18,43 @@
   
   main-sep-comp-tool =
     option-wrap(
-      ArgOption(
+      sep-comp-tool-options
+    , sep-comp-tool
+    )
+  
+  sep-comp-tool-options =
+    ArgOption(
         "-i"
       , rules(SepInputDir := <id>)
-      , !"-i  input directory"
+      , !"-i      input directory"
       )
-    + ArgOption(
-        "-o"
-      , rules(SepOutputFile := <id>)
-      , !"-o  output file"
-      )
-    , sep-comp-tool
+  + ArgOption(
+      "-o"
+    , rules(SepOutputFile := <id>)
+    , !"-o        output file"
     )
+  + Option(
+      "--mark"
+    , rules(MarkSuccessful : _)
+    , !"--mark    mark project as successfully compiled"
+    )
   
   sep-comp-tool =
     if not(<is-dir> <SepInputDir>) then
       fatal-err(|"Please specify a valid input directory (-i)")
     end;
-    ast-updates     := <ast-updates> <SepInputDir>;
-    library-imports := <library-imports> ast-updates;
-    def-uses        := <compute-require-tuples> ast-updates; debug(!"Y ");
-    dyn-maps        := <compute-dynrule-maps> ast-updates; debug(!"Y ");
-    ast-diffs       := <mapconcat(ast-diff)> ast-updates;
-    debug(!"ast-diff: "); 
-    new-defs        := <new-definitions(|def-uses, dyn-maps)> ast-diffs;
-    result          := <create-stratego-program> new-defs
+    if MarkSuccessful then
+      <mark-successful> <SepInputDir>
+    else
+	    ast-updates     := <ast-updates> <SepInputDir>;
+	    library-imports := <library-imports> ast-updates;
+	    def-uses        := <compute-require-tuples> ast-updates; debug(!"Y ");
+	    dyn-maps        := <compute-dynrule-maps> ast-updates; debug(!"Y ");
+	    ast-diffs       := <mapconcat(ast-diff)> ast-updates;
+	    debug(!"ast-diff: "); 
+	    new-defs        := <new-definitions(|def-uses, dyn-maps)> ast-diffs;
+	    result          := <create-stratego-program> new-defs
+    end
   
   new-definitions(|def-uses, dyn-maps):
     // TODO: given signatures of all changed defs in the local files, return a list with the complete, merged changed definitions to be recompiled
@@ -60,24 +72,48 @@
     where
       is-dir
     with
-      files := <map(<conc-strings> (directory, "/", <id>))> <readdir>;
-      asts  := <flatten-list> <filter(input-asts)> files
+      files  := <filter(not("." + ".."))> <readdir>;
+      files' := <map(<conc-strings> (directory, "/", <id>))> files;
+      asts   := <flatten-list> <filter(ast-updates)> files'
   
-  input-asts:
+  ast-updates:
     file -> Update(file, old-ast, new-ast)
     where
       not(is-dir);
       has-extension(|"str")
     with
-      old-file := <import-cache-path> <conc-strings> ("old//", file)
+      old-file := <old-file-path> file
     where
       not(<is-newer> (old-file, file); <debug(!"no change: ")> file)
     with
       old-ast := <file-exists; ReadFromFile <+ !None()> old-file; 
       new-ast := <parse-stratego-file-cached> file
   
-  is-dir = filemode; isdir
+  mark-successful:
+    directory -> directory
+    where
+      is-dir
+    with
+      files  := <filter(not("." + ".."))> <readdir>;
+      files' := <map(<conc-strings> (directory, "/", <id>))> files;
+      <list-loop(try(mark-successful))> files'
   
+  mark-successful:
+    file -> file
+    where
+      not(is-dir);
+      has-extension(|"str")
+    with
+      cached   := <import-cache-path; debug(!3)> file;
+      old-file := <old-file-path> file;
+      <with(file-exists | "File doesn't exist in cache")> cached; 
+      <copy-file> (cached, old-file) 
+  
+  old-file-path:
+    file -> <import-cache-path> <conc-strings> ("old//", file)
+  
+  is-dir = where(filemode; isdir)
+  
   library-imports =
     // TODO: fetch library imports
     !["libstratego-lib"]



From L.C.L.Kats at tudelft.nl  Sun Apr 25 01:05:50 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 23:05:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20790 - LennartKats -
	experimental/sep-comp-tool
Message-ID: <201004242305.o3ON5oqW028623@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 23:05:50 +0000 (Sat, 24 Apr 2010)
New Revision: 20790

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20790&view=rev

Modified:
   experimental/sep-comp-tool/ast-diff.str

Log:


Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 23:05:20 UTC (rev 20789)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 23:05:50 UTC (rev 20790)
@@ -25,9 +25,7 @@
         old-sigs   := <filter(basic-desugar; signature-of)> old-defs;
         new-sigs   := <filter(basic-desugar; signature-of)> new-defs;
         all-sigs   := <make-set> <conc> (old-sigs, new-sigs);
-        debug(!"sigs-1: ");
         ast-diffs  := <filter(def-diff)> new-sigs;
-        debug(!"sigs-2: ")
 	    |}
   
   def-diff:



From L.C.L.Kats at tudelft.nl  Sun Apr 25 01:06:10 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 23:06:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20791 - LennartKats -
	experimental/sep-comp-tool
Message-ID: <201004242306.o3ON6A8i028631@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 23:06:10 +0000 (Sat, 24 Apr 2010)
New Revision: 20791

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20791&view=rev

Modified:
   experimental/sep-comp-tool/ast-diff.str

Log:


Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 23:05:50 UTC (rev 20790)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 23:06:10 UTC (rev 20791)
@@ -25,7 +25,7 @@
         old-sigs   := <filter(basic-desugar; signature-of)> old-defs;
         new-sigs   := <filter(basic-desugar; signature-of)> new-defs;
         all-sigs   := <make-set> <conc> (old-sigs, new-sigs);
-        ast-diffs  := <filter(def-diff)> new-sigs;
+        ast-diffs  := <filter(def-diff)> new-sigs
 	    |}
   
   def-diff:



From L.C.L.Kats at tudelft.nl  Sun Apr 25 01:08:37 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 24 Apr 2010 23:08:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20792 - LennartKats -
	experimental/sep-comp-tool
Message-ID: <201004242308.o3ON8bZr028644@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-24 23:08:37 +0000 (Sat, 24 Apr 2010)
New Revision: 20792

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20792&view=rev

Modified:
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:
fixed dupes in ast-diff

Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 23:06:10 UTC (rev 20791)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-24 23:08:37 UTC (rev 20792)
@@ -25,7 +25,7 @@
         old-sigs   := <filter(basic-desugar; signature-of)> old-defs;
         new-sigs   := <filter(basic-desugar; signature-of)> new-defs;
         all-sigs   := <make-set> <conc> (old-sigs, new-sigs);
-        ast-diffs  := <filter(def-diff)> new-sigs
+        ast-diffs  := <filter(def-diff)> all-sigs
 	    |}
   
   def-diff:

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 23:06:10 UTC (rev 20791)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 23:08:37 UTC (rev 20792)
@@ -92,7 +92,7 @@
   mark-successful:
     directory -> directory
     where
-      is-dir
+      is-dir; id
     with
       files  := <filter(not("." + ".."))> <readdir>;
       files' := <map(<conc-strings> (directory, "/", <id>))> files;



From karltk at strategoxt.org  Sun Apr 25 02:10:41 2010
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Sun, 25 Apr 2010 00:10:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20793 - karltk -
	experimental/sep-comp-tool
Message-ID: <201004250010.o3P0AfS4029201@proliant.st.ewi.tudelft.nl>

Author: karltk
Date: 2010-04-25 00:10:41 +0000 (Sun, 25 Apr 2010)
New Revision: 20793

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20793&view=rev

Added:
   experimental/sep-comp-tool/sep-comp-tool.meta
Modified:
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/requires.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:
 * Added generation of pre-processed module



Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-24 23:08:37 UTC (rev 20792)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-25 00:10:41 UTC (rev 20793)
@@ -21,19 +21,20 @@
         old-defs   := <all-definitions> old-ast;
         new-defs   := <all-definitions> new-ast;
         <list-loop(try(record-old-definition))> old-defs; 
-        <list-loop(try(record-new-definition))> new-defs;
+        <list-loop(try(record-new-definition))> new-defs; 
         old-sigs   := <filter(basic-desugar; signature-of)> old-defs;
         new-sigs   := <filter(basic-desugar; signature-of)> new-defs;
         all-sigs   := <make-set> <conc> (old-sigs, new-sigs);
         ast-diffs  := <filter(def-diff)> all-sigs
-	    |}
+      |}
+
   
   def-diff:
     sig -> diff
     where
       old-def := <bagof-SepOldDefinition> sig;
       new-def := <bagof-SepNewDefinition> sig;
-      if not(<eq> (old-def, new-def)) then
+      if <not(eq)> (old-def, new-def) then
         diff := sig
       end
     <+
@@ -43,7 +44,7 @@
   record-old-definition:
     def -> def
     where
-      sig := <basic-desugar; signature-of>;
+      sig := <try(basic-desugar) ; signature-of>;
       rules(
         SepOldDefinition :+ sig -> def
       )
@@ -62,4 +63,4 @@
   all-definitions:
     Module(x, sections) -> defs
     with
-      defs := <filter(?Strategies(<id>) + ?Rules(<id>)) ; concat> sections
\ No newline at end of file
+      defs := <filter(?Strategies(<id>) + ?Rules(<id>)) ; concat> sections

Modified: experimental/sep-comp-tool/requires.str
===================================================================
--- experimental/sep-comp-tool/requires.str	2010-04-24 23:08:37 UTC (rev 20792)
+++ experimental/sep-comp-tool/requires.str	2010-04-25 00:10:41 UTC (rev 20793)
@@ -3,12 +3,14 @@
 	libstratego-lib
 	libstrc
 	sep-comp-tool
-
+	lib/desugar
+	
 signature
 	constructors
 		DepInfo : List(DefUse) * List(DynRules) -> DepInfo
-		DefUse  : Str * List(Str) -> DefUse
-		DynRules: Str * Str -> DynToTop
+		DefUse  : Sig * List(Sig) -> DefUse
+		DynRules: Sig * Sig -> DynToTop
+		Sig     : Str * Int * Int -> Sig
 			
 strategies
 	
@@ -43,26 +45,28 @@
   compute-dynrule-maps = collect(compute-dynrule-map)
   
   compute-dynrule-map = 
-  	def-of => (n, body)
-  	; collect(dynrule-name) => [_|_]
+  	  is-toplevel-def 
+  	; basic-desugar 
+  	; def-of => (n, body)
+  	; collect(dynrule-sig) => [_|_]
   	; !DynRules(n, <id>)
   	
-  dynrule-name:
-  	RDecNoArgs(n) -> n 
+  dynrule-sig:
+  	RDecNoArgs(n) -> Sig(n,0,0) 
   	
   shadow-let-defs(s): 
   	ld at Let(defs, body) -> ld
   with
   	{| LetDef:
 	  <map(register-let)> defs
-	; <map(def-of ; ?(_, <id>) ; require-usedefs)> defs
+	; <map(basic-desugar ; def-of ; ?(_, <id>) ; require-usedefs)> defs
 	; <s> body
 	|}
 
   let-overrides = LetDef
 
   record-def = 
-  	(n, body) := <def-of> 
+  	(n, body) := <is-toplevel-def ; basic-desugar ; def-of> 
   	; {| Use: 
 		  <require-usedefs> body 
   		; uses := <bagof-Use> 
@@ -70,7 +74,7 @@
   	  |}
   
   register-let = 
-  	  (n, _) := <def-of> 
+  	  (n, _) := <is-toplevel-def ; basic-desugar ; def-of> 
   	; rules(LetDef :+ n -> 0)
 	  	 
   require-usedefs =
@@ -80,11 +84,16 @@
   	<+ all(try(require-usedefs))
   
   
-  def-of: SDefNoArgs(n, body) -> (n, body)
-  def-of: RDefNoArgs(n, body) -> (n, body)
-  def-of: RDef(n, _, body) -> (n, body)
-  def-of: SDef(n, _, body) -> (n, body)
+  def-of : SDefT(n, s*, t*, body) -> (Sig(n, <length> s*, <length> t*), body)
+  def-of : RDefT(n, s*, t*, body) -> (Sig(n, <length> s*, <length> t*), body)
 
+  is-toplevel-def = ?SDefNoArgs(_, _)
+  is-toplevel-def = ?RDefNoArgs(_, _)
+  is-toplevel-def = ?SDef(_, _, _)
+  is-toplevel-def = ?RDef(_, _, _)
+  is-toplevel-def = ?RDefT(_, _, _, _)
+  is-toplevel-def = ?SDefT(_, _, _, _)
+  
   record-use = 
   	  u := <use-of> 
   	; not(let-overrides) 

Added: experimental/sep-comp-tool/sep-comp-tool.meta
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.meta	                        (rev 0)
+++ experimental/sep-comp-tool/sep-comp-tool.meta	2010-04-25 00:10:41 UTC (rev 20793)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-Sugar-in-Stratego")])
\ No newline at end of file

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-24 23:08:37 UTC (rev 20792)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-25 00:10:41 UTC (rev 20793)
@@ -48,25 +48,61 @@
     else
 	    ast-updates     := <ast-updates> <SepInputDir>;
 	    library-imports := <library-imports> ast-updates;
-	    def-uses        := <compute-require-tuples> ast-updates; debug(!"Y ");
-	    dyn-maps        := <compute-dynrule-maps> ast-updates; debug(!"Y ");
+	    def-uses        := <compute-require-tuples> ast-updates;
+	    dyn-maps        := <compute-dynrule-maps> ast-updates;
 	    ast-diffs       := <mapconcat(ast-diff)> ast-updates;
 	    debug(!"ast-diff: "); 
-	    new-defs        := <new-definitions(|def-uses, dyn-maps)> ast-diffs;
-	    result          := <create-stratego-program> new-defs
+	    new-defs        := <new-definitions> ast-diffs;
+	    result          := <create-stratego-program(|def-uses, library-imports)> new-defs
+	    ;<debug(!"result ")> result
     end
   
-  new-definitions(|def-uses, dyn-maps):
+  new-definitions:
     // TODO: given signatures of all changed defs in the local files, return a list with the complete, merged changed definitions to be recompiled
-    changed-defs -> <id>
+    changed-defs -> alldefs
   where
-  	<debug(!"changed ")> changed-defs
+  	newdefs := <mapconcat(bagof-SepNewDefinition)> changed-defs;
+  	olddefs := <mapconcat(bagof-SepOldDefinition)> changed-defs;
+  	alldefs := <conc> (newdefs, olddefs)
   
-  create-stratego-program:
+  create-stratego-program(|def-uses, library-imports):
     // TODO: create a stratego program with the new defs
     //       (or import everything if a constructor or overload changed?)
-    new-defs -> <id>
+    new-defs -> <fixup-imports> |[ 
+    module incremental
+    imports
+    	~imports*
+  	strategies
+  		~allstrats*
+  		
+    ]|
+  with
+  	{|Seen:
+  		  <map(remember-sig)> new-defs
+  		; externals := <filter(not(?DefUse(<id>, _) ; Seen))> def-uses
+  	|}
+  	; exts* := <map( \ DefUse(sig, _) -> <make-extsdef> sig \)> externals
+    ; allstrats* := <conc> (exts*, new-defs)
+    ; imports* := <map(\x -> Import(x)\)> library-imports ; debug(!"ZZZ ")
+
+  make-extsdef:
+  	Sig(n, s*, t*) -> ExtSDef(n, svars*, tvars*)
+  with
+  	svars* := <dec ; upto ; map(!DefaultVarDec("x"))> s* ; 
+  	tvars* := <dec ; upto ; map(!DefaultVarDec("x"))> s*
+  	  
+  fixup-imports = Module(id, map(try(fixup-imports)))
   
+  fixup-imports = Imports(map(fixup-imports) ; concat)
+  
+  fixup-imports : Import(xs) -> xs
+ 	
+  remember-sig:
+  	x -> x
+  with 
+  	  (n,s,t) := <basic-desugar ; signature-of> x 
+  	; rules(Seen: Sig(n,s,t) -> 1)
+      
   ast-updates:
     directory -> asts
     where



From m.dejonge at tudelft.nl  Sun Apr 25 20:38:22 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Sun, 25 Apr 2010 18:38:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20794 - MaartjeDeJonge -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201004251838.o3PIcMDE021979@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-25 18:38:22 +0000 (Sun, 25 Apr 2010)
New Revision: 20794

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20794&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLayoutPositionPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRootPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java

Log:
layout and comment offset

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-25 00:10:41 UTC (rev 20793)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-25 18:38:22 UTC (rev 20794)
@@ -28,6 +28,7 @@
 		add(new OriginPositionToLocationPrimitive());
 		add(new OriginSourceTextPrimitive());
 		add(new SelectedFromToPrimitive());
+		add(new OriginRootPrimitive());
 	}
 
 	public String getOperatorRegistryName() {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java	2010-04-25 00:10:41 UTC (rev 20793)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java	2010-04-25 18:38:22 UTC (rev 20794)
@@ -18,8 +18,8 @@
 	@Override
 	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
 		ITermFactory factory = env.getFactory();
-		int start = node.getNode().getLeftIToken().getStartOffset();//inclusive start
-		int end = node.getNode().getRightIToken().getEndOffset()+1; //exclusive end
+		int start = TextPositions.getStartPosNode(node.getNode());
+		int end =  TextPositions.getEndPosNode(node.getNode());
 		return factory.makeTuple(
 				factory.makeInt(start),
 				factory.makeInt(end)

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLayoutPositionPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLayoutPositionPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLayoutPositionPrimitive.java	2010-04-25 18:38:22 UTC (rev 20794)
@@ -0,0 +1,21 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class OriginLayoutPositionPrimitive extends AbstractOriginPrimitive {
+
+	public OriginLayoutPositionPrimitive() {
+		super("SSL_EXT_origin_layout_term_pos");
+	}
+
+	@Override
+	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
+		return node.getNode().getTerm();
+	}
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLayoutPositionPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	2010-04-25 00:10:41 UTC (rev 20793)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	2010-04-25 18:38:22 UTC (rev 20794)
@@ -1,5 +1,8 @@
 package org.strategoxt.imp.runtime.stratego;
 
+import java.util.ArrayList;
+
+import lpg.runtime.ILexStream;
 import lpg.runtime.IPrsStream;
 import lpg.runtime.IToken;
 
@@ -38,33 +41,17 @@
 	}
 	
 	private IStrategoTerm call(IContext env, IWrappedAstNode node) {		
-		IToken start = node.getNode().getLeftIToken(); 
-		IPrsStream tokenStream=start.getIPrsStream();
-		IToken comment=null;
-		IToken previousNodeToken=null;
-		int tokenIndex=start.getTokenIndex()-1;
-		while(tokenIndex>=0 && previousNodeToken==null){
-			IToken tok=tokenStream.getTokenAt(tokenIndex);
-			if(!SGLRToken.isWhiteSpace(tok)){
-				if(comment==null && TokenKind.valueOf(tok.getKind())==TokenKind.TK_LAYOUT){
-					comment=tok;
-				}
-				if(TokenKind.valueOf(tok.getKind())!=TokenKind.TK_LAYOUT){
-					previousNodeToken=tok;
-				}
-			}
-			tokenIndex--;
-		}
-		if(comment!=null && (previousNodeToken==null || previousNodeToken.getEndLine() < comment.getLine())){
-			String commentText=tokenStream.getTokenText(comment.getTokenIndex());
+		int commentStart=TextPositions.getStartPosCommentBefore(node.getNode());
+		int commentEnd=TextPositions.getEndPosCommentBefore(node.getNode());
+		if(commentStart>0){
+			ILexStream lexStream=node.getNode().getLeftIToken().getILexStream();
+			String commentText=lexStream.toString(commentStart, commentEnd-1);
 			return env.getFactory().makeTuple(
-					env.getFactory().makeInt(comment.getStartOffset()),
-					env.getFactory().makeInt(comment.getEndOffset()+1),
+					env.getFactory().makeInt(commentStart),
+					env.getFactory().makeInt(commentEnd),
 					env.getFactory().makeString(commentText)
 			);
-			//return env.getFactory().makeString(commentText.trim());
 		}
 		return null;
 	}
-
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java	2010-04-25 00:10:41 UTC (rev 20793)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java	2010-04-25 18:38:22 UTC (rev 20794)
@@ -29,7 +29,7 @@
 			return false;
 		int position=((StrategoInt)tvars[0]).intValue();
 		ILexStream lexStream= EditorState.getActiveEditor().getParseController().getCurrentAst().getLeftIToken().getILexStream();
-		if(isBadLocation(position, lexStream))
+		if(TextPositions.isNotInTextRange(position, lexStream))
 			return false;
 		int col=lexStream.getColumnOfCharAt(position);
 		int line=lexStream.getLineNumberOfCharAt(position);
@@ -40,9 +40,4 @@
 		env.setCurrent(result);
 		return true;
 	}
-
-	private boolean isBadLocation(int pos, ILexStream lexStream) {
-		return pos < 0 || pos >= lexStream.getStreamLength();
-	}
-
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	2010-04-25 00:10:41 UTC (rev 20793)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	2010-04-25 18:38:22 UTC (rev 20794)
@@ -1,16 +1,11 @@
 package org.strategoxt.imp.runtime.stratego;
 
-import java.util.ArrayList;
+import lpg.runtime.ILexStream;
 
-import lpg.runtime.IPrsStream;
-import lpg.runtime.IToken;
-
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.library.AbstractPrimitive;
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.imp.runtime.parser.tokens.SGLRToken;
-import org.strategoxt.imp.runtime.parser.tokens.TokenKind;
 import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
 
 /**
@@ -40,36 +35,17 @@
 	}
 	
 	private IStrategoTerm call(IContext env, IWrappedAstNode node) {		
-		IToken start = node.getNode().getRightIToken(); 
-		IPrsStream tokenStream=start.getIPrsStream();
-		ArrayList<IToken> comments=new ArrayList<IToken>();
-		int tokenIndex=start.getTokenIndex()+1;
-		boolean hasComment=false;
-		while(tokenIndex<tokenStream.getSize() && tokenStream.getLine(tokenIndex)==start.getEndLine()){
-			IToken tok=tokenStream.getTokenAt(tokenIndex);			
-			if(TokenKind.valueOf(tok.getKind())==TokenKind.TK_LAYOUT){
-				comments.add(tok);
-				if(!SGLRToken.isWhiteSpace(tok)){
-					hasComment=true;
-				}
-			}			
-			tokenIndex++;
-		}
-		if(hasComment){
-			String commentText="";
-			for (IToken comm_txt : comments) {
-				commentText+=tokenStream.getTokenText(comm_txt.getTokenIndex());
-			}
-			String lo_correctedText=commentText.replaceAll("\\s+$", "");
-			int endPosCorrection=commentText.length()-lo_correctedText.length();
+		int commentStart=TextPositions.getStartPosCommentAfter(node.getNode());
+		int commentEnd=TextPositions.getEndPosCommentAfter(node.getNode());
+		if(commentStart>0){
+			ILexStream lexStream=node.getNode().getLeftIToken().getILexStream();
+			String commentText=lexStream.toString(commentStart, commentEnd-1);
 			return env.getFactory().makeTuple(
-					env.getFactory().makeInt(comments.get(0).getStartOffset()),
-					env.getFactory().makeInt(comments.get(comments.size()-1).getEndOffset()+1-endPosCorrection),
-					env.getFactory().makeString(lo_correctedText)
+					env.getFactory().makeInt(commentStart),
+					env.getFactory().makeInt(commentEnd),
+					env.getFactory().makeString(commentText)
 			);
-			//return env.getFactory().makeString(commentText.replaceAll("\\s+$", ""));
 		}
 		return null;
 	}
-
 }

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRootPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRootPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRootPrimitive.java	2010-04-25 18:38:22 UTC (rev 20794)
@@ -0,0 +1,29 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.parser.ast.AstNode;
+
+/**
+ * @author Maartje de Jonge
+ */
+public class OriginRootPrimitive extends AbstractPrimitive {
+
+private static final String NAME = "SSL_EXT_origin_root";
+	
+	public OriginRootPrimitive() {
+		super(NAME, 0, 2);
+	}
+	
+	@Override
+	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		AstNode result = EditorState.getActiveEditor().getCurrentAst();
+		if (result == null) return false;
+		env.setCurrent(result.getTerm());
+		return true;
+	}
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRootPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java	2010-04-25 00:10:41 UTC (rev 20793)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginSublistTermPrimitive.java	2010-04-25 18:38:22 UTC (rev 20794)
@@ -28,6 +28,7 @@
 		super(NAME, 0, 2);
 	}
 	
+	@SuppressWarnings("unchecked")
 	@Override
 	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
 		if (!isTermString(tvars[0]) || !(tvars[1] instanceof IStrategoList))//|| (tvars[1].getTermType()!= IStrategoTerm.LIST)

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java	2010-04-25 00:10:41 UTC (rev 20793)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java	2010-04-25 18:38:22 UTC (rev 20794)
@@ -48,7 +48,7 @@
 		int pos_start=((StrategoInt)position.get(0)).intValue();
 		int pos_end=((StrategoInt)position.get(1)).intValue()-1;//exclusive
 		ILexStream lexStream= EditorState.getActiveEditor().getParseController().getCurrentAst().getLeftIToken().getILexStream();
-		if(isBadLocation(pos_start, pos_end, lexStream))
+		if(TextPositions.isUnvalidInterval(pos_start, pos_end, lexStream))
 			return null;
 		String textfragment=lexStream.toString(pos_start, pos_end);
 		return textfragment;
@@ -64,16 +64,9 @@
 		ILexStream lexStream= EditorState.getActiveEditor().getParseController().getCurrentAst().getLeftIToken().getILexStream();
 		int pos_start=lexStream.getLineOffset(line_start)+col_start; //FIXME: bad location
 		int pos_end=lexStream.getLineOffset(line_end)+col_end;
-		if(isBadLocation(pos_start, pos_end, lexStream))
+		if(TextPositions.isUnvalidInterval(pos_start, pos_end, lexStream))
 			return null;
 		String textfragment=lexStream.toString(pos_start, pos_end);
 		return textfragment;
 	}
-
-	private boolean isBadLocation(int pos_start, int pos_end, ILexStream lexStream) {
-		return pos_start < 0 || pos_start > pos_end || pos_end >= lexStream.getStreamLength();
-	}
-	
-	
-
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-04-25 00:10:41 UTC (rev 20793)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-04-25 18:38:22 UTC (rev 20794)
@@ -47,8 +47,8 @@
 		int position_start = -1;
 		int position_end = -1;
 		if(tvars[0] instanceof IWrappedAstNode){
-			position_start=((IWrappedAstNode)tvars[0]).getNode().getLeftIToken().getStartOffset();
-			position_end=((IWrappedAstNode)tvars[0]).getNode().getRightIToken().getEndOffset()+1;
+			position_start=TextPositions.getStartPosNode(((IWrappedAstNode)tvars[0]).getNode());
+			position_end=TextPositions.getEndPosNode(((IWrappedAstNode)tvars[0]).getNode());
 		}
 		else{
 			StrategoTuple tuple=(StrategoTuple)tvars[0];
@@ -68,7 +68,7 @@
 		String text = ((IStrategoString)tvars[1]).stringValue();
 		try {
 			IDocument doc = editor.getDocument();
-			if(isBadLocation(position_start, position_end, lexStream))
+			if(TextPositions.isUnvalidInterval(position_start, position_end, lexStream))
 				return false;
 			doc.replace(position_start, position_end-position_start, text);
 		} 
@@ -91,9 +91,4 @@
 		}
 		return true;
 	}
-	
-	private boolean isBadLocation(int pos_start, int pos_end, ILexStream lexStream) {
-		return pos_start < 0 || pos_start > pos_end || pos_end >= lexStream.getStreamLength();
-	}
-
 }

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java	2010-04-25 18:38:22 UTC (rev 20794)
@@ -0,0 +1,140 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import java.util.ArrayList;
+
+import lpg.runtime.ILexStream;
+import lpg.runtime.IPrsStream;
+import lpg.runtime.IToken;
+
+import org.strategoxt.imp.runtime.parser.tokens.SGLRToken;
+import org.strategoxt.imp.runtime.parser.tokens.TokenKind;
+import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
+
+public class TextPositions {
+	
+	public static int getStartPosNode(IStrategoAstNode node){
+		return node.getLeftIToken().getStartOffset();//inclusive start
+	}
+	
+	public static int getStartPosNodeWithLayout(IStrategoAstNode node){
+		return 0;
+	}
+	
+	public static int getStartPosCommentBefore(IStrategoAstNode node){
+		IToken start = node.getLeftIToken(); 
+		IPrsStream tokenStream=start.getIPrsStream();
+		IToken prevNonLayout = getPrevAstToken(start);
+		int tokenIndex=start.getTokenIndex()-1;
+		IToken commentTok=null;
+		int lineIndex=start.getLine()-1;
+		while(tokenIndex>=0){
+			IToken tok=tokenStream.getTokenAt(tokenIndex);
+			if((prevNonLayout!=null && tok.getLine()<=prevNonLayout.getLine()) || tok.getEndLine() < lineIndex || TokenKind.valueOf(tok.getKind())!=TokenKind.TK_LAYOUT)
+				break;			
+			if(!SGLRToken.isWhiteSpace(tok)){
+				commentTok=tok;
+				lineIndex=tok.getLine()-1;
+			}
+			tokenIndex--;
+		}
+		if(commentTok==null)
+			return -1;
+		return startPositionAfterTrim(commentTok);
+	}
+
+	private static IToken getPrevAstToken(IToken start) {
+		IToken prevNonLayout=null;
+		IPrsStream tokenStream=start.getIPrsStream();
+		for (int i = start.getTokenIndex()-1; i >= 0; i--) {
+			IToken preceedingTok=tokenStream.getTokenAt(i);
+			if(!SGLRToken.isWhiteSpace(preceedingTok)){
+				prevNonLayout=preceedingTok;
+			}
+		}
+		return prevNonLayout;
+	}
+
+	
+	public static int getStartPosCommentAfter(IStrategoAstNode node){
+		IToken start = node.getRightIToken(); 
+		IPrsStream tokenStream=start.getIPrsStream();
+		int tokenIndex=start.getTokenIndex()+1;
+		while(tokenIndex<tokenStream.getTokens().size()){
+			IToken tok=tokenStream.getTokenAt(tokenIndex);
+			if(tok.getLine() > start.getEndLine() || TokenKind.valueOf(tok.getKind())!=TokenKind.TK_LAYOUT)
+				return -1;
+			if(!SGLRToken.isWhiteSpace(tok)){
+				return startPositionAfterTrim(tok);
+			}	
+			tokenIndex++;
+		}
+		return -1;
+	}
+	
+	public static int getEndPosNode(IStrategoAstNode node){
+		return node.getRightIToken().getEndOffset()+1; //exclusive end
+	}
+	
+	public static int getEndPosNodeWithLayout(IStrategoAstNode node){
+		return 0;
+	}
+	
+	public static int getEndPosCommentBefore(IStrategoAstNode node){
+		IToken start = node.getLeftIToken(); 
+		IPrsStream tokenStream=start.getIPrsStream();
+		IToken prevNonLayout = getPrevAstToken(start);
+		int tokenIndex=start.getTokenIndex()-1;
+		while(tokenIndex>=0){
+			IToken tok=tokenStream.getTokenAt(tokenIndex);
+			if((prevNonLayout!=null && tok.getLine()<=prevNonLayout.getLine()) || tok.getEndLine() < start.getLine()-1 || TokenKind.valueOf(tok.getKind())!=TokenKind.TK_LAYOUT)
+				return -1;			
+			if(!SGLRToken.isWhiteSpace(tok))
+				return endPositionAfterTrim(tok);
+			tokenIndex--;
+		}
+		return -1;
+	}
+		
+	private static int endPositionAfterTrim(IToken tok){
+		IPrsStream tokStream=tok.getIPrsStream();
+		String tokText=tokStream.getTokenText(tok.getTokenIndex());
+		String lo_correctedText=tokText.replaceAll("\\s+$", "");
+		int endPosCorrection=tokText.length()-lo_correctedText.length();
+		return tok.getEndOffset()+1-endPosCorrection;
+	}
+	
+	private static int startPositionAfterTrim(IToken tok){
+		IPrsStream tokStream=tok.getIPrsStream();
+		String tokText=tokStream.getTokenText(tok.getTokenIndex());
+		String lo_correctedText=tokText.replaceAll("^+\\s", "");
+		int correction=tokText.length()-lo_correctedText.length();
+		return tok.getStartOffset()+correction;
+	}
+	
+	public static int getEndPosCommentAfter(IStrategoAstNode node){
+		if(getStartPosCommentAfter(node)==-1)
+			return -1;
+		IToken start = node.getRightIToken(); 
+		IPrsStream tokenStream=start.getIPrsStream();
+		int tokenIndex=start.getTokenIndex()+1;
+		IToken commentTok=null;
+		while(tokenIndex<tokenStream.getTokens().size()){
+			IToken tok=tokenStream.getTokenAt(tokenIndex);
+			if(tok.getLine() > start.getEndLine() || TokenKind.valueOf(tok.getKind())!=TokenKind.TK_LAYOUT)
+				break;
+			if(!SGLRToken.isWhiteSpace(tok)){
+				commentTok=tok;
+			}	
+			tokenIndex++;
+		}
+		return endPositionAfterTrim(commentTok);
+	}
+	
+	public static boolean isNotInTextRange(int pos, ILexStream lexStream) {
+		return pos < 0 || pos >= lexStream.getStreamLength();
+	}
+	
+	public static boolean isUnvalidInterval(int pos_start, int pos_end, ILexStream lexStream) {
+		return pos_start < 0 || pos_start > pos_end || pos_end >= lexStream.getStreamLength();
+	}
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain



From L.C.L.Kats at tudelft.nl  Mon Apr 26 09:37:26 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 26 Apr 2010 07:37:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20795 - LennartKats -
	in experimental/sep-comp-tool: . lib
Message-ID: <201004260737.o3Q7bQ3B031220@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-26 07:37:26 +0000 (Mon, 26 Apr 2010)
New Revision: 20795

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20795&view=rev

Modified:
   experimental/sep-comp-tool/ast-diff.str
   experimental/sep-comp-tool/lib/analysis.str
   experimental/sep-comp-tool/sep-comp-tool.str

Log:
- Consider dynamic rulles in ast-diff
- Fixes


Changes:

Modified: experimental/sep-comp-tool/ast-diff.str
===================================================================
--- experimental/sep-comp-tool/ast-diff.str	2010-04-25 18:38:22 UTC (rev 20794)
+++ experimental/sep-comp-tool/ast-diff.str	2010-04-26 07:37:26 UTC (rev 20795)
@@ -12,8 +12,6 @@
 
 rules
   
-  // TODO: consider dynamic rules
-  
   ast-diff:
     Update(filename, old-ast, new-ast) -> ast-diffs
     with
@@ -22,8 +20,8 @@
         new-defs   := <all-definitions> new-ast;
         <list-loop(try(record-old-definition))> old-defs; 
         <list-loop(try(record-new-definition))> new-defs; 
-        old-sigs   := <filter(basic-desugar; signature-of)> old-defs;
-        new-sigs   := <filter(basic-desugar; signature-of)> new-defs;
+        old-sigs   := <filter(signature-of-sugar)> old-defs;
+        new-sigs   := <filter(signature-of-sugar)> new-defs;
         all-sigs   := <make-set> <conc> (old-sigs, new-sigs);
         ast-diffs  := <filter(def-diff)> all-sigs
       |}
@@ -44,7 +42,7 @@
   record-old-definition:
     def -> def
     where
-      sig := <try(basic-desugar) ; signature-of>;
+      sig := <signature-of-sugar>;
       rules(
         SepOldDefinition :+ sig -> def
       )
@@ -52,7 +50,7 @@
   record-new-definition:
     def -> def
     where
-      sig := <try(basic-desugar) ; signature-of>;
+      sig := <signature-of-sugar>;
       rules(
         SepNewDefinition :+ sig -> def
       )
@@ -61,6 +59,8 @@
     None() -> []
   
   all-definitions:
-    Module(x, sections) -> defs
+    Module(x, sections) -> <conc> (dyn-rules, global-defs)
     with
-      defs := <filter(?Strategies(<id>) + ?Rules(<id>)) ; concat> sections
+      global-defs := <filter(?Strategies(<id>) + ?Rules(<id>)) ; concat> sections;
+      dyn-rules   := <collect-all(?RDecT(_, _, _) + ?RDec(_, _) + ?RDecNoArgs(_))>
+

Modified: experimental/sep-comp-tool/lib/analysis.str
===================================================================
--- experimental/sep-comp-tool/lib/analysis.str	2010-04-25 18:38:22 UTC (rev 20794)
+++ experimental/sep-comp-tool/lib/analysis.str	2010-04-26 07:37:26 UTC (rev 20795)
@@ -7,6 +7,9 @@
   lib/desugar
 
 rules // Projections and lookup
+  
+  signature-of-sugar =
+  	try(basic-desugar); signature-of
 
   signature-of:
     SDefT(x, s*, t*, s) -> (<remove-quote> x, <length> s*, <length> t*)
@@ -53,6 +56,7 @@
   signature-of:
     DynRuleScopeId(x) -> <remove-quote> x
   
+  /*
   remove-quote: 
     s -> s'
     with
@@ -60,4 +64,7 @@
         s' := <implode-string> s_tail
       else
         s' := s
-      end
\ No newline at end of file
+      end
+  */
+  
+  remove-quote = id
\ No newline at end of file

Modified: experimental/sep-comp-tool/sep-comp-tool.str
===================================================================
--- experimental/sep-comp-tool/sep-comp-tool.str	2010-04-25 18:38:22 UTC (rev 20794)
+++ experimental/sep-comp-tool/sep-comp-tool.str	2010-04-26 07:37:26 UTC (rev 20795)
@@ -38,6 +38,12 @@
     , rules(MarkSuccessful : _)
     , !"--mark    mark project as successfully compiled"
     )
+  + ArgOption(
+      "-I" + "--Include"
+    , where(<post-extend-config>("-I", ["-I", <id>]))
+    ; !()
+    , !"-I d | --Include d Include modules from directory d"
+    )
   
   sep-comp-tool =
     if not(<is-dir> <SepInputDir>) then
@@ -63,7 +69,7 @@
   where
   	newdefs := <mapconcat(bagof-SepNewDefinition)> changed-defs;
   	olddefs := <mapconcat(bagof-SepOldDefinition)> changed-defs;
-  	alldefs := <conc> (newdefs, olddefs)
+  	alldefs := <conc> (newdefs, olddefs) // FIXME: ?
   
   create-stratego-program(|def-uses, library-imports):
     // TODO: create a stratego program with the new defs
@@ -120,7 +126,7 @@
     with
       old-file := <old-file-path> file
     where
-      not(<is-newer> (old-file, file); <debug(!"no change: ")> file)
+      not(<is-newer> (old-file, file))
     with
       old-ast := <file-exists; ReadFromFile <+ !None()> old-file; 
       new-ast := <parse-stratego-file-cached> file
@@ -140,7 +146,7 @@
       not(is-dir);
       has-extension(|"str")
     with
-      cached   := <import-cache-path; debug(!3)> file;
+      cached   := <import-cache-path> file;
       old-file := <old-file-path> file;
       <with(file-exists | "File doesn't exist in cache")> cached; 
       <copy-file> (cached, old-file) 
@@ -151,9 +157,10 @@
   is-dir = where(filemode; isdir)
   
   library-imports =
-    // TODO: fetch library imports
+    // TODO: fetch library imports,
+    //       reusing/reproducing the lookup logic of pack-stratego-parse-stratego
     !["libstratego-lib"]
   
   parse-stratego-file-cached =
     // TODO: consider .meta file (see pack-stratego)
-    open-import(id, debug(!"reparsing "); <ps-parse-module-trm> FILE(<id>), ?x); !x
+    open-import(id, debug(!"reparsing: "); <ps-parse-module-trm> FILE(<id>), ?x); !x



From L.C.L.Kats at tudelft.nl  Mon Apr 26 09:56:00 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 26 Apr 2010 07:56:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20796 - LennartKats -
	strc-java/trunk/trans
Message-ID: <201004260756.o3Q7u0K9031536@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-26 07:56:00 +0000 (Mon, 26 Apr 2010)
New Revision: 20796

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20796&view=rev

Added:
   strc-java/trunk/trans/backend-simplify.meta
Modified:
   strc-java/trunk/trans/java-postprocess.str
   strc-java/trunk/trans/s2j-options.str
   strc-java/trunk/trans/s2j.str
   strc-java/trunk/trans/strj-options.str
   strc-java/trunk/trans/strj.str

Log:
- Added an experimental -Xsep-comp-tool option for sep-comp-tool support.
  Seems to work; the only thing that still needs to be fixed is the names
  of lifted arguments.
  
- Option -la stratego-lib is now implicitly included by default


Changes:

Added: strc-java/trunk/trans/backend-simplify.meta
===================================================================
--- strc-java/trunk/trans/backend-simplify.meta	                        (rev 0)
+++ strc-java/trunk/trans/backend-simplify.meta	2010-04-26 07:56:00 UTC (rev 20796)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-Sugar-in-Stratego")])

Modified: strc-java/trunk/trans/java-postprocess.str
===================================================================
--- strc-java/trunk/trans/java-postprocess.str	2010-04-26 07:37:26 UTC (rev 20795)
+++ strc-java/trunk/trans/java-postprocess.str	2010-04-26 07:56:00 UTC (rev 20796)
@@ -101,17 +101,20 @@
         ~*members
       }
     ]| ->
-    [ compilation-unit |[
-        ~package-dec?:pkgname
-        ~import-dec*:imports
-        mod* class x {
-          ~*members'
-        }
-      ]| 
-    | member-classes
-    ]
+    [ main-class*, member-class* ]
     with
-      (member-classes, members') := <partition(to-compilation-unit(|pkgname, imports))> members
+      (member-class*, members') := <partition(to-compilation-unit(|pkgname, imports))> members;
+      if IsIncrementalCompilation then
+        main-class* := []
+      else
+        main-class* := [compilation-unit |[
+	        ~package-dec?:pkgname
+	        ~import-dec*:imports
+	        mod* class x {
+	          ~*members'
+	        }
+	      ]|]
+	    end
 
   to-compilation-unit(|pkgname, imports) :
     type-dec |[

Modified: strc-java/trunk/trans/s2j-options.str
===================================================================
--- strc-java/trunk/trans/s2j-options.str	2010-04-26 07:37:26 UTC (rev 20795)
+++ strc-java/trunk/trans/s2j-options.str	2010-04-26 07:56:00 UTC (rev 20796)
@@ -7,6 +7,10 @@
  */
 module s2j-options
 
+imports
+  libstrc
+  s2j
+
 rules
   
   s2j-options =
@@ -41,7 +45,6 @@
       <post-extend-config> ("-D", [<parse-define-option>]); !()
     , fail // undocumented/deprecated
     )
-  
   s2j-general-options =
     ArgOption(
       "-I" + "--Include"
@@ -68,7 +71,8 @@
     )
   + ArgOption(
       "-O"
-    , <set-config>("-O", <string-to-int; strc-set-opt-level>); !()
+    , <set-config>("-O", <string-to-int; strc-set-opt-level>);
+      rules(ManuallySetOptimization: _)
     , !"-O n               Optimization level (0 = no optimization)"
     )
   + ArgOption(

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2010-04-26 07:37:26 UTC (rev 20795)
+++ strc-java/trunk/trans/s2j.str	2010-04-26 07:56:00 UTC (rev 20796)
@@ -80,7 +80,9 @@
       ; if <get-config> "-p" then
           // Use multiple .java files for programs with a package name
           java-split-class
-        ; java-add-alias-classes
+        ; if not(IsIncrementalCompilation) then
+            java-add-alias-classes
+          end
         else
           ![<id>]
         end
@@ -94,8 +96,12 @@
   ; remove-extension
   ; rules(
       MainClassName := <id>
-      ApplicationName := <!"-p"; get-config; string-tokenize('.'); last <+ MainClassName>
     )
+  ; app-name := <!"-p"; get-config; string-tokenize('.'); last <+ MainClassName>
+  ; rules(
+      ConstantContainerClass := app-name
+      ApplicationName        := app-name
+    )
   
   jify =
     escape(Jify)
@@ -194,7 +200,7 @@
     rules(
       CurrentLiftedFrame := None()
     )
-  ; function-defs := <map(translate-outer-definition)> defs
+  ; function-defs := <map(translate-outer-definition-top)> defs
   ; add-default-constructors
   ; constant-defs := <map(translate-constant-definition)> <get-config <+ ![]> "-D"
   ; lifted-defs   := <bagof-LiftedDef>
@@ -360,6 +366,69 @@
     ; def    := SDefT(name', [], [], Build(value))
     ; def'   := <translate-outer-definition> def
   
+  translate-outer-definition-top =
+    if IsIncrementalCompilation then
+      {| ConstDecl, ConstInit, java-Cache, ConstantContainerClass:
+        if ?SDefT(name, _, _, _) then
+          rules(
+            ConstantContainerClass := name
+          )
+        end;
+        translate-outer-definition;
+        if ConstInit then
+          with(add-local-constant-decls; ?x); !x
+        end
+      |}
+    else
+      translate-outer-definition
+    end
+  
+  add-local-constant-decls:
+    Semicolon() -> Semicolon()
+  
+  add-local-constant-decls:
+    type-dec |[
+      mod* class x extends y {
+        ~*members
+      }
+    ]| ->
+    type-dec |[
+      mod* class x extends y {
+        private volatile boolean isInitialized;
+        ~*cnst-decls
+        ~*members'
+        private void init() {
+          synchronized (x.class) {
+            if (!isInitialized) {
+              ~*cnst-inits'
+              isInitialized = true;
+            }
+          }
+        }
+      }
+    ]|
+  with
+    x_main      := <MainClassName>
+  ; cnst-decls  := <bagof-ConstDecl>
+  ; cnst-inits  := <bagof-ConstInit; concat; reverse>
+  ; cnst-inits' := <alltd(add-constant-factory-container(|x_main))> cnst-inits
+  ; members'    := <oncetd(add-local-constant-inits)> members
+    
+  add-local-constant-inits:
+    |[ mod* IStrategoTerm x_name(param*) {
+         bstm*
+       }
+    ]| ->
+    |[ mod* IStrategoTerm x_name(param*) {
+         if (!isInitialized) // Java 5+ safe double-checked locking
+           init();
+         bstm*
+       }
+    ]| 
+  
+  add-constant-factory-container(|x_main):
+    AmbName(Id("termFactory")) -> expr |[ x_main.constantFactory ]|
+  
   translate-outer-definition =
      translate-outer-definition-plain
   <+ translate-outer-definition-override
@@ -904,7 +973,7 @@
    *    (minding the 32767 length limit)
    */
   translate-ImportTerm :
-    ImportTerm(file) -> |[ term = x_main.x_constant; ]|
+    ImportTerm(file) -> |[ term = x_constants.x_constant; ]|
     with
       inputfile  := <find-import-term-file> file // (exits on error)
     ; outputfile := <base-filename> file
@@ -926,7 +995,7 @@
     ; inputname'    := <not(IsImported) <+ newname> inputname
     ; x_constant    := <conc-strings> ("const", inputname')
     ; x_getconstant := <conc-strings> ("get",   inputname')
-    ; x_main        := <MainClassName>
+    ; x_constants   := <ConstantContainerClass>
     ; rules(
         IsImported : inputname
         ConstDecl :+= class-body-dec |[
@@ -938,7 +1007,7 @@
           }
         ]|
         ConstInit :+= bstm* |[
-          x_constant = new ImportTerm(termFactory, x_main.class, "~pkgpath", "~outputfile");
+          x_constant = new ImportTerm(termFactory, x_constants.class, "~pkgpath", "~outputfile");
         ]|
       )
   
@@ -1007,32 +1076,32 @@
        ; (java-CacheConstant-again <+ java-CacheConstant <+ Snd)
 
   java-CacheConstant-again :
-    (t, e1 @ |[ x_main.x_constant ]|) -> e1
+    (t, e1 @ |[ x_constants.x_constant ]|) -> e1
     with
       rules(java-Cache: t -> e1)
-    ; x_main := <MainClassName>
+    ; x_constants := <ConstantContainerClass>
 
   java-CacheConstant :
-    (t, e1) -> |[ x_main.x ]|
+    (t, e1) -> |[ x_constants.x ]|
   where
       <(Op(id, map(java-Cache)); java-proper-list 
             + Anno(java-Cache, java-Cache) 
             + Int(id) + Str(id) + Real(id) )> t
   with
-        x_main := <MainClassName>
+        x_constants := <ConstantContainerClass>
       ; switch !t
           case ?Op("Cons", _):
             x := <newname> "constCons"
-          ; rules(IsProperList: |[ x_main.x ]|)
+          ; rules(IsProperList: |[ x_constants.x ]|)
           case ?Op("Nil", _):
             x := <newname> "constNil"
-          ; rules(IsProperList: |[ x_main.x ]|)
+          ; rules(IsProperList: |[ x_constants.x ]|)
           case ?Op(op, _):
             x := <newname> <conc-strings> ("const", <try(un-double-quote-chars); jify> op)
           otherwise:
             x := <newname> "const"
         end
-      ; rules( java-Cache : t -> |[ x_main.x ]| )
+      ; rules( java-Cache : t -> |[ x_constants.x ]| )
       ; !(x, e1)
       ; rules(ConstDecl :+= <java-DeclareTermId>)
       ; rules(ConstInit :+= <java-InitTermId>)
@@ -1155,7 +1224,7 @@
         ; if <not(Anno(is-ListOp,id))> t2 then 
             java-check-aterm-list 
           else
-              if ?|[ x_main.x_constant ]| + ?expr |[ x ]| then
+              if ?|[ x_constants.x_constant ]| + ?expr |[ x ]| then
                 !|[ (IStrategoList) ~expr:<id> ]|
               else
                 try(java-UncastATerm)

Modified: strc-java/trunk/trans/strj-options.str
===================================================================
--- strc-java/trunk/trans/strj-options.str	2010-04-26 07:37:26 UTC (rev 20795)
+++ strc-java/trunk/trans/strj-options.str	2010-04-26 07:56:00 UTC (rev 20796)
@@ -8,6 +8,7 @@
 module strj-options
 
 imports
+  libstratego-lib
   libstrc
   s2j-options
   s2j
@@ -23,6 +24,7 @@
   ; <set-config> ("-O", 2)
   ; <set-config> ("-I", [])
   ; <set-config> ("--no-concrete-syntax-externals", 1)
+  ; <post-extend-config> ("-la", ["org.strategoxt.stratego_lib"])
  
   strj-parse-options =
     with(
@@ -39,6 +41,15 @@
       <get-config> "-o"
     ; fatal-err(|"Output file name is not a legal Java name")
     end
+  ; if IsIncrementalCompilation; not(<file-exists> $[[<output-dirname>]/Main.java]) then
+      log(|Info(), "No existing output files found; performing initial compilation");
+      rules(IsIncrementalCompilation :- _)
+    end
+  ; if IsIncrementalCompilation then
+      olevel2(
+        fatal-err-msg(|"Inlining not supported with incremental compilation: use -O 1 or lower")
+      )
+    end
   ; if <get-config> "-o"; base-filename => "main.java" then
       fatal-err(|"Output file name 'main' is not allowed as it causes problems on case-insensitive file systems; use 'Main' instead")
     end
@@ -114,6 +125,13 @@
       warn-msg(|"Ignored unsupported option -c")
     , fail
     )
+  + Option(
+      "-Xsep-comp-tool"
+    , rules(IsIncrementalCompilation: _);
+      <set-config> ("--library", ());
+      (ManuallySetOptimization <+ <set-config> ("-O", <strc-set-opt-level> 1))
+    , !"--Xsep-comp-tool  Compile based on sep-comp-tool (experimental)"
+    )
   
   <+ ArgOption(fail, fail, !"")
   <+ ArgOption(fail, fail, !"General options:")

Modified: strc-java/trunk/trans/strj.str
===================================================================
--- strc-java/trunk/trans/strj.str	2010-04-26 07:37:26 UTC (rev 20795)
+++ strc-java/trunk/trans/strj.str	2010-04-26 07:56:00 UTC (rev 20796)
@@ -24,10 +24,13 @@
     strj-parse-options
   ; main-module-required
   ; log-timed(
-      xtc-input(strj)
+      xtc-input(strj-or-die)
     | "Compilation succeeded", 1
     )
   ; <exit> 0
+  
+  strj-or-die =
+  	strj
   <+
     prim("SSL_stacktrace_get_all_frame_names")
   ; if-verbose3(



From m.dejonge at tudelft.nl  Mon Apr 26 11:52:54 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 26 Apr 2010 09:52:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20797 - MaartjeDeJonge -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201004260952.o3Q9qsBp000634@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-26 09:52:54 +0000 (Mon, 26 Apr 2010)
New Revision: 20797

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20797&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionLayoutIncludedPrimitive.java
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLayoutPositionPrimitive.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SelectedFromToPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java

Log:
positions: node comments, node with layout

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-26 07:56:00 UTC (rev 20796)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-26 09:52:54 UTC (rev 20797)
@@ -29,6 +29,7 @@
 		add(new OriginSourceTextPrimitive());
 		add(new SelectedFromToPrimitive());
 		add(new OriginRootPrimitive());
+		add(new OriginPositionLayoutIncludedPrimitive());
 	}
 
 	public String getOperatorRegistryName() {

Deleted: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLayoutPositionPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLayoutPositionPrimitive.java	2010-04-26 07:56:00 UTC (rev 20796)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLayoutPositionPrimitive.java	2010-04-26 09:52:54 UTC (rev 20797)
@@ -1,21 +0,0 @@
-package org.strategoxt.imp.runtime.stratego;
-
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
-
-/**
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class OriginLayoutPositionPrimitive extends AbstractOriginPrimitive {
-
-	public OriginLayoutPositionPrimitive() {
-		super("SSL_EXT_origin_layout_term_pos");
-	}
-
-	@Override
-	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
-		return node.getNode().getTerm();
-	}
-
-}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	2010-04-26 07:56:00 UTC (rev 20796)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	2010-04-26 09:52:54 UTC (rev 20797)
@@ -1,17 +1,11 @@
 package org.strategoxt.imp.runtime.stratego;
 
-import java.util.ArrayList;
-
 import lpg.runtime.ILexStream;
-import lpg.runtime.IPrsStream;
-import lpg.runtime.IToken;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.library.AbstractPrimitive;
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.imp.runtime.parser.tokens.SGLRToken;
-import org.strategoxt.imp.runtime.parser.tokens.TokenKind;
 import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
 
 /**

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionLayoutIncludedPrimitive.java (from rev 20794, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLayoutPositionPrimitive.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionLayoutIncludedPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionLayoutIncludedPrimitive.java	2010-04-26 09:52:54 UTC (rev 20797)
@@ -0,0 +1,28 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class OriginPositionLayoutIncludedPrimitive extends AbstractOriginPrimitive {
+
+	public OriginPositionLayoutIncludedPrimitive() {
+		super("SSL_EXT_origin_pos_layout_included");
+	}
+
+	@Override
+	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
+		ITermFactory factory = env.getFactory();
+		int start = TextPositions.getStartPosNodeWithLayout(node.getNode());
+		int end =  TextPositions.getEndPosNodeWithLayout(node.getNode());
+		return factory.makeTuple(
+				factory.makeInt(start),
+				factory.makeInt(end)
+		);
+	}
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionLayoutIncludedPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SelectedFromToPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SelectedFromToPrimitive.java	2010-04-26 07:56:00 UTC (rev 20796)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SelectedFromToPrimitive.java	2010-04-26 09:52:54 UTC (rev 20797)
@@ -1,8 +1,5 @@
 package org.strategoxt.imp.runtime.stratego;
 
-import static org.spoofax.interpreter.core.Tools.isTermString;
-
-import java.util.ArrayList;
 import java.util.List;
 
 import org.spoofax.interpreter.core.IContext;
@@ -11,12 +8,8 @@
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.EditorState;
-import org.strategoxt.imp.runtime.parser.ast.AstNode;
-import org.strategoxt.imp.runtime.parser.ast.AstNodeFactory;
-import org.strategoxt.imp.runtime.parser.ast.ListAstNode;
 import org.strategoxt.imp.runtime.parser.ast.SubListAstNode;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
-import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
 
 /**
  * Returns the start and end position of the selection

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-04-26 07:56:00 UTC (rev 20796)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-04-26 09:52:54 UTC (rev 20797)
@@ -2,7 +2,6 @@
 
 import static java.util.Arrays.asList;
 
-import java.util.ArrayList;
 import java.util.LinkedHashSet;
 import java.util.LinkedList;
 import java.util.List;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-04-26 07:56:00 UTC (rev 20796)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-04-26 09:52:54 UTC (rev 20797)
@@ -1,9 +1,6 @@
 package org.strategoxt.imp.runtime.stratego;
 
 import static org.spoofax.interpreter.core.Tools.isTermString;
-
-import java.util.ArrayList;
-
 import lpg.runtime.ILexStream;
 
 import org.eclipse.jface.text.BadLocationException;
@@ -14,9 +11,7 @@
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.EditorState;
-import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
 import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
-import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNodeList;
 import org.strategoxt.lang.terms.StrategoInt;
 import org.strategoxt.lang.terms.StrategoTuple;
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java	2010-04-26 07:56:00 UTC (rev 20796)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java	2010-04-26 09:52:54 UTC (rev 20797)
@@ -1,7 +1,5 @@
 package org.strategoxt.imp.runtime.stratego;
 
-import java.util.ArrayList;
-
 import lpg.runtime.ILexStream;
 import lpg.runtime.IPrsStream;
 import lpg.runtime.IToken;
@@ -17,10 +15,33 @@
 	}
 	
 	public static int getStartPosNodeWithLayout(IStrategoAstNode node){
-		return 0;
+		IToken startTok = getStartTokenLeftComments(node);
+		if(startTok==null){
+			startTok=node.getLeftIToken();
+		}
+		IPrsStream tokStream=startTok.getIPrsStream();
+		int lineNr=startTok.getLine();
+		IToken precedingTok=tokStream.getTokenAt(startTok.getTokenIndex()-1);
+		while(precedingTok.getTokenIndex()>0 ){
+			if(precedingTok.getEndLine()<lineNr)
+				return tokStream.getLineOffset(lineNr-1)+1;
+			if(!isLayout(precedingTok))
+				return startTok.getStartOffset();
+			precedingTok=tokStream.getTokenAt(precedingTok.getTokenIndex()-1);
+		}
+		if(isLayout(precedingTok))
+			return precedingTok.getStartOffset();
+		return precedingTok.getEndOffset()+1;
 	}
 	
 	public static int getStartPosCommentBefore(IStrategoAstNode node){
+		IToken commentTok = getStartTokenLeftComments(node);
+		if(commentTok==null)
+			return -1;
+		return startPositionAfterTrim(commentTok);
+	}
+
+	private static IToken getStartTokenLeftComments(IStrategoAstNode node) {
 		IToken start = node.getLeftIToken(); 
 		IPrsStream tokenStream=start.getIPrsStream();
 		IToken prevNonLayout = getPrevAstToken(start);
@@ -29,7 +50,7 @@
 		int lineIndex=start.getLine()-1;
 		while(tokenIndex>=0){
 			IToken tok=tokenStream.getTokenAt(tokenIndex);
-			if((prevNonLayout!=null && tok.getLine()<=prevNonLayout.getLine()) || tok.getEndLine() < lineIndex || TokenKind.valueOf(tok.getKind())!=TokenKind.TK_LAYOUT)
+			if((prevNonLayout!=null && tok.getLine()<=prevNonLayout.getLine()) || tok.getEndLine() < lineIndex || !isLayout(tok))
 				break;			
 			if(!SGLRToken.isWhiteSpace(tok)){
 				commentTok=tok;
@@ -37,11 +58,13 @@
 			}
 			tokenIndex--;
 		}
-		if(commentTok==null)
-			return -1;
-		return startPositionAfterTrim(commentTok);
+		return commentTok;
 	}
 
+	private static boolean isLayout(IToken tok) {
+		return TokenKind.valueOf(tok.getKind())==TokenKind.TK_LAYOUT;
+	}
+
 	private static IToken getPrevAstToken(IToken start) {
 		IToken prevNonLayout=null;
 		IPrsStream tokenStream=start.getIPrsStream();
@@ -59,12 +82,15 @@
 		IToken start = node.getRightIToken(); 
 		IPrsStream tokenStream=start.getIPrsStream();
 		int tokenIndex=start.getTokenIndex()+1;
+		int startPos=-1;
 		while(tokenIndex<tokenStream.getTokens().size()){
 			IToken tok=tokenStream.getTokenAt(tokenIndex);
-			if(tok.getLine() > start.getEndLine() || TokenKind.valueOf(tok.getKind())!=TokenKind.TK_LAYOUT)
+			if(tok.getLine() > start.getEndLine())
+				return startPos;
+			if(!isLayout(tok))
 				return -1;
 			if(!SGLRToken.isWhiteSpace(tok)){
-				return startPositionAfterTrim(tok);
+				startPos=startPositionAfterTrim(tok);
 			}	
 			tokenIndex++;
 		}
@@ -76,7 +102,23 @@
 	}
 	
 	public static int getEndPosNodeWithLayout(IStrategoAstNode node){
-		return 0;
+		IToken endTok = getEndTokenCommentAfter(node);
+		if(endTok==null){
+			endTok=node.getRightIToken();
+		}
+		IPrsStream tokStream=endTok.getIPrsStream();
+		int lineNr=endTok.getEndLine();
+		IToken nextTok=tokStream.getTokenAt(endTok.getTokenIndex()+1);
+		while(nextTok.getTokenIndex()<tokStream.getTokens().size()-1){
+			if(nextTok.getLine()>lineNr)
+				return tokStream.getLineOffset(lineNr)+1;
+			if(!SGLRToken.isWhiteSpace(nextTok))
+				return nextTok.getStartOffset();
+			nextTok=tokStream.getTokenAt(nextTok.getTokenIndex()+1);
+		}
+		if(isLayout(nextTok))
+			return nextTok.getEndOffset();
+		return nextTok.getStartOffset();
 	}
 	
 	public static int getEndPosCommentBefore(IStrategoAstNode node){
@@ -86,7 +128,7 @@
 		int tokenIndex=start.getTokenIndex()-1;
 		while(tokenIndex>=0){
 			IToken tok=tokenStream.getTokenAt(tokenIndex);
-			if((prevNonLayout!=null && tok.getLine()<=prevNonLayout.getLine()) || tok.getEndLine() < start.getLine()-1 || TokenKind.valueOf(tok.getKind())!=TokenKind.TK_LAYOUT)
+			if((prevNonLayout!=null && tok.getLine()<=prevNonLayout.getLine()) || tok.getEndLine() < start.getLine()-1 || !isLayout(tok))
 				return -1;			
 			if(!SGLRToken.isWhiteSpace(tok))
 				return endPositionAfterTrim(tok);
@@ -112,22 +154,29 @@
 	}
 	
 	public static int getEndPosCommentAfter(IStrategoAstNode node){
+		IToken commentTok = getEndTokenCommentAfter(node);
+		if(commentTok==null)
+			return -1;
+		return endPositionAfterTrim(commentTok);
+	}
+
+	private static IToken getEndTokenCommentAfter(IStrategoAstNode node) {
 		if(getStartPosCommentAfter(node)==-1)
-			return -1;
+			return null;
 		IToken start = node.getRightIToken(); 
 		IPrsStream tokenStream=start.getIPrsStream();
 		int tokenIndex=start.getTokenIndex()+1;
 		IToken commentTok=null;
 		while(tokenIndex<tokenStream.getTokens().size()){
 			IToken tok=tokenStream.getTokenAt(tokenIndex);
-			if(tok.getLine() > start.getEndLine() || TokenKind.valueOf(tok.getKind())!=TokenKind.TK_LAYOUT)
+			if(tok.getLine() > start.getEndLine() || !isLayout(tok))
 				break;
 			if(!SGLRToken.isWhiteSpace(tok)){
 				commentTok=tok;
 			}	
 			tokenIndex++;
 		}
-		return endPositionAfterTrim(commentTok);
+		return commentTok;
 	}
 	
 	public static boolean isNotInTextRange(int pos, ILexStream lexStream) {



From m.dejonge at tudelft.nl  Mon Apr 26 19:13:38 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Mon, 26 Apr 2010 17:13:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20798 - MaartjeDeJonge -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201004261713.o3QHDcki006213@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-26 17:13:38 +0000 (Mon, 26 Apr 2010)
New Revision: 20798

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20798&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java	2010-04-26 09:52:54 UTC (rev 20797)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextFragmentPrimitive.java	2010-04-26 17:13:38 UTC (rev 20798)
@@ -62,8 +62,8 @@
 		int line_end=((StrategoInt)position.get(2)).intValue();
 		int col_end=((StrategoInt)position.get(3)).intValue();
 		ILexStream lexStream= EditorState.getActiveEditor().getParseController().getCurrentAst().getLeftIToken().getILexStream();
-		int pos_start=lexStream.getLineOffset(line_start)+col_start; //FIXME: bad location
-		int pos_end=lexStream.getLineOffset(line_end)+col_end;
+		int pos_start=lexStream.getLineOffset(line_start-1)+col_start; //FIXME: bad location
+		int pos_end=lexStream.getLineOffset(line_end-1)+col_end;
 		if(TextPositions.isUnvalidInterval(pos_start, pos_end, lexStream))
 			return null;
 		String textfragment=lexStream.toString(pos_start, pos_end);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java	2010-04-26 09:52:54 UTC (rev 20797)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java	2010-04-26 17:13:38 UTC (rev 20798)
@@ -66,15 +66,14 @@
 	}
 
 	private static IToken getPrevAstToken(IToken start) {
-		IToken prevNonLayout=null;
 		IPrsStream tokenStream=start.getIPrsStream();
 		for (int i = start.getTokenIndex()-1; i >= 0; i--) {
 			IToken preceedingTok=tokenStream.getTokenAt(i);
-			if(!SGLRToken.isWhiteSpace(preceedingTok)){
-				prevNonLayout=preceedingTok;
+			if(!isLayout(preceedingTok)){
+				return preceedingTok;
 			}
 		}
-		return prevNonLayout;
+		return null;
 	}
 
 	
@@ -87,11 +86,11 @@
 			IToken tok=tokenStream.getTokenAt(tokenIndex);
 			if(tok.getLine() > start.getEndLine())
 				return startPos;
+			if(isLayout(tok) && !SGLRToken.isWhiteSpace(tok)){
+				return startPositionAfterTrim(tok);
+			}	
 			if(!isLayout(tok))
 				return -1;
-			if(!SGLRToken.isWhiteSpace(tok)){
-				startPos=startPositionAfterTrim(tok);
-			}	
 			tokenIndex++;
 		}
 		return -1;



From L.C.L.Kats at tudelft.nl  Tue Apr 27 11:05:23 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 27 Apr 2010 09:05:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20799 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201004270905.o3R95NxK018970@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-27 09:05:23 +0000 (Tue, 27 Apr 2010)
New Revision: 20799

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20799&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java

Log:
Spoofax/98: Save failed in Stratego editor

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	2010-04-26 17:13:38 UTC (rev 20798)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	2010-04-27 09:05:23 UTC (rev 20799)
@@ -50,34 +50,40 @@
 	public void documentChanged(DocumentEvent event) {
 		if (function == null) return;
 		
-		synchronized (Environment.getSyncRoot()) {
-			AstNode ast = editor.getCurrentAst();
-			// IStrategoTerm result = runtime.invokeSilent(function, runtime.makeInputTerm(ast, false), ast.getResource());
-			IStrategoTerm result = runtime.invokeSilent(function, ast);
-			if (result == null) {
-				runtime.reportRewritingFailed();
-				String log = runtime.getLog();
-				Environment.logException(log.length() == 0 ? "Analysis failed" : "Analysis failed:\n" + log);
-			} else if (isTermString(result)) {
-				// Function's returning a filename
-				String file = asJavaString(termAt(result, 0));
-				if (new File(file).exists())
-					RefreshResourcePrimitive.call(runtime.getRuntime().getContext(), file);	
-			} else if (isTermTuple(result) && result.getSubtermCount() == 2 && isTermString(termAt(result, 0)) && isTermString(termAt(result, 1))) {
-				// Function's returning a tuple like a builder
-				// let's be friendly and try to refresh the file
-				String file = asJavaString(termAt(result, 0));
-				String contents = asJavaString(termAt(result, 1));
-				IResource resource = RefreshResourcePrimitive.getResource(runtime.getRuntime().getContext(), file);
-				try {
-					StrategoBuilder.setFileContentsDirect((IFile) resource, contents);
-				} catch (CoreException e) {
-					Environment.logException("Problem when handling on save event", e);
+		try {
+			synchronized (Environment.getSyncRoot()) {
+				AstNode ast = editor.getCurrentAst();
+				// IStrategoTerm result = runtime.invokeSilent(function, runtime.makeInputTerm(ast, false), ast.getResource());
+				IStrategoTerm result = runtime.invokeSilent(function, ast);
+				if (result == null) {
+					runtime.reportRewritingFailed();
+					String log = runtime.getLog();
+					Environment.logException(log.length() == 0 ? "Analysis failed" : "Analysis failed:\n" + log);
+				} else if (isTermString(result)) {
+					// Function's returning a filename
+					String file = asJavaString(termAt(result, 0));
+					if (new File(file).exists())
+						RefreshResourcePrimitive.call(runtime.getRuntime().getContext(), file);	
+				} else if (isTermTuple(result) && result.getSubtermCount() == 2 && isTermString(termAt(result, 0)) && isTermString(termAt(result, 1))) {
+					// Function's returning a tuple like a builder
+					// let's be friendly and try to refresh the file
+					String file = asJavaString(termAt(result, 0));
+					String contents = asJavaString(termAt(result, 1));
+					IResource resource = RefreshResourcePrimitive.getResource(runtime.getRuntime().getContext(), file);
+					try {
+						StrategoBuilder.setFileContentsDirect((IFile) resource, contents);
+					} catch (CoreException e) {
+						Environment.logException("Problem when handling on save event", e);
+					}
+				} else if (!"None".equals(cons(result))) {
+					if (editor.getDescriptor().isDynamicallyLoaded())
+						Environment.logWarning("Unexpected result from 'on save' strategy: should be None() or (\"filename\", \"contents\"): " + result);
 				}
-			} else if (!"None".equals(cons(result))) {
-				if (editor.getDescriptor().isDynamicallyLoaded())
-					Environment.logWarning("Unexpected result from 'on save' strategy: should be None() or (\"filename\", \"contents\"): " + result);
 			}
+		} catch (RuntimeException e) {
+			Environment.logException("Exception in OnSaveService", e);
+		} catch (Error e) {
+			Environment.logException("Exception in OnSaveService", e);
 		}
 	}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	2010-04-26 17:13:38 UTC (rev 20798)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	2010-04-27 09:05:23 UTC (rev 20799)
@@ -169,6 +169,8 @@
 				reportGenericException(editor, e);
 			} catch (RuntimeException e) {
 				reportGenericException(editor, e);
+			} catch (Error e) {
+				reportGenericException(editor, e);
 			}
 		}
 
@@ -221,7 +223,7 @@
 		return Environment.getATermConverter().convert(term).toString();
 	}
 
-	private void reportGenericException(EditorState editor, Exception e) {
+	private void reportGenericException(EditorState editor, Throwable e) {
 		boolean isDynamic = editor.getDescriptor().isDynamicallyLoaded();
 		Environment.logException("Builder failed for " + (isDynamic ? "" : "non-") + "dynamically loaded editor", e);
 		if (isDynamic) StrategoConsole.activateConsole();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-04-26 17:13:38 UTC (rev 20798)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-04-27 09:05:23 UTC (rev 20799)
@@ -566,7 +566,14 @@
 	 * @see #getAstNode(IStrategoTerm)  To retrieve the AST node associated with the resulting term.
 	 */
 	public IStrategoTerm invokeSilent(String function, IStrategoAstNode node) {
-		return invokeSilent(function, makeInputTerm(node, true), node.getResource());
+		try {
+			return invokeSilent(function, makeInputTerm(node, true), node.getResource());
+		} catch (RuntimeException e) {
+			if (runtime != null) runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
+			Environment.logException("Internal error evaluating strategy " + function, e);
+			if (descriptor.isDynamicallyLoaded()) StrategoConsole.activateConsole();
+			return null;
+		}
 	}
 	
 	/**



From R.B.Vermaas at tudelft.nl  Wed Apr 28 12:51:12 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 28 Apr 2010 10:51:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20800 - rob -
	strategoxt/trunk/strc-core/lib/stratego/strc/pack
Message-ID: <201004281051.o3SApDpZ008724@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-04-28 10:51:12 +0000 (Wed, 28 Apr 2010)
New Revision: 20800

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20800&view=rev

Modified:
   strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str

Log:
StrategoXT/811: Doubling strategies -- quick fix, should rewrite pack-stratego

Changes:

Modified: strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str
===================================================================
--- strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str	2010-04-27 09:05:23 UTC (rev 20799)
+++ strategoxt/trunk/strc-core/lib/stratego/strc/pack/pack-stratego.str	2010-04-28 10:51:12 UTC (rev 20800)
@@ -74,6 +74,7 @@
         ; map(IncludePathName(id) <+ !IncludeFromPath(<id>))
       , \ (n,x,xs) -> [x|xs] \
       )
+    ; (uniq,id)
     ; if ?(_, []) then
        Fst
        ; unzip



From m.dejonge at tudelft.nl  Wed Apr 28 16:41:45 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 28 Apr 2010 14:41:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20801 - MaartjeDeJonge -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201004281441.o3SEfj1f012512@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-28 14:41:44 +0000 (Wed, 28 Apr 2010)
New Revision: 20801

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20801&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentAfterPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentBeforePrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetWithLayoutPrimitive.java
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionLayoutIncludedPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java

Log:
more consistent names for primitive strategies

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-28 10:51:12 UTC (rev 20800)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-28 14:41:44 UTC (rev 20801)
@@ -14,7 +14,7 @@
 		add(new ProjectPathPrimitive());
 		add(new RefreshResourcePrimitive());
 		add(new OriginLocationPrimitive());
-		add(new OriginCharPositionPrimitive());
+		add(new OriginOffsetPrimitive());
 		add(new OriginStripPrimitive());
 		add(new OriginTermPrimitive());
 		add(new OriginSublistTermPrimitive());
@@ -22,14 +22,14 @@
 		add(new OriginTextFragmentPrimitive());
 		add(new OriginEqualPrimitive());
 		add(new OriginSurroundingCommentsPrimitive());
-		add(new OriginLeftCommentLinesPrimitive());
-		add(new OriginRightLineCommentPrimitive());
+		add(new OriginCommentBeforePrimitive());
+		add(new OriginCommentAfterPrimitive());
 		add(new TextChangePrimitive());
 		add(new OriginPositionToLocationPrimitive());
 		add(new OriginSourceTextPrimitive());
 		add(new SelectedFromToPrimitive());
 		add(new OriginRootPrimitive());
-		add(new OriginPositionLayoutIncludedPrimitive());
+		add(new OriginOffsetWithLayoutPrimitive());
 	}
 
 	public String getOperatorRegistryName() {

Deleted: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java	2010-04-28 10:51:12 UTC (rev 20800)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java	2010-04-28 14:41:44 UTC (rev 20801)
@@ -1,29 +0,0 @@
-package org.strategoxt.imp.runtime.stratego;
-
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.spoofax.interpreter.terms.ITermFactory;
-import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
-
-/**
- * Returns the tuple (offset-start, offset-end) for an ast-node
- * @author Maartje de Jonge
- */
-public class OriginCharPositionPrimitive extends AbstractOriginPrimitive {
-
-	public OriginCharPositionPrimitive() {
-		super("SSL_EXT_origin_char_position");
-	}
-
-	@Override
-	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
-		ITermFactory factory = env.getFactory();
-		int start = TextPositions.getStartPosNode(node.getNode());
-		int end =  TextPositions.getEndPosNode(node.getNode());
-		return factory.makeTuple(
-				factory.makeInt(start),
-				factory.makeInt(end)
-		);
-	}
-
-}

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentAfterPrimitive.java (from rev 20794, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentAfterPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentAfterPrimitive.java	2010-04-28 14:41:44 UTC (rev 20801)
@@ -0,0 +1,51 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import lpg.runtime.ILexStream;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+
+/**
+ * Extracts all comment lines directly after the current node on the same line
+ * @author Maartje de Jonge
+ */
+public class OriginCommentAfterPrimitive extends AbstractPrimitive {
+	
+	private static final String NAME = "SSL_EXT_origin_comment_after";
+	
+
+	public OriginCommentAfterPrimitive() {
+		super(NAME, 0, 1);
+	}
+	
+	@Override
+	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		
+		if (tvars[0] instanceof IWrappedAstNode) {
+			IStrategoTerm result = call(env, (IWrappedAstNode) tvars[0]);
+			if (result != null) {
+				env.setCurrent(result);
+				return true;
+			}
+		}
+		return false;
+	}
+	
+	private IStrategoTerm call(IContext env, IWrappedAstNode node) {		
+		int commentStart=TextPositions.getStartPosCommentAfter(node.getNode());
+		int commentEnd=TextPositions.getEndPosCommentAfter(node.getNode());
+		if(commentStart>0){
+			ILexStream lexStream=node.getNode().getLeftIToken().getILexStream();
+			String commentText=lexStream.toString(commentStart, commentEnd-1);
+			return env.getFactory().makeTuple(
+					env.getFactory().makeInt(commentStart),
+					env.getFactory().makeInt(commentEnd),
+					env.getFactory().makeString(commentText)
+			);
+		}
+		return null;
+	}
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentAfterPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentBeforePrimitive.java (from rev 20797, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentBeforePrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentBeforePrimitive.java	2010-04-28 14:41:44 UTC (rev 20801)
@@ -0,0 +1,51 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import lpg.runtime.ILexStream;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+
+/**
+ * Extracts all comment lines directly in front of the current node
+ * @author Maartje de Jonge
+ */
+public class OriginCommentBeforePrimitive extends AbstractPrimitive {
+	
+	private static final String NAME = "SSL_EXT_origin_comment_before";
+	
+
+	public OriginCommentBeforePrimitive() {
+		super(NAME, 0, 1);
+	}
+	
+	@Override
+	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		
+		if (tvars[0] instanceof IWrappedAstNode) {
+			IStrategoTerm result = call(env, (IWrappedAstNode) tvars[0]);
+			if (result != null) {
+				env.setCurrent(result);
+				return true;
+			}
+		}
+		return false;
+	}
+	
+	private IStrategoTerm call(IContext env, IWrappedAstNode node) {		
+		int commentStart=TextPositions.getStartPosCommentBefore(node.getNode());
+		int commentEnd=TextPositions.getEndPosCommentBefore(node.getNode());
+		if(commentStart>0){
+			ILexStream lexStream=node.getNode().getLeftIToken().getILexStream();
+			String commentText=lexStream.toString(commentStart, commentEnd-1);
+			return env.getFactory().makeTuple(
+					env.getFactory().makeInt(commentStart),
+					env.getFactory().makeInt(commentEnd),
+					env.getFactory().makeString(commentText)
+			);
+		}
+		return null;
+	}
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCommentBeforePrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Deleted: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	2010-04-28 10:51:12 UTC (rev 20800)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginLeftCommentLinesPrimitive.java	2010-04-28 14:41:44 UTC (rev 20801)
@@ -1,51 +0,0 @@
-package org.strategoxt.imp.runtime.stratego;
-
-import lpg.runtime.ILexStream;
-
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.library.AbstractPrimitive;
-import org.spoofax.interpreter.stratego.Strategy;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
-
-/**
- * Extracts all comment lines directly in front of the current node
- * @author Maartje de Jonge
- */
-public class OriginLeftCommentLinesPrimitive extends AbstractPrimitive {
-	
-	private static final String NAME = "SSL_EXT_origin_left_comment";
-	
-
-	public OriginLeftCommentLinesPrimitive() {
-		super(NAME, 0, 1);
-	}
-	
-	@Override
-	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
-		
-		if (tvars[0] instanceof IWrappedAstNode) {
-			IStrategoTerm result = call(env, (IWrappedAstNode) tvars[0]);
-			if (result != null) {
-				env.setCurrent(result);
-				return true;
-			}
-		}
-		return false;
-	}
-	
-	private IStrategoTerm call(IContext env, IWrappedAstNode node) {		
-		int commentStart=TextPositions.getStartPosCommentBefore(node.getNode());
-		int commentEnd=TextPositions.getEndPosCommentBefore(node.getNode());
-		if(commentStart>0){
-			ILexStream lexStream=node.getNode().getLeftIToken().getILexStream();
-			String commentText=lexStream.toString(commentStart, commentEnd-1);
-			return env.getFactory().makeTuple(
-					env.getFactory().makeInt(commentStart),
-					env.getFactory().makeInt(commentEnd),
-					env.getFactory().makeString(commentText)
-			);
-		}
-		return null;
-	}
-}

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetPrimitive.java (from rev 20794, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginCharPositionPrimitive.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetPrimitive.java	2010-04-28 14:41:44 UTC (rev 20801)
@@ -0,0 +1,29 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+
+/**
+ * Returns the tuple (offset-start, offset-end) for an ast-node
+ * @author Maartje de Jonge
+ */
+public class OriginOffsetPrimitive extends AbstractOriginPrimitive {
+
+	public OriginOffsetPrimitive() {
+		super("SSL_EXT_origin_offset");
+	}
+
+	@Override
+	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
+		ITermFactory factory = env.getFactory();
+		int start = TextPositions.getStartPosNode(node.getNode());
+		int end =  TextPositions.getEndPosNode(node.getNode());
+		return factory.makeTuple(
+				factory.makeInt(start),
+				factory.makeInt(end)
+		);
+	}
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetWithLayoutPrimitive.java (from rev 20797, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionLayoutIncludedPrimitive.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetWithLayoutPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetWithLayoutPrimitive.java	2010-04-28 14:41:44 UTC (rev 20801)
@@ -0,0 +1,28 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class OriginOffsetWithLayoutPrimitive extends AbstractOriginPrimitive {
+
+	public OriginOffsetWithLayoutPrimitive() {
+		super("SSL_EXT_origin_offset_with_layout");
+	}
+
+	@Override
+	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
+		ITermFactory factory = env.getFactory();
+		int start = TextPositions.getStartPosNodeWithLayout(node.getNode());
+		int end =  TextPositions.getEndPosNodeWithLayout(node.getNode());
+		return factory.makeTuple(
+				factory.makeInt(start),
+				factory.makeInt(end)
+		);
+	}
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginOffsetWithLayoutPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Deleted: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionLayoutIncludedPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionLayoutIncludedPrimitive.java	2010-04-28 10:51:12 UTC (rev 20800)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionLayoutIncludedPrimitive.java	2010-04-28 14:41:44 UTC (rev 20801)
@@ -1,28 +0,0 @@
-package org.strategoxt.imp.runtime.stratego;
-
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.spoofax.interpreter.terms.ITermFactory;
-import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
-
-/**
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class OriginPositionLayoutIncludedPrimitive extends AbstractOriginPrimitive {
-
-	public OriginPositionLayoutIncludedPrimitive() {
-		super("SSL_EXT_origin_pos_layout_included");
-	}
-
-	@Override
-	protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
-		ITermFactory factory = env.getFactory();
-		int start = TextPositions.getStartPosNodeWithLayout(node.getNode());
-		int end =  TextPositions.getEndPosNodeWithLayout(node.getNode());
-		return factory.makeTuple(
-				factory.makeInt(start),
-				factory.makeInt(end)
-		);
-	}
-
-}

Deleted: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java	2010-04-28 10:51:12 UTC (rev 20800)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginPositionToLocationPrimitive.java	2010-04-28 14:41:44 UTC (rev 20801)
@@ -1,43 +0,0 @@
-package org.strategoxt.imp.runtime.stratego;
-
-import lpg.runtime.ILexStream;
-
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.library.AbstractPrimitive;
-import org.spoofax.interpreter.stratego.Strategy;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.spoofax.interpreter.terms.IStrategoTuple;
-import org.strategoxt.imp.runtime.EditorState;
-import org.strategoxt.lang.terms.StrategoInt;
-
-/**
- * Extracts all comment lines directly after the current node on the same line
- * @author Maartje de Jonge
- */
-public class OriginPositionToLocationPrimitive extends AbstractPrimitive {
-	
-	private static final String NAME = "SSL_EXT_origin_pos_to_loc";
-	
-
-	public OriginPositionToLocationPrimitive() {
-		super(NAME, 0, 1);
-	}
-	
-	@Override 
-	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
-		if (!(tvars[0] instanceof StrategoInt))
-			return false;
-		int position=((StrategoInt)tvars[0]).intValue();
-		ILexStream lexStream= EditorState.getActiveEditor().getParseController().getCurrentAst().getLeftIToken().getILexStream();
-		if(TextPositions.isNotInTextRange(position, lexStream))
-			return false;
-		int col=lexStream.getColumnOfCharAt(position);
-		int line=lexStream.getLineNumberOfCharAt(position);
-		IStrategoTuple result = env.getFactory().makeTuple(
-				env.getFactory().makeInt(line),
-				env.getFactory().makeInt(col)
-		);
-		env.setCurrent(result);
-		return true;
-	}
-}

Deleted: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	2010-04-28 10:51:12 UTC (rev 20800)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginRightLineCommentPrimitive.java	2010-04-28 14:41:44 UTC (rev 20801)
@@ -1,51 +0,0 @@
-package org.strategoxt.imp.runtime.stratego;
-
-import lpg.runtime.ILexStream;
-
-import org.spoofax.interpreter.core.IContext;
-import org.spoofax.interpreter.library.AbstractPrimitive;
-import org.spoofax.interpreter.stratego.Strategy;
-import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
-
-/**
- * Extracts all comment lines directly after the current node on the same line
- * @author Maartje de Jonge
- */
-public class OriginRightLineCommentPrimitive extends AbstractPrimitive {
-	
-	private static final String NAME = "SSL_EXT_origin_right_comment";
-	
-
-	public OriginRightLineCommentPrimitive() {
-		super(NAME, 0, 1);
-	}
-	
-	@Override
-	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
-		
-		if (tvars[0] instanceof IWrappedAstNode) {
-			IStrategoTerm result = call(env, (IWrappedAstNode) tvars[0]);
-			if (result != null) {
-				env.setCurrent(result);
-				return true;
-			}
-		}
-		return false;
-	}
-	
-	private IStrategoTerm call(IContext env, IWrappedAstNode node) {		
-		int commentStart=TextPositions.getStartPosCommentAfter(node.getNode());
-		int commentEnd=TextPositions.getEndPosCommentAfter(node.getNode());
-		if(commentStart>0){
-			ILexStream lexStream=node.getNode().getLeftIToken().getILexStream();
-			String commentText=lexStream.toString(commentStart, commentEnd-1);
-			return env.getFactory().makeTuple(
-					env.getFactory().makeInt(commentStart),
-					env.getFactory().makeInt(commentEnd),
-					env.getFactory().makeString(commentText)
-			);
-		}
-		return null;
-	}
-}



From m.dejonge at tudelft.nl  Wed Apr 28 16:42:40 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 28 Apr 2010 14:42:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20802 - MaartjeDeJonge -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201004281442.o3SEgeqr012522@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-28 14:42:40 +0000 (Wed, 28 Apr 2010)
New Revision: 20802

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20802&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java

Log:
more consistent names for primitive strategies

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-28 14:41:44 UTC (rev 20801)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-04-28 14:42:40 UTC (rev 20802)
@@ -25,7 +25,6 @@
 		add(new OriginCommentBeforePrimitive());
 		add(new OriginCommentAfterPrimitive());
 		add(new TextChangePrimitive());
-		add(new OriginPositionToLocationPrimitive());
 		add(new OriginSourceTextPrimitive());
 		add(new SelectedFromToPrimitive());
 		add(new OriginRootPrimitive());



From L.C.L.Kats at tudelft.nl  Thu Apr 29 10:04:35 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 29 Apr 2010 08:04:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20803 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans
	spoofax-imp/trunk/org.strategoxt.imp.feature
	spoofax-imp/trunk/org.strategoxt.imp.updatesite
Message-ID: <201004290804.o3T84aVV026987@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-04-29 08:04:34 +0000 (Thu, 29 Apr 2010)
New Revision: 20803

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20803&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java

Log:
Workaround for Spoofax/106: disabled support for imports in SDF's content completion for now

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java	2010-04-28 14:42:40 UTC (rev 20802)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java	2010-04-29 08:04:34 UTC (rev 20803)
@@ -254,8 +254,13 @@
         } else {
             FileHandle file = openFiles.get(fd);
             FileChannel channel = file.file.getChannel();
-            MappedByteBuffer buffer = channel.map(MapMode.READ_ONLY, 0, channel.size());
-            return FILE_CHARSET.decode(buffer).toString();
+            try {
+                MappedByteBuffer buffer = channel.map(MapMode.READ_ONLY, 0, channel.size());
+                return FILE_CHARSET.decode(buffer).toString();
+            } finally {
+                channel.close();
+                file.file.close();
+            }
         }
     }
     

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-04-28 14:42:40 UTC (rev 20802)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-04-29 08:04:34 UTC (rev 20803)
@@ -51,6 +51,7 @@
                 <targetfile/>
                 <arg value="-m"/>
                 <arg value="${sdfmodule}"/>
+                <arg value="-t"/>
                 
                 <fileset file="${include}/${sdfmodule}-Permissive.def"/>
                 <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/analysis.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/analysis.str	2010-04-28 14:42:40 UTC (rev 20802)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/analysis.str	2010-04-29 08:04:34 UTC (rev 20803)
@@ -29,12 +29,14 @@
 
   declare-globals:
     unparameterized(x) -> unparameterized(x)
+    /* DISABLED for now because of Spoofax/106 
     where
       <open-import(
         resolve-import
       , parse-file
       , declare-globals-top
       )> x
+    */
 
   declare-globals:
     parameterized(x, y) -> parameterized(x, y)

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-28 14:42:40 UTC (rev 20802)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-04-29 08:04:34 UTC (rev 20803)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.4.1"
+      version="0.4.4.4"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-28 14:42:40 UTC (rev 20802)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-04-29 08:04:34 UTC (rev 20803)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.4.1.jar" id="org.strategoxt.imp" version="0.4.4.1">
+   <feature url="features/org.strategoxt.imp_0.4.4.4.jar" id="org.strategoxt.imp" version="0.4.4.4">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From m.dejonge at tudelft.nl  Thu Apr 29 10:38:38 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 29 Apr 2010 08:38:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20804 - MaartjeDeJonge -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201004290838.o3T8ccuL027242@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-04-29 08:38:37 +0000 (Thu, 29 Apr 2010)
New Revision: 20804

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20804&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java

Log:
bugfix: 
selecteren van een sublist met dezelfde eind en begin node 
[A, B, C,A] gaf A ipv [A,B,C,A]

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-04-29 08:04:34 UTC (rev 20803)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-04-29 08:38:37 UTC (rev 20804)
@@ -2,6 +2,7 @@
 
 import static java.util.Arrays.asList;
 
+import java.util.ArrayList;
 import java.util.LinkedHashSet;
 import java.util.LinkedList;
 import java.util.List;
@@ -155,21 +156,21 @@
 		if (node1 == null) return node2;
 		if (node2 == null) return node1;
 		
-		LinkedHashSet<IStrategoAstNode> node1Ancestors = new LinkedHashSet<IStrategoAstNode>();
+		List<IStrategoAstNode> node1Ancestors = new ArrayList<IStrategoAstNode>();
 		for (IStrategoAstNode n = node1; n != null; n = n.getParent())
 			node1Ancestors.add(n);
 		
 		for (IStrategoAstNode n = node2, n2Child = node2; n != null; n2Child = n, n = n.getParent())
 			if (node1Ancestors.contains(n)) {
-				return tryCreateListCommonAncestor(n, node1Ancestors, n2Child);
+				if(node1Ancestors.get(node1Ancestors.indexOf(n))==n)
+					return tryCreateListCommonAncestor(n, node1Ancestors, n2Child);
 			}
 		
 		throw new IllegalStateException("Could not find common ancestor for nodes: " + node1 + "," + node2);
 	}
 	
-	private static IStrategoAstNode tryCreateListCommonAncestor(IStrategoAstNode commonAncestor, LinkedHashSet<IStrategoAstNode> ancestors1, IStrategoAstNode child2) {
+	private static IStrategoAstNode tryCreateListCommonAncestor(IStrategoAstNode commonAncestor, List<IStrategoAstNode> ancestors1List, IStrategoAstNode child2) {
 		if (commonAncestor != child2 && ((AstNode) commonAncestor).isList()) {
-			List<IStrategoAstNode> ancestors1List = asList(ancestors1.toArray(new IStrategoAstNode[ancestors1.size()]));
 			int i = ancestors1List.indexOf(commonAncestor);
 			if (i == 0)
 				return commonAncestor;



From R.B.Vermaas at tudelft.nl  Thu Apr 29 14:01:52 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 29 Apr 2010 12:01:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20805 - rob -
	hydra/webdsl
Message-ID: <201004291201.o3TC1qGw030078@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-04-29 12:01:52 +0000 (Thu, 29 Apr 2010)
New Revision: 20805

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20805&view=rev

Modified:
   hydra/webdsl/tests.nix

Log:
webcheck revisited

Changes:

Modified: hydra/webdsl/tests.nix
===================================================================
--- hydra/webdsl/tests.nix	2010-04-29 08:38:37 UTC (rev 20804)
+++ hydra/webdsl/tests.nix	2010-04-29 12:01:52 UTC (rev 20805)
@@ -1,5 +1,5 @@
 { nixpkgs ? ../../nixpkgs
-, webdsl
+, webdsl ? {outPath =/nix/store/9yfczn7wfj587dyczsdpxb76g9dzr7qd-webdsl-9.7pre3888;}
 }:
 let 
   pkgs = import nixpkgs { system = "i686-linux"; };
@@ -55,4 +55,61 @@
   researchr   = { researchrSrc ? { outPath = ../../researchr; rev = 1234; } }     : build "researchr" researchrSrc [];
   webdslorg   = { webdslorgSrc ? { outPath = ../../webdslorg; rev = 1234; } }     : build "webdslorg" webdslorgSrc [];
   yellowgrass = { yellowgrassSrc ? { outPath = ../../yellowgrass; rev = 1234; } } : build "yellowgrass" yellowgrassSrc ["s.d.vermolen at tudelft.nl"] ;
+
+  webcheck =
+    { webdslSrc ? {outPath = ../../webdsl; rev = 1234;}
+    }:
+    let
+      services = pkgs.fetchsvn {
+        url = https://svn.nixos.org/repos/nix/services/trunk;
+        rev = 18826;
+        sha256 = "08dblnszh22l31cx88z7767wz0y18qnb93zl3g5naiv9ahahniz1";
+      };
+      nixos = pkgs.fetchsvn {
+        url = https://svn.nixos.org/repos/nix/nixos/trunk;
+        rev = 21421;
+        sha256 = "1cw6bvxv5i72pqwlmpi5gsshawjjfdwww5sfxzz34gcs1d26g9m2";
+      };
+      
+    in
+      with import "${nixos}/lib/testing.nix" {inherit nixpkgs services; system = "i686-linux";} ;
+      runInMachineWithX {
+        drv = pkgs.stdenv.mkDerivation {
+          name = "webcheck-r${toString webdslSrc.rev}";
+          buildCommand = '' 
+            PATH=$PATH:${pkgs.ant}/bin
+            cp -Rv ${webdslSrc}/test/succeed-web succeed-web
+            ulimit -s unlimited
+
+            cd succeed-web
+            TOPDIR=`pwd`
+            FAILED=""
+            for test in `find . -name '*.app'`; do 
+              header "Running $test"
+              result=""
+              cd $TOPDIR/`dirname $test`
+              FILE=`basename $test .app`
+              export failed=""
+
+              echo "Executing 'webdsl test-web $FILE 2>&1 > $FILE.out"
+              ${webdsl}/bin/webdsl test-web $FILE 2>&1 > $FILE.out || export failed=1
+              echo "------"
+              cat $FILE.out
+              echo "------"
+              if test -z "$failed"; then
+                echo "FAILED: $test"
+                FAILED="$FAILED $test"
+                cat $FILE.out
+              fi
+            done
+            if test -z "$FAILED"; then
+              exit 0
+            else
+              exit 1
+            fi
+          '';
+        };
+      };
+
+
 }



From R.B.Vermaas at tudelft.nl  Thu Apr 29 14:08:34 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 29 Apr 2010 12:08:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20806 - rob -
	hydra/webdsl
Message-ID: <201004291208.o3TC8YkI030129@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-04-29 12:08:34 +0000 (Thu, 29 Apr 2010)
New Revision: 20806

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20806&view=rev

Modified:
   hydra/webdsl/tests.nix

Log:
use older nixos because current HEAD doesn't work due to /etc/nixos/configuration.nix missing

Changes:

Modified: hydra/webdsl/tests.nix
===================================================================
--- hydra/webdsl/tests.nix	2010-04-29 12:01:52 UTC (rev 20805)
+++ hydra/webdsl/tests.nix	2010-04-29 12:08:34 UTC (rev 20806)
@@ -67,8 +67,8 @@
       };
       nixos = pkgs.fetchsvn {
         url = https://svn.nixos.org/repos/nix/nixos/trunk;
-        rev = 21421;
-        sha256 = "1cw6bvxv5i72pqwlmpi5gsshawjjfdwww5sfxzz34gcs1d26g9m2";
+        rev = 21405;
+        sha256 = "0krq3p73r9azb5id9vz32xr3im22x1jnp62f0l5gd5vl2nmvq86r";
       };
       
     in



From R.B.Vermaas at tudelft.nl  Thu Apr 29 14:47:10 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 29 Apr 2010 12:47:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20807 - rob -
	hydra/webdsl
Message-ID: <201004291247.o3TClAkZ030394@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-04-29 12:47:10 +0000 (Thu, 29 Apr 2010)
New Revision: 20807

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20807&view=rev

Added:
   hydra/webdsl/machine.nix
Modified:
   hydra/webdsl/tests.nix

Log:
bigger disksize for machine running the tests, added firefox to the env

Changes:

Added: hydra/webdsl/machine.nix
===================================================================
--- hydra/webdsl/machine.nix	                        (rev 0)
+++ hydra/webdsl/machine.nix	2010-04-29 12:47:10 UTC (rev 20807)
@@ -0,0 +1,7 @@
+{ config, pkgs, ... }:
+{
+  virtualisation.diskSize = 1024;
+  environment.systemPackages = [ pkgs.firefox ];
+  system.copySystemConfiguration = false;
+}
+

Modified: hydra/webdsl/tests.nix
===================================================================
--- hydra/webdsl/tests.nix	2010-04-29 12:08:34 UTC (rev 20806)
+++ hydra/webdsl/tests.nix	2010-04-29 12:47:10 UTC (rev 20807)
@@ -67,13 +67,14 @@
       };
       nixos = pkgs.fetchsvn {
         url = https://svn.nixos.org/repos/nix/nixos/trunk;
-        rev = 21405;
-        sha256 = "0krq3p73r9azb5id9vz32xr3im22x1jnp62f0l5gd5vl2nmvq86r";
+        rev = 21423;
+        sha256 = "1lrsqkwrikm7fpccwscpfpcfbkq51xs8vv1gw0dvck56zpalh7d2";
       };
       
     in
       with import "${nixos}/lib/testing.nix" {inherit nixpkgs services; system = "i686-linux";} ;
       runInMachineWithX {
+        require = [ ./machine.nix ];
         drv = pkgs.stdenv.mkDerivation {
           name = "webcheck-r${toString webdslSrc.rev}";
           buildCommand = '' 



From R.B.Vermaas at tudelft.nl  Thu Apr 29 15:31:50 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 29 Apr 2010 13:31:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20808 - rob -
	hydra/webdsl
Message-ID: <201004291331.o3TDVoRr031012@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-04-29 13:31:50 +0000 (Thu, 29 Apr 2010)
New Revision: 20808

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20808&view=rev

Modified:
   hydra/webdsl/tests.nix

Log:
added ant and firefox to buildinputs of webcheck

Changes:

Modified: hydra/webdsl/tests.nix
===================================================================
--- hydra/webdsl/tests.nix	2010-04-29 12:47:10 UTC (rev 20807)
+++ hydra/webdsl/tests.nix	2010-04-29 13:31:50 UTC (rev 20808)
@@ -77,8 +77,8 @@
         require = [ ./machine.nix ];
         drv = pkgs.stdenv.mkDerivation {
           name = "webcheck-r${toString webdslSrc.rev}";
+          buildInputs = with pkgs; [ant firefox]
           buildCommand = '' 
-            PATH=$PATH:${pkgs.ant}/bin
             cp -Rv ${webdslSrc}/test/succeed-web succeed-web
             ulimit -s unlimited
 



From R.B.Vermaas at tudelft.nl  Thu Apr 29 15:32:25 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 29 Apr 2010 13:32:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20809 - rob -
	hydra/webdsl
Message-ID: <201004291332.o3TDWPhC031031@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-04-29 13:32:25 +0000 (Thu, 29 Apr 2010)
New Revision: 20809

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20809&view=rev

Modified:
   hydra/webdsl/tests.nix

Log:
typo

Changes:

Modified: hydra/webdsl/tests.nix
===================================================================
--- hydra/webdsl/tests.nix	2010-04-29 13:31:50 UTC (rev 20808)
+++ hydra/webdsl/tests.nix	2010-04-29 13:32:25 UTC (rev 20809)
@@ -77,7 +77,7 @@
         require = [ ./machine.nix ];
         drv = pkgs.stdenv.mkDerivation {
           name = "webcheck-r${toString webdslSrc.rev}";
-          buildInputs = with pkgs; [ant firefox]
+          buildInputs = with pkgs; [ant firefox];
           buildCommand = '' 
             cp -Rv ${webdslSrc}/test/succeed-web succeed-web
             ulimit -s unlimited



From R.B.Vermaas at tudelft.nl  Thu Apr 29 19:18:37 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 29 Apr 2010 17:18:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20810 - rob -
	hydra/webdsl
Message-ID: <201004291718.o3THIbgR001469@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-04-29 17:18:37 +0000 (Thu, 29 Apr 2010)
New Revision: 20810

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20810&view=rev

Modified:
   hydra/webdsl/tests.nix

Log:
disabled webcheck

Changes:

Modified: hydra/webdsl/tests.nix
===================================================================
--- hydra/webdsl/tests.nix	2010-04-29 13:32:25 UTC (rev 20809)
+++ hydra/webdsl/tests.nix	2010-04-29 17:18:37 UTC (rev 20810)
@@ -55,7 +55,7 @@
   researchr   = { researchrSrc ? { outPath = ../../researchr; rev = 1234; } }     : build "researchr" researchrSrc [];
   webdslorg   = { webdslorgSrc ? { outPath = ../../webdslorg; rev = 1234; } }     : build "webdslorg" webdslorgSrc [];
   yellowgrass = { yellowgrassSrc ? { outPath = ../../yellowgrass; rev = 1234; } } : build "yellowgrass" yellowgrassSrc ["s.d.vermolen at tudelft.nl"] ;
-
+/*
   webcheck =
     { webdslSrc ? {outPath = ../../webdsl; rev = 1234;}
     }:
@@ -111,6 +111,6 @@
           '';
         };
       };
+*/
 
-
 }



