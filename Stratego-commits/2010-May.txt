From L.C.L.Kats at tudelft.nl  Mon May  3 12:03:34 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 03 May 2010 10:03:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20811 - LennartKats -
	strc-java/trunk/java/tools/org/strategoxt/tools/lib
Message-ID: <201005031003.o43A3YqZ014600@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-03 10:03:34 +0000 (Mon, 03 May 2010)
New Revision: 20811

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20811&view=rev

Added:
   strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str
Modified:
   strc-java/trunk/java/tools/org/strategoxt/tools/lib/pp-pp-table.str

Log:
Fixed pp-pp-table, added parse-pp-table (related to Spoofax/809).

Changes:

Copied: strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str (from rev 20640, strategoxt/trunk/gpp/tools/parse-pp-table.str)
===================================================================
--- strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str	                        (rev 0)
+++ strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str	2010-05-03 10:03:34 UTC (rev 20811)
@@ -0,0 +1,13 @@
+module parse-pp-table
+imports 
+  libstratego-lib
+  libstratego-xtc strategoxt-xtc-tools
+
+strategies
+  
+  main-parse-pp-table =
+    xtc-io-wrap(
+      xtc-ensure-file => FILE(<id>);
+      parse-pptable-file
+    )
+

Modified: strc-java/trunk/java/tools/org/strategoxt/tools/lib/pp-pp-table.str
===================================================================
--- strc-java/trunk/java/tools/org/strategoxt/tools/lib/pp-pp-table.str	2010-04-29 17:18:37 UTC (rev 20810)
+++ strc-java/trunk/java/tools/org/strategoxt/tools/lib/pp-pp-table.str	2010-05-03 10:03:34 UTC (rev 20811)
@@ -8,7 +8,9 @@
 
   main-pp-pp-table =
     xtc-io-wrap(
-      pp-pp-table
+      read-from;
+      pp-pp-table;
+      print-to
     )
   
   pp-pp-table =



From L.C.L.Kats at tudelft.nl  Mon May  3 12:08:05 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 03 May 2010 10:08:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20812 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm
	spoofax/trunk/spoofax/org.spoofax.interpreter.core
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/build
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms
	strc-java/trunk/java strc-java/trunk/java/runtime/org/strategoxt
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <201005031008.o43A859X014647@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-03 10:08:05 +0000 (Mon, 03 May 2010)
New Revision: 20812

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20812&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/build.ivy.xml
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/build/ivysettings.xml
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/LoggingIOAgent.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_fputc.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_read_term_from_stream.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_baf.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_saf.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_taf.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_text.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/GuardedLChoice.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/One.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Some.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/ITermFactory.java
   strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
   strc-java/trunk/java/runtime/org/strategoxt/lang/ImportTerm.java
   strc-java/trunk/java/spoofax-libs.jar

Log:
Removed all uses of memory-mapped IO because apparently it only causes problems (should fix Spoofax/106).

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -201,6 +201,7 @@
     	((WrappedATerm)t).getATerm().writeToTextFile(ous);
     }
 
+    @Deprecated
     public void unparseToFile(IStrategoTerm t, final Writer out) throws IOException {
         ByteArrayOutputStream ous = new ByteArrayOutputStream();
         unparseToFile(t, out);


Property changes on: spoofax/trunk/spoofax/org.spoofax.interpreter.core/build/ivysettings.xml
___________________________________________________________________
Deleted: svn:mergeinfo
   - 


Property changes on: spoofax/trunk/spoofax/org.spoofax.interpreter.core/build.ivy.xml
___________________________________________________________________
Deleted: svn:mergeinfo
   - 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/IOAgent.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -10,15 +10,13 @@
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.io.OutputStream;
+import java.io.OutputStreamWriter;
 import java.io.PrintStream;
 import java.io.RandomAccessFile;
 import java.io.Reader;
+import java.io.UnsupportedEncodingException;
 import java.io.Writer;
 import java.nio.CharBuffer;
-import java.nio.MappedByteBuffer;
-import java.nio.channels.Channels;
-import java.nio.channels.FileChannel;
-import java.nio.channels.FileChannel.MapMode;
 import java.nio.charset.Charset;
 import java.util.HashMap;
 import java.util.Map;
@@ -126,6 +124,10 @@
     
     // OPENING, MANIPULATING FILES
     
+    /**
+     * Gets the writer for a file.
+     * Should not be used together with getReader() for the same file.
+     */
     public Writer getWriter(int fd) {
         if (fd == CONST_STDOUT) {
             return stdoutWriter;
@@ -136,19 +138,20 @@
             if (file.writer == null) {
                 assert file.outputStream == null;
                 try {
-                    // Clear written-to file contents
-                    if (file.file.length() != 0)
-                        file.file.setLength(0);
-                } catch (IOException e) {
-                    // Be forgiving: if this results in an exception, so will writing to it
+                    file.writer = new BufferedWriter(new OutputStreamWriter(internalGetOutputStream(fd), FILE_ENCODING));
+                } catch (UnsupportedEncodingException e) {
+                    throw new RuntimeException(e);
                 }
-                file.writer = new BufferedWriter(Channels.newWriter(file.file.getChannel(), FILE_ENCODING));
             }
             return file.writer;
         }
     }
     
-    public OutputStream getOutputStream(int fd) {
+    /**
+     * Gets the output stream for a file.
+     * Should not be used together with getWriter() for the same file.
+     */
+    public OutputStream internalGetOutputStream(int fd) {
         if (fd == CONST_STDOUT) {
             return stdout;
         } else if (fd == CONST_STDERR) {
@@ -167,6 +170,24 @@
             return file.outputStream;
         }
     }
+    
+    /**
+     * Write a single byte character to a file,
+     * trying not to allocate a new Writer object.
+     */
+    public void writeChar(int fd, int c) throws IOException {
+        if (fd == CONST_STDOUT || fd == CONST_STDERR) {
+            getWriter(fd).append((char) c);
+        } else {
+            FileHandle file = openFiles.get(fd);
+            if (file.writer == null) {
+                if (file.outputStream == null) internalGetOutputStream(fd);
+                file.outputStream.write(c);
+            } else {
+                file.writer.append((char) c);
+            }
+        }
+    }
 
     public boolean closeRandomAccessFile(int fd) throws InterpreterException {
         if (fd == CONST_STDOUT || fd == CONST_STDERR || fd == CONST_STDIN)
@@ -180,7 +201,7 @@
             if (file.outputStream != null) file.outputStream.close();
             file.file.close();
         } catch (IOException e) {
-            // Ignored
+            e.printStackTrace();
         }
         return true;
     }
@@ -189,9 +210,10 @@
         for (FileHandle file : openFiles.values()) {
             try {
                 if (file.writer != null) file.writer.close();
+                if (file.outputStream != null) file.outputStream.close();
                 file.file.close();
             } catch (IOException e) {
-                // Ignored
+                e.printStackTrace();
             }
         }
         openFiles.clear();
@@ -210,7 +232,11 @@
         return fileCounter++;
     }
 
-    public InputStream getInputStream(int fd) {
+    /**
+     * Gets the input stream for a file.
+     * Should not be used together with getReader() for the same file.
+     */
+    public InputStream internalGetInputStream(int fd) {
         if (fd == CONST_STDIN) {
             return stdin;
         } else {
@@ -221,11 +247,11 @@
         }
     }
 
-    /**
+    /* UNDONE: memory-mapped IO considered harmful (Spoofax/106)
      * Gets the file channel for a file descriptor.
      * Should only be used for reading data
      * (since inheritor classes may depend on logging writes).
-     */
+     *
     public FileChannel getInputChannel(int fd) {
         if (fd == CONST_STDIN || fd == CONST_STDOUT || fd == CONST_STDERR) {
             throw new UnsupportedOperationException();
@@ -233,35 +259,32 @@
             return openFiles.get(fd).file.getChannel();
         }
     }
+    */
     
+    /**
+     * Gets the reader for a file.
+     * Should not be used together with getInputStream() for the same file.
+     */
     public Reader getReader(int fd) {
         if (fd == CONST_STDIN)
             return stdinReader;
         FileHandle file = openFiles.get(fd);
-        if (file.reader == null)
-            file.reader = new BufferedReader(Channels.newReader(file.file.getChannel(), FILE_ENCODING));
+        try {
+            if (file.reader == null)
+                file.reader = new BufferedReader(new InputStreamReader(internalGetInputStream(fd), FILE_ENCODING));
+        } catch (UnsupportedEncodingException e) {
+            throw new RuntimeException(e);
+        }
         return file.reader;
     }
     
     public String readString(int fd) throws IOException {
-        if (fd == CONST_STDIN) {
-            char[] buffer = new char[2048];
-            StringBuilder result = new StringBuilder();
-            Reader reader = getReader(fd);
-            for (int read = 0; read != -1; read = reader.read(buffer))
-                result.append(buffer, 0, read);
-            return result.toString();
-        } else {
-            FileHandle file = openFiles.get(fd);
-            FileChannel channel = file.file.getChannel();
-            try {
-                MappedByteBuffer buffer = channel.map(MapMode.READ_ONLY, 0, channel.size());
-                return FILE_CHARSET.decode(buffer).toString();
-            } finally {
-                channel.close();
-                file.file.close();
-            }
-        }
+        char[] buffer = new char[2048];
+        StringBuilder result = new StringBuilder();
+        Reader reader = getReader(fd);
+        for (int read = 0; read != -1; read = reader.read(buffer))
+            result.append(buffer, 0, read);
+        return result.toString();
     }
     
     /**

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/LoggingIOAgent.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/LoggingIOAgent.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/LoggingIOAgent.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -3,8 +3,7 @@
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.io.OutputStream;
-import java.io.OutputStreamWriter;
-import java.io.Writer;
+import java.io.PrintStream;
 
 /**
  * An IO Agent class that logs all console output.
@@ -13,10 +12,14 @@
  */
 public class LoggingIOAgent extends IOAgent {
     
-    private final Writer stdout = new OutputStreamWriter(new LoggingOutputStream(System.out));
+    private final LoggingOutputStream stdoutLog = new LoggingOutputStream(System.out);
     
-    private final Writer stderr = new OutputStreamWriter(new LoggingOutputStream(System.err));
+    private final LoggingOutputStream stderrLog = new LoggingOutputStream(System.err);
     
+    private final PrintStream stdout = new PrintStream(stdoutLog, true);
+    
+    private final PrintStream stderr = new PrintStream(stderrLog, true);
+    
     final ByteArrayOutputStream bytes = new ByteArrayOutputStream();
     
     public String getLog() {
@@ -28,19 +31,21 @@
     }
     
     @Override
-    public Writer getWriter(int fd) {
+    public OutputStream internalGetOutputStream(int fd) {
         switch (fd) {
             case CONST_STDOUT:
+                stderrLog.stream = System.out; // might have changed
                 return stdout;
             case CONST_STDERR:
+                stderrLog.stream = System.err; // might have changed
                 return stderr;
             default:
-                return super.getWriter(fd);
+                return super.internalGetOutputStream(fd);
         }
     }
     
     private class LoggingOutputStream extends OutputStream {
-        private final OutputStream stream;
+        OutputStream stream;
         
         public LoggingOutputStream(OutputStream stream) {
             this.stream = stream;

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_copy.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -52,7 +52,7 @@
             if (Tools.isTermString(tvars[0])) {
                 in = agent.openInputStream(Tools.javaString(tvars[0]));
             } else if (Tools.isTermAppl(tvars[0]) && Tools.hasConstructor((IStrategoAppl) tvars[0], "stdin")) {
-                in = agent.getInputStream(IOAgent.CONST_STDIN);
+                in = agent.internalGetInputStream(IOAgent.CONST_STDIN);
                 closeIn = false;
             } else {
                 return false;
@@ -61,10 +61,10 @@
             if (Tools.isTermString(tvars[1])) {
                 out = agent.openFileOutputStream(Tools.javaString(tvars[1]));
             } else if (Tools.isTermAppl(tvars[1]) && Tools.hasConstructor((IStrategoAppl) tvars[1], "stdout")) {
-                out = agent.getOutputStream(IOAgent.CONST_STDOUT);
+                out = agent.internalGetOutputStream(IOAgent.CONST_STDOUT);
                 closeOut = false;
             } else if (Tools.isTermAppl(tvars[1]) && Tools.hasConstructor((IStrategoAppl) tvars[1], "stderr")) {
-                out = agent.getOutputStream(IOAgent.CONST_STDERR);
+                out = agent.internalGetOutputStream(IOAgent.CONST_STDERR);
                 closeOut = false;
             } else {
                 return false;

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_fputc.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_fputc.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_fputc.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -7,15 +7,16 @@
  */
 package org.spoofax.interpreter.library.ssl;
 
+import static org.spoofax.interpreter.core.Tools.asJavaInt;
+
 import java.io.IOException;
-import java.io.Writer;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.core.Tools;
 import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.library.IOAgent;
 import org.spoofax.interpreter.stratego.Strategy;
-import org.spoofax.interpreter.terms.IStrategoInt;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 
 public class SSL_fputc extends AbstractPrimitive {
@@ -33,10 +34,10 @@
 
         SSLLibrary or = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
         
-        Writer s = or.getIOAgent().getWriter(Tools.asJavaInt(targs[1]));
+        IOAgent agent = or.getIOAgent();
         
         try {
-            s.write(((IStrategoInt)targs[0]).intValue());
+            agent.writeChar(asJavaInt(targs[1]), asJavaInt(targs[0]));
         } catch(IOException e) {
             throw new InterpreterException(e);
         }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_read_term_from_stream.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_read_term_from_stream.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_read_term_from_stream.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -39,7 +39,7 @@
         // FileChannel channel = or.getIOAgent().getInputChannel(Tools.asJavaInt(tvars[0]));
         // ChannelPushbackInputStream reader = new ChannelPushbackInputStream(channel);
         SSLLibrary or = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
-        InputStream is = or.getIOAgent().getInputStream(Tools.asJavaInt(tvars[0]));
+        InputStream is = or.getIOAgent().internalGetInputStream(Tools.asJavaInt(tvars[0]));
         if(is == null)
             return false;
 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_baf.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_baf.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_baf.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -8,7 +8,7 @@
 package org.spoofax.interpreter.library.ssl;
 
 import java.io.IOException;
-import java.io.Writer;
+import java.io.OutputStream;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
@@ -33,12 +33,13 @@
             return false;
         
         SSLLibrary or = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
-        Writer out = or.getIOAgent().getWriter(Tools.asJavaInt(tvars[0]));
+        OutputStream out = or.getIOAgent().internalGetOutputStream(Tools.asJavaInt(tvars[0]));
         if(out == null)
             return false;
         
         try {
             env.getFactory().unparseToFile(tvars[1], out);
+            out.flush();
         } catch(IOException e) {
             throw new InterpreterException(e);
         }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_saf.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_saf.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_saf.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -8,7 +8,7 @@
 package org.spoofax.interpreter.library.ssl;
 
 import java.io.IOException;
-import java.io.Writer;
+import java.io.OutputStream;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
@@ -33,12 +33,13 @@
             return false;
         
         SSLLibrary or = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
-        Writer out = or.getIOAgent().getWriter(Tools.asJavaInt(tvars[0]));
+        OutputStream out = or.getIOAgent().internalGetOutputStream(Tools.asJavaInt(tvars[0]));
         if(out == null)
             return false;
         
         try {
             env.getFactory().unparseToFile(tvars[1], out);
+            out.flush();
         } catch(IOException e) {
             throw new InterpreterException(e);
         }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_taf.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_taf.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_taf.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -8,7 +8,7 @@
 package org.spoofax.interpreter.library.ssl;
 
 import java.io.IOException;
-import java.io.Writer;
+import java.io.OutputStream;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
@@ -30,13 +30,14 @@
 
         SSLLibrary or = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
         int fd = Tools.asJavaInt(targs[0]);
-       
-        Writer out = or.getIOAgent().getWriter(fd);
+
+        OutputStream out = or.getIOAgent().internalGetOutputStream(fd);
         if(out == null)
             return false;
         
         try {
             env.getFactory().unparseToFile(targs[1], out);
+            out.flush();
         } catch(IOException e) {
             throw new InterpreterException(e);
         }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_text.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_text.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_text.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -8,7 +8,7 @@
 package org.spoofax.interpreter.library.ssl;
 
 import java.io.IOException;
-import java.io.Writer;
+import java.io.OutputStream;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
@@ -29,14 +29,14 @@
             return false;
 
         SSLLibrary or = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
-        int fd = Tools.asJavaInt(targs[0]);
-        
-        Writer os = or.getIOAgent().getWriter(fd);
-        if(os == null)
+
+        OutputStream out = or.getIOAgent().internalGetOutputStream(Tools.asJavaInt(targs[0]));
+        if(out == null)
             return false;
         
         try {
-            env.getFactory().unparseToFile(targs[1],os);
+            env.getFactory().unparseToFile(targs[1],out);
+            out.flush();
         } catch(IOException e) {
             throw new InterpreterException(e);
         }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/GuardedLChoice.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/GuardedLChoice.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/GuardedLChoice.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -33,7 +33,7 @@
         return eval(env, 0);
     }
 
-    IConstruct eval(IContext env, final int n) throws InterpreterException {
+    private IConstruct eval(IContext env, final int n) throws InterpreterException {
     	if (n == (children.length - 1)) {
     		Strategy s = children[n].first;
     		s.getHook().push(getHook().pop());

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/One.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/One.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/One.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -45,7 +45,7 @@
         }
     }
 
-    IConstruct eval(IContext env, final int n, final IStrategoTerm[] list) throws InterpreterException
+    private IConstruct eval(IContext env, final int n, final IStrategoTerm[] list) throws InterpreterException
     {
     	final IStrategoTerm old = env.current();
     	if (n >= old.getSubtermCount()) {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Some.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Some.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Some.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -45,7 +45,7 @@
         }
     }
 
-    IConstruct eval(final IContext env, final int n, final boolean hadsome, final IStrategoTerm[] list) throws InterpreterException
+    private IConstruct eval(final IContext env, final int n, final boolean hadsome, final IStrategoTerm[] list) throws InterpreterException
     {
     	final IStrategoTerm old = env.current();
     	if (n >= old.getSubtermCount()) {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -43,7 +43,12 @@
     private IStrategoConstructor placeholderConstructor;
     
     public IStrategoTerm parseFromFile(String path) throws IOException {
-        return parseFromStream(new FileInputStream(path));
+        InputStream stream = new FileInputStream(path);
+        try {
+            return parseFromStream(stream);
+        } finally {
+            stream.close();
+        }
     }
 
     public IStrategoTerm parseFromStream(InputStream inputStream) throws IOException {
@@ -310,6 +315,7 @@
         ous.write(tp.getString().getBytes());
     }
 
+    @Deprecated
     public void unparseToFile(IStrategoTerm t, Writer out) throws IOException {
         ITermPrinter tp = new InlinePrinter();
         t.prettyPrint(tp);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/ITermFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/ITermFactory.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/ITermFactory.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -17,13 +17,20 @@
 public interface ITermFactory extends IStrategoTermBuilder {
 
     public IStrategoTerm parseFromFile(String path) throws IOException;
+    
     public IStrategoTerm parseFromStream(InputStream inputStream) throws IOException;
+    
     public IStrategoTerm parseFromString(String text);
+    
     public void unparseToFile(IStrategoTerm t, OutputStream ous) throws IOException;
+    
+    @Deprecated
     public void unparseToFile(IStrategoTerm t, Writer out) throws IOException;
 
     public IStrategoAppl replaceAppl(IStrategoConstructor constructor, IStrategoTerm[] kids, IStrategoAppl old);
+    
     public IStrategoList replaceList(IStrategoTerm[] kids, IStrategoList old);
+    
     public IStrategoTuple replaceTuple(IStrategoTerm[] kids, IStrategoTuple old);
 
 }

Modified: strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ strc-java/trunk/java/runtime/org/strategoxt/HybridInterpreter.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -20,6 +20,7 @@
 import org.spoofax.interpreter.core.UndefinedStrategyException;
 import org.spoofax.interpreter.core.VarScope;
 import org.spoofax.interpreter.library.IOperatorRegistry;
+import org.spoofax.interpreter.library.ssl.SSLLibrary;
 import org.spoofax.interpreter.stratego.SDefT;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
@@ -294,6 +295,9 @@
 	public void uninit() {
 		loadedJars = false;
 		getContext().getVarScope().clear();
+		SSLLibrary lib = SSLLibrary.instance(getContext());
+		if (lib != null)
+			lib.getIOAgent().closeAllFiles();
 	}
 	
 	/**

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/ImportTerm.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/ImportTerm.java	2010-05-03 10:03:34 UTC (rev 20811)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/ImportTerm.java	2010-05-03 10:08:05 UTC (rev 20812)
@@ -1,6 +1,7 @@
 package org.strategoxt.lang;
 
 import java.io.File;
+import java.io.IOException;
 import java.io.InputStream;
 import java.net.URL;
 import java.util.zip.ZipEntry;
@@ -52,14 +53,22 @@
 	
 	@Override
 	protected IStrategoTerm init() {
+		InputStream stream = openStream();
 		try {
-			return factory.parseFromStream(openStream());
+			return factory.parseFromStream(stream);
 		} catch (java.io.IOException e) {
 			throw new StrategoException(container.getSimpleName()
 					+ ": Could not read imported term file " + name, e);
 		} catch (RuntimeException e) {
 			throw new StrategoException(container.getSimpleName()
 					+ ": Could not read imported term file " + name, e);
+		} finally {
+			try {
+				if (stream != null)
+					stream.close();
+			} catch (IOException e) {
+				e.printStackTrace();
+			}
 		}
 	}
 	

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Mon May  3 14:44:57 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 03 May 2010 12:44:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20813 - LennartKats -
	in strc-java/trunk: java/tools/org/strategoxt/tools
	java/tools/org/strategoxt/tools/lib test
Message-ID: <201005031244.o43CivLE017378@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-03 12:44:57 +0000 (Mon, 03 May 2010)
New Revision: 20813

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20813&view=rev

Modified:
   strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str
   strc-java/trunk/java/tools/org/strategoxt/tools/tools.str
   strc-java/trunk/test/test-tools.sh

Log:


Changes:

Modified: strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str
===================================================================
--- strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str	2010-05-03 10:08:05 UTC (rev 20812)
+++ strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str	2010-05-03 12:44:57 UTC (rev 20813)
@@ -1,7 +1,7 @@
 module parse-pp-table
 imports 
   libstratego-lib
-  libstratego-xtc strategoxt-xtc-tools
+  libstratego-xtc
 
 strategies
   

Modified: strc-java/trunk/java/tools/org/strategoxt/tools/tools.str
===================================================================
--- strc-java/trunk/java/tools/org/strategoxt/tools/tools.str	2010-05-03 10:08:05 UTC (rev 20812)
+++ strc-java/trunk/java/tools/org/strategoxt/tools/tools.str	2010-05-03 12:44:57 UTC (rev 20813)
@@ -5,3 +5,4 @@
   lib/sdf2rtg
   lib/pack-sdf
   lib/ppgen
+  lib/parse-pp-table

Modified: strc-java/trunk/test/test-tools.sh
===================================================================
--- strc-java/trunk/test/test-tools.sh	2010-05-03 10:08:05 UTC (rev 20812)
+++ strc-java/trunk/test/test-tools.sh	2010-05-03 12:44:57 UTC (rev 20813)
@@ -3,3 +3,5 @@
 CLASSPATH="../java/spoofax-libs.jar:../java/bin:../java/strategoxt.jar"
 java -cp $CLASSPATH start org.strategoxt.tools.main-sdf2rtg -i strc1/Expressions.def -m Expressions | \
 java -cp $CLASSPATH start org.strategoxt.tools.main-rtg2sig --module Expressions > /dev/null
+
+java -cp $CLASSPATH start org.strategoxt.tools.main-pack-sdf -i strc1/Expressions.sdf > /dev/null



From L.C.L.Kats at tudelft.nl  Mon May  3 15:41:51 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 03 May 2010 13:41:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20814 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override
Message-ID: <201005031341.o43DfpH6018535@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-03 13:41:51 +0000 (Mon, 03 May 2010)
New Revision: 20814

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20814&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser.str

Log:


Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str	2010-05-03 12:44:57 UTC (rev 20813)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser-compat.str	2010-05-03 13:41:51 UTC (rev 20814)
@@ -13,8 +13,6 @@
 
 strategies // parsing and parse tables
 
-  // TODO: new "jsglr enable recovery" strategy
-
   /**
    * @type SerializedParseTable -> ParseTable
    */
@@ -22,7 +20,7 @@
     jsglr-open-parsetable
   
   override close-parse-table =
-    jsglr-open-parsetable
+    jsglr-close-parsetable
 
   override parse-file(on-open-error, on-parse-error | tbl, start-symbol, path) =
       (<fopen> (<id>, "r") => stream <+ on-open-error; fail)

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser.str	2010-05-03 12:44:57 UTC (rev 20813)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/jsglr-parser.str	2010-05-03 13:41:51 UTC (rev 20814)
@@ -11,6 +11,12 @@
     
 strategies
 
+  // TODO: new "jsglr enable recovery" strategy
+  
+  jsglr-enable-recovery = fatal-err-msg(|"Not implemented")
+  
+  jsglr-disable-recovery = fatal-err-msg(|"Not implemented")
+
   /**
    * @type SerializedParseTable -> ParseTable
    */



From L.C.L.Kats at tudelft.nl  Mon May  3 15:42:05 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 03 May 2010 13:42:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20815 - LennartKats -
	in spoofax/trunk/spoofax:
	org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
	org.spoofax.jsglr/src/org/spoofax/jsglr
Message-ID: <201005031342.o43Dg5nC018538@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-03 13:42:05 +0000 (Mon, 03 May 2010)
New Revision: 20815

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20815&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/ImportTerm.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java

Log:


Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/ImportTerm.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/ImportTerm.java	2010-05-03 13:41:51 UTC (rev 20814)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/ImportTerm.java	2010-05-03 13:42:05 UTC (rev 20815)
@@ -38,9 +38,9 @@
                 input = io.openInputStream(path, true);
                 result = env.getFactory().parseFromStream(input);
             } catch (IOException e) {
-                throw new InterpreterException("import-term failed", e);
+                throw new InterpreterException("import-term failed for " + path, e);
             } catch (RuntimeException e) {
-                throw new InterpreterException("import-term failed", e);
+                throw new InterpreterException("import-term failed for " + path, e);
             } finally {
                 try {
                     if (input != null) input.close();

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java	2010-05-03 13:41:51 UTC (rev 20814)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/ParseTable.java	2010-05-03 13:42:05 UTC (rev 20815)
@@ -97,6 +97,8 @@
 
     private boolean parse(ATerm pt) throws InvalidParseTableException {
         int version = Term.intAt(pt, 0);
+        if (pt.getChildCount() == 1) // Seen with ParseTable(0)
+          throw new InvalidParseTableException("Invalid parse table (possibly wrong start symbol specified)\n" + pt);
         startState = Term.intAt(pt, 1);
         ATermList labelsTerm = Term.listAt(pt, 2);
         ATermAppl statesTerm = Term.applAt(pt, 3);



From L.C.L.Kats at tudelft.nl  Mon May  3 16:05:37 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 03 May 2010 14:05:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20816 - LennartKats -
	strc-java/trunk/java/tools/org/strategoxt/tools/lib
Message-ID: <201005031405.o43E5blk018895@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-03 14:05:37 +0000 (Mon, 03 May 2010)
New Revision: 20816

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20816&view=rev

Modified:
   strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str

Log:


Changes:

Modified: strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str
===================================================================
--- strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str	2010-05-03 13:42:05 UTC (rev 20815)
+++ strc-java/trunk/java/tools/org/strategoxt/tools/lib/parse-pp-table.str	2010-05-03 14:05:37 UTC (rev 20816)
@@ -8,6 +8,7 @@
   main-parse-pp-table =
     xtc-io-wrap(
       xtc-ensure-file => FILE(<id>);
-      parse-pptable-file
+      parse-pptable-file;
+      write-to
     )
 



From L.C.L.Kats at tudelft.nl  Mon May  3 16:06:39 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 03 May 2010 14:06:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20817 - LennartKats -
 in spoofax-imp/trunk: . org.strategoxt.imp.editors.aster
 org.strategoxt.imp.editors.aterm org.strategoxt.imp.editors.editorservice
 org.strategoxt.imp.editors.pp
 org.strategoxt.imp.editors.pp/.externalToolBuilders
 org.strategoxt.imp.editors.pp/META-INF org.strategoxt.imp.editors.pp/syntax
 org.strategoxt.imp.editors.pp/trans org.strategoxt.imp.editors.sdf
 org.strategoxt.imp.editors.sdf/lib org.strategoxt.imp.editors.sdf/trans
 org.strategoxt.imp.editors.stratego org.strategoxt.imp.editors.stratego/lib
 org.strategoxt.imp.editors.stratego/trans org.strategoxt.imp.feature
 org.strategoxt.imp.generator/src/sdf2imp
 org.strategoxt.imp.generator/src/sdf2imp/project
 org.strategoxt.imp.generator/src/sdf2imp/services
 org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building
 org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
 org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
 org.strategoxt! .imp.runtime/src/org/strategoxt/imp/runtime/services
 org.strategoxt.imp.updatesite
Message-ID: <201005031406.o43E6d0k018912@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-03 14:06:37 +0000 (Mon, 03 May 2010)
New Revision: 20817

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20817&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.externalToolBuilders/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.externalToolBuilders/BoxPP build.main.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.project
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/META-INF/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/syntax/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/syntax/BoxPP.def
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/boxpp.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-pp-table.str
Modified:
   spoofax-imp/trunk/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/main.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-packed-descriptor-file.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/ast-form-heuristic.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/services/create-completions-descriptor.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/building/DynamicDescriptorBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AnnotationHoverHelper.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
- Spoofax projects now create a syntax/lang.pp and syntax/lang.generated.pp file
- Added editor for pp files
- IO related fixes (Spoofax/106)
- Slightly better error if some editor service descriptor import failed
  or wrong start symbol was specified
- No more silly term-based annotation hovers (Spoofax/108)


Changes (first 1000 lines of the diffs):

Modified: spoofax-imp/trunk/Makefile
===================================================================
--- spoofax-imp/trunk/Makefile	2010-05-03 14:05:37 UTC (rev 20816)
+++ spoofax-imp/trunk/Makefile	2010-05-03 14:06:37 UTC (rev 20817)
@@ -4,7 +4,8 @@
       org.strategoxt.imp.editors.sdf.ant \
       org.strategoxt.imp.editors.stratego.ant \
       org.strategoxt.imp.editors.aterm.ant \
-      org.strategoxt.imp.editors.aster.ant
+      org.strategoxt.imp.editors.aster.ant \
+      org.strategoxt.imp.editors.pp.ant
 
 org.strategoxt.imp.generator/lib/sdf2imp.jar : .PHONY
 	$(MAKE) -C org.strategoxt.imp.generator all

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-03 14:05:37 UTC (rev 20816)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-03 14:06:37 UTC (rev 20817)
@@ -2,7 +2,7 @@
 
 <project name="build.generated">
     
-        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,stratego.aster,stratego.ctree,sdf2imp"/>
+        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -33,8 +33,21 @@
             </java>
         </target>
         
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+        </target>
+        
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
-            <echo message="Property eclipse.running is not set; assuming Eclipse is not running"/>
             <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
                 <arg value="-i"/>
                 <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
@@ -96,7 +109,7 @@
         </target>
     
         <target name="pack-sdf.helper" unless="pack-sdf.available">
-            <java classname="start" failonerror="true">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-pack-sdf"/>
                 <arg value="-i"/>
                 <arg value="${syntax}/${sdfmodule}.sdf"/>
@@ -128,7 +141,7 @@
         </target>
     
         <target name="rtg2sig.helper" unless="rtg2sig.available">
-            <java classname="start" failonerror="true">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-rtg2sig"/>
                 <arg value="-i"/>
                 <arg value="${include}/${sdfmodule}.rtg"/>
@@ -149,7 +162,7 @@
         </target>
     
         <target name="sdf2rtg.helper" unless="sdf2rtg.available">
-            <java classname="start" failonerror="true">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-sdf2rtg"/>
                 <arg value="-i"/>
                 <arg value="${include}/${sdfmodule}.def"/>
@@ -166,32 +179,52 @@
         <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
-                <targetfileset file="${include}/${sdfmodule}.pp"/>
-                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
             </dependset>
-            <available file="${include}/${sdfmodule}.pp" property="ppgen.available"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
             <antcall target="ppgen.helper"/>
         </target>
     
         <target name="ppgen.helper" unless="ppgen.available">
             <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
-            <java classname="start" failonerror="false">
+            <java classname="run" failonerror="false">
                 <arg value="org.strategoxt.tools.main-ppgen"/>
                 <arg value="-i"/>
                 <arg value="${include}/${sdfmodule}.def"/>
                 <arg value="-o"/>
-                <arg value="${include}/${sdfmodule}.pp.af"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
                 <arg value="-t"/>
             </java>
-            <java classname="start" failonerror="false">
-                <arg value="org.strategoxt.tools.pp-pp-table"/>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
                 <arg value="-i"/>
-                <arg value="${include}/${sdfmodule}.pp.af"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
                 <arg value="-o"/>
-                <arg value="${include}/${sdfmodule}.pp"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
             </java>
         </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <antcall target="pppack.helper"/>
+        </target>
     
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-03 14:05:37 UTC (rev 20816)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-03 14:06:37 UTC (rev 20817)
@@ -2,7 +2,7 @@
 
 <project name="build.generated">
     
-        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,stratego.aster,stratego.ctree,sdf2imp"/>
+        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -33,8 +33,21 @@
             </java>
         </target>
         
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+        </target>
+        
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
-            <echo message="Property eclipse.running is not set; assuming Eclipse is not running"/>
             <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
                 <arg value="-i"/>
                 <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
@@ -96,7 +109,7 @@
         </target>
     
         <target name="pack-sdf.helper" unless="pack-sdf.available">
-            <java classname="start" failonerror="true">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-pack-sdf"/>
                 <arg value="-i"/>
                 <arg value="${syntax}/${sdfmodule}.sdf"/>
@@ -128,7 +141,7 @@
         </target>
     
         <target name="rtg2sig.helper" unless="rtg2sig.available">
-            <java classname="start" failonerror="true">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-rtg2sig"/>
                 <arg value="-i"/>
                 <arg value="${include}/${sdfmodule}.rtg"/>
@@ -149,7 +162,7 @@
         </target>
     
         <target name="sdf2rtg.helper" unless="sdf2rtg.available">
-            <java classname="start" failonerror="true">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-sdf2rtg"/>
                 <arg value="-i"/>
                 <arg value="${include}/${sdfmodule}.def"/>
@@ -166,32 +179,52 @@
         <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
-                <targetfileset file="${include}/${sdfmodule}.pp"/>
-                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
             </dependset>
-            <available file="${include}/${sdfmodule}.pp" property="ppgen.available"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
             <antcall target="ppgen.helper"/>
         </target>
     
         <target name="ppgen.helper" unless="ppgen.available">
             <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
-            <java classname="start" failonerror="false">
+            <java classname="run" failonerror="false">
                 <arg value="org.strategoxt.tools.main-ppgen"/>
                 <arg value="-i"/>
                 <arg value="${include}/${sdfmodule}.def"/>
                 <arg value="-o"/>
-                <arg value="${include}/${sdfmodule}.pp.af"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
                 <arg value="-t"/>
             </java>
-            <java classname="start" failonerror="false">
-                <arg value="org.strategoxt.tools.pp-pp-table"/>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
                 <arg value="-i"/>
-                <arg value="${include}/${sdfmodule}.pp.af"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
                 <arg value="-o"/>
-                <arg value="${include}/${sdfmodule}.pp"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
             </java>
         </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <antcall target="pppack.helper"/>
+        </target>
     
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-03 14:05:37 UTC (rev 20816)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-03 14:06:37 UTC (rev 20817)
@@ -2,7 +2,7 @@
 
 <project name="build.generated">
     
-        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,stratego.aster,stratego.ctree,sdf2imp"/>
+        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -33,8 +33,21 @@
             </java>
         </target>
         
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+        </target>
+        
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
-            <echo message="Property eclipse.running is not set; assuming Eclipse is not running"/>
             <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
                 <arg value="-i"/>
                 <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
@@ -96,7 +109,7 @@
         </target>
     
         <target name="pack-sdf.helper" unless="pack-sdf.available">
-            <java classname="start" failonerror="true">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-pack-sdf"/>
                 <arg value="-i"/>
                 <arg value="${syntax}/${sdfmodule}.sdf"/>
@@ -128,7 +141,7 @@
         </target>
     
         <target name="rtg2sig.helper" unless="rtg2sig.available">
-            <java classname="start" failonerror="true">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-rtg2sig"/>
                 <arg value="-i"/>
                 <arg value="${include}/${sdfmodule}.rtg"/>
@@ -149,7 +162,7 @@
         </target>
     
         <target name="sdf2rtg.helper" unless="sdf2rtg.available">
-            <java classname="start" failonerror="true">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-sdf2rtg"/>
                 <arg value="-i"/>
                 <arg value="${include}/${sdfmodule}.def"/>
@@ -166,32 +179,52 @@
         <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
-                <targetfileset file="${include}/${sdfmodule}.pp"/>
-                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
             </dependset>
-            <available file="${include}/${sdfmodule}.pp" property="ppgen.available"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
             <antcall target="ppgen.helper"/>
         </target>
     
         <target name="ppgen.helper" unless="ppgen.available">
             <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
-            <java classname="start" failonerror="false">
+            <java classname="run" failonerror="false">
                 <arg value="org.strategoxt.tools.main-ppgen"/>
                 <arg value="-i"/>
                 <arg value="${include}/${sdfmodule}.def"/>
                 <arg value="-o"/>
-                <arg value="${include}/${sdfmodule}.pp.af"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
                 <arg value="-t"/>
             </java>
-            <java classname="start" failonerror="false">
-                <arg value="org.strategoxt.tools.pp-pp-table"/>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
                 <arg value="-i"/>
-                <arg value="${include}/${sdfmodule}.pp.af"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
                 <arg value="-o"/>
-                <arg value="${include}/${sdfmodule}.pp"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
             </java>
         </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <antcall target="pppack.helper"/>
+        </target>
     
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.classpath
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.classpath	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.classpath	2010-05-03 14:06:37 UTC (rev 20817)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="lib" path="utils/strategoxt.jar"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.externalToolBuilders/BoxPP build.main.xml.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.externalToolBuilders/BoxPP build.main.xml.launch	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.externalToolBuilders/BoxPP build.main.xml.launch	2010-05-03 14:06:37 UTC (rev 20817)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; id=&quot;1260698330169_15&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.pp/editor/BoxPP-Builders.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.pp/editor/BoxPP-Colorer.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.pp/editor/BoxPP-Folding.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item f!
 actoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.pp/editor/BoxPP-Outliner.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.pp/editor/BoxPP-References.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.pp/editor/BoxPP-Syntax.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.pp/lib/editor-common.str&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.pp/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/or!
 g.strategoxt.imp.editors.pp/build.generated.xml&quot; type=&quot;1&q
;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.pp/utils&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
+<listEntry value="/org.strategoxt.imp.editors.pp/build.main.xml"/>
+</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
+<listEntry value="1"/>
+</listAttribute>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.editors.pp"/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.pp/build.main.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.editors.pp}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.project
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.project	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/.project	2010-05-03 14:06:37 UTC (rev 20817)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>org.strategoxt.imp.editors.pp</name>
+      <comment></comment>
+      <buildSpec>
+		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&lt;project&gt;/.externalToolBuilders/BoxPP build.main.xml.launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/META-INF/MANIFEST.MF	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/META-INF/MANIFEST.MF	2010-05-03 14:06:37 UTC (rev 20817)
@@ -0,0 +1,20 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: BoxPP Plug-in
+Bundle-SymbolicName: org.strategoxt.imp.editors.pp; singleton:=true
+Bundle-Version: 0.1.0.qualifier
+Bundle-Activator: org.strategoxt.imp.editors.pp.Activator
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+  org.eclipse.core.resources,
+  org.eclipse.imp.runtime,
+  org.eclipse.ui,
+  lpg.runtime,
+  org.eclipse.jface.text,
+  org.eclipse.ui.editors,
+  org.eclipse.ui.workbench.texteditor,
+  org.strategoxt.imp.runtime,
+  org.spoofax.aterm,
+  org.spoofax.jsglr
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Export-Package: org.strategoxt.imp.editors.pp

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.main.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.main.xml	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.main.xml	2010-05-03 14:06:37 UTC (rev 20817)
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="BoxPP" default="all">
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="BoxPP"/>
+        <property name="esvmodule" value="BoxPP"/>
+        <property name="strmodule" value="boxpp"/>
+    
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
+        <property name="syntax" location="syntax"/>
+        <property name="include" location="include"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- Imports -->
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args" value="--library
+                        -I &quot;${trans}&quot; -I &quot;${basedir}&quot;
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+        
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        
+        <!-- External .def and .jar locations
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
+        -->
+    
+        <!-- Environment configuration for command-line builds -->
+        <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+            <isset property="eclipse.spoofaximp.nativeprefix"/>
+        </condition>
+        <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+    
+        <import file="build.generated.xml"/>
+    
+        <!-- Main target -->
+        <target name="all" depends="spoofaximp.default"/>
+    </project>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.properties
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.properties	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.properties	2010-05-03 14:06:37 UTC (rev 20817)
@@ -0,0 +1,8 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               .,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               .

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/plugin.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/plugin.xml	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/plugin.xml	2010-05-03 14:06:37 UTC (rev 20817)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="pp" description="BoxPP" language="BoxPP" derivedFrom="DynamicRoot" validator="org.strategoxt.imp.editors.pp.BoxPPValidator" validatorClass="org.strategoxt.imp.editors.pp.BoxPPValidator"></language>
+       </extension>
+       <extension id="org.strategoxt.imp.editors.pp.parser" name="BoxPP Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="org.strategoxt.imp.editors.pp.BoxPPParseController" language="BoxPP">
+          </parser>
+       </extension>    
+    </plugin>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/syntax/BoxPP.def
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/syntax/BoxPP.def	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/syntax/BoxPP.def	2010-05-03 14:06:37 UTC (rev 20817)
@@ -0,0 +1,283 @@
+definition
+module pp-table-IntCon
+
+exports
+  sorts NatCon
+  lexical syntax
+    [0-9]+ -> NatCon
+
+
+module Box-Disambiguation
+exports
+  context-free restrictions
+    LAYOUT? -/- [\ \t\n\%]
+
+module Box-Layout
+exports
+  lexical syntax
+    "%%" ~[\n]* "\n" -> LAYOUT
+    [\ \t\n\r] -> LAYOUT
+
+  context-free restrictions
+    LAYOUT? -/- [\ \t\n\13]
+
+module Box-Operators
+exports
+
+  %% Deprecated, but used by Transformers.
+  context-free syntax
+    BOX* -> BOX-LIST
+
+  exports
+      sorts SPACE-SYMBOL S-OPTION
+
+      context-free syntax
+         SPACE-SYMBOL "=" NatCon -> S-OPTION     {cons("SOpt")}
+         SPACE-SYMBOL "=" BOX    -> S-OPTION     {cons("SOptB")}
+
+%% Below all supported space options are defined. The \textsf{hs} option is
+%% used to define the horizontal layout between boxes. The \textsf{vs}
+%% option defines the amount of vertical layout between boxes (the number of
+%% newlines between boxes in a vertical context). The \textsf{is} option
+%% defines indentation between boxes within a vertical context. Not every
+%% combination of space option and BOX operator makes sense. E.g.\ the
+%% modification of the vertical offset in combination of the \textsf{H}
+%% operator does not make any sense.
+
+      context-free syntax
+         "vs"                    -> SPACE-SYMBOL {cons("VS")}
+         "hs"                    -> SPACE-SYMBOL {cons("HS")}
+         "is"                    -> SPACE-SYMBOL {cons("IS")}
+
+%%\subsection{Positional BOX Operators}
+%% Smaller boxes can be composed to form new boxes using positional BOX
+%% operators that specify the relative ordering of sub boxes.
+%%
+%% The \textsf{H} operator is used to format a list of boxes horizontally.
+%% The operator only supports the \textsf{hs} space option to control the
+%% amount of horizontal layout between its sub-boxes. The \textsf{V}
+%% operator is used to format a list of boxes vertically. The operator
+%% supports the \textsf{vs} and \textsf{is} space options to control the
+%% amount of vertical layout and the amount of indentation between its
+%% sub-boxes, respectively. The \textsf{HV} operator is used to format a
+%% list of boxes horizontally \emph{or} vertically, depending on the
+%% available width. The operator calculates an optimal combination of
+%% \textsf{H} and \textsf{V} operators in such a way that the number of
+%% lines occupied is minimized. Because the \textsf{HV} is a combination of
+%% the \textsf{H} and \textsf{V} operators, it supports all space
+%% options of these operators (\textsf{hs}, \textsf{vs}, and \textsf{is}).
+
+   exports
+      context-free syntax
+         "H" S-OPTION*  "[" BOX* "]"  -> BOX {cons("H")}
+         "V" S-OPTION*  "[" BOX* "]"  -> BOX {cons("V")}
+         "HV" S-OPTION* "[" BOX* "]" -> BOX {cons("HV")}
+
+%% The \textsf{ALT} operator is used to choose between two alternative BOX
+%% expressions depending on the available width. When its first argument
+%% fits on the current line, that BOX expression is used. Otherwise, the
+%% \textsf{ALT} operator chooses the second alternative. No space options
+%% are supported by this operator.
+
+   exports
+      context-free syntax
+         "ALT" "[" BOX BOX "]" -> BOX {cons("ALT")}
+
+%% Alignments are implemented by means of two BOX operators: \textsf{A} and
+%% \textsf{R}. The arguments of the \textsf{A} operator are \textsf{R}
+%% boxes. Each \textsf{R} BOX represents a row, each element of an
+%% \textsf{R} BOX represents an entry in the alignment. The number of
+%% arguments of an
+%% \textsf{R} BOX may not exceed the number of columns of the alignment. For
+%% each column the user can specify whether the alignment should be left,
+%% right, or centered. The number of alignment indications should be equal
+%% to the number of columns. Each alignment indication can be extended with
+%% space options, specifying the horizontal layout between columns. The
+%% \textsf{A} operator supports the \textsf{vs} space option which defines
+%% the vertical layout between individual rows.
+%%
+%% \textsf{R} boxes occurring outside an alignment are formatted as
+%% \text{HV} operator. This behavior enables the use of an alternative
+%% formatting (not based on the \textsf{A} operator) of alignments within an
+%% \textsf{ALT} operator. The \textsf{R} operator therefore supports all
+%% space options of the \textsf{HV} operator.
+
+   exports
+      sorts A-OPTION A-OPTIONS
+
+      context-free syntax
+         "A" A-OPTIONS S-OPTION* "[" BOX* "]" -> BOX       {cons("A")}
+         "R" S-OPTION* "[" BOX* "]"           -> BOX       {cons("R")}
+
+%% Justification of columns and horizontal layout between columns can be
+%% specified using A-OPTIONS. An A-OPTION is composed of an alignment
+%% indicator (\textsf{l} for left, \textsf{r} for right, and \textsf{c} for
+%% centered alignment), and space options (only the \textsf{hs} option is
+%% supported).
+
+         "l" S-OPTION*                            -> A-OPTION  {cons("AL")}
+         "c" S-OPTION*                            -> A-OPTION  {cons("AC")}
+         "r" S-OPTION*                            -> A-OPTION  {cons("AR")}
+         "(" {A-OPTION ","}* ")"                  -> A-OPTIONS {cons("AOPTIONS")}
+
+%%\subsection{Non-Positional BOX Operators}
+%%
+%% There are four different types of non-positional BOX operators: font
+%% operators to change the textual appearance of BOX expressions, cross
+%% reference operators to create links between boxes, the comment operator
+%% to indicate that a BOX expression contains comments, and the line
+%% operator to draw lines of characters of arbitrary length.
+%%
+%%
+%% BOX font operators are used to change the textual appearance of the
+%% argument BOX expression. Fonts can be characterized by the parameters
+%% font name (\textsf{fn}), font family (\textsf{fm}), font series
+%% (\textsf{se}), font shape (\textsf{sh}), font size (\textsf{sz}), and
+%% font color (\textsf{cl}). The most general font operator is \textsf{F}.
+%% By means of font parameters the desired font can be controlled.
+
+   exports
+      sorts FID FONT-PARAM F-OPTION FONT-OPERATOR
+
+      lexical syntax
+         [A-Za-z]+ -> FID
+
+      context-free syntax
+         FONT-PARAM "=" NatCon     -> F-OPTION      {cons("FNAT")}
+         FONT-PARAM "=" FID        -> F-OPTION      {cons("FFID")}
+
+      context-free syntax
+         "F" F-OPTION*             -> FONT-OPERATOR {cons("F")}
+         FONT-OPERATOR "[" BOX "]" -> BOX           {cons("FBOX")}
+         "fn"                      -> FONT-PARAM    {cons("FN")}
+         "fm"                      -> FONT-PARAM    {cons("FM")}
+         "se"                      -> FONT-PARAM    {cons("SE")}
+         "sh"                      -> FONT-PARAM    {cons("SH")}
+         "sz"                      -> FONT-PARAM    {cons("SZ")}
+         "cl"                      -> FONT-PARAM    {cons("CL")}
+
+%% By using the \textsf{F} font operator, fonts are defined statically.
+%% BOX also support fonts to be defined dynamically using special
+%% font operators.  These operators are used to format specific language
+%% constructs like keywords and variables. The mapping from these
+%% operators to fonts is deferred to the back-ends.
+
+   exports
+      context-free syntax
+         "KW"   -> FONT-OPERATOR {cons("KW")}
+         "VAR"  -> FONT-OPERATOR {cons("VAR")}
+         "NUM"  -> FONT-OPERATOR {cons("NUM")}
+         "MATH" -> FONT-OPERATOR {cons("MATH")}
+
+%% The \textsf{LBL} operator is used to label BOX terms. A labeled BOX term
+%% can be refered to using the \textsf{REF} operator.  The first argument of
+%% the \textsf{LBL} and \textsf{REF} operators denote the name of the label.
+%% The second argument of the \textsf{LBL} operator denotes the BOX term to
+%% label. The second argument of the \textsf{REF} operator denotes the BOX
+%% containing the reference. Both operators do not support any space
+%% options.
+
+   exports
+      context-free syntax
+         "LBL" "[" BoxLiteral BOX "]" -> BOX {cons("LBL")}
+         "REF" "[" BoxLiteral BOX "]" -> BOX {cons("REF")}
+
+%% Comments can be formatted using the \textsf{C} operator. The operator
+%% supports the \textsf{is} space option to denote the indentation level of
+%% comments.
+
+   exports
+      context-free syntax
+         "C" S-OPTION* "[" BOX* "]" -> BOX {cons("C")}
+
+%% The \textsf{L} operator  is used to construct horizontal bars of fixed
+%% \emph{or} variable width. A bar of fixed width can be constructed by
+%% specifying its width as a fixed number. A bar of variable width can be
+%% constructed by specifying a BOX expressions as width parameter. The
+%% second argument of the \textsf{L} operator specifies the symbol of which
+%% the bar should be constructed. The \textsf{L} operator does not support
+%% any space options.
+
+   exports
+      context-free syntax
+         "L" "[" BOX BOX "]"    -> BOX {cons("L")}
+         "L" "[" NatCon BOX "]" -> BOX {cons("LNAT")}
+
+module Box-Literal
+exports
+  sorts BoxLiteral
+  lexical syntax
+    "\\" ~[] -> AlphaNumericalEscChar {avoid}
+    "\\" [01] [0-9] [0-9] -> DecimalEscChar
+    "\\" "2" [0-4] [0-9]  -> DecimalEscChar
+    "\\" "2" "5" [0-5]    -> DecimalEscChar
+
+    AlphaNumericalEscChar -> EscChar
+    DecimalEscChar        -> EscChar
+
+    ~[\0-\31\"\\] \/ [\t\n] -> L-Char
+    EscChar                 -> L-Char
+
+    "\"" L-Char* "\""             -> QLiteral
+    [A-Za-z\-\_] [A-Za-z0-9\-\_]* -> UQLiteral
+
+    QLiteral  -> Literal
+    UQLiteral -> Literal
+
+    QLiteral -> BoxLiteral
+
+  sorts NatCon
+  lexical syntax
+    [0-9]+ -> NatCon
+
+
+module Box-Base
+   exports
+      sorts BOX
+
+module Box-Atoms
+   exports
+      imports Box-Base Box-Literal
+
+   exports
+      context-free syntax
+         BoxLiteral            -> BOX {cons("S")}
+
+module Box
+  hiddens
+    context-free start-symbols BOX
+  exports
+    imports Box-Atoms Box-Operators Box-Layout Box-Disambiguation
+
+module pp-table-PlaceHolder
+imports
+  Box
+  pp-table-IntCon
+
+exports
+  context-free syntax
+    "_" NatCon -> BOX {cons("Arg")}
+    "_" NatCon "." NatCon -> BOX {cons("Arg2")}
+
+module BoxPP
+imports pp-table-PlaceHolder pp-table-IntCon
+exports
+  context-free start-symbols PP-Table
+  sorts PP-Entry PP-Table Path Selector
+  context-free syntax
+    "[" {PP-Entry ","}* "]" -> PP-Table {cons("PP-Table")}
+
+    Path "--" BOX* -> PP-Entry {cons("PP-Entry")}
+
+    ConsName                     -> Path {cons("Path1")}
+    ConsName "." {Selector "."}+ -> Path {cons("Path")}
+
+    NatCon ":" UQLiteral -> Selector {cons("selector")}
+
+  sorts ConsName
+  lexical syntax
+    ~[\ \t\n\13\.]+   -> ConsName
+    "\"" ~[\"]+ "\""  -> ConsName
+
+  context-free restrictions
+    ConsName -/- ~[\ \t\n\13\.]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/boxpp.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/boxpp.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/boxpp.str	2010-05-03 14:06:37 UTC (rev 20817)
@@ -0,0 +1,59 @@
+module boxpp
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/BoxPP
+  lib/editor-common.generated
+  check
+  generate
+
+rules // Main editor interface (defined by editor/BoxPP-Builders and -References.esv)
+  
+  // Analyzes the current program, returning a tuple with errors, warnings, and notes;
+  // each a list of (term, message) tuples or simply (message) terms.
+  editor-analyze:
+    (ast, path, project-path) -> (errors, warnings, notes)
+    with
+      editor-init;
+      analyze;
+      errors   := <collect-all(constraint-error, conc)> ast;
+      warnings := <collect-all(constraint-warning, conc)> ast;
+      notes    := <collect-all(constraint-note, conc)> ast
+  
+  // Transforms a selection to Java
+  generate-java:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"java")> path;
+      result   := <to-java> selected
+  
+  // Prints the abstract syntax ATerm of a selection.
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected // we just return the input term
+  
+  // Resolves a reference when the user control-clicks or presses F3 in the editor.
+  // Only succeeds for nodes of the form Type(_) for which GetEntity is defined.
+  editor-resolve:
+    (node, position, ast, path, project-path) -> target
+    where
+      <debug(!"Resolve: ")> node; 
+      Type(type) := node; 
+      target     := <GetEntity> type
+
+  // Returns "hover help" information for a particular node in the editor.
+  // For references, this rule is invoked using the resolved term.
+  editor-hover:
+    (target, position, ast, path, project-path) -> $[Hover help: [<write-to-string> target]]
+
+  // Completes an identifier when the user presses control-space
+  // (the completion identifier in the AST provides additional context information)
+  editor-complete:
+    (Type(COMPLETION(prefix)), position, ast, path, project-path) ->
+    ["String", "Int" | proposals]
+    where
+      proposals := <all-keys-GetEntity>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/check.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/check.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/trans/check.str	2010-05-03 14:06:37 UTC (rev 20817)
@@ -0,0 +1,51 @@
+module check
+
+imports
+  libstratego-lib
+  include/BoxPP
+  lib/editor-common.generated
+
+rules
+
+  // Analysis: does a topdown traversal of the tree,
+  // and tries to apply the record-entity rule.
+  analyze:
+    t -> t
+    with
+      <topdown(try(record-entity))> t
+
+  // Records the definition of an entity in a dynamic rule GetEntity.
+  record-entity:
+    Entity(x, body) -> Entity(x, body)
+    with
+      // For a name 'x', GetEntity will return the original 'x' tree node
+      rules(
+        GetEntity :+ x -> x
+      )
+rules
+    
+  // Reports an error if a property type is undefined.
+  // This error is reported on the type name 'type'.
+  constraint-error:
+    Property(x, Type(type)) -> (type, $[Type [type] is not defined])
+    where
+      not(!type => "String"); // String and Int are built-in types
+      not(!type => "Int");
+      not(<GetEntity> type) // no entity for this type
+  
+  // Reports an error if an entity is defined more than once.
+  // This constraint is implemented by testing if the "bag" of
+  // all entities x is not a singleton list.
+  constraint-error:
+    Entity(x, _) -> (x, $[Duplicate entity name])
+    where
+      not(<bagof-GetEntity> x => [_])
+  
+  constraint-warning:
+    Entity(x, _) -> (x, $[Entity names must start with a capital])
+    where
+      not(<explode-string; Hd; is-upper> x)

(924 diff lines omitted)


From L.C.L.Kats at tudelft.nl  Mon May  3 17:38:41 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 03 May 2010 15:38:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20818 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.sdf/trans
	org.strategoxt.imp.feature org.strategoxt.imp.updatesite
Message-ID: <201005031538.o43FcfoU020158@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-03 15:38:41 +0000 (Mon, 03 May 2010)
New Revision: 20818

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20818&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Spoofax/113: Report warnings for known SDF constructs that create a bad AST

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml	2010-05-03 14:06:37 UTC (rev 20817)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml	2010-05-03 15:38:41 UTC (rev 20818)
@@ -20,7 +20,8 @@
         <property name="build.sdf.imports" value=""/>
         <property name="build.stratego.args" value="--library
                         -I &quot;${trans}&quot; -I &quot;${basedir}&quot;
-                        -la strc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+                        -la strc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
+                        -la stratego-sdf"/>
         
         <property name="externaldef" location="syntax/SDF.def"/>
         <!-- External .def and .jar locations

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-03 14:06:37 UTC (rev 20817)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-03 15:38:41 UTC (rev 20818)
@@ -20,7 +20,8 @@
       dr-scope-all-start
     with
       analyze-ast;
-      warnings := <collect(?context-free-syntax(<filter(context-free-syntax-warning)>))> ast
+      // We only collect-om since we don't want inner warning dupes
+      warnings := <collect(?context-free-syntax(<collect-om(context-free-syntax-warning)>))> ast
 
   editor-complete:
     (node, position, ast, path, project-path) -> proposals
@@ -32,6 +33,8 @@
     where
       target := <Declaration> x
 
+  override pp-sdf-string = fail // ensure compiler doesn't blow up
+
 rules
   
   context-free-syntax-warning:
@@ -51,6 +54,42 @@
   context-free-syntax-warning:
     alt(x, y) -> (<id>, $[The | construct is deprecated: instead of A|B->C use A->C B->C])
 
+  context-free-syntax-warning:
+    seq(_ ,_) -> (<id>, $[Extract sequences of patterns to separate productions to ensure acceptable abstract syntax])
+    where
+      occurrences(sort(id)) => 1
+
+  context-free-syntax-warning:
+    seq(_ ,_) -> (<id>, $[Extract sequences of patterns to separate productions to ensure acceptable abstract syntax])
+    where
+      occurrences(sort(id)) => 1
+
+  context-free-syntax-warning:
+    [sort(x), bad @ iter-star(seq(lit(sep), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [lit(sep)])), sort(x) | _] ->
+    (<id>, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    [opt(sort(x)), iter-star(seq(lit(sep), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [lit(sep)])), opt(sort(x)) | _] ->
+    (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [lit(sep)])), opt(sort(x)) | _] ->
+    (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
+  
+  context-free-syntax-warning:
+    iter-sep(_, bad @ sort(_)) -> (bad, "Non-terminal used as a list separator (use round braces for grouping non-terminals)") 
+  
+  context-free-syntax-warning:
+    iter-star-sep(_, bad @ sort(_)) -> (bad, "Non-terminal used as a list separator (use round braces for grouping non-terminals)") 
+
 rules
 
   generate-pp-rules:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-03 14:06:37 UTC (rev 20817)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-03 15:38:41 UTC (rev 20818)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.4.5"
+      version="0.4.5"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-03 14:06:37 UTC (rev 20817)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-03 15:38:41 UTC (rev 20818)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.4.5.jar" id="org.strategoxt.imp" version="0.4.4.5">
+   <feature url="features/org.strategoxt.imp_0.4.5.jar" id="org.strategoxt.imp" version="0.4.5">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Mon May  3 18:08:50 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 03 May 2010 16:08:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20819 - LennartKats -
	spoofax-imp/trunk
Message-ID: <201005031608.o43G8ole020613@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-03 16:08:50 +0000 (Mon, 03 May 2010)
New Revision: 20819

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20819&view=rev

Modified:
   spoofax-imp/trunk/INSTALL

Log:
Updated INSTALL instructions.

Changes:

Modified: spoofax-imp/trunk/INSTALL
===================================================================
--- spoofax-imp/trunk/INSTALL	2010-05-03 15:38:41 UTC (rev 20818)
+++ spoofax-imp/trunk/INSTALL	2010-05-03 16:08:50 UTC (rev 20819)
@@ -4,28 +4,22 @@
 
 BUILDING FROM SOURCE
 
-To build Spoofax/IMP from source, install the binary plugin and then load the following
-projects into your workspace:
+If you want to build Spoofax/IMP from source, please realize that you
+can build it using a combination of plugins in source form and in
+binary form.  For example, if you want to edit
+org.strategoxt.imp.runtime, you only need that one plugin in your
+workspace.
 
+The full sources of all plugins can be found at the following locations:
+
   - All projects in https://svn.strategoxt.org/repos/StrategoXT/spoofax-imp/trunk
 
   - The STRJ plugin: https://svn.strategoxt.org/repos/StrategoXT/strc-java/trunk
 
-  - The ATerm plugin: https://svn.strategoxt.org/repos/StrategoXT/spoofax/trunk/spoofax/org.spoofax.aterm
+  - Other Spoofax plugins: https://svn.strategoxt.org/repos/StrategoXT/spoofax/trunk/spoofax/
+  
+  - IMP: https://svn.strategoxt.org/repos/StrategoXT/spoofax-imp/trunk/org.eclipse.imp
+         and http://www.eclipse.org/imp
 
-After loading these projects into the workspace, some may require you
-to issue a manual 'Project > Build Project' or 'Project Build All'  command.
-(At the time of writing this is required for the org.strategoxt.imp.generator
-project.)
-
-Since Spoofax/IMP relies on the STRJ project, you may need to add the 
-strj and strj-jar executables on your path.
-
-In some cases, you may need updated versions of the core Spoofax plugins.
-These are available from https://svn.strategoxt.org/repos/StrategoXT/spoofax/trunk
-(Note that you only need the org.spoofax.* projects and should ignore the
-org.spoofax.interpreter.adapter.asm, org.spoofax.interpreter.adapter.ecj,
-and all -feature projects.)
-Alternatively, you can change the dependency order of the org.strategoxt.imp plugins
-to list org.strategoxt.strj first. This project contains most of the Spoofax plugins in
-binary form, and may just have the required version of the classes.
+If you have any problems building, try contacting us
+through our support page at http://strategoxt.org/Spoofax/Support.
\ No newline at end of file



From L.C.L.Kats at tudelft.nl  Tue May  4 11:15:11 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 04 May 2010 09:15:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20820 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms
	strc-java/trunk/java
Message-ID: <201005040915.o449FBHq002415@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-04 09:15:11 +0000 (Tue, 04 May 2010)
New Revision: 20820

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20820&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_baf.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_saf.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_taf.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_text.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/ITermFactory.java
   strc-java/trunk/java/spoofax-libs.jar

Log:
Fixed terms not always writing to streams in Spoofax/IMP.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java	2010-05-03 16:08:50 UTC (rev 20819)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.adapter.aterm/src/org/spoofax/interpreter/adapter/aterm/WrappedATermFactory.java	2010-05-04 09:15:11 UTC (rev 20820)
@@ -201,7 +201,6 @@
     	((WrappedATerm)t).getATerm().writeToTextFile(ous);
     }
 
-    @Deprecated
     public void unparseToFile(IStrategoTerm t, final Writer out) throws IOException {
         ByteArrayOutputStream ous = new ByteArrayOutputStream();
         unparseToFile(t, out);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_baf.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_baf.java	2010-05-03 16:08:50 UTC (rev 20819)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_baf.java	2010-05-04 09:15:11 UTC (rev 20820)
@@ -8,7 +8,7 @@
 package org.spoofax.interpreter.library.ssl;
 
 import java.io.IOException;
-import java.io.OutputStream;
+import java.io.Writer;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
@@ -24,27 +24,27 @@
         
     }
     @Override
-    public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars)
+    public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] targs)
             throws InterpreterException {
         
         // FIXME should we even bother with BAF? Now it's just text
         
-        if(!Tools.isTermInt(tvars[0]))
+        if(!Tools.isTermInt(targs[0]))
             return false;
         
         SSLLibrary or = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
-        OutputStream out = or.getIOAgent().internalGetOutputStream(Tools.asJavaInt(tvars[0]));
+        Writer out = or.getIOAgent().getWriter(Tools.asJavaInt(targs[0]));
         if(out == null)
             return false;
         
         try {
-            env.getFactory().unparseToFile(tvars[1], out);
+            env.getFactory().unparseToFile(targs[1], out);
             out.flush();
         } catch(IOException e) {
             throw new InterpreterException(e);
         }
         
-        env.setCurrent(tvars[0]);
+        env.setCurrent(targs[0]);
         return true;
     }
 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_saf.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_saf.java	2010-05-03 16:08:50 UTC (rev 20819)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_saf.java	2010-05-04 09:15:11 UTC (rev 20820)
@@ -8,7 +8,7 @@
 package org.spoofax.interpreter.library.ssl;
 
 import java.io.IOException;
-import java.io.OutputStream;
+import java.io.Writer;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
@@ -24,27 +24,27 @@
         
     }
     @Override
-    public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars)
+    public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] targs)
             throws InterpreterException {
         
         // FIXME SAF? Now it's just text
         
-        if(!Tools.isTermInt(tvars[0]))
+        if(!Tools.isTermInt(targs[0]))
             return false;
         
         SSLLibrary or = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
-        OutputStream out = or.getIOAgent().internalGetOutputStream(Tools.asJavaInt(tvars[0]));
+        Writer out = or.getIOAgent().getWriter(Tools.asJavaInt(targs[0]));
         if(out == null)
             return false;
         
         try {
-            env.getFactory().unparseToFile(tvars[1], out);
+            env.getFactory().unparseToFile(targs[1], out);
             out.flush();
         } catch(IOException e) {
             throw new InterpreterException(e);
         }
         
-        env.setCurrent(tvars[0]);
+        env.setCurrent(targs[0]);
         return true;
     }
 

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_taf.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_taf.java	2010-05-03 16:08:50 UTC (rev 20819)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_taf.java	2010-05-04 09:15:11 UTC (rev 20820)
@@ -8,7 +8,7 @@
 package org.spoofax.interpreter.library.ssl;
 
 import java.io.IOException;
-import java.io.OutputStream;
+import java.io.Writer;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
@@ -29,9 +29,8 @@
             return false;
 
         SSLLibrary or = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
-        int fd = Tools.asJavaInt(targs[0]);
 
-        OutputStream out = or.getIOAgent().internalGetOutputStream(fd);
+        Writer out = or.getIOAgent().getWriter(Tools.asJavaInt(targs[0]));
         if(out == null)
             return false;
         

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_text.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_text.java	2010-05-03 16:08:50 UTC (rev 20819)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_write_term_to_stream_text.java	2010-05-04 09:15:11 UTC (rev 20820)
@@ -8,7 +8,7 @@
 package org.spoofax.interpreter.library.ssl;
 
 import java.io.IOException;
-import java.io.OutputStream;
+import java.io.Writer;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
@@ -30,7 +30,7 @@
 
         SSLLibrary or = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
 
-        OutputStream out = or.getIOAgent().internalGetOutputStream(Tools.asJavaInt(targs[0]));
+        Writer out = or.getIOAgent().getWriter(Tools.asJavaInt(targs[0]));
         if(out == null)
             return false;
         

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java	2010-05-03 16:08:50 UTC (rev 20819)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/BasicTermFactory.java	2010-05-04 09:15:11 UTC (rev 20820)
@@ -315,7 +315,6 @@
         ous.write(tp.getString().getBytes());
     }
 
-    @Deprecated
     public void unparseToFile(IStrategoTerm t, Writer out) throws IOException {
         ITermPrinter tp = new InlinePrinter();
         t.prettyPrint(tp);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/ITermFactory.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/ITermFactory.java	2010-05-03 16:08:50 UTC (rev 20819)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/terms/ITermFactory.java	2010-05-04 09:15:11 UTC (rev 20820)
@@ -24,7 +24,6 @@
     
     public void unparseToFile(IStrategoTerm t, OutputStream ous) throws IOException;
     
-    @Deprecated
     public void unparseToFile(IStrategoTerm t, Writer out) throws IOException;
 
     public IStrategoAppl replaceAppl(IStrategoConstructor constructor, IStrategoTerm[] kids, IStrategoAppl old);

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Tue May  4 11:50:05 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 04 May 2010 09:50:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20821 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.updatesite
Message-ID: <201005040950.o449o5r5002714@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-04 09:50:05 +0000 (Tue, 04 May 2010)
New Revision: 20821

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20821&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
0.4.5.1: fix debug messages not fully appearing

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-04 09:15:11 UTC (rev 20820)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-04 09:50:05 UTC (rev 20821)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.5"
+      version="0.4.5.1"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-04 09:15:11 UTC (rev 20820)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-04 09:50:05 UTC (rev 20821)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.5.jar" id="org.strategoxt.imp" version="0.4.5">
+   <feature url="features/org.strategoxt.imp_0.4.5.1.jar" id="org.strategoxt.imp" version="0.4.5.1">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Tue May  4 11:56:32 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 04 May 2010 09:56:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20822 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.metatooling/META-INF
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201005040956.o449uWnb002748@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-04 09:56:32 +0000 (Tue, 04 May 2010)
New Revision: 20822

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20822&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/EditorIOAgent.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoConsole.java

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF	2010-05-04 09:50:05 UTC (rev 20821)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF	2010-05-04 09:56:32 UTC (rev 20822)
@@ -26,6 +26,7 @@
  org.strategoxt.strj,
  org.strategoxt.imp.editors.editorservice,
  org.strategoxt.imp.editors.sdf,
+ org.strategoxt.imp.editors.pp,
  org.strategoxt.imp.editors.stratego,
  org.strategoxt.imp.editors.aterm,
  org.eclipse.ant.core,

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/EditorIOAgent.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/EditorIOAgent.java	2010-05-04 09:50:05 UTC (rev 20821)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/EditorIOAgent.java	2010-05-04 09:56:32 UTC (rev 20822)
@@ -5,6 +5,7 @@
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
 import java.io.InputStream;
+import java.io.OutputStream;
 import java.io.Writer;
 
 import org.spoofax.interpreter.library.LoggingIOAgent;
@@ -62,6 +63,7 @@
 	public Writer getWriter(int fd) {
 		// TODO: close console streams after use?
 		// TODO: show console during wizard
+		//       (same goes for internalGetOutputStream)
 		if (fd == CONST_STDOUT && isActivateConsoleEnabled()) {
 			StrategoConsole.activateConsole(true);
 			return StrategoConsole.getOutputWriter();
@@ -72,6 +74,19 @@
 			return super.getWriter(fd);
 		}
 	}
+	
+	@Override
+	public OutputStream internalGetOutputStream(int fd) {
+		if (fd == CONST_STDOUT && isActivateConsoleEnabled()) {
+			StrategoConsole.activateConsole(true);
+			return StrategoConsole.getOutputStream();
+		} else if (fd == CONST_STDERR && isActivateConsoleEnabled()) {
+			StrategoConsole.activateConsole(true);
+			return StrategoConsole.getErrorStream();
+		} else {
+			return super.internalGetOutputStream(fd);
+		}
+	}
 
 	private boolean isActivateConsoleEnabled() {
 		return alwaysActivateConsole || (descriptor != null && descriptor.isDynamicallyLoaded());

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoConsole.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoConsole.java	2010-05-04 09:50:05 UTC (rev 20821)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoConsole.java	2010-05-04 09:56:32 UTC (rev 20822)
@@ -35,9 +35,9 @@
 	
 	private static MessageConsole lastConsole;
 	
-	private static Writer lastConsoleOutputWriter;
+	private static AutoFlushOutputStreamWriter lastConsoleOutputWriter;
 	
-	private static Writer lastConsoleErrorWriter;
+	private static AutoFlushOutputStreamWriter lastConsoleErrorWriter;
 
 	public static Writer getErrorWriter() {
 		MessageConsole console = getConsole();
@@ -63,6 +63,14 @@
 			return lastConsoleOutputWriter;
 		}
 	}
+	
+	public static OutputStream getErrorStream() {
+		return ((AutoFlushOutputStreamWriter) getErrorWriter()).stream;
+	}
+	
+	public static OutputStream getOutputStream() {
+		return ((AutoFlushOutputStreamWriter) getOutputWriter()).stream;
+	}
 
 	/**
 	 * Gets or opens the Eclipse console for this plugin.
@@ -134,9 +142,12 @@
 	 * @author Lennart Kats <lennart add lclnet.nl>
 	 */
 	private static class AutoFlushOutputStreamWriter extends OutputStreamWriter {
+		
+		final OutputStream stream;
 
-		public AutoFlushOutputStreamWriter(OutputStream out) {
-			super(out);
+		public AutoFlushOutputStreamWriter(OutputStream stream) {
+			super(stream);
+			this.stream = stream;
 		}
 		
 		@Override



From L.C.L.Kats at tudelft.nl  Tue May  4 13:43:57 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 04 May 2010 11:43:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20823 - LennartKats -
	in spoofax-imp/trunk: .
	org.strategoxt.imp.editors.editorservice/editor
	org.strategoxt.imp.generator/src/syntax
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201005041143.o44BhvaL004640@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-04 11:43:57 +0000 (Tue, 04 May 2010)
New Revision: 20823

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20823&view=rev

Added:
   spoofax-imp/trunk/README
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/BuilderButtonDelegate.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/BuilderMap.java

Log:
Made a start with Spoofax/1. Then got bored.

Changes:

Added: spoofax-imp/trunk/README
===================================================================
--- spoofax-imp/trunk/README	                        (rev 0)
+++ spoofax-imp/trunk/README	2010-05-04 11:43:57 UTC (rev 20823)
@@ -0,0 +1,13 @@
+Spoofax/IMP (www.spoofax.org)
+
+This document should contain some tips about the internal structure and development of Spoofax/IMP.
+See INSTALL for installation instructions and visit our website for more information about the project.
+
+Typical workflow for adding a new IDE feature:
+- Add production describing the feature to the syntax in org.strategoxt.imp.generator/src/syntax
+- Update the pretty printer definition, also in org.strategoxt.imp.generator/src/syntax
+- Add a sane default and/or documentation to org.strategoxt.imp.generator/src/sdf2imp/services
+- Implement the feature in a factory class in org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
+- Implement the feature in a proxy class in org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
+  (e.g., see DynamicOutliner)
+- Implement the feature in a concrete class in org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	2010-05-04 09:56:32 UTC (rev 20822)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/EditorService-Completions.esv	2010-05-04 11:43:57 UTC (rev 20823)
@@ -26,6 +26,9 @@
   	"builder" ": " <"caption"> " = " <s> (blank)
   
   completion template:
+    "builder" "caption: " <"caption"> (blank)
+  
+  completion template:
   	"unmanaged table" ": " <prefix> "*" (blank)
   
   completion template:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf	2010-05-04 09:56:32 UTC (rev 20822)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/BuildersService.sdf	2010-05-04 11:43:57 UTC (rev 20823)
@@ -19,8 +19,8 @@
     
     "observer" ":" StrategoCall                           -> SemanticRule {cons("SemanticObserver")}
     "builder"  ":" String "=" StrategoCall BuilderOption* -> SemanticRule {cons("Builder")}
+    "builder" "caption" ":" PropertyValue                 -> SemanticRule {cons("BuilderCaption")}
     
-    
     "(openeditor)" -> BuilderOption {cons("OpenEditor")}
     "(realtime)"   -> BuilderOption {cons("RealTime")}
     "(persistent)" -> BuilderOption {cons("Persistent")}

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	2010-05-04 09:56:32 UTC (rev 20822)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	2010-05-04 11:43:57 UTC (rev 20823)
@@ -4,7 +4,6 @@
    CompletionProposer   -- R [ H [ KW["completion"] KW["proposer"] ] KW[":"] _1 ],
    CompletionLexical    -- R [ H [ KW["completion"] KW["lexical"] ] KW[":"] _1 ],
    IdentifierLexical    -- R [ H [ KW["identifier"] KW["lexical"] ] KW[":"] _1 ],
-   Placeholder          -- H hs=0 [ _1 ],
    CompletionKeyword    -- R [ H [ KW["completion"] KW["keyword"] ] KW[":"] H [ _1 _2 ] ],
    CompletionTemplate   -- R [ H [ KW["completion"] KW["template"] ] KW[":"] H [ _1 _2 _3 ] ],
    CompletionTemplate.2:iter-star -- _1,
@@ -16,6 +15,7 @@
    SemanticObserver     -- R [ H [ KW["observer"] ]  KW[":"] _1 ],
    Builder              -- R [ H [ KW["builder"] ]   KW[":"] _1 H [ KW["="] _2 _3 ] ],
    Builder.3:iter-star  -- _1,
+   BuilderCaption       -- R [ H [ KW["builder"] KW["caption"] ] KW[":"] _1 ],
    OpenEditor           -- KW["(openeditor)"],
    RealTime             -- KW["(realtime)"],
    Persistent           -- KW["(persistent)"],

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-04 09:56:32 UTC (rev 20822)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-04 11:43:57 UTC (rev 20823)
@@ -62,6 +62,8 @@
 	
 	private IPath basePath;
 	
+	private String builderCaption;
+	
 	private Set<File> attachedFiles;
 	
 	private Class<?> attachmentProvider;
@@ -350,6 +352,12 @@
 			file += ".tbl";
 		return file;
 	}
+	
+	public String getBuilderCaption() {
+		if (builderCaption == null)
+			builderCaption = getProperty("BuilderCaption", "");
+		return builderCaption.length() == 0 ? null : builderCaption;
+	}
 
 	private String getPPTableName() throws BadDescriptorException {
 		String file = getProperty("PPTable", getProperty("LanguageName"));
@@ -385,14 +393,14 @@
 		return attachedFiles;
 	}
 
-	protected String getProperty(String name) throws BadDescriptorException {
+	public String getProperty(String name) throws BadDescriptorException {
 		String result = getProperty(name, null);
 		if (result == null)
 			throw new BadDescriptorException("Property " + name + " not specified");
 		return result;
 	}
 
-	protected String getProperty(String name, String defaultValue) {
+	public String getProperty(String name, String defaultValue) {
 		IStrategoAppl result = findTerm(document, name);
 		if (result == null)
 			return defaultValue;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/BuilderButtonDelegate.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/BuilderButtonDelegate.java	2010-05-04 09:56:32 UTC (rev 20822)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/BuilderButtonDelegate.java	2010-05-04 11:43:57 UTC (rev 20823)
@@ -5,6 +5,7 @@
 import org.eclipse.core.commands.ExecutionException;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.Status;
+import org.eclipse.imp.ui.DefaultPartListener;
 import org.eclipse.jface.action.Action;
 import org.eclipse.jface.action.ActionContributionItem;
 import org.eclipse.jface.action.IAction;
@@ -14,12 +15,14 @@
 import org.eclipse.swt.widgets.Control;
 import org.eclipse.swt.widgets.Menu;
 import org.eclipse.swt.widgets.MenuItem;
+import org.eclipse.ui.IWorkbenchPart;
 import org.eclipse.ui.IWorkbenchWindow;
 import org.eclipse.ui.IWorkbenchWindowPulldownDelegate;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.RuntimeActivator;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 
 /**
  * Implements a dropdown button with builder actions.
@@ -28,14 +31,28 @@
  */
 public class BuilderButtonDelegate extends AbstractHandler implements IWorkbenchWindowPulldownDelegate {
 	
-	// TODO: IWorkbenchWindowPulldownDelegate?
-	
 	private static String lastAction;
 	
 	private Menu menu;
 
 	public void init(IWorkbenchWindow window) {
 		// Initialized using getMenu()
+		window.getPartService().addPartListener(new DefaultPartListener() {
+			@Override			
+			public void partActivated(IWorkbenchPart part) {
+				EditorState editor = EditorState.getActiveEditor();
+				if (editor != null) {
+					Descriptor d = editor.getDescriptor();
+					String caption = d.getBuilderCaption();
+					// TODO: Spoofax/1: Transform menu customization for Spoofax/IMP editor builders
+					if (caption == null) {
+						// set "Transform" as caption
+					} else {
+						// set caption as caption
+					}
+				}
+			}
+		});
 	}
 
 	public void run(IAction action) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/BuilderMap.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/BuilderMap.java	2010-05-04 09:56:32 UTC (rev 20822)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/BuilderMap.java	2010-05-04 11:43:57 UTC (rev 20823)
@@ -8,6 +8,7 @@
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public class BuilderMap implements IBuilderMap, ILanguageService {
+	
 	private final Set<IBuilder> builders;
 	
 	public BuilderMap(Set<IBuilder> builders) {



From L.C.L.Kats at tudelft.nl  Tue May  4 14:10:24 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 04 May 2010 12:10:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20824 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201005041210.o44CAOkE005270@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-04 12:10:24 +0000 (Tue, 04 May 2010)
New Revision: 20824

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20824&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java

Log:
Don't delete non-persistent files for now since it causes problem with workspace auto-refresh

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	2010-05-04 11:43:57 UTC (rev 20823)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	2010-05-04 12:10:24 UTC (rev 20824)
@@ -185,7 +185,8 @@
 				// TODO: if not persistent, create IEditorInput from result String
 				if (openEditor && !isRebuild) {
 					IEditorPart target = openEditor(file, realTime);
-					if (!persistent) new File(file.getLocationURI()).delete();
+					// UNDONE: don't delete non-persistent files for now since it causes problem with workspace auto-refresh
+					// if (!persistent) new File(file.getLocationURI()).delete();
 					// Create a listene *and* editor-derived editor relation
 					StrategoBuilderListener listener = 
 						StrategoBuilderListener.addListener(editor.getEditor(), target, file, getCaption(), node);



From L.C.L.Kats at tudelft.nl  Tue May  4 14:11:44 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 04 May 2010 12:11:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20825 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	dynamicloading services
Message-ID: <201005041211.o44CBimH005284@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-04 12:11:43 +0000 (Tue, 04 May 2010)
New Revision: 20825

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20825&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-04 12:10:24 UTC (rev 20824)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-04 12:11:43 UTC (rev 20825)
@@ -393,14 +393,14 @@
 		return attachedFiles;
 	}
 
-	public String getProperty(String name) throws BadDescriptorException {
+	protected String getProperty(String name) throws BadDescriptorException {
 		String result = getProperty(name, null);
 		if (result == null)
 			throw new BadDescriptorException("Property " + name + " not specified");
 		return result;
 	}
 
-	public String getProperty(String name, String defaultValue) {
+	protected String getProperty(String name, String defaultValue) {
 		IStrategoAppl result = findTerm(document, name);
 		if (result == null)
 			return defaultValue;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	2010-05-04 12:10:24 UTC (rev 20824)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	2010-05-04 12:11:43 UTC (rev 20825)
@@ -7,7 +7,6 @@
 import static org.spoofax.interpreter.core.Tools.termAt;
 
 import java.io.ByteArrayInputStream;
-import java.io.File;
 import java.io.InputStream;
 
 import org.eclipse.core.resources.IFile;
@@ -58,6 +57,7 @@
 	
 	private final boolean source;
 	
+	@SuppressWarnings("unused")
 	private final boolean persistent;
 	
 	private final EditorState derivedFromEditor;



From L.C.L.Kats at tudelft.nl  Tue May  4 15:55:45 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 04 May 2010 13:55:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20826 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.sdf org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.editors.stratego/trans
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast
Message-ID: <201005041355.o44DtjRF006608@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-04 13:55:45 +0000 (Tue, 04 May 2010)
New Revision: 20826

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20826&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/SubListAstNode.java

Log:
- Added fallback Ant target for when ppgen fails
- Fixed Spoofax/97: Stratego completions fail sometimes

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-04 12:11:43 UTC (rev 20825)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-04 13:55:45 UTC (rev 20826)
@@ -184,6 +184,8 @@
             </dependset>
             <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
             <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
         </target>
     
         <target name="ppgen.helper" unless="ppgen.available">
@@ -204,19 +206,25 @@
                 <arg value="${syntax}/${sdfmodule}.generated.pp"/>
             </java>
         </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
         
         <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${syntax}/${sdfmodule}.pp"/>
                 <targetfileset file="${include}/${sdfmodule}.pp.af"/>
             </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
-            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
         </target>
     
         <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
-            <java classname="run">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-parse-pp-table"/>
                 <arg value="-i"/>
                 <arg value="${syntax}/${sdfmodule}.pp"/>
@@ -225,6 +233,10 @@
             </java>
         </target>
     
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-04 12:11:43 UTC (rev 20825)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-04 13:55:45 UTC (rev 20826)
@@ -184,6 +184,8 @@
             </dependset>
             <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
             <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
         </target>
     
         <target name="ppgen.helper" unless="ppgen.available">
@@ -204,19 +206,25 @@
                 <arg value="${syntax}/${sdfmodule}.generated.pp"/>
             </java>
         </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
         
         <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${syntax}/${sdfmodule}.pp"/>
                 <targetfileset file="${include}/${sdfmodule}.pp.af"/>
             </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
-            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
         </target>
     
         <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
-            <java classname="run">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-parse-pp-table"/>
                 <arg value="-i"/>
                 <arg value="${syntax}/${sdfmodule}.pp"/>
@@ -225,6 +233,10 @@
             </java>
         </target>
     
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-04 12:11:43 UTC (rev 20825)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-04 13:55:45 UTC (rev 20826)
@@ -184,6 +184,8 @@
             </dependset>
             <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
             <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
         </target>
     
         <target name="ppgen.helper" unless="ppgen.available">
@@ -204,19 +206,25 @@
                 <arg value="${syntax}/${sdfmodule}.generated.pp"/>
             </java>
         </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
         
         <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${syntax}/${sdfmodule}.pp"/>
                 <targetfileset file="${include}/${sdfmodule}.pp.af"/>
             </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
-            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
         </target>
     
         <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
-            <java classname="run">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-parse-pp-table"/>
                 <arg value="-i"/>
                 <arg value="${syntax}/${sdfmodule}.pp"/>
@@ -225,6 +233,10 @@
             </java>
         </target>
     
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-04 12:11:43 UTC (rev 20825)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-04 13:55:45 UTC (rev 20826)
@@ -184,6 +184,8 @@
             </dependset>
             <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
             <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
         </target>
     
         <target name="ppgen.helper" unless="ppgen.available">
@@ -204,19 +206,25 @@
                 <arg value="${syntax}/${sdfmodule}.generated.pp"/>
             </java>
         </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
         
         <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${syntax}/${sdfmodule}.pp"/>
                 <targetfileset file="${include}/${sdfmodule}.pp.af"/>
             </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
-            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
         </target>
     
         <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
-            <java classname="run">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-parse-pp-table"/>
                 <arg value="-i"/>
                 <arg value="${syntax}/${sdfmodule}.pp"/>
@@ -225,6 +233,10 @@
             </java>
         </target>
     
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-04 12:11:43 UTC (rev 20825)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-04 13:55:45 UTC (rev 20826)
@@ -184,6 +184,8 @@
             </dependset>
             <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
             <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
         </target>
     
         <target name="ppgen.helper" unless="ppgen.available">
@@ -204,19 +206,25 @@
                 <arg value="${syntax}/${sdfmodule}.generated.pp"/>
             </java>
         </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
         
         <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${syntax}/${sdfmodule}.pp"/>
                 <targetfileset file="${include}/${sdfmodule}.pp.af"/>
             </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
-            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
         </target>
     
         <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
-            <java classname="run">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-parse-pp-table"/>
                 <arg value="-i"/>
                 <arg value="${syntax}/${sdfmodule}.pp"/>
@@ -225,6 +233,10 @@
             </java>
         </target>
     
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.main.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.main.xml	2010-05-04 12:11:43 UTC (rev 20825)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.main.xml	2010-05-04 13:55:45 UTC (rev 20826)
@@ -37,5 +37,5 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="sdf2table,stratego.jar,sdf2imp"/>
+        <target name="all" depends="sdf2table,ppgen.helper.fallback,pppack.helper.fallback,stratego.jar,sdf2imp"/>
     </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-04 12:11:43 UTC (rev 20825)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-04 13:55:45 UTC (rev 20826)
@@ -496,7 +496,7 @@
       all-signatures := <filter-by-prefix(|prefix)> <all-keys-DeclareCookie>;
       switch !completion
         case ?Var(_):
-          all-signatures2' := <try(filter(?(_, _)); not([]))> all-signatures
+          all-signatures' := <try(filter(?(_, _)); not([]))> all-signatures
         case ?SVar(_):
           all-signatures' := <filter(?(_, _, _))> all-signatures
         case ?DynRuleScopeId(_):
@@ -692,4 +692,9 @@
     where
       require(<eq> (<base-filename> x, <remove-extension> <base-filename> <CurrentFile>))
 
+  constraint-warning:
+    Import(f) -> (f, $[Relative path in import])
+    where
+      <string-starts-with(|"../")> f
+
   // TODO: overlapping signatures

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-05-04 12:11:43 UTC (rev 20825)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-05-04 13:55:45 UTC (rev 20826)
@@ -256,6 +256,8 @@
             </dependset>
             <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
             <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
         </target>
     
         <target name="ppgen.helper" unless="ppgen.available">
@@ -276,19 +278,25 @@
                 <arg value="${syntax}/${sdfmodule}.generated.pp"/>
             </java>
         </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
         
         <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${syntax}/${sdfmodule}.pp"/>
                 <targetfileset file="${include}/${sdfmodule}.pp.af"/>
             </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
-            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
             <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
         </target>
     
         <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
-            <java classname="run">
+            <java classname="run" failonerror="true">
                 <arg value="org.strategoxt.tools.main-parse-pp-table"/>
                 <arg value="-i"/>
                 <arg value="${syntax}/${sdfmodule}.pp"/>
@@ -297,6 +305,10 @@
             </java>
         </target>
     
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/SubListAstNode.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/SubListAstNode.java	2010-05-04 12:11:43 UTC (rev 20825)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/SubListAstNode.java	2010-05-04 13:55:45 UTC (rev 20826)
@@ -2,8 +2,6 @@
 
 import java.util.ArrayList;
 
-import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
-
 import lpg.runtime.IToken;
 
 /**



From L.C.L.Kats at tudelft.nl  Tue May  4 16:01:35 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 04 May 2010 14:01:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20827 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans
Message-ID: <201005041401.o44E1ZSZ006935@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-04 14:01:34 +0000 (Tue, 04 May 2010)
New Revision: 20827

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20827&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str

Log:
Fixed library signature imports from rtree files.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-04 13:55:45 UTC (rev 20826)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-04 14:01:34 UTC (rev 20827)
@@ -207,6 +207,7 @@
         // FIXME: fetch true import paths from someplace
         fetch-library-ast; full-path := x
      <+ full-path := <file-exists> $[[<ProjectDir>]/[x].str]
+     <+ full-path := <file-exists> $[[<ProjectDir>]/[x].rtree]
      <+ full-path := <file-exists> $[[<ProjectDir>]/trans/[x].str]
      <+ full-path := <file-exists> $[[<ProjectDir>]/lib/[x].str]
      <+ full-path := <file-exists> $[[<ProjectDir>]/lib/[x].rtree]
@@ -225,7 +226,7 @@
       file := <fetch-library-ast>
     <+
       rtree := <guarantee-extension(|"rtree")>;
-      if <is-newer> (rtree, str) + not(<file-exists> str) then
+      if <is-newer> (rtree, str) + not(<file-exists> str) + <has-extension(|"rtree")> str then
         file := <file-exists; ReadFromFile> rtree
       else
         file := <parse-stratego-file> str



From L.C.L.Kats at tudelft.nl  Tue May  4 16:19:13 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 04 May 2010 14:19:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20828 - LennartKats -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego
	strc-java/trunk/java
Message-ID: <201005041419.o44EJDTo007329@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-04 14:19:13 +0000 (Tue, 04 May 2010)
New Revision: 20828

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20828&view=rev

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_read_term_from_stream.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/GuardedLChoice.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/One.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Some.java
   strc-java/trunk/java/spoofax-libs.jar

Log:
Fixed some synthetic member access warnings.

Changes:

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_read_term_from_stream.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_read_term_from_stream.java	2010-05-04 14:01:34 UTC (rev 20827)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/library/ssl/SSL_read_term_from_stream.java	2010-05-04 14:19:13 UTC (rev 20828)
@@ -38,6 +38,7 @@
         //
         // FileChannel channel = or.getIOAgent().getInputChannel(Tools.asJavaInt(tvars[0]));
         // ChannelPushbackInputStream reader = new ChannelPushbackInputStream(channel);
+        // TODO: in other places we're using getReader(); seems risky to use internalGetInputStream() here
         SSLLibrary or = (SSLLibrary) env.getOperatorRegistry(SSLLibrary.REGISTRY_NAME);
         InputStream is = or.getIOAgent().internalGetInputStream(Tools.asJavaInt(tvars[0]));
         if(is == null)

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/GuardedLChoice.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/GuardedLChoice.java	2010-05-04 14:01:34 UTC (rev 20827)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/GuardedLChoice.java	2010-05-04 14:19:13 UTC (rev 20828)
@@ -33,7 +33,7 @@
         return eval(env, 0);
     }
 
-    private IConstruct eval(IContext env, final int n) throws InterpreterException {
+    protected IConstruct eval(IContext env, final int n) throws InterpreterException {
     	if (n == (children.length - 1)) {
     		Strategy s = children[n].first;
     		s.getHook().push(getHook().pop());

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/One.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/One.java	2010-05-04 14:01:34 UTC (rev 20827)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/One.java	2010-05-04 14:19:13 UTC (rev 20828)
@@ -45,7 +45,7 @@
         }
     }
 
-    private IConstruct eval(IContext env, final int n, final IStrategoTerm[] list) throws InterpreterException
+    protected IConstruct eval(IContext env, final int n, final IStrategoTerm[] list) throws InterpreterException
     {
     	final IStrategoTerm old = env.current();
     	if (n >= old.getSubtermCount()) {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Some.java
===================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Some.java	2010-05-04 14:01:34 UTC (rev 20827)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/java/org/spoofax/interpreter/stratego/Some.java	2010-05-04 14:19:13 UTC (rev 20828)
@@ -45,7 +45,7 @@
         }
     }
 
-    private IConstruct eval(final IContext env, final int n, final boolean hadsome, final IStrategoTerm[] list) throws InterpreterException
+    protected IConstruct eval(final IContext env, final int n, final boolean hadsome, final IStrategoTerm[] list) throws InterpreterException
     {
     	final IStrategoTerm old = env.current();
     	if (n >= old.getSubtermCount()) {

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Tue May  4 16:21:26 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 04 May 2010 14:21:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20829 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.updatesite
Message-ID: <201005041421.o44ELQnt007401@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-04 14:21:26 +0000 (Tue, 04 May 2010)
New Revision: 20829

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20829&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Release 0.4.5.2

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-04 14:19:13 UTC (rev 20828)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-04 14:21:26 UTC (rev 20829)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.5.1"
+      version="0.4.5.2"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-04 14:19:13 UTC (rev 20828)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-04 14:21:26 UTC (rev 20829)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.5.1.jar" id="org.strategoxt.imp" version="0.4.5.1">
+   <feature url="features/org.strategoxt.imp_0.4.5.2.jar" id="org.strategoxt.imp" version="0.4.5.2">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Thu May  6 11:38:48 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 06 May 2010 09:38:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20831 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.generator/src/syntax
	org.strategoxt.imp.updatesite
Message-ID: <201005060938.o469cmRB006547@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-06 09:38:48 +0000 (Thu, 06 May 2010)
New Revision: 20831

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20831&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Some line disappeared from the pretty printer file(?)

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-04 15:18:08 UTC (rev 20830)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-06 09:38:48 UTC (rev 20831)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.5.2"
+      version="0.4.5.3"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	2010-05-04 15:18:08 UTC (rev 20830)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/syntax/EditorService-pretty.pp	2010-05-06 09:38:48 UTC (rev 20831)
@@ -4,6 +4,7 @@
    CompletionProposer   -- R [ H [ KW["completion"] KW["proposer"] ] KW[":"] _1 ],
    CompletionLexical    -- R [ H [ KW["completion"] KW["lexical"] ] KW[":"] _1 ],
    IdentifierLexical    -- R [ H [ KW["identifier"] KW["lexical"] ] KW[":"] _1 ],
+   Placeholder          -- H hs=0 [ _1 ],
    CompletionKeyword    -- R [ H [ KW["completion"] KW["keyword"] ] KW[":"] H [ _1 _2 ] ],
    CompletionTemplate   -- R [ H [ KW["completion"] KW["template"] ] KW[":"] H [ _1 _2 _3 ] ],
    CompletionTemplate.2:iter-star -- _1,

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-04 15:18:08 UTC (rev 20830)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-06 09:38:48 UTC (rev 20831)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.5.2.jar" id="org.strategoxt.imp" version="0.4.5.2">
+   <feature url="features/org.strategoxt.imp_0.4.5.3.jar" id="org.strategoxt.imp" version="0.4.5.3">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Mon May 10 10:03:02 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 10 May 2010 08:03:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20835 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.stratego/trans
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201005100803.o4A8328i021623@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-10 08:03:01 +0000 (Mon, 10 May 2010)
New Revision: 20835

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20835&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/sourcedir.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java

Log:
- Integrated Nathan's "soucedir" patch for improved import handling
- Spoofax/101: Stratego wildcard imports seem to be broken


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-09 17:35:28 UTC (rev 20834)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-10 08:03:01 UTC (rev 20835)
@@ -5,6 +5,7 @@
   libstrc
   desugar
   lib/editor-common.generated
+  sourcedir
 
 strategies
 
@@ -16,6 +17,7 @@
         CurrentDir  := <dirname> $[[project-path]/[path]]
         ProjectDir  := project-path
       );
+      try(get-source-base-dir);
       if <file-exists> $[[project-path]/.disable-global-analysis] then
         <debug(!"analysis disabled: ")> project-path;
         rules(NoAnalysis: _)
@@ -190,35 +192,38 @@
   declare-globals:
     Import(x) -> Import(x)
     with
-      <open-import(resolve-import-path, read-stratego-signatures, declare-globals-top)> x
+      <open-import(resolve-import-decl, read-stratego-signatures, declare-globals-top)> x
     <+
       rules(IsImportedFailed: x)
 
   declare-globals:
     ImportWildcard(x) -> ImportWildcard(x)
     with
-      <open-wildcard-import(resolve-import-path, read-stratego-signatures, declare-globals-top, has-extension(|"str") + has-extension(|"rtree"))> x
+      <open-wildcard-import(resolve-import-path <+ file-exists, read-stratego-signatures, declare-globals-top, has-extension(|"str") + has-extension(|"rtree"))> x
     <+
       rules(IsImportedFailed: x)
 
+   resolve-import-decl:
+     x -> full-path
+     where
+       fetch-library-ast; full-path := x
+     <+
+       full-path := <resolve-import-path> $[[x].str]
+     <+
+       full-path := <resolve-import-path> $[[x].rtree]
+
    resolve-import-path:
      x -> full-path
      where
         // FIXME: fetch true import paths from someplace
-        fetch-library-ast; full-path := x
-     <+ full-path := <file-exists> $[[<ProjectDir>]/[x].str]
-     <+ full-path := <file-exists> $[[<ProjectDir>]/[x].rtree]
-     <+ full-path := <file-exists> $[[<ProjectDir>]/trans/[x].str]
-     <+ full-path := <file-exists> $[[<ProjectDir>]/lib/[x].str]
-     <+ full-path := <file-exists> $[[<ProjectDir>]/lib/[x].rtree]
-     <+ full-path := <file-exists> $[[<ProjectDir>]/src/[x].str]
-     <+ full-path := <file-exists> $[[<ProjectDir>]/syntax/[x].str]
-     <+ full-path := <file-exists> $[[<ProjectDir>]/src/syntax/[x].str]
-     <+ full-path := <file-exists> $[[<CurrentDir>]/[x].str]
-     <+ full-path := <file-exists> $[[<CurrentDir>]/../[x].str]
-     <+ full-path := <file-exists> $[[<CurrentDir>]/../../[x].str]
-     <+ full-path := <file-exists> $[[<CurrentDir>]/../../../[x].str]
-     <+ full-path := <file-exists> $[[<CurrentDir>]/../../../../[x].str]
+        full-path := <file-exists> $[[<SourceDir>]/[x]]
+     <+ full-path := <file-exists> $[[<ProjectDir>]/[x]]
+     <+ full-path := <file-exists> $[[<ProjectDir>]/trans/[x]]
+     <+ full-path := <file-exists> $[[<ProjectDir>]/lib/[x]]
+     <+ full-path := <file-exists> $[[<ProjectDir>]/src/[x]]
+     <+ full-path := <file-exists> $[[<ProjectDir>]/syntax/[x]]
+     <+ full-path := <file-exists> $[[<ProjectDir>]/syn/[x]]
+     <+ full-path := <file-exists> $[[<ProjectDir>]/src/syntax/[x]]
   
   read-stratego-signatures:
     str -> <to-signatures> file
@@ -685,8 +690,11 @@
     Module(x, _) -> (x, $[Module name should be qualified with a path relative to the import path])
     where
       not(NoAnalysis);
-      <eq> (<base-filename> x, <remove-extension> <base-filename> <CurrentFile>);
-      require(<resolve-import-path> x)
+      {| SourceDir:
+        rules(SourceDir :- _);
+        <eq> (<base-filename> x, <remove-extension> <base-filename> <CurrentFile>);
+        require(<resolve-import-path> $[[x].str] + <resolve-import-path> $[[x].rtree])
+      |}
 
   constraint-warning:
     Module(x, _) -> (x, $[Module name does not correspond to file name])

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/sourcedir.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/sourcedir.str	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/sourcedir.str	2010-05-10 08:03:01 UTC (rev 20835)
@@ -0,0 +1,38 @@
+module sourcedir
+
+imports
+  analysis
+  libstrc
+
+rules
+  
+  get-source-base-dir: mod at Module(x, _) -> mod
+    where <explode-string> x
+        ; filter(?'/')
+        ; length => ndirs
+        ; CurrentDir
+          // remove the last ndirs of directories
+        ; explode-string(|'/')
+        ; take(|<subt> (<length>, ndirs))
+        ; implode-string(|'/') => basedir
+        ; rules(SourceDir := basedir)
+        
+  get-soure-base-dir = ProjectDir
+          
+rules  // string utils
+  
+  explode-string'(|sep) =
+      split-at(?sep); \(a,b) -> [ a | <explode-string'(|sep)> b]\
+    <+ ![<id>]
+  
+  // Sep is a character
+  explode-string(|sep) = 
+        explode-string 
+      ; explode-string'(|sep)
+      ; map(implode-string)
+
+  // Sep can be a character or a string
+  implode-string(|sep) =
+      where(sep' := <is-string <+ ![<id>]; implode-string> sep)
+    ; separate-by(|sep'); concat-strings
+      
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-05-09 17:35:28 UTC (rev 20834)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-05-10 08:03:01 UTC (rev 20835)
@@ -96,6 +96,7 @@
         <mkdir dir="${dist}"/>
         <mkdir dir="${include}"/>
         <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
 
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	2010-05-09 17:35:28 UTC (rev 20834)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	2010-05-10 08:03:01 UTC (rev 20835)
@@ -93,7 +93,7 @@
         readdir;
         list-loop(
           if is-source-file then
-            <open-import(resolve-path, parse-file, record-declarations)>
+            <open-import(id, parse-file, record-declarations)>
               $[[path]/[<id>]]
           <+
             try(?one-failed)

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-05-09 17:35:28 UTC (rev 20834)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-05-10 08:03:01 UTC (rev 20835)
@@ -1,9 +1,6 @@
 package org.strategoxt.imp.runtime.stratego;
 
-import static java.util.Arrays.asList;
-
 import java.util.ArrayList;
-import java.util.LinkedHashSet;
 import java.util.LinkedList;
 import java.util.List;
 



From L.C.L.Kats at tudelft.nl  Mon May 10 10:19:53 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 10 May 2010 08:19:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20836 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans
Message-ID: <201005100819.o4A8Jr33021826@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-10 08:19:52 +0000 (Mon, 10 May 2010)
New Revision: 20836

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20836&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str

Log:
Spoofax/119: Report match symbols in strategy applications

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-10 08:03:01 UTC (rev 20835)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-10 08:19:52 UTC (rev 20836)
@@ -638,6 +638,12 @@
 
   constraint-error:
     Rule(_, t, _) -> <constraint-error-bad-build> t
+  
+  constraint-error:
+    BA(_, t) -> <constraint-error-bad-build> t
+  
+  constraint-error:
+    App(_, t) -> <constraint-error-bad-build> t
 
   constraint-error:
     Match(t) -> <constraint-error-bad-match> t



From L.C.L.Kats at tudelft.nl  Mon May 10 13:28:09 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 10 May 2010 11:28:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20838 - LennartKats -
	in spoofax-imp/trunk/org.strategoxt.imp.runtime: .
	src/org/strategoxt/imp/runtime
	src/org/strategoxt/imp/runtime/dynamicloading
	src/org/strategoxt/imp/runtime/parser
	src/org/strategoxt/imp/runtime/services
	src/org/strategoxt/imp/runtime/stratego
Message-ID: <201005101128.o4ABS9SF024795@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-10 11:28:08 +0000 (Mon, 10 May 2010)
New Revision: 20838

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20838&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/lib/
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java

Log:
Reconsidered weak reference maps and introduced a new WeakWeakMap class to avoid collecting stale references in maps.

Changes:

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java	2010-05-10 11:28:08 UTC (rev 20838)
@@ -0,0 +1,88 @@
+package org.strategoxt.imp.runtime;
+
+import java.lang.ref.WeakReference;
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+import java.util.WeakHashMap;
+
+import org.spoofax.NotImplementedException;
+import org.strategoxt.lang.WeakValueHashMap;
+
+/**
+ * A WeakHashMap that uses both weak reference keys and weak reference values.
+ * 
+ * @see WeakHashMap
+ * @see WeakValueHashMap
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class WeakWeakMap<K,V> implements Map<K,V> {
+	
+	private final WeakHashMap<K,WeakReference<V>> map = new WeakHashMap<K,WeakReference<V>>();
+	
+	public WeakWeakMap() {
+		// Construct new WeakWeakMap
+	}
+
+	public void clear() {
+		map.clear();
+	}
+
+	public boolean containsKey(Object key) {
+		return map.containsKey(key);
+	}
+
+	public boolean containsValue(Object value) {
+		// Can't do this using reference equality and no reference given
+		throw new UnsupportedOperationException();
+	}
+
+	public Set<java.util.Map.Entry<K, V>> entrySet() {
+		throw new NotImplementedException();
+	}
+
+	public V get(Object key) {
+		WeakReference<V> ref = map.get(key);
+		return ref == null ? null : ref.get();
+	}
+
+	public boolean isEmpty() {
+		return map.isEmpty();
+	}
+
+	public Set<K> keySet() {
+		return map.keySet();
+	}
+
+	public V put(K key, V value) {
+		if (value == null)
+			throw new IllegalArgumentException("Value cannot be null");
+		WeakReference<V> existing = map.put(key, new WeakReference<V>(value));
+		return existing == null ? null : existing.get();
+	}
+
+	public void putAll(Map<? extends K, ? extends V> m) {
+		throw new NotImplementedException();
+	}
+
+	public V remove(Object key) {
+		WeakReference<V> existing = map.remove(key);
+		return existing == null ? null : existing.get();
+	}
+
+	public int size() {
+		return map.size();
+	}
+
+	public Collection<V> values() {
+		Collection<WeakReference<V>> results = map.values();
+		Set<V> copy = new HashSet<V>(results.size());
+		for (WeakReference<V> resultRef : results) {
+			V result = resultRef == null ? null : resultRef.get();
+			if (result != null) copy.add(result);
+		}
+		return copy;
+	}
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-10 09:03:21 UTC (rev 20837)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-10 11:28:08 UTC (rev 20838)
@@ -1,14 +1,17 @@
 package org.strategoxt.imp.runtime.dynamicloading;
 
-import static org.spoofax.interpreter.core.Tools.*;
-import static org.strategoxt.imp.runtime.dynamicloading.TermReader.*;
+import static org.spoofax.interpreter.core.Tools.termAt;
+import static org.strategoxt.imp.runtime.dynamicloading.TermReader.collectTerms;
+import static org.strategoxt.imp.runtime.dynamicloading.TermReader.concatTermStrings;
+import static org.strategoxt.imp.runtime.dynamicloading.TermReader.cons;
+import static org.strategoxt.imp.runtime.dynamicloading.TermReader.findTerm;
+import static org.strategoxt.imp.runtime.dynamicloading.TermReader.termContents;
 
 import java.io.BufferedInputStream;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileNotFoundException;
 import java.io.InputStream;
-import java.lang.ref.WeakReference;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.HashMap;
@@ -30,6 +33,7 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.RuntimeActivator;
+import org.strategoxt.imp.runtime.WeakWeakMap;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
 
@@ -52,14 +56,14 @@
 	private final Map<IDynamicLanguageService, Object> activeServices =
 		Collections.synchronizedMap(new WeakHashMap<IDynamicLanguageService, Object>());
 	
-	/**
+	/*
 	 * We have to use a WeakReference here, because there's many references from a value to its key.
 	 * For example, many language services have a reference to an AST node, which (eventually) has a reference to
 	 * the root ast node, which has a reference back to the SGLRParseController. See the implementation note on
 	 * http://java.sun.com/j2se/1.5.0/docs/api/java/util/WeakHashMap.html
 	 */
-	private final Map<SGLRParseController, WeakReference<Map<Class<? extends ILanguageService>, ILanguageService>>> cachedServices =
-		Collections.synchronizedMap(new WeakHashMap<SGLRParseController, WeakReference<Map<Class<? extends ILanguageService>, ILanguageService>>>());
+	private final Map<SGLRParseController, Map<Class, ILanguageService>> cachedServices =
+		Collections.synchronizedMap(new WeakWeakMap<SGLRParseController, Map<Class, ILanguageService>>());
 	
 	private final List<AbstractServiceFactory> serviceFactories = new ArrayList<AbstractServiceFactory>();
 	
@@ -165,27 +169,22 @@
 		else
 			throw new IllegalStateException("Could not create an editor service for " + type.getSimpleName());
 	}
-
-	private Map<Class<? extends ILanguageService>, ILanguageService> getCachedServicesForController(SGLRParseController controller) {
-		WeakReference<Map<Class<? extends ILanguageService>, ILanguageService>> ref = this.cachedServices.get(controller);
-		return ref != null ? ref.get() : null;
-	}
 	
 	@SuppressWarnings("unchecked")
-	private <T> T getCachedService(Class<T> type, SGLRParseController controller) {
-		Map<Class<? extends ILanguageService>, ILanguageService> cache = getCachedServicesForController(controller);
+	private<T> T getCachedService(Class<T> type, SGLRParseController controller) {
+		Map<Class, ILanguageService> cache = cachedServices.get(controller);
 		T result = cache == null ? null : (T) cache.get(type);
 		return result;
 	}
 
-	private <T extends ILanguageService> void addKnownService(Class<T> type, SGLRParseController controller, ILanguageService service, boolean isCached) {
+	private void addKnownService(Class type, SGLRParseController controller, ILanguageService service, boolean isCached) {
 		if (service instanceof IDynamicLanguageService)
 			activeServices.put((IDynamicLanguageService) service, null);
 		if (isCached) {
-			Map<Class<? extends ILanguageService>, ILanguageService> cache = getCachedServicesForController(controller);
+			Map<Class, ILanguageService> cache = cachedServices.get(controller);
 			if (cache == null) {
-				cache = Collections.synchronizedMap(new HashMap<Class<? extends ILanguageService>, ILanguageService>());
-				cachedServices.put(controller, new WeakReference<Map<Class<? extends ILanguageService>, ILanguageService>>(cache));
+				cache = Collections.synchronizedMap(new HashMap<Class, ILanguageService>());
+				cachedServices.put(controller, cache);
 			}
 			cache.put(type, service);
 		}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorFactory.java	2010-05-10 09:03:21 UTC (rev 20837)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorFactory.java	2010-05-10 11:28:08 UTC (rev 20838)
@@ -11,7 +11,6 @@
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.imp.language.Language;
-import org.jboss.util.collection.WeakValueHashMap;
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.jsglr.InvalidParseTableException;
 import org.spoofax.jsglr.ParseTable;
@@ -20,6 +19,7 @@
 import org.strategoxt.imp.runtime.Debug;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.JSGLRI;
+import org.strategoxt.lang.WeakValueHashMap;
 import org.strategoxt.lang.terms.BAFReader;
 
 /**

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java	2010-05-10 09:03:21 UTC (rev 20837)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java	2010-05-10 11:28:08 UTC (rev 20838)
@@ -8,13 +8,13 @@
 import static org.strategoxt.imp.runtime.dynamicloading.TermReader.findTerm;
 
 import java.util.Map;
-import java.util.WeakHashMap;
 
 import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.imp.parser.IParseController;
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.WeakWeakMap;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 import org.strategoxt.imp.runtime.services.OnSaveService;
 import org.strategoxt.imp.runtime.services.StrategoObserver;
@@ -25,7 +25,7 @@
 public class OnSaveServiceFactory extends AbstractServiceFactory<OnSaveService> {
 	
 	private static final Map<UniversalEditor, OnSaveService> registeredServices =
-		synchronizedMap(new WeakHashMap<UniversalEditor, OnSaveService>());
+		synchronizedMap(new WeakWeakMap<UniversalEditor, OnSaveService>());
 
 	public OnSaveServiceFactory() {
 		super(OnSaveService.class, false);
@@ -43,7 +43,7 @@
 		return new OnSaveService(feedback, function);
 	}
 
-	public static void eagerInit(Descriptor descriptor, IParseController controller,
+	public static synchronized void eagerInit(Descriptor descriptor, IParseController controller,
 			EditorState editor) {
 		
 		try {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java	2010-05-10 09:03:21 UTC (rev 20837)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java	2010-05-10 11:28:08 UTC (rev 20838)
@@ -17,7 +17,6 @@
 import org.eclipse.core.runtime.NullProgressMonitor;
 import org.eclipse.core.runtime.OperationCanceledException;
 import org.eclipse.imp.parser.IParser;
-import org.jboss.util.collection.WeakValueHashMap;
 import org.spoofax.jsglr.BadTokenException;
 import org.spoofax.jsglr.SGLRException;
 import org.spoofax.jsglr.TokenExpectedException;
@@ -29,6 +28,7 @@
 import org.strategoxt.imp.runtime.parser.tokens.SGLRTokenizer;
 import org.strategoxt.imp.runtime.parser.tokens.TokenKind;
 import org.strategoxt.imp.runtime.parser.tokens.TokenKindManager;
+import org.strategoxt.lang.WeakValueHashMap;
 
 import aterm.ATerm;
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java	2010-05-10 09:03:21 UTC (rev 20837)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java	2010-05-10 11:28:08 UTC (rev 20838)
@@ -1,8 +1,6 @@
 package org.strategoxt.imp.runtime.services;
 
-import java.util.Map;
 import java.util.Set;
-import java.util.WeakHashMap;
 import java.util.regex.Pattern;
 
 import org.eclipse.jface.text.BadLocationException;
@@ -12,6 +10,7 @@
 import org.eclipse.jface.text.TextEvent;
 import org.eclipse.jface.text.source.ISourceViewer;
 import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.WeakWeakMap;
 
 /**
  * Activates the content proposer based on text events.
@@ -20,8 +19,8 @@
  */
 public class ContentProposerListener implements ITextListener {
 	
-	private static final Map<ISourceViewer, ContentProposerListener> asyncListeners =
-		new WeakHashMap<ISourceViewer, ContentProposerListener>();
+	private static final WeakWeakMap<ISourceViewer, ContentProposerListener> asyncListeners =
+		new WeakWeakMap<ISourceViewer, ContentProposerListener>();
 	
 	private final Set<Pattern> patterns;
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java	2010-05-10 09:03:21 UTC (rev 20837)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java	2010-05-10 11:28:08 UTC (rev 20838)
@@ -1,8 +1,6 @@
 package org.strategoxt.imp.runtime.services;
 
 import java.lang.ref.WeakReference;
-import java.util.Map;
-import java.util.WeakHashMap;
 
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.runtime.IProgressMonitor;
@@ -12,6 +10,7 @@
 import org.eclipse.ui.IEditorPart;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.WeakWeakMap;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
@@ -24,8 +23,8 @@
 	/**
 	 * Maps target editors to their builder listener.
 	 */
-	private static final Map<IEditorPart, StrategoBuilderListener> asyncListeners =
-		new WeakHashMap<IEditorPart, StrategoBuilderListener>();
+	private static final WeakWeakMap<IEditorPart, StrategoBuilderListener> asyncListeners =
+		new WeakWeakMap<IEditorPart, StrategoBuilderListener>();
 	
 	private final String builder;
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-10 09:03:21 UTC (rev 20837)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-10 11:28:08 UTC (rev 20838)
@@ -46,6 +46,7 @@
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.SWTSafeLock;
+import org.strategoxt.imp.runtime.WeakWeakMap;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 import org.strategoxt.imp.runtime.dynamicloading.IDynamicLanguageService;
@@ -76,7 +77,7 @@
 	public static final int OBSERVER_DELAY = 600;
 	
 	private static Map<Descriptor, HybridInterpreter> cachedRuntimes =
-		Collections.synchronizedMap(new WeakHashMap<Descriptor, HybridInterpreter>());
+		Collections.synchronizedMap(new WeakWeakMap<Descriptor, HybridInterpreter>());
 	
 	private final Map<IResource, IStrategoTerm> resultingAsts =
 		new WeakHashMap<IResource, IStrategoTerm>();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java	2010-05-10 09:03:21 UTC (rev 20837)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java	2010-05-10 11:28:08 UTC (rev 20838)
@@ -32,8 +32,8 @@
 	
 	private final SourceMappings mappings;
 	
-	private Map<ParseTable, ParseTable> isNoRecoveryWarned =
-		new WeakHashMap<ParseTable, ParseTable>();
+	private Map<ParseTable, Object> isNoRecoveryWarned =
+		new WeakHashMap<ParseTable, Object>();
 
 	protected IMPParseStringPTPrimitive(ATermFactory atermFactory, Disambiguator filterSettings, 
 			SourceMappings mappings) {
@@ -59,7 +59,7 @@
 			assert table.hashCode() == System.identityHashCode(table);
 			if (!isNoRecoveryWarned.containsKey(table)) {
 				Environment.logException(NAME + ": warning - no recovery rules available in parse table", e);
-				isNoRecoveryWarned.put(table, table);
+				isNoRecoveryWarned.put(table, null);
 			}
 		}
 		char[] inputChars = input.toCharArray();



From L.C.L.Kats at tudelft.nl  Mon May 10 13:37:47 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 10 May 2010 11:37:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20839 - LennartKats -
	in spoofax-imp/trunk/org.strategoxt.imp.nativebundle: .
	native native/windows
Message-ID: <201005101137.o4ABblYF025116@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-10 11:37:47 +0000 (Mon, 10 May 2010)
New Revision: 20839

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20839&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/windows/
   spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/windows/implodePT.exe
   spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/windows/sdf2table.exe
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.nativebundle/build.properties

Log:
Added natively compiled SDF executables created by Rob. Not used yet: needs testing (scared to break anything at this point).

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.nativebundle/build.properties
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.nativebundle/build.properties	2010-05-10 11:28:08 UTC (rev 20838)
+++ spoofax-imp/trunk/org.strategoxt.imp.nativebundle/build.properties	2010-05-10 11:37:47 UTC (rev 20839)
@@ -6,4 +6,5 @@
 bin.excludes = native/macosx/.svn/,\
                native/linux/.svn/,\
                native/cygwin/.svn/,\
-               native/.svn/
+               native/.svn/,\
+               native/windows

Added: spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/windows/implodePT.exe
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/windows/implodePT.exe
___________________________________________________________________
Added: svn:executable
   + *
Added: svn:mime-type
   + application/octet-stream

Added: spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/windows/sdf2table.exe
===================================================================
(Binary files differ)


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.nativebundle/native/windows/sdf2table.exe
___________________________________________________________________
Added: svn:executable
   + *
Added: svn:mime-type
   + application/octet-stream



From L.C.L.Kats at tudelft.nl  Mon May 10 14:11:35 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 10 May 2010 12:11:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20840 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.sdf org.strategoxt.imp.editors.sdf/lib
	org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.editors.stratego/lib
	org.strategoxt.imp.feature org.strategoxt.imp.runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	org.strategoxt.imp.updatesite
Message-ID: <201005101211.o4ACBZE2025586@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-10 12:11:35 +0000 (Mon, 10 May 2010)
New Revision: 20840

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20840&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
- Release 0.4.6
- Include stack traces in error log again

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-10 11:37:47 UTC (rev 20839)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-10 12:11:35 UTC (rev 20840)
@@ -24,6 +24,7 @@
         <mkdir dir="${dist}"/>
         <mkdir dir="${include}"/>
         <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
 
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-10 11:37:47 UTC (rev 20839)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-10 12:11:35 UTC (rev 20840)
@@ -24,6 +24,7 @@
         <mkdir dir="${dist}"/>
         <mkdir dir="${include}"/>
         <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
 
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-10 11:37:47 UTC (rev 20839)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-10 12:11:35 UTC (rev 20840)
@@ -24,6 +24,7 @@
         <mkdir dir="${dist}"/>
         <mkdir dir="${include}"/>
         <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
 
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-10 11:37:47 UTC (rev 20839)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-10 12:11:35 UTC (rev 20840)
@@ -24,6 +24,7 @@
         <mkdir dir="${dist}"/>
         <mkdir dir="${include}"/>
         <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
 
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	2010-05-10 11:37:47 UTC (rev 20839)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	2010-05-10 12:11:35 UTC (rev 20840)
@@ -80,7 +80,7 @@
         readdir;
         list-loop(
           if is-source-file then
-            <open-import(resolve-path, parse-file, record-declarations)>
+            <open-import(id, parse-file, record-declarations)>
               $[[path]/[<id>]]
           <+
             try(?one-failed)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-10 11:37:47 UTC (rev 20839)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-10 12:11:35 UTC (rev 20840)
@@ -24,6 +24,7 @@
         <mkdir dir="${dist}"/>
         <mkdir dir="${include}"/>
         <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
 
         <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
         

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	2010-05-10 11:37:47 UTC (rev 20839)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/editor-common.generated.str	2010-05-10 12:11:35 UTC (rev 20840)
@@ -80,7 +80,7 @@
         readdir;
         list-loop(
           if is-source-file then
-            <open-import(resolve-path, parse-file, record-declarations)>
+            <open-import(id, parse-file, record-declarations)>
               $[[path]/[<id>]]
           <+
             try(?one-failed)

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-10 11:37:47 UTC (rev 20839)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-10 12:11:35 UTC (rev 20840)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.5.3"
+      version="0.4.6"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/build.properties
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/build.properties	2010-05-10 11:37:47 UTC (rev 20839)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/build.properties	2010-05-10 12:11:35 UTC (rev 20840)
@@ -1,4 +1,4 @@
-source.. = src/, lib/
+source.. = src/
 output.. = bin/
 bin.includes = META-INF/,\
                plugin.xml,\

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-10 11:37:47 UTC (rev 20839)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-10 12:11:35 UTC (rev 20840)
@@ -299,7 +299,7 @@
 			t.printStackTrace();
 		}
 		if (message == null) message = t.getLocalizedMessage() == null ? t.getMessage() : t.getLocalizedMessage();
-		Status status = new Status(IStatus.ERROR, RuntimeActivator.PLUGIN_ID, 0, message, null);
+		Status status = new Status(IStatus.ERROR, RuntimeActivator.PLUGIN_ID, 0, message, t);
 		RuntimeActivator activator = RuntimeActivator.getInstance();
 		if (activator != null) activator.getLog().log(status);
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-10 11:37:47 UTC (rev 20839)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-10 12:11:35 UTC (rev 20840)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.5.3.jar" id="org.strategoxt.imp" version="0.4.5.3">
+   <feature url="features/org.strategoxt.imp_0.4.6.jar" id="org.strategoxt.imp" version="0.4.6">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From m.dejonge at tudelft.nl  Tue May 11 16:21:25 2010
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Tue, 11 May 2010 14:21:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20841 - MaartjeDeJonge -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201005111421.o4BELP1G016940@proliant.st.ewi.tudelft.nl>

Author: MaartjeDeJonge
Date: 2010-05-11 14:21:24 +0000 (Tue, 11 May 2010)
New Revision: 20841

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20841&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java

Log:


Changes:

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java	2010-05-11 14:21:24 UTC (rev 20841)
@@ -0,0 +1,73 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import org.eclipse.jface.dialogs.InputDialog;
+import org.eclipse.swt.widgets.Display;
+import org.eclipse.swt.widgets.Shell;
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.Environment;
+
+import static org.spoofax.interpreter.core.Tools.*;
+
+//example: div = ?(x,y); (prim("SSL_divi",x,y) <+ prim("SSL_divr",x,y))
+//example: opendialog = prim("SSL_EXT_opendialog",id,"bla") 
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class DialogPrimitive extends AbstractPrimitive {
+
+	public DialogPrimitive() {
+		super("SSL_EXT_opendialog", 0, 3); //geef strategien mee (1) en termen (3 -> title, old-name,--)
+	}
+	
+	@Override
+	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars)
+			throws InterpreterException {
+		
+		//test input
+		//if (!is..(svars[0])) return false;
+		if (!isTermString(tvars[0]) && !isTermList(tvars[0])) return false;
+		if (!isTermString(tvars[1])) return false;
+		if (!isTermString(tvars[2])) return false;
+		
+		//geef goede namen
+		IStrategoString title = (IStrategoString)tvars[0]; 
+		IStrategoString message = (IStrategoString)tvars[1];
+		IStrategoString input = (IStrategoString)tvars[2]; 
+		
+		
+		synchronized (Environment.getSyncRoot()) {
+			InputDialog dialog = new InputDialog(null, title.stringValue(), message.stringValue(), input.stringValue(), null);
+			if (dialog.open() == InputDialog.OK) {				
+				System.out.println("GELUKT");
+				String userInput=dialog.getValue();		
+				env.setCurrent(env.getFactory().makeString(userInput));
+				return true;
+			} 
+		}
+		return false;
+		/*
+		synchronized (Environment.getSyncRoot()) {
+			//open dialog
+			Display display = new Display();
+		    final Shell shell = new Shell(display);
+			RenameDialog dialog=new RenameDialog(shell);
+			dialog.setText(title.stringValue());
+			dialog.setMessage(message.stringValue());
+			dialog.setInput(input.stringValue());
+			String userInput=dialog.open();		
+			env.setCurrent(env.getFactory().makeString(userInput));		
+		}*/		
+	}
+
+	
+
+	
+
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java
___________________________________________________________________
Added: svn:mime-type
   + text/plain

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-05-10 12:11:35 UTC (rev 20840)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java	2010-05-11 14:21:24 UTC (rev 20841)
@@ -10,6 +10,7 @@
 	public static final String REGISTRY_NAME = "sdf2imp";
 	
 	public IMPLibrary() {
+		add(new DialogPrimitive());
 		add(new SubtermPrimitive());
 		add(new ProjectPathPrimitive());
 		add(new RefreshResourcePrimitive());

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-05-10 12:11:35 UTC (rev 20840)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java	2010-05-11 14:21:24 UTC (rev 20841)
@@ -21,6 +21,7 @@
  * a. (AstNode, "textfragment") of 
  * b. ((offset, end-offset), "textfragment") of
  * c. ((l, c, end-l, end-c), "textfragment")
+ * d. ("textfragment")
  * @author Maartje de Jonge
  */
 public class TextChangePrimitive extends AbstractPrimitive {
@@ -33,15 +34,19 @@
 	
 	@Override
 	public final boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
-		if (tvars.length!=2 || !isTermString(tvars[1]))
-			return false;
-		if(!(tvars[0] instanceof IWrappedAstNode || islocationTuple(tvars[0])))
-			return false;
 		EditorState editor = EditorState.getActiveEditor();
 		ILexStream lexStream= editor.getParseController().getCurrentAst().getLeftIToken().getILexStream();
 		int position_start = -1;
 		int position_end = -1;
-		if(tvars[0] instanceof IWrappedAstNode){
+		if (tvars.length!=2 || !isTermString(tvars[1]))
+			return false;
+		if(!(tvars[0] instanceof IWrappedAstNode || islocationTuple(tvars[0]) || isEmptyString(tvars[0])))
+			return false;
+		if (isTermString(tvars[0])){
+			position_start = 0;
+			position_end= lexStream.getStreamLength()-1;
+		}
+		else if(tvars[0] instanceof IWrappedAstNode){
 			position_start=TextPositions.getStartPosNode(((IWrappedAstNode)tvars[0]).getNode());
 			position_end=TextPositions.getEndPosNode(((IWrappedAstNode)tvars[0]).getNode());
 		}
@@ -60,11 +65,20 @@
 				position_end=lexStream.getLineOffset(line_end)+col_end+1;
 			}
 		}
+		if(TextPositions.isUnvalidInterval(position_start, position_end, lexStream))
+			return false;
 		String text = ((IStrategoString)tvars[1]).stringValue();
+		return applyTextChange(editor, position_start, position_end, text);
+	}
+
+	private boolean isEmptyString(IStrategoTerm tvar) {
+		return (isTermString(tvar) && ((IStrategoString)tvar).stringValue().equals(""));
+	}
+
+	private boolean applyTextChange(EditorState editor, int position_start, int position_end,
+			String text) {
 		try {
 			IDocument doc = editor.getDocument();
-			if(TextPositions.isUnvalidInterval(position_start, position_end, lexStream))
-				return false;
 			doc.replace(position_start, position_end-position_start, text);
 		} 
 		catch (BadLocationException e) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java	2010-05-10 12:11:35 UTC (rev 20840)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java	2010-05-11 14:21:24 UTC (rev 20841)
@@ -109,10 +109,13 @@
 		int lineNr=endTok.getEndLine();
 		IToken nextTok=tokStream.getTokenAt(endTok.getTokenIndex()+1);
 		while(nextTok.getTokenIndex()<tokStream.getTokens().size()-1){
-			if(nextTok.getLine()>lineNr)
-				return tokStream.getLineOffset(lineNr)+1;
-			if(!SGLRToken.isWhiteSpace(nextTok))
-				return nextTok.getStartOffset();
+			//if(nextTok.getLine()>lineNr)
+				//return tokStream.getLineOffset(lineNr)+1;
+			if(!SGLRToken.isWhiteSpace(nextTok)){
+				if(nextTok.getLine() == endTok.getEndLine())
+					return nextTok.getStartOffset();
+				return tokStream.getLineOffset(nextTok.getLine()-1)+1;
+			}
 			nextTok=tokStream.getTokenAt(nextTok.getTokenIndex()+1);
 		}
 		if(isLayout(nextTok))



From L.C.L.Kats at tudelft.nl  Wed May 12 11:16:28 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 12 May 2010 09:16:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20842 - LennartKats -
	in spoofax-imp/trunk/org.strategoxt.imp.runtime: .
	src/org/strategoxt/imp/runtime/services
Message-ID: <201005120916.o4C9GSBN031815@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-12 09:16:28 +0000 (Wed, 12 May 2010)
New Revision: 20842

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20842&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java

Log:
Eclipse classpath fix

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/.classpath
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/.classpath	2010-05-11 14:21:24 UTC (rev 20841)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/.classpath	2010-05-12 09:16:28 UTC (rev 20842)
@@ -3,6 +3,5 @@
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="src" path="lib"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-11 14:21:24 UTC (rev 20841)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-12 09:16:28 UTC (rev 20842)
@@ -197,7 +197,7 @@
 						factory.makeString(descriptor.getLanguage().getName()));
 				set_config_0_0.instance.invoke(runtime.getCompiledContext(), programName);
 			} catch (BadDescriptorException e) {
-				// Ignore
+				// Ignore; use default program name
 			}
 			monitor.subTask("Loading analysis runtime components");
 		}



From L.C.L.Kats at tudelft.nl  Wed May 12 15:49:18 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 12 May 2010 13:49:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20843 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans
Message-ID: <201005121349.o4CDnIge004293@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-12 13:49:18 +0000 (Wed, 12 May 2010)
New Revision: 20843

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20843&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str

Log:
Report StrategoXT/817 as an error for now.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-12 09:16:28 UTC (rev 20842)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-12 13:49:18 UTC (rev 20843)
@@ -9,17 +9,17 @@
 
 rules
 
-  // TODO: Report actual SDF errors
-  // TODO: Warn for A ( "," A )* instead of { A "," }*  
+  // TODO: Report proper SDF errors  
 
   editor-analyze:
-    (ast, path, project-path) -> ([], warnings, [])
+    (ast, path, project-path) -> (errors, warnings, [])
     with
       // Ensure all dynamic rules are properly scoped
       try(dr-scope-all-end);
       dr-scope-all-start
     with
       analyze-ast;
+      errors   := <collect(?context-free-syntax(<collect-om(context-free-syntax-error)>))> ast;
       // We only collect-om since we don't want inner warning dupes
       warnings := <collect(?context-free-syntax(<collect-om(context-free-syntax-warning)>))> ast
 
@@ -55,15 +55,22 @@
     alt(x, y) -> (<id>, $[The | construct is deprecated: instead of A|B->C use A->C B->C])
 
   context-free-syntax-warning:
-    seq(_ ,_) -> (<id>, $[Extract sequences of patterns to separate productions to ensure acceptable abstract syntax])
+    seq(_, _) -> (<id>, $[Extract sequences of patterns to separate productions to ensure acceptable abstract syntax])
     where
       occurrences(sort(id)) => 1
 
   context-free-syntax-warning:
-    seq(_ ,_) -> (<id>, $[Extract sequences of patterns to separate productions to ensure acceptable abstract syntax])
+    seq(_, _) -> (<id>, $[Extract sequences of patterns to separate productions to ensure acceptable abstract syntax])
     where
       occurrences(sort(id)) => 1
 
+  // StrategoXT/817
+  context-free-syntax-error:
+    < ?iter-star(s) + ?iter(s) + ?iter-star-sep(s,_) + ?iter-sep(s,_)> ->
+    (s, $[At least one non-terminal expected])
+    where
+      occurrences(sort(id)) => 0
+
   context-free-syntax-warning:
     [sort(x), bad @ iter-star(seq(lit(sep), [sort(x)])) | _] ->
     (<id>, $[Use {[x] [sep]}+ instead for [sep]-separated lists])



From L.C.L.Kats at tudelft.nl  Wed May 12 16:14:42 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 12 May 2010 14:14:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20844 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans
Message-ID: <201005121414.o4CEEgIX004797@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-12 14:14:42 +0000 (Wed, 12 May 2010)
New Revision: 20844

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20844&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str

Log:
Some more SDF warnings

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-12 13:49:18 UTC (rev 20843)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-12 14:14:42 UTC (rev 20844)
@@ -57,22 +57,30 @@
   context-free-syntax-warning:
     seq(_, _) -> (<id>, $[Extract sequences of patterns to separate productions to ensure acceptable abstract syntax])
     where
-      occurrences(sort(id)) => 1
+      occurrences(is-non-terminal) => 1
 
   context-free-syntax-warning:
     seq(_, _) -> (<id>, $[Extract sequences of patterns to separate productions to ensure acceptable abstract syntax])
     where
-      occurrences(sort(id)) => 1
+      occurrences(is-non-terminal) => 1
 
   // StrategoXT/817
   context-free-syntax-error:
-    < ?iter-star(s) + ?iter(s) + ?iter-star-sep(s,_) + ?iter-sep(s,_)> ->
+    <?iter-star(s) + ?iter(s) + ?iter-star-sep(s,_) + ?iter-sep(s,_)> ->
     (s, $[At least one non-terminal expected])
     where
-      occurrences(sort(id)) => 0
+      <occurrences(is-non-terminal)> s => 0
+  
+  /**
+   * Tests if something is a non-terminal in terms of the AST produced.
+   */
+  is-non-terminal =
+    ?sort(_) + ?opt(_) + ?iter(_) + ?iter-star(_) + ?iter-sep(_, _) + ?iter-star-sep(_, _)
+  
+  // Instruct users to use { X "," }*
 
   context-free-syntax-warning:
-    [sort(x), bad @ iter-star(seq(lit(sep), [sort(x)])) | _] ->
+    [sort(x), iter-star(seq(lit(sep), [sort(x)])) | _] ->
     (<id>, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
 
   context-free-syntax-warning:
@@ -86,10 +94,24 @@
   context-free-syntax-warning:
     [iter-star(seq(sort(x), [lit(sep)])), opt(sort(x)) | _] ->
     (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
+       
+  // Instruct users to use { X ","? }* (seen in MDSD 2010)
 
   context-free-syntax-warning:
-    [iter-star(seq(sort(x), [lit(sep)])), opt(sort(x)) | _] ->
-    (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
+    [sort(x), iter-star(seq(opt(lit(sep)), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [opt(lit(sep))])), sort(x) | _] ->
+    (<id>, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    [opt(sort(x)), iter-star(seq(opt(lit(sep)), [sort(x)])) | _] ->
+    (<id>, $[Use {[x] [sep]?}* instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    [iter-star(seq(sort(x), [opt(lit(sep))])), opt(sort(x)) | _] ->
+    (<id>, $[Use {[x] [sep]?}* instead for [sep]?-separated lists])
   
   context-free-syntax-warning:
     iter-sep(_, bad @ sort(_)) -> (bad, "Non-terminal used as a list separator (use round braces for grouping non-terminals)") 



From L.C.L.Kats at tudelft.nl  Wed May 12 16:41:37 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 12 May 2010 14:41:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20845 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.stratego/trans
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
	org.strategoxt.imp.updatesite
Message-ID: <201005121441.o4CEfbK5005092@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-12 14:41:37 +0000 (Wed, 12 May 2010)
New Revision: 20845

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20845&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Better handling of congruences in the Stratego editor, so it can distinguish between local variables and strategies:

  a := 1;
  a


now reports an error if 'a' is not a strategy.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-12 14:14:42 UTC (rev 20844)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-12 14:41:37 UTC (rev 20845)
@@ -54,12 +54,6 @@
   signature-of:
     CallT(SVar(x), s*, t*) -> (<remove-quote> x, <length> s*, <length> t*)
 
-  signature-of-congruence:
-    CallT(SVar(x), s*, []) -> (<remove-quote> x, <length> s*) 
-
-  signature-of-congruence:
-    SDefT(x, s*, t*, []) -> (<remove-quote> x, <length> s*) 
-
   signature-of:
     Var(x) -> (<remove-quote> x, 0)
 
@@ -110,13 +104,9 @@
 
   declare-cookie-of =
     signature-of; DeclareCookie
-  <+
-    signature-of-congruence; DeclareCookie
 
   declaration-of =
     signature-of; (?_{<Declaration>} <+ ?(_{<Declaration>}, _) <+ ?(_{<Declaration>}, _, _))
-  <+
-    signature-of-congruence => (_{<Declaration>}, _)
 
 rules // Helpers
   
@@ -172,7 +162,15 @@
   declare-globals:
     OpDecl(x, t) -> OpDecl(x', t)
     with
-      x' := x{<redeclare-definition>}
+      cookie := <redeclare-definition>;
+      x'     := x{cookie}
+    with
+      // Declare congruence
+      (x, n) := <signature-of>;
+      sig'   := (x, n, 0);
+      rules(
+        DeclareCookie: sig' -> cookie
+      )
 
   declare-globals:
     ExtOpDecl(x, t) -> <id>

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java	2010-05-12 14:14:42 UTC (rev 20844)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/DialogPrimitive.java	2010-05-12 14:41:37 UTC (rev 20845)
@@ -1,24 +1,22 @@
 package org.strategoxt.imp.runtime.stratego;
 
+import static org.spoofax.interpreter.core.Tools.isTermList;
+import static org.spoofax.interpreter.core.Tools.isTermString;
+
 import org.eclipse.jface.dialogs.InputDialog;
-import org.eclipse.swt.widgets.Display;
-import org.eclipse.swt.widgets.Shell;
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
 import org.spoofax.interpreter.library.AbstractPrimitive;
 import org.spoofax.interpreter.stratego.Strategy;
 import org.spoofax.interpreter.terms.IStrategoString;
 import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
 
-import static org.spoofax.interpreter.core.Tools.*;
-
 //example: div = ?(x,y); (prim("SSL_divi",x,y) <+ prim("SSL_divr",x,y))
 //example: opendialog = prim("SSL_EXT_opendialog",id,"bla") 
 
 /**
- * @author Lennart Kats <lennart add lclnet.nl>
+ * @author Maartje de Jonge
  */
 public class DialogPrimitive extends AbstractPrimitive {
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java	2010-05-12 14:14:42 UTC (rev 20844)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextPositions.java	2010-05-12 14:41:37 UTC (rev 20845)
@@ -106,7 +106,7 @@
 			endTok=node.getRightIToken();
 		}
 		IPrsStream tokStream=endTok.getIPrsStream();
-		int lineNr=endTok.getEndLine();
+		// int lineNr=endTok.getEndLine();
 		IToken nextTok=tokStream.getTokenAt(endTok.getTokenIndex()+1);
 		while(nextTok.getTokenIndex()<tokStream.getTokens().size()-1){
 			//if(nextTok.getLine()>lineNr)

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-12 14:14:42 UTC (rev 20844)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-12 14:41:37 UTC (rev 20845)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.6.jar" id="org.strategoxt.imp" version="0.4.6">
+   <feature url="features/org.strategoxt.imp_0.4.7.jar" id="org.strategoxt.imp" version="0.4.7">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Wed May 12 16:42:29 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 12 May 2010 14:42:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20846 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.updatesite
Message-ID: <201005121442.o4CEgTe3005098@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-12 14:42:29 +0000 (Wed, 12 May 2010)
New Revision: 20846

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20846&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
rv: still at 0.4.6+

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-12 14:41:37 UTC (rev 20845)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-12 14:42:29 UTC (rev 20846)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.7.jar" id="org.strategoxt.imp" version="0.4.7">
+   <feature url="features/org.strategoxt.imp_0.4.6.jar" id="org.strategoxt.imp" version="0.4.6">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Fri May 14 19:54:04 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 14 May 2010 17:54:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20847 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans
Message-ID: <201005141754.o4EHs4QI011044@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-14 17:54:04 +0000 (Fri, 14 May 2010)
New Revision: 20847

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20847&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str

Log:
Relaxed SDF sequence warning a bit

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-12 14:42:29 UTC (rev 20846)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-14 17:54:04 UTC (rev 20847)
@@ -55,15 +55,10 @@
     alt(x, y) -> (<id>, $[The | construct is deprecated: instead of A|B->C use A->C B->C])
 
   context-free-syntax-warning:
-    seq(_, _) -> (<id>, $[Extract sequences of patterns to separate productions to ensure acceptable abstract syntax])
+    opt(s @ seq(_, _)) -> (s, $[Extract sequence in optional to separate productions to ensure acceptable abstract syntax])
     where
-      occurrences(is-non-terminal) => 1
+      <occurrences(is-non-terminal)> s => 1
 
-  context-free-syntax-warning:
-    seq(_, _) -> (<id>, $[Extract sequences of patterns to separate productions to ensure acceptable abstract syntax])
-    where
-      occurrences(is-non-terminal) => 1
-
   // StrategoXT/817
   context-free-syntax-error:
     <?iter-star(s) + ?iter(s) + ?iter-star-sep(s,_) + ?iter-sep(s,_)> ->



From L.C.L.Kats at tudelft.nl  Fri May 14 19:54:34 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 14 May 2010 17:54:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20848 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	. parser
Message-ID: <201005141754.o4EHsYax011049@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-14 17:54:34 +0000 (Fri, 14 May 2010)
New Revision: 20848

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20848&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java

Log:
Spoofax/123: An exception is reported if the descriptor refers to a start symbol that does not exist

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-14 17:54:04 UTC (rev 20847)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-14 17:54:34 UTC (rev 20848)
@@ -313,8 +313,12 @@
 	}
 	
 	public static void logWarning(String message) {
+		logWarning(message, new RuntimeException(message));
+	}
+	
+	public static void logWarning(String message, Exception e) {
 		if (Debug.ENABLED) STDERR.println("Warning: " + message);
-		Status status = new Status(IStatus.WARNING, RuntimeActivator.PLUGIN_ID, 0, message, new RuntimeException(message));
+		Status status = new Status(IStatus.WARNING, RuntimeActivator.PLUGIN_ID, 0, message, e);
 		RuntimeActivator activator = RuntimeActivator.getInstance();
 		if (activator != null) activator.getLog().log(status);
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-05-14 17:54:04 UTC (rev 20847)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-05-14 17:54:34 UTC (rev 20848)
@@ -295,11 +295,12 @@
 			if (metaFile != null) {
 				// Unmanaged parse tables may have different start symbols;
 				// try again without the standard start symbol
-				parser.setStartSymbol(null);
-				return parser.parseNoImplode(inputChars, filename);
 			} else {
-				throw new SGLRException(e.getParser(), e.getMessage(), e);
+				// Be forgiving: user probably specified an inconsistent strat symbol in the ESV
+				Environment.logWarning("Incorrect start symbol specified in editor descriptor", e);
 			}
+			parser.setStartSymbol(null);
+			return parser.parseNoImplode(inputChars, filename);
 		}
 	}
 



From L.C.L.Kats at tudelft.nl  Mon May 17 10:33:53 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 17 May 2010 08:33:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20849 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
Message-ID: <201005170833.o4H8XrMW018923@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-17 08:33:52 +0000 (Mon, 17 May 2010)
New Revision: 20849

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20849&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java

Log:
Spoofax/122: Only report specific syntax errors for regions that failed to parse

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-05-14 17:54:34 UTC (rev 20848)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ParseErrorHandler.java	2010-05-17 08:33:52 UTC (rev 20849)
@@ -415,8 +415,8 @@
 			}
 		}
 		tokenizer.changeTokenKinds(beginSkipped, endSkipped, TokenKind.TK_LAYOUT, TokenKind.TK_ERROR);
-		if (!reportedErrors || tokenizer.getLexStream().getLineNumberOfCharAt(beginSkipped) !=
-				tokenizer.getLexStream().getLineNumberOfCharAt(endSkipped)) {
+		if (!reportedErrors) {
+			// report entire region
 			reportErrorAtTokens(token, token, UNEXPECTED_REGION);
 		}
 	}



From L.C.L.Kats at tudelft.nl  Mon May 17 12:31:46 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 17 May 2010 10:31:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20850 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.sdf org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <201005171031.o4HAVkKU021555@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-17 10:31:45 +0000 (Mon, 17 May 2010)
New Revision: 20850

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20850&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str

Log:
Clean build fix

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-17 08:33:52 UTC (rev 20849)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-17 10:31:45 UTC (rev 20850)
@@ -37,6 +37,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -46,6 +47,7 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -304,6 +306,9 @@
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
+            <delete>
+              <fileset dir="${build}" includes="trans/**"/>
+            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-17 08:33:52 UTC (rev 20849)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-17 10:31:45 UTC (rev 20850)
@@ -37,6 +37,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -46,6 +47,7 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -304,6 +306,9 @@
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
+            <delete>
+              <fileset dir="${build}" includes="trans/**"/>
+            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.main.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.main.xml	2010-05-17 08:33:52 UTC (rev 20849)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.main.xml	2010-05-17 10:31:45 UTC (rev 20850)
@@ -37,5 +37,5 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="sdf2table,stratego.ctree,sdf2imp"/>
+        <target name="all" depends="utils-files,sdf2table,stratego.ctree,sdf2imp"/>
     </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-17 08:33:52 UTC (rev 20849)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-17 10:31:45 UTC (rev 20850)
@@ -37,6 +37,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -46,6 +47,7 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -304,6 +306,9 @@
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
+            <delete>
+              <fileset dir="${build}" includes="trans/**"/>
+            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.main.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.main.xml	2010-05-17 08:33:52 UTC (rev 20849)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.main.xml	2010-05-17 10:31:45 UTC (rev 20850)
@@ -37,5 +37,5 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="sdf2table,stratego.ctree,sdf2imp"/>
+        <target name="all" depends="utils-files,sdf2table,stratego.ctree,sdf2imp"/>
     </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-17 08:33:52 UTC (rev 20849)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-17 10:31:45 UTC (rev 20850)
@@ -37,6 +37,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -46,6 +47,7 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -304,6 +306,9 @@
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
+            <delete>
+              <fileset dir="${build}" includes="trans/**"/>
+            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml	2010-05-17 08:33:52 UTC (rev 20849)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml	2010-05-17 10:31:45 UTC (rev 20850)
@@ -38,5 +38,5 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="sdf2table,stratego.jar,sdf2imp"/>
+        <target name="all" depends="utils-files,sdf2table,stratego.jar,sdf2imp"/>
     </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-17 08:33:52 UTC (rev 20849)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-17 10:31:45 UTC (rev 20850)
@@ -37,6 +37,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -46,6 +47,7 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -304,6 +306,9 @@
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
+            <delete>
+              <fileset dir="${build}" includes="trans/**"/>
+            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.main.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.main.xml	2010-05-17 08:33:52 UTC (rev 20849)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.main.xml	2010-05-17 10:31:45 UTC (rev 20850)
@@ -37,5 +37,5 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="sdf2table,ppgen.helper.fallback,pppack.helper.fallback,stratego.jar,sdf2imp"/>
+        <target name="all" depends="utils-files,sdf2table,ppgen.helper.fallback,pppack.helper.fallback,stratego.jar,sdf2imp"/>
     </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-05-17 08:33:52 UTC (rev 20849)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-05-17 10:31:45 UTC (rev 20850)
@@ -109,6 +109,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir" />
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite" />



From R.B.Vermaas at tudelft.nl  Mon May 17 17:09:45 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Mon, 17 May 2010 15:09:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20851 - rob -
	strategoxt/trunk/stratego-regular/trans/sdf2rtg
Message-ID: <201005171509.o4HF9jWP027123@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-05-17 15:09:45 +0000 (Mon, 17 May 2010)
New Revision: 20851

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20851&view=rev

Modified:
   strategoxt/trunk/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str

Log:
StrategoXT/817, sdf2rtg: Symbol2String returned empty string in case of a seq with only literal. added case for this

Changes:

Modified: strategoxt/trunk/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str
===================================================================
--- strategoxt/trunk/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str	2010-05-17 10:31:45 UTC (rev 20850)
+++ strategoxt/trunk/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str	2010-05-17 15:09:45 UTC (rev 20851)
@@ -578,7 +578,7 @@
 
   Symbol2String :
     seq(sym, syms) ->
-      < filter(not(?lit(_) + ?ci-lit(_)))
+      < ( map(?lit(_) + ?ci-lit(_)) <+ filter(not(?lit(_) + ?ci-lit(_))) )
       ; map(Symbol2String)
       ; <separate-by> ("_", <id>)
       ; concat-strings
@@ -621,4 +621,4 @@
 
     // WTF?
     ci-lit : String -> Tree
-     */
\ No newline at end of file
+     */



From L.C.L.Kats at tudelft.nl  Mon May 17 17:17:45 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 17 May 2010 15:17:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20852 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <201005171517.o4HFHjtN027847@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-17 15:17:45 +0000 (Mon, 17 May 2010)
New Revision: 20852

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20852&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java

Log:
Load JFFLibrary by default (used by Karl)

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2010-05-17 15:09:45 UTC (rev 20851)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/Context.java	2010-05-17 15:17:45 UTC (rev 20852)
@@ -12,6 +12,7 @@
 import org.spoofax.interpreter.library.AbstractPrimitive;
 import org.spoofax.interpreter.library.IOAgent;
 import org.spoofax.interpreter.library.IOperatorRegistry;
+import org.spoofax.interpreter.library.java.JFFLibrary;
 import org.spoofax.interpreter.library.ssl.SSLLibrary;
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
@@ -63,8 +64,8 @@
     	this.operatorRegistryMap = new HashMap<String, IOperatorRegistry>();
     	this.operatorRegistries = new ArrayList<IOperatorRegistry>();
     	
-        SSLLibrary ssl = new SSLLibrary();
-        addOperatorRegistry(ssl);
+        addOperatorRegistry(new SSLLibrary());
+        addOperatorRegistry(new JFFLibrary(factory));
 
     	if (ioAgent != null) setIOAgent(ioAgent);
     	



From L.C.L.Kats at tudelft.nl  Mon May 17 17:18:46 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 17 May 2010 15:18:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20853 - LennartKats -
	strc-java/trunk/java/tools/org/strategoxt/tools/lib
Message-ID: <201005171518.o4HFIks8027874@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-17 15:18:46 +0000 (Mon, 17 May 2010)
New Revision: 20853

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20853&view=rev

Modified:
   strc-java/trunk/java/tools/org/strategoxt/tools/lib/core-sdf-grammar2rtg.str

Log:
Merged in r20851 from strategoxt by rob:
trategoXT/817, sdf2rtg: Symbol2String returned empty string in case of a seq with only literal. added case for this

Changes:

Modified: strc-java/trunk/java/tools/org/strategoxt/tools/lib/core-sdf-grammar2rtg.str
===================================================================
--- strc-java/trunk/java/tools/org/strategoxt/tools/lib/core-sdf-grammar2rtg.str	2010-05-17 15:17:45 UTC (rev 20852)
+++ strc-java/trunk/java/tools/org/strategoxt/tools/lib/core-sdf-grammar2rtg.str	2010-05-17 15:18:46 UTC (rev 20853)
@@ -576,7 +576,7 @@
 
   Symbol2String :
     seq(sym, syms) ->
-      < filter(not(?lit(_) + ?ci-lit(_)))
+      < ( map(?lit(_) + ?ci-lit(_)) <+ filter(not(?lit(_) + ?ci-lit(_))) )
       ; map(Symbol2String)
       ; <separate-by> ("_", <id>)
       ; concat-strings


Property changes on: strc-java/trunk/java/tools/org/strategoxt/tools/lib/core-sdf-grammar2rtg.str
___________________________________________________________________
Modified: svn:mergeinfo
   - /strategoxt/branches/strategoxt-annos/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str:19295,19301,19327
/strategoxt/branches/strategoxt-with/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str:18038-18120
   + /strategoxt/branches/strategoxt-annos/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str:19295,19301,19327
/strategoxt/branches/strategoxt-with/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str:18038-18120
/strategoxt/trunk/stratego-regular/trans/sdf2rtg/core-sdf-grammar2rtg.str:20851



From L.C.L.Kats at tudelft.nl  Mon May 17 18:54:52 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 17 May 2010 16:54:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20854 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
Message-ID: <201005171654.o4HGsqx8029029@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-17 16:54:52 +0000 (Mon, 17 May 2010)
New Revision: 20854

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20854&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java

Log:
Spoofax/126: deadlock

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-17 15:18:46 UTC (rev 20853)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-17 16:54:52 UTC (rev 20854)
@@ -6,7 +6,9 @@
 import java.lang.management.ManagementFactory;
 import java.util.Collections;
 import java.util.HashMap;
+import java.util.HashSet;
 import java.util.Map;
+import java.util.Set;
 
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.runtime.IStatus;
@@ -264,14 +266,14 @@
 	
 	public static void registerUnmanagedParseTable(String name, IFile file) {
 		unmanagedTables.put(name, new ParseTableProvider(file));
-		synchronized (descriptors) { // object is its own syncroot, per JavaDoc
-			for (Descriptor descriptor : descriptors.values()) {
-				if (descriptor.isUsedForUnmanagedParseTable(name)) {
-					try {
-						descriptor.reinitialize(descriptor);
-					} catch (BadDescriptorException e) {
-						Environment.logException("Could not reinitialize descriptor", e);
-					}
+		// Avoid maintaining lock (Spoofax/126)
+		Set<Descriptor> currentDescriptors = new HashSet<Descriptor>(descriptors.values());
+		for (Descriptor descriptor : currentDescriptors) {
+			if (descriptor.isUsedForUnmanagedParseTable(name)) {
+				try {
+					descriptor.reinitialize(descriptor);
+				} catch (BadDescriptorException e) {
+					Environment.logException("Could not reinitialize descriptor", e);
 				}
 			}
 		}



From L.C.L.Kats at tudelft.nl  Mon May 17 19:04:17 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 17 May 2010 17:04:17 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20855 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
Message-ID: <201005171704.o4HH4Hnw029219@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-17 17:04:17 +0000 (Mon, 17 May 2010)
New Revision: 20855

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20855&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java

Log:
oops

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-17 16:54:52 UTC (rev 20854)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-17 17:04:17 UTC (rev 20855)
@@ -267,7 +267,9 @@
 	public static void registerUnmanagedParseTable(String name, IFile file) {
 		unmanagedTables.put(name, new ParseTableProvider(file));
 		// Avoid maintaining lock (Spoofax/126)
-		Set<Descriptor> currentDescriptors = new HashSet<Descriptor>(descriptors.values());
+		synchronized (descriptors) {
+			Set<Descriptor> currentDescriptors = new HashSet<Descriptor>(descriptors.values());
+		}
 		for (Descriptor descriptor : currentDescriptors) {
 			if (descriptor.isUsedForUnmanagedParseTable(name)) {
 				try {



From L.C.L.Kats at tudelft.nl  Mon May 17 19:13:52 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 17 May 2010 17:13:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20856 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
Message-ID: <201005171713.o4HHDqSn029269@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-17 17:13:52 +0000 (Mon, 17 May 2010)
New Revision: 20856

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20856&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java

Log:
oops

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-17 17:04:17 UTC (rev 20855)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-17 17:13:52 UTC (rev 20856)
@@ -267,8 +267,9 @@
 	public static void registerUnmanagedParseTable(String name, IFile file) {
 		unmanagedTables.put(name, new ParseTableProvider(file));
 		// Avoid maintaining lock (Spoofax/126)
+		Set<Descriptor> currentDescriptors;
 		synchronized (descriptors) {
-			Set<Descriptor> currentDescriptors = new HashSet<Descriptor>(descriptors.values());
+			currentDescriptors = new HashSet<Descriptor>(descriptors.values());
 		}
 		for (Descriptor descriptor : currentDescriptors) {
 			if (descriptor.isUsedForUnmanagedParseTable(name)) {



From L.C.L.Kats at tudelft.nl  Tue May 18 14:06:00 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 18 May 2010 12:06:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20857 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.sdf/trans
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/stratego
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201005181206.o4IC60au011449@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-18 12:05:59 +0000 (Tue, 18 May 2010)
New Revision: 20857

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20857&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/stratego/IMPParseStrategoFileStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorRegistry.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseTableProvider.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNode.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ListAstNode.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java

Log:
- Spoofax/41: Improve closing bracket insertion
- Spoofax/110: Lazily load parse tables
- Working on parser-directed syntactic code completion

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-18 12:05:59 UTC (rev 20857)
@@ -37,7 +37,6 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -47,7 +46,6 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
-            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -306,9 +304,6 @@
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
-            <delete>
-              <fileset dir="${build}" includes="trans/**"/>
-            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-18 12:05:59 UTC (rev 20857)
@@ -58,13 +58,6 @@
     opt(s @ seq(_, _)) -> (s, $[Extract sequence in optional to separate productions to ensure acceptable abstract syntax])
     where
       <occurrences(is-non-terminal)> s => 1
-
-  // StrategoXT/817
-  context-free-syntax-error:
-    <?iter-star(s) + ?iter(s) + ?iter-star-sep(s,_) + ?iter-sep(s,_)> ->
-    (s, $[At least one non-terminal expected])
-    where
-      <occurrences(is-non-terminal)> s => 0
   
   /**
    * Tests if something is a non-terminal in terms of the AST produced.

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/stratego/IMPParseStrategoFileStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/stratego/IMPParseStrategoFileStrategy.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/stratego/IMPParseStrategoFileStrategy.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -6,6 +6,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 
+import org.eclipse.core.runtime.CoreException;
 import org.eclipse.imp.language.Language;
 import org.eclipse.imp.language.LanguageRegistry;
 import org.spoofax.interpreter.terms.IStrategoString;
@@ -16,6 +17,7 @@
 import org.spoofax.jsglr.SGLRException;
 import org.strategoxt.imp.editors.stratego.StrategoSugarParseController;
 import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.parser.JSGLRI;
 import org.strategoxt.imp.runtime.parser.ast.RootAstNode;
 import org.strategoxt.imp.runtime.services.MetaFile;
@@ -73,6 +75,16 @@
 			return parser;
 		} catch (NoRecoveryRulesException e) {
 			throw new StrategoException("Could not load stratego parse table", e);
+		} catch (BadDescriptorException e) {
+			throw new StrategoException("Could not load stratego parse table", e);
+		} catch (InvalidParseTableException e) {
+			throw new StrategoException("Could not load stratego parse table", e);
+		} catch (IOException e) {
+			throw new StrategoException("Could not load stratego parse table", e);
+		} catch (CoreException e) {
+			throw new StrategoException("Could not load stratego parse table", e);
+		} catch (RuntimeException e) {
+			throw new StrategoException("Could not load stratego parse table", e);
 		}
 	}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -11,6 +11,7 @@
 import java.util.Set;
 
 import org.eclipse.core.resources.IFile;
+import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.Status;
 import org.eclipse.imp.language.Language;
@@ -62,7 +63,7 @@
 	
 	private final static ParseTableManager parseTableManager;
 	
-	private final static Map<String, ParseTable> parseTables;
+	private final static Map<String, ParseTableProvider> parseTables;
 	
 	private final static Map<String, ParseTableProvider> unmanagedTables;
 	
@@ -80,7 +81,7 @@
 		wrappedFactory = new UnsharedWrappedATermFactory();
 		factory = new PureFactory();
 		parseTableManager = new ParseTableManager(factory);
-		parseTables = Collections.synchronizedMap(new HashMap<String, ParseTable>());
+		parseTables = Collections.synchronizedMap(new HashMap<String, ParseTableProvider>());
 		descriptors = Collections.synchronizedMap(new HashMap<String, Descriptor>());
 		unmanagedTables = Collections.synchronizedMap(new HashMap<String, ParseTableProvider>());
 		wrappedAstNodeFactory = new WrappedAstNodeFactory();
@@ -230,21 +231,21 @@
 		return result;
 	}
 	
-	public static ParseTable registerParseTable(Language language, InputStream parseTable)
-			throws IOException, InvalidParseTableException {
-		
-		Debug.startTimer();
-		ParseTable table = parseTableManager.loadFromStream(parseTable);	
-		if (language != null) {
-			parseTables.put(language.getName(), table);
-			Debug.stopTimer("Parse table loaded: " + language.getName());
-		}
+	public static ParseTableProvider registerParseTable(Language language, ParseTableProvider table) {
+		parseTables.put(language.getName(), table);
 		return table;
 	}
 	
-	public static ParseTable getParseTable(Language language) {
-		ParseTable table = parseTables.get(language.getName());
+	public static ParseTable loadParseTable(InputStream stream) throws IOException, InvalidParseTableException {
+		return parseTableManager.loadFromStream(stream);
+	}
+	
+	public static ParseTable getParseTable(Language language)
+			throws BadDescriptorException, InvalidParseTableException,
+			       IOException, CoreException, IllegalStateException {
 		
+		ParseTable table = parseTables.get(language.getName()).get();
+		
 		if (table == null)
 			throw new IllegalStateException("Parse table not available: " + language.getName());
 			

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorFactory.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorFactory.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -12,7 +12,6 @@
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.imp.language.Language;
 import org.spoofax.interpreter.terms.IStrategoAppl;
-import org.spoofax.jsglr.InvalidParseTableException;
 import org.spoofax.jsglr.ParseTable;
 import org.spoofax.jsglr.SGLRException;
 import org.strategoxt.imp.generator.sdf2imp;
@@ -38,7 +37,8 @@
 		if (descriptorParser != null) return;
 		try {
 			InputStream stream = sdf2imp.class.getResourceAsStream("/EditorService.tbl");
-			ParseTable table = Environment.registerParseTable(Descriptor.DESCRIPTOR_LANGUAGE, stream);
+			ParseTable table = Environment.loadParseTable(stream);
+			Environment.registerParseTable(Descriptor.DESCRIPTOR_LANGUAGE, new ParseTableProvider(table));
 			descriptorParser = new JSGLRI(table, "Module");
 		} catch (Throwable e) {
 			Environment.logException("Could not initialize the Descriptor class.", e);
@@ -83,8 +83,7 @@
 		Language language = result.getLanguage();
 		
 		if (parseTable == null) parseTable = result.openParseTableStream();
-		registerParseTable(language, parseTable);
-		
+		Environment.registerParseTable(language, new ParseTableProvider(result));		
 		Environment.registerDescriptor(language, result);
 		registry.register(result);
 		
@@ -94,12 +93,13 @@
 	
 	public static Descriptor parse(InputStream input) throws BadDescriptorException, IOException {
 		try {
-			init();
 			input = new PushbackInputStream(input, 100);
 			
 			IStrategoAppl document = tryReadTerm((PushbackInputStream) input);
-			if (document == null)
+			if (document == null) {
+				init();
 				document = (IStrategoAppl) descriptorParser.parse(input, "(descriptor)").getTerm();
+			}
 			return new Descriptor(document);
 		} catch (SGLRException e) {
 			throw new BadDescriptorException("Could not parse descriptor file", e);
@@ -118,14 +118,4 @@
 			return null;
 		}
 	}
-
-	private static void registerParseTable(Language language, InputStream table) throws BadDescriptorException {
-		try {
-			Environment.registerParseTable(language, table);
-		} catch (IOException e) {
-			throw new BadDescriptorException("Could not load editor service parse table", e);
-		} catch (InvalidParseTableException e) {
-			throw new BadDescriptorException("Could not load editor service parse table", e);
-		}
-	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorRegistry.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorRegistry.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DescriptorRegistry.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -47,6 +47,7 @@
 				return (EditorDescriptor) editor;
 		}
 
+		
 		throw new IllegalStateException("Could not find editor descriptor for universal editor");
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseControllerFactory.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -1,7 +1,14 @@
 package org.strategoxt.imp.runtime.dynamicloading;
 
+import java.io.IOException;
+
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.imp.language.Language;
 import org.eclipse.imp.parser.IParseController;
 import org.eclipse.imp.services.ILanguageSyntaxProperties;
+import org.spoofax.jsglr.InvalidParseTableException;
+import org.spoofax.jsglr.ParseTable;
+import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 
 /**
@@ -16,7 +23,20 @@
 	@Override
 	public IParseController create(Descriptor descriptor, SGLRParseController controller) throws BadDescriptorException {
 		ILanguageSyntaxProperties syntaxProperties = descriptor.createService(ILanguageSyntaxProperties.class, controller);
-		return new SGLRParseController(descriptor.getLanguage(), syntaxProperties, descriptor.getStartSymbols());
+		Language language = descriptor.getLanguage();
+		ParseTable table;
+		try {
+			table = Environment.getParseTable(language);
+		} catch (InvalidParseTableException e) {
+			throw new BadDescriptorException("Could not load parse table for " + language.getName(), e);
+		} catch (IOException e) {
+			throw new BadDescriptorException("Could not load parse table for " + language.getName(), e);
+		} catch (CoreException e) {
+			throw new BadDescriptorException("Could not load parse table for " + language.getName(), e);
+		} catch (RuntimeException e) {
+			throw new BadDescriptorException("Could not load parse table for " + language.getName(), e);
+		}
+		return new SGLRParseController(language, table, syntaxProperties, descriptor.getStartSymbols());
 	}
 
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseTableProvider.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseTableProvider.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/ParseTableProvider.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -1,6 +1,7 @@
 package org.strategoxt.imp.runtime.dynamicloading;
 
 import java.io.IOException;
+import java.io.InputStream;
 
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.runtime.CoreException;
@@ -18,17 +19,32 @@
 	
 	private final IFile file;
 	
+	private final Descriptor descriptor;
+	
 	private ParseTable table;
 	
 	public ParseTableProvider(IFile file) {
 		this.file = file;
+		this.descriptor = null;
 	}
 	
-	public ParseTable get() throws InvalidParseTableException, IOException, CoreException {
+	public ParseTableProvider(Descriptor descriptor) {
+		this.descriptor = descriptor;
+		this.file = null;
+	}
+	
+	public ParseTableProvider(ParseTable table) {
+		this.table = table;
+		this.descriptor = null;
+		this.file = null;
+	}
+	
+	public ParseTable get() throws BadDescriptorException, InvalidParseTableException, IOException, CoreException {
 		if (table != null) return table;
 		Debug.startTimer();
-		ParseTable table = Environment.registerParseTable(null, file.getContents(true));
-		Debug.stopTimer("Parse table loaded:" + file.getName());
+		InputStream stream = file == null ? descriptor.openParseTableStream() : file.getContents(true);
+		ParseTable table = Environment.loadParseTable(stream);
+		Debug.stopTimer("Loaded parse table for " + (file == null ? descriptor.getLanguage().getName() : file.getName()));
 		return this.table = table;
 	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -162,19 +162,18 @@
 	}
     
     /**
-     * Create a new SGLRParseController.
+     * Creates a new SGLRParseController.
      * 
      * @param language      The name of the language, as registered in the {@link LanguageRegistry}.
      * @param startSymbol	The start symbol of this grammar, or null.
      */
-    public SGLRParseController(Language language, ILanguageSyntaxProperties syntaxProperties,
+    public SGLRParseController(Language language, ParseTable table, ILanguageSyntaxProperties syntaxProperties,
 			String startSymbol) {
     	
     	this.language = language;
     	this.syntaxProperties = syntaxProperties;
     	
-    	ParseTable table = Environment.getParseTable(language);
-		parser = new JSGLRI(table, startSymbol, this, tokenManager);
+    	parser = new JSGLRI(table, startSymbol, this, tokenManager);
 		parser.setKeepAmbiguities(true);
 		parser.setTimeout(PARSE_TIMEOUT);
 		try {
@@ -183,8 +182,27 @@
 			Environment.logException("No recovery rules available for " + language.getName() + " editor", e);
 		}
     }
+    
+    /**
+     * Creates a new SGLRParseController, throwing any parse table loading exceptions as runtime exceptions.
+     * 
+     * @deprecated Use {@link #SGLRParseController(Language, ParseTable, ILanguageSyntaxProperties, String)} instead.
+     */
+    @Deprecated
+    public SGLRParseController(Language language, ILanguageSyntaxProperties syntaxProperties, String startSymbol) {
+    	this(language, getTableSwallowExceptions(language), syntaxProperties, startSymbol);
+    }
 
-    public void initialize(IPath filePath, ISourceProject project, IMessageHandler messages) {
+    private static ParseTable getTableSwallowExceptions(Language language) {
+		try {
+			return Environment.getParseTable(language);
+		} catch (Exception e) {
+			e.printStackTrace();
+			throw new RuntimeException(e);
+		}
+	}
+
+	public void initialize(IPath filePath, ISourceProject project, IMessageHandler messages) {
 		this.path = filePath;
 		this.project = project;
     }
@@ -317,7 +335,7 @@
 				metaFile = null;
 			}
 			if (metaFile == null) {
-				parser.setParseTable(Environment.getParseTable(getLanguage()));
+				parser.setParseTable(getTableSwallowExceptions(getLanguage()));
 				parser.getDisambiguator().setHeuristicFilters(false);
 			} else {
 				ParseTable table = Environment.getUnmanagedParseTable(metaFile.getLanguage() + "-Permissive");

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -12,6 +12,7 @@
 import org.spoofax.jsglr.SGLRException;
 import org.spoofax.jsglr.TokenExpectedException;
 import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.ParseTableProvider;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
 
 /**
@@ -34,9 +35,11 @@
 		if (useCSGLR) {
 			parser = new CSGLRI(parseTable, startSymbol);
 		} else {
+			// TODO: don't register tables for StandAloneSGLRI?
 			Language lang = new StandAloneLanguage(language);
-			ParseTable table = Environment.registerParseTable(lang, parseTable);
-			parser = new JSGLRI(table, startSymbol);			
+			ParseTable table = Environment.loadParseTable(parseTable);
+			Environment.registerParseTable(lang, new ParseTableProvider(table));
+			parser = new JSGLRI(table, startSymbol);
 		}
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNode.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNode.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNode.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -220,6 +220,7 @@
 		}
 	}
 	
+	@Deprecated
 	public static List<String> getSorts(List<? extends AstNode> children) {
   	  List<String> result = new ArrayList<String>(children.size());
   	  

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ListAstNode.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ListAstNode.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ListAstNode.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -7,12 +7,21 @@
 import lpg.runtime.IToken;
 
 public class ListAstNode extends AstNode {
+	
 	private final String elementSort;
 	
 	public String getElementSort() {
 		return elementSort;
 	}
 	
+	/**
+	 * @deprecated Use #getElementSort() to get the element sort instead.
+	 */
+	@Override @Deprecated
+	public String getSort() {
+		return super.getSort();
+	}
+	
 	@Override
 	public boolean isList() {
 		return true;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/AutoEditStrategy.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -5,6 +5,7 @@
 import static org.eclipse.ui.texteditor.AbstractDecoratedTextEditorPreferenceConstants.EDITOR_TAB_WIDTH;
 import static org.eclipse.ui.texteditor.ITextEditorExtension3.SMART_INSERT;
 
+import java.util.Stack;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
@@ -54,12 +55,16 @@
 	
 	private int lastAutoInsertedFenceLine;
 	
-	private int lastAutoInsertedFenceCount;
+	private int lastAutoInsertedFencesLength;
 	
 	private String lastAutoInsertedFenceLineStart;
 	
 	private String lastAutoInsertedFenceLineEnd;
 
+	private boolean allowAutoRemoveFence;
+	
+	private Stack<Integer> lastAutoInsertionOpenFences = new Stack<Integer>();
+
 	public AutoEditStrategy(ILanguageSyntaxProperties syntax) {
 		this.syntax = syntax;
 		
@@ -178,7 +183,8 @@
 		
 		// TODO: respect Eclipse preference for inserting brackets
 		
-		// TODO: don't insert closing brackets in front of opening brackets, e.g.: ()(
+		if (input.length() == 0)
+			return false;
 
 		String lineEnd = getLineAfterOffset(document, offset, length);
 		if (getEditor().getInsertMode() == SMART_INSERT
@@ -189,9 +195,10 @@
 			for (int i = min(maxOpenFenceLength - 1, offset); i >= 0; i--) {
 				String openFence = document.get(offset - i, i) + input;
 				String closeFence = getMatchingCloseFence(openFence);
-				if (closeFence != null) {
+				if (closeFence != null && closeFence.length() > 0) {
 					if (isParsedAsLexicalOrLayout(document, offset, input)
-							|| isIdentifierAfterOffset(document, offset))
+							|| isIdentifierAfterOffset(document, offset)
+							|| isFenceAfterOffset(document, offset, openFence))
 						return false;
 					String lineStart = getLineBeforeOffset(document, offset);
 					closeFence = formatInsertedText(closeFence, lineStart);
@@ -201,7 +208,12 @@
 					lastAutoInsertedFenceLine = document.getLineOfOffset(offset);
 					lastAutoInsertedFenceLineStart = lineStart;
 					lastAutoInsertedFenceLineEnd = closeFence + lineEnd;
-					lastAutoInsertedFenceCount++;
+					if (lastAutoInsertedFencesLength == 0)
+						allowAutoRemoveFence = true;
+					lastAutoInsertedFencesLength += closeFence.length();
+					allowAutoRemoveFence = allowAutoRemoveFence
+							&& openFence.length() == 1 && closeFence.length() == 1;
+					lastAutoInsertionOpenFences.push(offset - i + input.length());
 					return true;
 				}
 			}
@@ -228,6 +240,23 @@
 		}
 		return false;
 	}
+	
+	/**
+	 * Tests if the line starts with a particular closing fence,
+	 * ignoring whitespace, comments, and lexicals.
+	 * 
+	 * @see stripCommentsAndLayout(String){
+	 */
+	private boolean isFenceAfterOffset(IDocument document, int offset, String fence) throws BadLocationException {
+		for (int max = document.getLength(); offset < max; offset++) {
+			char c = document.getChar(offset);
+			if (c == '\n' || c == '\r' || !Character.isWhitespace(c))
+				break;
+		}
+		
+		int endOffset = offset + fence.length();
+		return endOffset < document.getLength() && document.get(offset, endOffset - offset).equals(fence);
+	}
 
 	public static String formatInsertedText(String text, String lineStart) {
 		return text.replace("\\n", "\n" + getIndentation(lineStart, true))
@@ -254,20 +283,24 @@
 	 * types them in again.
 	 */
 	protected boolean skipClosingFence(ISourceViewer viewer, IDocument document, int offset, int length, String input) throws BadLocationException {
-		if (lastAutoInsertedFenceCount > 0 && document.getLineOfOffset(offset) == lastAutoInsertedFenceLine) {
+		if (lastAutoInsertedFencesLength > 0 && document.getLineOfOffset(offset) == lastAutoInsertedFenceLine) {
 			String lineEnd = getLineAfterOffset(document, offset, length);
 			if (lastAutoInsertedFenceLineEnd.startsWith(input)
 					&& lineEnd.equals(lastAutoInsertedFenceLineEnd)
 					&& getLineBeforeOffset(document, offset).startsWith(lastAutoInsertedFenceLineStart)) {
 				lastAutoInsertedFenceLineEnd = lastAutoInsertedFenceLineEnd.substring(input.length());
-				lastAutoInsertedFenceCount--;
+				lastAutoInsertedFencesLength--;
+				if (!lastAutoInsertionOpenFences.isEmpty())
+					lastAutoInsertionOpenFences.pop();
 				viewer.setSelectedRange(offset + input.length(), length);
 				return true;
 			} else if (!lineEnd.endsWith(lastAutoInsertedFenceLineEnd)) {
-				lastAutoInsertedFenceCount = 0;
+				lastAutoInsertedFencesLength = 0;
+				lastAutoInsertionOpenFences.clear();
 			}
 		} else {
-			lastAutoInsertedFenceCount = 0;
+			lastAutoInsertedFencesLength = 0;
+			lastAutoInsertionOpenFences.clear();
 		}
 		return false;
 	}
@@ -277,8 +310,25 @@
 	 * deletes the opening fence.
 	 */
 	protected boolean undoClosingFence(ISourceViewer viewer, IDocument document, int offset, int length, String input) throws BadLocationException {
-		// TODO:  Undo automatically inserted closing fences when the user deletes the opening fence
-		//        Would only really work with single-char fences
+		if (lastAutoInsertedFencesLength > 0 && allowAutoRemoveFence
+				&& document.getLineOfOffset(offset) == lastAutoInsertedFenceLine) {
+			if ("\b".equals(input)) {
+				String deletedChar = document.get(offset - 1, 1);
+				String closeFence = document.get(offset, 1);
+				String expectedCloseFence = getMatchingCloseFence(deletedChar);
+				if (offset == lastAutoInsertionOpenFences.peek() && closeFence.equals(expectedCloseFence)) {
+					lastAutoInsertedFencesLength--;
+					lastAutoInsertedFenceLineEnd = lastAutoInsertedFenceLineEnd.substring(1);
+					lastAutoInsertionOpenFences.pop();
+					if (getLineBeforeOffset(document, offset).equals(lastAutoInsertedFenceLineStart))
+						lastAutoInsertedFenceLineStart = lastAutoInsertedFenceLineStart.substring(0, lastAutoInsertedFenceLineStart.length() - 1);
+					document.replace(offset - 1, 2, "");
+					return true;
+				}
+			} else if (!lastAutoInsertionOpenFences.isEmpty() && lastAutoInsertionOpenFences.peek() > offset) {
+				allowAutoRemoveFence = false;
+			}
+		}
 		return false;
 	}
 	
@@ -439,7 +489,7 @@
 	}
 	
 	/**
-	 * Tests if the line starts with a closing fence,
+	 * Tests if the line starts with a particular closing fence,
 	 * ignoring whitespace, comments, and lexicals.
 	 * 
 	 * @see stripCommentsAndLayout(String)
@@ -540,7 +590,7 @@
 							continue;
 						}
 						*/
-						if (isSameLine(document, offset, token))
+						if (isSameLine(document, offset, token) && isIdentifier(token.toString())) // sanity check
 							return true; // either a string or just not a keyword
 						continue;
 					case TK_NUMBER: case TK_OPERATOR:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -9,6 +9,7 @@
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashSet;
 import java.util.Random;
@@ -20,6 +21,7 @@
 
 import org.eclipse.imp.editor.ErrorProposal;
 import org.eclipse.imp.parser.IParseController;
+import org.eclipse.imp.parser.ISourcePositionLocator;
 import org.eclipse.imp.services.IContentProposer;
 import org.eclipse.jface.text.ITextViewer;
 import org.eclipse.jface.text.Region;
@@ -117,7 +119,7 @@
 		if (!identifierLexical.matcher(COMPLETION_TOKEN).matches())
 			return createErrorProposal("No proposals available - completion lexical must allow letters and numbers", offset);
 		
-		constructAst(getParser(controller), offset, document);
+		RootAstNode ast = constructAst(getParser(controller), offset, document);
 		
 		if (currentCompletionNode == null) {
 			if (lastCompletionAst == null && lastParserAst == null)
@@ -133,9 +135,12 @@
 			results[0].apply(viewer.getDocument());
 			Point selection = ((SourceProposal) results[0]).getSelection(viewer.getDocument());
 			viewer.setSelectedRange(selection.x, selection.y);
+			insertImmediatelyOnce = false;
 			return null;
 		}
 		*/
+		//System.out.println("SORTS: " + getSortsAtCursor(currentCompletionNode));
+		System.out.println("SORTS: " + getSortsAtCursor(controller, ast, offset));
 		
 		return results;
     }
@@ -573,4 +578,35 @@
 		return;
 	}
 	
+	// TODO: get *all* sorts at cursor by looking at the parse tree?
+	private Set<String> getSortsAtCursor(IParseController controller, RootAstNode ast, int offset) {
+		//if (node.getConstructor().equals(COMPLETION_UNKNOWN))
+		//	return Collections.emptySet();
+		
+		ISourcePositionLocator locator = controller.getSourcePositionLocator();
+		AstNode node = (AstNode) locator.findNode(ast, offset);
+		if (node == null) return Collections.emptySet();
+		
+		Set<String> results = new HashSet<String>();
+
+		IToken rightToken = node.getRightIToken();
+
+		// Follow the (labeled) injection chain upwards
+		do {
+			if (node.isList()) {
+				results.add(((ListAstNode) node).getElementSort());
+			} else if (node.getSort() != null) {
+				results.add(node.getSort());
+			}
+			node = node.getParent();
+		} while (node != null && node.getRightIToken() == rightToken);
+		
+		if (node != null && node.isList()) {
+			// Add sort of container list with elements after current node
+			results.add(((ListAstNode) node).getElementSort());
+		}
+		
+		return results;
+	}
+	
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-17 17:13:52 UTC (rev 20856)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-18 12:05:59 UTC (rev 20857)
@@ -224,11 +224,13 @@
 	
 	private void loadJars(List<String> jars) {
 		try {
+			Debug.startTimer("Loading Stratego modules " + jars);
 			URL[] classpath = new URL[jars.size()];
 			for (int i = 0; i < classpath.length; i++) {
 				classpath[i] = descriptor.getBasePath().append(jars.get(i)).toFile().toURI().toURL();
 			}
 			runtime.loadJars(classpath);
+			Debug.stopTimer("Successfully loaded " + jars);
 		} catch (SecurityException e) {
 			Environment.logException("Error loading compiler service providers " + jars, e);
 			if (descriptor.isDynamicallyLoaded())



From L.C.L.Kats at tudelft.nl  Thu May 20 15:21:13 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 20 May 2010 13:21:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20859 - LennartKats -
	in strc-java/trunk/java: .
	runtime/org/strategoxt/lang/compat/override
Message-ID: <201005201321.o4KDLDdr008554@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-20 13:21:13 +0000 (Thu, 20 May 2010)
New Revision: 20859

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20859&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/performance-tweaks.str
   strc-java/trunk/java/spoofax-libs.jar

Log:
StrategoXT/818: string-replace is very stack-inefficient

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/performance-tweaks.str
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/performance-tweaks.str	2010-05-19 17:27:42 UTC (rev 20858)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/compat/override/performance-tweaks.str	2010-05-20 13:21:13 UTC (rev 20859)
@@ -31,6 +31,9 @@
   
   // TODO: override collect-all (seems to inline crush!)
   
+  override string-replace(|s1, s2) =
+    SRTS-EXT-string-replace(|s1, s2)
+  
   override crush(nul, sum) =
     SRTS-EXT-crush(nul, sum, id)
   
@@ -54,6 +57,8 @@
   
   override at-end(s) =
     SRTS-EXT-at-end(s)
+  
+  external SRTS-EXT-string-replace(|s1, s2)
 
   external SRTS-EXT-crush(nul, sum, s|)
   

Modified: strc-java/trunk/java/spoofax-libs.jar
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Fri May 21 11:06:19 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 21 May 2010 09:06:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20860 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.sdf/editor
	org.strategoxt.imp.editors.sdf/trans org.strategoxt.imp.feature
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.updatesite
Message-ID: <201005210906.o4L96JfL023941@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-21 09:06:18 +0000 (Fri, 21 May 2010)
New Revision: 20860

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20860&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Release 0.4.7 and some SDF warning tweaks

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-20 13:21:13 UTC (rev 20859)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-21 09:06:18 UTC (rev 20860)
@@ -37,6 +37,7 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -46,6 +47,7 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -304,6 +306,9 @@
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
+            <delete>
+              <fileset dir="${build}" includes="trans/**"/>
+            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv	2010-05-20 13:21:13 UTC (rev 20859)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv	2010-05-21 09:06:18 UTC (rev 20860)
@@ -15,8 +15,8 @@
   builder : "Show pretty printer rules (for selection)" =
     generate-pp-rules (realtime) (openeditor)
 
-  builder : "Show abstract syntax signature (for selection)" =
-    generate-rtg (realtime) (openeditor)
+  // builder : "Show abstract syntax signature (for selection)" =
+  //  generate-rtg (realtime) (openeditor)
 
   builder : "Show abstract syntax (for selection)" =
     generate-aterm (realtime) (openeditor) (meta)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-20 13:21:13 UTC (rev 20859)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-21 09:06:18 UTC (rev 20860)
@@ -19,7 +19,7 @@
       dr-scope-all-start
     with
       analyze-ast;
-      errors   := <collect(?context-free-syntax(<collect-om(context-free-syntax-error)>))> ast;
+      errors   := [];
       // We only collect-om since we don't want inner warning dupes
       warnings := <collect(?context-free-syntax(<collect-om(context-free-syntax-warning)>))> ast
 
@@ -82,6 +82,10 @@
   context-free-syntax-warning:
     [iter-star(seq(sort(x), [lit(sep)])), opt(sort(x)) | _] ->
     (<id>, $[Use {[x] [sep]}* instead for [sep]-separated lists])
+
+  context-free-syntax-warning:
+    prod(lhs @ [sort(x), opt(seq(lit(sep), [sort(xs)]))], sort(xs), _) ->
+    (lhs, $[Use {[x] [sep]}+ instead for [sep]-separated lists])
        
   // Instruct users to use { X ","? }* (seen in MDSD 2010)
 
@@ -100,6 +104,10 @@
   context-free-syntax-warning:
     [iter-star(seq(sort(x), [opt(lit(sep))])), opt(sort(x)) | _] ->
     (<id>, $[Use {[x] [sep]?}* instead for [sep]?-separated lists])
+
+  context-free-syntax-warning:
+    prod(lhs @ [sort(x), opt(seq(opt(lit(sep)), [sort(xs)]))], sort(xs), _) ->
+    (lhs, $[Use {[x] [sep]?}+ instead for [sep]?-separated lists])
   
   context-free-syntax-warning:
     iter-sep(_, bad @ sort(_)) -> (bad, "Non-terminal used as a list separator (use round braces for grouping non-terminals)") 
@@ -123,8 +131,8 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     where
       filename  := <guarantee-extension(|"rtg")> path;
-      selected' := <add-context; sdf-desugar> selected;
-      result    := <core-rtg2sig; pp-stratego-string> selected'
+      selected' := <debug(!2); add-context; debug(!3); sdf-desugar> selected;
+      result    := <debug(!4); core-rtg2sig; debug(!5); pp-stratego-string> selected'
     <+
       fatal-err(|$[Could not generate abstract syntax signatures for this selection.
                    Only productions with {cons()} attributes are supported.])
@@ -155,4 +163,4 @@
     <call> ("org.strategoxt.tools.pp-pp-table", [<id>])
   
   sdf-desugar =
-    <call> ("org.strategoxt.tools.sdf-desugar", [<id>])
+    <call> ("org.strategoxt.tools.sdf-desugar", [<id>]) => [_, <id>]

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-20 13:21:13 UTC (rev 20859)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-21 09:06:18 UTC (rev 20860)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.6"
+      version="0.4.7"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	2010-05-20 13:21:13 UTC (rev 20859)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	2010-05-21 09:06:18 UTC (rev 20860)
@@ -72,10 +72,15 @@
   // Completes an identifier when the user presses control-space
   // (the completion identifier in the AST provides additional context information)
   editor-complete:
-    (Type(COMPLETION(prefix)), position, ast, path, project-path) ->
+    (node, position, ast, path, project-path) ->
     ["String", "Int" | proposals]
     where
-      proposals := <all-keys-GetEntity>
+      debug(!"Complete: ")> node;
+      parent := <parent-at-position(|position)>;
+      <debug(!"Parent:  ")> parent;
+      if !node => Type(COMPLETION(prefix)) then
+        proposals := <all-keys-GetEntity>
+      end
 };
 
 if not(<file-exists> "trans/generate.str") then
@@ -184,4 +189,4 @@
     Module(x @ "example", _) -> (x, $[This is just an example program in the "entities" language
                                       (this note is defined in trans/check.str) ])
 }
-end
\ No newline at end of file
+end

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-20 13:21:13 UTC (rev 20859)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-21 09:06:18 UTC (rev 20860)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.6.jar" id="org.strategoxt.imp" version="0.4.6">
+   <feature url="features/org.strategoxt.imp_0.4.7.jar" id="org.strategoxt.imp" version="0.4.7">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Fri May 21 14:34:26 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 21 May 2010 12:34:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20861 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <201005211234.o4LCYQjq026447@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-21 12:34:26 +0000 (Fri, 21 May 2010)
New Revision: 20861

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20861&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str

Log:
oops

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	2010-05-21 09:06:18 UTC (rev 20860)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-example-trans.str	2010-05-21 12:34:26 UTC (rev 20861)
@@ -75,9 +75,7 @@
     (node, position, ast, path, project-path) ->
     ["String", "Int" | proposals]
     where
-      debug(!"Complete: ")> node;
-      parent := <parent-at-position(|position)>;
-      <debug(!"Parent:  ")> parent;
+      <debug(!"Complete: ")> node;
       if !node => Type(COMPLETION(prefix)) then
         proposals := <all-keys-GetEntity>
       end



From nathan.bruning at gmail.com  Fri May 21 16:41:55 2010
From: nathan.bruning at gmail.com (Nathan Bruning)
Date: Fri, 21 May 2010 16:41:55 +0200
Subject: [Stratego-commits] testing
Message-ID: <4BF69BB3.6000400@gmail.com>

[testing the bounce policy of the list for gmail accounts]

From L.C.L.Kats at tudelft.nl  Fri May 21 17:48:14 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 21 May 2010 15:48:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20863 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.pp org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.stratego
Message-ID: <201005211548.o4LFmEDi032515@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-21 15:48:14 +0000 (Fri, 21 May 2010)
New Revision: 20863

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20863&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-21 14:03:10 UTC (rev 20862)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-21 15:48:14 UTC (rev 20863)
@@ -310,6 +310,10 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-21 14:03:10 UTC (rev 20862)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-21 15:48:14 UTC (rev 20863)
@@ -310,6 +310,10 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-21 14:03:10 UTC (rev 20862)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-21 15:48:14 UTC (rev 20863)
@@ -310,6 +310,10 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-05-21 15:48:14 UTC (rev 20863)
@@ -0,0 +1,370 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+    
+        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I ${externaldefdir}" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files">
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${syntax}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-t"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" unless="aster-output.uptodate">
+            <apply executable="java" failonerror="true">
+                <arg line="-Xss8m -Xmx768m -client -jar utils/aster.jar"/>
+                <arg value="-i"/>
+                <fileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </fileset>
+            </apply>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${include}"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+                <param name="build.stratego.extension" value="ctree"/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
+                <param name="build.stratego.extraargs" value="-la java-front"/>
+                <param name="build.stratego.extension" value="java"/>
+            </antcall>
+            <delete>
+              <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputpath}/${strmodule}.${build.stratego.extension}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+            <delete file="${src-gen}/trans/Main.java"/>
+        </target>
+    </project>
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-21 14:03:10 UTC (rev 20862)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-21 15:48:14 UTC (rev 20863)
@@ -310,6 +310,10 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-21 14:03:10 UTC (rev 20862)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-21 15:48:14 UTC (rev 20863)
@@ -310,6 +310,10 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             



From L.C.L.Kats at tudelft.nl  Fri May 21 17:49:57 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 21 May 2010 15:49:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20864 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	. dynamicloading services
Message-ID: <201005211549.o4LFnvhT032550@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-21 15:49:57 +0000 (Fri, 21 May 2010)
New Revision: 20864

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20864&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java

Log:
- WeakWeakMap is now a WeakSoftMap
- Call StrategoObserver.update() when needed for reference resolving/hover/content complete

Changes:

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java (from rev 20860, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java	2010-05-21 15:49:57 UTC (rev 20864)
@@ -0,0 +1,88 @@
+package org.strategoxt.imp.runtime;
+
+import java.lang.ref.SoftReference;
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+import java.util.WeakHashMap;
+
+import org.spoofax.NotImplementedException;
+import org.strategoxt.lang.WeakValueHashMap;
+
+/**
+ * A WeakHashMap that uses weak reference keys and soft reference values.
+ * 
+ * @see WeakHashMap
+ * @see WeakValueHashMap
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class WeakSoftMap<K,V> implements Map<K,V> {
+	
+	private final WeakHashMap<K, SoftReference<V>> map = new WeakHashMap<K, SoftReference<V>>();
+	
+	public WeakSoftMap() {
+		// Construct new WeakWeakMap
+	}
+
+	public void clear() {
+		map.clear();
+	}
+
+	public boolean containsKey(Object key) {
+		return map.containsKey(key);
+	}
+
+	public boolean containsValue(Object value) {
+		// Can't do this using reference equality and no reference given
+		throw new UnsupportedOperationException();
+	}
+
+	public Set<java.util.Map.Entry<K, V>> entrySet() {
+		throw new NotImplementedException();
+	}
+
+	public V get(Object key) {
+		SoftReference<V> ref = map.get(key);
+		return ref == null ? null : ref.get();
+	}
+
+	public boolean isEmpty() {
+		return map.isEmpty();
+	}
+
+	public Set<K> keySet() {
+		return map.keySet();
+	}
+
+	public V put(K key, V value) {
+		if (value == null)
+			throw new IllegalArgumentException("Value cannot be null");
+		SoftReference<V> existing = map.put(key, new SoftReference<V>(value));
+		return existing == null ? null : existing.get();
+	}
+
+	public void putAll(Map<? extends K, ? extends V> m) {
+		throw new NotImplementedException();
+	}
+
+	public V remove(Object key) {
+		SoftReference<V> existing = map.remove(key);
+		return existing == null ? null : existing.get();
+	}
+
+	public int size() {
+		return map.size();
+	}
+
+	public Collection<V> values() {
+		Collection<SoftReference<V>> results = map.values();
+		Set<V> copy = new HashSet<V>(results.size());
+		for (SoftReference<V> resultRef : results) {
+			V result = resultRef == null ? null : resultRef.get();
+			if (result != null) copy.add(result);
+		}
+		return copy;
+	}
+}

Deleted: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java	2010-05-21 15:48:14 UTC (rev 20863)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java	2010-05-21 15:49:57 UTC (rev 20864)
@@ -1,88 +0,0 @@
-package org.strategoxt.imp.runtime;
-
-import java.lang.ref.WeakReference;
-import java.util.Collection;
-import java.util.HashSet;
-import java.util.Map;
-import java.util.Set;
-import java.util.WeakHashMap;
-
-import org.spoofax.NotImplementedException;
-import org.strategoxt.lang.WeakValueHashMap;
-
-/**
- * A WeakHashMap that uses both weak reference keys and weak reference values.
- * 
- * @see WeakHashMap
- * @see WeakValueHashMap
- * 
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class WeakWeakMap<K,V> implements Map<K,V> {
-	
-	private final WeakHashMap<K,WeakReference<V>> map = new WeakHashMap<K,WeakReference<V>>();
-	
-	public WeakWeakMap() {
-		// Construct new WeakWeakMap
-	}
-
-	public void clear() {
-		map.clear();
-	}
-
-	public boolean containsKey(Object key) {
-		return map.containsKey(key);
-	}
-
-	public boolean containsValue(Object value) {
-		// Can't do this using reference equality and no reference given
-		throw new UnsupportedOperationException();
-	}
-
-	public Set<java.util.Map.Entry<K, V>> entrySet() {
-		throw new NotImplementedException();
-	}
-
-	public V get(Object key) {
-		WeakReference<V> ref = map.get(key);
-		return ref == null ? null : ref.get();
-	}
-
-	public boolean isEmpty() {
-		return map.isEmpty();
-	}
-
-	public Set<K> keySet() {
-		return map.keySet();
-	}
-
-	public V put(K key, V value) {
-		if (value == null)
-			throw new IllegalArgumentException("Value cannot be null");
-		WeakReference<V> existing = map.put(key, new WeakReference<V>(value));
-		return existing == null ? null : existing.get();
-	}
-
-	public void putAll(Map<? extends K, ? extends V> m) {
-		throw new NotImplementedException();
-	}
-
-	public V remove(Object key) {
-		WeakReference<V> existing = map.remove(key);
-		return existing == null ? null : existing.get();
-	}
-
-	public int size() {
-		return map.size();
-	}
-
-	public Collection<V> values() {
-		Collection<WeakReference<V>> results = map.values();
-		Set<V> copy = new HashSet<V>(results.size());
-		for (WeakReference<V> resultRef : results) {
-			V result = resultRef == null ? null : resultRef.get();
-			if (result != null) copy.add(result);
-		}
-		return copy;
-	}
-}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-21 15:48:14 UTC (rev 20863)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-21 15:49:57 UTC (rev 20864)
@@ -33,7 +33,7 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.RuntimeActivator;
-import org.strategoxt.imp.runtime.WeakWeakMap;
+import org.strategoxt.imp.runtime.WeakSoftMap;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
 
@@ -63,7 +63,7 @@
 	 * http://java.sun.com/j2se/1.5.0/docs/api/java/util/WeakHashMap.html
 	 */
 	private final Map<SGLRParseController, Map<Class, ILanguageService>> cachedServices =
-		Collections.synchronizedMap(new WeakWeakMap<SGLRParseController, Map<Class, ILanguageService>>());
+		Collections.synchronizedMap(new WeakSoftMap<SGLRParseController, Map<Class, ILanguageService>>());
 	
 	private final List<AbstractServiceFactory> serviceFactories = new ArrayList<AbstractServiceFactory>();
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java	2010-05-21 15:48:14 UTC (rev 20863)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java	2010-05-21 15:49:57 UTC (rev 20864)
@@ -14,7 +14,7 @@
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
-import org.strategoxt.imp.runtime.WeakWeakMap;
+import org.strategoxt.imp.runtime.WeakSoftMap;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 import org.strategoxt.imp.runtime.services.OnSaveService;
 import org.strategoxt.imp.runtime.services.StrategoObserver;
@@ -25,7 +25,7 @@
 public class OnSaveServiceFactory extends AbstractServiceFactory<OnSaveService> {
 	
 	private static final Map<UniversalEditor, OnSaveService> registeredServices =
-		synchronizedMap(new WeakWeakMap<UniversalEditor, OnSaveService>());
+		synchronizedMap(new WeakSoftMap<UniversalEditor, OnSaveService>());
 
 	public OnSaveServiceFactory() {
 		super(OnSaveService.class, false);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-05-21 15:48:14 UTC (rev 20863)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-05-21 15:49:57 UTC (rev 20864)
@@ -19,6 +19,7 @@
 
 import lpg.runtime.IToken;
 
+import org.eclipse.core.runtime.NullProgressMonitor;
 import org.eclipse.imp.editor.ErrorProposal;
 import org.eclipse.imp.parser.IParseController;
 import org.eclipse.imp.parser.ISourcePositionLocator;
@@ -128,7 +129,7 @@
 				return createErrorProposal("No proposals available - could not identify proposal context", offset);
 		}
 
-		ICompletionProposal[] results = toProposals(invokeCompletionFunction(), document, offset);
+		ICompletionProposal[] results = toProposals(invokeCompletionFunction(controller), document, offset);
 		
 		/* UNDONE: automatic proposal insertion
 		if (results.length == 1 && results[0] instanceof SourceProposal) {
@@ -205,7 +206,7 @@
 		return result;
 	}
 
-	private IStrategoTerm invokeCompletionFunction() {
+	private IStrategoTerm invokeCompletionFunction(final IParseController controller) {
 		if (completionFunction == null) {
 			return Environment.getTermFactory().makeList();
 		} else {
@@ -214,6 +215,9 @@
 				IStrategoTerm result;
 				public void run() {
 					synchronized (observer.getSyncRoot()) {
+						if (!observer.isUpdateScheduled()) {
+							observer.update(controller, new NullProgressMonitor());
+						}
 						IStrategoTerm input = observer.makeInputTerm(currentCompletionNode, true, false);
 						result = observer.invokeSilent(completionFunction, input, currentCompletionNode.getResource());
 						if (result == null) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java	2010-05-21 15:48:14 UTC (rev 20863)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java	2010-05-21 15:49:57 UTC (rev 20864)
@@ -10,7 +10,7 @@
 import org.eclipse.jface.text.TextEvent;
 import org.eclipse.jface.text.source.ISourceViewer;
 import org.strategoxt.imp.runtime.Environment;
-import org.strategoxt.imp.runtime.WeakWeakMap;
+import org.strategoxt.imp.runtime.WeakSoftMap;
 
 /**
  * Activates the content proposer based on text events.
@@ -19,8 +19,8 @@
  */
 public class ContentProposerListener implements ITextListener {
 	
-	private static final WeakWeakMap<ISourceViewer, ContentProposerListener> asyncListeners =
-		new WeakWeakMap<ISourceViewer, ContentProposerListener>();
+	private static final WeakSoftMap<ISourceViewer, ContentProposerListener> asyncListeners =
+		new WeakSoftMap<ISourceViewer, ContentProposerListener>();
 	
 	private final Set<Pattern> patterns;
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java	2010-05-21 15:48:14 UTC (rev 20863)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java	2010-05-21 15:49:57 UTC (rev 20864)
@@ -10,7 +10,7 @@
 import org.eclipse.ui.IEditorPart;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
-import org.strategoxt.imp.runtime.WeakWeakMap;
+import org.strategoxt.imp.runtime.WeakSoftMap;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
@@ -23,8 +23,8 @@
 	/**
 	 * Maps target editors to their builder listener.
 	 */
-	private static final WeakWeakMap<IEditorPart, StrategoBuilderListener> asyncListeners =
-		new WeakWeakMap<IEditorPart, StrategoBuilderListener>();
+	private static final WeakSoftMap<IEditorPart, StrategoBuilderListener> asyncListeners =
+		new WeakSoftMap<IEditorPart, StrategoBuilderListener>();
 	
 	private final String builder;
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-21 15:48:14 UTC (rev 20863)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-21 15:49:57 UTC (rev 20864)
@@ -46,7 +46,7 @@
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.SWTSafeLock;
-import org.strategoxt.imp.runtime.WeakWeakMap;
+import org.strategoxt.imp.runtime.WeakSoftMap;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 import org.strategoxt.imp.runtime.dynamicloading.IDynamicLanguageService;
@@ -77,7 +77,7 @@
 	public static final int OBSERVER_DELAY = 600;
 	
 	private static Map<Descriptor, HybridInterpreter> cachedRuntimes =
-		Collections.synchronizedMap(new WeakWeakMap<Descriptor, HybridInterpreter>());
+		Collections.synchronizedMap(new WeakSoftMap<Descriptor, HybridInterpreter>());
 	
 	private final Map<IResource, IStrategoTerm> resultingAsts =
 		new WeakHashMap<IResource, IStrategoTerm>();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java	2010-05-21 15:48:14 UTC (rev 20863)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoReferenceResolver.java	2010-05-21 15:49:57 UTC (rev 20864)
@@ -6,6 +6,7 @@
 
 import lpg.runtime.IAst;
 
+import org.eclipse.core.runtime.NullProgressMonitor;
 import org.eclipse.imp.parser.IParseController;
 import org.eclipse.imp.services.IReferenceResolver;
 import org.spoofax.interpreter.terms.IStrategoString;
@@ -48,9 +49,10 @@
 		}
 		
 		synchronized (Environment.getSyncRoot()) {
+			if (!observer.isUpdateScheduled()) {
+				observer.update(parseController, new NullProgressMonitor());
+			}
 			IStrategoTerm resultTerm = observer.invokeSilent(function, node);
-			if (resultTerm == null && !observer.isUpdateScheduled())
-				observer.scheduleUpdate(parseController);
 			return observer.getAstNode(resultTerm);
 		}
 	}



From L.C.L.Kats at tudelft.nl  Fri May 21 18:04:37 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 21 May 2010 16:04:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20865 - LennartKats -
	in spoofax-imp/trunk: . org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.feature org.strategoxt.imp.updatesite
Message-ID: <201005211604.o4LG4bBH000858@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-21 16:04:37 +0000 (Fri, 21 May 2010)
New Revision: 20865

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20865&view=rev

Removed:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/include/
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/include/
Modified:
   spoofax-imp/trunk/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
New release 0.4.7.1.

Changes:

Modified: spoofax-imp/trunk/Makefile
===================================================================
--- spoofax-imp/trunk/Makefile	2010-05-21 15:49:57 UTC (rev 20864)
+++ spoofax-imp/trunk/Makefile	2010-05-21 16:04:37 UTC (rev 20865)
@@ -9,6 +9,7 @@
 
 org.strategoxt.imp.generator/lib/sdf2imp.jar : .PHONY
 	$(MAKE) -C org.strategoxt.imp.generator all
+	for F in */utils; do cp org.strategoxt.imp.generator/lib/sdf2imp.jar $$F; done
 
 %.ant : .PHONY
 	cd $* && ANT_OPTS="-Xss8m -Xmx768m" CLASSPATH=utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar \

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-21 15:49:57 UTC (rev 20864)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-21 16:04:37 UTC (rev 20865)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.7"
+      version="0.4.7.1"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-21 15:49:57 UTC (rev 20864)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-21 16:04:37 UTC (rev 20865)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.7.jar" id="org.strategoxt.imp" version="0.4.7">
+   <feature url="features/org.strategoxt.imp_0.4.7.1.jar" id="org.strategoxt.imp" version="0.4.7.1">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Tue May 25 13:57:30 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 25 May 2010 11:57:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20866 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang
Message-ID: <201005251157.o4PBvU74014545@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-25 11:57:30 +0000 (Tue, 25 May 2010)
New Revision: 20866

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20866&view=rev

Added:
   strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_string_replace_0_2.java

Log:
Missing file

Changes:

Added: strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_string_replace_0_2.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_string_replace_0_2.java	                        (rev 0)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/SRTS_EXT_string_replace_0_2.java	2010-05-25 11:57:30 UTC (rev 20866)
@@ -0,0 +1,38 @@
+package org.strategoxt.lang;
+
+import static org.spoofax.interpreter.core.Tools.asJavaString;
+import static org.spoofax.interpreter.core.Tools.isTermString;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class SRTS_EXT_string_replace_0_2 extends Strategy {
+	
+	public static SRTS_EXT_string_replace_0_2 instance = new SRTS_EXT_string_replace_0_2();
+
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm current,
+			IStrategoTerm before, IStrategoTerm after) {
+		
+		if (isTermString(current) && isTermString(before) && isTermString(after)) {
+			return invoke(context.getFactory(), current, asJavaString(before), asJavaString(after));
+		} else {
+			return null;
+		}
+	}
+
+	private IStrategoTerm invoke(ITermFactory factory, IStrategoTerm current,
+			String before, String after) {
+		
+		String input = asJavaString(current);
+		String result = input.replace(before, after);
+		if (input == result) {
+			return current;
+		} else {
+			return factory.makeString(result);
+		}
+	}
+}



From L.C.L.Kats at tudelft.nl  Wed May 26 14:27:09 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 26 May 2010 12:27:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20868 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.pp org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.stratego
Message-ID: <201005261227.o4QCR9wl003119@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-26 12:27:08 +0000 (Wed, 26 May 2010)
New Revision: 20868

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20868&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-25 14:10:31 UTC (rev 20867)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-26 12:27:08 UTC (rev 20868)
@@ -310,10 +310,6 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
-            <!-- copy imported terms -->
-            <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-25 14:10:31 UTC (rev 20867)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-26 12:27:08 UTC (rev 20868)
@@ -310,10 +310,6 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
-            <!-- copy imported terms -->
-            <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-25 14:10:31 UTC (rev 20867)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-26 12:27:08 UTC (rev 20868)
@@ -310,10 +310,6 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
-            <!-- copy imported terms -->
-            <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-05-25 14:10:31 UTC (rev 20867)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-05-26 12:27:08 UTC (rev 20868)
@@ -310,10 +310,6 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
-            <!-- copy imported terms -->
-            <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-25 14:10:31 UTC (rev 20867)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-26 12:27:08 UTC (rev 20868)
@@ -310,10 +310,6 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
-            <!-- copy imported terms -->
-            <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-25 14:10:31 UTC (rev 20867)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-26 12:27:08 UTC (rev 20868)
@@ -310,10 +310,6 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
-            <!-- copy imported terms -->
-            <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             



From L.C.L.Kats at tudelft.nl  Wed May 26 14:57:48 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 26 May 2010 12:57:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20869 - LennartKats -
	strc-java/trunk/java/runtime/org/strategoxt/lang/terms
Message-ID: <201005261257.o4QCvmDL003583@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-26 12:57:48 +0000 (Wed, 26 May 2010)
New Revision: 20869

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20869&view=rev

Modified:
   strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java

Log:
StrategoXT/801: Memory leak in TermFactory

Changes:

Modified: strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java
===================================================================
--- strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java	2010-05-26 12:27:08 UTC (rev 20868)
+++ strc-java/trunk/java/runtime/org/strategoxt/lang/terms/TermFactory.java	2010-05-26 12:57:48 UTC (rev 20869)
@@ -8,8 +8,10 @@
 import java.io.BufferedInputStream;
 import java.io.IOException;
 import java.io.InputStream;
+import java.lang.ref.WeakReference;
 import java.util.Collection;
 import java.util.HashMap;
+import java.util.WeakHashMap;
 
 import org.spoofax.interpreter.terms.BasicTermFactory;
 import org.spoofax.interpreter.terms.IStrategoAppl;
@@ -47,12 +49,9 @@
     private static final HashMap<StrategoConstructor, StrategoConstructor> asyncCtorCache =
         new HashMap<StrategoConstructor, StrategoConstructor>();
     
-    // TODO: use a WeakValueHashMap for TermFactory.asyncStringPool?
-    //       (WeakHashMap<String, WeakReference> seems to be quite expensive)
-    // Alternatively, we could maintain a prefix string - counter map,
-    // parsing the integer postfix of all strings that are constructed
-    private static final HashMap<String, StrategoString> asyncStringPool =
-        new HashMap<String, StrategoString>();
+    // StrategoXT/801: must use weak keys and values, and must maintain maximal sharing to avoid early collection
+    private static final WeakHashMap<String, WeakReference<StrategoString>> asyncStringPool =
+        new WeakHashMap<String, WeakReference<StrategoString>>();
     
     @Override
     public boolean hasConstructor(String name, int arity) {
@@ -64,7 +63,7 @@
             		throw new UnsupportedOperationException("String too long to be pooled (newname not allowed): " + name);
             	} else {
                 	// HACK: pre-allocating strings to avoid race condition 
-            		asyncStringPool.put(name, new StrategoString(name, null, MAXIMALLY_SHARED));
+            		asyncStringPool.put(name, new WeakReference<StrategoString>(new StrategoString(name, null, MAXIMALLY_SHARED)));
             		return false;
             	}
         	} else {
@@ -198,10 +197,11 @@
     		return new StrategoString(s, null, MY_STORAGE_TYPE);
     	
     	synchronized (TermFactory.class) {
-	    	StrategoString result = asyncStringPool.get(s);
+	    	WeakReference<StrategoString> resultRef = asyncStringPool.get(s);
+	    	StrategoString result = resultRef == null ? null : resultRef.get();
 	    	if (result == null) {
 	        	result = new StrategoString(s, null, MAXIMALLY_SHARED);
-	        	asyncStringPool.put(s, result);
+	        	asyncStringPool.put(s, new WeakReference<StrategoString>(result));
 	    	}
 	    	return result;
     	}



From L.C.L.Kats at tudelft.nl  Wed May 26 16:05:01 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 26 May 2010 14:05:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20870 - LennartKats -
	aster/trunk/trans spoofax-imp/trunk/org.strategoxt.imp.generator/lib
Message-ID: <201005261405.o4QE51DG004821@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-26 14:05:01 +0000 (Wed, 26 May 2010)
New Revision: 20870

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20870&view=rev

Modified:
   aster/trunk/trans/Makefile.am
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/aster.jar

Log:
Added org.strategoxt.aster package name.

Changes:

Modified: aster/trunk/trans/Makefile.am
===================================================================
--- aster/trunk/trans/Makefile.am	2010-05-26 12:57:48 UTC (rev 20869)
+++ aster/trunk/trans/Makefile.am	2010-05-26 14:05:01 UTC (rev 20870)
@@ -40,10 +40,10 @@
 
 java/org/strategoxt/aster/Main.java : $(RTREES) ../runtime/aster-runtime.packed-rtree front/check.rtree
 	[ -e java/org/strategoxt/aster ] || mkdir -p java/org/strategoxt/aster
-	strj -clean -i $< -o $@ $(SCFLAGS) $(STRINCLUDES) -m main-aster
+	strj -clean -i $< -o $@ $(SCFLAGS) $(STRINCLUDES) -m main-aster -p org.strategoxt.aster
 
 java/aster.jar : java/org/strategoxt/aster/Main.java
-	strj-jar -i $< -o $@
+	strj-jar -i $< -o $@ -cp java
 
 aster.copy : aster
 	cp aster aster.copy

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/aster.jar
===================================================================
(Binary files differ)



From L.C.L.Kats at tudelft.nl  Wed May 26 16:06:49 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 26 May 2010 14:06:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20871 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans
Message-ID: <201005261406.o4QE6nTG004864@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-26 14:06:49 +0000 (Wed, 26 May 2010)
New Revision: 20871

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20871&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str

Log:
Disabled some annoying warnings.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-26 14:05:01 UTC (rev 20870)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-26 14:06:49 UTC (rev 20871)
@@ -19,11 +19,9 @@
       );
       try(get-source-base-dir);
       if <file-exists> $[[project-path]/.disable-global-analysis] then
-        <debug(!"analysis disabled: ")> project-path;
         rules(NoAnalysis: _)
       end;
       if <file-exists> $[[project-path]/.warn-global-analysis] then
-        <debug(!"analysis limited to warnings only: ")> project-path;
         rules(WarnAnalysis: _)
     end
     with
@@ -690,6 +688,7 @@
   constraint-warning:
     Import("Java-15") -> (<id>, "Use 'import libjava-front' instead")
 
+  /*
   constraint-warning:
     Module(x, _) -> (x, $[Module name should be qualified with a path relative to the import path])
     where
@@ -699,6 +698,7 @@
         <eq> (<base-filename> x, <remove-extension> <base-filename> <CurrentFile>);
         require(<resolve-import-path> $[[x].str] + <resolve-import-path> $[[x].rtree])
       |}
+  */
 
   constraint-warning:
     Module(x, _) -> (x, $[Module name does not correspond to file name])



From L.C.L.Kats at tudelft.nl  Wed May 26 18:26:04 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 26 May 2010 16:26:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20872 - LennartKats -
	in spoofax-imp/trunk: . org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.pp org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.stratego
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.metatooling/META-INF
	org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201005261626.o4QGQ49B006761@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-26 16:26:03 +0000 (Wed, 26 May 2010)
New Revision: 20872

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20872&view=rev

Modified:
   spoofax-imp/trunk/Makefile
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractServiceFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java

Log:
- Spoofax/136: Don't include utils/*.jar in projects
- Tweaked ant settings for build.main.xml in new projects


Changes:

Modified: spoofax-imp/trunk/Makefile
===================================================================
--- spoofax-imp/trunk/Makefile	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/Makefile	2010-05-26 16:26:03 UTC (rev 20872)
@@ -7,10 +7,14 @@
       org.strategoxt.imp.editors.aster.ant \
       org.strategoxt.imp.editors.pp.ant
 
-org.strategoxt.imp.generator/lib/sdf2imp.jar : .PHONY
+org.strategoxt.imp.generator/lib/sdf2imp.jar : org.strategoxt.imp.generator/lib/strategoxt.jar .PHONY
 	$(MAKE) -C org.strategoxt.imp.generator all
-	for F in */utils; do cp org.strategoxt.imp.generator/lib/sdf2imp.jar $$F; done
+	for F in org.strategoxt.imp.editors.*; do [ -e $$F/utils ] || mkdir $$F/utils; cp org.strategoxt.imp.generator/lib/*.jar $$F/utils; done
 
+org.strategoxt.imp.generator/lib/strategoxt.jar :
+	@echo Please link or copy your strategoxt.jar file to $@
+	@exit 1
+	
 %.ant : .PHONY
 	cd $* && ANT_OPTS="-Xss8m -Xmx768m" CLASSPATH=utils/strategoxt.jar:utils/sdf2imp.jar:utils/make_permissive.jar \
 	    ant -f build.main.xml -Declipse.spoofaximp.jars=../org.strategoxt.imp.generator/lib \

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-26 16:26:03 UTC (rev 20872)
@@ -2,7 +2,7 @@
 
 <project name="build.generated">
     
-        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -37,7 +37,6 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -47,7 +46,10 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
-            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -92,7 +94,7 @@
             </java>
         </target>
 
-        <target name="utils-files">
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
             <mkdir dir="utils"/>
             <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
             <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
@@ -243,6 +245,9 @@
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+                <path><fileset dir="${basedir}" includes="*.astr"/></path>
+            </pathconvert>
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.astr"/>
@@ -259,14 +264,13 @@
             <antcall target="stratego.aster.helper"/>
         </target>
     
-        <target name="stratego.aster.helper" unless="aster-output.uptodate">
-            <apply executable="java" failonerror="true">
-                <arg line="-Xss8m -Xmx768m -client -jar utils/aster.jar"/>
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
                 <arg value="-i"/>
                 <fileset dir="${basedir}">
                     <include name="**/*.astr"/>
                 </fileset>
-            </apply>
+            </java>
         </target>
     
         <!-- Stratego to Java interpreter -->
@@ -310,6 +314,10 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-26 16:26:03 UTC (rev 20872)
@@ -2,7 +2,7 @@
 
 <project name="build.generated">
     
-        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -37,7 +37,6 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -47,7 +46,10 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
-            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -92,7 +94,7 @@
             </java>
         </target>
 
-        <target name="utils-files">
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
             <mkdir dir="utils"/>
             <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
             <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
@@ -243,6 +245,9 @@
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+                <path><fileset dir="${basedir}" includes="*.astr"/></path>
+            </pathconvert>
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.astr"/>
@@ -259,14 +264,13 @@
             <antcall target="stratego.aster.helper"/>
         </target>
     
-        <target name="stratego.aster.helper" unless="aster-output.uptodate">
-            <apply executable="java" failonerror="true">
-                <arg line="-Xss8m -Xmx768m -client -jar utils/aster.jar"/>
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
                 <arg value="-i"/>
                 <fileset dir="${basedir}">
                     <include name="**/*.astr"/>
                 </fileset>
-            </apply>
+            </java>
         </target>
     
         <!-- Stratego to Java interpreter -->
@@ -310,6 +314,10 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-26 16:26:03 UTC (rev 20872)
@@ -2,7 +2,7 @@
 
 <project name="build.generated">
     
-        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -37,7 +37,6 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -47,7 +46,10 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
-            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -92,7 +94,7 @@
             </java>
         </target>
 
-        <target name="utils-files">
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
             <mkdir dir="utils"/>
             <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
             <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
@@ -243,6 +245,9 @@
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+                <path><fileset dir="${basedir}" includes="*.astr"/></path>
+            </pathconvert>
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.astr"/>
@@ -259,14 +264,13 @@
             <antcall target="stratego.aster.helper"/>
         </target>
     
-        <target name="stratego.aster.helper" unless="aster-output.uptodate">
-            <apply executable="java" failonerror="true">
-                <arg line="-Xss8m -Xmx768m -client -jar utils/aster.jar"/>
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
                 <arg value="-i"/>
                 <fileset dir="${basedir}">
                     <include name="**/*.astr"/>
                 </fileset>
-            </apply>
+            </java>
         </target>
     
         <!-- Stratego to Java interpreter -->
@@ -310,6 +314,10 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-05-26 16:26:03 UTC (rev 20872)
@@ -2,7 +2,7 @@
 
 <project name="build.generated">
     
-        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -37,7 +37,6 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -47,7 +46,10 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
-            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -92,7 +94,7 @@
             </java>
         </target>
 
-        <target name="utils-files">
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
             <mkdir dir="utils"/>
             <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
             <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
@@ -243,6 +245,9 @@
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+                <path><fileset dir="${basedir}" includes="*.astr"/></path>
+            </pathconvert>
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.astr"/>
@@ -259,14 +264,13 @@
             <antcall target="stratego.aster.helper"/>
         </target>
     
-        <target name="stratego.aster.helper" unless="aster-output.uptodate">
-            <apply executable="java" failonerror="true">
-                <arg line="-Xss8m -Xmx768m -client -jar utils/aster.jar"/>
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
                 <arg value="-i"/>
                 <fileset dir="${basedir}">
                     <include name="**/*.astr"/>
                 </fileset>
-            </apply>
+            </java>
         </target>
     
         <!-- Stratego to Java interpreter -->
@@ -310,6 +314,10 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-26 16:26:03 UTC (rev 20872)
@@ -2,7 +2,7 @@
 
 <project name="build.generated">
     
-        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -37,7 +37,6 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -47,7 +46,10 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
-            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -92,7 +94,7 @@
             </java>
         </target>
 
-        <target name="utils-files">
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
             <mkdir dir="utils"/>
             <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
             <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
@@ -243,6 +245,9 @@
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+                <path><fileset dir="${basedir}" includes="*.astr"/></path>
+            </pathconvert>
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.astr"/>
@@ -259,14 +264,13 @@
             <antcall target="stratego.aster.helper"/>
         </target>
     
-        <target name="stratego.aster.helper" unless="aster-output.uptodate">
-            <apply executable="java" failonerror="true">
-                <arg line="-Xss8m -Xmx768m -client -jar utils/aster.jar"/>
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
                 <arg value="-i"/>
                 <fileset dir="${basedir}">
                     <include name="**/*.astr"/>
                 </fileset>
-            </apply>
+            </java>
         </target>
     
         <!-- Stratego to Java interpreter -->
@@ -310,6 +314,10 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-26 16:26:03 UTC (rev 20872)
@@ -2,7 +2,7 @@
 
 <project name="build.generated">
     
-        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -37,7 +37,6 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite"/>
-            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
@@ -47,7 +46,10 @@
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
             <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
-            <eclipse.refreshLocal resource="${build}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
         </target>
         
         <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
@@ -92,7 +94,7 @@
             </java>
         </target>
 
-        <target name="utils-files">
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
             <mkdir dir="utils"/>
             <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
             <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
@@ -243,6 +245,9 @@
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+                <path><fileset dir="${basedir}" includes="*.astr"/></path>
+            </pathconvert>
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.astr"/>
@@ -259,14 +264,13 @@
             <antcall target="stratego.aster.helper"/>
         </target>
     
-        <target name="stratego.aster.helper" unless="aster-output.uptodate">
-            <apply executable="java" failonerror="true">
-                <arg line="-Xss8m -Xmx768m -client -jar utils/aster.jar"/>
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
                 <arg value="-i"/>
                 <fileset dir="${basedir}">
                     <include name="**/*.astr"/>
                 </fileset>
-            </apply>
+            </java>
         </target>
     
         <!-- Stratego to Java interpreter -->
@@ -310,6 +314,10 @@
               <fileset dir="${build}" includes="trans/**"/>
             </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
         </target>
             

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-05-26 16:26:03 UTC (rev 20872)
@@ -74,7 +74,7 @@
     <?xml version="1.0" encoding="UTF-8"?>
     <project name="build.generated">
     
-        <target name="spoofaximp.default" depends="utils-files,sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default" depends="sdf2table,ppgen,pppack,stratego.aster,stratego.ctree,sdf2imp,refresh"/>
     
         <!-- Initialization -->
         <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
@@ -109,7 +109,6 @@
         <target name="refresh" if="eclipse.running">
             <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir" />
             <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
-            <eclipse.refreshLocal resource="${projectdir}/utils" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/syntax/${sdfmodule}.pp.generated" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/lib/editor-common.generated.str" depth="infinite" />
             <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite" />
@@ -167,7 +166,7 @@
             </java>
         </target>
 
-        <target name="utils-files">
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
             <mkdir dir="utils"/>
             <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
             <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
@@ -318,6 +317,9 @@
         <!-- Aster to Stratego -->
         <target name="stratego.aster">
             <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <pathconvert property="aster-input" setonempty="false" pathsep=" ">
+                <path><fileset dir="${basedir}" includes="*.astr" /></path>
+            </pathconvert>
             <dependset>
                 <srcfileset dir="${basedir}">
                     <include name="**/*.astr"/>
@@ -334,14 +336,13 @@
             <antcall target="stratego.aster.helper"/>
         </target>
     
-        <target name="stratego.aster.helper" unless="aster-output.uptodate">
-            <apply executable="java" failonerror="true">
-                <arg line="-Xss8m -Xmx768m -client -jar utils/aster.jar"/>
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
                 <arg value="-i"/>
                 <fileset dir="${basedir}">
                     <include name="**/*.astr"/>
                 </fileset>
-            </apply>
+            </java>
         </target>
     
         <!-- Stratego to Java interpreter -->

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-builder-xml.str	2010-05-26 16:26:03 UTC (rev 20872)
@@ -58,7 +58,7 @@
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="[project-name]"/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/[project-name]/build.main.xml}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/[project-name]}"/>
 <stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str	2010-05-26 16:26:03 UTC (rev 20872)
@@ -14,7 +14,6 @@
 	<classpathentry kind="src" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry kind="lib" path="utils/strategoxt.jar"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>
     <%

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/META-INF/MANIFEST.MF	2010-05-26 16:26:03 UTC (rev 20872)
@@ -30,7 +30,8 @@
  org.strategoxt.imp.editors.stratego,
  org.strategoxt.imp.editors.aterm,
  org.eclipse.ant.core,
- org.strategoxt.imp.nativebundle
+ org.strategoxt.imp.nativebundle,
+ org.strategoxt.imp.editors.aster
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Bundle-Activator: org.strategoxt.imp.metatooling.MetatoolingActivator
 Bundle-ActivationPolicy: lazy

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/wizards/NewEditorWizard.java	2010-05-26 16:26:03 UTC (rev 20872)
@@ -1,8 +1,7 @@
 package org.strategoxt.imp.metatooling.wizards;
 
-import static org.eclipse.core.resources.IResource.*;
+import static org.eclipse.core.resources.IResource.DEPTH_INFINITE;
 
-import java.io.File;
 import java.io.IOException;
 import java.lang.reflect.InvocationTargetException;
 
@@ -16,7 +15,6 @@
 import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.NullProgressMonitor;
-import org.eclipse.core.runtime.Platform;
 import org.eclipse.core.runtime.Status;
 import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.jface.dialogs.MessageDialog;
@@ -134,22 +132,7 @@
 
 		agent.setWorkingDir(project.getLocation().toOSString());
 		try {
-			String jar1 = org.strategoxt.stratego_lib.Main.class.getProtectionDomain().getCodeSource().getLocation().getFile();
-			String jar2 = make_permissive.class.getProtectionDomain().getCodeSource().getLocation().getFile();
-			String jar3 = sdf2imp.class.getProtectionDomain().getCodeSource().getLocation().getFile();
-			if (Platform.getOS().equals(Platform.OS_WIN32)) { // FIXME: proper paths on Windows
-				jar1 = jar1.substring(1);
-				jar2 = jar2.substring(1);
-				jar3 = jar3.substring(1);
-			}
-			if (!jar1.endsWith(".jar")) { // ensure correct jar at development time
-				String jar1a = jar1 + "/../strategoxt.jar";
-				if (new File(jar1a).exists()) jar1 = jar1a;
-				jar1a = jar1 + "/java/strategoxt.jar";
-				if (new File(jar1a).exists()) jar1 = jar1a;
-			}
-			assert jar1.endsWith(".jar") && jar2.endsWith(".jar") && jar3.endsWith(".jar") : "Library files are not in JAR"; // please refresh the strj projectin Eclipse
-			sdf2imp.mainNoExit(context, "-m", languageName, "-pn", projectName, "-n", packageName, "-e", extensions, "--verbose", "2", "-jar", jar1, jar2, jar3);
+			sdf2imp.mainNoExit(context, "-m", languageName, "-pn", projectName, "-n", packageName, "-e", extensions, "--verbose", "2");
 		} catch (StrategoErrorExit e) {
 			Environment.logException(e);
 			throw new StrategoException("Project builder failed: " + e.getMessage() + "\nLog follows:\n\n"
@@ -233,4 +216,4 @@
 		throw new CoreException(status);
 	}
 	*/
-}
\ No newline at end of file
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java	2010-05-26 16:26:03 UTC (rev 20872)
@@ -23,7 +23,7 @@
 	private final WeakHashMap<K, SoftReference<V>> map = new WeakHashMap<K, SoftReference<V>>();
 	
 	public WeakSoftMap() {
-		// Construct new WeakWeakMap
+		// Construct new instance
 	}
 
 	public void clear() {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractServiceFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractServiceFactory.java	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractServiceFactory.java	2010-05-26 16:26:03 UTC (rev 20872)
@@ -10,16 +10,16 @@
 	
 	private final Class<T> serviceType;
 	
-	private final boolean isCached;
+	private final boolean isCachable;
 
 	/**
-	 * @param isCached
+	 * @param isCachable
 	 *            Determines whether this service should be cached. In most
 	 *            cases, cached services should be thread-safe.
 	 */
-	public AbstractServiceFactory(Class<T> serviceType, boolean isCached) {
+	public AbstractServiceFactory(Class<T> serviceType, boolean isCachable) {
 		this.serviceType = serviceType;
-		this.isCached = isCached;
+		this.isCachable = isCachable;
 	}
 
 	public AbstractServiceFactory(Class<T> serviceType) {
@@ -35,8 +35,8 @@
 	 */
 	public abstract T create(Descriptor descriptor, SGLRParseController controller) throws BadDescriptorException;
 	
-	public boolean isCached() {
-		return isCached;
+	public final boolean isCachable() {
+		return isCachable;
 	}
 	
 	/**

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-26 16:26:03 UTC (rev 20872)
@@ -53,14 +53,19 @@
 	
 	protected static final String DEFAULT_ICON_BUNDLE = RuntimeActivator.getInstance().getBundle().getSymbolicName();
 	
+	/**
+	 * A set of all active services for a given descriptor.
+	 * (Implemented as a map from services to null.)
+	 */
 	private final Map<IDynamicLanguageService, Object> activeServices =
 		Collections.synchronizedMap(new WeakHashMap<IDynamicLanguageService, Object>());
 	
-	/*
-	 * We have to use a WeakReference here, because there's many references from a value to its key.
-	 * For example, many language services have a reference to an AST node, which (eventually) has a reference to
-	 * the root ast node, which has a reference back to the SGLRParseController. See the implementation note on
-	 * http://java.sun.com/j2se/1.5.0/docs/api/java/util/WeakHashMap.html
+	/**
+	 * A per-editor map for all services marked as cacheable.
+	 * 
+	 * Only using weak keys and values can ensure that these services
+	 * are garbage collected, as many language services refer to
+	 * their parse controller (or AST), which is used as the key in this map. 
 	 */
 	private final Map<SGLRParseController, Map<Class, ILanguageService>> cachedServices =
 		Collections.synchronizedMap(new WeakSoftMap<SGLRParseController, Map<Class, ILanguageService>>());
@@ -152,7 +157,7 @@
 						if (result != null) return result;
 						result = factory.create(this, controller);
 						if (result != null) {
-							addKnownService(type, controller, result, factory.isCached() && controller != null);
+							addKnownService(type, controller, result, factory.isCachable() && controller != null);
 							return result;
 						}
 						foundFactory = true;
@@ -177,10 +182,10 @@
 		return result;
 	}
 
-	private void addKnownService(Class type, SGLRParseController controller, ILanguageService service, boolean isCached) {
+	private void addKnownService(Class type, SGLRParseController controller, ILanguageService service, boolean isCachable) {
 		if (service instanceof IDynamicLanguageService)
 			activeServices.put((IDynamicLanguageService) service, null);
-		if (isCached) {
+		if (isCachable) {
 			Map<Class, ILanguageService> cache = cachedServices.get(controller);
 			if (cache == null) {
 				cache = Collections.synchronizedMap(new HashMap<Class, ILanguageService>());

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-26 14:06:49 UTC (rev 20871)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-26 16:26:03 UTC (rev 20872)
@@ -98,6 +98,8 @@
 	
 	private volatile boolean rushNextUpdate;
 	
+	private boolean wasExceptionLogged;
+	
 	public StrategoObserver(Descriptor descriptor, String feedbackFunction) {
 		this.descriptor = descriptor;
 		this.feedbackFunction = feedbackFunction;
@@ -307,7 +309,8 @@
 				if (feedback == null) {
 					reportRewritingFailed();
 					String log = getLog();
-					Environment.logException(log.length() == 0 ? "Analysis failed" : "Analysis failed:\n" + log);
+					if (!wasExceptionLogged || log.length() > 0)
+						Environment.logException(log.length() == 0 ? "Analysis failed" : "Analysis failed:\n" + log);
 					messages.clearMarkers(ast.getResource());
 					messages.addMarkerFirstLine(ast.getResource(), "Analysis failed (see error log)", IMarker.SEVERITY_ERROR);
 					messages.commitAllChanges();
@@ -589,11 +592,14 @@
 		IStrategoTerm result = null;
 		
 		try {
+			wasExceptionLogged = true;
 			result = invoke(function, input, resource);
+			wasExceptionLogged = false;
 		} catch (InterpreterExit e) {
 			if (descriptor.isDynamicallyLoaded()) StrategoConsole.activateConsole();
 			messages.clearMarkers(resource);
-			messages.addMarkerFirstLine(resource, "Analysis failed (" + name(e) + "; see error log)", IMarker.SEVERITY_ERROR);
+			if (!(e instanceof InterpreterErrorExit))
+				messages.addMarkerFirstLine(resource, "Analysis failed (" + name(e) + "; see error log)", IMarker.SEVERITY_ERROR);
 			messages.commitAllChanges();
 			Environment.logException("Runtime exited when evaluating strategy " + function, e);
 		} catch (UndefinedStrategyException e) {



From L.C.L.Kats at tudelft.nl  Wed May 26 18:49:27 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 26 May 2010 16:49:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20873 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading
Message-ID: <201005261649.o4QGnRGu006937@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-26 16:49:27 +0000 (Wed, 26 May 2010)
New Revision: 20873

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20873&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java

Log:
Spoofax/135: Service caching

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-26 16:26:03 UTC (rev 20872)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-26 16:49:27 UTC (rev 20873)
@@ -14,7 +14,6 @@
 import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.Collections;
-import java.util.HashMap;
 import java.util.LinkedHashSet;
 import java.util.List;
 import java.util.Map;
@@ -33,9 +32,9 @@
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.RuntimeActivator;
-import org.strategoxt.imp.runtime.WeakSoftMap;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+import org.strategoxt.lang.WeakValueHashMap;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
@@ -68,7 +67,7 @@
 	 * their parse controller (or AST), which is used as the key in this map. 
 	 */
 	private final Map<SGLRParseController, Map<Class, ILanguageService>> cachedServices =
-		Collections.synchronizedMap(new WeakSoftMap<SGLRParseController, Map<Class, ILanguageService>>());
+		Collections.synchronizedMap(new WeakHashMap<SGLRParseController, Map<Class, ILanguageService>>());
 	
 	private final List<AbstractServiceFactory> serviceFactories = new ArrayList<AbstractServiceFactory>();
 	
@@ -118,7 +117,7 @@
 	public void reinitialize(Descriptor newDescriptor) throws BadDescriptorException {
 		// Note: may also be reinitialized with the same descriptor
 		synchronized (activeServices) {
-			// Copy the list of services since reinitialize() might chage it
+			// Copy the list of services since reinitialize() might change it
 			IDynamicLanguageService[] currentServices = activeServices.keySet().toArray(new IDynamicLanguageService[0]);
 			for (IDynamicLanguageService service : currentServices)
 				service.reinitialize(newDescriptor);
@@ -188,7 +187,7 @@
 		if (isCachable) {
 			Map<Class, ILanguageService> cache = cachedServices.get(controller);
 			if (cache == null) {
-				cache = Collections.synchronizedMap(new HashMap<Class, ILanguageService>());
+				cache = Collections.synchronizedMap(new WeakValueHashMap<Class, ILanguageService>());
 				cachedServices.put(controller, cache);
 			}
 			cache.put(type, service);



From L.C.L.Kats at tudelft.nl  Wed May 26 18:59:54 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 26 May 2010 16:59:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20874 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	. dynamicloading services
Message-ID: <201005261659.o4QGxsoG007029@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-26 16:59:54 +0000 (Wed, 26 May 2010)
New Revision: 20874

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20874&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java
Removed:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java

Log:
Changed WeakSoftMap to WeakWeakMap: only used outside Descriptor now.

Changes:

Deleted: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java	2010-05-26 16:49:27 UTC (rev 20873)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java	2010-05-26 16:59:54 UTC (rev 20874)
@@ -1,88 +0,0 @@
-package org.strategoxt.imp.runtime;
-
-import java.lang.ref.SoftReference;
-import java.util.Collection;
-import java.util.HashSet;
-import java.util.Map;
-import java.util.Set;
-import java.util.WeakHashMap;
-
-import org.spoofax.NotImplementedException;
-import org.strategoxt.lang.WeakValueHashMap;
-
-/**
- * A WeakHashMap that uses weak reference keys and soft reference values.
- * 
- * @see WeakHashMap
- * @see WeakValueHashMap
- * 
- * @author Lennart Kats <lennart add lclnet.nl>
- */
-public class WeakSoftMap<K,V> implements Map<K,V> {
-	
-	private final WeakHashMap<K, SoftReference<V>> map = new WeakHashMap<K, SoftReference<V>>();
-	
-	public WeakSoftMap() {
-		// Construct new instance
-	}
-
-	public void clear() {
-		map.clear();
-	}
-
-	public boolean containsKey(Object key) {
-		return map.containsKey(key);
-	}
-
-	public boolean containsValue(Object value) {
-		// Can't do this using reference equality and no reference given
-		throw new UnsupportedOperationException();
-	}
-
-	public Set<java.util.Map.Entry<K, V>> entrySet() {
-		throw new NotImplementedException();
-	}
-
-	public V get(Object key) {
-		SoftReference<V> ref = map.get(key);
-		return ref == null ? null : ref.get();
-	}
-
-	public boolean isEmpty() {
-		return map.isEmpty();
-	}
-
-	public Set<K> keySet() {
-		return map.keySet();
-	}
-
-	public V put(K key, V value) {
-		if (value == null)
-			throw new IllegalArgumentException("Value cannot be null");
-		SoftReference<V> existing = map.put(key, new SoftReference<V>(value));
-		return existing == null ? null : existing.get();
-	}
-
-	public void putAll(Map<? extends K, ? extends V> m) {
-		throw new NotImplementedException();
-	}
-
-	public V remove(Object key) {
-		SoftReference<V> existing = map.remove(key);
-		return existing == null ? null : existing.get();
-	}
-
-	public int size() {
-		return map.size();
-	}
-
-	public Collection<V> values() {
-		Collection<SoftReference<V>> results = map.values();
-		Set<V> copy = new HashSet<V>(results.size());
-		for (SoftReference<V> resultRef : results) {
-			V result = resultRef == null ? null : resultRef.get();
-			if (result != null) copy.add(result);
-		}
-		return copy;
-	}
-}

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java (from rev 20872, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java	2010-05-26 16:59:54 UTC (rev 20874)
@@ -0,0 +1,88 @@
+package org.strategoxt.imp.runtime;
+
+import java.lang.ref.SoftReference;
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+import java.util.WeakHashMap;
+
+import org.spoofax.NotImplementedException;
+import org.strategoxt.lang.WeakValueHashMap;
+
+/**
+ * A WeakHashMap that uses weak reference keys and soft reference values.
+ * 
+ * @see WeakHashMap
+ * @see WeakValueHashMap
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class WeakWeakMap<K,V> implements Map<K,V> {
+	
+	private final WeakHashMap<K, SoftReference<V>> map = new WeakHashMap<K, SoftReference<V>>();
+	
+	public WeakWeakMap() {
+		// Construct new instance
+	}
+
+	public void clear() {
+		map.clear();
+	}
+
+	public boolean containsKey(Object key) {
+		return map.containsKey(key);
+	}
+
+	public boolean containsValue(Object value) {
+		// Can't do this using reference equality and no reference given
+		throw new UnsupportedOperationException();
+	}
+
+	public Set<java.util.Map.Entry<K, V>> entrySet() {
+		throw new NotImplementedException();
+	}
+
+	public V get(Object key) {
+		SoftReference<V> ref = map.get(key);
+		return ref == null ? null : ref.get();
+	}
+
+	public boolean isEmpty() {
+		return map.isEmpty();
+	}
+
+	public Set<K> keySet() {
+		return map.keySet();
+	}
+
+	public V put(K key, V value) {
+		if (value == null)
+			throw new IllegalArgumentException("Value cannot be null");
+		SoftReference<V> existing = map.put(key, new SoftReference<V>(value));
+		return existing == null ? null : existing.get();
+	}
+
+	public void putAll(Map<? extends K, ? extends V> m) {
+		throw new NotImplementedException();
+	}
+
+	public V remove(Object key) {
+		SoftReference<V> existing = map.remove(key);
+		return existing == null ? null : existing.get();
+	}
+
+	public int size() {
+		return map.size();
+	}
+
+	public Collection<V> values() {
+		Collection<SoftReference<V>> results = map.values();
+		Set<V> copy = new HashSet<V>(results.size());
+		for (SoftReference<V> resultRef : results) {
+			V result = resultRef == null ? null : resultRef.get();
+			if (result != null) copy.add(result);
+		}
+		return copy;
+	}
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java	2010-05-26 16:49:27 UTC (rev 20873)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/OnSaveServiceFactory.java	2010-05-26 16:59:54 UTC (rev 20874)
@@ -14,7 +14,7 @@
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
-import org.strategoxt.imp.runtime.WeakSoftMap;
+import org.strategoxt.imp.runtime.WeakWeakMap;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 import org.strategoxt.imp.runtime.services.OnSaveService;
 import org.strategoxt.imp.runtime.services.StrategoObserver;
@@ -25,7 +25,7 @@
 public class OnSaveServiceFactory extends AbstractServiceFactory<OnSaveService> {
 	
 	private static final Map<UniversalEditor, OnSaveService> registeredServices =
-		synchronizedMap(new WeakSoftMap<UniversalEditor, OnSaveService>());
+		synchronizedMap(new WeakWeakMap<UniversalEditor, OnSaveService>());
 
 	public OnSaveServiceFactory() {
 		super(OnSaveService.class, false);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java	2010-05-26 16:49:27 UTC (rev 20873)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposerListener.java	2010-05-26 16:59:54 UTC (rev 20874)
@@ -10,7 +10,7 @@
 import org.eclipse.jface.text.TextEvent;
 import org.eclipse.jface.text.source.ISourceViewer;
 import org.strategoxt.imp.runtime.Environment;
-import org.strategoxt.imp.runtime.WeakSoftMap;
+import org.strategoxt.imp.runtime.WeakWeakMap;
 
 /**
  * Activates the content proposer based on text events.
@@ -19,8 +19,8 @@
  */
 public class ContentProposerListener implements ITextListener {
 	
-	private static final WeakSoftMap<ISourceViewer, ContentProposerListener> asyncListeners =
-		new WeakSoftMap<ISourceViewer, ContentProposerListener>();
+	private static final WeakWeakMap<ISourceViewer, ContentProposerListener> asyncListeners =
+		new WeakWeakMap<ISourceViewer, ContentProposerListener>();
 	
 	private final Set<Pattern> patterns;
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java	2010-05-26 16:49:27 UTC (rev 20873)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilderListener.java	2010-05-26 16:59:54 UTC (rev 20874)
@@ -10,7 +10,7 @@
 import org.eclipse.ui.IEditorPart;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
-import org.strategoxt.imp.runtime.WeakSoftMap;
+import org.strategoxt.imp.runtime.WeakWeakMap;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
 import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
@@ -23,8 +23,8 @@
 	/**
 	 * Maps target editors to their builder listener.
 	 */
-	private static final WeakSoftMap<IEditorPart, StrategoBuilderListener> asyncListeners =
-		new WeakSoftMap<IEditorPart, StrategoBuilderListener>();
+	private static final WeakWeakMap<IEditorPart, StrategoBuilderListener> asyncListeners =
+		new WeakWeakMap<IEditorPart, StrategoBuilderListener>();
 	
 	private final String builder;
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-26 16:49:27 UTC (rev 20873)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-26 16:59:54 UTC (rev 20874)
@@ -46,7 +46,7 @@
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.SWTSafeLock;
-import org.strategoxt.imp.runtime.WeakSoftMap;
+import org.strategoxt.imp.runtime.WeakWeakMap;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 import org.strategoxt.imp.runtime.dynamicloading.IDynamicLanguageService;
@@ -77,7 +77,7 @@
 	public static final int OBSERVER_DELAY = 600;
 	
 	private static Map<Descriptor, HybridInterpreter> cachedRuntimes =
-		Collections.synchronizedMap(new WeakSoftMap<Descriptor, HybridInterpreter>());
+		Collections.synchronizedMap(new WeakWeakMap<Descriptor, HybridInterpreter>());
 	
 	private final Map<IResource, IStrategoTerm> resultingAsts =
 		new WeakHashMap<IResource, IStrategoTerm>();



From L.C.L.Kats at tudelft.nl  Thu May 27 10:30:47 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 27 May 2010 08:30:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20877 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	. services
Message-ID: <201005270830.o4R8Uli9024073@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-27 08:30:46 +0000 (Thu, 27 May 2010)
New Revision: 20877

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20877&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java

Log:


Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-26 20:37:11 UTC (rev 20876)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-27 08:30:46 UTC (rev 20877)
@@ -220,7 +220,7 @@
 		return result;
 	}
 
-	public static HybridInterpreter createInterpreter(HybridInterpreter prototype) {
+	public static HybridInterpreter createInterpreterFromPrototype(HybridInterpreter prototype) {
 		HybridInterpreter result = new HybridInterpreter(prototype,
 				IMPJSGLRLibrary.REGISTRY_NAME, // is spoofax-specific
 				JSGLRLibrary.REGISTRY_NAME,    // connected to the library above

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java	2010-05-26 20:37:11 UTC (rev 20876)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java	2010-05-27 08:30:46 UTC (rev 20877)
@@ -1,6 +1,6 @@
 package org.strategoxt.imp.runtime;
 
-import java.lang.ref.SoftReference;
+import java.lang.ref.WeakReference;
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Map;
@@ -20,7 +20,7 @@
  */
 public class WeakWeakMap<K,V> implements Map<K,V> {
 	
-	private final WeakHashMap<K, SoftReference<V>> map = new WeakHashMap<K, SoftReference<V>>();
+	private final WeakHashMap<K, WeakReference<V>> map = new WeakHashMap<K, WeakReference<V>>();
 	
 	public WeakWeakMap() {
 		// Construct new instance
@@ -44,7 +44,7 @@
 	}
 
 	public V get(Object key) {
-		SoftReference<V> ref = map.get(key);
+		WeakReference<V> ref = map.get(key);
 		return ref == null ? null : ref.get();
 	}
 
@@ -59,7 +59,7 @@
 	public V put(K key, V value) {
 		if (value == null)
 			throw new IllegalArgumentException("Value cannot be null");
-		SoftReference<V> existing = map.put(key, new SoftReference<V>(value));
+		WeakReference<V> existing = map.put(key, new WeakReference<V>(value));
 		return existing == null ? null : existing.get();
 	}
 
@@ -68,7 +68,7 @@
 	}
 
 	public V remove(Object key) {
-		SoftReference<V> existing = map.remove(key);
+		WeakReference<V> existing = map.remove(key);
 		return existing == null ? null : existing.get();
 	}
 
@@ -77,9 +77,9 @@
 	}
 
 	public Collection<V> values() {
-		Collection<SoftReference<V>> results = map.values();
+		Collection<WeakReference<V>> results = map.values();
 		Set<V> copy = new HashSet<V>(results.size());
-		for (SoftReference<V> resultRef : results) {
+		for (WeakReference<V> resultRef : results) {
 			V result = resultRef == null ? null : resultRef.get();
 			if (result != null) copy.add(result);
 		}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-26 20:37:11 UTC (rev 20876)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-27 08:30:46 UTC (rev 20877)
@@ -76,7 +76,7 @@
 	// TODO: separate delay for error markers?
 	public static final int OBSERVER_DELAY = 600;
 	
-	private static Map<Descriptor, HybridInterpreter> cachedRuntimes =
+	private static Map<Descriptor, HybridInterpreter> runtimePrototypes =
 		Collections.synchronizedMap(new WeakWeakMap<Descriptor, HybridInterpreter>());
 	
 	private final Map<IResource, IStrategoTerm> resultingAsts =
@@ -140,9 +140,9 @@
 	private void initialize(IProgressMonitor monitor) {
 		assert Thread.holdsLock(getSyncRoot());
 		
-		HybridInterpreter prototype = cachedRuntimes.get(descriptor);
+		HybridInterpreter prototype = runtimePrototypes.get(descriptor);
 		if (prototype != null) {
-			runtime = Environment.createInterpreter(prototype);
+			runtime = Environment.createInterpreterFromPrototype(prototype);
 			return;
 		}
 		
@@ -154,10 +154,10 @@
 		for (File file : descriptor.getAttachedFiles()) {
 			String filename = file.toString();
 			if (filename.endsWith(".ctree")) {
-				initRuntime(monitor);
+				createEmptyRuntime(monitor);
 				loadCTree(filename);
 			} else if (filename.endsWith(".jar")) {
-				initRuntime(monitor);
+				createEmptyRuntime(monitor);
 				jars.add(filename);
 			} else if (filename.endsWith(".str")) {
 				Environment.asynOpenErrorDialog("Loading analysis components", "Cannot use .str files as a provider: please specify a .ctree or .jar file instead (usually built in /include/)", null);
@@ -168,23 +168,22 @@
 		Debug.stopTimer("Loaded analysis components");
 		
 		monitor.subTask(null);
-		cachedRuntimes.put(descriptor, runtime);
+		runtimePrototypes.put(descriptor, runtime);
 	}
 	
 	/**
-	 * Uninitializes the observer and its descriptor runtime.
+	 * Uninitializes the observer.
 	 */
 	public void uninitialize() {
-		HybridInterpreter cachedRuntime = cachedRuntimes.remove(descriptor);
-		if (cachedRuntime != null) {
-			cachedRuntime.uninit();
-		} else if (runtime != null) {
+		// Removing it from the shared cache is sort of pointless and could be dangerous
+		// HybridInterpreter cachedRuntime = cachedRuntimes.remove(descriptor);
+		if (runtime != null) {
 			runtime.uninit();
 			runtime = null;
 		}
 	}
 
-	private void initRuntime(IProgressMonitor monitor) {
+	private void createEmptyRuntime(IProgressMonitor monitor) {
 		assert Thread.holdsLock(getSyncRoot());
 		
 		if (runtime == null) {
@@ -192,15 +191,6 @@
 			runtime = Environment.createInterpreter(getSyncRoot() != Environment.getSyncRoot());
 			runtime.init();
 			Debug.stopTimer("Created new Stratego runtime instance");
-			try {
-				ITermFactory factory = runtime.getFactory();
-				IStrategoTuple programName = factory.makeTuple(
-						factory.makeString("program"),
-						factory.makeString(descriptor.getLanguage().getName()));
-				set_config_0_0.instance.invoke(runtime.getCompiledContext(), programName);
-			} catch (BadDescriptorException e) {
-				// Ignore; use default program name
-			}
 			monitor.subTask("Loading analysis runtime components");
 		}
 	}
@@ -553,7 +543,7 @@
 			//       (e.g., overriding Context.lookupPrimitive to throw an OperationCanceledException) 
 			
 			runtime.setCurrent(term);
-			initRuntimePath(resource);
+			configureRuntime(resource);
 
 			((LoggingIOAgent) runtime.getIOAgent()).clearLog();
 			assert runtime.getCompiledContext().getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME)
@@ -638,10 +628,20 @@
 		}
 	}
 	
-	private void initRuntimePath(IResource resource) {
+	private void configureRuntime(IResource resource) {
 		assert Thread.holdsLock(getSyncRoot());
 		
 		try {
+			ITermFactory factory = runtime.getFactory();
+			IStrategoTuple programName = factory.makeTuple(
+					factory.makeString("program"),
+					factory.makeString(descriptor.getLanguage().getName()));
+			set_config_0_0.instance.invoke(runtime.getCompiledContext(), programName);
+		} catch (BadDescriptorException e) {
+			// Ignore; use default program name
+		}
+		
+		try {
 			EditorIOAgent io = (EditorIOAgent) runtime.getIOAgent();
 			io.setWorkingDir(resource.getLocation().removeLastSegments(1).toOSString());
 			io.setProjectPath(resource.getProject().getLocation().toOSString());
@@ -661,7 +661,7 @@
 	public HybridInterpreter getRuntime() {
 		assert Thread.holdsLock(getSyncRoot());
 		if (runtime == null) initialize(new NullProgressMonitor());
-		if (runtime == null) initRuntime(new NullProgressMonitor()); // create empty runtime
+		if (runtime == null) createEmptyRuntime(new NullProgressMonitor()); // create empty runtime
 		return runtime;
 	}
 
@@ -671,7 +671,7 @@
 
 	public void reinitialize(Descriptor newDescriptor) throws BadDescriptorException {
 		synchronized (getSyncRoot()) {
-			cachedRuntimes.remove(descriptor);
+			runtimePrototypes.remove(descriptor);
 			runtime = null;
 			descriptor = newDescriptor;
 		}



From L.C.L.Kats at tudelft.nl  Thu May 27 10:32:14 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 27 May 2010 08:32:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20878 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201005270832.o4R8WEfk024086@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-27 08:32:14 +0000 (Thu, 27 May 2010)
New Revision: 20878

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20878&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch

Log:
Added a sketch of a StrategoObserver implementation using a SoftReference<HybridInterpreter>

Changes:

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch (from rev 20877, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch	2010-05-27 08:32:14 UTC (rev 20878)
@@ -0,0 +1,683 @@
+package org.strategoxt.imp.runtime.services;
+
+import static org.spoofax.interpreter.core.Tools.isTermTuple;
+import static org.spoofax.interpreter.core.Tools.termAt;
+import static org.spoofax.interpreter.terms.IStrategoTerm.LIST;
+import static org.spoofax.interpreter.terms.IStrategoTerm.TUPLE;
+import static org.strategoxt.imp.runtime.dynamicloading.TermReader.cons;
+
+import java.io.File;
+import java.io.IOException;
+import java.lang.ref.SoftReference;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+import java.util.Map;
+import java.util.WeakHashMap;
+import java.util.concurrent.locks.Lock;
+
+import lpg.runtime.IAst;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.imp.parser.IModelListener;
+import org.eclipse.imp.parser.IParseController;
+import org.spoofax.interpreter.core.InterpreterErrorExit;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.core.InterpreterExit;
+import org.spoofax.interpreter.core.StackTracer;
+import org.spoofax.interpreter.core.UndefinedStrategyException;
+import org.spoofax.interpreter.library.LoggingIOAgent;
+import org.spoofax.interpreter.terms.IStrategoList;
+import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.IStrategoTuple;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.HybridInterpreter;
+import org.strategoxt.IncompatibleJarException;
+import org.strategoxt.imp.generator.postprocess_feedback_results_0_0;
+import org.strategoxt.imp.generator.sdf2imp;
+import org.strategoxt.imp.runtime.Debug;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.SWTSafeLock;
+import org.strategoxt.imp.runtime.WeakWeakMap;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.IDynamicLanguageService;
+import org.strategoxt.imp.runtime.parser.SGLRParseController;
+import org.strategoxt.imp.runtime.parser.ast.AstMessageHandler;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+import org.strategoxt.imp.runtime.stratego.IMPJSGLRLibrary;
+import org.strategoxt.imp.runtime.stratego.StrategoConsole;
+import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
+import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
+import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNode;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.StrategoException;
+import org.strategoxt.stratego_aterm.implode_aterm_0_0;
+import org.strategoxt.stratego_aterm.stratego_aterm;
+import org.strategoxt.stratego_lib.set_config_0_0;
+
+/**
+ * Basic Stratego feedback (i.e., errors and warnings) provider.
+ * This service may also be used as a basis for other semantic services
+ * such as reference resolving.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class StrategoObserver implements IDynamicLanguageService, IModelListener {
+	
+	// TODO: separate delay for error markers?
+	public static final int OBSERVER_DELAY = 600;
+	
+	private static Map<Descriptor, HybridInterpreter> runtimePrototypes =
+		Collections.synchronizedMap(new WeakWeakMap<Descriptor, HybridInterpreter>());
+	
+	private final Map<IResource, IStrategoTerm> resultingAsts =
+		new WeakHashMap<IResource, IStrategoTerm>();
+	
+	private final String feedbackFunction;
+	
+	private final AstMessageHandler messages = new AstMessageHandler(AstMessageHandler.ANALYSIS_MARKER_TYPE);
+	
+	private Lock observerSchedulerLock = new SWTSafeLock(true);
+	
+	private Job asyncObserverScheduler;
+	
+	private SoftReference<HybridInterpreter> cachedRuntime;
+	
+	private volatile Descriptor descriptor;
+	
+	private volatile boolean isUpdateStarted;
+	
+	private volatile boolean rushNextUpdate;
+	
+	private boolean wasExceptionLogged;
+	
+	public StrategoObserver(Descriptor descriptor, String feedbackFunction) {
+		this.descriptor = descriptor;
+		this.feedbackFunction = feedbackFunction;
+	}
+
+	public final AnalysisRequired getAnalysisRequired() {
+		return AnalysisRequired.TYPE_ANALYSIS;
+	}
+	
+	/**
+	 * Returns a value indicating whether or not an analysis has
+	 * been scheduled or completed at this point.
+	 * 
+	 * @return true if update() or asyncUpdate() have been called.
+	 */
+	public boolean isUpdateScheduled() {
+		return isUpdateStarted;
+	}
+	
+	public void setRushNextUpdate(boolean rushNextUpdate) {
+		this.rushNextUpdate = rushNextUpdate;
+	}
+	
+	public AstMessageHandler getMessages() {
+		return messages;
+	}
+	
+	public Object getSyncRoot() {
+		 // TODO: *maybe* use descriptor as syncroot? deadlocky?
+		return Environment.getSyncRoot();
+	}
+
+	public String getLog(HybridInterpreter runtime) {
+		assert Thread.holdsLock(getSyncRoot());
+		return runtime == null ? null : ((EditorIOAgent) runtime.getIOAgent()).getLog().trim();
+	}
+	
+	private HybridInterpreter initRuntime(IProgressMonitor monitor) {
+		assert Thread.holdsLock(getSyncRoot());
+		
+		HybridInterpreter result = runtimePrototypes.get(descriptor);
+		
+		if (result != null) {
+			result = Environment.createInterpreterFromPrototype(result);
+		} else {
+			monitor.subTask("Loading analysis runtime");
+			
+			Debug.startTimer();
+			List<String> jars = new ArrayList<String>();
+			
+			for (File file : descriptor.getAttachedFiles()) {
+				String filename = file.toString();
+				if (filename.endsWith(".ctree")) {
+					if (result == null) result = createRuntime(monitor);
+					loadCTree(result, filename);
+				} else if (filename.endsWith(".jar")) {
+					if (result == null) result = createRuntime(monitor);
+					jars.add(filename);
+				} else if (filename.endsWith(".str")) {
+					Environment.asynOpenErrorDialog("Loading analysis components", "Cannot use .str files as a provider: please specify a .ctree or .jar file instead (usually built in /include/)", null);
+				}
+			}
+			
+			if (!jars.isEmpty()) loadJars(result, jars);
+			Debug.stopTimer("Loaded analysis components");
+			monitor.subTask(null);
+		}
+		
+		cachedRuntime = new SoftReference<HybridInterpreter>(result);
+		return result;
+	}
+	
+	/**
+	 * Uninitializes the observer.
+	 */
+	public void uninitialize() {
+		// Not removing the prototype; might be useful elsewhere
+		// HybridInterpreter cachedRuntime = runtimePrototypes.remove(descriptor);
+		if (cachedRuntime != null) {
+			HybridInterpreter runtime = cachedRuntime.get();
+			runtime.uninit();
+			cachedRuntime.clear();
+		}
+	}
+
+	private void loadCTree(HybridInterpreter runtime, String filename) {
+		try {
+			Debug.startTimer("Loading Stratego module ", filename);
+			assert getSyncRoot() == Environment.getSyncRoot() || !Thread.holdsLock(Environment.getSyncRoot());
+			synchronized (Environment.getSyncRoot()) {
+				runtime.load(descriptor.openAttachment(filename));
+			}
+			Debug.stopTimer("Successfully loaded " +  filename);
+		} catch (InterpreterException e) {
+			Environment.logException(new BadDescriptorException("Error loading compiler service provider " + filename, e));
+			if (descriptor.isDynamicallyLoaded())
+				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service provider " + filename, e);
+		} catch (IOException e) {
+			Environment.logException(new BadDescriptorException("Could not load compiler service provider " + filename, e));
+			if (descriptor.isDynamicallyLoaded())
+				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service provider " + filename, e);
+		}
+	}
+	
+	private void loadJars(HybridInterpreter runtime, List<String> jars) {
+		try {
+			Debug.startTimer("Loading Stratego modules " + jars);
+			URL[] classpath = new URL[jars.size()];
+			for (int i = 0; i < classpath.length; i++) {
+				classpath[i] = descriptor.getBasePath().append(jars.get(i)).toFile().toURI().toURL();
+			}
+			runtime.loadJars(classpath);
+			Debug.stopTimer("Successfully loaded " + jars);
+		} catch (SecurityException e) {
+			Environment.logException("Error loading compiler service providers " + jars, e);
+			if (descriptor.isDynamicallyLoaded())
+				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service providers " + jars, e);
+		} catch (IncompatibleJarException e) {
+			Environment.logException("Error loading compiler service providers " + jars, e);
+			if (descriptor.isDynamicallyLoaded())
+				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service providers " + jars, e);
+		} catch (IOException e) {
+			Environment.logException("Error loading compiler service providers " + jars, e);
+			if (descriptor.isDynamicallyLoaded())
+				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service providers " + jars, e);
+		}
+	}
+
+	private HybridInterpreter createRuntime(IProgressMonitor monitor) {
+		assert Thread.holdsLock(getSyncRoot());
+		
+		Debug.startTimer();
+		HybridInterpreter result = Environment.createInterpreter(getSyncRoot() != Environment.getSyncRoot());
+		result.init();
+		Debug.stopTimer("Created new Stratego runtime instance");
+		monitor.subTask("Loading analysis runtime components");
+		return result;
+	}
+
+	/**
+	 * Starts a new update() operation, asynchronously.
+	 */
+	public void scheduleUpdate(final IParseController parseController) {
+		isUpdateStarted = true;
+		
+		observerSchedulerLock.lock();
+		try {
+			if (asyncObserverScheduler != null)
+				asyncObserverScheduler.cancel();
+				
+			// TODO: reuse observer schedulers; just rename them and set a new parsecontroller
+			asyncObserverScheduler = new Job("Analyzing updates to " + parseController.getPath().lastSegment()) {
+				@Override
+				public IStatus run(IProgressMonitor monitor) {
+					monitor.beginTask("", IProgressMonitor.UNKNOWN);
+					update(parseController, monitor);
+					return Status.OK_STATUS;
+				}
+			};
+			
+			// UNDONE: observer job is no longer a WorkspaceJob
+			//         thus avoiding analysis delays and progress view spamming 
+			// asyncObserverScheduler.setRule(parseController.getProject().getResource());
+			asyncObserverScheduler.setSystem(true);
+			if (rushNextUpdate) {
+				rushNextUpdate = false;
+				asyncObserverScheduler.schedule(0);
+			} else {
+				asyncObserverScheduler.schedule(OBSERVER_DELAY);
+			}
+		} finally {
+			observerSchedulerLock.unlock();
+		}
+	}
+
+	public void update(HybridInterpreter runtime, IParseController parseController, IProgressMonitor monitor) {
+		isUpdateStarted = true;
+		IStrategoAstNode ast = (IStrategoAstNode) parseController.getCurrentAst();
+		if (ast == null || ast.getConstructor() == null)
+			return;
+		
+		if (feedbackFunction == null) {
+			messages.clearMarkers(ast.getResource());
+			messages.commitDeletions();
+			return;
+		}
+			
+		if (monitor.isCanceled())
+			return;
+		
+		IStrategoTerm feedback = null;
+		
+		try {
+			synchronized (getSyncRoot()) {
+				resultingAsts.remove(ast.getResource());
+				feedback = invokeSilent(feedbackFunction, makeInputTerm(ast, false), ast.getResource());
+	
+				if (feedback == null) {
+					reportRewritingFailed();
+					String log = getLog(runtime);
+					if (!wasExceptionLogged || log.length() > 0)
+						Environment.logException(log.length() == 0 ? "Analysis failed" : "Analysis failed:\n" + log);
+					messages.clearMarkers(ast.getResource());
+					messages.addMarkerFirstLine(ast.getResource(), "Analysis failed (see error log)", IMarker.SEVERITY_ERROR);
+					messages.commitAllChanges();
+				} else if (!monitor.isCanceled()) {
+					// TODO: figure out how this was supposed to be synchronized
+					presentToUser(ast.getResource(), feedback);
+				}
+			}
+		} finally {
+			// System.out.println("OBSERVED " + System.currentTimeMillis()); // DEBUG
+			// processEditorRecolorEvents(parseController);
+		}
+	}
+
+	@Deprecated
+	@SuppressWarnings("unused")
+	private void processEditorRecolorEvents(IParseController parseController) {
+		if (parseController instanceof SGLRParseController) {
+			EditorState editor = ((SGLRParseController) parseController).getEditor();
+			if (editor != null)
+				AstMessageHandler.processEditorRecolorEvents(editor.getEditor());
+		}
+		AstMessageHandler.processAllEditorRecolorEvents();
+	}
+
+	public void reportRewritingFailed() {
+		assert Thread.holdsLock(getSyncRoot());
+		StackTracer trace = runtime.getContext().getStackTracer();
+		runtime.getIOAgent().printError(
+				trace.getTraceDepth() != 0 ? "rewriting failed, trace:" : "rewriting failed");
+		trace.printStackTrace();
+		if (descriptor.isDynamicallyLoaded())
+			StrategoConsole.activateConsole();
+	}
+	
+	/* UNDONE: asynchronous feedback presentation
+	private void asyncPresentToUser(final IParseController parseController, final IStrategoTerm feedback, final String log) {
+		Job job = new WorkspaceJob("Showing feedback") {
+			{ setSystem(true); } // don't show to user
+			@Override
+			public IStatus runInWorkspace(IProgressMonitor monitor) throws CoreException {
+				presentToUser(parseController, feedback, log);
+				return Status.OK_STATUS;
+			}
+		};
+		
+		job.setRule(parseController.getProject().getResource());
+		job.setSystem(true);
+		job.schedule();
+	}
+	*/
+
+	private void presentToUser(IResource resource, IStrategoTerm feedback) {
+		assert Thread.holdsLock(getSyncRoot());
+		assert feedback != null;
+
+		// TODO: use FileTrackingIOAgent to find out what to clear
+		// UNDONE: messages.clearAllMarkers();
+		messages.clearMarkers(resource);
+
+		try {
+			feedback = extractResultingAST(resource, feedback);
+			if (feedback.getTermType() == TUPLE
+					&& termAt(feedback, 0).getTermType() == LIST
+					&& termAt(feedback, 1).getTermType() == LIST
+					&& termAt(feedback, 2).getTermType() == LIST) {
+				
+			    IStrategoList errors = termAt(feedback, 0);
+			    IStrategoList warnings = termAt(feedback, 1);
+			    IStrategoList notes = termAt(feedback, 2);
+			    feedbackToMarkers(resource, errors, IMarker.SEVERITY_ERROR);
+			    feedbackToMarkers(resource, warnings, IMarker.SEVERITY_WARNING);
+			    feedbackToMarkers(resource, notes, IMarker.SEVERITY_INFO);
+			} else {
+				// Throw an exception to trigger an Eclipse pop-up  
+				throw new StrategoException("Illegal output from " + feedbackFunction + " (should be (errors,warnings,notes) tuple: " + feedback);
+			}
+		} finally {
+			messages.commitAllChanges();
+		}
+	}
+	
+	private IStrategoTerm extractResultingAST(IResource resource, IStrategoTerm feedback) {
+		if (isTermTuple(feedback) && feedback.getSubtermCount() == 4
+				&& (!"None".equals(cons(feedback.getSubterm(0))) || feedback.getSubterm(0).getSubtermCount() > 0)) {
+			resultingAsts.put(resource, feedback.getSubterm(0));
+			
+			IStrategoTuple newFeedback = Environment.getTermFactory().makeTuple(
+					feedback.getSubterm(1), feedback.getSubterm(2), feedback.getSubterm(3));
+			return newFeedback;
+		} else {
+			resultingAsts.remove(resource);
+			return feedback;
+		}
+	}
+	
+	private final void feedbackToMarkers(IResource resource, IStrategoList feedbacks, int severity) {
+		assert Thread.holdsLock(getSyncRoot());
+		
+		Context context = runtime.getCompiledContext();
+		sdf2imp.init(context);
+		feedbacks = postProcessFeedback(feedbacks, context);
+		
+	    for (IStrategoTerm feedback : feedbacks.getAllSubterms()) {
+	        IStrategoTerm term = termAt(feedback, 0);
+			IStrategoString messageTerm = termAt(feedback, 1);
+			String message = messageTerm.stringValue();
+			
+			messages.addMarker(resource, term, message, severity);
+	    }
+	}
+
+	private IStrategoList postProcessFeedback(IStrategoList feedbacks, Context context) {
+		IStrategoList result =
+				(IStrategoList) postprocess_feedback_results_0_0.instance.invoke(context, feedbacks);
+		if (result == null) {
+			// Throw an exception to trigger an Eclipse pop-up  
+			throw new StrategoException("Illegal output from " + feedbackFunction + ": " + feedbacks);
+		}
+		return result;
+	}	
+	
+	/**
+	 * Invoke a Stratego function with a specific AST node as its input.
+	 * 
+	 * @see #getAstNode(IStrategoTerm)  To retrieve the AST node associated with the resulting term.
+	 */
+	public IStrategoTerm invoke(String function, IStrategoAstNode node)
+			throws UndefinedStrategyException, InterpreterErrorExit, InterpreterExit, InterpreterException {
+
+		IStrategoTerm input = makeInputTerm(node, true);
+		return invoke(function, input, node.getResource());
+	}
+
+	/**
+	 * Create an input term for a control rule.
+	 */
+	public IStrategoTuple makeInputTerm(IStrategoAstNode node, boolean includeSubNode) {
+		return makeInputTerm(node, includeSubNode, false);
+	}
+	
+	/**
+	 * Create an input term for a control rule.
+	 */
+	public IStrategoTuple makeInputTerm(IStrategoAstNode node, boolean includeSubNode, boolean useSourceAst) {
+		assert Thread.holdsLock(getSyncRoot());
+		
+		Context context = getRuntime().getCompiledContext();
+		IStrategoTerm resultingAst = useSourceAst ? null : resultingAsts.get(node.getResource());
+		IStrategoList termPath = StrategoTermPath.getTermPathWithOrigin(context, resultingAst, node);
+		IStrategoTerm targetTerm;
+		IStrategoTerm rootTerm;
+		
+		if (termPath != null) {
+			targetTerm = StrategoTermPath.getTermAtPath(context, resultingAst, termPath);
+			rootTerm = resultingAst;
+		} else {
+			targetTerm = node.getTerm();
+			termPath = StrategoTermPath.createPath(node);
+			rootTerm = getRoot(node).getTerm();
+		}
+		
+		ITermFactory factory = Environment.getTermFactory();
+		String path = node.getResource().getProjectRelativePath().toPortableString();
+		String absolutePath = node.getResource().getProject().getLocation().toOSString();
+		
+		if (includeSubNode) {
+			IStrategoTerm[] inputParts = {
+					targetTerm,
+					termPath,
+					rootTerm,
+					factory.makeString(path),
+					factory.makeString(absolutePath)
+				};
+			return factory.makeTuple(inputParts);
+		} else {
+			IStrategoTerm[] inputParts = {
+					node.getTerm(),
+					factory.makeString(path),
+					factory.makeString(absolutePath)
+				};
+			return factory.makeTuple(inputParts);
+		}
+	}
+
+	/**
+	 * Create an input term for a control rule,
+	 * based on the ATerm syntax of the AST of the source file.
+	 */
+	public IStrategoTuple makeATermInputTerm(IStrategoAstNode node, boolean includeSubNode, IResource resource) {
+		assert Thread.holdsLock(getSyncRoot());
+		stratego_aterm.init(runtime.getCompiledContext());
+		
+		ITermFactory factory = Environment.getTermFactory();
+		String path = resource.getProjectRelativePath().toPortableString();
+		String absolutePath = resource.getProject().getLocation().toOSString();
+		
+		if (includeSubNode) {
+			node = getImplodableNode(node);
+			IStrategoTerm[] inputParts = {
+					implodeATerm(node.getTerm()),
+					StrategoTermPath.createPathFromParsedATerm(node, runtime.getCompiledContext()),
+					implodeATerm(getRoot(node).getTerm()),
+					factory.makeString(path),
+					factory.makeString(absolutePath)
+				};
+			return factory.makeTuple(inputParts);
+		} else {
+			throw new org.spoofax.NotImplementedException();
+		}
+	}
+
+	protected IStrategoTerm implodeATerm(IStrategoTerm term) {
+		return implode_aterm_0_0.instance.invoke(runtime.getCompiledContext(), term);
+	}
+
+	protected IStrategoAstNode getImplodableNode(IStrategoAstNode node) {
+		if (node.isList() && node.getChildren().size() == 1)
+			node = (IStrategoAstNode) node.getChildren().get(0);
+		for (; node != null; node = node.getParent()) {
+			if (implodeATerm(node.getTerm()) != null)
+				return node;
+		}
+		throw new IllegalStateException("Could not identify selected AST node from ATerm editor");
+	}
+	
+	/**
+	 * Invoke a Stratego function with a specific term its input,
+	 * given a particular working directory.
+	 */
+	public IStrategoTerm invoke(String function, IStrategoTerm term, IResource resource)
+			throws UndefinedStrategyException, InterpreterErrorExit, InterpreterExit, InterpreterException {
+		
+		synchronized (getSyncRoot()) {
+			if (runtime == null) initialize(new NullProgressMonitor());
+			if (runtime == null) return null;
+			
+		    Debug.startTimer();
+			// TODO: Make Context support monitor.isCanceled()?
+			//       (e.g., overriding Context.lookupPrimitive to throw an OperationCanceledException) 
+			
+			runtime.setCurrent(term);
+			configureRuntime(runtime, resource);
+
+			((LoggingIOAgent) runtime.getIOAgent()).clearLog();
+			assert runtime.getCompiledContext().getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME)
+					instanceof IMPJSGLRLibrary;
+			boolean success = runtime.invoke(function);
+			
+			Debug.stopTimer("Evaluated strategy " + function + (success ? "" : " (failed)"));
+			return success ? runtime.current() : null;
+		}
+	}
+
+	/**
+	 * Invoke a Stratego function with a specific AST node as its input,
+	 * logging and swallowing all exceptions.
+	 * 
+	 * @see #getAstNode(IStrategoTerm)  To retrieve the AST node associated with the resulting term.
+	 */
+	public IStrategoTerm invokeSilent(String function, IStrategoAstNode node) {
+		try {
+			return invokeSilent(function, makeInputTerm(node, true), node.getResource());
+		} catch (RuntimeException e) {
+			if (runtime != null) runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
+			Environment.logException("Internal error evaluating strategy " + function, e);
+			if (descriptor.isDynamicallyLoaded()) StrategoConsole.activateConsole();
+			return null;
+		}
+	}
+	
+	/**
+	 * Invoke a Stratego function with a specific term its input,
+	 * given a particular working directory.
+	 * Logs and swallows all exceptions.
+	 */
+	public IStrategoTerm invokeSilent(String function, IStrategoTerm input, IResource resource) {
+		assert Thread.holdsLock(getSyncRoot());
+		IStrategoTerm result = null;
+		
+		try {
+			wasExceptionLogged = true;
+			result = invoke(function, input, resource);
+			wasExceptionLogged = false;
+		} catch (InterpreterExit e) {
+			if (descriptor.isDynamicallyLoaded()) StrategoConsole.activateConsole();
+			messages.clearMarkers(resource);
+			if (!(e instanceof InterpreterErrorExit))
+				messages.addMarkerFirstLine(resource, "Analysis failed (" + name(e) + "; see error log)", IMarker.SEVERITY_ERROR);
+			messages.commitAllChanges();
+			Environment.logException("Runtime exited when evaluating strategy " + function, e);
+		} catch (UndefinedStrategyException e) {
+			// Note that this condition may also be reached when the semantic service hasn't been loaded yet
+			runtime.getIOAgent().printError("Internal error: strategy does not exist or is defined in a module that is not imported: " + e.getMessage());
+			Environment.logException("Strategy does not exist: " + e.getMessage(), e);
+		} catch (InterpreterException e) {
+			runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
+			Environment.logException("Internal error evaluating strategy " + function, e);
+			if (descriptor.isDynamicallyLoaded()) StrategoConsole.activateConsole();
+		} catch (RuntimeException e) {
+			if (runtime != null) runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
+			Environment.logException("Internal error evaluating strategy " + function, e);
+			if (descriptor.isDynamicallyLoaded()) StrategoConsole.activateConsole();
+		} catch (Error e) { // e.g. NoClassDefFoundError due to bad/missing stratego jar
+			if (runtime != null) runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
+			Environment.logException("Internal error evaluating strategy " + function, e);
+			if (descriptor.isDynamicallyLoaded()) StrategoConsole.activateConsole();
+		}
+		
+		return result;
+	}
+	
+	private static String name(Throwable e) {
+		return e.getClass().getSimpleName();
+	}
+
+	public IAst getAstNode(IStrategoTerm term) {
+		if (term == null) return null;
+			
+		if (term instanceof WrappedAstNode) {
+			return ((WrappedAstNode) term).getNode();
+		} else {
+			Environment.logException("Resolved reference is not associated with an AST node " + runtime.current());
+			return null;
+		}
+	}
+	
+	private void configureRuntime(HybridInterpreter runtime, IResource resource) {
+		assert Thread.holdsLock(getSyncRoot());
+		
+
+		try {
+			ITermFactory factory = runtime.getFactory();
+			IStrategoTuple programName = factory.makeTuple(
+					factory.makeString("program"),
+					factory.makeString(descriptor.getLanguage().getName()));
+			set_config_0_0.instance.invoke(runtime.getCompiledContext(), programName);
+		} catch (BadDescriptorException e) {
+			// Ignore; use default program name
+		}
+		
+		try {
+			EditorIOAgent io = (EditorIOAgent) runtime.getIOAgent();
+			io.setWorkingDir(resource.getLocation().removeLastSegments(1).toOSString());
+			io.setProjectPath(resource.getProject().getLocation().toOSString());
+			io.setDescriptor(descriptor);
+		} catch (IOException e) {
+			Environment.logException("Could not set Stratego working directory", e);
+			throw new RuntimeException(e);
+		}
+	}
+	
+	private static IStrategoAstNode getRoot(IStrategoAstNode node) {
+		while (node.getParent() != null)
+			node = node.getParent();
+		return node;
+	}
+	
+	public HybridInterpreter getRuntime() {
+		assert Thread.holdsLock(getSyncRoot());
+		if (runtime == null) initialize(new NullProgressMonitor());
+		if (runtime == null) getRuntime(new NullProgressMonitor()); // create empty runtime
+		return runtime;
+	}
+
+	public void prepareForReinitialize() {
+		// Do nothing
+	}
+
+	public void reinitialize(Descriptor newDescriptor) throws BadDescriptorException {
+		synchronized (getSyncRoot()) {
+			runtimePrototypes.remove(descriptor);
+			runtime = null;
+			descriptor = newDescriptor;
+		}
+	}
+
+}



From L.C.L.Kats at tudelft.nl  Thu May 27 16:13:19 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 27 May 2010 14:13:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20879 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.editors.aster
	org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.pp org.strategoxt.imp.editors.sdf
	org.strategoxt.imp.editors.sdf/.externalToolBuilders
	org.strategoxt.imp.editors.sdf/trans
	org.strategoxt.imp.editors.stratego org.strategoxt.imp.feature
	org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.updatesite
Message-ID: <201005271413.o4REDJfx030444@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-27 14:13:18 +0000 (Thu, 27 May 2010)
New Revision: 20879

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20879&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.main.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
- Release 0.4.7.2
- Revised build and project settings files to address some minor issues

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.generated.xml	2010-05-27 14:13:18 UTC (rev 20879)
@@ -305,21 +305,27 @@
             </dependset>
             <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
             <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
             <antcall target="stratego.jvm.helper">
                 <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
-            <delete>
-              <fileset dir="${build}" includes="trans/**"/>
-            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
             
         <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	2010-05-27 14:13:18 UTC (rev 20879)
@@ -305,21 +305,27 @@
             </dependset>
             <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
             <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
             <antcall target="stratego.jvm.helper">
                 <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
-            <delete>
-              <fileset dir="${build}" includes="trans/**"/>
-            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
             
         <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	2010-05-27 14:13:18 UTC (rev 20879)
@@ -305,21 +305,27 @@
             </dependset>
             <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
             <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
             <antcall target="stratego.jvm.helper">
                 <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
-            <delete>
-              <fileset dir="${build}" includes="trans/**"/>
-            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
             
         <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	2010-05-27 14:13:18 UTC (rev 20879)
@@ -305,21 +305,27 @@
             </dependset>
             <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
             <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
             <antcall target="stratego.jvm.helper">
                 <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
-            <delete>
-              <fileset dir="${build}" includes="trans/**"/>
-            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
             
         <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.classpath	2010-05-27 14:13:18 UTC (rev 20879)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry excluding="trans/**" kind="src" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="lib" path="utils/strategoxt.jar"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.main.xml.launch
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.main.xml.launch	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/.externalToolBuilders/SDF build.main.xml.launch	2010-05-27 14:13:18 UTC (rev 20879)
@@ -2,7 +2,7 @@
 <launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
 <stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
 <booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
-<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; id=&quot;1260698330169_15&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Colorer.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Folding.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item fact!
 oryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Outliner.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-References.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Syntax.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/utils&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; id=&quot;1260698330169_15&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Outliner.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Folding.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item fac!
 toryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Colorer.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/utils&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-Syntax.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/SDF-References.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/org.strategoxt.imp.editors.sdf/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
 <listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
 <listEntry value="/org.strategoxt.imp.editors.sdf/build.main.xml"/>
 </listAttribute>
@@ -19,9 +19,10 @@
 <booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.strategoxt.imp.editors.sdf"/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="stratego.jar,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.sdf/build.main.xml}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS" value="-verbose"/>
 <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.editors.sdf}"/>
 <stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	2010-05-27 14:13:18 UTC (rev 20879)
@@ -305,21 +305,27 @@
             </dependset>
             <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
             <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
             <antcall target="stratego.jvm.helper">
                 <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
-            <delete>
-              <fileset dir="${build}" includes="trans/**"/>
-            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
             
         <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	2010-05-27 14:13:18 UTC (rev 20879)
@@ -124,8 +124,7 @@
       selected' := <add-context; sdf-desugar> selected;
       result    := <ppgenerate; pp-pp-table> selected'
     <+
-      fatal-err(|$[Could not generate pretty printer rules for this selection.
-                   Only productions with {cons()} attributes are supported.])
+      fatal-err-msg(|$[Could not generate pretty printer rules for this selection.])
   
   generate-rtg:
     (selected, position, ast, path, project-path) -> (filename, result)
@@ -134,8 +133,7 @@
       selected' := <debug(!2); add-context; debug(!3); sdf-desugar> selected;
       result    := <debug(!4); core-rtg2sig; debug(!5); pp-stratego-string> selected'
     <+
-      fatal-err(|$[Could not generate abstract syntax signatures for this selection.
-                   Only productions with {cons()} attributes are supported.])
+      fatal-err-msg(|$[Could not generate abstract syntax signatures for this selection.])
   
   generate-aterm:
     (selected, position, ast, path, project-path) -> (filename, selected)
@@ -149,6 +147,7 @@
       else
         !context-free-syntax([<id>])
       end
+      // !'module(unparameterized("Module"), [], [exports(<id>)])
     end
 
 rules // External tools not included in the standard libraries

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.generated.xml	2010-05-27 14:13:18 UTC (rev 20879)
@@ -305,21 +305,27 @@
             </dependset>
             <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
             <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
             <antcall target="stratego.jvm.helper">
                 <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
-            <delete>
-              <fileset dir="${build}" includes="trans/**"/>
-            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
             
         <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-27 14:13:18 UTC (rev 20879)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.7.1"
+      version="0.4.7.2"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str	2010-05-27 14:13:18 UTC (rev 20879)
@@ -12,7 +12,6 @@
 "source.. = editor/java/
 output.. = bin/
 bin.includes = META-INF/,\\
-               .,\\
                plugin.xml,\\
                include/,\\
                bin/,\\

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-xml.str	2010-05-27 14:13:18 UTC (rev 20879)
@@ -377,21 +377,27 @@
             </dependset>
             <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
             <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
             <antcall target="stratego.jvm.helper">
                 <param name="build.stratego.outputpath" value="${src-gen}/trans"/>
                 <param name="build.stratego.extraargs" value="-la java-front"/>
                 <param name="build.stratego.extension" value="java"/>
             </antcall>
-            <delete>
-              <fileset dir="${build}" includes="trans/**" />
-            </delete>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
-              <fileset dir="${src-gen}/trans" excludes="**/*.java" />
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
             </copy>
             <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
         </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
             
         <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
             <delete file="${include}/${strmodule}.rtree" failonerror="false"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-classpath.str	2010-05-27 14:13:18 UTC (rev 20879)
@@ -11,7 +11,7 @@
     <output-xml-file(|[], ".classpath")>
     %><?xml version="1.0" encoding="UTF-8"?>
 <classpath>
-	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="output" path="bin"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-27 08:32:14 UTC (rev 20878)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-27 14:13:18 UTC (rev 20879)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.7.1.jar" id="org.strategoxt.imp" version="0.4.7.1">
+   <feature url="features/org.strategoxt.imp_0.4.7.2.jar" id="org.strategoxt.imp" version="0.4.7.2">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From L.C.L.Kats at tudelft.nl  Thu May 27 17:23:07 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 27 May 2010 15:23:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20880 - LennartKats - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	dynamicloading services
Message-ID: <201005271523.o4RFN7Of031484@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-27 15:23:07 +0000 (Thu, 27 May 2010)
New Revision: 20880

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20880&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java

Log:
Spoofax/139: Deadlock

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-27 14:13:18 UTC (rev 20879)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-27 15:23:07 UTC (rev 20880)
@@ -116,24 +116,27 @@
 	 */
 	public void reinitialize(Descriptor newDescriptor) throws BadDescriptorException {
 		// Note: may also be reinitialized with the same descriptor
-		synchronized (activeServices) {
-			// Copy the list of services since reinitialize() might change it
-			IDynamicLanguageService[] currentServices = activeServices.keySet().toArray(new IDynamicLanguageService[0]);
-			for (IDynamicLanguageService service : currentServices)
-				service.reinitialize(newDescriptor);
-			attachedFiles = null;
-			cachedServices.clear();
+		IDynamicLanguageService[] currentServices;
+		synchronized (activeServices) { // defensively copy
+			currentServices = activeServices.keySet().toArray(new IDynamicLanguageService[0]);
 		}
+		for (IDynamicLanguageService service : currentServices) {
+			service.reinitialize(newDescriptor);
+		}
+		attachedFiles = null;
+		cachedServices.clear();
 	}
 	
 	/**
 	 * Prepares editor activeServices for reinitialization with a new descriptor.
 	 */
 	public void prepareForReinitialize() {
-		synchronized (activeServices) {
-			for (IDynamicLanguageService service : activeServices.keySet())
-				service.prepareForReinitialize();
+		IDynamicLanguageService[] currentServices;
+		synchronized (activeServices) { // defensively copy
+			currentServices = activeServices.keySet().toArray(new IDynamicLanguageService[0]);
 		}
+		for (IDynamicLanguageService service : currentServices)
+			service.prepareForReinitialize();
 	}
 	
 	// LOADING SERVICES

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java	2010-05-27 14:13:18 UTC (rev 20879)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java	2010-05-27 15:23:07 UTC (rev 20880)
@@ -177,7 +177,7 @@
 		@Override
 		public void applyStyles(TextStyle style) {
 			if (isKeywordProposal() || isTemplateProposal()) {
-				style.font = getKeywordFont();
+				// UNDONE: style.font = getKeywordFont();
 				style.foreground = getKeywordColor();
 			} else if (newTextParts.size() == 1) { // identifier proposal
 				style.foreground = getIdentifierColor();
@@ -196,6 +196,7 @@
 			return keywordColor;
 		}
 		
+		@SuppressWarnings("unused")
 		private Font getKeywordFont() {
 			// HACK: hardcoded font size
 			// TODO: use non-hard coded font?

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-05-27 14:13:18 UTC (rev 20879)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-05-27 15:23:07 UTC (rev 20880)
@@ -140,7 +140,6 @@
 			return null;
 		}
 		*/
-		//System.out.println("SORTS: " + getSortsAtCursor(currentCompletionNode));
 		System.out.println("SORTS: " + getSortsAtCursor(controller, ast, offset));
 		
 		return results;



From L.C.L.Kats at tudelft.nl  Fri May 28 11:05:02 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 28 May 2010 09:05:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20881 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
	org.strategoxt.imp.updatesite
Message-ID: <201005280905.o4S952Ui012582@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-28 09:05:01 +0000 (Fri, 28 May 2010)
New Revision: 20881

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20881&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Release 0.4.7.3 including minor deadlock fix (preparing for 0.5)

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-27 15:23:07 UTC (rev 20880)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-28 09:05:01 UTC (rev 20881)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.7.2"
+      version="0.4.7.3"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-05-27 15:23:07 UTC (rev 20880)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-05-28 09:05:01 UTC (rev 20881)
@@ -359,8 +359,6 @@
 		if (!monitor.isCanceled() && currentParseStream != null)
 			forceRecolor(wasStartupParsed);
 		
-		// TODO: Delay parse error markers for newly typed text
-		
 		// Threading concerns:
 		// must never block the main thread with a lock here since
 		// it must be available to draw error markers

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-27 15:23:07 UTC (rev 20880)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-28 09:05:01 UTC (rev 20881)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.7.2.jar" id="org.strategoxt.imp" version="0.4.7.2">
+   <feature url="features/org.strategoxt.imp_0.4.7.3.jar" id="org.strategoxt.imp" version="0.4.7.3">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From R.B.Vermaas at tudelft.nl  Fri May 28 11:28:26 2010
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Fri, 28 May 2010 09:28:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20882 - rob - in
	strategoxt/trunk: . asfix-tools aterm-front autoxt c-tools
	concrete-syntax gpp sdf-front sdf-tools stratego-front
	stratego-libraries stratego-regular strc-core xml-front xtc
Message-ID: <201005280928.o4S9SQgN012975@proliant.st.ewi.tudelft.nl>

Author: rob
Date: 2010-05-28 09:28:26 +0000 (Fri, 28 May 2010)
New Revision: 20882

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20882&view=rev

Modified:
   strategoxt/trunk/asfix-tools/configure.ac
   strategoxt/trunk/aterm-front/configure.ac
   strategoxt/trunk/autoxt/configure.ac
   strategoxt/trunk/c-tools/configure.ac
   strategoxt/trunk/concrete-syntax/configure.ac
   strategoxt/trunk/configure.ac
   strategoxt/trunk/gpp/configure.ac
   strategoxt/trunk/sdf-front/configure.ac
   strategoxt/trunk/sdf-tools/configure.ac
   strategoxt/trunk/stratego-front/configure.ac
   strategoxt/trunk/stratego-libraries/configure.ac
   strategoxt/trunk/stratego-regular/configure.ac
   strategoxt/trunk/strc-core/configure.ac
   strategoxt/trunk/xml-front/configure.ac
   strategoxt/trunk/xtc/configure.ac

Log:
strategoxt: version bump from 0.18 to 1.8

Changes:

Modified: strategoxt/trunk/asfix-tools/configure.ac
===================================================================
--- strategoxt/trunk/asfix-tools/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/asfix-tools/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([asfix-tools],[0.18],[users at strategoxt.org])
+AC_INIT([asfix-tools],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/aterm-front/configure.ac
===================================================================
--- strategoxt/trunk/aterm-front/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/aterm-front/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([aterm-front],[0.18],[users at strategoxt.org])
+AC_INIT([aterm-front],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/autoxt/configure.ac
===================================================================
--- strategoxt/trunk/autoxt/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/autoxt/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([autoxt],[0.18],[users at strategoxt.org])
+AC_INIT([autoxt],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/c-tools/configure.ac
===================================================================
--- strategoxt/trunk/c-tools/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/c-tools/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([c-tools],[0.18],[users at strategoxt.org])
+AC_INIT([c-tools],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/concrete-syntax/configure.ac
===================================================================
--- strategoxt/trunk/concrete-syntax/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/concrete-syntax/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([concrete-syntax],[0.18],[users at strategoxt.org])
+AC_INIT([concrete-syntax],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/configure.ac
===================================================================
--- strategoxt/trunk/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([strategoxt],[0.18],[users at strategoxt.org])
+AC_INIT([strategoxt],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/gpp/configure.ac
===================================================================
--- strategoxt/trunk/gpp/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/gpp/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([gpp],[0.18],[users at strategoxt.org])
+AC_INIT([gpp],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/sdf-front/configure.ac
===================================================================
--- strategoxt/trunk/sdf-front/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/sdf-front/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([sdf-front],[0.18],[users at strategoxt.org])
+AC_INIT([sdf-front],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/sdf-tools/configure.ac
===================================================================
--- strategoxt/trunk/sdf-tools/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/sdf-tools/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([sdf-tools],[0.18],[users at strategoxt.org])
+AC_INIT([sdf-tools],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/stratego-front/configure.ac
===================================================================
--- strategoxt/trunk/stratego-front/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/stratego-front/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([stratego-front],[0.18],[users at strategoxt.org])
+AC_INIT([stratego-front],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/stratego-libraries/configure.ac
===================================================================
--- strategoxt/trunk/stratego-libraries/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/stratego-libraries/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([stratego-libraries],[0.18],[users at strategoxt.org])
+AC_INIT([stratego-libraries],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/stratego-regular/configure.ac
===================================================================
--- strategoxt/trunk/stratego-regular/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/stratego-regular/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([stratego-regular],[0.18],[users at strategoxt.org])
+AC_INIT([stratego-regular],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/strc-core/configure.ac
===================================================================
--- strategoxt/trunk/strc-core/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/strc-core/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([strc-core],[0.18],[users at strategoxt.org])
+AC_INIT([strc-core],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/xml-front/configure.ac
===================================================================
--- strategoxt/trunk/xml-front/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/xml-front/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([xml-front],[0.18],[users at strategoxt.org])
+AC_INIT([xml-front],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 

Modified: strategoxt/trunk/xtc/configure.ac
===================================================================
--- strategoxt/trunk/xtc/configure.ac	2010-05-28 09:05:01 UTC (rev 20881)
+++ strategoxt/trunk/xtc/configure.ac	2010-05-28 09:28:26 UTC (rev 20882)
@@ -1,5 +1,5 @@
 AC_PREREQ([2.60])
-AC_INIT([xtc],[0.18],[users at strategoxt.org])
+AC_INIT([xtc],[1.8],[users at strategoxt.org])
 AC_CONFIG_AUX_DIR([../config])
 AM_INIT_AUTOMAKE
 



From n.bruning at student.tudelft.nl  Fri May 28 13:19:11 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Fri, 28 May 2010 11:19:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20883 - NathanBruning -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <201005281119.o4SBJBL9014339@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-05-28 11:19:11 +0000 (Fri, 28 May 2010)
New Revision: 20883

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20883&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str

Log:
Create lazy-activated plugins so Activator.start(BundleContext) is called by the OSGI framework.

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str	2010-05-28 09:28:26 UTC (rev 20882)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-manifest.str	2010-05-28 11:19:11 UTC (rev 20883)
@@ -33,6 +33,7 @@
   org.spoofax.aterm,
   org.spoofax.jsglr
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Bundle-ActivationPolicy: lazy
 Export-Package: ", package, "
 " // newline required
 )



From n.bruning at student.tudelft.nl  Fri May 28 13:55:16 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Fri, 28 May 2010 11:55:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20884 - NathanBruning -
	in
	spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime:
	. icons src/org/strategoxt/imp/runtime
	src/org/strategoxt/imp/runtime/dynamicloading
	src/org/strategoxt/imp/runtime/parser
	src/org/strategoxt/imp/runtime/parser/ast
	src/org/strategoxt/imp/runtime/services
	src/org/strategoxt/imp/runtime/stratego
	src/org/strategoxt/imp/runtime/stratego/adapter
Message-ID: <201005281155.o4SBtGFf014670@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-05-28 11:55:16 +0000 (Fri, 28 May 2010)
New Revision: 20884

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20884&view=rev

Added:
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch
Modified:
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/icons/stratego.png
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LabelProvider.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/NodeMapping.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TextAttributeMapping.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TreeModelBuilder.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/EditorIOAgent.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileTrackingIOAgent.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceMappings.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoConsole.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java

Log:
Merging in trunk changes

Changes (first 1000 lines of the diffs):


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime
___________________________________________________________________
Added: svn:mergeinfo
   + /spoofax-imp/trunk/org.strategoxt.imp.runtime:20875-20883


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/icons/stratego.png
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/icons/stratego.png:18782-18802
/spoofax-imp/trunk/org.strategoxt.imp.runtime/icons/stratego.png:20875-20883


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/EditorState.java:18782-18802
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java:20875-20883

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-28 11:19:11 UTC (rev 20883)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	2010-05-28 11:55:16 UTC (rev 20884)
@@ -220,7 +220,7 @@
 		return result;
 	}
 
-	public static HybridInterpreter createInterpreter(HybridInterpreter prototype) {
+	public static HybridInterpreter createInterpreterFromPrototype(HybridInterpreter prototype) {
 		HybridInterpreter result = new HybridInterpreter(prototype,
 				IMPJSGLRLibrary.REGISTRY_NAME, // is spoofax-specific
 				JSGLRLibrary.REGISTRY_NAME,    // connected to the library above

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java	2010-05-28 11:19:11 UTC (rev 20883)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakWeakMap.java	2010-05-28 11:55:16 UTC (rev 20884)
@@ -1,6 +1,6 @@
 package org.strategoxt.imp.runtime;
 
-import java.lang.ref.SoftReference;
+import java.lang.ref.WeakReference;
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Map;
@@ -20,7 +20,7 @@
  */
 public class WeakWeakMap<K,V> implements Map<K,V> {
 	
-	private final WeakHashMap<K, SoftReference<V>> map = new WeakHashMap<K, SoftReference<V>>();
+	private final WeakHashMap<K, WeakReference<V>> map = new WeakHashMap<K, WeakReference<V>>();
 	
 	public WeakWeakMap() {
 		// Construct new instance
@@ -44,7 +44,7 @@
 	}
 
 	public V get(Object key) {
-		SoftReference<V> ref = map.get(key);
+		WeakReference<V> ref = map.get(key);
 		return ref == null ? null : ref.get();
 	}
 
@@ -59,7 +59,7 @@
 	public V put(K key, V value) {
 		if (value == null)
 			throw new IllegalArgumentException("Value cannot be null");
-		SoftReference<V> existing = map.put(key, new SoftReference<V>(value));
+		WeakReference<V> existing = map.put(key, new WeakReference<V>(value));
 		return existing == null ? null : existing.get();
 	}
 
@@ -68,7 +68,7 @@
 	}
 
 	public V remove(Object key) {
-		SoftReference<V> existing = map.remove(key);
+		WeakReference<V> existing = map.remove(key);
 		return existing == null ? null : existing.get();
 	}
 
@@ -77,9 +77,9 @@
 	}
 
 	public Collection<V> values() {
-		Collection<SoftReference<V>> results = map.values();
+		Collection<WeakReference<V>> results = map.values();
 		Set<V> copy = new HashSet<V>(results.size());
-		for (SoftReference<V> resultRef : results) {
+		for (WeakReference<V> resultRef : results) {
 			V result = resultRef == null ? null : resultRef.get();
 			if (result != null) copy.add(result);
 		}


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java:18782-18802
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java:20875-20883

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-28 11:19:11 UTC (rev 20883)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	2010-05-28 11:55:16 UTC (rev 20884)
@@ -116,24 +116,27 @@
 	 */
 	public void reinitialize(Descriptor newDescriptor) throws BadDescriptorException {
 		// Note: may also be reinitialized with the same descriptor
-		synchronized (activeServices) {
-			// Copy the list of services since reinitialize() might change it
-			IDynamicLanguageService[] currentServices = activeServices.keySet().toArray(new IDynamicLanguageService[0]);
-			for (IDynamicLanguageService service : currentServices)
-				service.reinitialize(newDescriptor);
-			attachedFiles = null;
-			cachedServices.clear();
+		IDynamicLanguageService[] currentServices;
+		synchronized (activeServices) { // defensively copy
+			currentServices = activeServices.keySet().toArray(new IDynamicLanguageService[0]);
 		}
+		for (IDynamicLanguageService service : currentServices) {
+			service.reinitialize(newDescriptor);
+		}
+		attachedFiles = null;
+		cachedServices.clear();
 	}
 	
 	/**
 	 * Prepares editor activeServices for reinitialization with a new descriptor.
 	 */
 	public void prepareForReinitialize() {
-		synchronized (activeServices) {
-			for (IDynamicLanguageService service : activeServices.keySet())
-				service.prepareForReinitialize();
+		IDynamicLanguageService[] currentServices;
+		synchronized (activeServices) { // defensively copy
+			currentServices = activeServices.keySet().toArray(new IDynamicLanguageService[0]);
 		}
+		for (IDynamicLanguageService service : currentServices)
+			service.prepareForReinitialize();
 	}
 	
 	// LOADING SERVICES


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java:18782-18802
/imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java:18803-19017
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java:20875-20883


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/JSGLRI.java:18782-18802
/imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java:18803-19017
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java:20875-20883

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-05-28 11:19:11 UTC (rev 20883)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-05-28 11:55:16 UTC (rev 20884)
@@ -377,8 +377,6 @@
 		if (!monitor.isCanceled() && currentParseStream != null)
 			forceRecolor(wasStartupParsed);
 		
-		// TODO: Delay parse error markers for newly typed text
-		
 		// Threading concerns:
 		// must never block the main thread with a lock here since
 		// it must be available to draw error markers


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java:18782-18802
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java:20875-20883


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java:18782-18802
/imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java:18803-18942
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java:20875-20883


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java:18782-18802
/imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java:18803-18959
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java:20875-20883


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java:18782-18802
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java:20875-20883


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java:18782-18802
/imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java:18803-19083
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java:20875-20883

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java	2010-05-28 11:19:11 UTC (rev 20883)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposal.java	2010-05-28 11:55:16 UTC (rev 20884)
@@ -177,7 +177,7 @@
 		@Override
 		public void applyStyles(TextStyle style) {
 			if (isKeywordProposal() || isTemplateProposal()) {
-				style.font = getKeywordFont();
+				// UNDONE: style.font = getKeywordFont();
 				style.foreground = getKeywordColor();
 			} else if (newTextParts.size() == 1) { // identifier proposal
 				style.foreground = getIdentifierColor();
@@ -196,6 +196,7 @@
 			return keywordColor;
 		}
 		
+		@SuppressWarnings("unused")
 		private Font getKeywordFont() {
 			// HACK: hardcoded font size
 			// TODO: use non-hard coded font?

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-05-28 11:19:11 UTC (rev 20883)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	2010-05-28 11:55:16 UTC (rev 20884)
@@ -140,7 +140,6 @@
 			return null;
 		}
 		*/
-		//System.out.println("SORTS: " + getSortsAtCursor(currentCompletionNode));
 		System.out.println("SORTS: " + getSortsAtCursor(controller, ast, offset));
 		
 		return results;


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java:18782-18802
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java:20875-20883


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LabelProvider.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/services/LabelProvider.java:18782-18802
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LabelProvider.java:20875-20883


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/NodeMapping.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/services/NodeMapping.java:18782-18802
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/NodeMapping.java:20875-20883

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-28 11:19:11 UTC (rev 20883)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-28 11:55:16 UTC (rev 20884)
@@ -72,7 +72,7 @@
 	// TODO: separate delay for error markers?
 	public static final int OBSERVER_DELAY = 600;
 	
-	private static Map<Descriptor, HybridInterpreter> cachedRuntimes =
+	private static Map<Descriptor, HybridInterpreter> runtimePrototypes =
 		Collections.synchronizedMap(new WeakWeakMap<Descriptor, HybridInterpreter>());
 	
 	private final Map<IResource, IStrategoTerm> resultingAsts =
@@ -134,9 +134,9 @@
 	private void initialize(IProgressMonitor monitor) {
 		assert Thread.holdsLock(getSyncRoot());
 		
-		HybridInterpreter prototype = cachedRuntimes.get(descriptor);
+		HybridInterpreter prototype = runtimePrototypes.get(descriptor);
 		if (prototype != null) {
-			runtime = Environment.createInterpreter(prototype);
+			runtime = Environment.createInterpreterFromPrototype(prototype);
 			return;
 		}
 		
@@ -148,10 +148,10 @@
 		for (File file : descriptor.getAttachedFiles()) {
 			String filename = file.toString();
 			if (filename.endsWith(".ctree")) {
-				initRuntime(monitor);
+				createEmptyRuntime(monitor);
 				loadCTree(filename);
 			} else if (filename.endsWith(".jar")) {
-				initRuntime(monitor);
+				createEmptyRuntime(monitor);
 				jars.add(filename);
 			} else if (filename.endsWith(".str")) {
 				Environment.asynOpenErrorDialog("Loading analysis components", "Cannot use .str files as a provider: please specify a .ctree or .jar file instead (usually built in /include/)", null);
@@ -162,23 +162,22 @@
 		Debug.stopTimer("Loaded analysis components");
 		
 		monitor.subTask(null);
-		cachedRuntimes.put(descriptor, runtime);
+		runtimePrototypes.put(descriptor, runtime);
 	}
 	
 	/**
-	 * Uninitializes the observer and its descriptor runtime.
+	 * Uninitializes the observer.
 	 */
 	public void uninitialize() {
-		HybridInterpreter cachedRuntime = cachedRuntimes.remove(descriptor);
-		if (cachedRuntime != null) {
-			cachedRuntime.uninit();
-		} else if (runtime != null) {
+		// Removing it from the shared cache is sort of pointless and could be dangerous
+		// HybridInterpreter cachedRuntime = cachedRuntimes.remove(descriptor);
+		if (runtime != null) {
 			runtime.uninit();
 			runtime = null;
 		}
 	}
 
-	private void initRuntime(IProgressMonitor monitor) {
+	private void createEmptyRuntime(IProgressMonitor monitor) {
 		assert Thread.holdsLock(getSyncRoot());
 		
 		if (runtime == null) {
@@ -186,15 +185,6 @@
 			runtime = Environment.createInterpreter(getSyncRoot() != Environment.getSyncRoot());
 			runtime.init();
 			Debug.stopTimer("Created new Stratego runtime instance");
-			try {
-				ITermFactory factory = runtime.getFactory();
-				IStrategoTuple programName = factory.makeTuple(
-						factory.makeString("program"),
-						factory.makeString(descriptor.getLanguage().getName()));
-				set_config_0_0.instance.invoke(runtime.getCompiledContext(), programName);
-			} catch (BadDescriptorException e) {
-				// Ignore; use default program name
-			}
 			monitor.subTask("Loading analysis runtime components");
 		}
 	}
@@ -532,7 +522,7 @@
 			//       (e.g., overriding Context.lookupPrimitive to throw an OperationCanceledException) 
 			
 			runtime.setCurrent(term);
-			initRuntimePath(resource);
+			configureRuntime(resource);
 
 			((LoggingIOAgent) runtime.getIOAgent()).clearLog();
 			assert runtime.getCompiledContext().getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME)
@@ -621,10 +611,20 @@
 		}
 	}
 	
-	private void initRuntimePath(IResource resource) {
+	private void configureRuntime(IResource resource) {
 		assert Thread.holdsLock(getSyncRoot());
 		
 		try {
+			ITermFactory factory = runtime.getFactory();
+			IStrategoTuple programName = factory.makeTuple(
+					factory.makeString("program"),
+					factory.makeString(descriptor.getLanguage().getName()));
+			set_config_0_0.instance.invoke(runtime.getCompiledContext(), programName);
+		} catch (BadDescriptorException e) {
+			// Ignore; use default program name
+		}
+		
+		try {
 			EditorIOAgent io = (EditorIOAgent) runtime.getIOAgent();
 			io.setWorkingDir(resource.getLocation().removeLastSegments(1).toOSString());
 			io.setProjectPath(resource.getProject().getLocation().toOSString());
@@ -644,7 +644,7 @@
 	public HybridInterpreter getRuntime() {
 		assert Thread.holdsLock(getSyncRoot());
 		if (runtime == null) initialize(new NullProgressMonitor());
-		if (runtime == null) initRuntime(new NullProgressMonitor()); // create empty runtime
+		if (runtime == null) createEmptyRuntime(new NullProgressMonitor()); // create empty runtime
 		return runtime;
 	}
 
@@ -654,7 +654,7 @@
 
 	public void reinitialize(Descriptor newDescriptor) throws BadDescriptorException {
 		synchronized (getSyncRoot()) {
-			cachedRuntimes.remove(descriptor);
+			runtimePrototypes.remove(descriptor);
 			runtime = null;
 			descriptor = newDescriptor;
 		}


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/services/StrategoObserver.java:18782-18802
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java:20875-20883

Copied: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch (from rev 20883, spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch)
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch	                        (rev 0)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch	2010-05-28 11:55:16 UTC (rev 20884)
@@ -0,0 +1,683 @@
+package org.strategoxt.imp.runtime.services;
+
+import static org.spoofax.interpreter.core.Tools.isTermTuple;
+import static org.spoofax.interpreter.core.Tools.termAt;
+import static org.spoofax.interpreter.terms.IStrategoTerm.LIST;
+import static org.spoofax.interpreter.terms.IStrategoTerm.TUPLE;
+import static org.strategoxt.imp.runtime.dynamicloading.TermReader.cons;
+
+import java.io.File;
+import java.io.IOException;
+import java.lang.ref.SoftReference;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+import java.util.Map;
+import java.util.WeakHashMap;
+import java.util.concurrent.locks.Lock;
+
+import lpg.runtime.IAst;
+
+import org.eclipse.core.resources.IMarker;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.imp.parser.IModelListener;
+import org.eclipse.imp.parser.IParseController;
+import org.spoofax.interpreter.core.InterpreterErrorExit;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.core.InterpreterExit;
+import org.spoofax.interpreter.core.StackTracer;
+import org.spoofax.interpreter.core.UndefinedStrategyException;
+import org.spoofax.interpreter.library.LoggingIOAgent;
+import org.spoofax.interpreter.terms.IStrategoList;
+import org.spoofax.interpreter.terms.IStrategoString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.IStrategoTuple;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.HybridInterpreter;
+import org.strategoxt.IncompatibleJarException;
+import org.strategoxt.imp.generator.postprocess_feedback_results_0_0;
+import org.strategoxt.imp.generator.sdf2imp;
+import org.strategoxt.imp.runtime.Debug;
+import org.strategoxt.imp.runtime.EditorState;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.SWTSafeLock;
+import org.strategoxt.imp.runtime.WeakWeakMap;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.IDynamicLanguageService;
+import org.strategoxt.imp.runtime.parser.SGLRParseController;
+import org.strategoxt.imp.runtime.parser.ast.AstMessageHandler;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+import org.strategoxt.imp.runtime.stratego.IMPJSGLRLibrary;
+import org.strategoxt.imp.runtime.stratego.StrategoConsole;
+import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
+import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
+import org.strategoxt.imp.runtime.stratego.adapter.WrappedAstNode;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.StrategoException;
+import org.strategoxt.stratego_aterm.implode_aterm_0_0;
+import org.strategoxt.stratego_aterm.stratego_aterm;
+import org.strategoxt.stratego_lib.set_config_0_0;
+
+/**
+ * Basic Stratego feedback (i.e., errors and warnings) provider.
+ * This service may also be used as a basis for other semantic services
+ * such as reference resolving.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class StrategoObserver implements IDynamicLanguageService, IModelListener {
+	
+	// TODO: separate delay for error markers?
+	public static final int OBSERVER_DELAY = 600;
+	
+	private static Map<Descriptor, HybridInterpreter> runtimePrototypes =
+		Collections.synchronizedMap(new WeakWeakMap<Descriptor, HybridInterpreter>());
+	
+	private final Map<IResource, IStrategoTerm> resultingAsts =
+		new WeakHashMap<IResource, IStrategoTerm>();
+	
+	private final String feedbackFunction;
+	
+	private final AstMessageHandler messages = new AstMessageHandler(AstMessageHandler.ANALYSIS_MARKER_TYPE);
+	
+	private Lock observerSchedulerLock = new SWTSafeLock(true);
+	
+	private Job asyncObserverScheduler;
+	
+	private SoftReference<HybridInterpreter> cachedRuntime;
+	
+	private volatile Descriptor descriptor;
+	
+	private volatile boolean isUpdateStarted;
+	
+	private volatile boolean rushNextUpdate;
+	
+	private boolean wasExceptionLogged;
+	
+	public StrategoObserver(Descriptor descriptor, String feedbackFunction) {
+		this.descriptor = descriptor;
+		this.feedbackFunction = feedbackFunction;
+	}
+
+	public final AnalysisRequired getAnalysisRequired() {
+		return AnalysisRequired.TYPE_ANALYSIS;
+	}
+	
+	/**
+	 * Returns a value indicating whether or not an analysis has
+	 * been scheduled or completed at this point.
+	 * 
+	 * @return true if update() or asyncUpdate() have been called.
+	 */
+	public boolean isUpdateScheduled() {
+		return isUpdateStarted;
+	}
+	
+	public void setRushNextUpdate(boolean rushNextUpdate) {
+		this.rushNextUpdate = rushNextUpdate;
+	}
+	
+	public AstMessageHandler getMessages() {
+		return messages;
+	}
+	
+	public Object getSyncRoot() {
+		 // TODO: *maybe* use descriptor as syncroot? deadlocky?
+		return Environment.getSyncRoot();
+	}
+
+	public String getLog(HybridInterpreter runtime) {
+		assert Thread.holdsLock(getSyncRoot());
+		return runtime == null ? null : ((EditorIOAgent) runtime.getIOAgent()).getLog().trim();
+	}
+	
+	private HybridInterpreter initRuntime(IProgressMonitor monitor) {
+		assert Thread.holdsLock(getSyncRoot());
+		
+		HybridInterpreter result = runtimePrototypes.get(descriptor);
+		
+		if (result != null) {
+			result = Environment.createInterpreterFromPrototype(result);
+		} else {
+			monitor.subTask("Loading analysis runtime");
+			
+			Debug.startTimer();
+			List<String> jars = new ArrayList<String>();
+			
+			for (File file : descriptor.getAttachedFiles()) {
+				String filename = file.toString();
+				if (filename.endsWith(".ctree")) {
+					if (result == null) result = createRuntime(monitor);
+					loadCTree(result, filename);
+				} else if (filename.endsWith(".jar")) {
+					if (result == null) result = createRuntime(monitor);
+					jars.add(filename);
+				} else if (filename.endsWith(".str")) {
+					Environment.asynOpenErrorDialog("Loading analysis components", "Cannot use .str files as a provider: please specify a .ctree or .jar file instead (usually built in /include/)", null);
+				}
+			}
+			
+			if (!jars.isEmpty()) loadJars(result, jars);
+			Debug.stopTimer("Loaded analysis components");
+			monitor.subTask(null);
+		}
+		
+		cachedRuntime = new SoftReference<HybridInterpreter>(result);
+		return result;
+	}
+	
+	/**
+	 * Uninitializes the observer.
+	 */
+	public void uninitialize() {
+		// Not removing the prototype; might be useful elsewhere
+		// HybridInterpreter cachedRuntime = runtimePrototypes.remove(descriptor);
+		if (cachedRuntime != null) {
+			HybridInterpreter runtime = cachedRuntime.get();
+			runtime.uninit();
+			cachedRuntime.clear();
+		}
+	}
+
+	private void loadCTree(HybridInterpreter runtime, String filename) {
+		try {
+			Debug.startTimer("Loading Stratego module ", filename);
+			assert getSyncRoot() == Environment.getSyncRoot() || !Thread.holdsLock(Environment.getSyncRoot());
+			synchronized (Environment.getSyncRoot()) {
+				runtime.load(descriptor.openAttachment(filename));
+			}
+			Debug.stopTimer("Successfully loaded " +  filename);
+		} catch (InterpreterException e) {
+			Environment.logException(new BadDescriptorException("Error loading compiler service provider " + filename, e));
+			if (descriptor.isDynamicallyLoaded())
+				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service provider " + filename, e);
+		} catch (IOException e) {
+			Environment.logException(new BadDescriptorException("Could not load compiler service provider " + filename, e));
+			if (descriptor.isDynamicallyLoaded())
+				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service provider " + filename, e);
+		}
+	}
+	
+	private void loadJars(HybridInterpreter runtime, List<String> jars) {
+		try {
+			Debug.startTimer("Loading Stratego modules " + jars);
+			URL[] classpath = new URL[jars.size()];
+			for (int i = 0; i < classpath.length; i++) {
+				classpath[i] = descriptor.getBasePath().append(jars.get(i)).toFile().toURI().toURL();
+			}
+			runtime.loadJars(classpath);
+			Debug.stopTimer("Successfully loaded " + jars);
+		} catch (SecurityException e) {
+			Environment.logException("Error loading compiler service providers " + jars, e);
+			if (descriptor.isDynamicallyLoaded())
+				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service providers " + jars, e);
+		} catch (IncompatibleJarException e) {
+			Environment.logException("Error loading compiler service providers " + jars, e);
+			if (descriptor.isDynamicallyLoaded())
+				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service providers " + jars, e);
+		} catch (IOException e) {
+			Environment.logException("Error loading compiler service providers " + jars, e);
+			if (descriptor.isDynamicallyLoaded())
+				Environment.asynOpenErrorDialog("Dynamic descriptor loading", "Error loading compiler service providers " + jars, e);
+		}
+	}
+
+	private HybridInterpreter createRuntime(IProgressMonitor monitor) {
+		assert Thread.holdsLock(getSyncRoot());
+		
+		Debug.startTimer();
+		HybridInterpreter result = Environment.createInterpreter(getSyncRoot() != Environment.getSyncRoot());
+		result.init();
+		Debug.stopTimer("Created new Stratego runtime instance");
+		monitor.subTask("Loading analysis runtime components");
+		return result;
+	}
+
+	/**
+	 * Starts a new update() operation, asynchronously.
+	 */
+	public void scheduleUpdate(final IParseController parseController) {
+		isUpdateStarted = true;
+		
+		observerSchedulerLock.lock();
+		try {
+			if (asyncObserverScheduler != null)
+				asyncObserverScheduler.cancel();
+				
+			// TODO: reuse observer schedulers; just rename them and set a new parsecontroller
+			asyncObserverScheduler = new Job("Analyzing updates to " + parseController.getPath().lastSegment()) {
+				@Override
+				public IStatus run(IProgressMonitor monitor) {
+					monitor.beginTask("", IProgressMonitor.UNKNOWN);
+					update(parseController, monitor);
+					return Status.OK_STATUS;
+				}
+			};
+			
+			// UNDONE: observer job is no longer a WorkspaceJob
+			//         thus avoiding analysis delays and progress view spamming 
+			// asyncObserverScheduler.setRule(parseController.getProject().getResource());
+			asyncObserverScheduler.setSystem(true);
+			if (rushNextUpdate) {
+				rushNextUpdate = false;
+				asyncObserverScheduler.schedule(0);
+			} else {
+				asyncObserverScheduler.schedule(OBSERVER_DELAY);
+			}
+		} finally {
+			observerSchedulerLock.unlock();
+		}
+	}
+
+	public void update(HybridInterpreter runtime, IParseController parseController, IProgressMonitor monitor) {
+		isUpdateStarted = true;
+		IStrategoAstNode ast = (IStrategoAstNode) parseController.getCurrentAst();
+		if (ast == null || ast.getConstructor() == null)
+			return;
+		
+		if (feedbackFunction == null) {
+			messages.clearMarkers(ast.getResource());
+			messages.commitDeletions();
+			return;
+		}
+			
+		if (monitor.isCanceled())
+			return;
+		
+		IStrategoTerm feedback = null;
+		
+		try {
+			synchronized (getSyncRoot()) {
+				resultingAsts.remove(ast.getResource());
+				feedback = invokeSilent(feedbackFunction, makeInputTerm(ast, false), ast.getResource());
+	
+				if (feedback == null) {
+					reportRewritingFailed();
+					String log = getLog(runtime);
+					if (!wasExceptionLogged || log.length() > 0)
+						Environment.logException(log.length() == 0 ? "Analysis failed" : "Analysis failed:\n" + log);
+					messages.clearMarkers(ast.getResource());
+					messages.addMarkerFirstLine(ast.getResource(), "Analysis failed (see error log)", IMarker.SEVERITY_ERROR);
+					messages.commitAllChanges();
+				} else if (!monitor.isCanceled()) {
+					// TODO: figure out how this was supposed to be synchronized
+					presentToUser(ast.getResource(), feedback);
+				}
+			}
+		} finally {
+			// System.out.println("OBSERVED " + System.currentTimeMillis()); // DEBUG
+			// processEditorRecolorEvents(parseController);
+		}
+	}
+
+	@Deprecated
+	@SuppressWarnings("unused")
+	private void processEditorRecolorEvents(IParseController parseController) {
+		if (parseController instanceof SGLRParseController) {
+			EditorState editor = ((SGLRParseController) parseController).getEditor();
+			if (editor != null)
+				AstMessageHandler.processEditorRecolorEvents(editor.getEditor());
+		}
+		AstMessageHandler.processAllEditorRecolorEvents();
+	}
+
+	public void reportRewritingFailed() {
+		assert Thread.holdsLock(getSyncRoot());
+		StackTracer trace = runtime.getContext().getStackTracer();
+		runtime.getIOAgent().printError(
+				trace.getTraceDepth() != 0 ? "rewriting failed, trace:" : "rewriting failed");
+		trace.printStackTrace();
+		if (descriptor.isDynamicallyLoaded())
+			StrategoConsole.activateConsole();
+	}
+	
+	/* UNDONE: asynchronous feedback presentation
+	private void asyncPresentToUser(final IParseController parseController, final IStrategoTerm feedback, final String log) {
+		Job job = new WorkspaceJob("Showing feedback") {
+			{ setSystem(true); } // don't show to user
+			@Override
+			public IStatus runInWorkspace(IProgressMonitor monitor) throws CoreException {
+				presentToUser(parseController, feedback, log);
+				return Status.OK_STATUS;
+			}
+		};
+		
+		job.setRule(parseController.getProject().getResource());
+		job.setSystem(true);
+		job.schedule();
+	}
+	*/
+
+	private void presentToUser(IResource resource, IStrategoTerm feedback) {
+		assert Thread.holdsLock(getSyncRoot());
+		assert feedback != null;
+
+		// TODO: use FileTrackingIOAgent to find out what to clear
+		// UNDONE: messages.clearAllMarkers();
+		messages.clearMarkers(resource);
+
+		try {
+			feedback = extractResultingAST(resource, feedback);
+			if (feedback.getTermType() == TUPLE
+					&& termAt(feedback, 0).getTermType() == LIST
+					&& termAt(feedback, 1).getTermType() == LIST
+					&& termAt(feedback, 2).getTermType() == LIST) {
+				
+			    IStrategoList errors = termAt(feedback, 0);
+			    IStrategoList warnings = termAt(feedback, 1);
+			    IStrategoList notes = termAt(feedback, 2);
+			    feedbackToMarkers(resource, errors, IMarker.SEVERITY_ERROR);
+			    feedbackToMarkers(resource, warnings, IMarker.SEVERITY_WARNING);
+			    feedbackToMarkers(resource, notes, IMarker.SEVERITY_INFO);
+			} else {
+				// Throw an exception to trigger an Eclipse pop-up  
+				throw new StrategoException("Illegal output from " + feedbackFunction + " (should be (errors,warnings,notes) tuple: " + feedback);
+			}
+		} finally {
+			messages.commitAllChanges();
+		}
+	}
+	
+	private IStrategoTerm extractResultingAST(IResource resource, IStrategoTerm feedback) {
+		if (isTermTuple(feedback) && feedback.getSubtermCount() == 4
+				&& (!"None".equals(cons(feedback.getSubterm(0))) || feedback.getSubterm(0).getSubtermCount() > 0)) {
+			resultingAsts.put(resource, feedback.getSubterm(0));
+			
+			IStrategoTuple newFeedback = Environment.getTermFactory().makeTuple(
+					feedback.getSubterm(1), feedback.getSubterm(2), feedback.getSubterm(3));
+			return newFeedback;
+		} else {
+			resultingAsts.remove(resource);
+			return feedback;
+		}
+	}
+	
+	private final void feedbackToMarkers(IResource resource, IStrategoList feedbacks, int severity) {
+		assert Thread.holdsLock(getSyncRoot());
+		
+		Context context = runtime.getCompiledContext();
+		sdf2imp.init(context);
+		feedbacks = postProcessFeedback(feedbacks, context);
+		
+	    for (IStrategoTerm feedback : feedbacks.getAllSubterms()) {
+	        IStrategoTerm term = termAt(feedback, 0);
+			IStrategoString messageTerm = termAt(feedback, 1);
+			String message = messageTerm.stringValue();
+			
+			messages.addMarker(resource, term, message, severity);
+	    }
+	}
+
+	private IStrategoList postProcessFeedback(IStrategoList feedbacks, Context context) {
+		IStrategoList result =
+				(IStrategoList) postprocess_feedback_results_0_0.instance.invoke(context, feedbacks);
+		if (result == null) {
+			// Throw an exception to trigger an Eclipse pop-up  
+			throw new StrategoException("Illegal output from " + feedbackFunction + ": " + feedbacks);
+		}
+		return result;
+	}	
+	
+	/**
+	 * Invoke a Stratego function with a specific AST node as its input.
+	 * 
+	 * @see #getAstNode(IStrategoTerm)  To retrieve the AST node associated with the resulting term.
+	 */
+	public IStrategoTerm invoke(String function, IStrategoAstNode node)
+			throws UndefinedStrategyException, InterpreterErrorExit, InterpreterExit, InterpreterException {
+
+		IStrategoTerm input = makeInputTerm(node, true);
+		return invoke(function, input, node.getResource());
+	}
+
+	/**
+	 * Create an input term for a control rule.
+	 */
+	public IStrategoTuple makeInputTerm(IStrategoAstNode node, boolean includeSubNode) {
+		return makeInputTerm(node, includeSubNode, false);
+	}
+	
+	/**
+	 * Create an input term for a control rule.
+	 */
+	public IStrategoTuple makeInputTerm(IStrategoAstNode node, boolean includeSubNode, boolean useSourceAst) {
+		assert Thread.holdsLock(getSyncRoot());
+		
+		Context context = getRuntime().getCompiledContext();
+		IStrategoTerm resultingAst = useSourceAst ? null : resultingAsts.get(node.getResource());
+		IStrategoList termPath = StrategoTermPath.getTermPathWithOrigin(context, resultingAst, node);
+		IStrategoTerm targetTerm;
+		IStrategoTerm rootTerm;
+		
+		if (termPath != null) {
+			targetTerm = StrategoTermPath.getTermAtPath(context, resultingAst, termPath);
+			rootTerm = resultingAst;
+		} else {
+			targetTerm = node.getTerm();
+			termPath = StrategoTermPath.createPath(node);
+			rootTerm = getRoot(node).getTerm();
+		}
+		
+		ITermFactory factory = Environment.getTermFactory();
+		String path = node.getResource().getProjectRelativePath().toPortableString();
+		String absolutePath = node.getResource().getProject().getLocation().toOSString();
+		
+		if (includeSubNode) {
+			IStrategoTerm[] inputParts = {
+					targetTerm,
+					termPath,
+					rootTerm,
+					factory.makeString(path),
+					factory.makeString(absolutePath)
+				};
+			return factory.makeTuple(inputParts);
+		} else {
+			IStrategoTerm[] inputParts = {
+					node.getTerm(),
+					factory.makeString(path),
+					factory.makeString(absolutePath)
+				};
+			return factory.makeTuple(inputParts);
+		}
+	}
+
+	/**
+	 * Create an input term for a control rule,
+	 * based on the ATerm syntax of the AST of the source file.
+	 */
+	public IStrategoTuple makeATermInputTerm(IStrategoAstNode node, boolean includeSubNode, IResource resource) {
+		assert Thread.holdsLock(getSyncRoot());
+		stratego_aterm.init(runtime.getCompiledContext());
+		
+		ITermFactory factory = Environment.getTermFactory();
+		String path = resource.getProjectRelativePath().toPortableString();
+		String absolutePath = resource.getProject().getLocation().toOSString();
+		
+		if (includeSubNode) {
+			node = getImplodableNode(node);
+			IStrategoTerm[] inputParts = {
+					implodeATerm(node.getTerm()),
+					StrategoTermPath.createPathFromParsedATerm(node, runtime.getCompiledContext()),
+					implodeATerm(getRoot(node).getTerm()),
+					factory.makeString(path),
+					factory.makeString(absolutePath)
+				};
+			return factory.makeTuple(inputParts);
+		} else {
+			throw new org.spoofax.NotImplementedException();
+		}
+	}
+
+	protected IStrategoTerm implodeATerm(IStrategoTerm term) {
+		return implode_aterm_0_0.instance.invoke(runtime.getCompiledContext(), term);
+	}
+
+	protected IStrategoAstNode getImplodableNode(IStrategoAstNode node) {
+		if (node.isList() && node.getChildren().size() == 1)
+			node = (IStrategoAstNode) node.getChildren().get(0);
+		for (; node != null; node = node.getParent()) {
+			if (implodeATerm(node.getTerm()) != null)
+				return node;
+		}
+		throw new IllegalStateException("Could not identify selected AST node from ATerm editor");
+	}
+	
+	/**
+	 * Invoke a Stratego function with a specific term its input,
+	 * given a particular working directory.
+	 */
+	public IStrategoTerm invoke(String function, IStrategoTerm term, IResource resource)
+			throws UndefinedStrategyException, InterpreterErrorExit, InterpreterExit, InterpreterException {
+		
+		synchronized (getSyncRoot()) {
+			if (runtime == null) initialize(new NullProgressMonitor());
+			if (runtime == null) return null;
+			
+		    Debug.startTimer();
+			// TODO: Make Context support monitor.isCanceled()?
+			//       (e.g., overriding Context.lookupPrimitive to throw an OperationCanceledException) 
+			
+			runtime.setCurrent(term);
+			configureRuntime(runtime, resource);
+
+			((LoggingIOAgent) runtime.getIOAgent()).clearLog();
+			assert runtime.getCompiledContext().getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME)
+					instanceof IMPJSGLRLibrary;
+			boolean success = runtime.invoke(function);
+			
+			Debug.stopTimer("Evaluated strategy " + function + (success ? "" : " (failed)"));
+			return success ? runtime.current() : null;
+		}
+	}
+
+	/**
+	 * Invoke a Stratego function with a specific AST node as its input,
+	 * logging and swallowing all exceptions.
+	 * 
+	 * @see #getAstNode(IStrategoTerm)  To retrieve the AST node associated with the resulting term.
+	 */
+	public IStrategoTerm invokeSilent(String function, IStrategoAstNode node) {
+		try {
+			return invokeSilent(function, makeInputTerm(node, true), node.getResource());
+		} catch (RuntimeException e) {
+			if (runtime != null) runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
+			Environment.logException("Internal error evaluating strategy " + function, e);

(177 diff lines omitted)


From n.bruning at student.tudelft.nl  Fri May 28 15:43:48 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Fri, 28 May 2010 13:43:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20885 - NathanBruning -
	spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201005281343.o4SDhmPf017329@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-05-28 13:43:48 +0000 (Fri, 28 May 2010)
New Revision: 20885

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20885&view=rev

Modified:
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SetMarkersPrimitive.java

Log:
Workaround for nested primitives

Changes:

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SetMarkersPrimitive.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SetMarkersPrimitive.java	2010-05-28 11:55:16 UTC (rev 20884)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SetMarkersPrimitive.java	2010-05-28 13:43:48 UTC (rev 20885)
@@ -27,6 +27,7 @@
 		
 		WrappedAstNode appl = (WrappedAstNode)tvars[0]; 
 		IStrategoAstNode ast = appl.getNode();
+		assert (ast.getResource() != null);
 		
 		IOAgent agent = SSLLibrary.instance(env).getIOAgent();
 		if (!(agent instanceof EditorIOAgent)) return false;
@@ -34,7 +35,12 @@
 		StrategoAnalysisJob job = ((EditorIOAgent)agent).getJob();
 		
 		StrategoObserver observer = job.getObserver();
+		
+		// HACK: presentToUser runs a feedback postprocess strategy which calls primitives witch set env.current()
+		// (nested primitives...)
+		IStrategoTerm previousTerm = env.current();
 		observer.presentToUser(ast.getResource(), env.current());
+		env.setCurrent(previousTerm);
 		
 		return true;
 	}



From n.bruning at student.tudelft.nl  Fri May 28 16:09:12 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Fri, 28 May 2010 14:09:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20886 - NathanBruning -
	spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <201005281409.o4SE9Cb1017789@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-05-28 14:09:12 +0000 (Fri, 28 May 2010)
New Revision: 20886

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20886&view=rev

Modified:
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoProgressMonitor.java

Log:
Improve progress monitoring.
Enable backgrounding an analyze job.

Changes:

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-28 13:43:48 UTC (rev 20885)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-28 14:09:12 UTC (rev 20886)
@@ -335,6 +335,17 @@
 		assert Thread.holdsLock(getSyncRoot());
 		assert feedback != null;
 
+		if (feedback instanceof IStrategoString) {
+			String status = ((IStrategoString)feedback).stringValue();
+			if (status.equals("BACKGROUNDED")) {
+				// Trigger update when needed
+				isUpdateStarted = false;
+				return;
+			} else {
+				throw new StrategoException("Illegal status from " + feedbackFunction + ": " + status);
+			}
+		}
+		
 		// TODO: use FileTrackingIOAgent to find out what to clear
 		// UNDONE: messages.clearAllMarkers();
 		messages.clearMarkers(resource);

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoProgressMonitor.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoProgressMonitor.java	2010-05-28 13:43:48 UTC (rev 20885)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoProgressMonitor.java	2010-05-28 14:09:12 UTC (rev 20886)
@@ -2,48 +2,66 @@
 
 import org.eclipse.core.runtime.IProgressMonitor;
 
+/**
+ * Class to provide progress from a strategeo strategy.
+ * 
+ * The amount of work can be set at any time with {@link #setSubTasks(int)}.
+ * 
+ * The underlying IProgressMonitor is initialized with a fixed amount of work on
+ * creation.
+ * 
+ * @author nathan
+ * 
+ */
 public class StrategoProgressMonitor {
 
 	IProgressMonitor monitor;
+
 	int progress = 0;
+
 	int tasks = 0;
+
 	int currentTask = 0;
-	
-	public static final int TOTAL_WORK = Integer.MAX_VALUE;
-	
+
+	// Ideally would be Integer.MAX_VALUE, but Eclipse can't handle it.
+	public static final int TOTAL_WORK = 10000;
+
 	public StrategoProgressMonitor(IProgressMonitor monitor) {
 		this.monitor = monitor;
 		monitor.beginTask("", TOTAL_WORK);
 	}
-	
+
 	public void setPercentage(int p) {
-		if (p<0 || p>100) return;
-		
-		int work = (TOTAL_WORK / 100) * p; 
-		setWorkInternal(work);	
+		if (p < 0 || p > 100)
+			return;
+
+		int work = (TOTAL_WORK / 100) * p;
+		setWorkInternal(work);
 	}
-	
+
 	private void setWorkInternal(int work) {
 		int diff = work - progress;
-		if (diff <= 0) return;
+		if (diff <= 0)
+			return;
 		this.progress = work;
 		monitor.worked(diff);
 	}
-	
+
 	public void setSubTasks(int tasks) {
 		this.tasks = tasks;
 		updateTaskWork();
 	}
-	
+
 	public void completeTask() {
-		if (currentTask >= tasks) return;
-		this.currentTask ++;
+		if (currentTask >= tasks)
+			return;
+		this.currentTask++;
 		updateTaskWork();
 	}
-	
+
 	private void updateTaskWork() {
 		int work = tasks == 0 ? 0 : (TOTAL_WORK / tasks) * currentTask;
 		setWorkInternal(work);
 	}
-	
+
 }



From L.C.L.Kats at tudelft.nl  Fri May 28 16:30:37 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 28 May 2010 14:30:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20887 - LennartKats -
	in spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.updatesite
Message-ID: <201005281430.o4SEUbvS017997@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-28 14:30:37 +0000 (Fri, 28 May 2010)
New Revision: 20887

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20887&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Log:
Release: bumped to version 0.5

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-28 14:09:12 UTC (rev 20886)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	2010-05-28 14:30:37 UTC (rev 20887)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="0.4.7.3"
+      version="0.5"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-28 14:09:12 UTC (rev 20886)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	2010-05-28 14:30:37 UTC (rev 20887)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://www.lclnet.nl/update/">
       Spoofax/IMP update site
    </description>
-   <feature url="features/org.strategoxt.imp_0.4.7.3.jar" id="org.strategoxt.imp" version="0.4.7.3">
+   <feature url="features/org.strategoxt.imp_0.5.0.jar" id="org.strategoxt.imp" version="0.5">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">



From n.bruning at student.tudelft.nl  Fri May 28 17:13:55 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Fri, 28 May 2010 15:13:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20888 - NathanBruning -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans
Message-ID: <201005281513.o4SFDtiW018894@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-05-28 15:13:53 +0000 (Fri, 28 May 2010)
New Revision: 20888

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20888&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str

Log:
Fix wildcard import of "./-"

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-28 14:30:37 UTC (rev 20887)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	2010-05-28 15:13:53 UTC (rev 20888)
@@ -195,7 +195,7 @@
   declare-globals:
     ImportWildcard(x) -> ImportWildcard(x)
     with
-      <open-wildcard-import(resolve-import-path <+ file-exists, read-stratego-signatures, declare-globals-top, has-extension(|"str") + has-extension(|"rtree"))> x
+      <open-wildcard-import(file-exists <+ resolve-import-path, read-stratego-signatures, declare-globals-top, has-extension(|"str") + has-extension(|"rtree"))> x
     <+
       rules(IsImportedFailed: x)
 



From n.bruning at student.tudelft.nl  Mon May 31 11:54:45 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Mon, 31 May 2010 09:54:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20889 - NathanBruning -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <201005310954.o4V9sjRa017929@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-05-31 09:54:44 +0000 (Mon, 31 May 2010)
New Revision: 20889

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20889&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java

Log:
prevent useless warnings

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-05-28 15:13:53 UTC (rev 20888)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-05-31 09:54:44 UTC (rev 20889)
@@ -95,6 +95,11 @@
 		if (ast == null)
 			return null;
 		
+		if (origin instanceof ListAstNode) {
+			// Lists have no origin information; don't try to find the node.
+			return null;
+		}
+		
 		final IStrategoAstNode originChild = origin.getChildren().size() == 0
 				? null
 				: (IStrategoAstNode) origin.getChildren().get(0);



From L.C.L.Kats at tudelft.nl  Mon May 31 13:02:49 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 31 May 2010 11:02:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20890 - LennartKats -
	sglr-recovery/trunk/permissive-grammars/trans/make-permissive
Message-ID: <201005311102.o4VB2nTJ019304@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-31 11:02:49 +0000 (Mon, 31 May 2010)
New Revision: 20890

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20890&view=rev

Modified:
   sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr

Log:
Reverted follow restrictions for insertion rules; don't seem to work afterall (Spoofax/137)

Changes:

Modified: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
===================================================================
--- sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2010-05-31 09:54:44 UTC (rev 20889)
+++ sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr	2010-05-31 11:02:49 UTC (rev 20890)
@@ -8,27 +8,18 @@
   def insert-sections:
     modules ->
     |[ sorts
-         WATEREOF INSERTION
+         WATEREOF
   
        lexical restrictions    
          WATEREOF -/- ~[]
          
        lexical syntax
          ~%% Lexical insertion recovery rules
-         -> INSERTION {recover}
          p1*
        
        syntax
          ~%% Kernel syntax insertion recovery rules
-         -> INSERTION {recover}
          p2*
-       
-       lexical restrictions
-         INSERTION -/- [\ \t\n]
-       
-       lexical restrictions
-         INSERTION -/- [\ \t\n]
-         
     ]|
     where
       if-switch(|INSERTIONS_ON())
@@ -53,7 +44,7 @@
   eq lexical-insert-prods:
     prod([lit(_) | pattern-and-lit], _, _) ->
     |[ 
-       INSERTION -> ~closinglit {cons("INSERTION")}
+       -> ~closinglit {recover, cons("INSERTION")}
     ]|
     where
       id.in-context-free-section
@@ -83,7 +74,7 @@
   eq lexical-insert-prods:
     prod([openinglit | pattern-and-lit], _, _) ->
     |[ 
-       INSERTION -> ~openinglit {cons("INSERTION")}
+       -> ~openinglit {recover, cons("INSERTION")}
     ]|
     where
       id.in-context-free-section
@@ -186,7 +177,7 @@
 attributes // Separator literals (e.g., ",")
 
   eq lexical-insert-prods:
-    lit @ lit(_) -> |[ INSERTION -> ~lit {cons("INSERTION")} ]|
+    lit @ lit(_) -> |[ -> ~lit {recover, cons("INSERTION")} ]|
     where
       id.in-iter-pattern;
       id.in-context-free-section
@@ -200,7 +191,7 @@
 attributes // Non-nestable region keywords (e.g., "attributes" or "strategies")
 
   eq lexical-insert-prods:
-    prod([lit @ lit(_) | _], _, _) -> |[ INSERTION -> ~lit {cons("INSERTION")} ]|
+    prod([lit @ lit(_) | _], _, _) -> |[ -> ~lit {recover, cons("INSERTION")} ]|
     where
       if-switch(|NONNESTABLE_ON())
     where
@@ -237,7 +228,7 @@
 attributes // Start production literals (e.g., "module")
 
   eq lexical-insert-prods:
-    lit @ lit(_) -> |[ INSERTION -> ~lit {cons("INSERTION")} ]|
+    lit @ lit(_) -> |[ -> ~lit {recover, cons("INSERTION")} ]|
     where
       id.is-start-symbol(|id.current-sort)
     where
@@ -250,7 +241,7 @@
 attributes // All-literal insertion
 
   eq lexical-insert-prods:
-    lit @ lit(_) -> |[ INSERTION -> ~lit {cons("INSERTION")} ]|
+    lit @ lit(_) -> |[ -> ~lit {recover, cons("INSERTION")} ]|
     where
       id.in-context-free-section
     where


Property changes on: sglr-recovery/trunk/permissive-grammars/trans/make-permissive/insert-sections.astr
___________________________________________________________________
Deleted: svn:mergeinfo
   - 



From L.C.L.Kats at tudelft.nl  Mon May 31 13:05:51 2010
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 31 May 2010 11:05:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20891 - LennartKats -
	spoofax-imp/trunk/org.strategoxt.imp.generator/lib
Message-ID: <201005311105.o4VB5pqC019331@proliant.st.ewi.tudelft.nl>

Author: LennartKats
Date: 2010-05-31 11:05:51 +0000 (Mon, 31 May 2010)
New Revision: 20891

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20891&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar

Log:
Spoofax/137: enable nonnestable recovery rules by default

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/lib/make_permissive.jar
===================================================================
(Binary files differ)



From n.bruning at student.tudelft.nl  Mon May 31 14:05:20 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Mon, 31 May 2010 12:05:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20892 - NathanBruning -
	in
	spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime:
	. src/org/strategoxt/imp/runtime/services
	src/org/strategoxt/imp/runtime/stratego
Message-ID: <201005311205.o4VC5KaX020142@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-05-31 12:05:19 +0000 (Mon, 31 May 2010)
New Revision: 20892

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20892&view=rev

Modified:
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java

Log:
Made StrategoObserver thread-safe again
Added basic documentation for analysis queue

Changes:


Property changes on: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime
___________________________________________________________________
Modified: svn:mergeinfo
   - /spoofax-imp/trunk/org.strategoxt.imp.runtime:20875-20883
   + /spoofax-imp/trunk/org.strategoxt.imp.runtime:20875-20889

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	2010-05-31 11:05:51 UTC (rev 20891)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	2010-05-31 12:05:19 UTC (rev 20892)
@@ -12,159 +12,189 @@
 import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.imp.parser.IParseController;
 
+/**
+ * A workbench-global queue of Stratego operations.
+ * 
+ * Public methods are thread-safe due to the usage of a PriorityBlockingQueue.
+ * 
+ * @author nathan
+ * 
+ */
 public class StrategoAnalysisQueue {
 
 	/**
-	 * TODO: 
-	 * - remove background jobs if a foreground job is started for the same file
-	 * - stop analyzing on a workspace close (/eclipse exit)
-	 * - interrupt background jobs for foreground jobs ?
+	 * TODO: - remove background jobs if a foreground job is started for the
+	 * same file - stop analyzing on a workspace close (/eclipse exit) -
+	 * interrupt background jobs for foreground jobs ?
 	 */
-	
-	/**
-	 * 
-	 */
+
 	private static final long serialVersionUID = 1L;
-	
+
 	PriorityBlockingQueue<UpdateJob> queue;
-	
+
 	public class UpdateJob extends Job {
-		
+
 		StrategoAnalysisJob job;
+
 		int priority;
+
 		long delay;
-		
+
 		static final int INTERACTIVE = 0;
+
 		static final int BACKGROUND = 100;
-		
-		protected UpdateJob(StrategoAnalysisJob job, IPath path, int priority, boolean isSystem, long delay) {
+
+		protected UpdateJob(StrategoAnalysisJob job, IPath path, int priority, boolean isSystem,
+				long delay) {
 			super("");
 			this.job = job;
 			this.priority = priority;
 			this.delay = delay;
-			
+
 			// Should be set before scheduling the job
-			this.setName(JOB_DESCRIPTION + path); 
-			
-			// UNDONE: observer job is no longer a WorkspaceJob
-			//         thus avoiding analysis delays and progress view spamming 
-			// setRule(parseController.getProject().getResource());
-			
+			this.setName(JOB_DESCRIPTION + path);
+
 			setSystem(isSystem);
 		}
-		
+
 		final static String JOB_DESCRIPTION = "Analyzing updates to ";
 
 		@Override
 		protected IStatus run(IProgressMonitor monitor) {
-			
-			running = true; //	atomic
-			
+
+			running = true; // atomic
+
 			// Set name
 			IStatus status;
-			try { 
+			try {
 				status = runInternal(monitor);
-			}
-			catch (Throwable t) {
+			} catch (Throwable t) {
 				t.printStackTrace(); // TODO: show
 				status = Status.CANCEL_STATUS;
 			}
-			
+
 			// Run next task
 			running = false;
 			wake();
-			
+
 			return status;
 		}
-		
+
 		private IStatus runInternal(IProgressMonitor monitor) {
-					
+
 			IStatus status = job.analyze(monitor);
 			return status;
-			
+
 		}
-		
+
 		public void scheduleWithDelay() {
 			super.schedule(this.delay);
 		}
-		
+
 	}
-	
+
 	public StrategoAnalysisQueue() {
 		super();
-		this.queue = new PriorityBlockingQueue<UpdateJob>(); 
+		this.queue = new PriorityBlockingQueue<UpdateJob>();
 	}
 
+	/**
+	 * Queue analysis of the file, interactively. Used for analyzing the contents of the current editor.
+	 * @param observer the file's observer
+	 * @param parseController the parse controller of the file
+	 * @param delay delay before starting, in milliseconds
+	 * @return The job. Can be used to call {@link UpdateJob#cancel()}.
+	 */
 	public UpdateJob queue(StrategoObserver observer, IParseController parseController, long delay) {
-		
+
 		// File has changed.
 		// Schedule with high priority.
-		
+
 		IPath path = parseController.getPath();
-		
+
 		StrategoObserverUpdateJob job = new StrategoObserverUpdateJob(observer);
 		job.setup(parseController);
-		
-		UpdateJob updateJob = new UpdateJob(job, path, UpdateJob.INTERACTIVE, true, delay); 
+
+		// UNDONE: observer job is no longer a WorkspaceJob
+		// thus avoiding analysis delays and progress view spamming
+		// setRule(parseController.getProject().getResource());
+		UpdateJob updateJob = new UpdateJob(job, path, UpdateJob.INTERACTIVE, true, delay);
 		add(updateJob);
 		return updateJob;
-		
+
 	}
-	
+
+	/**
+	 * Queue some Stratego job in the background.
+	 * @param job the job to perform
+	 * @param project the project to which the job belongs
+	 * @return the job
+	 */
 	public UpdateJob queue(StrategoAnalysisJob job, IProject project) {
-		
+
 		IPath path = project.getFullPath();
 		UpdateJob updateJob = new UpdateJob(job, path, UpdateJob.BACKGROUND, false, 0);
 		add(updateJob);
 		return updateJob;
-		
+
 	}
-	
+
 	private void add(UpdateJob job) {
-		
+
 		this.queue.add(job);
 		this.wake();
-		
+
 	}
-	
+
+	/*
+	 * Indicates whether a job is currently running.
+	 * Only one job can be running at any given time.
+	 */
 	private boolean running = false;
-	
+
 	private void wake() {
-		if (running) return;
-		
+		if (running)
+			return;
+
 		UpdateJob job = queue.poll();
 		if (job != null) {
 			run(job);
 		}
 	}
-	
+
 	private void run(UpdateJob job) {
-		
+
 		job.scheduleWithDelay();
-		
+
 	}
-	
+
 	protected static IPath fullPathToWorkspaceLocal(IPath fullPath) {
-	
+
 		IPath workspace = ResourcesPlugin.getWorkspace().getRoot().getLocation();
 		return fullPath.removeFirstSegments(fullPath.matchingFirstSegments(workspace));
-	} 
-		
+	}
+
 	protected static IResource pathToResource(IPath localPath) {
-	
+
 		return ResourcesPlugin.getWorkspace().getRoot().findMember(localPath);
-		
+
 	}
 
+	/**
+	 * Queue background analysis for a given file.
+	 * @param path the file's path
+	 * @param project the file's project
+	 * @return the update job
+	 */
 	public UpdateJob queueAnalysis(IPath path, IProject project) {
-		
+
 		StrategoObserverBackgroundUpdateJob job = new StrategoObserverBackgroundUpdateJob();
 		job.setup(path, project);
 
-		UpdateJob updateJob = new UpdateJob(job, path, UpdateJob.BACKGROUND, true, 0); 
-		queue.add(updateJob);
+		UpdateJob updateJob = new UpdateJob(job, path, UpdateJob.BACKGROUND, true, 0);
+		add(updateJob);
 		wake();
-		
+
 		return updateJob;
 	}
 

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-31 11:05:51 UTC (rev 20891)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-31 12:05:19 UTC (rev 20892)
@@ -14,6 +14,7 @@
 import java.util.List;
 import java.util.Map;
 import java.util.WeakHashMap;
+import java.util.concurrent.locks.Lock;
 
 import lpg.runtime.IAst;
 
@@ -41,6 +42,7 @@
 import org.strategoxt.imp.runtime.Debug;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.SWTSafeLock;
 import org.strategoxt.imp.runtime.WeakWeakMap;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
@@ -90,6 +92,8 @@
 	
 	private volatile boolean rushNextUpdate;
 	
+	private Lock observerSchedulerLock = new SWTSafeLock(true);
+	
 	private UpdateJob updateJob;
 	
 	private boolean wasExceptionLogged;
@@ -234,22 +238,28 @@
 
 	/**
 	 * Starts a new update() operation, asynchronously.
+	 * Can be called from multiple threads.
 	 */
 	public void scheduleUpdate(final IParseController parseController) {
 		
 		isUpdateStarted = true;
 
-		StrategoAnalysisQueue queue = StrategoAnalysisQueueFactory.getInstance();
-		if (this.updateJob != null) {
-			this.updateJob.cancel();
+		observerSchedulerLock.lock();
+		try {
+			StrategoAnalysisQueue queue = StrategoAnalysisQueueFactory.getInstance();
+			if (this.updateJob != null) {
+				this.updateJob.cancel();
+			}
+			
+			if (this.rushNextUpdate) {
+				this.updateJob = queue.queue(this, parseController, 0);
+			} else {
+				this.updateJob = queue.queue(this, parseController, OBSERVER_DELAY);
+			}
+		} finally {
+			observerSchedulerLock.unlock();
 		}
 		
-		if (this.rushNextUpdate) {
-			this.updateJob = queue.queue(this, parseController, 0);
-		} else {
-			this.updateJob = queue.queue(this, parseController, OBSERVER_DELAY);
-		}
-		
 	}
 
 	public void update(IParseController parseController, IProgressMonitor monitor) {

Modified: spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java
===================================================================
--- spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-05-31 11:05:51 UTC (rev 20891)
+++ spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoTermPath.java	2010-05-31 12:05:19 UTC (rev 20892)
@@ -95,6 +95,11 @@
 		if (ast == null)
 			return null;
 		
+		if (origin instanceof ListAstNode) {
+			// Lists have no origin information; don't try to find the node.
+			return null;
+		}
+		
 		final IStrategoAstNode originChild = origin.getChildren().size() == 0
 				? null
 				: (IStrategoAstNode) origin.getChildren().get(0);



From n.bruning at student.tudelft.nl  Mon May 31 14:28:55 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Mon, 31 May 2010 12:28:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20893 - NathanBruning -
	in spoofax-imp/trunk/org.strategoxt.imp.runtime: . icons
	src/org/strategoxt/imp/runtime
	src/org/strategoxt/imp/runtime/dynamicloading
	src/org/strategoxt/imp/runtime/parser
	src/org/strategoxt/imp/runtime/parser/ast
	src/org/strategoxt/imp/runtime/services
	src/org/strategoxt/imp/runtime/stratego
	src/org/strategoxt/imp/runtime/stratego/adapter
Message-ID: <201005311228.o4VCStW1020509@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-05-31 12:28:55 +0000 (Mon, 31 May 2010)
New Revision: 20893

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20893&view=rev

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java.nathan
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisJob.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueueFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoProgressMonitor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/CompleteWorkUnitPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueStrategyPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SetMarkersPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SetTotalWorkUnitsPrimitive.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/
   spoofax-imp/trunk/org.strategoxt.imp.runtime/icons/stratego.png
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LabelProvider.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/NodeMapping.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TextAttributeMapping.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/TreeModelBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/EditorIOAgent.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileTrackingIOAgent.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPLibrary.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/IMPParseStringPTPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceMappings.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/StrategoConsole.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/adapter/WrappedAstNodeLink.java

Log:
Reintegrate background-processing branch

Changes (first 1000 lines of the diffs):


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime
___________________________________________________________________
Added: svn:mergeinfo
   + /spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime:20875-20892


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/icons/stratego.png
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/icons/stratego.png:18782-18802
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/icons/stratego.png:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/icons/stratego.png:19086-20191


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/EditorState.java:18782-18802
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java:19086-20191

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java.nathan (from rev 20892, spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java.nathan)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java.nathan	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/WeakSoftMap.java.nathan	2010-05-31 12:28:55 UTC (rev 20893)
@@ -0,0 +1,129 @@
+package org.strategoxt.imp.runtime;
+
+import java.lang.ref.SoftReference;
+import java.lang.ref.WeakReference;
+import java.util.Collection;
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+import java.util.WeakHashMap;
+
+import org.spoofax.NotImplementedException;
+import org.strategoxt.lang.WeakValueHashMap;
+
+/**
+ * A WeakHashMap that uses weak reference keys and soft reference values.
+ * 
+ * @see WeakHashMap
+ * @see WeakValueHashMap
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class WeakSoftMap<K,V> implements Map<K,V> {
+	
+	private final WeakHashMap<K, WeakReference<V>> weakMap = new WeakHashMap<K, WeakReference<V>>();
+	private final WeakHashMap<K, SoftReference<V>> softMap = new WeakHashMap<K, SoftReference<V>>();
+	private final WeakHashMap<K, Long> accessTimes = new WeakHashMap<K, Long>(); 
+	private long lastCheck = 0;
+	
+	public final static long CLEANUP_TIME = 5000;
+	public final static long SOFT_TO_WEAK_TIME = 5000;
+	
+	public WeakSoftMap() {
+		// Construct new WeakWeakMap
+	}
+
+	public void clear() {
+		weakMap.clear();
+		softMap.clear();
+		accessTimes.clear();
+	}
+
+	public boolean containsKey(Object key) {
+		return weakMap.containsKey(key);
+	}
+
+	public boolean containsValue(Object value) {
+		// Can't do this using reference equality and no reference given
+		throw new UnsupportedOperationException();
+	}
+
+	public Set<java.util.Map.Entry<K, V>> entrySet() {
+		throw new NotImplementedException();
+	}
+
+	private void access(K key, V value) {
+		accessTimes.put(key, new Long(System.currentTimeMillis()));
+		softMap.put(key, new SoftReference<V>(value));
+	}
+	
+	public V get(Object key) {
+		WeakReference<V> ref = weakMap.get(key);
+		if (ref != null) {
+			access((K)key, ref.get());
+		}
+		cleanup();
+		return ref == null ? null : ref.get();
+	}
+	
+	/**
+	 * Cleanup the oldest references.
+	 */
+	public void cleanup() {
+		long currentDate = System.currentTimeMillis();
+		if (lastCheck != 0 && currentDate - lastCheck < CLEANUP_TIME)
+			return;
+		
+		Set<K> copy = new HashSet<K>(softMap.keySet());
+		for(K key : copy) {
+			long accessTime = accessTimes.get(key);
+			if (currentDate - accessTime > SOFT_TO_WEAK_TIME) {
+				// Clear soft reference; first garbage collect will remove the weak ref.
+				System.out.println(" Moving from soft to weak, age = " + (currentDate - accessTime));
+				softMap.remove(key);
+			}
+		}
+		lastCheck = currentDate;
+	}
+
+	public boolean isEmpty() {
+		return weakMap.isEmpty();
+	}
+
+	public Set<K> keySet() {
+		return weakMap.keySet();
+	}
+
+	public V put(K key, V value) {
+		if (value == null)
+			throw new IllegalArgumentException("Value cannot be null");
+		WeakReference<V> existing = weakMap.put(key, new WeakReference<V>(value));
+		access(key, value);
+		return existing == null ? null : existing.get();
+	}
+
+	public void putAll(Map<? extends K, ? extends V> m) {
+		throw new NotImplementedException();
+	}
+
+	public V remove(Object key) {
+		WeakReference<V> existing = weakMap.remove(key);
+		accessTimes.remove(key);
+		softMap.remove(key);
+		return existing == null ? null : existing.get();
+	}
+
+	public int size() {
+		return weakMap.size();
+	}
+
+	public Collection<V> values() {
+		Collection<WeakReference<V>> results = weakMap.values();
+		Set<V> copy = new HashSet<V>(results.size());
+		for (WeakReference<V> resultRef : results) {
+			V result = resultRef == null ? null : resultRef.get();
+			if (result != null) copy.add(result);
+		}
+		return copy;
+	}
+}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java:18782-18802
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/AbstractService.java:19086


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java:18782-18802
/imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java:18803-19017
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/AbstractSGLRI.java:19086


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/JSGLRI.java:18782-18802
/imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java:18803-19017
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/JSGLRI.java:19086

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-05-31 12:05:19 UTC (rev 20892)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	2010-05-31 12:28:55 UTC (rev 20893)
@@ -11,6 +11,7 @@
 
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.IProgressMonitor;
@@ -97,6 +98,8 @@
 	private volatile boolean isAborted;
 	
 	private boolean isReplaced;
+	
+	private boolean performInitialUpdate;
 
 	// Simple accessors
 	
@@ -148,9 +151,13 @@
     
     public IFile getResource() {
     	IPath path = getPath();
-		IProject project = getProject().getRawProject();
-		path = path.removeFirstSegments(path.matchingFirstSegments(project.getLocation()));
-		return project.getFile(path);
+    	if (getProject() == null) {
+    		return ResourcesPlugin.getWorkspace().getRoot().getFile(path);	// TODO: out-of-workspace files
+    	} else {
+    		IProject project = getProject().getRawProject();
+    		path = path.removeFirstSegments(path.matchingFirstSegments(project.getLocation()));
+    		return project.getFile(path);
+    	}
     }
     
     public void setEditor(EditorState editor) {
@@ -161,6 +168,14 @@
 		return editor;
 	}
     
+    public boolean getPerformInitialUpdate() {
+    	return this.performInitialUpdate;
+    }
+    
+    public void setPerformInitialUpdate(boolean performInitialUpdate) {
+    	this.performInitialUpdate = performInitialUpdate;
+    }
+    
     /**
      * Creates a new SGLRParseController.
      * 
@@ -172,6 +187,7 @@
     	
     	this.language = language;
     	this.syntaxProperties = syntaxProperties;
+    	this.performInitialUpdate = true;
     	
     	parser = new JSGLRI(table, startSymbol, this, tokenManager);
 		parser.setKeepAmbiguities(true);
@@ -282,7 +298,9 @@
 			reportException(errorHandler, e);
 		} finally {
 			try {
-				onParseCompleted(monitor, wasStartupParsed);
+				if (this.performInitialUpdate) {
+					onParseCompleted(monitor, wasStartupParsed);
+				}
 			} catch (RuntimeException e) {
 				Environment.logException("Exception in post-parse events", e);
 			}


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java:18782-18802
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/StandAloneSGLRI.java:19086


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java:18782-18802
/imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java:18803-18942
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AsfixImploder.java:19086


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java:18782-18802
/imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java:18803-18959
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstMessageHandler.java:19086


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java:18782-18802
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java:19086


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java:18782-18802
/imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java:18803-19083
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/ProductionAttributeReader.java:19086


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java:18782-18802
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/FoldingUpdater.java:19086


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LabelProvider.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/services/LabelProvider.java:18782-18802
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LabelProvider.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/LabelProvider.java:19086-20471


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/NodeMapping.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/services/NodeMapping.java:18782-18802
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/NodeMapping.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/NodeMapping.java:19086

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisJob.java (from rev 20892, spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisJob.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisJob.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisJob.java	2010-05-31 12:28:55 UTC (rev 20893)
@@ -0,0 +1,17 @@
+package org.strategoxt.imp.runtime.services;
+
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.imp.parser.IParseController;
+
+public interface StrategoAnalysisJob {
+
+	public IPath getPath();
+	public StrategoProgressMonitor getProgressMonitor();
+	public StrategoObserver getObserver();
+	public IParseController getParseController();
+
+	public IStatus analyze(IProgressMonitor monitor);
+	
+}

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java (from rev 20892, spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	2010-05-31 12:28:55 UTC (rev 20893)
@@ -0,0 +1,201 @@
+package org.strategoxt.imp.runtime.services;
+
+import java.util.concurrent.PriorityBlockingQueue;
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.jobs.Job;
+import org.eclipse.imp.parser.IParseController;
+
+/**
+ * A workbench-global queue of Stratego operations.
+ * 
+ * Public methods are thread-safe due to the usage of a PriorityBlockingQueue.
+ * 
+ * @author nathan
+ * 
+ */
+public class StrategoAnalysisQueue {
+
+	/**
+	 * TODO: - remove background jobs if a foreground job is started for the
+	 * same file - stop analyzing on a workspace close (/eclipse exit) -
+	 * interrupt background jobs for foreground jobs ?
+	 */
+
+	private static final long serialVersionUID = 1L;
+
+	PriorityBlockingQueue<UpdateJob> queue;
+
+	public class UpdateJob extends Job {
+
+		StrategoAnalysisJob job;
+
+		int priority;
+
+		long delay;
+
+		static final int INTERACTIVE = 0;
+
+		static final int BACKGROUND = 100;
+
+		protected UpdateJob(StrategoAnalysisJob job, IPath path, int priority, boolean isSystem,
+				long delay) {
+			super("");
+			this.job = job;
+			this.priority = priority;
+			this.delay = delay;
+
+			// Should be set before scheduling the job
+			this.setName(JOB_DESCRIPTION + path);
+
+			setSystem(isSystem);
+		}
+
+		final static String JOB_DESCRIPTION = "Analyzing updates to ";
+
+		@Override
+		protected IStatus run(IProgressMonitor monitor) {
+
+			running = true; // atomic
+
+			// Set name
+			IStatus status;
+			try {
+				status = runInternal(monitor);
+			} catch (Throwable t) {
+				t.printStackTrace(); // TODO: show
+				status = Status.CANCEL_STATUS;
+			}
+
+			// Run next task
+			running = false;
+			wake();
+
+			return status;
+		}
+
+		private IStatus runInternal(IProgressMonitor monitor) {
+
+			IStatus status = job.analyze(monitor);
+			return status;
+
+		}
+
+		public void scheduleWithDelay() {
+			super.schedule(this.delay);
+		}
+
+	}
+
+	public StrategoAnalysisQueue() {
+		super();
+		this.queue = new PriorityBlockingQueue<UpdateJob>();
+	}
+
+	/**
+	 * Queue analysis of the file, interactively. Used for analyzing the contents of the current editor.
+	 * @param observer the file's observer
+	 * @param parseController the parse controller of the file
+	 * @param delay delay before starting, in milliseconds
+	 * @return The job. Can be used to call {@link UpdateJob#cancel()}.
+	 */
+	public UpdateJob queue(StrategoObserver observer, IParseController parseController, long delay) {
+
+		// File has changed.
+		// Schedule with high priority.
+
+		IPath path = parseController.getPath();
+
+		StrategoObserverUpdateJob job = new StrategoObserverUpdateJob(observer);
+		job.setup(parseController);
+
+		// UNDONE: observer job is no longer a WorkspaceJob
+		// thus avoiding analysis delays and progress view spamming
+		// setRule(parseController.getProject().getResource());
+		UpdateJob updateJob = new UpdateJob(job, path, UpdateJob.INTERACTIVE, true, delay);
+		add(updateJob);
+		return updateJob;
+
+	}
+
+	/**
+	 * Queue some Stratego job in the background.
+	 * @param job the job to perform
+	 * @param project the project to which the job belongs
+	 * @return the job
+	 */
+	public UpdateJob queue(StrategoAnalysisJob job, IProject project) {
+
+		IPath path = project.getFullPath();
+		UpdateJob updateJob = new UpdateJob(job, path, UpdateJob.BACKGROUND, false, 0);
+		add(updateJob);
+		return updateJob;
+
+	}
+
+	private void add(UpdateJob job) {
+
+		this.queue.add(job);
+		this.wake();
+
+	}
+
+	/*
+	 * Indicates whether a job is currently running.
+	 * Only one job can be running at any given time.
+	 */
+	private boolean running = false;
+
+	private void wake() {
+		if (running)
+			return;
+
+		UpdateJob job = queue.poll();
+		if (job != null) {
+			run(job);
+		}
+	}
+
+	private void run(UpdateJob job) {
+
+		job.scheduleWithDelay();
+
+	}
+
+	protected static IPath fullPathToWorkspaceLocal(IPath fullPath) {
+
+		IPath workspace = ResourcesPlugin.getWorkspace().getRoot().getLocation();
+		return fullPath.removeFirstSegments(fullPath.matchingFirstSegments(workspace));
+	}
+
+	protected static IResource pathToResource(IPath localPath) {
+
+		return ResourcesPlugin.getWorkspace().getRoot().findMember(localPath);
+
+	}
+
+	/**
+	 * Queue background analysis for a given file.
+	 * @param path the file's path
+	 * @param project the file's project
+	 * @return the update job
+	 */
+	public UpdateJob queueAnalysis(IPath path, IProject project) {
+
+		StrategoObserverBackgroundUpdateJob job = new StrategoObserverBackgroundUpdateJob();
+		job.setup(path, project);
+
+		UpdateJob updateJob = new UpdateJob(job, path, UpdateJob.BACKGROUND, true, 0);
+		add(updateJob);
+		wake();
+
+		return updateJob;
+	}
+
+}

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueueFactory.java (from rev 20892, spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueueFactory.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueueFactory.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueueFactory.java	2010-05-31 12:28:55 UTC (rev 20893)
@@ -0,0 +1,23 @@
+package org.strategoxt.imp.runtime.services;
+
+
+public class StrategoAnalysisQueueFactory {
+
+	private static StrategoAnalysisQueue INSTANCE;
+	
+	public static StrategoAnalysisQueue getInstance() {
+		if (INSTANCE == null) initialize();
+		return INSTANCE; 
+	}
+	
+	public static void initialize() {
+		if (INSTANCE == null) {
+			INSTANCE = new StrategoAnalysisQueue();
+		}
+	}
+	
+	public static void initialize(StrategoAnalysisQueue queue) {
+		INSTANCE = queue;
+	}
+	
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-31 12:05:19 UTC (rev 20892)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	2010-05-31 12:28:55 UTC (rev 20893)
@@ -21,10 +21,7 @@
 import org.eclipse.core.resources.IMarker;
 import org.eclipse.core.resources.IResource;
 import org.eclipse.core.runtime.IProgressMonitor;
-import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.NullProgressMonitor;
-import org.eclipse.core.runtime.Status;
-import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.imp.parser.IModelListener;
 import org.eclipse.imp.parser.IParseController;
 import org.spoofax.interpreter.core.InterpreterErrorExit;
@@ -52,6 +49,7 @@
 import org.strategoxt.imp.runtime.dynamicloading.IDynamicLanguageService;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 import org.strategoxt.imp.runtime.parser.ast.AstMessageHandler;
+import org.strategoxt.imp.runtime.services.StrategoAnalysisQueue.UpdateJob;
 import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
 import org.strategoxt.imp.runtime.stratego.IMPJSGLRLibrary;
 import org.strategoxt.imp.runtime.stratego.StrategoConsole;
@@ -86,10 +84,6 @@
 	
 	private final AstMessageHandler messages = new AstMessageHandler(AstMessageHandler.ANALYSIS_MARKER_TYPE);
 	
-	private Lock observerSchedulerLock = new SWTSafeLock(true);
-	
-	private Job asyncObserverScheduler;
-	
 	private HybridInterpreter runtime;
 	
 	private volatile Descriptor descriptor;
@@ -98,6 +92,10 @@
 	
 	private volatile boolean rushNextUpdate;
 	
+	private Lock observerSchedulerLock = new SWTSafeLock(true);
+	
+	private UpdateJob updateJob;
+	
 	private boolean wasExceptionLogged;
 	
 	public StrategoObserver(Descriptor descriptor, String feedbackFunction) {
@@ -240,38 +238,28 @@
 
 	/**
 	 * Starts a new update() operation, asynchronously.
+	 * Can be called from multiple threads.
 	 */
 	public void scheduleUpdate(final IParseController parseController) {
+		
 		isUpdateStarted = true;
-		
+
 		observerSchedulerLock.lock();
 		try {
-			if (asyncObserverScheduler != null)
-				asyncObserverScheduler.cancel();
-				
-			// TODO: reuse observer schedulers; just rename them and set a new parsecontroller
-			asyncObserverScheduler = new Job("Analyzing updates to " + parseController.getPath().lastSegment()) {
-				@Override
-				public IStatus run(IProgressMonitor monitor) {
-					monitor.beginTask("", IProgressMonitor.UNKNOWN);
-					update(parseController, monitor);
-					return Status.OK_STATUS;
-				}
-			};
+			StrategoAnalysisQueue queue = StrategoAnalysisQueueFactory.getInstance();
+			if (this.updateJob != null) {
+				this.updateJob.cancel();
+			}
 			
-			// UNDONE: observer job is no longer a WorkspaceJob
-			//         thus avoiding analysis delays and progress view spamming 
-			// asyncObserverScheduler.setRule(parseController.getProject().getResource());
-			asyncObserverScheduler.setSystem(true);
-			if (rushNextUpdate) {
-				rushNextUpdate = false;
-				asyncObserverScheduler.schedule(0);
+			if (this.rushNextUpdate) {
+				this.updateJob = queue.queue(this, parseController, 0);
 			} else {
-				asyncObserverScheduler.schedule(OBSERVER_DELAY);
+				this.updateJob = queue.queue(this, parseController, OBSERVER_DELAY);
 			}
 		} finally {
 			observerSchedulerLock.unlock();
 		}
+		
 	}
 
 	public void update(IParseController parseController, IProgressMonitor monitor) {
@@ -353,16 +341,28 @@
 	}
 	*/
 
-	private void presentToUser(IResource resource, IStrategoTerm feedback) {
+	public void presentToUser(IResource resource, IStrategoTerm feedback) {
 		assert Thread.holdsLock(getSyncRoot());
 		assert feedback != null;
 
+		if (feedback instanceof IStrategoString) {
+			String status = ((IStrategoString)feedback).stringValue();
+			if (status.equals("BACKGROUNDED")) {
+				// Trigger update when needed
+				isUpdateStarted = false;
+				return;
+			} else {
+				throw new StrategoException("Illegal status from " + feedbackFunction + ": " + status);
+			}
+		}
+		
 		// TODO: use FileTrackingIOAgent to find out what to clear
 		// UNDONE: messages.clearAllMarkers();
 		messages.clearMarkers(resource);
 
 		try {
 			feedback = extractResultingAST(resource, feedback);
+			
 			if (feedback.getTermType() == TUPLE
 					&& termAt(feedback, 0).getTermType() == LIST
 					&& termAt(feedback, 1).getTermType() == LIST
@@ -550,8 +550,12 @@
 					instanceof IMPJSGLRLibrary;
 			boolean success = runtime.invoke(function);
 			
+			// Cleanup input term.
+			IStrategoTerm result = runtime.current();
+			runtime.setCurrent(null);
+			
 			Debug.stopTimer("Evaluated strategy " + function + (success ? "" : " (failed)"));
-			return success ? runtime.current() : null;
+			return success ? result : null;
 		}
 	}
 


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/services/StrategoObserver.java:18782-18802
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java:20875-20892
/spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java:19086-20191


Property changes on: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch
___________________________________________________________________
Modified: svn:mergeinfo
   - 
   + /imp/trunk/org.strategoxt.imp.runtime.parser/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch:18782-18802
/spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java.softreference.sketch:20875-20892

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java (from rev 20892, spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java	2010-05-31 12:28:55 UTC (rev 20893)
@@ -0,0 +1,71 @@
+package org.strategoxt.imp.runtime.services;
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.imp.parser.IParseController;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+
+public class StrategoObserverBackgroundJob implements StrategoAnalysisJob {
+
+	IProject project;
+	StrategoProgressMonitor progress;
+	StrategoObserver observer;
+	String strategyName;
+	IStrategoTerm term;
+	Descriptor descriptor;
+	
+	public StrategoObserverBackgroundJob(String strategyName, IStrategoTerm term, Descriptor descriptor) {
+		this.strategyName = strategyName;
+		this.term = term;
+		this.descriptor = descriptor;
+	}
+	
+	/**
+	 * Setup
+	 */
+	public void setup(IProject project) {
+		this.project = project;
+	}
+	
+	public IStatus analyze(IProgressMonitor monitor) {
+		
+		this.progress = new StrategoProgressMonitor(monitor);
+		
+		try {
+			
+			// Get parse controller
+			observer = descriptor.createService(StrategoObserver.class, null);
+			((EditorIOAgent)observer.getRuntime().getIOAgent()).setJob(this);
+			observer.invoke(strategyName, term, project);
+		    
+		} catch (Exception e) {
+			// hmm.
+			e.printStackTrace();
+		}
+		
+		return Status.OK_STATUS;
+		
+	}
+
+	public IPath getPath() {
+		return project.getFullPath();
+	}
+
+	public StrategoProgressMonitor getProgressMonitor() {
+		return progress;
+	}
+
+	public StrategoObserver getObserver() {
+		return this.observer;
+	}
+
+	public IParseController getParseController() {
+		return null;
+	}
+
+}

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java (from rev 20892, spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	2010-05-31 12:28:55 UTC (rev 20893)
@@ -0,0 +1,109 @@
+package org.strategoxt.imp.runtime.services;
+
+import java.io.BufferedInputStream;
+import java.io.File;
+import java.io.FileInputStream;
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.imp.language.Language;
+import org.eclipse.imp.language.LanguageRegistry;
+import org.eclipse.imp.model.ISourceProject;
+import org.eclipse.imp.model.ModelFactory;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.parser.SGLRParseController;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+
+public class StrategoObserverBackgroundUpdateJob implements StrategoAnalysisJob {
+
+	IPath path;
+	IProject project;
+	StrategoProgressMonitor progress;
+	StrategoObserver observer;
+	SGLRParseController parseController;
+	
+	/**
+	 * Constructor
+	 */
+	public StrategoObserverBackgroundUpdateJob() {
+	}
+	
+	/**
+	 * Setup
+	 * @param path
+	 */
+	public void setup(IPath path, IProject project) {
+		this.path = path;
+		this.project = project;
+	}
+	
+	public IStatus analyze(IProgressMonitor monitor) {
+		
+		this.progress = new StrategoProgressMonitor(monitor);
+		
+		try {
+			
+			IPath fullPath = project.getFullPath().append(path);
+			
+			// Get descriptor
+			Language lang = LanguageRegistry.findLanguage(fullPath, null);
+			Descriptor descriptor = Environment.getDescriptor(lang); 
+			
+			// Get parse controller
+			parseController = descriptor.createService(SGLRParseController.class, null);
+			observer = descriptor.createService(StrategoObserver.class, parseController);
+			((EditorIOAgent)observer.getRuntime().getIOAgent()).setJob(this);
+			// Don't perform initial (foreground) update
+			parseController.setPerformInitialUpdate(false);
+			
+			// Read file
+			IPath absolutePath = project == null ? path : project.getFullPath().append(path);
+			absolutePath = ResourcesPlugin.getWorkspace().getRoot().getLocation().append(absolutePath);
+			
+			File file = absolutePath.toFile();
+			byte[] buffer = new byte[(int) file.length()];
+		    BufferedInputStream f = new BufferedInputStream(new FileInputStream(file));
+		    f.read(buffer);
+		    String input = new String(buffer);
+		
+		    // Parse file
+		    ISourceProject sproject = ModelFactory.open(project);
+		    
+		    parseController.initialize(path, sproject, null);
+		    parseController.parse(input, new NullProgressMonitor());
+			
+		    observer.update(parseController, monitor);
+		    
+		} catch (Exception e) {
+			// hmm.
+			e.printStackTrace();
+		}
+		
+		return Status.OK_STATUS;
+		
+	}
+
+	public IPath getPath() {
+		return this.path;
+	}
+
+	public StrategoProgressMonitor getProgressMonitor() {
+		return progress;
+	}
+
+	public StrategoObserver getObserver() {
+		return this.observer;
+	}
+
+	public IParseController getParseController() {
+		return parseController;
+	}
+
+}

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java (from rev 20892, spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java)
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java	                        (rev 0)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverUpdateJob.java	2010-05-31 12:28:55 UTC (rev 20893)
@@ -0,0 +1,49 @@
+package org.strategoxt.imp.runtime.services;
+
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+
+public class StrategoObserverUpdateJob implements StrategoAnalysisJob {
+
+	IParseController parseController;
+	StrategoObserver observer;
+	StrategoProgressMonitor progress;
+	
+	public StrategoObserverUpdateJob(StrategoObserver observer) {
+		this.observer = observer;
+	}
+	
+	public void setup(IParseController parseController) {
+		this.parseController = parseController;
+	}
+	
+	public IStatus analyze(IProgressMonitor monitor) {
+		
+		this.progress = new StrategoProgressMonitor(monitor);
+		((EditorIOAgent)observer.getRuntime().getIOAgent()).setJob(this);
+		observer.update(parseController, monitor);
+		return Status.OK_STATUS;
+		
+	}
+
+	public IPath getPath() {
+		return parseController.getPath();
+	}
+
+	public StrategoProgressMonitor getProgressMonitor() {
+		return this.progress;
+	}
+
+	public StrategoObserver getObserver() {
+		return observer;
+	}
+
+	public IParseController getParseController() {
+		return parseController;
+	}
+
+}

Copied: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoProgressMonitor.java (from rev 20892, spoofax-imp/branches/background-processing/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoProgressMonitor.java)

(497 diff lines omitted)


From n.bruning at student.tudelft.nl  Mon May 31 15:40:29 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Mon, 31 May 2010 13:40:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20894 - NathanBruning -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
Message-ID: <201005311340.o4VDeTGv021352@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-05-31 13:40:29 +0000 (Mon, 31 May 2010)
New Revision: 20894

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20894&view=rev

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str

Log:
Add strategies to use new primitives

Changes:

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
===================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	2010-05-31 12:28:55 UTC (rev 20893)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	2010-05-31 13:40:29 UTC (rev 20894)
@@ -226,4 +226,36 @@
   Entity   : ID * List(Property) -> Entity
   Property : ID * Type           -> Property
   Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  
 }



From n.bruning at student.tudelft.nl  Mon May 31 15:43:47 2010
From: n.bruning at student.tudelft.nl (Nathan Bruning)
Date: Mon, 31 May 2010 13:43:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20895 - NathanBruning -
	strc-java/trunk/trans
Message-ID: <201005311343.o4VDhlUu021364@proliant.st.ewi.tudelft.nl>

Author: NathanBruning
Date: 2010-05-31 13:43:47 +0000 (Mon, 31 May 2010)
New Revision: 20895

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20895&view=rev

Modified:
   strc-java/trunk/trans/s2j.str

Log:
Quick fix for Spoofax/103

Changes:

Modified: strc-java/trunk/trans/s2j.str
===================================================================
--- strc-java/trunk/trans/s2j.str	2010-05-31 13:40:29 UTC (rev 20894)
+++ strc-java/trunk/trans/s2j.str	2010-05-31 13:43:47 UTC (rev 20895)
@@ -456,7 +456,9 @@
     type-dec |[
        @SuppressWarnings("all")
        private static final class x' extends x {
-         private static final x proceed = x.instance;
+         // Initialize proceed with a new instance, to avoid stacking overrides due to repeated dynamic loads.
+         // NOTE: this prevents multiple overrides of a strategy.
+         private static final x proceed = new x();
          ~(body)
          @Override public String getName() { return "~x"; }
        }



From g.h.wachsmuth at tudelft.nl  Mon May 31 22:26:54 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Mon, 31 May 2010 20:26:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20896 - GuidoWachsmuth
	- /
Message-ID: <201005312026.o4VKQsUo026539@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-05-31 20:26:54 +0000 (Mon, 31 May 2010)
New Revision: 20896

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20896&view=rev

Added:
   lenses/

Log:
initial lens project

Changes:



From g.h.wachsmuth at tudelft.nl  Mon May 31 22:28:00 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Mon, 31 May 2010 20:28:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20897 - GuidoWachsmuth
	- lenses
Message-ID: <201005312028.o4VKS0fn026550@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-05-31 20:28:00 +0000 (Mon, 31 May 2010)
New Revision: 20897

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20897&view=rev

Added:
   lenses/trunk/

Log:


Changes:



From g.h.wachsmuth at tudelft.nl  Mon May 31 23:01:38 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Mon, 31 May 2010 21:01:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20898 - GuidoWachsmuth
	- in lenses/trunk: . .externalToolBuilders META-INF backup
	editor editor/java editor/java/StrategicLenses lib lib/basic
	lib/languages lib/languages/aterm lib/languages/aterm/syntax
	lib/languages/entity lib/languages/entity/syntax syntax test
	tracetrans trans
Message-ID: <201005312101.o4VL1cm2027021@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-05-31 21:01:38 +0000 (Mon, 31 May 2010)
New Revision: 20898

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20898&view=rev

Added:
   lenses/trunk/.classpath
   lenses/trunk/.externalToolBuilders/
   lenses/trunk/.externalToolBuilders/StrategicLenses build.main.xml.launch
   lenses/trunk/.project
   lenses/trunk/META-INF/
   lenses/trunk/META-INF/MANIFEST.MF
   lenses/trunk/backup/
   lenses/trunk/backup/Types.sdf.backup
   lenses/trunk/backup/testing.str.backup
   lenses/trunk/backup/typecheck.str.backup
   lenses/trunk/build.main.xml
   lenses/trunk/build.properties
   lenses/trunk/editor/
   lenses/trunk/editor/StrategicLenses-Builders.esv
   lenses/trunk/editor/StrategicLenses-Colorer.esv
   lenses/trunk/editor/StrategicLenses-Completions.esv
   lenses/trunk/editor/StrategicLenses-Folding.esv
   lenses/trunk/editor/StrategicLenses-Outliner.esv
   lenses/trunk/editor/StrategicLenses-References.esv
   lenses/trunk/editor/StrategicLenses-Syntax.esv
   lenses/trunk/editor/StrategicLenses.main.esv
   lenses/trunk/editor/java/
   lenses/trunk/editor/java/StrategicLenses/
   lenses/trunk/editor/java/StrategicLenses/Activator.java
   lenses/trunk/editor/java/StrategicLenses/StrategicLensesParseController.java
   lenses/trunk/editor/java/StrategicLenses/StrategicLensesValidator.java
   lenses/trunk/lib/
   lenses/trunk/lib/basic/
   lenses/trunk/lib/basic/IdentifierCon.sdf
   lenses/trunk/lib/basic/NatCon.sdf
   lenses/trunk/lib/basic/StrCon.sdf
   lenses/trunk/lib/basic/Whitespace.sdf
   lenses/trunk/lib/editor-common.generated.str
   lenses/trunk/lib/languages/
   lenses/trunk/lib/languages/aterm/
   lenses/trunk/lib/languages/aterm/syntax/
   lenses/trunk/lib/languages/aterm/syntax/ATerms.sdf
   lenses/trunk/lib/languages/aterm/syntax/IntCon.sdf
   lenses/trunk/lib/languages/aterm/syntax/RealCon.sdf
   lenses/trunk/lib/languages/entity/
   lenses/trunk/lib/languages/entity/syntax/
   lenses/trunk/lib/languages/entity/syntax/Common.sdf
   lenses/trunk/lib/languages/entity/syntax/Entity.sdf
   lenses/trunk/lib/languages/entity/syntax/Outline.sdf
   lenses/trunk/plugin.xml
   lenses/trunk/syntax/
   lenses/trunk/syntax/Common.sdf
   lenses/trunk/syntax/Embedding.sdf
   lenses/trunk/syntax/Lenses.sdf
   lenses/trunk/syntax/Sections.sdf
   lenses/trunk/syntax/SimpleTypes.sdf
   lenses/trunk/syntax/StrategicLenses.sdf
   lenses/trunk/syntax/Tests.sdf
   lenses/trunk/syntax/Types.sdf
   lenses/trunk/test/
   lenses/trunk/test/Outline.lns
   lenses/trunk/test/TestSuite.lns
   lenses/trunk/test/TraceTestSuite.lns
   lenses/trunk/tracetrans/
   lenses/trunk/tracetrans/TraceTestSuite.lns
   lenses/trunk/tracetrans/run-trace-tests.str
   lenses/trunk/tracetrans/trace-semantics.str
   lenses/trunk/trans/
   lenses/trunk/trans/desugar.str
   lenses/trunk/trans/generate.str
   lenses/trunk/trans/indices.str
   lenses/trunk/trans/pp.str
   lenses/trunk/trans/run-tests.str
   lenses/trunk/trans/run-trace-tests.str
   lenses/trunk/trans/semantics.str
   lenses/trunk/trans/signatures.str
   lenses/trunk/trans/simplecheck.str
   lenses/trunk/trans/strategiclenses.str
   lenses/trunk/trans/testing.str
   lenses/trunk/trans/trace-semantics.str
   lenses/trunk/trans/typecheck.str

Log:
moving repository from Berlin to Delft

Changes (first 1000 lines of the diffs):

Added: lenses/trunk/.classpath
===================================================================
--- lenses/trunk/.classpath	                        (rev 0)
+++ lenses/trunk/.classpath	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="lib" path="utils/strategoxt.jar"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: lenses/trunk/.externalToolBuilders/StrategicLenses build.main.xml.launch
===================================================================
--- lenses/trunk/.externalToolBuilders/StrategicLenses build.main.xml.launch	                        (rev 0)
+++ lenses/trunk/.externalToolBuilders/StrategicLenses build.main.xml.launch	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<stringAttribute key="org.eclipse.debug.core.ATTR_REFRESH_SCOPE" value="${working_set:&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;launchConfigurationWorkingSet editPageId=&quot;org.eclipse.ui.resourceWorkingSetPage&quot; factoryID=&quot;org.eclipse.ui.internal.WorkingSetFactory&quot; id=&quot;1260698330169_15&quot; label=&quot;working set&quot; name=&quot;working set&quot;&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/StrategicLenses/editor/StrategicLenses-Builders.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/StrategicLenses/editor/StrategicLenses-Colorer.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/StrategicLenses/editor/StrategicLenses-Folding.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&qu!
 ot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/StrategicLenses/editor/StrategicLenses-Outliner.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/StrategicLenses/editor/StrategicLenses-References.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/StrategicLenses/editor/StrategicLenses-Syntax.generated.esv&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/StrategicLenses/lib/editor-common.str&quot; type=&quot;1&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/StrategicLenses/editor/java&quot; type=&quot;2&quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.model.ResourceFactory&quot; path=&quot;/StrategicLenses/build.generated.xml&quot; type=&quot;1!
 &quot;/&gt;&#10;&lt;item factoryID=&quot;org.eclipse.ui.internal.mod
ResourceFactory&quot; path=&quot;/StrategicLenses/utils&quot; type=&quot;2&quot;/&gt;&#10;&lt;/launchConfigurationWorkingSet&gt;}"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
+<listEntry value="/StrategicLenses/build.main.xml"/>
+</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
+<listEntry value="1"/>
+</listAttribute>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="StrategicLenses"/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${project}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/StrategicLenses/build.main.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/StrategicLenses}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: lenses/trunk/.project
===================================================================
--- lenses/trunk/.project	                        (rev 0)
+++ lenses/trunk/.project	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>StrategicLenses</name>
+      <comment></comment>
+      <buildSpec>
+		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&lt;project&gt;/.externalToolBuilders/StrategicLenses build.main.xml.launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Added: lenses/trunk/META-INF/MANIFEST.MF
===================================================================
--- lenses/trunk/META-INF/MANIFEST.MF	                        (rev 0)
+++ lenses/trunk/META-INF/MANIFEST.MF	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,20 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: StrategicLenses Plug-in
+Bundle-SymbolicName: StrategicLenses; singleton:=true
+Bundle-Version: 1.0.0
+Bundle-Activator: StrategicLenses.Activator
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+  org.eclipse.core.resources,
+  org.eclipse.imp.runtime,
+  org.eclipse.ui,
+  lpg.runtime,
+  org.eclipse.jface.text,
+  org.eclipse.ui.editors,
+  org.eclipse.ui.workbench.texteditor,
+  org.strategoxt.imp.runtime,
+  org.spoofax.aterm,
+  org.spoofax.jsglr
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Export-Package: StrategicLenses

Added: lenses/trunk/backup/Types.sdf.backup
===================================================================
--- lenses/trunk/backup/Types.sdf.backup	                        (rev 0)
+++ lenses/trunk/backup/Types.sdf.backup	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,24 @@
+module Types
+
+imports 
+	Common
+
+exports
+	sorts
+		Type
+		QFunctor
+		Functor
+		
+	context-free syntax
+	
+	ID 								-> Type {cons("Predefined")}
+	"(" {Type ","}+ ")"				-> Type {cons("Tuple")}
+	QFunctor "(" {Type ","}+ ")"	-> Type {cons("Functor")}
+	"{" {Type ","}+ "}"				-> Type {cons("Union")}
+	
+	ID						-> Functor
+	Functor					-> QFunctor		{cons("Functor")}
+	TypeRef "." Functor		-> QFunctor		{cons("QFunctor")}
+	
+	ID						-> TypeRef
+	"_"						-> TypeRef	{cons("Every")}
\ No newline at end of file

Added: lenses/trunk/backup/testing.str.backup
===================================================================
--- lenses/trunk/backup/testing.str.backup	                        (rev 0)
+++ lenses/trunk/backup/testing.str.backup	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,25 @@
+module testing
+
+imports
+	include/StrategicLenses
+	semantics
+	desugar
+	libstratego-lib
+	
+rules
+	runTest:	Module(_, s*)   -> r* where
+					<filter(runTest)> s* => r*
+	
+	runTest:	Tests(c*) -> Tests(c*) where
+					<map(runTest)> c* => c*
+							
+	runTest: 	GetPut(Ast(c), l, Ast(a)) -> GetPut(Ast(c), l, Ast(a)) where
+					<get> (l, c) => a ;
+					<put> (l, a, c) => c
+					
+	runTest:	Create(Ast(c), l, Ast(a)) -> Create(Ast(c), l, Ast(a)) where
+					<create> (l, a) => c
+					
+	runTest:	Desugar(l1, l2) -> Desugar(l1, l2) where
+					!l1 => l2 
+	
\ No newline at end of file

Added: lenses/trunk/backup/typecheck.str.backup
===================================================================
--- lenses/trunk/backup/typecheck.str.backup	                        (rev 0)
+++ lenses/trunk/backup/typecheck.str.backup	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,41 @@
+module typecheck
+
+imports
+	include/StrategicLenses
+	libstratego-lib
+	semantics
+	
+rules
+	check(|lens): type -> <check> (lens, type)
+	check_select(|lens): type -> <check_select> (lens, type)
+	
+rules
+	
+	check: (Id(), type) -> type
+	
+	check: (Hoist(qf), Functor(qf, type*)) 	-> Tuple(type*)
+	check: (Hoist(qf), Union(ftype*)) 		-> Union(ttype*) where
+				<map(check(|Hoist(qf)))> ftype* => ttype*
+	
+	check: (Plunge(qf), Tuple(type*)) 	-> Functor(qf, type*)
+	check: (Plunge(qf), Union(ttype*)) 	-> Union(ftype*) where
+				<map(check(|Plunge(qf)))> ttype* => ftype*
+	
+	check: 	(Select(index, default), Tuple(type*)) -> type where
+				<check_select> (Select(index, default), Tuple(type*)) => type ;
+				<check> default => Tuple(type*)						
+	check: 	(Select(index, default), Union(ttype*)) -> Union(type*) where
+				<map(check_select(|Select(index, default)))> ttype* => type* ;
+				<check> default => Union(ttype*)
+	
+	check_select: 	(Select(index, default), Tuple(type*)) -> type where
+						<select-child> (index, type*) => type 
+	
+	check:  (Fork(branch*), Tuple(ctype*)) -> Tuple(atype*) where
+				<dict-to-list> <mapconcat(check(|ctype*))> branch* => atype* 
+				
+	check(|type*): 	Branch(cindex*, lens, aindex*) -> dict* where
+						<indices-to-tuple(|type*)> cindex* 	=> ctype* ;
+						<check> (lens, Tuple(ctype*)) 		=> Tuple(atype*) ;
+						<zip> (aindex*, atype*)				=> dict*	
+		
\ No newline at end of file

Added: lenses/trunk/build.main.xml
===================================================================
--- lenses/trunk/build.main.xml	                        (rev 0)
+++ lenses/trunk/build.main.xml	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="StrategicLenses" default="all">
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="StrategicLenses"/>
+        <property name="esvmodule" value="StrategicLenses"/>
+        <property name="strmodule" value="strategiclenses"/>
+    
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
+        <property name="syntax" location="syntax"/>
+        <property name="include" location="include"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- Imports -->
+        <property name="build.sdf.imports" value=""/>
+        <property name="build.stratego.args" value="--library
+                        -I &quot;${trans}&quot; -I &quot;${basedir}&quot;
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+        
+        <!-- External .def and .jar locations
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
+        -->
+    
+        <!-- Environment configuration for command-line builds -->
+        <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+            <isset property="eclipse.spoofaximp.nativeprefix"/>
+        </condition>
+        <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+    
+        <import file="build.generated.xml"/>
+    
+        <!-- Main target -->
+        <target name="all" depends="spoofaximp.default"/>
+	<eclipse.convertPath fileSystemPath="${basedir}" property="resourcePath" />
+	<eclipse.refreshLocal resource="${resourcePath}" depth="infinite" />
+    </project>
\ No newline at end of file

Added: lenses/trunk/build.properties
===================================================================
--- lenses/trunk/build.properties	                        (rev 0)
+++ lenses/trunk/build.properties	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,8 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               .,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               .

Added: lenses/trunk/editor/StrategicLenses-Builders.esv
===================================================================
--- lenses/trunk/editor/StrategicLenses-Builders.esv	                        (rev 0)
+++ lenses/trunk/editor/StrategicLenses-Builders.esv	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,21 @@
+
+module StrategicLenses-Builders
+
+imports StrategicLenses-Builders.generated
+
+builders
+                                                                      
+  // This file can be used for custom analysis and builder rules.     
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
+
+builders
+                                                                                            
+  provider : include/strategiclenses.ctree                                                  
+                                                                                            
+  observer : editor-analyze                                                                 
+                                                                                            
+  builder  : "Show abstract syntax"		= generate-aterm (openeditor) (realtime) (meta)  
+  builder  : "Desugar"					= generate-desugared (openeditor) (realtime) (meta)  
+                                                                                            
+  //on save  : generate-java                                                                  
\ No newline at end of file

Added: lenses/trunk/editor/StrategicLenses-Colorer.esv
===================================================================
--- lenses/trunk/editor/StrategicLenses-Colorer.esv	                        (rev 0)
+++ lenses/trunk/editor/StrategicLenses-Colorer.esv	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,11 @@
+module StrategicLenses-Colorer
+
+imports StrategicLenses-Colorer.generated
+
+colorer
+                                                                      
+  // This file can be used for custom colorer rules.                  
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
+  environment _.Ast:   _ 220 230 200 
+  
\ No newline at end of file

Added: lenses/trunk/editor/StrategicLenses-Completions.esv
===================================================================
--- lenses/trunk/editor/StrategicLenses-Completions.esv	                        (rev 0)
+++ lenses/trunk/editor/StrategicLenses-Completions.esv	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,20 @@
+module StrategicLenses-Completions
+
+imports StrategicLenses-Completions.generated
+
+completions
+                                                                   
+  // This file is used to define content completion.               
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
+                                                                   
+
+completions
+                                         
+  // Syntax completion:                  
+  completion template                  : "module " <m> (blank)
+  completion template                  : "entity " <e> " {}" (blank)
+                                         
+  // Semantic (identifier) completion:   
+  completion proposer                  : editor-complete
+  completion trigger                   : ": "
\ No newline at end of file

Added: lenses/trunk/editor/StrategicLenses-Folding.esv
===================================================================
--- lenses/trunk/editor/StrategicLenses-Folding.esv	                        (rev 0)
+++ lenses/trunk/editor/StrategicLenses-Folding.esv	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,9 @@
+module StrategicLenses-Folding
+
+imports StrategicLenses-Folding.generated
+
+folding
+  
+  // This file can be used for custom folding rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: lenses/trunk/editor/StrategicLenses-Outliner.esv
===================================================================
--- lenses/trunk/editor/StrategicLenses-Outliner.esv	                        (rev 0)
+++ lenses/trunk/editor/StrategicLenses-Outliner.esv	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,9 @@
+module StrategicLenses-Outliner
+
+imports StrategicLenses-Outliner.generated
+
+outliner
+  
+  // This file can be used for custom outliner rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Added: lenses/trunk/editor/StrategicLenses-References.esv
===================================================================
--- lenses/trunk/editor/StrategicLenses-References.esv	                        (rev 0)
+++ lenses/trunk/editor/StrategicLenses-References.esv	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,15 @@
+module StrategicLenses-References
+
+imports StrategicLenses-References.generated
+
+references
+                                                                                                   
+  // This file can be used to specify reference resolving and hover help, and content completion.  
+  //                                                                                               
+  // See the imported file for a brief introduction and examples.                                  
+                                                                                                   
+
+references
+                
+  reference _ : editor-resolve
+  hover _     : editor-hover
\ No newline at end of file

Added: lenses/trunk/editor/StrategicLenses-Syntax.esv
===================================================================
--- lenses/trunk/editor/StrategicLenses-Syntax.esv	                        (rev 0)
+++ lenses/trunk/editor/StrategicLenses-Syntax.esv	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,9 @@
+module StrategicLenses-Syntax
+
+imports StrategicLenses-Syntax.generated
+
+language
+                                                                   
+  // This file can be used for custom syntax rules.                
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
\ No newline at end of file

Added: lenses/trunk/editor/StrategicLenses.main.esv
===================================================================
--- lenses/trunk/editor/StrategicLenses.main.esv	                        (rev 0)
+++ lenses/trunk/editor/StrategicLenses.main.esv	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,23 @@
+module StrategicLenses.main
+
+imports 
+	StrategicLenses-Builders 
+	StrategicLenses-Colorer 
+	StrategicLenses-Completions 
+	StrategicLenses-Folding 
+	StrategicLenses-Outliner 
+	StrategicLenses-References 
+	StrategicLenses-Syntax
+
+language General properties
+                  
+	name			: StrategicLenses
+	id				: StrategicLenses
+	extends			: Root
+                  
+	description		: "Spoofax/IMP-generated editor for the StrategicLenses language"
+	url				: http://strategoxt.org
+                  
+	extensions		: lns
+	table			: include/StrategicLenses.tbl
+	start symbols	: Start
\ No newline at end of file

Added: lenses/trunk/editor/java/StrategicLenses/Activator.java
===================================================================
--- lenses/trunk/editor/java/StrategicLenses/Activator.java	                        (rev 0)
+++ lenses/trunk/editor/java/StrategicLenses/Activator.java	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,44 @@
+package StrategicLenses;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "StrategicLenses";
+
+  public static final String kLanguageName = "StrategicLenses";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: lenses/trunk/editor/java/StrategicLenses/StrategicLensesParseController.java
===================================================================
--- lenses/trunk/editor/java/StrategicLenses/StrategicLensesParseController.java	                        (rev 0)
+++ lenses/trunk/editor/java/StrategicLenses/StrategicLensesParseController.java	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,89 @@
+package StrategicLenses;
+
+import java.io.InputStream;
+import java.io.IOException;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class StrategicLensesParseController extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("StrategicLenses");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  private static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = StrategicLensesParseController.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = StrategicLensesParseController.class.getResourceAsStream(TABLE);
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, null);
+      descriptor.setAttachmentProvider(StrategicLensesParseController.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return StrategicLensesParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: lenses/trunk/editor/java/StrategicLenses/StrategicLensesValidator.java
===================================================================
--- lenses/trunk/editor/java/StrategicLenses/StrategicLensesValidator.java	                        (rev 0)
+++ lenses/trunk/editor/java/StrategicLenses/StrategicLensesValidator.java	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,12 @@
+package StrategicLenses;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class StrategicLensesValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return StrategicLensesParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: lenses/trunk/lib/basic/IdentifierCon.sdf
===================================================================
--- lenses/trunk/lib/basic/IdentifierCon.sdf	                        (rev 0)
+++ lenses/trunk/lib/basic/IdentifierCon.sdf	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,14 @@
+module basic/IdentifierCon
+
+exports
+
+sorts IdCon
+
+lexical syntax
+
+head:[A-Za-z] tail:[A-Za-z\-0-9]* -> IdCon {cons("default")}
+
+lexical restrictions
+
+IdCon -/- [A-Za-z\-0-9]
+

Added: lenses/trunk/lib/basic/NatCon.sdf
===================================================================
--- lenses/trunk/lib/basic/NatCon.sdf	                        (rev 0)
+++ lenses/trunk/lib/basic/NatCon.sdf	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,14 @@
+module basic/NatCon
+
+exports
+
+sorts NatCon
+
+lexical syntax
+  
+ [0-9]+ -> NatCon {cons("digits")}
+
+lexical restrictions
+
+ NatCon -/- [0-9]
+

Added: lenses/trunk/lib/basic/StrCon.sdf
===================================================================
--- lenses/trunk/lib/basic/StrCon.sdf	                        (rev 0)
+++ lenses/trunk/lib/basic/StrCon.sdf	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,15 @@
+module basic/StrCon
+
+exports
+
+sorts StrCon StrChar
+
+lexical syntax
+    "\\n"                      -> StrChar {cons("newline")}
+    "\\t"                      -> StrChar {cons("tab")}
+    "\\\""                     -> StrChar {cons("quote")}
+    "\\\\"                     -> StrChar {cons("backslash")}
+    "\\" a:[0-9]b:[0-9]c:[0-9] -> StrChar {cons("decimal")}
+    ~[\0-\31\n\t\"\\]          -> StrChar {cons("normal")}
+
+    [\"] chars:StrChar* [\"]   -> StrCon  {cons("default")}

Added: lenses/trunk/lib/basic/Whitespace.sdf
===================================================================
--- lenses/trunk/lib/basic/Whitespace.sdf	                        (rev 0)
+++ lenses/trunk/lib/basic/Whitespace.sdf	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,8 @@
+module basic/Whitespace
+
+exports
+  lexical syntax
+    [\ \t\n\r]	-> LAYOUT {cons("whitespace")}
+
+  context-free restrictions
+    LAYOUT? -/- [\ \t\n\r]

Added: lenses/trunk/lib/editor-common.generated.str
===================================================================
--- lenses/trunk/lib/editor-common.generated.str	                        (rev 0)
+++ lenses/trunk/lib/editor-common.generated.str	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,215 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-strategiclenses-file
+  parse-strategiclenses-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/StrategicLenses.tbl)>
+    )
+
+  parse-string = parse-strategiclenses-string
+  parse-strategiclenses-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/StrategicLenses.tbl)>
+    )
+  
+  parse-stream = parse-strategiclenses-stream
+  parse-strategiclenses-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/StrategicLenses.tbl)>
+    )
+
+  pp-strategiclenses-string =
+    ast2abox(|[<import-term(include/StrategicLenses.generated.pp.af)>,
+               <import-term(include/StrategicLenses.pp.af)>]);
+    box2text-string(|100)
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          if <is-newer> (cache-path, path) then
+            file := <ReadFromFile> cache-path
+          else
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          end;
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "StrategicLenses", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    !Some(<id>); all(s); ?Some(<id>)
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/strategiclenses.str file. These definitions should also be automatically 
+  // generated in the imported include/StrategicLenses.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type

Added: lenses/trunk/lib/languages/aterm/syntax/ATerms.sdf
===================================================================
--- lenses/trunk/lib/languages/aterm/syntax/ATerms.sdf	                        (rev 0)
+++ lenses/trunk/lib/languages/aterm/syntax/ATerms.sdf	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,33 @@
+module languages/aterm/syntax/ATerms
+
+imports languages/aterm/syntax/IntCon 
+        languages/aterm/syntax/RealCon
+	basic/StrCon
+	basic/IdentifierCon
+
+exports
+  sorts AFun ATerm Annotation
+
+  lexical syntax
+     -> NoAFun	
+     
+  context-free syntax
+	StrCon 	-> AFun {cons("quoted")}
+	IdCon 	-> AFun {cons("unquoted")}
+	NoAFun	-> AFun {cons("unquoted")}
+	
+  context-free syntax
+	IntCon 					-> ATerm {cons("int")}
+	RealCon					-> ATerm {cons("real")}
+	fun:AFun 				-> ATerm {cons("fun")}
+	fun:AFun "(" args:{ATerm ","}* ")" 	-> ATerm {cons("appl")}
+	"<" type:ATerm ">" 			-> ATerm {cons("placeholder")}
+	"[" elems:{ATerm ","}* "]" 		-> ATerm {cons("list")}
+	trm:ATerm Annotation 			-> ATerm {cons("annotated")}
+
+  context-free syntax
+	"{" annos:{ ATerm ","}+ "}" 		-> Annotation {cons("default")}
+
+hiddens
+  context-free start-symbols 
+    ATerm

Added: lenses/trunk/lib/languages/aterm/syntax/IntCon.sdf
===================================================================
--- lenses/trunk/lib/languages/aterm/syntax/IntCon.sdf	                        (rev 0)
+++ lenses/trunk/lib/languages/aterm/syntax/IntCon.sdf	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,15 @@
+module languages/aterm/syntax/IntCon
+
+imports basic/Whitespace
+	basic/NatCon
+
+hiddens
+  context-free start-symbols 
+    IntCon
+
+exports
+  sorts IntCon
+  context-free syntax
+    NatCon         -> IntCon {cons("natural")}
+    pos:"+" NatCon -> IntCon {cons("positive")}
+    neg:"-" NatCon -> IntCon {cons("negative")}
\ No newline at end of file

Added: lenses/trunk/lib/languages/aterm/syntax/RealCon.sdf
===================================================================
--- lenses/trunk/lib/languages/aterm/syntax/RealCon.sdf	                        (rev 0)
+++ lenses/trunk/lib/languages/aterm/syntax/RealCon.sdf	2010-05-31 21:01:38 UTC (rev 20898)
@@ -0,0 +1,16 @@
+module languages/aterm/syntax/RealCon
+
+imports languages/aterm/syntax/IntCon
+
+hiddens

(2093 diff lines omitted)


From g.h.wachsmuth at tudelft.nl  Mon May 31 23:03:28 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Mon, 31 May 2010 21:03:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20899 - GuidoWachsmuth
	- lenses
Message-ID: <201005312103.o4VL3S42027035@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-05-31 21:03:28 +0000 (Mon, 31 May 2010)
New Revision: 20899

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20899&view=rev

Added:
   lenses/StrategoXT/
Removed:
   lenses/trunk/

Log:
import dropped a folder

Changes:



From g.h.wachsmuth at tudelft.nl  Mon May 31 23:03:57 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Mon, 31 May 2010 21:03:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20900 - GuidoWachsmuth
	- lenses
Message-ID: <201005312103.o4VL3vHv027046@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-05-31 21:03:57 +0000 (Mon, 31 May 2010)
New Revision: 20900

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20900&view=rev

Added:
   lenses/trunk/

Log:
import dropped a folder

Changes:



From g.h.wachsmuth at tudelft.nl  Mon May 31 23:04:40 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Mon, 31 May 2010 21:04:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20901 - GuidoWachsmuth
	- in lenses: . trunk
Message-ID: <201005312104.o4VL4e2F027055@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-05-31 21:04:40 +0000 (Mon, 31 May 2010)
New Revision: 20901

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20901&view=rev

Added:
   lenses/trunk/StrategoXT/
Removed:
   lenses/StrategoXT/

Log:
import dropped a folder

Changes:



From g.h.wachsmuth at tudelft.nl  Mon May 31 23:05:22 2010
From: g.h.wachsmuth at tudelft.nl (Guido Wachsmuth)
Date: Mon, 31 May 2010 21:05:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - 20902 - GuidoWachsmuth
	- lenses/trunk
Message-ID: <201005312105.o4VL5MGo027071@proliant.st.ewi.tudelft.nl>

Author: GuidoWachsmuth
Date: 2010-05-31 21:05:22 +0000 (Mon, 31 May 2010)
New Revision: 20902

You can view the changes in this commit at:
   https://svn.strategoxt.org/viewvc/StrategoXT?rev=20902&view=rev

Added:
   lenses/trunk/Strategic Lenses/
Removed:
   lenses/trunk/StrategoXT/

Log:
corrected wrong folder name

Changes:



