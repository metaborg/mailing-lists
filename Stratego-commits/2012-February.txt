From gabrielkonat at gmail.com  Wed Feb  1 11:01:45 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 01 Feb 2012 10:01:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24177 - in
	spoofax-contrib/separate-compilation-examples/entity-with-aspects:
	editor test trans
Message-ID: <20120201100145.CF3AE108C05A@mx3.tudelft.nl>

Author: gkonat
Date: Wed Feb  1 10:01:44 2012
New Revision: 24177
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24177&sc=1

Log:
Added tests to entity-with-aspects experiment.

Added:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/completion.spt
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/resolving.spt
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt
Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Completions.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-References.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Completions.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Completions.esv	Tue Jan 31 11:58:53 2012	(r24176)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Completions.esv	Wed Feb  1 10:01:44 2012	(r24177)
@@ -17,7 +17,7 @@
                                                                  
   completion template : Definition = "entity " <e> " {}" (blank) 
                                                                  
-  completion template : Property =   <x> " : " <T> (blank)       
+  //completion template : Property =   <x> " : " <T> (blank)       
                                                                  
 
 completions

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-References.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-References.esv	Tue Jan 31 11:58:53 2012	(r24176)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-References.esv	Wed Feb  1 10:01:44 2012	(r24177)
@@ -12,4 +12,4 @@
 references
                 
   reference _ : editor-resolve
-  //hover _     : editor-hover
\ No newline at end of file
+  hover _     : editor-hover
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/completion.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/completion.spt	Wed Feb  1 10:01:44 2012	(r24177)
@@ -0,0 +1,20 @@
+module Tests-Completion
+
+language EntityWithAspects
+
+setup Header [[
+  module TestsCompletion
+    
+  entity A {
+    x : B
+  }
+]]
+
+test Complete property access [[
+  entity B {
+    yyyyy : A
+    f(a : A) {
+      var v : A = a.x.[[y]]
+    }
+  }
+]] complete to "yyyyy" 
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/resolving.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/resolving.spt	Wed Feb  1 10:01:44 2012	(r24177)
@@ -0,0 +1,55 @@
+module Tests-Resolving
+
+language EntityWithAspects
+
+setup Header [[
+  module TestsResolving
+    
+  entity A {
+    x : B
+  }
+]]
+
+test Resolve entity reference [[
+  entity [[B]] {
+    b : [[B]]
+  }
+]] resolve #2 to #1
+
+test Resolve property access [[
+  entity B {
+    f(c : C) {
+      var v : C = c.[[c]] 
+    }
+  }
+  entity C {
+    [[c]] : C
+  }
+]] resolve #1 to #2
+
+test Resolve local variable [[
+  entity B {
+    f() {
+      var [[a]] : A
+      var b : B = [[a]]
+    }
+  }
+]] resolve #2 to #1
+
+test Resolve local property access [[
+  entity B {
+    [[x]] : A
+    f() {
+      var v : A = [[x]]
+    }
+  }
+]] resolve #2 to #1
+
+test Resolve parameter access [[
+  entity B {
+    x : A
+    f([[x]] : A) {
+      var v : A = [[x]]
+    }
+  }
+]] resolve #2 to #1
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.nam
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.nam	Tue Jan 31 11:58:53 2012	(r24176)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.nam	Wed Feb  1 10:01:44 2012	(r24177)
@@ -2,7 +2,7 @@
 
 entity Ent2
 {
-	mEnt : Ent1
+	mEnt : Ent1 
 	
 	Print() {
 		var tst : String = mEnt.mValue

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.nam
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.nam	Wed Feb  1 10:01:44 2012	(r24177)
@@ -0,0 +1,12 @@
+module Test
+
+entity Ent3
+{
+  mEnt2 : Ent2
+  
+  Print() {
+    var tst : String = mEnt2.mEnt.mValue
+
+    print tst
+  }
+}
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt	Wed Feb  1 10:01:44 2012	(r24177)
@@ -0,0 +1,68 @@
+module Tests
+
+language EntityWithAspects
+
+setup Header [[
+  module Tests
+    
+  entity A {
+    x : B
+  }
+]]
+
+test Resolve property access [[
+  entity B {
+    y : A
+    f(a : A) {
+      var v : A = a.x.y.x.y
+    }
+  }
+]]
+
+test Resolve property access fails [[
+  entity B {
+    y : A
+    f(a : A) {
+      var v : A = a.x.y.x.x
+    }
+  }
+]] 1 error 
+
+test Resolve function call [[
+  entity B {
+    f(a : A) {
+      var v : A = f(a)
+    }
+  }
+]]
+
+test Resolve function call fails [[
+  entity B {
+    b : B
+    f(a : A) {
+      var v : A = f(b) 
+    }
+  }
+]] 1 error
+
+test Resolve type fails [[
+  entity B {
+    q : Q
+  }
+]] 1 error
+
+test Def before use allowed [[
+  entity B {
+    c : C
+  }
+  entity C {}
+]]
+
+test Shadowing of property allowed [[
+  entity B {
+    a : A
+    f() {
+      var a : A
+    }
+  }
+]]

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Tue Jan 31 11:58:53 2012	(r24176)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Wed Feb  1 10:01:44 2012	(r24177)
@@ -72,20 +72,20 @@
     where
       // TODO: shouldn't work on parent node?
       !node => <one(?subnode) <+ ?subnode>;
-      def     := <index-lookup> node;
+      def     := <index-lookup> subnode;
       target  := /*<index-get-term>*/ def
 
   // Returns "hover help" information for a particular node in the editor.
   // For references, this rule is invoked using the resolved term.
-  /*editor-hover:
+  editor-hover:
     (target, position, ast, path, project-path) -> $[[def-path'']]
     where
       // FIXME: this only works for definition paths
       //<debug(!2)> target;
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
-      def-path'  := <take-until(?Anon())> def-path;
-      def-path'' := <reverse; separate-by(|".")> def-path'*/
+      def-path'  := <take-until(?Anon(_))> def-path;
+      def-path'' := <reverse; separate-by(|".")> def-path'
 
   // Completes an identifier when the user presses control-space
   // (the completion identifier in the AST provides additional context information)
@@ -95,11 +95,11 @@
       editor-init;
       (ast', _, _, _, _, _) := <analyze-top> (ast, path, project-path);
       x                     := <collect-one(?COMPLETION(_))> ast';
-      COMPLETION(name)		:= x;
+      COMPLETION(name)		  := x;
       (
         proposals           := <index-lookup-all-levels(|name)> x 
       <+ 
-        proposals 			:= []
+        proposals           := []
       );
       proposals'            := <map(def-to-name)> proposals
 

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Tue Jan 31 11:58:53 2012	(r24176)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Wed Feb  1 10:01:44 2012	(r24177)
@@ -17,7 +17,7 @@
   adjust-index-lookup(is-use |namespace, path, prefix):
     PropAccess(e, <is-use>) -> p*
     with
-    if TYPE(e-type) := <type-of> e then
+      if TYPE(e-type) := <type-of> e then
         p* := (<index-lookup-children(|Property(), prefix)> e-type)
       else
         p* := []
@@ -48,3 +48,8 @@
       arg-types := <map(type-of)> args;
       all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix)>;
       def       := <getfirst(is-params-compatible(|arg-types))>
+
+
+  adjust(..|namespace):
+    Class(_, y) -> [Redirect([namespace|path]),Redirect([namespace|<index-path> y])]
+    
\ No newline at end of file

From gabrielkonat at gmail.com  Wed Feb  1 11:03:12 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 01 Feb 2012 10:03:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24178 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
Message-ID: <20120201100312.1286A7F80BC@mx1.tudelft.nl>

Author: gkonat
Date: Wed Feb  1 10:03:11 2012
New Revision: 24178
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24178&sc=1

Log:
Removed demo code

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Wed Feb  1 10:01:44 2012	(r24177)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Wed Feb  1 10:03:11 2012	(r24178)
@@ -48,8 +48,4 @@
       arg-types := <map(type-of)> args;
       all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix)>;
       def       := <getfirst(is-params-compatible(|arg-types))>
-
-
-  adjust(..|namespace):
-    Class(_, y) -> [Redirect([namespace|path]),Redirect([namespace|<index-path> y])]
-    
\ No newline at end of file
+      
\ No newline at end of file

From gabrielkonat at gmail.com  Wed Feb  1 13:51:09 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 01 Feb 2012 12:51:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24179 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120201125109.7B84B108C033@mx3.tudelft.nl>

Author: gkonat
Date: Wed Feb  1 12:51:09 2012
New Revision: 24179
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24179&sc=1

Log:
Read set is now destroyed when finished with analysis.

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb  1 10:03:11 2012	(r24178)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb  1 12:51:09 2012	(r24179)
@@ -40,14 +40,14 @@
   
   // adjust-index-path-from-filesystem(|project-path, path)
 
-rules // analysis traversals
+rules // analysis traversals,
    
   analyze-top:
     (ast, path, project-path) -> (ast5, defs, uses, data', added, removed)
     with
       // Init
       full-path := $[[project-path]/[path]];
-      index-setup(|<prim("SSL_EXT_origin_language", ast)>, [project-path])
+      index-setup(|<collect-one(prim("SSL_EXT_origin_language", <id>))> ast, [project-path])
     with 
       // Store copy of defs for diff and clear file
       olddefs := <filter(?Def(_))> <index-get-all-in-file> full-path;
@@ -56,7 +56,7 @@
       {| ReadSet:
         readSet := <new-iset>;
         rules(ReadSet: _ -> readSet);
-      
+        
         // Add Unresolved annotations, record globals 
         (Some(ast2), defs) := <analyze-defs(|Anon(), Anon())> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
         <index-add-all(|full-path)> defs;
@@ -79,7 +79,9 @@
         // Store reads
         if not(<is-test-input> (ast, path)) then
           <index-add-all(|full-path)> <iset-elements> readSet
-        end
+        end;
+        
+        <iset-destroy> readSet
       |}
     with
       // Find removed and added definitions

From gabrielkonat at gmail.com  Wed Feb  1 16:31:49 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 01 Feb 2012 15:31:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24180 - in
	spoofax-imp/trunk/experimental/NamingExperiment: lib syntax
	test trans
Message-ID: <20120201153149.380D6108C058@mx3.tudelft.nl>

Author: gkonat
Date: Wed Feb  1 15:31:48 2012
New Revision: 24180
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24180&sc=1

Log:
Added unresolved lookup caching to speed up unresolved nested property access constructs significantly.

Deleted:
   spoofax-imp/trunk/experimental/NamingExperiment/test/example.analyzed.aterm
Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/syntax/SPX.spx
   spoofax-imp/trunk/experimental/NamingExperiment/test/   (props changed)
   spoofax-imp/trunk/experimental/NamingExperiment/test/test1.spt
   spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb  1 12:51:09 2012	(r24179)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb  1 15:31:48 2012	(r24180)
@@ -1,11 +1,11 @@
 module lib/analysis-library
-
+ 
 imports
   libstratego-lib
   lib/editor-common.generated
-
+ 
 signature constructors
-
+ 
   // Index elements:
   Def          : List(UriPart) -> Summary
   Use          : List(UriPart) * List(UriPart) -> Summary
@@ -13,33 +13,33 @@
   DefData      : List(UriPart) * DefDataType * Term -> Summary
   Read         : List(UriPart) -> Summary
   ReadWildcard : List(UriPart) * String -> Summary
-  
+ 
   // URI header:
   Namespace      : UriPart
   Unresolved     : Namespace -> UriPart
   INTERNAL_ERROR : UriPart
   Timestamp      : UriPart
-  
+ 
   // Remainder of URI:
   String : UriPart
   Anon   : Int -> UriPart
   Anon   : UriPart
-
+ 
 rules // extension points
-  
+ 
   // Should return list of Def(_) and/or [namespace | path]
   adjust-index-lookup(is-use |namespace, path, prefix) = fail
-  
+ 
   // adjust-index-select(|namespace, path, use) = fail // (e.g., for imports)
-  
-  // Should call <store-results> on a (list of) DefData 
+ 
+  // Should call <store-results> on a (list of) DefData
   adjust-index-def-data(store-results |namespace, path) = fail
-  
+ 
   // Should return a path
   adjust-index-path(is-def |namespace, path) = fail
-  
+ 
   // adjust-index-path-from-filesystem(|project-path, path)
-
+ 
 rules // analysis traversals,
    
   analyze-top:
@@ -47,85 +47,86 @@
     with
       // Init
       full-path := $[[project-path]/[path]];
-      index-setup(|<collect-one(prim("SSL_EXT_origin_language", <id>))> ast, [project-path])
-    with 
+      index-setup(|<prim("SSL_EXT_origin_language", ast)>, [project-path])
+    with
       // Store copy of defs for diff and clear file
       olddefs := <filter(?Def(_))> <index-get-all-in-file> full-path;
       prim("LANG_index_clear_file", full-path)
     with
-      {| ReadSet:
+      {| ReadSet, UnresolvedSet:
         readSet := <new-iset>;
-        rules(ReadSet: _ -> readSet);
+        unresolvedSet := <new-iset>;
         
-        // Add Unresolved annotations, record globals 
+        rules(ReadSet: _ -> readSet);
+        rules(UnresolvedSet: _ -> unresolvedSet);
+       
+        // Add Unresolved annotations, record globals
         (Some(ast2), defs) := <analyze-defs(|Anon(), Anon())> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
         <index-add-all(|full-path)> defs;
-        
+
         // Find DefData
         ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2;
         data := <origin-track-forced(analyze-tree-data)> ast3;
         <index-add-all(|full-path)> data;
-        
+
         // Resolve an references in DefData (using what we just stored)
         (data', data-uses) := <analyze-uses> data;
         <index-remove-all(|full-path)> data;
         <index-add-all(|full-path)> data';
-        
+       
         // Resolve all unresolved references in the tree
         (ast4, uses) := <analyze-uses> ast3;
         <index-add-all(|full-path)> uses;
         ast5         := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast4;
-        
+       
         // Store reads
         if not(<is-test-input> (ast, path)) then
           <index-add-all(|full-path)> <iset-elements> readSet
-        end;
-        
-        <iset-destroy> readSet
+        end
       |}
     with
       // Find removed and added definitions
-  	  (added, removed) := <analyze-diff> (olddefs, defs)
-  	with
-  	  // Schedule re-analysis of files that have a Use or Read of a removed def and Read of an added def.
-  	  reanalyze-all(|added, removed, full-path)
-      
-  analyze-diff: 
+      (added, removed) := <analyze-diff> (olddefs, defs)
+    with
+      //Schedule re-analysis of files that have a Use or Read of a removed def and Read of an added def.
+      reanalyze-all(|added, removed, full-path)
+     
+  analyze-diff:
     (defs1, defs2) -> (added, removed)
     with
       added   := <diff(analyze-diff-eq)> (defs2, defs1);
       removed := <diff(analyze-diff-eq)> (defs1, defs2)
-  
+ 
   // Compensate for changing anonymous namespace names.
   analyze-diff-eq = ?(Def(u1), Def(u2)); (<eq> (u1, u2) <+ <eq> (<remove-all(?Anon(_))> u1, <remove-all(?Anon(_))> u2))
-  
+ 
   // Tests if the current file is just a testing language input
   is-test-input:
     (ast, path) -> (ast, path)
     where
       <string-ends-with(|".spt")> path;
       not(prim("SSL_EXT_origin_language", ast) => "Spoofax-Testing")
-      
+     
   analyze-changed(get-all):
-  	defs -> filenames
-  	with 
-  	  uses := <mapconcat(get-all)> defs;
-  	  filesAndSubFiles := <mapconcat(index-get-files-of)> uses;
-  	  filenames := <map(Fst)> filesAndSubFiles
-  	
+        defs -> filenames
+        with
+          uses := <mapconcat(get-all)> defs;
+          filesAndSubFiles := <mapconcat(index-get-files-of)> uses;
+          filenames := <map(Fst)> filesAndSubFiles
+       
   analyze-all-changed-files(|added, removed, full-path):
-  	_ -> changed
-  	with
+        _ -> changed
+        with
       changed := <make-set> <remove-all(?full-path)> <concat> [
-  	  	<analyze-changed(index-get-uses-all)> removed,
-  	  	<analyze-changed(index-get-reads-all)> removed,
-  	  	<analyze-changed(index-get-reads-all)> added
-  	  ]
-  	  
+                <analyze-changed(index-get-uses-all)> removed,
+                <analyze-changed(index-get-reads-all)> removed,
+                <analyze-changed(index-get-reads-all)> added
+          ]
+         
   reanalyze-all(|added, removed, full-path) =
     analyze-all-changed-files(|added, removed, full-path);
     map(debug(!"Re-analyzing "); prim("SSL_EXT_queue_analysis"))
-  
+ 
   /**
    * Identifies all definitions in the tree
    * and annotates them with their URI.
@@ -152,14 +153,14 @@
         (ast', defs) := <analyze-defs-recurse(|head-scope', head-scope-ns', def-path)> ast
       end;
       defs' := <![def | defs] <+ !defs>
-  
+ 
   analyze-defs-recurse(|head-scope, head-scope-ns, def-path):
     ast -> (ast'', defs)
     where
       analyzed      := <all(analyze-defs(|head-scope, head-scope-ns))> ast;
       (ast', defs)  := <unzip-analyzed> analyzed;
       ast''         := <try(nam-annotate-names(|def-path))> ast'
-  
+ 
   update-index-path(|head-scope, head-scope-ns, ast):
     scope-type -> scope-type
     where
@@ -171,7 +172,7 @@
         path' := <do-adjusted-index-path(|scope-type, path, head-scope)> ast
       end;
       rules(IndexPath: scope-type -> path')
-  
+ 
   /* TODO: consider using simple-update-def-path
    *       which uses "balanced" path scopes
    *       e.g. when Entity doesn't scope Function
@@ -187,10 +188,10 @@
       (something with do-adjust-path)
       rules(IndexPath := [head-scope' | <IndexPath <+ ![]> ()])
   */
-  
+ 
   /**
    * Analyze all uses, changing their preliminary
-   * "Unresolve(_)" URI to a definite URI of their definition. 
+   * "Unresolve(_)" URI to a definite URI of their definition.
    */
   analyze-uses = analyze-uses(|None())
   analyze-uses(|parent):
@@ -214,7 +215,7 @@
         ast'' := ast';
         uses' := uses
       end
-  
+ 
   /**
    * Collects all index data (e.g., types of definitions).
    */
@@ -224,7 +225,7 @@
       set := <new-iset>;
       <topdown(analyze-tree-data-part(|set))> tree;
       data := <iset-elements> set
-  
+ 
   analyze-tree-data-part(|set):
     tree -> tree
     where
@@ -234,7 +235,7 @@
           <fatal-err(|"Unexpected result from adjust-index-def-data; should call <store-results>")> result
         end
       end
-  
+ 
   store-index-data-results(|set):
     t -> <fail>
     where
@@ -243,7 +244,7 @@
       else
         <iset-add(|t)> set
       end
-  
+ 
   /**
    * Transforms a term C( (a1, [b1]), (a2, [b2, b3]) )
    * to a tuple (C(a1, a2), [b1, b2, b3]).
@@ -253,41 +254,41 @@
     with
       appl'          := <all(\(a, _) -> a\)> appl;
       unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
-
+ 
 rules // index management
-    
+   
   index-setup(|language, project-paths) =
     project-path;
     prim("LANG_index_setup", language, project-paths)
-    
+   
   index-add-all(|file) =
     list-loop(with(prim("LANG_index_add", <id>, file)))
-    
+   
   index-remove-all(|file) =
     list-loop(with(prim("LANG_index_remove", <id>, file)))
-    
+   
   index-clear = prim("LANG_index_clear_all")
-    
+   
   index-commit = prim("LANG_index_commit")
-
+ 
 rules // index API primitives
-  
+ 
   index-get-data(|kind):
     <with(?Def(uri) | "Def expected")> -> data
     where
       <index-get-all> DefData(uri, kind, []) => [DefData(_, _, data) | _]
-  
+ 
   index-get-data-all(|kind):
     <with(?Def(uri) | "Def expected")> -> datas'
     where
       datas  := <index-get-all> DefData(uri, kind, []);
       datas' := <map(\DefData(_, _, d) -> d\)> datas
-      
+     
   index-get-uses-all:
     <with(?Def(uri) | "Def expected")> -> uses
     where
       uses := <index-get-all> Use(uri, [])
-      
+     
   index-get-reads-all:
     template -> <conc> (reads, readwildcards')
     where
@@ -299,7 +300,7 @@
       else
         readwildcards' := []
       end
-      
+     
   readwildcard-substring(|prefix):
     ReadWildcard(_, name) -> <id>
     where <is-substring(!prefix)> name
@@ -308,10 +309,10 @@
     filepath -> entries
     with
       entries := <prim("LANG_index_get_all_in_file", filepath)>
-  
+ 
   index-get-all-files =
     prim("LANG_index_all_files")
-
+ 
   /**
    * Updates the "last updated" timestamp for the given service name.
    *
@@ -319,7 +320,7 @@
    */
   index-timestamp-set-updated(|service) =
     prim("LANG_index_add", DefData([Timestamp(), "timestamps", ".internal"], Timestamp(), []), $[/.internal/timestamps/[service]])
-    
+   
   /**
    * Gets all files with changes since the last time stamp update
    * for the given service name.
@@ -328,10 +329,10 @@
     _ -> files
     with
       files := <prim("LANG_index_get_files_newer_than", $[/.internal/timestamps/[service]])>
-  
+ 
   index-get-files-of:
     template -> <prim("LANG_index_get_file_of", template)>
-  
+ 
   /**
    * Get all index entries that match the given template.
    * Example:
@@ -344,7 +345,7 @@
          uri := <index-uri>;
          <iset-add(|Read(uri))> set
        end
-  
+ 
   /**
    * Get the first index entry that matches the given template, or fail.
    * Example:
@@ -352,44 +353,44 @@
    */
   index-get:
     template -> <Fst> <index-get-all> template
-  
+ 
   index-uri:
     Def(uri) -> uri
-  
+ 
   index-uri:
     Use(uri, _) -> uri
-  
+ 
   index-uri:
     DefData(uri, _, _) -> uri
-  
+ 
   index-uri:
     Read(uri) -> uri
-  
+ 
   index-uri:
     ReadWildcard(uri, _) -> uri
-    
+   
   index-uri:
     x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
-    
+   
   index-namespace:
     x{[namespace | path]} -> <index-namespace-unwrap> namespace
-
+ 
   index-path:
     x{[namespace | path]} -> path'
     where
       if !namespace => Unresolved(namespace) then
-        Def(path') := <index-lookup> 
+        Def(path') := <index-lookup>
       else
         path' := path
       end
-  
+ 
   /**
    * Determines if a given AST node is a definition site,
    * according to the syntax.
    */
   index-is-definition =
     where(nam-get-definition-key)
-  
+ 
   /**
    * Returns all children of a Def.
    *
@@ -411,21 +412,21 @@
       if set := <ReadSet> then
         <iset-add(|ReadWildcard([namespace | path], prefix'))> set
       end
-      
+     
 rules // index lookup rules (take into account adjust-index-lookup)
-
+ 
   /**
    * Given an annotated AST node, resolves it, returning its Def.
    */
   index-lookup:
     x{[namespace | path]} -> <index-lookup(id |<index-namespace-unwrap> namespace, path, <strip-annos> x)>
-
+ 
   /**
    * Given an annotated AST node, resolves it, returning all its Defs.
    */
   index-lookup-all:
     x{[namespace | path]} -> <index-lookup-all(id |<index-namespace-unwrap> namespace, path, <strip-annos> x)>
-
+ 
   /**
    * Given an annotated AST node, resolves it, returning all its Defs.
    *
@@ -437,13 +438,19 @@
   index-lookup(is-adjust-lookup-enabled |namespace, path, prefix):
     x -> def
     where
+      index-is-unresolved(|x);
+      def := <fail>
+    <+
       candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
       def        := <index-select(|namespace, path, x)>
     <+
       // TODO: optimize: try not to call do-adjust-index-lookup from here
       [_ | path'] := path;
       def         := <index-lookup(is-adjust-lookup-enabled |namespace, path', prefix)> x
-
+    <+
+      [] := path;
+      <iset-add(|x)> <UnresolvedSet>
+      
   /**
    * Given an annotated AST node, resolves it, returning all its Defs.
    *
@@ -464,18 +471,18 @@
       else
         defs' := defs
       end
-
+ 
   /**
-   * Given an annotated AST node, returns the outermost Def with a corresponding URI. 
+   * Given an annotated AST node, returns the outermost Def with a corresponding URI.
    *
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
    */
   index-lookup-outermost(|prefix):
     x{[namespace | path]} -> <index-lookup-outermost(id |<index-namespace-unwrap> namespace, path, prefix)>
-
+ 
   /**
-   * Given an annotated AST node, returns the outermost Def with a corresponding URI. 
+   * Given an annotated AST node, returns the outermost Def with a corresponding URI.
    *
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
@@ -491,18 +498,18 @@
     <+
       candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
       def        := <index-select(|namespace, path, x)>
-
+ 
   /**
-   * Given an annotated AST node, returns a Def that has the same parent URI. 
+   * Given an annotated AST node, returns a Def that has the same parent URI.
    *
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
    */
   index-lookup-one-level(|prefix):
     x{[namespace | path]} -> <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
-  
+ 
   /**
-   * Given an annotated AST node, returns a Def that has the same parent URI. 
+   * Given an annotated AST node, returns a Def that has the same parent URI.
    *
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
@@ -518,18 +525,18 @@
       ?defs
     <+
       defs := <index-get-children(|namespace, prefix)> Def([namespace | path])
-
+ 
   /**
-   * Given an annotated AST node, returns a Def with a common ancestor URI. 
+   * Given an annotated AST node, returns a Def with a common ancestor URI.
    *
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
    */
   index-lookup-all-levels(|prefix):
     x{[namespace | path]} -> <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, prefix)>
-  
+ 
   /**
-   * Given an annotated AST node, returns a Def with a common ancestor URI. 
+   * Given an annotated AST node, returns a Def with a common ancestor URI.
    *
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
@@ -550,15 +557,15 @@
       else
         all-defs := one-level
       end
-
+ 
   /** @Deprecated */
   index-lookup-contained(|namespace, prefix) =
     index-lookup-children(|namespace, prefix)
-    
+   
   /** @Deprecated */
   index-lookup-contained-all-levels(|namespace, name) =
     index-lookup-descendants(|namespace, name)
-
+ 
   /**
    * Given an annotated AST node, resolves it,
    * and returns all child Defs of its definition.
@@ -572,13 +579,13 @@
     with
       if !ns => Unresolved(_) then
         Def([_ | def-path]) := <index-lookup>;
-        defs := <index-lookup-one-level(id|namespace, def-path, prefix)> x 
+        defs := <index-lookup-one-level(id|namespace, def-path, prefix)> x
       else
         defs := <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
       end
     <+
       defs := []
-
+ 
   /**
    * Given an annotated AST node, resolves it,
    * and returns all descendant Defs of its definition.
@@ -598,7 +605,7 @@
       end
     <+
       defs := []
-
+ 
 /** @internal */
 rules // Internal helpers
        
@@ -608,53 +615,56 @@
       [_, uri-name | _] := <index-uri>
     where
       <is-substring(!name)> uri-name
-
+      
+  index-is-unresolved(|x) = <iset-contains(|x)> <UnresolvedSet>
+ 
   index-namespace-unwrap =
     \Unresolved(n) -> n\ <+ id
-  
+ 
   do-adjust-index-lookup(|namespace, path, use, prefix) =
     // UNDONE: try(origin-term);
     repeat-until(
       prim("SSL_EXT_get_parent", <id>)
     , adjust-index-lookup(origin-equal(|use) |namespace, path, prefix)
     )
-
+ 
   index-select(|namespace, path, use) =
     getfirst(
       where(
         ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
       )
     )
-
+ 
   index-select-all(|namespace, path, use) =
     filter(
       where(
         ?Def([_, <SRTS-EXT-eq-ignore-annos(|use)> | _])
       )
     )
-  
+ 
   do-adjusted-index-path(|namespace, path, def) =
     adjust-index-path(origin-equal(|def) |namespace, path)
   <+
     ![def | path]
-  
+ 
   index-eq(|namespace, expected) =
     where(
       ?Def([_, name | _]);
       <SRTS-EXT-eq-ignore-annos(|expected)> name
     )
-  
+ 
   external SRTS-EXT-eq-ignore-annos(|t)
-
+ 
 rules // interface for generated code
-  
+ 
   nam-get-def(|namespace):
     x -> Def([namespace, x | <IndexPath <+ ![]> namespace])
-    
+   
   nam-annotate-use(|namespace):
     t -> t{[Unresolved(namespace), t | <IndexPath <+ ![]> namespace]}
-    
+   
   nam-get-scope-types = fail
   nam-get-definition = fail
   nam-get-definition-key = fail
   nam-annotate-names(|def-path) = fail
+  
\ No newline at end of file

Modified: spoofax-imp/trunk/experimental/NamingExperiment/syntax/SPX.spx
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/syntax/SPX.spx	Wed Feb  1 12:51:09 2012	(r24179)
+++ spoofax-imp/trunk/experimental/NamingExperiment/syntax/SPX.spx	Wed Feb  1 15:31:48 2012	(r24180)
@@ -6,7 +6,6 @@
 
 context-free syntax
 
-  
     "module" Module@=ID Definition*     -> Start {"Module", scope(Entity, Module)}
     "entity" Entity@=ID "{" Member* "}" -> Definition {"Entity", scope(Property, Function)}
     "import" Module at STRING              -> Definition {"Import"}

Modified: spoofax-imp/trunk/experimental/NamingExperiment/test/test1.spt
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/test/test1.spt	Wed Feb  1 12:51:09 2012	(r24179)
+++ spoofax-imp/trunk/experimental/NamingExperiment/test/test1.spt	Wed Feb  1 15:31:48 2012	(r24180)
@@ -81,7 +81,7 @@
   entity B {
     y : A
     f(a : A) {
-      var v : A = a.x.y.x.x
+      var v : A = a.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.x
     }
   }
 ]] 1 error

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str	Wed Feb  1 12:51:09 2012	(r24179)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str	Wed Feb  1 15:31:48 2012	(r24180)
@@ -17,7 +17,7 @@
   adjust-index-lookup(is-use |namespace, path, prefix):
     PropAccess(e, <is-use>) -> p*
     with
-    if ENTITY(e-type) := <type-of> e then
+      if ENTITY(e-type) := <type-of> e then
         p* := (<index-lookup-children(|Property(), prefix)> e-type)
       else
         p* := []

From gabrielkonat at gmail.com  Wed Feb  1 17:01:18 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 01 Feb 2012 16:01:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24181 - in
	spoofax-contrib/separate-compilation-examples:
	csharp-partial-classses/test csharp-partial-classses/trans
	entity-with-aspects/test
Message-ID: <20120201160118.C0FE5108C06D@mx3.tudelft.nl>

Author: gkonat
Date: Wed Feb  1 16:01:17 2012
New Revision: 24181
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24181&sc=1

Log:
Added tests to csharp-partial-classes experiment.

Added:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/resolving.spt
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt
Modified:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt

Added: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/resolving.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/resolving.spt	Wed Feb  1 16:01:17 2012	(r24181)
@@ -0,0 +1,47 @@
+module Tests-Resolving
+
+language CSharpPartialClassses
+
+setup Header [[
+  namespace TestsResolving {
+    class A {
+      P p;
+    }
+    
+    partial class P {
+      string a;
+    }
+  }
+]]
+
+test Resolve entity reference [[
+  class [[B]] {
+    [[B]] b;
+  }
+]] resolve #2 to #1
+
+test Resolve property access [[
+  class B {
+    C v;
+    
+    C f() {
+      return v.[[c]]; 
+    }
+  }
+  
+  class C {
+    C [[c]];
+  }
+]] resolve #1 to #2
+
+/*test Resolve local property access [[ 
+	partial class B {
+		B [[x]];
+	}
+	
+  partial class B {
+    B f() {
+      return [[x]];
+    }
+  }
+]] resolve #2 to #1*/
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt	Wed Feb  1 16:01:17 2012	(r24181)
@@ -0,0 +1,101 @@
+module Tests
+
+language CSharpPartialClassses
+
+setup Header [[
+	namespace Tests {
+    class A {
+      P p;
+    }
+    
+    partial class P {
+      string a;
+    }
+	}
+]]
+
+test Resolve property access [[
+  namespace Tests {
+	  partial class P {
+	    int n;
+	  }
+	    
+	  class B {
+	  	A a;
+	  	
+	    int b() {
+	    	return a.p.n;
+	    }
+	  }
+  }
+]]
+
+test Resolve property access fails [[
+  namespace Tests {
+    partial class P {
+      int n;
+    }
+      
+    class B {
+      A a;
+      
+      int b() {
+        return a.p.x;
+      }
+    }
+  }
+]] 1 error 
+
+test Resolve function call [[
+  namespace Tests {
+	  partial class P {
+	    string Geta() { return a; }
+	  }
+	  
+	  class B {
+      P p;
+      
+      string f() {
+        return p.Geta();
+      }
+    }
+  }
+]]
+
+test Resolve function call fails [[
+  namespace Tests {
+    class B {
+      P p;
+      
+      string f() {
+        return p.Geta();
+      }
+    }
+  }
+]] 1 error
+
+test Resolve type fails [[
+  namespace Tests {
+    class B {
+      Q q;
+    }
+  }
+]] 1 error
+
+test Resolve type fails [[
+  namespace NOTTests {
+    class B {
+      P p;
+    }
+  }
+]] 1 error
+
+test Use before def allowed [[
+  namespace Tests {
+    class B {
+      C c;
+    }
+    
+    partial class C {}
+  }
+]]

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Wed Feb  1 15:31:48 2012	(r24180)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Wed Feb  1 16:01:17 2012	(r24181)
@@ -60,7 +60,7 @@
     where
       // TODO: shouldn't work on parent node?
       !node => <one(?subnode) <+ ?subnode>;
-      def     := <index-lookup> node;
+      def     := <index-lookup> subnode;
       target  := /*<index-get-term>*/ def
 
   // Returns "hover help" information for a particular node in the editor.

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt	Wed Feb  1 15:31:48 2012	(r24180)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt	Wed Feb  1 16:01:17 2012	(r24181)
@@ -23,7 +23,7 @@
   entity B {
     y : A
     f(a : A) {
-      var v : A = a.x.y.x.x
+      var v : A = a.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.x
     }
   }
 ]] 1 error 
@@ -51,7 +51,7 @@
   }
 ]] 1 error
 
-test Def before use allowed [[
+test Use before def allowed [[
   entity B {
     c : C
   }

From gabrielkonat at gmail.com  Thu Feb  2 11:11:25 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Thu, 02 Feb 2012 10:11:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24182 - in
	spoofax-contrib/separate-compilation-examples:
	c-without-macros/test c-without-macros/trans
	csharp-partial-classses/test
Message-ID: <20120202101125.66669108C013@mx3.tudelft.nl>

Author: gkonat
Date: Thu Feb  2 10:11:24 2012
New Revision: 24182
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24182&sc=1

Log:
Added tests for c-without-macros-experiment.

Added:
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
Deleted:
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/test-example.spt
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/resolving.spt

Added: spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt	Thu Feb  2 10:11:24 2012	(r24182)
@@ -0,0 +1,67 @@
+module Tests-Resolving
+
+language C-without-macros
+
+setup Header [[ 
+
+]]
+
+test Resolve struct reference [[
+  struct [[B]] {
+    struct [[B]] b;
+  };
+]] resolve #2 to #1
+
+test Resolve typedeffed struct reference [[
+  typedef struct B {
+    [[B_t]] b;
+  } [[B_t]];
+]] resolve #1 to #2
+
+test Resolve typedeffed struct reference [[
+  typedef struct B {
+  } B_t;
+  
+  typedef B_t [[B_t_1]];
+  
+  [[B_t_1]] f() {}
+]] resolve #2 to #1
+
+test Resolve property access [[
+  struct B {
+    int [[i]];
+  };
+  
+  int f() {
+    struct B* b;
+    return b.[[i]];
+  }
+]] resolve #2 to #1
+
+test Resolve typedeffed property access [[
+  struct B {
+    int [[i]];
+  };
+  
+  typedef B b_t;
+  typedef B_t B_t_1;
+  typedef B_t_1 B_t_2;
+  
+  int f() {
+    struct B_t_2* b;
+    return b.[[i]];
+  }
+]] resolve #2 to #1
+
+test Resolve local variable [[
+  int f() {
+    int [[i]];
+    return [[i]];
+  }
+]] resolve #2 to #1
+
+test Resolve local variable (parameter) [[
+  char* f(char* [[s]]) {
+    return [[s]];
+  }
+]] resolve #2 to #1
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Thu Feb  2 10:11:24 2012	(r24182)
@@ -0,0 +1,79 @@
+module Tests
+
+language C-without-macros
+
+setup Header [[ 
+  typedef struct A {
+    char* s;
+    int i;
+    A_t* a;
+  } A_t;
+  
+  void* malloc(int size) {
+    return size;
+  }
+]]
+
+test Resolve property access [[
+  int f() {
+    A_t* a;
+    return a.a.i;
+  }
+]]
+
+test Resolve property access fails [[
+  int f() {
+    A_t* a;
+    return a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.b;
+  }
+]] 1 error
+
+test Resolve function call [[
+  A_t* f() {
+    A_t* a;
+    a = malloc(sizeof(A_t));
+    return a;
+  }
+]]
+
+test Resolve function call fails [[
+  void f() {
+    A_t* a;
+    free(a);
+  }
+]] 1 error
+
+test Resolve type fails [[
+  B f() {}
+]] 1 error
+
+test Resolve typedeffed type [[
+  typedef A_t A_t_1;
+  typedef A_t_1 A_t_2;
+  typedef A_t_2 A_t_3;
+  
+  char* f() {
+    A_t_3* a;
+    a = malloc(sizeof(A_t_3));
+    a.s="test";
+    return a.s;
+  }
+]]
+
+test Resolve typedeffed type fail (cyclic typedef) [[
+  typedef A_t A_t_1;
+  typedef A_t_1 A_t_2;
+  typedef A_t_2 A_t_1;
+  
+  char* f() {
+    A_t_2* a;
+    a = malloc(sizeof(A_t_2));
+    a.s="test";
+    return a.s;
+  }
+]] 2 errors
+
+test Use before def allowed [[
+  struct B f() {}
+  struct B {};
+]]

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Wed Feb  1 16:01:17 2012	(r24181)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Thu Feb  2 10:11:24 2012	(r24182)
@@ -60,7 +60,7 @@
     where
       // TODO: shouldn't work on parent node?
       !node => <one(?subnode) <+ ?subnode>;
-      def     := <index-lookup> node;
+      def     := <index-lookup> subnode;
       target  := /*<index-get-term>*/ def
 
   // Returns "hover help" information for a particular node in the editor.

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/resolving.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/resolving.spt	Wed Feb  1 16:01:17 2012	(r24181)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/resolving.spt	Thu Feb  2 10:11:24 2012	(r24182)
@@ -3,18 +3,10 @@
 language CSharpPartialClassses
 
 setup Header [[
-  namespace TestsResolving {
-    class A {
-      P p;
-    }
-    
-    partial class P {
-      string a;
-    }
-  }
+
 ]]
 
-test Resolve entity reference [[
+test Resolve class reference [[
   class [[B]] {
     [[B]] b;
   }
@@ -34,7 +26,7 @@
   }
 ]] resolve #1 to #2
 
-/*test Resolve local property access [[ 
+test Resolve local property access [[ 
 	partial class B {
 		B [[x]];
 	}
@@ -44,4 +36,4 @@
       return [[x]];
     }
   }
-]] resolve #2 to #1*/
\ No newline at end of file
+]] resolve #2 to #1
\ No newline at end of file

From gabrielkonat at gmail.com  Thu Feb  2 11:31:25 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Thu, 02 Feb 2012 10:31:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24183 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120202103125.0C92BCC3D5@mx4.tudelft.nl>

Author: gkonat
Date: Thu Feb  2 10:31:24 2012
New Revision: 24183
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24183&sc=1

Log:
Prevent re-analysis of files from testing language files.

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Thu Feb  2 10:11:24 2012	(r24182)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Thu Feb  2 10:31:24 2012	(r24183)
@@ -40,7 +40,7 @@
  
   // adjust-index-path-from-filesystem(|project-path, path)
  
-rules // analysis traversals,
+rules // analysis traversals
    
   analyze-top:
     (ast, path, project-path) -> (ast5, defs, uses, data', added, removed)
@@ -79,17 +79,22 @@
         <index-add-all(|full-path)> uses;
         ast5         := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast4;
        
-        // Store reads
+        // Store reads into the index (if current language is not testing language)
         if not(<is-test-input> (ast, path)) then
           <index-add-all(|full-path)> <iset-elements> readSet
         end
       |}
     with
-      // Find removed and added definitions
-      (added, removed) := <analyze-diff> (olddefs, defs)
-    with
-      //Schedule re-analysis of files that have a Use or Read of a removed def and Read of an added def.
-      reanalyze-all(|added, removed, full-path)
+      // Schedule re-analysis of dependent files (if current file is not testing language file)
+      // HACK: Depends on file extension, could be other languages with .spt extension?
+      if not(<is-test-file> path) then
+	      // Find removed and added definitions
+	      (added, removed) := <analyze-diff> (olddefs, defs);
+	      // Schedule re-analysis of files that have a Use or Read of a removed def and Read of an added def
+	      reanalyze-all(|added, removed, full-path)
+	    else
+	      (added, removed) := ([], [])
+      end
      
   analyze-diff:
     (defs1, defs2) -> (added, removed)
@@ -97,31 +102,32 @@
       added   := <diff(analyze-diff-eq)> (defs2, defs1);
       removed := <diff(analyze-diff-eq)> (defs1, defs2)
  
-  // Compensate for changing anonymous namespace names.
+  // Compensate for changing anonymous namespace names
   analyze-diff-eq = ?(Def(u1), Def(u2)); (<eq> (u1, u2) <+ <eq> (<remove-all(?Anon(_))> u1, <remove-all(?Anon(_))> u2))
  
   // Tests if the current file is just a testing language input
+  is-test-file = string-ends-with(|".spt")
   is-test-input:
     (ast, path) -> (ast, path)
     where
-      <string-ends-with(|".spt")> path;
+      <is-test-file> path;
       not(prim("SSL_EXT_origin_language", ast) => "Spoofax-Testing")
      
   analyze-changed(get-all):
-        defs -> filenames
-        with
-          uses := <mapconcat(get-all)> defs;
-          filesAndSubFiles := <mapconcat(index-get-files-of)> uses;
-          filenames := <map(Fst)> filesAndSubFiles
+    defs -> filenames
+    with
+      uses := <mapconcat(get-all)> defs;
+      filesAndSubFiles := <mapconcat(index-get-files-of)> uses;
+      filenames := <map(Fst)> filesAndSubFiles
        
   analyze-all-changed-files(|added, removed, full-path):
-        _ -> changed
-        with
-      changed := <make-set> <remove-all(?full-path)> <concat> [
-                <analyze-changed(index-get-uses-all)> removed,
-                <analyze-changed(index-get-reads-all)> removed,
-                <analyze-changed(index-get-reads-all)> added
-          ]
+    _ -> changed
+    with
+    changed := <make-set> <remove-all(?full-path <+ is-test-file)> <concat> [
+	    <analyze-changed(index-get-uses-all)> removed,
+	    <analyze-changed(index-get-reads-all)> removed,
+	    <analyze-changed(index-get-reads-all)> added
+    ]
          
   reanalyze-all(|added, removed, full-path) =
     analyze-all-changed-files(|added, removed, full-path);

From gabrielkonat at gmail.com  Thu Feb  2 11:48:18 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Thu, 02 Feb 2012 10:48:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24184 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/test
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-c...
Message-ID: <20120202104818.3EF73CC08D@mx4.tudelft.nl>

Author: gkonat
Date: Thu Feb  2 10:48:17 2012
New Revision: 24184
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24184&sc=1

Log:
Fixed some issues with resolving in tests of experiment languages.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt	Thu Feb  2 10:31:24 2012	(r24183)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt	Thu Feb  2 10:48:17 2012	(r24184)
@@ -43,14 +43,14 @@
     int [[i]];
   };
   
-  typedef B b_t;
+  typedef struct B B_t;
   typedef B_t B_t_1;
   typedef B_t_1 B_t_2;
   
   int f() {
-    struct B_t_2* b;
-    return b.[[i]];
-  }
+    B_t* b; 
+    return b.[[i]]; 
+  } 
 ]] resolve #2 to #1
 
 test Resolve local variable [[

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Thu Feb  2 10:31:24 2012	(r24183)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Thu Feb  2 10:48:17 2012	(r24184)
@@ -54,26 +54,28 @@
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
       
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
-  // Only succeeds for nodes of the form Type(_) for which GetEntity is defined.
   editor-resolve:
     (node, position, ast, path, project-path) -> target
     where
-      // TODO: shouldn't work on parent node?
-      !node => <one(?subnode) <+ ?subnode>;
+      if <is-test-file> path then
+      	// HACK: Workaround for testing language selecting wrong node to resolve
+        !node => <collect-one(?subnode{[_|_]})>
+      else
+      	!node => subnode
+      end;
       def     := <index-lookup> subnode;
-      target  := /*<index-get-term>*/ def
+      target  := def
 
   // Returns "hover help" information for a particular node in the editor.
   // For references, this rule is invoked using the resolved term.
-  /*editor-hover:
+  editor-hover:
     (target, position, ast, path, project-path) -> $[[def-path'']]
     where
       // FIXME: this only works for definition paths
-      //<debug(!2)> target;
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
-      def-path'  := <take-until(?Anon())> def-path;
-      def-path'' := <reverse; separate-by(|".")> def-path'*/
+      def-path'  := <take-until(?Anon(_))> def-path;
+      def-path'' := <reverse; separate-by(|".")> def-path'
 
   // Completes an identifier when the user presses control-space
   // (the completion identifier in the AST provides additional context information)

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Thu Feb  2 10:31:24 2012	(r24183)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Thu Feb  2 10:48:17 2012	(r24184)
@@ -54,26 +54,28 @@
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
   
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
-  // Only succeeds for nodes of the form Type(_) for which GetEntity is defined.
   editor-resolve:
     (node, position, ast, path, project-path) -> target
     where
-      // TODO: shouldn't work on parent node?
-      !node => <one(?subnode) <+ ?subnode>;
+      if <is-test-file> path then
+        // HACK: Workaround for testing language selecting wrong node to resolve
+        !node => <collect-one(?subnode{[_|_]})>
+      else
+        !node => subnode
+      end;
       def     := <index-lookup> subnode;
-      target  := /*<index-get-term>*/ def
+      target  := def
 
   // Returns "hover help" information for a particular node in the editor.
   // For references, this rule is invoked using the resolved term.
-  /*editor-hover:
+  editor-hover:
     (target, position, ast, path, project-path) -> $[[def-path'']]
     where
       // FIXME: this only works for definition paths
-      //<debug(!2)> target;
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
-      def-path'  := <take-until(?Anon())> def-path;
-      def-path'' := <reverse; separate-by(|".")> def-path'*/
+      def-path'  := <take-until(?Anon(_))> def-path;
+      def-path'' := <reverse; separate-by(|".")> def-path'
 
   // Completes an identifier when the user presses control-space
   // (the completion identifier in the AST provides additional context information)

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Thu Feb  2 10:31:24 2012	(r24183)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Thu Feb  2 10:48:17 2012	(r24184)
@@ -66,14 +66,17 @@
       
   
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
-  // Only succeeds for nodes of the form Type(_) for which GetEntity is defined.
   editor-resolve:
     (node, position, ast, path, project-path) -> target
     where
-      // TODO: shouldn't work on parent node?
-      !node => <one(?subnode) <+ ?subnode>;
+      if <is-test-file> path then
+        // HACK: Workaround for testing language selecting wrong node to resolve
+        !node => <collect-one(?subnode{[_|_]})>
+      else
+        !node => subnode
+      end;
       def     := <index-lookup> subnode;
-      target  := /*<index-get-term>*/ def
+      target  := def
 
   // Returns "hover help" information for a particular node in the editor.
   // For references, this rule is invoked using the resolved term.
@@ -81,7 +84,6 @@
     (target, position, ast, path, project-path) -> $[[def-path'']]
     where
       // FIXME: this only works for definition paths
-      //<debug(!2)> target;
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
       def-path'  := <take-until(?Anon(_))> def-path;

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Thu Feb  2 10:31:24 2012	(r24183)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Thu Feb  2 10:48:17 2012	(r24184)
@@ -80,14 +80,17 @@
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
   
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
-  // Only succeeds for nodes of the form Type(_) for which GetEntity is defined.
   editor-resolve:
     (node, position, ast, path, project-path) -> target
     where
-      // TODO: shouldn't work on parent node? remove this hack?
-      !node => <one(?subnode) <+ ?subnode>;
+      if <is-test-file> path then
+        // HACK: Workaround for testing language selecting wrong node to resolve
+        !node => <collect-one(?subnode{[_|_]})>
+      else
+        !node => subnode
+      end;
       def     := <index-lookup> subnode;
-      target  := /*<index-get-term>*/ def
+      target  := def
 
   // Returns "hover help" information for a particular node in the editor.
   // For references, this rule is invoked using the resolved term.
@@ -95,7 +98,6 @@
     (target, position, ast, path, project-path) -> $[[def-path'']]
     where
       // FIXME: this only works for definition paths
-      //<debug(!2)> target;
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
       def-path'  := <take-until(?Anon(_))> def-path;

From L.C.L.Kats at tudelft.nl  Thu Feb  2 13:15:13 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 02 Feb 2012 12:15:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24185 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120202121513.7D459CC3B8@mx4.tudelft.nl>

Author: LennartKats
Date: Thu Feb  2 12:15:13 2012
New Revision: 24185
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24185&sc=1

Log:
s/DefCon/Def/

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryFactory.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryFactory.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryFactory.java	Thu Feb  2 10:48:17 2012	(r24184)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryFactory.java	Thu Feb  2 12:15:13 2012	(r24185)
@@ -33,7 +33,7 @@
 	public SemanticIndexEntryFactory(ITermFactory termFactory) {
 		this.termFactory = termFactory;
 		this.stripper = new TermAttachmentStripper(termFactory);
-		defCon = termFactory.makeConstructor("DefCon", 1);
+		defCon = termFactory.makeConstructor("Def", 1);
 		defDataCon = termFactory.makeConstructor("DefData", 3);
 	}
 	

From R.B.Vermaas at tudelft.nl  Thu Feb  2 14:47:42 2012
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 02 Feb 2012 13:47:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24186 - hydra
Message-ID: <20120202134742.4C7747F8010@mx1.tudelft.nl>

Author: rob
Date: Thu Feb  2 13:47:41 2012
New Revision: 24186
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24186&sc=1

Log:
change copy of StrategoMix.def

Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Thu Feb  2 12:15:13 2012	(r24185)
+++ hydra/spoofax-fun.nix	Thu Feb  2 13:47:41 2012	(r24186)
@@ -30,8 +30,8 @@
     ulimit -s unlimited
 
     export MAVEN_OPTS="-Xss8m -Xmx2048m"
-    mkdir utils 
-    cp -v `find $eclipse -name StrategoMix.def` utils/StrategoMix.def
+    mkdir -p utils 
+    cp -v `find $eclipse -name StrategoMix.def` utils/
     sed -Ei 's|\.[0-9]{12}|.qualifier|g' */site.xml
     sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${toString src.rev}"/' */site.xml
 

From R.B.Vermaas at tudelft.nl  Thu Feb  2 14:52:08 2012
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 02 Feb 2012 13:52:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24187 - hydra
Message-ID: <20120202135208.90AA12B8016@mx2.tudelft.nl>

Author: rob
Date: Thu Feb  2 13:52:08 2012
New Revision: 24187
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24187&sc=1

Log:
different way of copying StrategoMix.def

Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Thu Feb  2 13:47:41 2012	(r24186)
+++ hydra/spoofax-fun.nix	Thu Feb  2 13:52:08 2012	(r24187)
@@ -31,7 +31,7 @@
 
     export MAVEN_OPTS="-Xss8m -Xmx2048m"
     mkdir -p utils 
-    cp -v `find $eclipse -name StrategoMix.def` utils/
+    find $eclipse -name StrategoMix.def` | xargs -I{} cp -v {} utils/
     sed -Ei 's|\.[0-9]{12}|.qualifier|g' */site.xml
     sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${toString src.rev}"/' */site.xml
 

From R.B.Vermaas at tudelft.nl  Thu Feb  2 14:56:39 2012
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 02 Feb 2012 13:56:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24188 - hydra
Message-ID: <20120202135640.08733CC0BA@mx4.tudelft.nl>

Author: rob
Date: Thu Feb  2 13:56:39 2012
New Revision: 24188
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24188&sc=1

Log:
typo

Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Thu Feb  2 13:52:08 2012	(r24187)
+++ hydra/spoofax-fun.nix	Thu Feb  2 13:56:39 2012	(r24188)
@@ -31,7 +31,7 @@
 
     export MAVEN_OPTS="-Xss8m -Xmx2048m"
     mkdir -p utils 
-    find $eclipse -name StrategoMix.def` | xargs -I{} cp -v {} utils/
+    find $eclipse -name StrategoMix.def | xargs -I{} cp -v {} utils/
     sed -Ei 's|\.[0-9]{12}|.qualifier|g' */site.xml
     sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${toString src.rev}"/' */site.xml
 

From R.B.Vermaas at tudelft.nl  Thu Feb  2 14:59:04 2012
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 02 Feb 2012 13:59:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24189 - hydra
Message-ID: <20120202135904.DCA56108C00A@mx3.tudelft.nl>

Author: rob
Date: Thu Feb  2 13:59:04 2012
New Revision: 24189
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24189&sc=1

Log:
there are two StrategoMix.def's in spoofax install nowadays, use the one from org.spoofax.imp.generator

Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Thu Feb  2 13:56:39 2012	(r24188)
+++ hydra/spoofax-fun.nix	Thu Feb  2 13:59:04 2012	(r24189)
@@ -31,7 +31,7 @@
 
     export MAVEN_OPTS="-Xss8m -Xmx2048m"
     mkdir -p utils 
-    find $eclipse -name StrategoMix.def | xargs -I{} cp -v {} utils/
+    cp -v $eclipse/eclipse/plugins/org.strategoxt.imp.generator_*/lib/StrategoMix.def
     sed -Ei 's|\.[0-9]{12}|.qualifier|g' */site.xml
     sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${toString src.rev}"/' */site.xml
 

From R.B.Vermaas at tudelft.nl  Thu Feb  2 15:00:57 2012
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Thu, 02 Feb 2012 14:00:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24190 - hydra
Message-ID: <20120202140057.3EA51108C017@mx3.tudelft.nl>

Author: rob
Date: Thu Feb  2 14:00:56 2012
New Revision: 24190
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24190&sc=1

Log:
missing destination

Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Thu Feb  2 13:59:04 2012	(r24189)
+++ hydra/spoofax-fun.nix	Thu Feb  2 14:00:56 2012	(r24190)
@@ -31,7 +31,7 @@
 
     export MAVEN_OPTS="-Xss8m -Xmx2048m"
     mkdir -p utils 
-    cp -v $eclipse/eclipse/plugins/org.strategoxt.imp.generator_*/lib/StrategoMix.def
+    cp -v $eclipse/eclipse/plugins/org.strategoxt.imp.generator_*/lib/StrategoMix.def utils/
     sed -Ei 's|\.[0-9]{12}|.qualifier|g' */site.xml
     sed -Ei 's/(version="([0-9]+\.){3,}[0-9]+)"/\1-r${toString src.rev}"/' */site.xml
 

From gabrielkonat at gmail.com  Thu Feb  2 15:19:44 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Thu, 02 Feb 2012 14:19:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24191 -
	spoofax-contrib/separate-compilation-examples/c-without-macros
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses
	spoofax-contrib/separate-compi...
Message-ID: <20120202141944.BDCF9108C013@mx3.tudelft.nl>

Author: gkonat
Date: Thu Feb  2 14:19:44 2012
New Revision: 24191
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24191&sc=1

Log:
Split index only part of analysis-library into index-library.
Added documentation blocks to most public api rules/strategies.

Added:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/completion.spt
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml	Thu Feb  2 14:00:56 2012	(r24190)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml	Thu Feb  2 14:19:44 2012	(r24191)
@@ -42,8 +42,9 @@
         <!-- Main target -->
         <target name="all" depends="copy-files, spoofaximp.default.ctree"/>
       
-        <!-- Copy analysis-library from naming experiment -->
+        <!-- Copy analysis and index library from naming experiment -->
         <target name="copy-files">
             <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
+            <copyfile dest="lib/index-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str"/>
         </target>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml	Thu Feb  2 14:00:56 2012	(r24190)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml	Thu Feb  2 14:19:44 2012	(r24191)
@@ -42,8 +42,9 @@
         <!-- Main target -->
         <target name="all" depends="copy-files, spoofaximp.default.ctree"/>
       
-        <!-- Copy analysis-library from naming experiment -->
+        <!-- Copy analysis and index library from naming experiment -->
         <target name="copy-files">
             <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
+            <copyfile dest="lib/index-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str"/>
         </target>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml	Thu Feb  2 14:00:56 2012	(r24190)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml	Thu Feb  2 14:19:44 2012	(r24191)
@@ -42,8 +42,9 @@
         <!-- Main target -->
         <target name="all" depends="copy-files, spoofaximp.default.ctree"/>
 	
-        <!-- Copy analysis-library from naming experiment -->
+        <!-- Copy analysis and index library from naming experiment -->
         <target name="copy-files">
             <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
+            <copyfile dest="lib/index-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str"/>
         </target>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/completion.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/completion.spt	Thu Feb  2 14:00:56 2012	(r24190)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/completion.spt	Thu Feb  2 14:19:44 2012	(r24191)
@@ -17,4 +17,4 @@
       var v : A = a.x.[[y]]
     }
   }
-]] complete to "yyyyy" 
\ No newline at end of file
+]] complete to "yyyyy"
\ No newline at end of file

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Thu Feb  2 14:00:56 2012	(r24190)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Thu Feb  2 14:19:44 2012	(r24191)
@@ -3,28 +3,17 @@
 imports
   libstratego-lib
   lib/editor-common.generated
+  lib/index-library
  
 signature constructors
  
-  // Index elements:
+  // Index elements
   Def          : List(UriPart) -> Summary
   Use          : List(UriPart) * List(UriPart) -> Summary
   BadUse       : List(UriPart) -> Summary
-  DefData      : List(UriPart) * DefDataType * Term -> Summary
   Read         : List(UriPart) -> Summary
   ReadWildcard : List(UriPart) * String -> Summary
  
-  // URI header:
-  Namespace      : UriPart
-  Unresolved     : Namespace -> UriPart
-  INTERNAL_ERROR : UriPart
-  Timestamp      : UriPart
- 
-  // Remainder of URI:
-  String : UriPart
-  Anon   : Int -> UriPart
-  Anon   : UriPart
- 
 rules // extension points
  
   // Should return list of Def(_) and/or [namespace | path]
@@ -47,11 +36,11 @@
     with
       // Init
       full-path := $[[project-path]/[path]];
-      index-setup(|<prim("SSL_EXT_origin_language", ast)>, [project-path])
+      index-setup(|<index-origin-language> ast, [project-path])
     with
       // Store copy of defs for diff and clear file
       olddefs := <filter(?Def(_))> <index-get-all-in-file> full-path;
-      prim("LANG_index_clear_file", full-path)
+      <index-clear-file> full-path
     with
       {| ReadSet, UnresolvedSet:
         readSet := <new-iset>;
@@ -261,40 +250,52 @@
       appl'          := <all(\(a, _) -> a\)> appl;
       unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
  
-rules // index management
-   
-  index-setup(|language, project-paths) =
-    project-path;
-    prim("LANG_index_setup", language, project-paths)
-   
-  index-add-all(|file) =
-    list-loop(with(prim("LANG_index_add", <id>, file)))
-   
-  index-remove-all(|file) =
-    list-loop(with(prim("LANG_index_remove", <id>, file)))
-   
-  index-clear = prim("LANG_index_clear_all")
-   
-  index-commit = prim("LANG_index_commit")
- 
 rules // index API primitives
  
+  /**
+   * Gets all DefData entries that match the kind of data and URI in given definition.
+   *
+   * @param kind Only data of this kind is returned.
+   *
+   * Example:
+   *   <index-get-data(|Type())> Def([Entity(), "Bar"]) => [DefData([Entity(), "Bar"], Type(), TYPE("Bar")), ...]
+   */
   index-get-data(|kind):
     <with(?Def(uri) | "Def expected")> -> data
     where
       <index-get-all> DefData(uri, kind, []) => [DefData(_, _, data) | _]
- 
+      
+	/**
+	 * Gets all data entries that match the kind of data and URI in given definition.
+	 *
+	 * @param kind Only data of this kind is returned.
+	 *
+	 * Example:
+	 *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
+	 */
   index-get-data-all(|kind):
     <with(?Def(uri) | "Def expected")> -> datas'
     where
       datas  := <index-get-all> DefData(uri, kind, []);
       datas' := <map(\DefData(_, _, d) -> d\)> datas
      
+  /**
+   * Gets all Use entries that match the URI in given definition.
+   *
+   * Example:
+   *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"], [Entity(), "M"]), ...]
+   */
   index-get-uses-all:
     <with(?Def(uri) | "Def expected")> -> uses
     where
       uses := <index-get-all> Use(uri, [])
      
+  /**
+   * Gets all Read or ReadWildcard entries that match the given template.
+   *
+   * Example:
+   *   <index-get-reads-all> [Property(), "Bar", "p"] => [Read([Property(), "Bar", "p"]), ...]
+   */
   index-get-reads-all:
     template -> <conc> (reads, readwildcards')
     where
@@ -302,85 +303,73 @@
       reads := <index-get-all> Read(uri);
       if !uri => [namespace, prefix | path-parent] then
         readwildcards  := <index-get-all> ReadWildcard([namespace | path-parent], ());
-        readwildcards' := <filter(readwildcard-substring(|prefix))> readwildcards
+        readwildcards' := <filter(index-readwildcard-substring(|prefix))> readwildcards
       else
         readwildcards' := []
       end
-     
-  readwildcard-substring(|prefix):
-    ReadWildcard(_, name) -> <id>
-    where <is-substring(!prefix)> name
- 
-  index-get-all-in-file:
-    filepath -> entries
-    with
-      entries := <prim("LANG_index_get_all_in_file", filepath)>
- 
-  index-get-all-files =
-    prim("LANG_index_all_files")
- 
-  /**
-   * Updates the "last updated" timestamp for the given service name.
-   *
-   * @see index-get-changes-since-timestamp(|service)
-   */
-  index-timestamp-set-updated(|service) =
-    prim("LANG_index_add", DefData([Timestamp(), "timestamps", ".internal"], Timestamp(), []), $[/.internal/timestamps/[service]])
-   
-  /**
-   * Gets all files with changes since the last time stamp update
-   * for the given service name.
-   */
-  index-timestamp-get-updates(|service):
-    _ -> files
-    with
-      files := <prim("LANG_index_get_files_newer_than", $[/.internal/timestamps/[service]])>
- 
-  index-get-files-of:
-    template -> <prim("LANG_index_get_file_of", template)>
  
   /**
    * Get all index entries that match the given template.
+   *
    * Example:
-   *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"])]
+   *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
    */
   index-get-all:
-    template -> <prim("LANG_index_get", template)>
+    template -> <indexlib-get-all> template
       with
        if set := <ReadSet> then
          uri := <index-uri>;
          <iset-add(|Read(uri))> set
        end
- 
+       
   /**
    * Get the first index entry that matches the given template, or fail.
+   *
    * Example:
    *   <index-get-all> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
    */
   index-get:
     template -> <Fst> <index-get-all> template
  
+  /**
+   * Gets the URI for given term.
+   */
   index-uri:
     Def(uri) -> uri
- 
+    
+  /**
+   * Gets the URI for given term.
+   */
   index-uri:
     Use(uri, _) -> uri
- 
-  index-uri:
-    DefData(uri, _, _) -> uri
- 
+    
+  /**
+   * Gets the URI for given term.
+   */
   index-uri:
     Read(uri) -> uri
  
+  /**
+   * Gets the URI for given term.
+   */
   index-uri:
     ReadWildcard(uri, _) -> uri
    
+  /**
+   * Gets the URI for given term.
+   */
   index-uri:
     x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
    
+  /**
+   * Gets the namespace part of the URI for given term.
+   */
   index-namespace:
     x{[namespace | path]} -> <index-namespace-unwrap> namespace
- 
+
+  /**
+   * Gets the path part of the URI for given term.
+   */
   index-path:
     x{[namespace | path]} -> path'
     where
@@ -615,6 +604,8 @@
 /** @internal */
 rules // Internal helpers
        
+  index-origin-language = (origin-term <+ id); prim("SSL_EXT_origin_language", <id>)
+       
   index-is-name-substring(|name):
     template -> <id>
     with
@@ -622,11 +613,12 @@
     where
       <is-substring(!name)> uri-name
       
+  index-readwildcard-substring(|prefix):
+    ReadWildcard(_, name) -> <id>
+    where <is-substring(!prefix)> name
+      
   index-is-unresolved(|x) = <iset-contains(|x)> <UnresolvedSet>
  
-  index-namespace-unwrap =
-    \Unresolved(n) -> n\ <+ id
- 
   do-adjust-index-lookup(|namespace, path, use, prefix) =
     // UNDONE: try(origin-term);
     repeat-until(
@@ -658,7 +650,7 @@
       ?Def([_, name | _]);
       <SRTS-EXT-eq-ignore-annos(|expected)> name
     )
- 
+  
   external SRTS-EXT-eq-ignore-annos(|t)
  
 rules // interface for generated code

Added: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Thu Feb  2 14:19:44 2012	(r24191)
@@ -0,0 +1,150 @@
+module lib/index-library
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+signature constructors
+  
+  // Index elements
+  DefData      : List(UriPart) * DefDataType * Term -> Summary
+    
+  // URI header
+  Namespace      : UriPart
+  Unresolved     : Namespace -> UriPart
+  INTERNAL_ERROR : UriPart
+  Timestamp      : UriPart
+ 
+  // Remainder of URI
+  String : UriPart
+  Anon   : Int -> UriPart
+  Anon   : UriPart
+  
+rules // Index management
+   
+  /**
+   * Sets up the index library for given language and project paths.
+   * Must be called once before doing anything with the library.
+   */
+  index-setup(|language, project-paths) =
+    project-path;
+    prim("LANG_index_setup", language, project-paths)
+
+  /**
+   * Adds all given elements to the index with given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-add-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-add-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   */
+  index-add-all(|files) =
+    list-loop(with(prim("LANG_index_add", <id>, files)))
+    
+  /**
+   * Removes all given elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-remove-all(|"fullpath/file.ext")> [Def([Entity(), "Bar"]), ...]
+   *   <index-remove-all(|("fullpath/file.ext", "subfile"))> [Def([Entity(), "Bar"]), ...]
+   */
+  index-remove-all(|files) =
+    list-loop(with(prim("LANG_index_remove", <id>, files)))
+    
+  /**
+   * Removes all elements from the index that are contained in given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-clear-file> "fullpath/file.ext"
+   *   <index-clear-file> ("fullpath/file.ext", "subfile")
+   */
+  index-clear-file = 
+    prim("LANG_index_clear_file", <id>)
+    
+  /**
+   * Clears all elements from the index.
+   */
+  index-clear = 
+    prim("LANG_index_clear_all")
+   
+  /**
+   * Commits index to a file on disk.
+   */
+  index-commit = 
+    prim("LANG_index_commit")
+  
+rules // Index API
+  
+  /**
+   * Gets a list of all files and subfile for current project.
+   *
+   * Example:
+   *   <index-get-all-files> => ["fullpath/file.ext", ...]
+   */   
+  index-get-all-files =
+    prim("LANG_index_all_files")
+  
+  /**
+   * Gets all index entries for the given file path and optionally subfile.
+   *
+   * Example:
+   *   <index-get-all-in-file> "fullpath/file.ext" => [Def([Entity(), "Bar"]), ...]
+   *   <index-get-all-in-file> ("fullpath/file.ext", "subfile") => [Def([Entity(), "Bar"]), ...]
+   */  
+  index-get-all-in-file:
+    filepath -> entries
+    with
+      entries := <prim("LANG_index_get_all_in_file", filepath)>
+    
+  /**
+   * Gets the containing file and subfile of index entry with given template.
+   *
+   * Example:
+   *   <index-get-files-of> Def([Entity(), "Bar"]) => [("fullpath/file.ext", "subfile"), ...]
+   */  
+  index-get-files-of:
+    template -> <prim("LANG_index_get_files_of", template)>
+    
+  /**
+   * Get all index entries that match the given template.
+   *
+   * Example:
+   *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   */
+  indexlib-get-all:
+    template -> <prim("LANG_index_get", template)>
+ 
+  /**
+   * Get the first index entry that matches the given template, or fail.
+   *
+   * Example:
+   *   <index-get-all> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   */
+  indexlib-get:
+    template -> <Fst> <indexlib-get-all> template
+ 
+  /**
+   * Updates the "last updated" timestamp for the given service name.
+   *
+   * @see index-get-changes-since-timestamp(|service)
+   */
+  index-timestamp-set-updated(|service) =
+    prim("LANG_index_add", DefData([Timestamp(), "timestamps", ".internal"], Timestamp(), []), $[/.internal/timestamps/[service]])
+   
+  /**
+   * Gets all files with changes since the last time stamp update for the given service name.
+   */
+  index-timestamp-get-updates(|service):
+    _ -> files
+    with
+      files := <prim("LANG_index_get_files_newer_than", $[/.internal/timestamps/[service]])>
+
+  /**
+   * Gets the URI for given term.
+   */ 
+  index-uri:
+    DefData(uri, _, _) -> uri
+      
+rules // Internal helpers
+  
+  index-namespace-unwrap =
+    \Unresolved(n) -> n\ <+ id

From gabrielkonat at gmail.com  Thu Feb  2 15:32:38 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Thu, 02 Feb 2012 14:32:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24192 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120202143238.9A5FC2B8065@mx2.tudelft.nl>

Author: gkonat
Date: Thu Feb  2 14:32:38 2012
New Revision: 24192
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24192&sc=1

Log:
Corrected name of LANG_index_get_files_of primitive.

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_files_of.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_files_of.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_files_of.java	Thu Feb  2 14:19:44 2012	(r24191)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_files_of.java	Thu Feb  2 14:32:38 2012	(r24192)
@@ -14,7 +14,7 @@
  */
 public class LANG_index_get_files_of extends AbstractPrimitive {
 
-	private static String NAME = "LANG_index_get_file_of";
+	private static String NAME = "LANG_index_get_files_of";
 	
 	private final SemanticIndexManager index;
 	

From L.C.L.Kats at tudelft.nl  Thu Feb  2 16:43:51 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 02 Feb 2012 15:43:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24193 - in
	spoofax-imp/trunk/org.strategoxt.imp.testing: editor trans
Message-ID: <20120202154351.07DDF108C017@mx3.tudelft.nl>

Author: LennartKats
Date: Thu Feb  2 15:43:50 2012
New Revision: 24193
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24193&sc=1

Log:
Spoofax/483: run should work on analyzed AST

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv	Thu Feb  2 14:32:38 2012	(r24192)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/editor/Spoofax-Testing-Completions.esv	Thu Feb  2 15:43:50 2012	(r24193)
@@ -47,4 +47,4 @@
   completion template : OptPattern = "to file " <file>
   completion template : OptPattern = "to " <term>
   completion template : OptPattern = "to " <term>
-  completion template : OptPattern = "to [[ " <output> " ]]"
+  completion template : OptPattern = "to [[ " (cursor) " ]]" 

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str	Thu Feb  2 14:32:38 2012	(r24192)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str	Thu Feb  2 15:43:50 2012	(r24193)
@@ -33,7 +33,7 @@
   check-builder(|ast, selections, messages, condition):
     (builder, arg, expected) -> error
     with
-      selected := <resolve-selection(|selections) <+ !ast> Numbered("1");
+      selected := <resolve-selection(|selections) <+ LastAnalyzedAst> Numbered("1");
       input    := <get-service-input-term> selected;
       if !arg => Argument(arg') then
         // Store builder argument

From gabrielkonat at gmail.com  Fri Feb  3 10:43:21 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 03 Feb 2012 09:43:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24194 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/lib
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib
	spoofax-contrib/separa...
Message-ID: <20120203094321.908CB7F8012@mx1.tudelft.nl>

Author: gkonat
Date: Fri Feb  3 09:43:19 2012
New Revision: 24194
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24194&sc=1

Log:
Fixed small documentation errors in index and analysis library.
Ignored index-library.str in separate compilation examples.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/lib/   (props changed)
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/   (props changed)
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/   (props changed)
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/   (props changed)
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Thu Feb  2 15:43:50 2012	(r24193)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb  3 09:43:19 2012	(r24194)
@@ -326,7 +326,7 @@
    * Get the first index entry that matches the given template, or fail.
    *
    * Example:
-   *   <index-get-all> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *   <index-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
    */
   index-get:
     template -> <Fst> <index-get-all> template

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Thu Feb  2 15:43:50 2012	(r24193)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Fri Feb  3 09:43:19 2012	(r24194)
@@ -96,7 +96,7 @@
       entries := <prim("LANG_index_get_all_in_file", filepath)>
     
   /**
-   * Gets the containing file and subfile of index entry with given template.
+   * Gets the containing files and subfiles of index entry with given template.
    *
    * Example:
    *   <index-get-files-of> Def([Entity(), "Bar"]) => [("fullpath/file.ext", "subfile"), ...]
@@ -108,7 +108,7 @@
    * Get all index entries that match the given template.
    *
    * Example:
-   *   <index-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
+   *   <indexlib-get-all> Def([Entity(), "Bar"]) => [Def([Entity(), "Bar"]), ...]
    */
   indexlib-get-all:
     template -> <prim("LANG_index_get", template)>
@@ -117,7 +117,7 @@
    * Get the first index entry that matches the given template, or fail.
    *
    * Example:
-   *   <index-get-all> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
+   *   <indexlib-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
    */
   indexlib-get:
     template -> <Fst> <indexlib-get-all> template

From gabrielkonat at gmail.com  Fri Feb  3 12:01:10 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 03 Feb 2012 11:01:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24195 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
Message-ID: <20120203110110.E1CAA108C01D@mx3.tudelft.nl>

Author: gkonat
Date: Fri Feb  3 11:01:09 2012
New Revision: 24195
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24195&sc=1

Log:
Fixed Java code generation.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/util.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Fri Feb  3 09:43:19 2012	(r24194)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Fri Feb  3 11:01:09 2012	(r24195)
@@ -6,6 +6,7 @@
   libstratego-aterm
   include/EntityWithAspects
   lib/editor-common.generated
+  lib/index-library
   lib/analysis-library
   check
   generate

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str	Fri Feb  3 09:43:19 2012	(r24194)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str	Fri Feb  3 11:01:09 2012	(r24195)
@@ -2,6 +2,7 @@
 
 imports
   include/EntityWithAspects
+  lib/index-library
   lib/analysis-library
   analysis-generated
 

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Fri Feb  3 09:43:19 2012	(r24194)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Fri Feb  3 11:01:09 2012	(r24195)
@@ -4,6 +4,7 @@
   libstratego-lib
   include/EntityWithAspects
   lib/editor-common.generated
+  lib/index-library
   lib/analysis-library
   analysis-generated
   types

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Fri Feb  3 09:43:19 2012	(r24194)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Fri Feb  3 11:01:09 2012	(r24195)
@@ -2,16 +2,17 @@
 
 imports
     
-    libstratego-lib
-    libstratego-gpp
-    libstratego-aterm
-    include/EntityWithAspects
-    lib/editor-common.generated
-    lib/analysis-library
-    analysis-generated
-    util
-    types
-
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/EntityWithAspects
+  lib/editor-common.generated
+  lib/index-library
+  lib/analysis-library
+  analysis-generated
+  types
+  util
+    
 signature constructors
 
   POINTCUT  : Type -> Advice
@@ -32,45 +33,51 @@
     where
       data := ADVICE(beforeafter, params, pointcut, statement)
 
-rules
+rules // Code generation to java strings
 	
-    // Constructs
-    to-java(|file): Module(name, entities) ->
-	    $[package [name];
+  // Constructs
+  to-java(|file): 
+    Module(name, entities) ->
+    $[package [name];
 
-	      [entities']]
-	where 
-		{| FilePath:
-			rules (FilePath: _ -> file);
+      [entities']]
+		where 
 			entities' := <map(to-java)> entities
-		|}
+			
 	to-java: Aspect(_, _) -> "" // Aspects are ignored in simple code generation, they should already be handled.
-    to-java: Entity(name, members) ->
-	    $[class [name] 
-	      {
-	          [<map(to-java)> members]
-	      }
-	      
-	      ]
-    to-java: Property(name, type) -> 
-        $[private [typename] [name];
-	      
-	      public [typename] get_[name] 
-	      {
-	          return [name];
-	      }
-	      
-	      public void set_[name]([typename] [name]) 
-	      {
-	          this.[name] = [name];    
-	      }
-	      
-	      ]
-        where typename := <to-java> type
+	
+  to-java: 
+    Entity(name, members) ->
+    $[class [name] 
+      {
+          [<map(to-java)> members]
+      }
+      
+      ]
+      
+  to-java: 
+    Property(name, type) -> 
+    $[private [typename] [name];
+    
+    public [typename] get_[name] 
+    {
+        return [name];
+    }
+    
+    public void set_[name]([typename] [name]) 
+    {
+        this.[name] = [name];    
+    }
+    
+    ]
+    where 
+      typename := <to-java> type
+    
     to-java: Function(name, params, statement) ->
-        $[public void [name]([<params-to-java> params])
-          [<to-java> statement]    
-        ]
+      $[public void [name]([<params-to-java> params])
+        [<to-java> statement]    
+      ]
+      
     to-java: Param(name, type) -> $[[<to-java> type] [name]]
     params-to-java: [] -> ""
     params-to-java: [Param(name, type)|rest] -> $[[<to-java> type] [name][<params-to-java2> rest]]
@@ -79,35 +86,44 @@
     params-to-java2: [Param(name, type)|[]] -> $[, [<to-java> type] [name]]
     
     // Statements
-    to-java: Block(statements) ->
-        $[{
-              [<map(to-java)> statements]
-          }
-        ]
-    to-java: Assign(name, exp) -> $[[before]
-    [name] = [<to-java> exp];
-    
-    [after]]
-    where advices := <debug> <map(to-java-fixadvice(|exp))> <debug> <index-get-data-all(|Advice())> Def([])
-    where type := <to-java-aspect-type> <type-of> Def(<index-uri> name)
-    where beforeAdvices := <filter(?(Before(), Assigned(type), _))> advices
-    where before := <map(\(_, _, statement) -> statement\; to-java)> beforeAdvices
-    where afterAdvices := <filter(?(After(), Assigned(type), _))> advices
-    where after := <map(\(_, _, statement) -> statement\; to-java)> afterAdvices
-    // TODO: This could possibly be done when storing the advice, or at least part of it?
+    to-java: 
+      Block(statements) ->
+      $[{
+            [<map(to-java)> statements]
+        }
+      ]
+        
+    to-java: 
+      Assign(name, exp) -> $[[before]
+      [name] = [<to-java> exp];
+    
+      [after]]
+	    with
+	      // TODO: Better way of getting the right DefData elements, getting ALL elements and filtering is expensive.
+	    	advicesDefData := <filter(?DefData(_, Advice(), _))> <indexlib-get-all-elements>;
+	      advicesData := <map(\DefData(_, _, data) -> data\)> advicesDefData;
+	      advices := <map(to-java-fixadvice(|exp))> advicesData;
+	      type := <to-java-aspect-type> <type-of> Def(<index-uri> name);
+	      beforeAdvices := <filter(?(Before(), Assigned(type), _))> advices;
+	      before := <map(\(_, _, statement) -> statement\; to-java)> beforeAdvices;
+	      afterAdvices := <filter(?(After(), Assigned(type), _))> advices;
+	      after := <map(\(_, _, statement) -> statement\; to-java)> afterAdvices
+    
     to-java-fixadvice(|exp):
     	ADVICE(beforeafter, params, pointcut, statement) -> (beforeafter, type, statement')
-    	where POINTCUT(types) := <index-get-data(|Pointcut())> Def(<to-java-remove-unresolved> <index-uri> pointcut)
-    	where type := <get-first> types
-        where Param(paramName, _) := <get-first> params
-        where var := Var(paramName)
-        where statement' := <try(sometd(to-java-aspect-replace-var(|var, exp)))> statement
+    	with 
+  		  POINTCUT(types) := <index-get-data(|Pointcut())> Def(<index-uri> pointcut);
+  	    type := <get-first> types;
+        Param(paramName, _) := <get-first> params;
+        var := Var(paramName);
+        statement' := <try(sometd(to-java-aspect-replace-var(|var, exp)))> statement
+        
     // Replace a certain variable with given expression.
     to-java-aspect-replace-var(|var, exp):
     	x -> exp
-    	where <eq>(<strip-annos> x, <strip-annos> var)
-    // Remove Unresolved(x) terms
-    to-java-remove-unresolved = sometd(\Unresolved(x) -> x\)
+    	where 
+    		<eq>(<strip-annos> x, <strip-annos> var)
+    		
     // Fix type to be compatible with Assigned(Type)
     to-java-aspect-type = 
     	switch id
@@ -116,17 +132,25 @@
     		otherwise : id
   		end
     
-    to-java: VarDeclInit(name, type, exp) -> $[[<to-java> type] [name] = [<to-java> exp];
-    ]
-    to-java: Print(exp) -> $[System.out.println([<to-java> exp]);
-    ]
+    to-java: 
+      VarDeclInit(name, type, exp) -> $[[<to-java> type] [name] = [<to-java> exp];
+      ]
+    to-java: 
+      Print(exp) -> $[System.out.println([<to-java> exp]);
+      ]
     
     // Expressions
-    to-java: Var(name) -> name
-    to-java: PropAccess(exp, name) -> $[[<to-java> exp].[name]]
-    to-java: Call(name, args) -> $[[name]([<map(to-java)> args])]
+    to-java: 
+      Var(name) -> name
+    to-java: 
+      PropAccess(exp, name) -> $[[<to-java> exp].[name]]
+    to-java: 
+      Call(name, args) -> $[[name]([<map(to-java)> args])]
     
     // Types
-    to-java: Type(type) -> type
-    to-java: StringType() -> "String"
-    to-java: IntType() -> "int"
\ No newline at end of file
+    to-java: 
+      Type(type) -> type
+    to-java: 
+      StringType() -> "String"
+    to-java: 
+      IntType() -> "int"

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Fri Feb  3 09:43:19 2012	(r24194)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Fri Feb  3 11:01:09 2012	(r24195)
@@ -2,6 +2,7 @@
 
 imports
   include/EntityWithAspects
+  lib/index-library
   lib/analysis-library
 
 signature constructors

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/util.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/util.str	Fri Feb  3 09:43:19 2012	(r24194)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/util.str	Fri Feb  3 11:01:09 2012	(r24195)
@@ -2,16 +2,6 @@
 
 rules
     
-    // Applies a strategy to all items in given list with given secondary item and passes the 
-    // result on as the secondary item.
-    map-passon(s): 
-        ([item1|rest], item2) -> <map-passon(s)> (rest, <s> (item1, item2))
-        where not(<?[]> rest)
-    map-passon(s): 
-        ([item1|[]], item2) -> <s> (item1, item2)
-    map-passon(s): 
-        ([], item2) -> item2
-        
     // Returns first item in a list.
     get-first: 
         [first|_] -> first

From gabrielkonat at gmail.com  Fri Feb  3 14:41:57 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 03 Feb 2012 13:41:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24196 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/test
	spoofax-contrib/sep...
Message-ID: <20120203134157.699A5108C028@mx3.tudelft.nl>

Author: gkonat
Date: Fri Feb  3 13:41:56 2012
New Revision: 24196
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24196&sc=1

Log:
Made analyse-top easier to use and added documentation blocks.
Added project-wide code generation for entity-with-aspects experiment.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/   (props changed)
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Fri Feb  3 11:01:09 2012	(r24195)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Fri Feb  3 13:41:56 2012	(r24196)
@@ -20,7 +20,8 @@
   builder  : "Show analyzed syntax" = generate-analyzed (openeditor) (realtime) (source)
   builder  : "Show index entries for current file" = index-currentfile (openeditor) (realtime) (source)   
   builder  : "Show index entries for all files" = index-allfiles (openeditor) (realtime) (source)                      
-  builder  : "Generate java code" = generate-java (openeditor) (realtime) (source)                                                                                           
+  builder  : "Generate java file" = generate-java-file (openeditor) (realtime) (source)
+  builder  : "Generate java project" = generate-java-project (openeditor) (realtime) (source)                                                                                           
 
 refactorings
                                                                                                                         

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Fri Feb  3 11:01:09 2012	(r24195)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Fri Feb  3 13:41:56 2012	(r24196)
@@ -23,10 +23,10 @@
     (ast, path, project-path) -> (ast', errors, warnings, notes)
     with
       editor-init;
-      (ast', _, _, _, _, _) := <analyze-top>;
-      errors   := <collect-all(constraint-error, conc)> ast';
-      warnings := <collect-all(constraint-warning, conc)> ast';
-      notes    := <collect-all(constraint-note, conc)> ast'
+      ast'      := <analyze-top>;
+      errors    := <collect-all(constraint-error, conc)> ast';
+      warnings  := <collect-all(constraint-warning, conc)> ast';
+      notes     := <collect-all(constraint-note, conc)> ast'
   
   // Prints the abstract syntax ATerm of a selection.
   generate-aterm:
@@ -58,14 +58,19 @@
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
       
   // Transforms a selection to Java
-  generate-java:
+  generate-java-file:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"java")> path;
-      (analyzed, _, _, _, _, _) := <analyze-top> (selected, path, project-path);
-      result   := <to-java(|path)> analyzed
+      analyzed := <analyze-top> (selected, path, project-path);
+      result   := <to-java> analyzed
+      
+  // Transforms project to Java
+  generate-java-project:
+    (selected, position, ast, path, project-path) -> None()
+    with
+      project-to-java(|path, project-path)
       
-  
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
   editor-resolve:
     (node, position, ast, path, project-path) -> target
@@ -96,15 +101,15 @@
     (node, position, ast, path, project-path) -> proposals'
     where
       editor-init;
-      (ast', _, _, _, _, _) := <analyze-top> (ast, path, project-path);
-      x                     := <collect-one(?COMPLETION(_))> ast';
-      COMPLETION(name)		  := x;
+      ast'              := <analyze-top> (ast, path, project-path);
+      x                 := <collect-one(?COMPLETION(_))> ast';
+      COMPLETION(name)  := x;
       (
-        proposals           := <index-lookup-all-levels(|name)> x 
+        proposals       := <index-lookup-all-levels(|name)> x 
       <+ 
-        proposals           := []
+        proposals       := []
       );
-      proposals'            := <map(def-to-name)> proposals
+      proposals'        := <map(def-to-name)> proposals
 
   def-to-name:
     Def([namespace, name | _]) -> name

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Fri Feb  3 11:01:09 2012	(r24195)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Fri Feb  3 13:41:56 2012	(r24196)
@@ -33,10 +33,31 @@
     where
       data := ADVICE(beforeafter, params, pointcut, statement)
 
+rules // Incremental code generation of project
+  
+  project-to-java(|path, project-path):
+    _ -> None()
+    with
+      files := <index-get-all-files>;
+      <map(\(file, subFile) -> file\; file-to-java(|path, project-path))> files
+      
+  file-to-java(|path, project-path):
+  	file -> None()
+  	with
+  		ast := <parse-file> file;
+  	  ast' := <analyze-top(|Compile(), "EntityWithAspects")> (ast, path, project-path);
+  		java := <to-java> ast';
+  		full-path := <dirname> $[[project-path]/[path]];
+  		filename := <guarantee-extension(|"java")> <base-filename> file;
+  		writePath := $[[full-path]/java/];
+  		writeFile :=  $[[writePath][filename]];
+  		try(<mkdir> writePath);
+  		<fclose> <fputs> (java, <fopen> (writeFile, "w"))
+
 rules // Code generation to java strings
 	
   // Constructs
-  to-java(|file): 
+  to-java: 
     Module(name, entities) ->
     $[package [name];
 

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb  3 11:01:09 2012	(r24195)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb  3 13:41:56 2012	(r24196)
@@ -7,6 +7,11 @@
  
 signature constructors
  
+  // Analyze constructors
+  AnalysedResult : AST * List(Def) * List(Use) * List(DefData) * List(Def) * List(Def) -> AnalysedResult
+  Editor      : AnalysisPhase
+  Compile     : AnalysisPhase
+ 
   // Index elements
   Def          : List(UriPart) -> Summary
   Use          : List(UriPart) * List(UriPart) -> Summary
@@ -30,17 +35,56 @@
   // adjust-index-path-from-filesystem(|project-path, path)
  
 rules // analysis traversals
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   * Defaults to Editor() phase and tries to automatically determine language name.
+   *
+   * @see analyze-top(|phase, language)
+   */
+  analyze-top = analyze-top(|Editor())
+  
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   * Tries to automatically determine language name.
+   *
+   * @see analyze-top(|phase, language)
+   */
+  analyze-top(|phase) = ?(ast, _, _); analyze-top(|phase, <index-origin-language> ast)
+   
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @param phase     The type of analysis phase. There are currently 2 phases to choose from:
+   *                  - Editor():   All information is stored into the index and dependent files
+   *                                are automatically scheduled for re-analysis.
+   *                  - Compile():  No information is stored and no re-analysis is done.
+   * @param language  The name of the language that is being analysed.
+   *
+   * @see analyze-top-internal(|phase, language)
+   */
+  analyze-top(|phase, language):
+    (ast, path, project-path) -> ast'
+    with
+      AnalysedResult(ast', _, _, _, _, _) := <analyze-top-internal(|phase, language)> (ast, path, project-path)
    
-  analyze-top:
-    (ast, path, project-path) -> (ast5, defs, uses, data', added, removed)
+  /**
+   * Analyses given AST and annotates definition and use sites found in the AST with URIs.
+   *
+   * @internal
+   */
+  analyze-top-internal(|phase, language):
+    (ast, path, project-path) -> AnalysedResult(ast5, defs, uses, data', added, removed)
     with
       // Init
       full-path := $[[project-path]/[path]];
-      index-setup(|<index-origin-language> ast, [project-path])
+      index-setup(|language, [project-path])
     with
-      // Store copy of defs for diff and clear file
-      olddefs := <filter(?Def(_))> <index-get-all-in-file> full-path;
-      <index-clear-file> full-path
+      if Editor() := phase then
+      	// Store copy of defs for diff and clear file
+        olddefs := <filter(?Def(_))> <index-get-all-in-file> full-path;
+        <index-clear-file> full-path
+      end
     with
       {| ReadSet, UnresolvedSet:
         readSet := <new-iset>;
@@ -51,32 +95,42 @@
        
         // Add Unresolved annotations, record globals
         (Some(ast2), defs) := <analyze-defs(|Anon(), Anon())> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
-        <index-add-all(|full-path)> defs;
+        if Editor() := phase then
+          <index-add-all(|full-path)> defs
+        end;
 
         // Find DefData
         ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2;
         data := <origin-track-forced(analyze-tree-data)> ast3;
-        <index-add-all(|full-path)> data;
+        if Editor() := phase then
+          <index-add-all(|full-path)> data
+        end;
 
         // Resolve an references in DefData (using what we just stored)
         (data', data-uses) := <analyze-uses> data;
-        <index-remove-all(|full-path)> data;
-        <index-add-all(|full-path)> data';
+        if Editor() := phase then
+          <index-remove-all(|full-path)> data;
+          <index-add-all(|full-path)> data'
+        end;
        
         // Resolve all unresolved references in the tree
         (ast4, uses) := <analyze-uses> ast3;
-        <index-add-all(|full-path)> uses;
+        if Editor() := phase then
+          <index-add-all(|full-path)> uses
+        end;
+        
         ast5         := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast4;
        
         // Store reads into the index (if current language is not testing language)
-        if not(<is-test-input> (ast, path)) then
+        // TODO: Add phase information to reads?
+        if Editor() := phase; not(<is-test-input(|language)> (ast, path)) then
           <index-add-all(|full-path)> <iset-elements> readSet
         end
       |}
     with
       // Schedule re-analysis of dependent files (if current file is not testing language file)
       // HACK: Depends on file extension, could be other languages with .spt extension?
-      if not(<is-test-file> path) then
+      if Editor() := phase; not(<is-test-file> path) then
 	      // Find removed and added definitions
 	      (added, removed) := <analyze-diff> (olddefs, defs);
 	      // Schedule re-analysis of files that have a Use or Read of a removed def and Read of an added def
@@ -96,11 +150,11 @@
  
   // Tests if the current file is just a testing language input
   is-test-file = string-ends-with(|".spt")
-  is-test-input:
+  is-test-input(|language):
     (ast, path) -> (ast, path)
     where
       <is-test-file> path;
-      not(prim("SSL_EXT_origin_language", ast) => "Spoofax-Testing")
+      not(!language => "Spoofax-Testing")
      
   analyze-changed(get-all):
     defs -> filenames

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Fri Feb  3 11:01:09 2012	(r24195)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Fri Feb  3 13:41:56 2012	(r24196)
@@ -104,6 +104,9 @@
   index-get-files-of:
     template -> <prim("LANG_index_get_files_of", template)>
     
+  indexlib-get-all-elements =
+    <mapconcat(index-get-all-in-file)> <index-get-all-files>
+    
   /**
    * Get all index entries that match the given template.
    *

From gabrielkonat at gmail.com  Fri Feb  3 14:52:38 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 03 Feb 2012 13:52:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24197 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans
	spoofax-imp/trunk/...
Message-ID: <20120203135238.D69B2108C004@mx3.tudelft.nl>

Author: gkonat
Date: Fri Feb  3 13:52:38 2012
New Revision: 24197
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24197&sc=1

Log:
Made other experiments work with new analysis-library api changes.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-imports.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/check.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/types.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Fri Feb  3 13:41:56 2012	(r24196)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Fri Feb  3 13:52:38 2012	(r24197)
@@ -6,6 +6,7 @@
   libstratego-aterm
   include/C-without-macros
   lib/editor-common.generated
+  lib/index-library
   lib/analysis-library
   check
   analysis-manual
@@ -19,7 +20,7 @@
     (ast, path, project-path) -> (ast', errors, warnings, notes)
     with
       editor-init;
-      (ast', _, _, _, _, _) := <analyze-top>;
+      ast'     := <analyze-top>;
       errors   := <collect-all(constraint-error, conc)> ast';
       warnings := <collect-all(constraint-warning, conc)> ast';
       notes    := <collect-all(constraint-note, conc)> ast'
@@ -83,15 +84,15 @@
     (node, position, ast, path, project-path) -> proposals'
     where
       editor-init;
-      (ast', _, _, _, _, _) := <analyze-top> (ast, path, project-path);
-      x                     := <collect-one(?COMPLETION(_))> ast';
-      COMPLETION(name)		:= x;
+      ast'              := <analyze-top> (ast, path, project-path);
+      x                 := <collect-one(?COMPLETION(_))> ast';
+      COMPLETION(name)	:= x;
       (
-        proposals           := <index-lookup-all-levels(|name)> x 
+        proposals       := <index-lookup-all-levels(|name)> x 
       <+ 
         proposals 			:= []
       );
-      proposals'            := <map(def-to-name)> proposals
+      proposals'        := <map(def-to-name)> proposals
 
   def-to-name:
-    Def([namespace, name | _]) -> name
\ No newline at end of file
+    Def([namespace, name | _]) -> name

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Fri Feb  3 13:41:56 2012	(r24196)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Fri Feb  3 13:52:38 2012	(r24197)
@@ -4,6 +4,7 @@
   libstratego-lib
   include/C-without-macros
   lib/editor-common.generated
+  lib/index-library
   lib/analysis-library
   analysis-generated
 

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Fri Feb  3 13:41:56 2012	(r24196)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Fri Feb  3 13:52:38 2012	(r24197)
@@ -2,6 +2,7 @@
 
 imports
   include/C-without-macros
+  lib/index-library
   lib/analysis-library
   analysis-generated
 

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str	Fri Feb  3 13:41:56 2012	(r24196)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str	Fri Feb  3 13:52:38 2012	(r24197)
@@ -4,6 +4,7 @@
   libstratego-lib
   include/CSharpPartialClassses
   lib/editor-common.generated
+  lib/index-library
   lib/analysis-library
   analysis-generated
 

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Fri Feb  3 13:41:56 2012	(r24196)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Fri Feb  3 13:52:38 2012	(r24197)
@@ -6,6 +6,7 @@
   libstratego-aterm
   include/CSharpPartialClassses
   lib/editor-common.generated
+  lib/index-library
   lib/analysis-library
   check
   analysis-manual
@@ -19,7 +20,7 @@
     (ast, path, project-path) -> (ast', errors, warnings, notes)
     with
       editor-init;
-      (ast', _, _, _, _, _) := <analyze-top>;
+      ast'     := <analyze-top>;
       errors   := <collect-all(constraint-error, conc)> ast';
       warnings := <collect-all(constraint-warning, conc)> ast';
       notes    := <collect-all(constraint-note, conc)> ast'
@@ -83,15 +84,15 @@
     (node, position, ast, path, project-path) -> proposals'
     where
       editor-init;
-      (ast', _, _, _, _, _) := <analyze-top> (ast, path, project-path);
-      x                     := <collect-one(?COMPLETION(_))> ast';
-      COMPLETION(name)		:= x;
+      ast'              := <analyze-top> (ast, path, project-path);
+      x                 := <collect-one(?COMPLETION(_))> ast';
+      COMPLETION(name)  := x;
       (
-        proposals           := <index-lookup-all-levels(|name)> x 
+        proposals       := <index-lookup-all-levels(|name)> x 
       <+ 
         proposals 			:= []
       );
-      proposals'            := <map(def-to-name)> proposals
+      proposals'        := <map(def-to-name)> proposals
 
   def-to-name:
     Def([namespace, name | _]) -> name

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Fri Feb  3 13:41:56 2012	(r24196)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Fri Feb  3 13:52:38 2012	(r24197)
@@ -2,6 +2,7 @@
 
 imports
   include/CSharpPartialClassses
+  lib/index-library
   lib/analysis-library
 
 signature constructors

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb  3 13:41:56 2012	(r24196)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb  3 13:52:38 2012	(r24197)
@@ -67,12 +67,14 @@
     (ast, path, project-path) -> ast'
     with
       AnalysedResult(ast', _, _, _, _, _) := <analyze-top-internal(|phase, language)> (ast, path, project-path)
-   
+  
   /**
    * Analyses given AST and annotates definition and use sites found in the AST with URIs.
    *
    * @internal
    */
+  analyze-top-internal = analyze-top-internal(|Editor())
+  analyze-top-internal(|phase) = ?(ast, _, _); analyze-top-internal(|phase, <index-origin-language> ast)
   analyze-top-internal(|phase, language):
     (ast, path, project-path) -> AnalysedResult(ast5, defs, uses, data', added, removed)
     with

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-imports.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-imports.str	Fri Feb  3 13:41:56 2012	(r24196)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-imports.str	Fri Feb  3 13:52:38 2012	(r24197)
@@ -2,6 +2,7 @@
 
 imports
   include/NamingExperiment
+  lib/index-library
   lib/analysis-library
   analysis-generated
 

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/check.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/check.str	Fri Feb  3 13:41:56 2012	(r24196)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/check.str	Fri Feb  3 13:52:38 2012	(r24197)
@@ -4,6 +4,7 @@
   libstratego-lib
   include/NamingExperiment
   lib/editor-common.generated
+  lib/index-library
   lib/analysis-library
   analysis-generated
   types

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Fri Feb  3 13:41:56 2012	(r24196)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Fri Feb  3 13:52:38 2012	(r24197)
@@ -6,6 +6,7 @@
   libstratego-aterm
   include/NamingExperiment
   lib/editor-common.generated
+  lib/index-library
   lib/analysis-library
   check
   generate
@@ -22,7 +23,7 @@
     (ast, path, project-path) -> (ast', errors, warnings, notes)
     with
       editor-init;
-      (ast', _, _, _, _, _) := <analyze-top>;
+      ast'     := <analyze-top>;
       errors   := <collect-all(constraint-error, conc)> ast';
       warnings := <collect-all(constraint-warning, conc)> ast';
       notes    := <collect-all(constraint-note, conc)> ast'
@@ -47,14 +48,14 @@
     with
       editor-init;
       filename := <guarantee-extension(|"analyzed.aterm")> path;
-      (_, result, _, _, _, _) := <analyze-top> (selected, path, project-path)
+      AnalysedResult(_, result, _, _, _, _) := <analyze-top-internal> (selected, path, project-path)
   
   generate-uses:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       editor-init;
       filename := <guarantee-extension(|"analyzed.aterm")> path;
-      (_, _, result, _, _, _) := <analyze-top> (selected, path, project-path)
+      AnalysedResult(_, _, result, _, _, _) := <analyze-top-internal> (selected, path, project-path)
   
   /*
   generate-reads:
@@ -109,15 +110,15 @@
     (node, position, ast, path, project-path) -> proposals'
     where
       editor-init;
-      (ast', _, _, _, _, _) := <analyze-top> (ast, path, project-path);
-      x                     := <collect-one(?COMPLETION(_))> ast';
-      COMPLETION(name)		:= x;
+      ast'              := <analyze-top> (ast, path, project-path);
+      x                 := <collect-one(?COMPLETION(_))> ast';
+      COMPLETION(name)	:= x;
       (
-        proposals           := <index-lookup-all-levels(|name)> x 
+        proposals       := <index-lookup-all-levels(|name)> x 
       <+ 
         proposals 			:= []
       );
-      proposals'            := <map(def-to-name)> proposals
+      proposals'        := <map(def-to-name)> proposals
 
   def-to-name:
-    Def([namespace, name | _]) -> name
\ No newline at end of file
+    Def([namespace, name | _]) -> name

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/types.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/types.str	Fri Feb  3 13:41:56 2012	(r24196)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/types.str	Fri Feb  3 13:52:38 2012	(r24197)
@@ -2,6 +2,7 @@
 
 imports
   include/NamingExperiment
+  lib/index-library
   lib/analysis-library
 
 signature constructors

From tobivollebregt at gmail.com  Fri Feb  3 16:58:38 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Fri, 03 Feb 2012 15:58:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24198 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: .
	.externalToolBuilders META-INF editor editor/java
	editor/java/org editor/java/org/strategoxt editor/jav...
Message-ID: <20120203155838.5373BCC2D5@mx4.tudelft.nl>

Author: tvo
Date: Fri Feb  3 15:58:38 2012
New Revision: 24198
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24198&sc=1

Log:
TemplateLang editor/library

(for better separation of concerns)

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.classpath
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/TemplateLang build.main.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.project
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Colorer.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Completions.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Folding.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Outliner.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-References.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Syntax.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang.main.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/Activator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateLangParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateLangParseControllerGenerated.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateLangValidator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EditorService.def
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EditorService.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EmbeddedStratego.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EmbeddedStrategoMix.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/SDF.def
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/SDFMix.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-Attributes.def
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-EditorService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-Sdf2.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/StrategoStratego.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/refactor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/plugin.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXCommon.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXFake.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/TemplateLang.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-string.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/.classpath	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<classpath>
+	<classpathentry kind="src" excluding="trans/**" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/TemplateLang build.main.xml.launch
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/TemplateLang build.main.xml.launch	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
+<stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.antHome&quot;&gt;&#10;&lt;memento default=&quot;true&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.ant.ui.classpathentry.extraClasspathEntries&quot;&gt;&#10;&lt;memento/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
+</listAttribute>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
+<stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.template/build.main.xml}"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.strategoxt.imp.editors.template}"/>
+<stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
+</launchConfiguration>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/.project	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<projectDescription>
+      <name>org.strategoxt.imp.editors.template</name>
+      <comment></comment>
+      <buildSpec>
+        <buildCommand>
+          <name>org.eclipse.jdt.core.javabuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+            <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+            <triggers>full,incremental,</triggers>
+            <arguments>
+                <dictionary>
+                    <key>LaunchConfigHandle</key>
+                    <value>&lt;project&gt;/.externalToolBuilders/TemplateLang build.main.xml.launch</value>
+                </dictionary>
+            </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.ManifestBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+        <buildCommand>
+          <name>org.eclipse.pde.SchemaBuilder</name>
+          <arguments>
+          </arguments>
+        </buildCommand>
+      </buildSpec>
+      <natures>
+        <nature>org.eclipse.pde.PluginNature</nature>
+        <nature>org.eclipse.jdt.core.javanature</nature>
+      </natures>
+    </projectDescription>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,21 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: TemplateLang Plug-in
+Bundle-SymbolicName: org.strategoxt.imp.editors.template; singleton:=true
+Bundle-Version: 1.0.0
+Bundle-Activator: org.strategoxt.imp.editors.template.Activator
+Import-Package: org.osgi.framework;version="1.3.0"
+Require-Bundle: org.eclipse.core.runtime,
+  org.eclipse.core.resources,
+  org.eclipse.imp.runtime,
+  org.eclipse.ui,
+  lpg.runtime,
+  org.eclipse.jface.text,
+  org.eclipse.ui.editors,
+  org.eclipse.ui.workbench.texteditor,
+  org.strategoxt.imp.runtime,
+  org.spoofax.jsglr,
+  org.strategoxt.strj
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Bundle-ActivationPolicy: lazy
+Export-Package: org.strategoxt.imp.editors.template

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.generated.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.generated.xml	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,637 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${src-gen}/org/strategoxt/imp/editors/template/strategies/Main.java" property="java.jar.enabled"/>
+        <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.template.strategies" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <condition property="java.jar.classpath" value=":${include}/${strmodule}-java.jar" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <available classname="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
+        
+        <fail unless="build" message="Please use build.main.xml to build this project or configure the required properties manually"/>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.convertPath fileSystemPath="${syntax}" property="syntaxdir"/>
+            <eclipse.convertPath fileSystemPath="${lib}" property="libdir"/>
+            <eclipse.refreshLocal resource="${libdir}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${syntaxdir}/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${libdir}/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+        
+        <target name="init" if="eclipse.running">
+            <!-- refresh one file/dir in the project to trigger an Ant rebuild with the next build command -->
+            <java classname="org.strategoxt.imp.metatooling.building.AntForceRefreshScheduler" failonerror="false">
+                <arg value="${include}"/>
+            </java>
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="meta-sdf2table" if="metasdfmodule.available">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <srcfileset dir="${lib}">
+                    <include name="**/*.def"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper.fallback"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+
+    	<target name="sdf2parenthesize.helper.fallback" unless="sdf2parenthesize.available">
+        	<echo file="${include}/${sdfmodule}-parenthesize.str" message="module include/${sdfmodule}-parenthesize rules parenthesize-${sdfmodule} = id"/>
+    	</target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-t"/>
+                <arg value="-b"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <fileset dir="${basedir}" id="aster-input-set">
+              <include name="**/*.astr"/>
+            </fileset>
+            <pathconvert pathsep=" " setonempty="false" property="aster-input" refid="aster-input-set"/>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg line="${aster-input}"/>
+            </java>
+        </target>
+        
+        <target name="java.jar" if="java.jar.enabled">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${include}/${strmodule}.ctree"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- begin: targets used for adding debugging instrumentation to stratego -->
+        
+        <!-- 
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug 
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- 
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- value determines which target will be executed.
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
+        -->
+        <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
+            <available file=".debugmode"/>
+        </condition>
+        
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+        
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar unless debug.build.enabled property is set --> 
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+        
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="trans/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments --> 
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+                  
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> --> 
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+        
+        
+        <!-- end: targets used for adding debugging instrumentation to stratego -->
+
+
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+            <delete file="${include}/${sdfmodule}.def"/>
+            <delete dir="${src-gen}/trans"/>
+        </target>
+    </project>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,89 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="TemplateLang" default="all">
+
+	<!-- Key input modules -->
+	<property name="sdfmodule" value="TemplateLang" />
+	<property name="metasdfmodule" value="Stratego-TemplateLang" />
+	<property name="esvmodule" value="TemplateLang" />
+	<property name="strmodule" value="templatelang" />
+
+	<!-- Project directories -->
+	<property name="trans" location="trans" />
+	<property name="src-gen" location="editor/java" />
+	<property name="syntax" location="syntax" />
+	<property name="include" location="include" />
+	<property name="lib" location="lib" />
+	<property name="build" location="bin" />
+	<property name="dist" location="bin/dist" />
+
+	<!-- Imports -->
+	<property name="build.sdf.imports" value="-Idef ${lib}/SDF.def" />
+	<property name="build.stratego.args" value="
+    --library
+    -I &quot;${trans}&quot;
+    -I &quot;${basedir}&quot;
+    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm" />
+
+	<!-- Optional: external .def and .jar locations
+  <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+  <property name="externaljar" value="../lib.jar"/>
+  <property name="externaljarflags" value="-la org.lib"/>
+  -->
+
+	<!-- Environment configuration for command-line builds -->
+	<condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+		<isset property="eclipse.spoofaximp.nativeprefix" />
+	</condition>
+	<property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin" />
+
+	<import file="build.generated.xml" />
+
+	<!-- Main target -->
+	<target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,spoofaximp.default.ctree" />
+
+	<!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
+	<available file="include/Stratego-Sdf2.tbl" property="stratego-sdf2.available" />
+	<target name="meta-sdf2table-stratego-sdf2" unless="stratego-sdf2.available">
+		<fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
+		<antcall target="pack-sdf.helper">
+			<param name="syntax" value="${lib}" />
+			<param name="sdfmodule" value="Stratego-Sdf2" />
+			<param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+		</antcall>
+		<antcall target="sdf2table">
+			<param name="sdfmodule" value="Stratego-Sdf2" />
+		</antcall>
+		<antcall target="meta-sdf2table.helper" />
+	</target>
+
+	<!-- Target to create -Permissive grammar and parse table for Stratego-EditorService.def -->
+	<available file="include/Stratego-EditorService.tbl" property="stratego-esv.available" />
+	<target name="meta-sdf2table-stratego-esv" unless="stratego-esv.available">
+		<fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
+		<antcall target="pack-sdf.helper">
+			<param name="syntax" value="${lib}" />
+			<param name="sdfmodule" value="Stratego-EditorService" />
+			<param name="build.sdf.imports" value="-Idef &quot;${lib}/EditorService.def&quot; -Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+		</antcall>
+		<antcall target="sdf2table">
+			<param name="sdfmodule" value="Stratego-EditorService" />
+		</antcall>
+		<antcall target="meta-sdf2table.helper" />
+	</target>
+
+	<!-- Target to create -Permissive grammar and parse table for StrategoStratego.def -->
+	<available file="include/StrategoStratego.tbl" property="strategostratego.available" />
+	<target name="meta-sdf2table-strategostratego" unless="strategostratego.available">
+		<fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
+		<antcall target="pack-sdf.helper">
+			<param name="syntax" value="${lib}" />
+			<param name="sdfmodule" value="StrategoStratego" />
+			<param name="build.sdf.imports" value="-Idef &quot;${lib}/Stratego-Attributes.def&quot; -Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+		</antcall>
+		<antcall target="sdf2table">
+			<param name="sdfmodule" value="StrategoStratego" />
+		</antcall>
+		<antcall target="meta-sdf2table.helper" />
+	</target>
+</project>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.properties	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,8 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               lib/,\
+               .

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,33 @@
+module TemplateLang-Builders
+
+imports TemplateLang-Builders.generated
+
+builders
+
+  // This file can be used for custom analysis, builder and refactoring rules.
+  //
+  // See the imported file for a brief introduction and examples.
+
+builders
+
+  provider : include/templatelang.ctree
+  // provider : include/templatelang-java.jar
+
+  observer : editor-analyze
+
+  // builder  : "Generate Java code (for selection)"   = generate-java (openeditor) (realtime)
+  builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (source)
+  builder  : "Show desugared AST (for selection)" = generate-desugared-aterm (openeditor) (realtime)
+  builder  : "Show expanded templates (for selection)" = generate-expanded (openeditor) (realtime)
+  builder  : "Generate ESV (for selection)" = generate-esv (openeditor) (realtime)
+
+refactorings
+
+  pretty-print : pp-templatelang-string
+
+  // refactoring ID : "Rename Entity" = rename-entity (source) (cursor)
+  //   shortcut : "org.eclipse.jdt.ui.edit.text.java.rename.element"
+  //   input
+  //     identifier : "new name" = ""
+
+  // on save: generate-java

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Colorer.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Colorer.esv	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,9 @@
+module TemplateLang-Colorer
+
+imports TemplateLang-Colorer.generated
+
+colorer
+
+  // This file can be used for custom colorer rules.
+  //
+  // See the imported file for a brief introduction and examples.

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Completions.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Completions.esv	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,17 @@
+module TemplateLang-Completions
+
+imports TemplateLang-Completions.generated
+
+completions
+
+  // This file is used to define content completion.
+  //
+  // See the imported file for a brief introduction and examples.
+
+
+completions
+  // Semantic (identifier) completion:
+
+//   completion proposer                  : editor-complete
+// 
+//   completion trigger                   : ":"

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Folding.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Folding.esv	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,9 @@
+module TemplateLang-Folding
+
+imports TemplateLang-Folding.generated
+
+folding
+
+  // This file can be used for custom folding rules.
+  //
+  // See the imported file for a brief introduction and examples.

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Outliner.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Outliner.esv	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,9 @@
+module TemplateLang-Outliner
+
+imports TemplateLang-Outliner.generated
+
+outliner
+
+  // This file can be used for custom outliner rules.
+  //
+  // See the imported file for a brief introduction and examples.

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-References.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-References.esv	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,15 @@
+module TemplateLang-References
+
+imports TemplateLang-References.generated
+
+references
+
+  // This file can be used to specify reference resolving and hover help, and content completion.
+  //
+  // See the imported file for a brief introduction and examples.
+
+
+references
+
+  // reference _ : editor-resolve
+  // hover _     : editor-hover

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Syntax.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Syntax.esv	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,9 @@
+module TemplateLang-Syntax
+
+imports TemplateLang-Syntax.generated
+
+language
+
+  // This file can be used for custom syntax rules.
+  //
+  // See the imported file for a brief introduction and examples.

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang.main.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang.main.esv	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,16 @@
+module TemplateLang.main
+
+imports TemplateLang-Builders TemplateLang-Colorer TemplateLang-Completions TemplateLang-Folding TemplateLang-Outliner TemplateLang-References TemplateLang-Syntax
+
+language General properties
+
+  name          : TemplateLang
+  id            : org.strategoxt.imp.editors.template
+  extends       : Root
+
+  description   : "Spoofax/IMP-generated editor for the TemplateLang language"
+  url           : http://strategoxt.org
+
+  extensions    : tmpl
+  table         : include/TemplateLang.tbl
+  start symbols : Start

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/Activator.java	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,44 @@
+package org.strategoxt.imp.editors.template;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "TemplateLang";
+
+  public static final String kLanguageName = "TemplateLang";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateLangParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateLangParseController.java	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,4 @@
+package org.strategoxt.imp.editors.template;
+
+public class TemplateLangParseController extends TemplateLangParseControllerGenerated 
+{ }
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateLangParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateLangParseControllerGenerated.java	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,108 @@
+package org.strategoxt.imp.editors.template;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class TemplateLangParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("TemplateLang");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    TemplateLangParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = TemplateLangParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = TemplateLangParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(TemplateLangParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return TemplateLangParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateLangValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/java/org/strategoxt/imp/editors/template/TemplateLangValidator.java	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,12 @@
+package org.strategoxt.imp.editors.template;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class TemplateLangValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return TemplateLangParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EditorService.def
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EditorService.def	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,493 @@
+definition
+module RefactoringsService
+
+imports
+  SemanticServices
+  BuildersService
+
+exports
+  
+  syntax
+  
+    "refactorings" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Refactorings")}
+
+    "refactorings" -> <ReservedName-CF>
+  
+  context-free syntax
+  	
+  	"pp-table" ":" StrategoCall -> SemanticRule {cons("PPTable")}
+  	"pretty-print" ":" StrategoCall -> SemanticRule {cons("PrettyPrint")}
+    "refactoring"  SemanticNode* ":" String "="   StrategoCall BuilderOption* -> SemanticRule {cons("Refactoring")}
+
+module BuildersService
+
+imports
+  SemanticServices
+
+exports
+  
+  syntax
+  
+    "builders" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Builders")}
+
+    "builders" -> <ReservedName-CF>
+  
+    "analysis" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Builders"), deprecated("Use 'builders' instead")}
+
+    "analysis" -> <ReservedName-CF>
+
+  context-free syntax
+    
+    "observer" ":" StrategoCall                           -> SemanticRule {cons("SemanticObserver")}
+    "builder"  ":" String "=" StrategoCall BuilderOption* -> SemanticRule {cons("Builder")}
+    "builder" "caption" ":" PropertyValue                 -> SemanticRule {cons("BuilderCaption")}
+    
+    "(openeditor)" -> BuilderOption {cons("OpenEditor")}
+    "(realtime)"   -> BuilderOption {cons("RealTime")}
+    "(persistent)" -> BuilderOption {cons("Persistent")}
+    "(meta)"       -> BuilderOption {cons("Meta")}
+    "(cursor)"     -> BuilderOption {cons("Cursor")}
+    "(source)"     -> BuilderOption {cons("Source")}
+
+module CompletionsService
+
+imports
+  SemanticServices
+
+exports
+
+  sorts
+    CompletionPart CompletionAnno
+
+  syntax
+
+    "completions" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("Completions")}
+
+    "completions" -> <ReservedName-CF>
+
+  context-free syntax
+
+    "completion" "proposer" ":" StrategoCall -> SemanticRule {cons("CompletionProposer")}
+
+    "completion" "lexical" ":" PropertyValue -> SemanticRule {cons("IdentifierLexical"), deprecated("Use 'identifier lexical' instead")}
+
+    "identifier" "lexical" ":" PropertyValue -> SemanticRule {cons("IdentifierLexical")}
+
+    "completion" "keyword" ":" PropertyValue OptCompletionAnno -> SemanticRule {cons("CompletionKeyword")}
+
+    %% Deprecated: conflicts with content completion
+    "completion" "template" ":" Id CompletionPart+ OptCompletionAnno -> SemanticRule {cons("CompletionTemplate"), avoid, deprecated("Add quotes to the starting literal")}
+
+    %% Deprecated: replaced by CompletionTemplateEx
+    "completion" "template" ":" Sort "=" CompletionPart CompletionPart* OptCompletionAnno -> SemanticRule {cons("CompletionTemplateWithSort"), avoid} %% deprecated("Move the sort before ':' and remove '='")
+
+    %% Used as content completion triggers
+    %% "completion" "template" PropertyValue CompletionPart* OptCompletionAnno -> SemanticRule {cons("CompletionTemplate"), recover, avoid}
+    "completion" "template" Sort* ":" PropertyValue CompletionPart* CompletionAnno* -> SemanticRule {cons("CompletionTemplateEx"), recover, avoid}
+
+    "completion" "trigger" ":" PropertyValue OptCompletionAnno -> SemanticRule {cons("CompletionTrigger")}
+
+    %% New completion template
+    "completion" "template" Sort* ":" CompletionPrefix CompletionPart+ CompletionAnno* -> SemanticRule {cons("CompletionTemplateEx")}
+
+               -> CompletionPrefix {cons("NoCompletionPrefix")}
+    String "=" -> CompletionPrefix {cons("CompletionPrefix")}
+
+  context-free syntax
+
+    "completions" -> StrategoCall {reject}
+    "completion"  -> StrategoCall {reject}
+    "identifier"  -> StrategoCall {reject}
+    "observer"    -> StrategoCall {reject}
+    "builder"     -> StrategoCall {reject}
+    "occurrence"  -> StrategoCall {reject}
+    ReservedName  -> StrategoCall {reject}
+
+    String      -> CompletionPart
+    Placeholder -> CompletionPart {cons("Placeholder")}
+    "(cursor)"  -> CompletionPart {cons("Cursor")}
+    PlaceholderWithSortPrefix Id ">" -> CompletionPart {cons("PlaceholderWithSort")}
+
+                   -> OptCompletionAnno {cons("None")}
+    CompletionAnno -> OptCompletionAnno
+
+    "(disabled)" -> CompletionAnno {cons("Disable")}
+    "(disable)"  -> CompletionAnno {cons("Disable"), deprecated("Use (disabled) instead")}
+    "(blank)"    -> CompletionAnno {cons("Blank")}
+    "(linked)"   -> CompletionAnno {cons("Linked")}
+    "(blank)"    -> PropertyValue {reject}
+    "(disable)"  -> PropertyValue {reject}
+    "(linked)"   -> PropertyValue {reject}
+    "completion" -> PropertyValue {reject}
+    "template"   -> PropertyValue {reject}
+    "trigger"    -> PropertyValue {reject}
+    "identifier" -> PropertyValue {reject}
+
+  lexical syntax
+
+    "<" PlaceholderChar* ":" -> PlaceholderWithSortPrefix
+    "<" PlaceholderChar* ">" -> Placeholder
+    ~[\:\>\n]                -> PlaceholderChar
+
+
+module ReferencesService
+
+imports
+  SemanticServices
+
+exports
+
+  syntax
+  
+    "references" <SectionName-LEX> <LAYOUT?-CF> <SemanticRule*-CF> -> <Section-CF> {cons("References")}
+
+    "references" -> <ReservedName-CF>
+
+  context-free syntax
+  
+    "reference"  SemanticNode ":" StrategoCall StrategoCall -> SemanticRule {cons("ReferenceHoverRule"), deprecated}
+
+    "reference"  SemanticNode ":" StrategoCall -> SemanticRule {cons("ReferenceRule")}
+
+    "hover"      SemanticNode ":" StrategoCall -> SemanticRule {cons("HoverRule")}
+  
+    "occurrence" SemanticNode ":" StrategoCall -> SemanticRule {cons("OccurrenceRule")}
+  
+  context-free syntax
+  
+    "references" -> StrategoCall {reject}
+    "reference"  -> StrategoCall {reject}
+    "hover"      -> StrategoCall {reject}
+
+module ColorerService
+
+imports
+  Common
+
+exports
+
+  sorts
+  
+    ColorRule Font Color ColorNode MaybeColor NoColor
+    TokenKindName AttributeId Attribute
+
+  syntax
+  
+    "colorer" <SectionName-LEX> <LAYOUT?-CF> <ColorRule*-CF> -> <Section-CF> {cons("Colorer")}
+    
+    "colorer" -> <ReservedName-CF>
+
+  context-free syntax
+  
+    "environment" ColorNode ":" Attribute -> ColorRule {cons("ColorRuleAll")} %% One rule to rule them all
+                  ColorNode ":" Attribute -> ColorRule {cons("ColorRule")}
+    
+    "environment" ColorNode ":" String "=" Attribute -> ColorRule {cons("ColorRuleAllNamed")}
+                  ColorNode ":" String "=" Attribute -> ColorRule {cons("ColorRuleNamed")}
+
+    Color   MaybeColor Font -> Attribute {cons("Attribute")}
+    AttributeId             -> Attribute {cons("AttributeRef")}
+    
+    Node          -> ColorNode
+    TokenKindName -> ColorNode {cons("Token"), prefer}
+    "token" Id    -> ColorNode {cons("Literal")}
+    
+    "identifier" -> TokenKindName {cons("TK_IDENTIFIER")}
+    "number"     -> TokenKindName {cons("TK_NUMBER")}
+    "layout"     -> TokenKindName {cons("TK_LAYOUT")}
+    "string"     -> TokenKindName {cons("TK_STRING")}
+    "keyword"    -> TokenKindName {cons("TK_KEYWORD")}
+    "operator"   -> TokenKindName {cons("TK_OPERATOR")}
+    "var"        -> TokenKindName {cons("TK_VAR")}
+    "error"      -> TokenKindName {cons("TK_ERROR")}
+    "unknown"    -> TokenKindName {cons("TK_UNKNOWN")}
+    
+                    -> Font {cons("NORMAL")}
+    "bold"          -> Font {cons("BOLD")}
+    "italic"        -> Font {cons("ITALIC")}
+    "bold" "italic" -> Font {cons("BOLD_ITALIC")}
+    "italic" "bold" -> Font {cons("BOLD_ITALIC")}
+
+    %% TODO: Default "font" attribute? (would need disambiguation and merging support)
+    %%
+    %% "_" -> Font {cons("NORMAL")}
+    
+    "_"         -> Color {cons("ColorDefault")}
+    Int Int Int -> Color {cons("ColorRGB")}
+                -> NoColor {cons("NoColor")}
+    Color       -> MaybeColor
+    NoColor     -> MaybeColor
+
+    AttributeId "=" Attribute -> ColorRule {cons("ColorDef")}
+    
+    Id             -> AttributeId          %% Standard color name (e.g., 'red')
+    String         -> AttributeId          %% Descriptive color name (could be shown in IDE)
+    "_"            -> AttributeId {reject}
+    Font           -> AttributeId {reject}
+    "environment"  -> AttributeId {reject}
+
+module OutlinerService
+
+imports
+  Common
+  %% TODO: Maybe -- StrategoMix[StrategoExpr]
+
+exports
+
+  sorts
+    OutlineRule Pattern Term PreTerm
+
+  syntax
+  
+    "outliner" <SectionName-LEX> <LAYOUT?-CF> <OutlineRule*-CF> -> <Section-CF> {cons("Outliner")}
+    
+    "outliner" -> <ReservedName-CF>
+
+  context-free syntax
+
+    Node                 -> OutlineRule {cons("OutlineRule"), prefer}
+
+module FoldingService
+
+imports
+  Common
+
+exports
+
+  sorts
+    FoldingRule FoldingAnno
+
+  syntax
+  
+    "folding" <SectionName-LEX> <LAYOUT?-CF> <FoldingRule*-CF> -> <Section-CF> {cons("Folding")}
+    
+    "folding" -> <ReservedName-CF>
+  
+  context-free syntax
+    
+    %% TODO: Reconsider "all" keyword for siblings; we already have list sorts using '*'
+    
+          Node FoldingAnno -> FoldingRule {cons("FoldRule")}
+    "all" Node FoldingAnno -> FoldingRule {cons("FoldRuleAll")}
+
+    "(disable)"  -> FoldingAnno {cons("Disable"), deprecated("Use (disabled) instead")}
+    "(disabled)" -> FoldingAnno {cons("Disable")}
+    "(folded)"   -> FoldingAnno {cons("Folded")}
+                 -> FoldingAnno {cons("None")}
+
+module SemanticServices
+
+imports
+  Common LanguageDescription
+
+exports
+
+  sorts
+    SemanticRule SemanticNode StrategoId StrategoCall OnSaveAnno
+
+  lexical syntax
+
+    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]* -> StrategoId
+  
+    "_"  -> SemanticNode
+
+  lexical restrictions
+  
+    StrategoId -/- [a-zA-Z0-9\'\-\_]
+
+  context-free syntax
+     
+     Node -> SemanticNode
+    "provider"     PropertyValue -> SemanticRule {cons("SemanticProvider"), deprecated("Use 'provider :'")}
+    "provider" ":" PropertyValue -> SemanticRule {cons("SemanticProvider")}
+
+    "on" "save" ":" StrategoCall OnSaveAnno -> SemanticRule {cons("OnSave")}
+
+             StrategoId -> StrategoCall {cons("Strategy")}
+    "id" "." StrategoId -> StrategoCall {cons("Attribute")}
+    
+                        -> OnSaveAnno {cons("None")}
+
+module LanguageDescription
+
+imports
+	Common SemanticServices
+
+exports
+  
+  sorts
+  
+    LanguageProperty PropertyValue NoContinuation PropertyValues URL
+    FenceDef BlockCommentDef IndentDef
+  
+  syntax
+  
+    "language" <SectionName-LEX> <LAYOUT?-CF> <LanguageProperty*-CF> -> <Section-CF> {cons("Language")}
+    
+    "language" -> <ReservedName-CF>
+  
+  lexical syntax
+    
+    ~[\ \t\n\r\,\:\"\=]+ -> PropertyValue {avoid}
+
+    ~[\ \t\n\r\,\/\:]+ "://" ~[\ \t\n\r]+ -> URL
+  
+  lexical restrictions
+  
+  	PropertyValue -/- ~[\ \t\n\r\,\:\"\=]
+  	URL           -/- ~[\ \t\n\r]
+  
+  context-free syntax
+  
+    { PropertyValue ","}* -> PropertyValues {cons("Values")}
+    String                -> PropertyValue
+  
+  	%% General language properties
+  
+    "name"            ":" PropertyValue  -> LanguageProperty {cons("LanguageName")}
+    "id"              ":" PropertyValue  -> LanguageProperty {cons("LanguageId")}
+    "extensions"      ":" PropertyValues -> LanguageProperty {cons("Extensions")}
+    "description"     ":" PropertyValue  -> LanguageProperty {cons("Description")}
+    "table"           ":" PropertyValue  -> LanguageProperty {cons("Table")}
+    "table" "provider" ":" StrategoCall  -> LanguageProperty {cons("TableProvider")}
+    "start" "symbols" ":" Sort*          -> LanguageProperty {cons("StartSymbols")}
+    "start" "symbols" ":" PropertyValues -> LanguageProperty {cons("StartSymbols"), avoid}
+    "url"             ":" URL            -> LanguageProperty {cons("URL")}
+    "extends"         ":" PropertyValues -> LanguageProperty {cons("Extends")}
+    "aliases"         ":" PropertyValues -> LanguageProperty {cons("Aliases")} %% deprecated
+    "unmanaged" "table" ":" Id "*"       -> LanguageProperty {cons("UnmanagedTablePrefix")}
+    "disambiguator"   ":" StrategoCall   -> LanguageProperty {cons("Disambiguator")}
+   
+     %% Syntax properties
+     
+     "line"  "comment" ":" PropertyValue      -> LanguageProperty {cons("LineCommentPrefix")}
+     "block" "comment" ":" BlockCommentDef    -> LanguageProperty {cons("BlockCommentDefs")}
+     "fences"          ":" FenceDef*          -> LanguageProperty {cons("FenceDefs")}
+     "indent" "after"  ":" IndentDef*         -> LanguageProperty {cons("IndentDefs")}
+     "identifier" "lexical" ":" PropertyValue -> LanguageProperty {cons("IdentifierLexical")}
+     
+     PropertyValue PropertyValue  PropertyValue -> BlockCommentDef {cons("BlockCommentDef")}
+     PropertyValue NoContinuation PropertyValue -> BlockCommentDef {cons("BlockCommentDef")}
+                                                -> NoContinuation {cons("NoContinuation")}
+     
+     PropertyValue PropertyValue -> FenceDef {cons("FenceDef")}
+     PropertyValue               -> IndentDef {cons("IndentDef")}
+     
+     %% Avoid ambiguities with fencedef pairs
+     "fences"     -> PropertyValue {reject}
+     "identifier" -> PropertyValue {reject}
+     "indent"     -> PropertyValue {reject}
+     "fences"     -> PropertyValue {reject}
+     "line"       -> PropertyValue {reject}
+     "block"      -> PropertyValue {reject}
+     "unmanaged"  -> Sort {reject}
+
+module Common
+
+exports
+
+  sorts
+    Id IdStar Int STRING CHAR BACKSLASH String Node Sort Constructor ConstructorId
+    ReservedName SectionName ModuleName Section Eof
+    Ws ShortCom LongCom CommChar
+
+  lexical syntax
+  
+    [a-zA-Z][a-zA-Z0-9\'\-\_]*     -> Id
+    [a-zA-Z][a-zA-Z0-9\'\-\_]* "*" -> IdStar
+    "-"? [0-9]+                    -> Int
+    "\"" StringChar* "\""          -> STRING
+    ~[\"\n\\]                      -> StringChar
+    "\\\""                         -> StringChar
+    BACKSLASH                      -> StringChar
+    "\\"                           -> BACKSLASH
+    
+    ~[\n\r]*                       -> SectionName
+
+    [\t\ \n\r]               -> Ws
+    "//" ~[\n]* ([\n] | Eof) -> ShortCom
+    "/*" CommChar* "*/"      -> LongCom
+    ~[\*]                    -> CommChar
+    Asterisk                 -> CommChar
+    "*"                      -> Asterisk
+    Ws                       -> LAYOUT
+    ShortCom                 -> LAYOUT
+    LongCom                  -> LAYOUT
+                             -> Eof
+  
+  lexical restrictions
+  
+    Int         -/- [0-9]
+    Id          -/- [a-zA-Z0-9\'\-\_]
+    SectionName -/- ~[\n\r]
+    Asterisk    -/- [\/]
+    BACKSLASH   -/- [\"]
+    Eof         -/- ~[]
+
+  context-free restrictions
+
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\*]
+    LAYOUT? -/- [\/].[\/]
+
+  context-free syntax
+  
+    Id     -> Sort {cons("Sort")}
+    Id "*" -> Sort {cons("ListSort")}
+    STRING -> String {cons("String")}
+    
+    %% nice, but makes C-SGLR fail to parse create-builders-desciptor.str properly
+    %%        -> String {recover, avoid, ast("String(\"\")")}
+
+    Sort "." "_" -> Sort {bracket}
+    
+    "_" "." ConstructorId -> Constructor {cons("ConstructorOnly")}
+                       Id -> ConstructorId {cons("Constructor")}
+    
+    Sort                   -> Node
+    Constructor            -> Node
+    Sort "." ConstructorId -> Node {cons("SortAndConstructor")}
+    
+    ReservedName -> Node       {reject}
+    ReservedName -> ModuleName {reject}
+
+module EditorService
+
+imports
+  Common
+  LanguageDescription
+  FoldingService
+  OutlinerService
+  ColorerService
+  ReferencesService
+  CompletionsService
+  BuildersService
+  RefactoringsService
+
+hiddens
+
+  context-free start-symbols
+    Module
+
+exports
+
+  sorts
+    Module FileName ModuleName Imports Import
+
+  lexical syntax
+  
+    [a-zA-Z0-9\-\_\.]+ -> FileName
+    {FileName "/"}+    -> ModuleName
+  
+  lexical restrictions
+  
+  	FileName    -/- [a-zA-Z0-9\-\_\.]
+
+  context-free syntax
+  	
+    "module" ModuleName Imports Section* -> Module {cons("Module")}
+    "imports" Import+                    -> Imports {cons("Imports")}
+                                         -> Imports {cons("NoImports")}
+
+    ModuleName            -> Import {cons("Import")}
+    ModuleName "[" Id "]" -> Import {cons("ImportRenamed")}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EditorService.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EditorService.str	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,149 @@
+module EditorService
+
+signature
+  constructors
+    ImportRenamed              : ModuleName * Id -> Import
+    Import                     : ModuleName -> Import
+    NoImports                  : Imports
+    Imports                    : List(Import) -> Imports
+    Module                     : ModuleName * Imports * List(Section) -> Module
+                               : String -> ModuleName
+    Source                     : BuilderOption
+    Cursor                     : BuilderOption
+    Meta                       : BuilderOption
+    Persistent                 : BuilderOption
+    RealTime                   : BuilderOption
+    OpenEditor                 : BuilderOption
+    Linked                     : CompletionAnno
+    Blank                      : CompletionAnno
+    Disable                    : CompletionAnno
+                               : CompletionAnno -> OptCompletionAnno
+    None                       : OptCompletionAnno
+    PlaceholderWithSort        : PlaceholderWithSortPrefix * Id -> CompletionPart
+    Cursor                     : CompletionPart
+    Placeholder                : Placeholder -> CompletionPart
+                               : String -> CompletionPart
+    CompletionPrefix           : String -> CompletionPrefix
+    NoCompletionPrefix         : CompletionPrefix
+                               : String -> Placeholder
+                               : String -> PlaceholderWithSortPrefix
+                               : String -> AttributeId
+                               : Id -> AttributeId
+                               : NoColor -> MaybeColor
+                               : Color -> MaybeColor
+    NoColor                    : NoColor
+    ColorRGB                   : Int * Int * Int -> Color
+    ColorDefault               : Color
+    BOLD_ITALIC                : Font
+    ITALIC                     : Font
+    BOLD                       : Font
+    NORMAL                     : Font
+    TK_UNKNOWN                 : TokenKindName
+    TK_ERROR                   : TokenKindName
+    TK_VAR                     : TokenKindName
+    TK_OPERATOR                : TokenKindName
+    TK_KEYWORD                 : TokenKindName
+    TK_STRING                  : TokenKindName
+    TK_LAYOUT                  : TokenKindName
+    TK_NUMBER                  : TokenKindName
+    TK_IDENTIFIER              : TokenKindName
+    Literal                    : Id -> ColorNode
+    Token                      : TokenKindName -> ColorNode
+                               : Node -> ColorNode
+    AttributeRef               : AttributeId -> Attribute
+    Attribute                  : Color * MaybeColor * Font -> Attribute
+    ColorDef                   : AttributeId * Attribute -> ColorRule
+    ColorRuleNamed             : ColorNode * String * Attribute -> ColorRule
+    ColorRuleAllNamed          : ColorNode * String * Attribute -> ColorRule
+    ColorRule                  : ColorNode * Attribute -> ColorRule
+    ColorRuleAll               : ColorNode * Attribute -> ColorRule
+    OutlineRule                : Node -> OutlineRule
+    None                       : FoldingAnno
+    Folded                     : FoldingAnno
+    Disable                    : FoldingAnno
+    FoldRuleAll                : Node * FoldingAnno -> FoldingRule
+    FoldRule                   : Node * FoldingAnno -> FoldingRule
+    IndentDef                  : PropertyValue -> IndentDef
+    FenceDef                   : PropertyValue * PropertyValue -> FenceDef
+    NoContinuation             : NoContinuation
+    BlockCommentDef            : PropertyValue * NoContinuation * PropertyValue -> BlockCommentDef
+    BlockCommentDef            : PropertyValue * PropertyValue * PropertyValue -> BlockCommentDef
+    IdentifierLexical          : PropertyValue -> LanguageProperty
+    IndentDefs                 : List(IndentDef) -> LanguageProperty
+    FenceDefs                  : List(FenceDef) -> LanguageProperty
+    BlockCommentDefs           : BlockCommentDef -> LanguageProperty
+    LineCommentPrefix          : PropertyValue -> LanguageProperty
+    UnmanagedTablePrefix       : Id -> LanguageProperty
+    Aliases                    : PropertyValues -> LanguageProperty
+    Extends                    : PropertyValues -> LanguageProperty
+    URL                        : URL -> LanguageProperty
+    StartSymbols               : PropertyValues -> LanguageProperty
+    StartSymbols               : List(Sort) -> LanguageProperty
+    TableProvider              : StrategoCall -> LanguageProperty
+    Table                      : PropertyValue -> LanguageProperty
+    Description                : PropertyValue -> LanguageProperty
+    Extensions                 : PropertyValues -> LanguageProperty
+    LanguageId                 : PropertyValue -> LanguageProperty
+    LanguageName               : PropertyValue -> LanguageProperty
+    Values                     : List(PropertyValue) -> PropertyValues
+                               : String -> URL
+                               : String -> PropertyValue
+                               : String -> PropertyValue
+    Refactorings               : String * List(SemanticRule) -> Section
+    Builders                   : String * List(SemanticRule) -> Section
+    Completions                : String * List(SemanticRule) -> Section
+    References                 : String * List(SemanticRule) -> Section
+    Colorer                    : String * List(ColorRule) -> Section
+    Outliner                   : String * List(OutlineRule) -> Section
+    Folding                    : String * List(FoldingRule) -> Section
+    Language                   : String * List(LanguageProperty) -> Section
+    None                       : OnSaveAnno
+    Attribute                  : StrategoId -> StrategoCall
+    Strategy                   : StrategoId -> StrategoCall
+    Refactoring                : List(SemanticNode) * String * StrategoCall * List(BuilderOption) -> SemanticRule
+    PrettyPrint                : StrategoCall -> SemanticRule
+    PPTable                    : StrategoCall -> SemanticRule
+    BuilderCaption             : PropertyValue -> SemanticRule
+    Builder                    : String * StrategoCall * List(BuilderOption) -> SemanticRule
+    SemanticObserver           : StrategoCall -> SemanticRule
+    CompletionTemplateEx       : List(Sort) * CompletionPrefix * List(CompletionPart) * List(CompletionAnno) -> SemanticRule
+    CompletionTrigger          : PropertyValue * OptCompletionAnno -> SemanticRule
+    CompletionTemplateEx       : List(Sort) * PropertyValue * List(CompletionPart) * List(CompletionAnno) -> SemanticRule
+    CompletionTemplateWithSort : Sort * CompletionPart * List(CompletionPart) * OptCompletionAnno -> SemanticRule
+    CompletionTemplate         : Id * List(CompletionPart) * OptCompletionAnno -> SemanticRule
+    CompletionKeyword          : PropertyValue * OptCompletionAnno -> SemanticRule
+    IdentifierLexical          : PropertyValue -> SemanticRule
+    CompletionProposer         : StrategoCall -> SemanticRule
+    OccurrenceRule             : SemanticNode * StrategoCall -> SemanticRule
+    HoverRule                  : SemanticNode * StrategoCall -> SemanticRule
+    ReferenceRule              : SemanticNode * StrategoCall -> SemanticRule
+    ReferenceHoverRule         : SemanticNode * StrategoCall * StrategoCall -> SemanticRule
+    OnSave                     : StrategoCall * OnSaveAnno -> SemanticRule
+    SemanticProvider           : PropertyValue -> SemanticRule
+                               : Node -> SemanticNode
+                               : String -> SemanticNode
+                               : String -> StrategoId
+    SortAndConstructor         : Sort * ConstructorId -> Node
+                               : Constructor -> Node
+                               : Sort -> Node
+    Constructor                : Id -> ConstructorId
+    ConstructorOnly            : ConstructorId -> Constructor
+    String                     : STRING -> String
+    ListSort                   : Id -> Sort
+    Sort                       : Id -> Sort
+                               : String -> STRING
+                               : String -> Int
+                               : String -> Id
+
+
+signature
+  constructors
+    Some : a -> Option(a)
+    None : Option(a)
+
+
+signature
+  constructors
+    Cons : a * List(a) -> List(a)
+    Nil  : List(a)
+    Conc : List(a) * List(a) -> List(a)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EmbeddedStratego.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EmbeddedStratego.sdf	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,171 @@
+module EmbeddedStratego [E1 E2]
+imports Stratego
+exports
+  context-free syntax
+
+              "|[" Module "]|" -> E1 {cons("ToTerm"),prefer}
+    "Module"  "|[" Module "]|" -> E1 {cons("ToTerm")}
+
+              "|[" Decl   "]|" -> E1 {cons("ToTerm")}
+              "|[" Sdecl  "]|" -> E1 {cons("ToTerm")}
+
+              "|[" Opdecl "]|" -> E1 {cons("ToTerm")}
+    "Constr"  "|[" Opdecl "]|" -> E1 {cons("ToTerm")}
+
+              "|[" Type   "]|" -> E1 {cons("ToTerm")}
+    "Type"    "|[" Type   "]|" -> E1 {cons("ToTerm")}
+
+    "Sort"    "|[" Sort   "]|" -> E1 {cons("ToTerm")}
+
+              "|[" Term   "]|" -> E1 {cons("ToTerm")}
+    "Term"    "|[" Term   "]|" -> E1 {cons("ToTerm")}
+
+              "|[" Def    "]|" -> E1 {cons("ToTerm")}
+    "Def"     "|[" Def    "]|" -> E1 {cons("ToTerm")}
+
+             "|[" Rule      "]|" -> E1 {cons("ToTerm")}
+    "Rule"   "|[" Rule      "]|" -> E1 {cons("ToTerm")}
+             "|[" StratRule "]|" -> E1 {cons("ToTerm")}
+
+               "|[" Strategy "]|" -> E1 {cons("ToTerm")}
+    "Strat"    "|[" Strategy "]|" -> E1 {cons("ToTerm")}
+    "Strategy" "|[" Strategy "]|" -> E1 {cons("ToTerm")}
+
+    "O"        "|[" Overlay  "]|" -> E1 {cons("ToTerm")}
+    "Overlay"  "|[" Overlay  "]|" -> E1 {cons("ToTerm")}
+
+    "Typedid"    "|[" Typedid    "]|" -> E1 {cons("ToTerm")}
+    "DynRuleDef" "|[" DynRuleDef "]|" -> E1 {cons("ToTerm")}
+
+  context-free syntax
+    "~"         E2 -> ModName          {cons("FromTerm")}
+
+    "~"         E2 -> Term             {cons("FromTerm")}
+    "~term:"    E2 -> Term             {cons("FromTerm")}
+    %%"~term*:" E2 -> {Term ","}*      {cons("FromTerm")}
+    "~term*:"   E2 -> {Term ","}+      {cons("FromTerm")}
+    "~"         E2 -> {ID   ","}+      {cons("FromTerm")}
+
+    "~"         E2 -> Strategy         {cons("FromTerm")}
+    "~strat:"   E2 -> Strategy         {cons("FromTerm")}
+    "~*"        E2 -> {Strategy ","}+  {cons("FromTerm")}
+    "~strat*:"  E2 -> {Strategy ","}+  {cons("FromTerm")}
+
+    "~srt:"     E2 -> Sort {cons("FromTerm")}
+    "~srtvar:"  E2 -> LCID {cons("FromTerm")}
+    "~srtid:"   E2 -> UCID {cons("FromTerm")}
+
+    "~id:"    E2 -> Id     {cons("FromTerm")}
+    "~int:"   E2 -> Int    {cons("FromTerm")}
+    "~str:"   E2 -> String {cons("FromTerm")}
+
+    Id "/" Id -> Id {cons("ManglePrefix")}
+    Id "\\" Id -> Id {cons("MangleSuffix")}
+
+    "~"   E2 -> Def       {cons("FromTerm")}
+    "~*"  E2 -> Def+      {cons("FromTerm")}
+
+    "~*"  E2 -> Opdecl+      {cons("FromTerm")}
+    "~*"  E2 -> {Type "*"}+  {cons("FromTerm")}
+
+    "~*"          E2 -> {Typedid ","}+   {cons("FromTerm")}
+    "~typed-id*:" E2 -> {Typedid ","}+   {cons("FromTerm")}
+
+  %%%
+   %% Hacks
+   %%
+   %% Why are these hacks nessary? What do they do?
+   %%%
+  context-free syntax
+    "<" Strategy ">" -> StrategyAngle {bracket}
+    "(" Strategy ")" -> Strategy      {bracket,prefer}
+
+%%%
+ %% Identifiers
+ %%%
+
+  variables
+    [xyzfglc][0-9\']*       -> Id       {prefer}
+    [xyzfgl][0-9\']*  "*"   -> {Id ","}+ {prefer}
+    "xs"[0-9\']*            -> {Id ","}+ {prefer,obsolete}
+
+    [xyzfgl][0-9\']*  "*"   -> {ID ","}+ {prefer}
+
+%%%
+ %% Terms
+ %%%
+
+  variables
+    TermMetaVar     -> Term        {prefer}
+    TermListMetaVar -> {Term ","}+ {prefer}
+    TermListMetaVar -> {Term ","}+ {prefer,obsolete}
+
+  lexical syntax
+    [t][0-9\']*      -> TermMetaVar
+    "t:"Id           -> TermMetaVar
+    [t][0-9\']*  "*" -> TermListMetaVar
+    "ts"[0-9\']*     -> TermListMetaVar
+
+    TermMetaVar      -> MetaVar
+    TermListMetaVar  -> MetaVar
+
+%%%
+ %% Cleanup
+ %%%
+
+  variables
+    "str"[0-9\']* -> String
+
+  lexical syntax
+    "str"[0-9\']* -> Id {reject}
+
+  variables
+    "s"[0-9\']*           -> Strategy {prefer}
+    "ss"[0-9\']*          -> {Strategy ","}+ {prefer,obsolete}
+    "s"[0-9\']*   "*"     -> {Strategy ","}+ {prefer}
+
+    [r][0-9\']*           -> Rule {prefer}
+
+    "rd"[0-9\']*          -> RuleDef {prefer}
+    "rd"[0-9\']*  "*"     -> RuleDef* {prefer}
+
+    %% "a"[0-9\']*           -> Typedid        {prefer}
+    %% "a"[0-9\']*   "*"     -> {Typedid ","}+ {prefer}
+    %% "as"[0-9\']*          -> {Typedid ","}+ {prefer,obsolete}
+
+    "tp"[0-9\']*          -> Type
+    "tp"[0-9\']*  "*"     -> {Type "*"}+
+
+    "srt" [0-9\']*        -> Sort         {prefer}
+    "srt" [0-9\']* "*"    -> {Sort ","}*  {prefer}
+    "srt" [xyz] [0-9\']*  -> UCID         {prefer}
+
+    "M"   [0-9\']*        -> ModName {prefer}
+
+    "sc" [0-9\']*         -> SwitchCase {prefer}
+    "sc" [0-9\']* "*"     -> SwitchCase* {prefer}
+
+  variables
+    "sc" [0-9\']*         -> DynRuleScopeId        {prefer}
+    "sc" [0-9\']* "*"     -> {DynRuleScopeId ","}+ {prefer}
+
+    "dr" [0-9\']*         -> DynRuleId {prefer}
+
+    "drd"[0-9\']*         -> DynRuleDef {prefer}
+    "drd"[0-9\']*  "*"    -> DynRuleDef+ {prefer}
+
+%%%
+ %%
+ %% Disambiguation
+ %%%
+
+  lexical syntax
+    MetaVar -> Id  {reject}
+    MetaVar -> LId {reject}
+
+    "xs"[0-9\']*    -> Id  {reject}
+    [s][0-9\']*     -> Id  {reject}
+    "ss"[0-9\']*    -> Id  {reject}
+    [r][0-9\']*     -> Id  {reject}
+    %%  "a"[0-9\']*    -> Id  {reject}
+    %% "as"[0-9\']*    -> Id  {reject}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EmbeddedStrategoMix.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EmbeddedStrategoMix.sdf	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,76 @@
+module EmbeddedStrategoMix[Ctx0 E1 E2]
+imports EmbeddedStratego[E1 E2]
+          [ MetaVar            => MetaVar[[Ctx0]]
+            TermListMetaVar    => TermListMetaVar[[Ctx0]]
+            TermMetaVar        => TermMetaVar[[Ctx0]]
+            RuleNames          => RuleNames[[Ctx0]]
+            RuleDec            => RuleDec[[Ctx0]]
+            DynRuleScopeId     => DynRuleScopeId[[Ctx0]]
+            DynRuleId          => DynRuleId[[Ctx0]]
+            DynRuleDef         => DynRuleDef[[Ctx0]]
+            ScopeLabels        => ScopeLabels[[Ctx0]]
+            RuleCond           => RuleCond[[Ctx0]]
+            Rule               => Rule[[Ctx0]]
+            RuleDef            => RuleDef[[Ctx0]]
+            Overlay            => Overlay[[Ctx0]]
+            SwitchCase         => SwitchCase[[Ctx0]]
+            StrategyCurly      => StrategyCurly[[Ctx0]]
+            StrategyAngle      => StrategyAngle[[Ctx0]]
+            Kind               => Kind[[Ctx0]]
+            LID                => LID[[Ctx0]]
+            ImportModName      => ImportModName[[Ctx0]]
+            Decl               => Decl[[Ctx0]]
+            Module             => Module[[Ctx0]]
+            StrategyParen      => StrategyParen[[Ctx0]]
+            Typedid            => Typedid[[Ctx0]]
+            Anno               => Anno[[Ctx0]]
+            EmptyId            => EmptyId[[Ctx0]]
+            StrategyDef        => StrategyDef[[Ctx0]]
+            SVar               => SVar[[Ctx0]]
+            Def                => Def[[Ctx0]]
+            Type               => Type[[Ctx0]]
+            RetType            => RetType[[Ctx0]]
+            ArgType            => ArgType[[Ctx0]]
+            FunType            => FunType[[Ctx0]]
+            ConstType          => ConstType[[Ctx0]]
+            Opdecl             => Opdecl[[Ctx0]]
+            Sort               => Sort[[Ctx0]]
+            Sdecl              => Sdecl[[Ctx0]]
+            Wld                => Wld[[Ctx0]]
+            ID                 => ID[[Ctx0]]
+            Var                => Var[[Ctx0]]
+            CharChar           => CharChar[[Ctx0]]
+            Char               => Char[[Ctx0]]
+            Padding            => Padding[[Ctx0]]
+            Dollar4            => Dollar4[[Ctx0]]
+            QuotedBracket4     => QuotedBracket4[[Ctx0]]
+            StringQuotedChars4 => StringQuotedChars4[[Ctx0]]
+            StringQuotedPart4  => StringQuotedPart4[[Ctx0]]
+            Dollar3            => Dollar3[[Ctx0]]
+            QuotedBracket3     => QuotedBracket3[[Ctx0]]
+            StringQuotedChars3 => StringQuotedChars3[[Ctx0]]
+            StringQuotedPart3  => StringQuotedPart3[[Ctx0]]
+            Dollar2            => Dollar2[[Ctx0]]
+            QuotedBracket2     => QuotedBracket2[[Ctx0]]
+            StringQuotedChars2 => StringQuotedChars2[[Ctx0]]
+            StringQuotedPart2  => StringQuotedPart2[[Ctx0]]
+            Dollar1            => Dollar1[[Ctx0]]
+            QuotedBracket1     => QuotedBracket1[[Ctx0]]
+            StringQuotedChars1 => StringQuotedChars1[[Ctx0]]
+            StringQuotedPart1  => StringQuotedPart1[[Ctx0]]
+            StringQuotation    => StringQuotation[[Ctx0]]
+            StrChar            => StrChar[[Ctx0]]
+            String             => String[[Ctx0]]
+            Real               => Real[[Ctx0]]
+            Int                => Int[[Ctx0]]
+            Keyword            => Keyword[[Ctx0]]
+            UCID               => UCID[[Ctx0]]
+            LCID               => LCID[[Ctx0]]
+            LId                => LId[[Ctx0]]
+            Id                 => Id[[Ctx0]]
+            ModNamePart        => ModNamePart[[Ctx0]]
+            ModName            => ModName[[Ctx0]]
+            PreTerm            => PreTerm[[Ctx0]]
+            Term               => Term[[Ctx0]]
+            StrategyMid        => StrategyMid[[Ctx0]]
+            Strategy           => Strategy[[Ctx0]] ]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/SDF.def
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/SDF.def	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,610 @@
+definition
+module languages/sdf2/syntax/Aliases
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Alias Aliases
+  context-free syntax 
+    "aliases" Aliases              -> Grammar  {cons("aliases")}
+    Symbol arrow:"->" alias:Symbol -> Alias    {cons("alias")}
+    list:Alias*                    -> Aliases
+
+
+
+module languages/sdf2/syntax/Restrictions
+
+imports languages/sdf2/syntax/CC
+
+exports
+  sorts Lookahead Lookaheads Restriction Restrictions
+
+  context-free syntax
+    CharClass                          -> Lookahead  {cons("char-class")}
+    head:CharClass "." tail:Lookaheads -> Lookahead  {cons("seq")}
+
+    Lookahead                                -> Lookaheads  {cons("single")}
+    "left":Lookaheads "|" "right":Lookaheads -> Lookaheads  {cons("alt"),right}
+    "(" Lookaheads ")"                       -> Lookaheads  {bracket}
+    "[[" list:{Lookahead ","}* "]]"          -> Lookaheads  {cons("list")}
+
+    Symbols "-/-" Lookaheads -> Restriction  {cons("follow")}
+
+    list:Restriction* -> Restrictions
+
+    "restrictions" Restrictions -> Grammar  {cons("restrictions")}
+
+    "reject" -> Attribute  {cons("reject")}
+    "prefer" -> Attribute  {cons("prefer")}
+    "avoid"  -> Attribute  {cons("avoid")}
+
+  context-free priorities    
+    CharClass "." Lookaheads    -> Lookahead >
+    Lookaheads "|" Lookaheads   -> Lookaheads
+
+
+module languages/sdf2/syntax/Labels
+
+imports languages/sdf2/syntax/Kernel 
+        basic/StrCon
+
+exports 
+  sorts Label
+
+  context-free syntax
+    StrCon -> Label {cons("quoted")}
+    IdCon  -> Label {cons("unquoted")}
+
+    Label ":" Symbol -> Symbol  {cons("label")}
+
+module languages/sdf2/syntax/Literals
+
+imports languages/sdf2/syntax/Kernel 
+imports basic/StrCon
+imports basic/IdentifierCon
+
+exports
+  sorts FunctionName SingleQuotedStrCon SingleQuotedStrChar
+  lexical syntax
+
+    "\\n"                      -> SingleQuotedStrChar {cons("newline")}
+    "\\t"                      -> SingleQuotedStrChar {cons("tab")}
+    "\\'"                      -> SingleQuotedStrChar {cons("quote")}
+    "\\\\"                     -> SingleQuotedStrChar {cons("backslash")}
+    "\\" a:[0-9]b:[0-9]c:[0-9] -> SingleQuotedStrChar {cons("decimal")}
+    ~[\0-\31\n\t\'\\]          -> SingleQuotedStrChar {cons("normal")}
+
+    [\'] chars:SingleQuotedStrChar* [\']   -> SingleQuotedStrCon  {cons("default")}
+
+  context-free syntax
+    IdCon  -> FunctionName {cons("unquoted-fun")}
+    StrCon -> FunctionName {cons("quoted-fun")}
+
+  context-free syntax
+    string:StrCon                -> Symbol {cons("lit")}
+    ci-string:SingleQuotedStrCon -> Symbol {cons("ci-lit")}
+
+    fun:FunctionName "(" arguments:{Symbol ","}* ")" "->" result:Symbol Attributes 
+	-> Production  {avoid, cons("prefix-fun")}
+
+module languages/sdf2/syntax/Start-Symbols
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+  
+    "start-symbols" Symbols                -> Grammar {cons("kernel-start-symbols")} 
+    "lexical" "start-symbols" Symbols      -> Grammar {cons("lexical-start-symbols")}
+    "context-free" "start-symbols" Symbols -> Grammar {cons("context-free-start-symbols")}
+
+module languages/sdf2/syntax/Sorts
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Sort
+  lexical syntax
+    head:[A-Z]                          -> Sort {cons("one-char")}
+    head:[A-Z] middle:[A-Za-z0-9\-]* last:[A-Za-z0-9] -> Sort 
+	{cons("more-chars")}
+
+  context-free syntax
+    Sort                                    -> Symbol  {cons("sort")}
+    Sort "[[" parameters:{Symbol ","}+ "]]" -> Symbol  {cons("parameterized-sort")}
+
+    "sorts" Symbols -> Grammar {cons("sorts")}
+
+  lexical restrictions
+    Sort -/- [A-Za-z0-9]
+
+module languages/sdf2/syntax/Character
+
+
+
+exports
+  sorts Character NumChar ShortChar
+  lexical syntax
+    [\\] number:[0-9]+                     -> NumChar   {cons("digits")}
+    character:[a-zA-Z0-9]                  -> ShortChar {cons("regular")}
+    [\\] escape:~[\0-\31A-Za-mo-qsu-z0-9]  -> ShortChar {cons("escaped")}
+
+  context-free syntax
+    NumChar   -> Character {cons("numeric")}
+    ShortChar -> Character {cons("short")}
+    "\\TOP"   -> Character {cons("top")}
+    "\\EOF"   -> Character {cons("eof")}
+    "\\BOT"   -> Character {cons("bot")}
+    "\\LABEL_START" -> Character {cons("label_start")}
+
+module languages/sdf2/syntax/Character-Class
+
+imports languages/sdf2/syntax/Character
+
+exports
+  sorts CharClass CharRange CharRanges OptCharRanges 
+  context-free syntax 
+    Character                           -> CharRange
+    start:Character "-" end:Character   -> CharRange            {cons("range")}
+
+    CharRange                                   -> CharRanges
+    "left":CharRanges "right":CharRanges        -> CharRanges   {cons("conc"),right,memo}
+    "(" CharRanges ")"                          -> CharRanges   {bracket}
+
+                              -> OptCharRanges  {cons("absent")}
+    CharRanges                -> OptCharRanges  {cons("present")}
+
+    "[" OptCharRanges "]"                    -> CharClass  {cons("simple-charclass")}
+    "~" CharClass                            -> CharClass  {cons("comp")}
+    "left":CharClass "/" "right":CharClass   -> CharClass  {cons("diff"),left,memo}
+    "left":CharClass "/\\" "right":CharClass -> CharClass  {cons("isect"),left,memo}
+    "left":CharClass "\\/" "right":CharClass -> CharClass  {cons("union"),left}
+    "(" CharClass ")"                        -> CharClass  {bracket, avoid}
+
+  context-free priorities
+    "~" CharClass             -> CharClass >
+    CharClass "/" CharClass   -> CharClass >
+    CharClass "/\\" CharClass -> CharClass >
+    CharClass "\\/" CharClass -> CharClass           
+
+
+module languages/sdf2/syntax/CC
+
+imports languages/sdf2/syntax/Character-Class 
+        languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    CharClass -> Symbol {cons("char-class")}
+
+module languages/sdf2/syntax/Priority
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Associativity ArgumentIndicator Group Priority Priorities
+
+  context-free syntax
+    "left"      -> Associativity  {cons("left")}
+    "right"     -> Associativity  {cons("right")}
+    "non-assoc" -> Associativity  {cons("non-assoc")}
+    "assoc"     -> Associativity  {cons("assoc")}
+
+    "bracket"     -> Attribute  {cons("bracket")}
+    Associativity -> Attribute  {cons("assoc")}
+
+    "<" arguments:{NatCon ","}+ ">" -> ArgumentIndicator {cons("default")}
+
+    Group ArgumentIndicator               -> Group {non-assoc,cons("with-arguments")}
+    Group "."                             -> Group {non-assoc,cons("non-transitive")}
+
+    Production                            -> Group  {cons("simple-group")}
+    "{" Productions "}"                   -> Group  {cons("prods-group")}
+    "{" Associativity ":" Productions "}" -> Group  {cons("assoc-group")}
+
+    list:{Group ">"}+                                    -> Priority  {cons("chain")}
+    "left":Group Associativity "right":Group             -> Priority  {cons("assoc")}
+%%    Production "<" arguments:{NatCon ","}+ ">" ">" Group -> Priority  {cons("argument")}
+
+    list:{Priority  ","}* -> Priorities
+
+    "priorities" Priorities  -> Grammar  {cons("priorities")}
+
+module languages/sdf2/syntax/Lifting
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    left-quote:"`" Symbol right-quote:"`" -> Symbol  {cons("lifting")}
+
+module languages/sdf2/syntax/Regular
+
+imports languages/sdf2/syntax/Kernel 
+imports languages/aterm/syntax/IntCon
+
+exports
+  context-free syntax
+    "(" ")"                                       -> Symbol {cons("empty")}
+    "(" head:Symbol tail:Symbol+ ")"              -> Symbol {cons("seq")}
+    Symbol "?"                                    -> Symbol {cons("opt")}
+    Symbol "+"                                    -> Symbol {cons("iter")}
+    Symbol "*"                                    -> Symbol {cons("iter-star")}
+    "{" Symbol sep:Symbol "}" "+"                 -> Symbol {cons("iter-sep")}
+    "{" Symbol sep:Symbol "}" "*"                 -> Symbol {cons("iter-star-sep")}
+    "<" head:Symbol "," rest:{Symbol ","}+ ">"    -> Symbol {cons("tuple")}
+    "(" arguments:Symbols "=>" results:Symbol ")" -> Symbol {cons("func")}
+    "left":Symbol "|" "right":Symbol              -> Symbol {right,cons("alt")}
+    "(" "left":Symbol "->" "right":Symbol ")"     -> Symbol {cons("strategy")}
+
+  context-free priorities
+    {Symbol "?"               -> Symbol
+    Symbol "*"                -> Symbol
+    Symbol "+"                -> Symbol} >
+    Symbol "|" Symbol         -> Symbol       
+
+
+module languages/sdf2/syntax/Renaming
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Renaming Renamings
+  context-free syntax 
+    "[" list:Renaming* "]" -> Renamings  {cons("renamings")}
+
+    from:Symbol "=>" to:Symbol                   -> Renaming  {cons("symbol")}
+    from-prod:Production "=>" to-prod:Production -> Renaming  {cons("production")}
+
+module languages/sdf2/syntax/Modules
+
+imports languages/sdf2/syntax/Kernel 
+        languages/sdf2/syntax/Renaming
+
+hiddens
+  sorts ModuleWord
+exports
+  context-free start-symbols Module
+
+  sorts ModuleId ModuleName Import Imports
+        Section Sections Module Definition ImpSection
+
+  lexical syntax    
+    letters:[A-Za-z0-9\_\-]+ -> ModuleWord  {cons("word")}
+
+    ModuleWord              -> ModuleId  {cons("leaf")}
+    sep:"/" basename:ModuleId            -> ModuleId  {cons("root")}
+    dirname:ModuleWord sep:"/" basename:ModuleId -> ModuleId  {cons("path")}
+         
+  context-free syntax
+    list:Module* -> Definition
+
+    "module" ModuleName list:ImpSection* Sections -> Module  {cons("module")}
+
+    "exports" Grammar            -> Section  {cons("exports")}
+    "hiddens" Grammar            -> Section  {cons("hiddens")}
+
+    list:Section*                -> Sections
+
+    ModuleId                        -> ModuleName  {cons("unparameterized")}
+    ModuleId "[" params:Symbols "]" -> ModuleName  {cons("parameterized")}
+
+    "id" "(" ModuleName ")" -> Attribute  {cons("id")}
+
+    "imports" list:Imports -> ImpSection  {cons("imports")}
+
+    ImpSection -> Grammar  {cons("imp-section")}
+
+    list:Import* -> Imports
+
+    ModuleName            -> Import  {cons("module")}
+    ModuleName Renamings  -> Import  {cons("renamed-module")}
+    "(" Import ")"        -> Import  {bracket}
+
+  lexical restrictions
+    ModuleWord -/- [A-Za-z0-9\_\-]
+    ModuleId -/- [\/]
+
+module languages/sdf2/syntax/Basic
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    "lexical" "syntax"      Productions -> Grammar  {cons("lexical-syntax")}
+    "context-free" "syntax" Productions -> Grammar  {cons("context-free-syntax")}
+    "variables"             Productions -> Grammar  {cons("variables")}
+    "lexical" "variables"   Productions -> Grammar  {cons("lexical-variables")}
+
+    "<" Symbol "-CF"  ">"               -> Symbol  {cons("cf")}
+    "<" Symbol "-LEX" ">"               -> Symbol  {cons("lex")}
+    "<" Symbol "-VAR" ">"               -> Symbol  {cons("varsym")}
+
+    "LAYOUT"                            -> Symbol  {cons("layout")}
+
+module languages/sdf2/syntax/Grammars
+
+imports basic/Comments
+
+exports
+  sorts Grammar
+  context-free syntax    
+    "(/)"                          -> Grammar  {cons("empty-grammar")}
+    "left":Grammar "right":Grammar -> Grammar  {assoc,cons("conc-grammars")}
+    "(" Grammar ")"                -> Grammar  {bracket}
+
+module basic/Comments
+
+imports
+  basic/Whitespace
+
+exports
+  lexical syntax
+    "%%" line:~[\n]* "\n"	-> LAYOUT {cons("line"),category("Comment")}
+    "%" content:~[\%\n]+ "%"	-> LAYOUT {cons("nested"),category("Comment")}
+  context-free restrictions
+    LAYOUT? -/- [\%]
+
+module languages/sdf2/syntax/Symbols
+
+imports basic/Comments
+
+exports
+  sorts Symbol Symbols
+
+  context-free syntax
+    "(" Symbol ")" -> Symbol {bracket}
+
+    list:Symbol* -> Symbols
+
+
+
+module basic/IdentifierCon
+
+exports
+
+sorts IdCon
+
+lexical syntax
+
+head:[A-Za-z] tail:[A-Za-z\-0-9]* -> IdCon {cons("default")}
+
+lexical restrictions
+
+IdCon -/- [A-Za-z\-0-9]
+
+module basic/StrCon
+
+exports
+
+sorts StrCon StrChar
+
+lexical syntax
+    "\\n"                      -> StrChar {cons("newline")}
+    "\\t"                      -> StrChar {cons("tab")}
+    "\\\""                     -> StrChar {cons("quote")}
+    "\\\\"                     -> StrChar {cons("backslash")}
+    "\\" a:[0-9]b:[0-9]c:[0-9] -> StrChar {cons("decimal")}
+    ~[\0-\31\n\t\"\\]          -> StrChar {cons("normal")}
+
+    [\"] chars:StrChar* [\"]   -> StrCon  {cons("default")}
+
+module languages/aterm/syntax/RealCon
+
+imports languages/aterm/syntax/IntCon
+
+hiddens
+  context-free start-symbols 
+    RealCon
+
+exports
+  sorts OptExp RealCon
+
+  context-free syntax
+    "e" IntCon -> OptExp {cons("present")}
+               -> OptExp {cons("absent")}
+
+    base:IntCon "." decimal:NatCon exp:OptExp  -> RealCon {cons("real-con")}
+
+module basic/NatCon
+
+exports
+
+sorts NatCon
+
+lexical syntax
+  
+ [0-9]+ -> NatCon {cons("digits")}
+
+lexical restrictions
+
+ NatCon -/- [0-9]
+
+module basic/Whitespace
+
+exports
+  lexical syntax
+    [\ \t\n\r]	-> LAYOUT {cons("whitespace")}
+
+  context-free restrictions
+    LAYOUT? -/- [\ \t\n\r]
+
+module languages/aterm/syntax/IntCon
+
+imports basic/Whitespace
+	basic/NatCon
+
+hiddens
+  context-free start-symbols 
+    IntCon
+
+exports
+  sorts IntCon
+  context-free syntax
+    NatCon         -> IntCon {cons("natural")}
+    pos:"+" NatCon -> IntCon {cons("positive")}
+    neg:"-" NatCon -> IntCon {cons("negative")}
+
+module languages/aterm/syntax/ATerms
+
+imports languages/aterm/syntax/IntCon 
+        languages/aterm/syntax/RealCon
+	basic/StrCon
+	basic/IdentifierCon
+
+exports
+  sorts AFun ATerm Annotation
+
+  context-free syntax
+	StrCon 	-> AFun {cons("quoted")}
+	IdCon 	-> AFun {cons("unquoted")}
+
+  context-free syntax
+	IntCon 					-> ATerm {cons("int")}
+	RealCon					-> ATerm {cons("real")}
+	fun:AFun 				-> ATerm {cons("fun")}
+	fun:AFun "(" args:{ATerm ","}+ ")" 	-> ATerm {cons("appl")}
+	"<" type:ATerm ">" 			-> ATerm {cons("placeholder")}
+	"[" elems:{ATerm ","}* "]" 		-> ATerm {cons("list")}
+	trm:ATerm Annotation 			-> ATerm {cons("annotated")}
+
+  context-free syntax
+	"{" annos:{ ATerm ","}+ "}" 		-> Annotation {cons("default")}
+
+hiddens
+  context-free start-symbols 
+    ATerm
+
+module languages/sdf2/syntax/Kernel
+
+imports languages/aterm/syntax/ATerms 
+        languages/sdf2/syntax/Symbols 
+        languages/sdf2/syntax/Grammars
+
+exports
+  sorts Attribute ATermAttribute Attributes Production Productions
+  context-free syntax
+    aterm:ATerm    -> ATermAttribute  {cons("default")}
+    ATermAttribute -> Attribute       {cons("term")}
+
+    "{" list:{Attribute ","}* "}" -> Attributes  {cons("attrs")}
+                                  -> Attributes  {cons("no-attrs")}
+
+    Symbols "->" result:Symbol Attributes -> Production  {cons("prod")}
+
+    list:Production* -> Productions
+
+    "syntax" Productions -> Grammar {cons("syntax")}
+
+module languages/sdf2/syntax/Sdf2-Syntax
+
+imports languages/sdf2/syntax/Kernel
+        languages/sdf2/syntax/Basic
+        languages/sdf2/syntax/Modules
+        languages/sdf2/syntax/Regular
+        languages/sdf2/syntax/Lifting
+        languages/sdf2/syntax/Priority
+        languages/sdf2/syntax/CC
+        languages/sdf2/syntax/Sorts
+        languages/sdf2/syntax/Start-Symbols
+        languages/sdf2/syntax/Literals
+        languages/sdf2/syntax/Labels
+        languages/sdf2/syntax/Restrictions
+        languages/sdf2/syntax/Aliases
+
+exports
+  sorts SDF
+
+  context-free syntax
+    "<START>" -> Symbol {cons("start")}
+    "<Start>" -> Symbol {cons("file-start")}
+
+    "lexical"      "priorities" Priorities      -> Grammar {cons("lexical-priorities")}
+    "context-free" "priorities" Priorities      -> Grammar {cons("context-free-priorities")}
+    "lexical"      "restrictions" Restrictions  -> Grammar {cons("lexical-restrictions")}
+    "context-free" "restrictions" Restrictions  -> Grammar {cons("context-free-restrictions")}
+
+    "definition" Definition -> SDF {cons("definition")}
+
+  context-free priorities
+    Symbol "|" Symbol  -> Symbol >
+    Label ":" Symbol -> Symbol                  
+
+
+module languages/sdf2/syntax/Sdf2
+
+imports languages/sdf2/syntax/Sdf2-Syntax
+
+exports
+  lexical syntax
+    "LAYOUT"            -> Sort    {reject}
+
+  context-free syntax
+    "aliases"           -> ModuleName {reject}
+    "lexical"           -> ModuleName {reject}
+    "priorities"        -> ModuleName {reject}
+    "context-free"      -> ModuleName {reject}
+    "definition"        -> ModuleName {reject}
+    "syntax"            -> ModuleName {reject}
+    "variables"         -> ModuleName {reject}
+    "module"            -> ModuleName {reject}
+    "imports"           -> ModuleName {reject}
+    "exports"           -> ModuleName {reject}
+    "hiddens"           -> ModuleName {reject}
+    "left"              -> ModuleName {reject}
+    "right"             -> ModuleName {reject}
+    "assoc"             -> ModuleName {reject}
+    "non-assoc"         -> ModuleName {reject}
+    "bracket"           -> ModuleName {reject}
+    "sorts"             -> ModuleName {reject}
+    "bracket"           -> ModuleName {reject}
+    "sorts"             -> ModuleName {reject}
+    "restrictions"      -> ModuleName {reject}
+
+     StrCon "(" arguments:{Symbol ","}* ")" -> Symbols {reject}
+
+     Associativity -> Label   {reject}
+     Associativity -> ATermAttribute {reject}
+     "reject"      -> ATermAttribute {reject}
+     "prefer"      -> ATermAttribute {reject}
+     "avoid"       -> ATermAttribute {reject}
+     "bracket"     -> ATermAttribute {reject}
+     "id" "(" ModuleName ")" -> ATermAttribute {reject}
+
+  restrictions
+    <Sort -CF>
+    "aliases"
+    "lexical"
+    "priorities"
+    "context-free"
+    "definition"
+    "syntax"
+    "variables"
+    "module"
+    "imports"
+    "exports"
+    "hiddens"
+    "left"
+    "right"
+    "assoc"
+    "non-assoc"
+    "bracket"
+    "sorts"             -/- [A-Za-z0-9]
+    <NatCon -CF>        -/- [0-9]
+    <LAYOUT?-CF>        -/- [\ \t\n\%]
+    <NumChar -CF>       -/- [0-9]
+    <ModuleName -CF>    -/- [A-Za-z0-9\_\-]
+
+exports
+  context-free start-symbols
+    SDF Module
+
+module SDF
+imports languages/sdf2/syntax/Sdf2
+hiddens
+  context-free start-symbols
+    SDF Module
+
+  %% HACK
+  context-free syntax
+    Group "." -> Group {non-assoc,cons("non-transitive")}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/SDFMix.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/SDFMix.sdf	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,56 @@
+module SDFMix[Ctx0]
+imports SDF
+          [ SDF                 => SDF[[Ctx0]]
+            Aliases             => Aliases[[Ctx0]]
+            Alias               => Alias[[Ctx0]]
+            Restrictions        => Restrictions[[Ctx0]]
+            Restriction         => Restriction[[Ctx0]]
+            Label               => Label[[Ctx0]]
+            FunctionName        => FunctionName[[Ctx0]]
+            SingleQuotedStrCon  => SingleQuotedStrCon[[Ctx0]]
+            SingleQuotedStrChar => SingleQuotedStrChar[[Ctx0]]
+            Sort                => Sort[[Ctx0]]
+            OptCharRanges       => OptCharRanges[[Ctx0]]
+            CharRange           => CharRange[[Ctx0]]
+            Character           => Character[[Ctx0]]
+            ShortChar           => ShortChar[[Ctx0]]
+            NumChar             => NumChar[[Ctx0]]
+            Priorities          => Priorities[[Ctx0]]
+            Priority            => Priority[[Ctx0]]
+            ArgumentIndicator   => ArgumentIndicator[[Ctx0]]
+            Associativity       => Associativity[[Ctx0]]
+            Import              => Import[[Ctx0]]
+            Imports             => Imports[[Ctx0]]
+            ImpSection          => ImpSection[[Ctx0]]
+            ModuleName          => ModuleName[[Ctx0]]
+            Sections            => Sections[[Ctx0]]
+            Section             => Section[[Ctx0]]
+            Module              => Module[[Ctx0]]
+            Definition          => Definition[[Ctx0]]
+            ModuleId            => ModuleId[[Ctx0]]
+            ModuleWord          => ModuleWord[[Ctx0]]
+            Renaming            => Renaming[[Ctx0]]
+            Renamings           => Renamings[[Ctx0]]
+            Productions         => Productions[[Ctx0]]
+            Production          => Production[[Ctx0]]
+            Attributes          => Attributes[[Ctx0]]
+            Attribute           => Attribute[[Ctx0]]
+            ATermAttribute      => ATermAttribute[[Ctx0]]
+            Symbols             => Symbols[[Ctx0]]
+            Annotation          => Annotation[[Ctx0]]
+            ATerm               => ATerm[[Ctx0]]
+            AFun                => AFun[[Ctx0]]
+            IdCon               => IdCon[[Ctx0]]
+            StrCon              => StrCon[[Ctx0]]
+            StrChar             => StrChar[[Ctx0]]
+            RealCon             => RealCon[[Ctx0]]
+            OptExp              => OptExp[[Ctx0]]
+            IntCon              => IntCon[[Ctx0]]
+            NatCon              => NatCon[[Ctx0]]
+            Lookahead           => Lookahead[[Ctx0]]
+            Grammar             => Grammar[[Ctx0]]
+            Symbol              => Symbol[[Ctx0]]
+            CharRanges          => CharRanges[[Ctx0]]
+            CharClass           => CharClass[[Ctx0]]
+            Lookaheads          => Lookaheads[[Ctx0]]
+            Group               => Group[[Ctx0]] ]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-Attributes.def
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-Attributes.def	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,1087 @@
+definition
+module ResultTerms
+
+imports
+  Stratego-Sugar
+
+exports %% RECOVERY RULES START HERE
+  lexical syntax
+      -> ";" {recover, cons("INSERTION")}
+
+exports
+
+  sorts
+    LineEnd
+    TermNoApp
+    ResultTerm
+    SingleLineLayout
+
+  context-free syntax
+
+    TermNoApp -> ResultTerm
+
+    Term                  -> TermNoApp
+    StrategyAngle         -> TermNoApp {reject}
+    "<" Strategy ">" Term -> TermNoApp {reject}
+
+  lexical syntax
+  
+    ShortCom -> SingleLineLayout
+    LongCom  -> SingleLineLayout
+    [\ \t]+  -> SingleLineLayout
+    [\n\r]   -> LineEnd
+    Eof      -> LineEnd
+  
+  syntax
+  
+    %% <s>\n -> RootApp
+    
+    <StrategyAngle-CF> <SingleLineLayout*-LEX> <LineEnd-CF> -> <ResultTerm-CF> {ast("RootApp(<1>)")}
+    
+    %% <s>A -> App
+    
+    "<" <LAYOUT?-CF> <Strategy-CF> <LAYOUT?-CF> ">" <SingleLineLayout*-LEX>
+        <Term-CF>                                                           -> <ResultTerm-CF> {ast("App(<1>, <3>)")}
+
+module Stratego-Sugar-Overlays
+imports
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Terms
+
+exports
+  sorts Overlay
+  context-free syntax
+    Id 			 "=" Term 	-> Overlay {cons("OverlayNoArgs")}
+    Id "(" {Id ","}* ")" "=" Term 	-> Overlay {cons("Overlay")}
+
+module Stratego-Sugar-DynamicRules
+imports
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Rules
+
+exports
+ 
+  sorts ScopeLabels
+  context-free syntax
+
+    "{|" ScopeLabels ":" Strategy "|}" -> Strategy {cons("DynRuleScope")}
+
+    {DynRuleScopeId ","}*   -> ScopeLabels
+    "~" Term		    -> ScopeLabels {cons("ScopeLabels")}
+
+  sorts DynRuleDef DynRuleId DynRuleScopeId RuleDec
+  context-free syntax
+
+    "rules" "(" DynRuleDef* ")" -> Strategy {cons("GenDynRules")}
+
+    Id "+" Term                 -> DynRuleDef {cons("AddScopeLabel")} 
+    DynRuleId ":-"  Term        -> DynRuleDef {cons("UndefineDynRule")}
+    DynRuleId ":"   Rule        -> DynRuleDef {cons("SetDynRule")}
+    DynRuleId ":+"  Rule        -> DynRuleDef {cons("AddDynRule")}
+    DynRuleId ":"   Term        -> DynRuleDef {cons("SetDynRuleMatch")}
+
+    DynRuleId ":="  Term        -> DynRuleDef {cons("DynRuleAssign")}
+    DynRuleId ":+="  Term       -> DynRuleDef {cons("DynRuleAssignAdd")}
+
+    DynRuleId ":"   Rule "depends" "on" Term -> DynRuleDef {cons("SetDynRuleDepends")}
+
+    RuleDec "." Term            -> DynRuleId {cons("LabeledDynRuleId")}
+    RuleDec "+" Term            -> DynRuleId {cons("AddLabelDynRuleId")}
+    RuleDec                     -> DynRuleId {cons("DynRuleId")}
+
+    Id "." Term                 -> DynRuleScopeId {cons("LabeledDynRuleScopeId")}
+    Id                          -> DynRuleScopeId {cons("DynRuleScopeId")}
+
+  context-free syntax
+
+    Id                          -> RuleDec {cons("RDecNoArgs")}
+    Id "(" {Typedid ","}* ")"   -> RuleDec {cons("RDec")}
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"   -> RuleDec {cons("RDecT")}
+
+  sorts RuleNames
+  context-free syntax
+    {Id ","}*				  -> RuleNames
+    "~" Term				  -> RuleNames {cons("RuleNames")}
+
+    "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
+
+  syntax
+    %% no space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% 1 space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% no space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    %% 1 space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+
+  context-free syntax
+    Strategy "/" RuleNames"\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
+    Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
+
+    Strategy "/" RuleNames "\\" 
+                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
+
+  priorities
+    <StrategyAngle-CF> <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("BA")}
+  > {
+
+    %% no space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% 1 space after RuleNames
+    "\\" <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleUnionFix")}
+
+    %% no space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> "/*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    %% 1 space after RuleNames
+    "/"  <LAYOUT?-CF> <RuleNames-CF> <LAYOUT?-CF> "\\"
+        <LAYOUT?-CF> <RuleNames-CF> " /*" <LAYOUT?-CF> <Strategy-CF>
+      -> <Strategy-CF> {cons("DynRuleIntersectUnionFix")}
+
+    }
+  > <Strategy-CF> <LAYOUT?-CF> "=>" <LAYOUT?-CF> <Term-CF> -> <Strategy-CF> {cons("AM")}
+
+  context-free priorities
+    StrategyAngle Term 		          -> Strategy {cons("BA")}
+  > "/" RuleNames "\\*" Strategy          -> Strategy {cons("DynRuleIntersectFix")}
+  > Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
+  > Strategy "/" RuleNames "\\" Strategy  -> Strategy {cons("DynRuleIntersect"),right}
+  > Strategy "\\" RuleNames "/" Strategy  -> Strategy {cons("DynRuleUnion"),right}
+  > Strategy "/" RuleNames "\\" 
+                 RuleNames "/"  Strategy  -> Strategy {cons("DynRuleIntersectUnion"),right}
+  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+
+module Stratego-Sugar-Rules
+imports Stratego-Sugar-Strategies
+exports
+
+  sorts RuleDef
+  context-free syntax
+    Id ":" Rule 				-> RuleDef {cons("RDefNoArgs")}
+    
+    Anno+ RuleDef               -> Def {cons("AnnoDef")}
+
+    Id "(" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDef")}
+
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" ":" Rule 		-> RuleDef {cons("RDefT")}
+
+  sorts Rule RuleCond
+  context-free syntax
+    Term "->" Term           	    -> Rule {cons("RuleNoCond")} %% backward comp.
+    Term "->" Term "where" Strategy -> Rule {cons("Rule")}       %% backward comp.
+    Term "->" Term RuleCond+	    -> Rule {cons("Rule"), avoid}
+
+    "where" Strategy -> RuleCond {cons("WhereClause")}
+    "with"  Strategy -> RuleCond {cons("WithClause")}
+
+module Stratego-Sugar-Strategies
+imports
+  Stratego-Core-Strategies
+  Stratego-Sugar-Terms
+  Stratego-Sugar-Constants
+  Stratego-Sugar-Signatures
+
+exports
+  context-free syntax
+    Id  		      "=" Strategy -> StrategyDef {cons("SDefNoArgs")}
+    Id "(" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDef")}
+
+  context-free syntax
+    ID 				  	  -> Typedid {cons("DefaultVarDec")}
+
+  sorts Rule
+
+  sorts StrategyParen StrategyCurly StrategyAngle
+  context-free syntax
+
+    %% Abstraction
+
+    SVar "(" {Strategy ","}* ")" 	  -> Strategy {cons("Call")}
+
+    %% Match and build
+
+    "{" Strategy "}" 			  -> Strategy {cons("ScopeDefault")}
+
+     %%"<" Strategy ">" Term 		  -> Strategy {cons("BA")}
+     StrategyAngle Term 		  -> Strategy {cons("BA")}
+     "<" Strategy ">"			  -> StrategyAngle {bracket} %% {cons("AngleStrat")}
+
+    %% Combinators
+
+    Strategy "<+" Strategy 		  -> Strategy {cons("LChoice"),right}
+
+    "rec" Id "(" Strategy ")" 		  -> Strategy {cons("Rec")}
+
+    "not"   "(" Strategy ")" 		  -> Strategy {cons("Not")}
+    "where" "(" Strategy ")" 		  -> Strategy {cons("Where")}
+    "with"  "(" Strategy ")" 		  -> Strategy {cons("With"), prefer}
+    "test"  "(" Strategy ")" 		  -> Strategy {cons("Test")}
+
+    %% Primitives
+
+    "prim" "(" String ")" 		  -> Strategy {cons("PrimNoArgs")}
+    "prim" "(" String "," {Term ","}* ")" -> Strategy {cons("Prim")}
+
+    %% Congruence operators
+
+    String 				  -> Strategy {cons("StrCong")}
+    Int 				  -> Strategy {cons("IntCong")}
+    Real 				  -> Strategy {cons("RealCong")}
+    Char 			 	  -> Strategy {cons("CharCong")}
+
+    String "(" {Strategy ","}* ")" 	  -> Strategy {cons("CongQ")}
+
+    %%"(" {Strategy ","}* ")" 		  -> Strategy {cons("TupleCong"),avoid}
+
+    Strategy StrategyCurly		  -> Strategy {cons("AnnoCong")}
+    
+    "{" Strategy "}"		  	  -> StrategyCurly {cons("StrategyCurly")}
+
+    "("  ")" 		  		  -> Strategy {cons("EmptyTupleCong")}
+   "(" Strategy  ")" 		          -> Strategy {bracket}
+    "(" Strategy "," {Strategy ","}+ ")"  -> Strategy {cons("TupleCong")}
+
+%%    Mod 	  			  -> Strategy {cons("ModCongNoArgs")}
+%%    Mod "(" {Strategy ","}* ")"	  	  -> Strategy {cons("ModCong")}
+%%    Id "^" Id				  -> Mod {cons("Mod")}
+    "[" {Strategy ","}* "]" 		  -> Strategy {cons("ListCongNoTail")}
+    "[" {Strategy ","}* "|" Strategy "]"  -> Strategy {cons("ListCong")}
+
+%%    Strategy "#" "(" StrategyInj ")" 	  -> Strategy {cons("ExplodeCong")}
+%%    Strategy "#" "(" Strategy ")" 	  -> Strategy {cons("ExplodeCong")}
+    Strategy "#" StrategyParen	  	  -> Strategy {cons("ExplodeCong")}
+
+  %% Syntactic sugar sugar
+
+  sorts SwitchCase
+  context-free syntax
+
+    SVar  		  		  -> Strategy {cons("CallNoArgs")}
+    "\\" Rule "\\" 			  -> Strategy {cons("LRule")}
+    "(" Rule ")" 			  -> Strategy {cons("SRule")}
+    Strategy "+" Strategy 		  -> Strategy {cons("Choice"),right} 
+    Strategy "+>" Strategy 		  -> Strategy {cons("RChoice"),right}
+
+    "proceed" "(" {Strategy "," }+ ")" -> Strategy {cons("Proceed"), prefer}
+
+    "if" Strategy "then" Strategy 
+                  "else" Strategy "end"   -> Strategy {cons("CondChoice")}
+    "if" Strategy "then" Strategy "end"   -> Strategy {cons("IfThen")}
+
+    "switch" Strategy SwitchCase* "end"   -> Strategy {cons("SwitchChoiceNoOtherwise")}
+    "switch" Strategy SwitchCase*
+         "otherwise" ":" Strategy "end"   -> Strategy {cons("SwitchChoice")}
+
+    "case" Strategy ":" Strategy          -> SwitchCase {cons("SwitchCase")}
+
+    Strategy "=>" Term 		  	  -> Strategy {cons("AM")}
+
+    Term ":=" Term			  -> Strategy {cons("Assign")}
+
+  %% Priorities
+
+  context-free priorities
+    { Strategy StrategyCurly		  -> Strategy
+      Strategy "#" StrategyParen          -> Strategy
+    }
+  > { "!" Term 				  -> Strategy
+      "?" Term 				  -> Strategy
+    }
+  > StrategyAngle Term 		          -> Strategy
+  > Strategy "=>" Term 		  	  -> Strategy
+  > Strategy ";" Strategy 		  -> Strategy
+  > {right: 
+     Strategy "+" Strategy 		  -> Strategy
+     Strategy "<+" Strategy 		  -> Strategy
+     Strategy "+>" Strategy 		  -> Strategy
+     
+     Strategy "<" StrategyMid 
+              "+" Strategy 		  -> Strategy
+    }
+
+  context-free priorities
+    Strategy 				  -> StrategyMid
+  > Strategy "+" Strategy 		  -> Strategy
+
+  context-free priorities
+    { Strategy StrategyCurly      -> Strategy
+      Strategy "#" StrategyParen  -> Strategy
+    }
+    .> Term ":=" Term -> Strategy
+
+
+module Stratego-Sugar-Terms
+imports
+  Stratego-Core-Terms
+  Stratego-Sugar-Strategies
+
+exports
+  sorts LID
+  context-free syntax
+    LId 			-> LID  {cons("ListVar")}
+    LID				-> Var  {cons("Var")}
+    LID				-> ID
+
+  context-free syntax
+    "_" PreTerm 		 -> PreTerm {cons("BuildDefaultPT")}
+    "_" Term 			 -> Term {cons("BuildDefault"),prefer}
+
+    Char 			 -> PreTerm {cons("Char")}
+
+    PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
+    PreTerm                      -> Term {cons("NoAnnoList")}
+
+    "<" Strategy ">" Term 	 -> PreTerm {cons("App")}
+    "<" Strategy ">" Term 	 -> Term {cons("App"),prefer}
+
+    StrategyAngle		 -> PreTerm {cons("RootApp")}
+    StrategyAngle		 -> Term {cons("RootApp"),prefer}
+
+    "(" {Term ","}* ")" 	 -> PreTerm {cons("Tuple")}
+    "[" {Term ","}* "]" 	 -> PreTerm {cons("List")}
+    "[" {Term ","}* "|" Term "]" -> PreTerm {cons("ListTail")}
+
+  context-free priorities
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+  > PreTerm "{" {Term ","}* "}"	 -> Term {cons("AnnoList")}
+  > Var "@" Term 		 -> Term {cons("As")}
+
+module Stratego-Sugar-Signatures
+imports
+  Stratego-Core-Signatures
+  Stratego-Sugar-Constants
+
+exports
+
+  sorts Sort
+  context-free syntax
+    "[" {Sort ","}* "]"		 -> Sort {cons("SortList")}
+    "[" {Sort ","}* "|" Sort "]" -> Sort {cons("SortListTl")}
+    "(" {Sort ","}* ")"		 -> Sort {cons("SortTuple")}
+
+  sorts Kind
+  context-free syntax
+    "*" 			-> Kind {cons("Star")}
+    "**" 			-> Kind {cons("StarStar")}
+
+module Stratego-Core-Signatures
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+exports
+  sorts Sdecl
+  context-free syntax
+    "sorts" Sort* 		-> Sdecl {cons("Sorts")}
+    "constructors" Opdecl* 	-> Sdecl {cons("Constructors")}
+
+  sorts Sort
+  context-free syntax
+    LCID 			 -> Sort {cons("SortVar")}
+    UCID 			 -> Sort {cons("SortNoArgs")}
+    Id "(" {Sort ","}* ")" 	 -> Sort {cons("Sort")}
+
+  sorts Opdecl
+  context-free syntax
+    Id     ":" Type 		-> Opdecl {cons("OpDecl")}
+    String ":" Type 		-> Opdecl {cons("OpDeclQ")}
+           ":" Type 		-> Opdecl {cons("OpDeclInj")}
+
+  context-free syntax
+    "external" Id     ":" Type 	-> Opdecl {cons("ExtOpDecl")}
+    "external" String ":" Type 	-> Opdecl {cons("ExtOpDeclQ")}
+    "external"        ":" Type 	-> Opdecl {cons("ExtOpDeclInj")}
+
+  sorts Type ArgType ConstType FunType RetType
+  context-free syntax
+    Sort	                -> ConstType {cons("ConstType")}
+    {ArgType "*"}+ "->" RetType -> FunType {cons("FunType")}
+    "(" Type ")"                -> ArgType {bracket}
+    ConstType			-> ArgType
+    Type	                -> RetType
+    FunType			-> RetType {reject}
+
+    FunType			-> Type
+    ConstType			-> Type
+
+  %%%
+   %% Restriction is required for the Sort* in Sdecl: List(a) is
+   %% ambiguous.
+   %%%
+  context-free restrictions
+    Sort -/- [\(]
+
+module Stratego-Core-Terms
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+
+exports
+  sorts ID Var Wld
+  context-free syntax
+    Id 				-> Var  {cons("Var")}
+    Id				-> ID
+    %% ":" Var                  -> Var  {cons("SeqVar")}
+
+  sorts Term PreTerm
+  context-free syntax
+    Var 			 -> PreTerm 
+    Var 			 -> Term {prefer}
+
+    "_" 			 -> Wld {cons("Wld")}
+    Wld 			 -> PreTerm
+    Wld 			 -> Term {prefer}
+
+    Int 			 -> PreTerm {cons("Int")}
+    Real 			 -> PreTerm {cons("Real")}
+    String 			 -> PreTerm {cons("Str")}
+
+    Id "(" {Term ","}* ")" 	 -> PreTerm {cons("Op")}
+    String "(" {Term ","}* ")" 	 -> PreTerm {cons("OpQ")}
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+
+    PreTerm "{^" PreTerm "}"	 -> Term {cons("Anno")}
+
+    Var "@" Term 		 -> Term {cons("As"),prefer}
+    Var "@" PreTerm 		 -> PreTerm {cons("As")}
+
+  context-free priorities
+    Term "#" "(" Term ")" 	 -> PreTerm {cons("Explode")}
+  > Var "@" Term 		 -> Term {cons("As")}
+
+module Stratego-Core-Strategies
+imports
+  Stratego-Core-Terms
+  Stratego-Core-Constants
+  Stratego-Core-Signatures
+
+exports
+  sorts Def
+  context-free syntax
+    StrategyDef					 -> Def 
+    Id						 -> SVar {cons("SVar")}
+    "let" Def* "in" Strategy "end"		 -> Strategy {cons("Let")}
+    SVar "(" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallT")}
+
+    "call" "(" Term "|" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("CallDynamic")}
+
+
+  sorts StrategyDef
+  context-free syntax
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("SDefT")}
+
+    Anno+ StrategyDef -> Def {cons("AnnoDef")}
+
+    "external"
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")" "=" Strategy -> StrategyDef {cons("ExtSDefInl")}
+
+    "external"
+    Id "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"		   -> StrategyDef {cons("ExtSDef")}
+
+    "external"
+    EmptyId "(" {Typedid ","}* 
+       "|" {Typedid ","}* ")"		   -> StrategyDef {cons("ExtSDef")}
+
+
+  sorts EmptyId
+  lexical syntax
+  
+    -> EmptyId
+
+  sorts Anno
+  context-free syntax
+    "extend"      -> Anno {cons("Extend")}
+    "override"    -> Anno {cons("Override")}
+    "internal"    -> Anno {cons("Internal")}
+%%  "sealed"      -> Anno {cons("Sealed")}
+%%  "extensible"  -> Anno {cons("Extensible")}
+%%  "overridable" -> Anno {cons("Overridable")}
+
+  lexical syntax
+    
+    "extend"      -> Keyword
+    "override"    -> Keyword
+    "internal"    -> Keyword
+    "sealed"      -> Keyword
+    "extensible"  -> Keyword
+    "overridable" -> Keyword
+
+  lexical restrictions
+  
+    "extend"
+    "override"
+    "internal"
+    "sealed"
+    "extensible"
+    "overridable" -/- [a-zA-Z0-9\'\-\_]
+
+  sorts Typedid
+  context-free syntax
+    ID ":" Type 			  -> Typedid {cons("VarDec")}
+
+
+  sorts Strategy SVar StrategyParen StrategyMid 
+  context-free syntax
+    "(" Strategy ")"			  -> StrategyParen {cons("ParenStrat")}
+
+    "fail" 				  -> Strategy {cons("Fail")}
+    "id" 				  -> Strategy {cons("Id")}
+
+    "proceed" "(" {Strategy ","}* "|" {Term ","}* ")" -> Strategy {cons("ProceedT"), prefer}
+    "proceed"                                         -> Strategy {cons("ProceedNoArgs"), prefer}
+
+    %% Match and build
+
+    "?" Term 				  -> Strategy {cons("Match")}
+    "!" Term 				  -> Strategy {cons("Build")}
+    "{" {ID ","}* ":" Strategy "}" 	  -> Strategy {cons("Scope")}
+
+    %% Combinators
+
+    Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+    Strategy "<" StrategyMid 
+             "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
+    Strategy 				  -> StrategyMid
+
+    %% Primitives
+
+    "prim" "(" String "," {Strategy ","}* "|" {Term ","}*")"  -> Strategy {cons("PrimT")}
+
+    %% Traversal
+
+    "some" "(" Strategy ")" 		  -> Strategy {cons("Some")}
+    "one" "(" Strategy ")" 		  -> Strategy {cons("One")}
+    "all" "(" Strategy ")" 		  -> Strategy {cons("All")}
+
+  %% Priorities
+
+  context-free priorities
+    { "!" Term 				  -> Strategy {cons("Build")}
+      "?" Term 				  -> Strategy {cons("Match")}
+    }
+  > Strategy ";" Strategy 		  -> Strategy {cons("Seq"),right}
+  > {right: 
+     Strategy "<" StrategyMid 
+              "+" Strategy 		  -> Strategy {cons("GuardedLChoice"),right}
+    }
+
+  context-free syntax
+    "import-term" "(" ModName ")" -> Strategy {cons("ImportTerm")}
+
+module Stratego-Core-Modules
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Strategies
+  Stratego-Core-Signatures
+
+exports 
+  sorts Module
+  context-free syntax
+    "module" ModName Decl* 	 -> Module {cons("Module")}
+    "specification" Decl*	 -> Module {cons("Specification")}
+
+  sorts Decl 
+  context-free syntax
+    "imports" ImportModName* 	-> Decl {cons("Imports")}
+    "strategies" Def* 		-> Decl {cons("Strategies")}
+    "signature" Sdecl*  	-> Decl {cons("Signature")}
+
+  sorts ImportModName
+  context-free syntax
+    ModName              -> ImportModName {cons("Import")}
+  syntax
+    <ModName-CF> "/" "-" -> <ImportModName-CF> {cons("ImportWildcard")}
+
+module Stratego-Sugar-Modules
+imports
+  Stratego-Core-Modules
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Signatures
+  Stratego-Sugar-Overlays
+  Stratego-Sugar-Rules
+
+exports 
+
+  sorts Decl Def
+  context-free syntax
+    "rules" Def* 		-> Decl {cons("Rules")}
+    "overlays" Overlay* 	-> Decl {cons("Overlays")}
+
+    RuleDef 			-> Def 
+
+
+module Stratego-Sugar-StringQuotations
+exports
+
+  sorts
+    StringQuotation
+    StringQuotedPart1 StringQuotedChars1 DollarOpen1 DollarClose1 QuotedBracket1 Dollar1
+    StringQuotedPart2 StringQuotedChars2 DollarOpen2 DollarClose2 QuotedBracket2 Dollar2
+    StringQuotedPart3 StringQuotedChars3 DollarOpen3 DollarClose3 QuotedBracket3 Dollar3
+    StringQuotedPart4 StringQuotedChars4 DollarOpen4 DollarClose4 QuotedBracket4  Dollar4
+    Padding
+
+  context-free syntax
+
+    StringQuotation -> PreTerm
+
+  syntax
+
+    StringQuotation -> <PreTerm-CF>
+
+    "$" "[" Padding StringQuotedPart1*               "]"    -> StringQuotation {cons("StringQuotation1") }
+     Padding "[" <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> "]"    -> StringQuotedPart1 {cons("StringEscape1")}
+    <StringQuotedChars1-LEX>                                -> StringQuotedPart1 {cons("QStr")}
+    <Dollar1-LEX>                                           -> StringQuotedPart1 {cons("QDollar")}
+    "$" <QuotedBracket1-LEX> "$"                            -> StringQuotedPart1 {cons("QBr")}
+    ~[\[\]\$]+                                              -> <StringQuotedChars1-LEX>
+    [\[\]]                                                  -> <QuotedBracket1-LEX>
+    "$"                                                     -> <Dollar1-LEX>
+
+    "$" "{" Padding StringQuotedPart2*               "}"    -> StringQuotation {cons("StringQuotation2") }
+     Padding "{" <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> "}"    -> StringQuotedPart2 {cons("StringEscape2")}
+    <StringQuotedChars2-LEX>                                -> StringQuotedPart2 {cons("QStr")}
+    <Dollar2-LEX>                                           -> StringQuotedPart2 {cons("QDollar")}
+    "$" <QuotedBracket2-LEX> "$"                            -> StringQuotedPart2 {cons("QBr")}
+    ~[\{\}\$]+                                              -> <StringQuotedChars2-LEX>
+    [\{\}]                                                  -> <QuotedBracket2-LEX>
+    "$"                                                     -> <Dollar2-LEX>
+
+    "$" "(" Padding StringQuotedPart3*              ")"     -> StringQuotation {cons("StringQuotation3") }
+    Padding "(" <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> ")"     -> StringQuotedPart3 {cons("StringEscape3")}
+    <StringQuotedChars3-LEX>                                -> StringQuotedPart3 {cons("QStr")}
+    <Dollar3-LEX>                                           -> StringQuotedPart3 {cons("QDollar")}
+    "$" <QuotedBracket3-LEX> "$"                            -> StringQuotedPart3 {cons("QBr")}
+    ~[\(\)\$]+                                              -> <StringQuotedChars3-LEX>
+    [\(\)]                                                  -> <QuotedBracket3-LEX>
+    "$"                                                     -> <Dollar3-LEX>
+
+    "$" "<" Padding StringQuotedPart4*               ">"    -> StringQuotation {cons("StringQuotation4") }
+    Padding "<"  <LAYOUT?-CF> <Term-CF> <LAYOUT?-CF> ">"    -> StringQuotedPart4 {cons("StringEscape4")}
+    <StringQuotedChars4-LEX>                                -> StringQuotedPart4 {cons("QStr")}
+    <Dollar4-LEX>                                           -> StringQuotedPart4 {cons("QDollar")}
+    "$" <QuotedBracket4-LEX> "$"                            -> StringQuotedPart4 {cons("QBr")}
+    ~[\<\>\$]+                                              -> <StringQuotedChars4-LEX>
+    [\<\>]                                                  -> <QuotedBracket4-LEX>
+    "$"                                                     -> <Dollar4-LEX>
+   
+    %% Padding is a dummy lexical that will contain the indentation prefix of every quotation
+    <Padding-LEX>                                           -> Padding
+                                                            -> <Padding-LEX> {indentpadding}
+
+  lexical restrictions
+
+    StringQuotedChars1 -/- ~[\[\]\$]   
+    StringQuotedChars2 -/- ~[\{\}\$]    
+    StringQuotedChars3 -/- ~[\(\)\$]    
+    StringQuotedChars4 -/- ~[\<\>\$]
+    Dollar1            -/- [\[\]] . [\$]
+    Dollar2            -/- [\{\}] . [\$]
+    Dollar3            -/- [\(\)] . [\$]
+    Dollar4            -/- [\<\>] . [\$]
+
+module Stratego-Core-Constants
+exports
+  sorts Int Real String StrChar
+  lexical syntax
+    [\-]? [0-9]+ 		-> Int
+    [\-]? [0-9]+ [\.] [0-9]+ 	-> Real
+    "\"" StrChar* "\"" 		-> String
+    ~[\"\\] 			-> StrChar
+    [\\] [\"tnr\\] 		-> StrChar
+
+
+module Stratego-Sugar-Constants
+imports
+  Stratego-Core-Identifiers
+  Stratego-Core-Constants
+  Stratego-Sugar-StringQuotations
+exports
+  sorts Char CharChar
+  lexical syntax
+    "'" CharChar "'"		-> Char
+    ~[\']			-> CharChar
+    [\\] [\'ntr\ ]		-> CharChar
+    Char		 	-> Id {reject}
+
+module Stratego-Core-Identifiers
+exports
+  sorts ModName ModNamePart
+  lexical syntax
+    {ModNamePart "/"}+ -> ModName
+    [a-zA-Z\.\_] [a-zA-Z0-9\'\.\-\_]* -> ModNamePart
+  lexical restrictions
+    ModName -/- [a-zA-Z0-9\'\.\-\_]
+  lexical syntax
+    "imports" 		-> ModName {reject}
+    "overlays" 		-> ModName {reject}
+    "rules" 		-> ModName {reject}
+    "signature" 	-> ModName {reject}
+    "strategies" 	-> ModName {reject}
+
+  sorts Id LId LCID UCID Wld
+  lexical syntax
+    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]*     -> Id
+    [a-zA-Z\_] [a-zA-Z0-9\'\-\_]* "*" -> LId
+    [\'] [a-z]+                       -> Id
+
+    [a-z] [a-zA-Z0-9\'\-\_]*  -> LCID
+    [A-Z] [a-zA-Z0-9\'\-\_]*  -> UCID
+
+  lexical restrictions
+    Id   -/- [a-zA-Z0-9\'\_\*]
+    Id   -/- [\-].~[\>]
+    LId  -/- [a-zA-Z0-9\'\-\_]
+    LCID -/- [a-zA-Z0-9\'\-\_]
+    UCID -/- [a-zA-Z0-9\'\-\_]
+
+  lexical syntax
+    "_"     -> Id {reject}
+    "'"     -> Id {reject}
+
+    Keyword -> Id   {reject}
+    Keyword -> LId  {reject}
+    Keyword -> LCID {reject}
+    Keyword -> UCID {reject}
+
+  lexical restrictions
+    "all"
+    "case" %% not reserved kw
+    "constructors"
+    "else" %% not reserved kw
+    "end" %% not reserved kw
+    "external" %% not reserved kw
+    "fail"
+    "id"
+    "if" %% not reserved kw
+    "in"
+    "imports" %% not reserved kw
+    "let"
+    "module"
+    "not"
+    "one"
+    "overlays"
+    "otherwise" %% not reserved kw
+    "prim"
+    "rec" %% not reserved kw
+    "rules"
+    "script"
+    "signature"
+    "some"
+    "sorts"
+    "strategies"
+    "stratego"
+    "switch" %% not reserved kw
+    "test"
+    "then" %% not reserved kw
+    "where"
+    "import-term"
+      -/- [a-zA-Z0-9\'\-\_]
+  
+  context-free restrictions
+    Wld -/- [a-zA-Z0-9\'\-\_]
+
+  sorts Keyword
+  lexical syntax
+    "all"               -> Keyword
+    "constructors" 	-> Keyword
+    "fail" 		-> Keyword
+    "id" 		-> Keyword
+    "in" 		-> Keyword
+    "let" 		-> Keyword
+    "module" 		-> Keyword
+    "not" 		-> Keyword
+    "one" 		-> Keyword
+    "overlays" 		-> Keyword
+    "prim" 		-> Keyword
+    "rules" 		-> Keyword
+    "script" 		-> Keyword
+    "signature" 	-> Keyword
+    "some" 		-> Keyword
+    "sorts" 		-> Keyword
+    "strategies" 	-> Keyword
+    "stratego" 		-> Keyword
+    "test" 		-> Keyword
+    "where" 		-> Keyword
+    "import-term"	-> Keyword
+
+
+module Stratego-Core-Layout
+exports
+  sorts Ws ShortCom LongCom CommChar Asterisk Eof 
+  lexical syntax
+    [\t\ \n\r]			-> Ws
+
+    "//" ~[\n]* ([\n] | Eof)	-> ShortCom
+    "/*" CommChar* "*/"	-> LongCom
+				-> Eof  
+
+    ~[\*]     -> CommChar
+
+    "*"       -> Asterisk
+    Asterisk  -> CommChar
+
+  lexical restrictions
+    Asterisk -/- [\/]
+    Eof      -/- ~[]
+
+  lexical syntax
+    ShortCom 	-> LAYOUT
+    LongCom 	-> LAYOUT
+    Ws 		-> LAYOUT
+
+  context-free restrictions
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\*]
+    LAYOUT? -/- [\/].[\/]
+
+module Stratego-Sugar-Layout
+imports Stratego-Core-Layout
+%%exports
+%%  sorts VeryLongCom Eof VLCchar Backslash
+%%  lexical syntax
+%%    "\\end{code}" VLCchar* "\\begin{code}" -> VeryLongCom
+%%    "\\begin{code}" 			   -> VeryLongCom
+%%    "\\end{code}" VLCchar* Eof 		   -> VeryLongCom
+%%    "\\literate" VLCchar* "\\begin{code}"  -> VeryLongCom
+%%    ~[\\] 				   -> VLCchar
+%%    Backslash 				   -> VLCchar
+%%    [\\] 				   -> Backslash
+
+%%  lexical restrictions
+%%    Backslash -/- [b].[e].[g].[i].[n].[\{].[c].[o].[d].[e].[\}]
+%%    Eof -/- ~[]
+
+%%  lexical syntax
+%%    VeryLongCom -> LAYOUT
+
+
+
+module Stratego-Sugar
+imports
+  Stratego-Sugar-Layout
+  Stratego-Core-Identifiers
+  Stratego-Sugar-Constants 
+  Stratego-Sugar-Modules
+  Stratego-Sugar-Signatures
+  Stratego-Sugar-Terms
+  Stratego-Sugar-Strategies
+  Stratego-Sugar-Rules
+  Stratego-Sugar-DynamicRules
+  Stratego-Sugar-Overlays
+
+hiddens
+  context-free start-symbols Module
+
+module Stratego-Attributes
+
+imports
+  Stratego-Sugar
+  ResultTerms
+
+hiddens
+  context-free start-symbols
+    Module
+    Decl
+
+exports
+  sorts
+    DefType
+    Pattern
+    ADef
+    AttributeDef
+    AttributeRef
+    AttributeCall
+    AttributeCallLHS
+    AttributeDecl
+    AttributeType
+    AttributeTypeNoSort
+    DecoratorRef
+    DecoratorRefNoArgs
+    DecoratorId
+    AttributeKeyword
+    ChildDot
+    DotChild
+    AttributeId
+    AttributeDeclId
+    OptChildDot
+    OptDotChild
+    OptSortDot
+    NoSortDot
+    AttributeNameValue
+    NameDefBlockDef
+    PatternDefBlockDef
+    Where
+    NoWhere
+    UNDEFINED %% matches nothing
+  
+  lexical syntax
+  
+    %% Unreserve some Id's specifically for (built-in) attributes
+
+    "all"       -> AttributeId
+    "one"       -> AttributeId
+    "some"      -> AttributeId
+    "test"      -> AttributeId
+    "in"        -> AttributeId
+    "signature" -> AttributeId
+  
+  context-free restrictions
+  
+    AttributeId -/- [a-zA-Z0-9\'\-\_\*]
+
+    DecoratorRefNoArgs -/- [\(]  %% decorator(arg,y) vs. decorator (tuple, y)
+  
+  context-free syntax %% identifiers
+  
+    Id               -> AttributeId {prefer}
+  
+    AttributeId      -> AttributeDeclId
+    AttributeKeyword -> AttributeDeclId {reject}
+
+    AttributeId      -> DecoratorId
+    "*"              -> DecoratorId
+    "plain"          -> DecoratorId {prefer} %% treat as keyword
+    AttributeKeyword -> DecoratorId {reject}
+  
+  context-free syntax %% attributes
+    
+    AttributeDeclId "(" { Typedid "," }* "|" { Term "," }* ")" -> AttributeDecl {cons("Attribute")}
+    AttributeDeclId "(" { Typedid "," }*                   ")" -> AttributeDecl {cons("AttributeNoTerms")}
+    AttributeDeclId                                            -> AttributeDecl {cons("AttributeNoArgs")}
+    
+    AttributeId "(" { Typedid "," }* "|" { Term "," }* ")" -> AttributeDef {cons("Attribute")}
+    AttributeId "(" { Typedid "," }*                   ")" -> AttributeDef {cons("AttributeNoTerms")}
+    AttributeId                                            -> AttributeDef {cons("AttributeNoArgs")}
+    
+    AttributeId "(" { Strategy "," }* "|" { Term "," }* ")" -> AttributeRef {cons("Attribute")}
+    AttributeId "(" { Strategy "," }*                   ")" -> AttributeRef {cons("AttributeNoTerms")}
+    AttributeId                                             -> AttributeRef {cons("AttributeNoArgs")}
+    
+    DecoratorId "(" { Strategy "," }* "|" { Term "," }* ")" -> DecoratorRef {cons("Decorator")}
+    DecoratorId "(" { Strategy "," }*                   ")" -> DecoratorRef {cons("DecoratorNoTerms")}
+    DecoratorRefNoArgs                                      -> DecoratorRef
+    DecoratorId                                             -> DecoratorRefNoArgs {cons("DecoratorNoArgs")}
+
+    AttributeCallLHS "." AttributeRef -> AttributeCall {cons("AttributeRef")}
+    Term                              -> AttributeCallLHS
+    "<" Strategy ">" Term             -> AttributeCallLHS {reject}
+    
+    AttributeCall -> Strategy {prefer}
+    AttributeCall -> PreTerm {cons("AttributeTerm")}
+   
+  context-free syntax %% attribute equations: core syntax
+
+    "attributes" ADef* -> Decl {cons("Attributes")}
+
+    AttributeType { AttributeDecl "," }+               -> ADef {cons("ADecl")}
+    AttributeTypeNoSort Pattern "." AttributeNameValue -> ADef {cons("ADef")}
+    
+    DefType DecoratorRef* OptSortDot -> AttributeType {cons("Type")}
+    DefType DecoratorRef* NoSortDot  -> AttributeTypeNoSort {cons("Type")}
+    
+    OptChildDot AttributeDef "="  Strategy -> AttributeNameValue {cons("ADefStrategy")}
+    
+    "eq"        -> DefType {cons("Eq")}
+    "def"       -> DefType {cons("Def")}
+    "decorator" -> DefType {cons("Decorator")}
+    
+    Id "."     -> ChildDot {cons("Child")}
+    "." Id     -> DotChild {cons("DotChild")}
+    "id" "."   -> ChildDot {cons("IdChild"), prefer}    %% sugar
+    "." "id"   -> DotChild {cons("DotIdChild"), prefer} %% sugar
+    "root" "." -> ChildDot {reject}                     %% confusing
+    "." "root" -> DotChild {reject}                     %% confusing
+    
+    ChildDot   -> OptChildDot
+               -> OptChildDot {cons("NoChild")}
+    DotChild   -> OptDotChild
+               -> OptDotChild {cons("NoChild")}
+    
+    Sort "." -> OptSortDot {cons("Sort")}
+             -> OptSortDot {cons("NoSort")}
+             -> NoSortDot {cons("NoSort")}
+    
+    Term             -> Pattern
+    AttributeKeyword -> Pattern {reject}
+    AttributeCall    -> Pattern {reject}
+    "root"           -> Pattern {cons("Root"), prefer}
+
+  context-free syntax %% attribute equations: syntactic sugar
+ 
+    "decorators" ADef* -> Decl {cons("Decorators")}
+
+    %% Single-line attribute definitions
+    AttributeTypeNoSort AttributeNameValue    -> ADef {cons("ADefNoPattern"), avoid}
+    OptChildDot AttributeDef ":=" Term Where* -> AttributeNameValue {cons("ADefTerm")}
+    
+    %% Attribute definition blocks/groups
+    AttributeType Pattern      ":" NameDefBlockDef+    -> ADef {cons("NameDefBlock")}
+    AttributeType AttributeDef ":" PatternDefBlockDef+ -> ADef {cons("PatternDefBlock")}
+    
+    %% Definitions grouped in a NameDefBlock
+    ChildDot AttributeDef ":=" Term     Where* -> NameDefBlockDef {cons("ADefTerm")}
+    ChildDot AttributeDef "="  Strategy        -> NameDefBlockDef {cons("ADefStrategy")}
+
+    %% Definitions grouped in a PatternDefBlock
+    Pattern OptDotChild "->" ResultTerm NoWhere* -> PatternDefBlockDef {cons("APDefTerm")}
+    Pattern OptDotChild "->" Term       Where+   -> PatternDefBlockDef {cons("APDefTerm")}
+
+    "where" Strategy -> Where {cons("Where")}
+    "with" Strategy  -> Where {cons("With")}
+    UNDEFINED        -> NoWhere
+
+  context-free syntax %% Misc.
+    
+    "rewrite" Pattern "->" Term Where* -> ADef {cons("AnonymousRewriteRule")}
+      
+    "id"   -> PreTerm {cons("IdTerm")}
+    "fail" -> Term {cons("FailTerm")}
+
+  context-free syntax
+
+    %%  Either reject suffices, but the first may be too specific/confusing
+    %%  "<" Strategy ">" AttributeKeyword -> Term {reject}
+    AttributeKeyword -> Var {reject}
+    
+    AttributeKeyword -> ImportModName {reject}
+  
+  lexical syntax
+    
+    "eq"         -> AttributeKeyword
+    "def"        -> AttributeKeyword
+    "attributes" -> AttributeKeyword
+    "decorators" -> AttributeKeyword
+    "decorator"  -> AttributeKeyword
+    "rewrite"    -> AttributeKeyword
+  
+  context-free restrictions
+  
+    "eq"
+    "def"
+    "root"
+    "rewrite"
+    "decorator"
+    "decorators"
+    "attributes" -/- [a-zA-Z0-9\'\-\_]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-EditorService.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-EditorService.sdf	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,72 @@
+%% Adapted from org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf
+%% Removed Java imports
+%% Added QuotedTerms -> CompletionPart+ production
+%% Added "~anno:" Term[[StrategoHost]] -> CompletionAnno production
+%% Removed QuotedTerm -> CompletionPart
+
+module Stratego-EditorService
+imports
+  EditorService
+  StrategoMix[StrategoHost]
+
+exports
+  context-free start-symbols Module[[StrategoHost]]
+
+  sorts
+    QuotedTerm
+    QuotedTerms
+
+  context-free syntax
+
+    %% (Anti-)quotations
+    "descriptor" "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+                 "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+    "descriptor" "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+    "descriptor" "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+    "descriptor" "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
+    "descriptor" "|[" SemanticRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+                 "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
+                 "|[" SemanticRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+    "descriptor" "|[" Section "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" Section "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+    QuotedTerm -> Id {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> PropertyValue {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> URL {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> ModuleName {cons("FromMetaExpr")}
+    QuotedTerm -> Color {cons("FromMetaExpr")}
+    QuotedTerm -> Font  {cons("FromMetaExpr")}
+    QuotedTerm -> SectionName {cons("FromMetaExpr")}
+    QuotedTerm -> SemanticRule {cons("FromMetaExpr"), avoid}
+    %% QuotedTerm -> CompletionPart {cons("FromMetaExpr")}
+    QuotedTerm -> Section {cons("FromMetaExpr")}
+    QuotedTerm -> String {cons("FromMetaExpr")}
+
+    QuotedTerms -> OutlineRule*   {cons("FromMetaExpr")}
+    QuotedTerms -> ColorRule*     {cons("FromMetaExpr")}
+    QuotedTerms -> FoldingRule*   {cons("FromMetaExpr")}
+    QuotedTerms -> PropertyValues {cons("FromMetaExpr")}
+    QuotedTerms -> SemanticRule*  {cons("FromMetaExpr")}
+    QuotedTerms -> CompletionPart+ {cons("FromMetaExpr")}
+    QuotedTerms -> Section*        {cons("FromMetaExpr")}
+
+    "~"  Term[[StrategoHost]] -> QuotedTerm  {bracket}
+    "~*" Term[[StrategoHost]] -> QuotedTerms {bracket}
+
+    "~sort:" Term[[StrategoHost]] -> Sort {cons("FromMetaExpr"), prefer}
+    "~anno:" Term[[StrategoHost]] -> CompletionAnno {cons("FromMetaExpr"), prefer}
+
+    %% Stratego applications as anti-quotation
+    "<" Strategy[[StrategoHost]] ">" Term[[StrategoHost]] -> QuotedTerm {cons("App")}
+    StrategyAngle[[StrategoHost]]                         -> QuotedTerm {cons("RootApp"), avoid}
+
+  lexical syntax
+
+    "<" ~[]* ">" -> PropertyValue {reject}
+    "~" ~[]*     -> PropertyValue {reject}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-Sdf2.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-Sdf2.sdf	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,216 @@
+%%%
+ %% The definition of Sdf2 in Stratego tries to stay as close to the ASF+SDF
+ %% specification of SDF2 in "Syntax Definition for Language Prototyping" by
+ %% Eelco Visser.
+ %%
+ %% @author Martin Bravenboer
+ %%%
+module Stratego-Sdf2
+imports
+  languages/sdf2/syntax/Sdf2
+  StrategoMix[StrategoHost]
+
+exports
+  context-free start-symbols Module[[StrategoHost]]
+
+exports
+  %% HACK
+  context-free syntax
+    Group "." -> Group {non-assoc,cons("non-transitive")}
+
+
+  context-free syntax
+
+        "|[" SDF "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "d" "|[" SDF "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "m" "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "M" "|[" ModuleName "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "i" "|[" Import "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Section  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "s" "|[" Section  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Grammar  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+         "|[" Grammar* "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "G"  "|[" Grammar  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "G*" "|[" Grammar* "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "is" "|[" ImpSection "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Attributes "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "$" "|[" Attributes "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Production  "]|" -> Term[[StrategoHost]] {cons("ToTerm"), prefer}
+    "p" "|[" Production  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Productions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "p*" "|[" Productions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Restriction "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "r" "|[" Restriction "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Restrictions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "r*" "|[" Restrictions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Symbol      "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "A"  "|[" Symbol      "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "A*" "|[" Symbols     "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "cc" "|[" CharClass "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Renaming "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "ro" "|[" Renaming "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Alias "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "al" "|[" Alias "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "~"     Var[[StrategoHost]]  -> Symbol {cons("FromTerm")}
+    "~sym:" Term[[StrategoHost]] -> Symbol {cons("FromTerm")}
+
+
+%%%
+ %% Tricky: the reject needs to be lexical syntax to
+ %% avoid reject of variables. These lexical rejects only
+ %% reject the literal alternatives of an ambiguity. Thus,
+ %% the context-free variable is still allowed.
+ %%%
+
+  lexical syntax
+    %% MetaVar -> Sort {reject}
+    MetaVar -> IdCon  {reject}
+    MetaVar -> StrCon {reject}
+
+%%%
+ %% Symbols: Section 7.1
+ %%%
+
+  variables
+    SymbolMetaVar      -> Symbol
+    SymbolMetaVar "*"  -> Symbol*
+    SymbolMetaVar "+"  -> Symbol+
+
+    SymbolMetaVar "*"  -> {Symbol ","}*
+    SymbolMetaVar "+"  -> {Symbol ","}+
+
+  lexical syntax
+    [ABC][0-9\']* -> SymbolMetaVar
+    SymbolMetaVar -> MetaVar
+
+  lexical restrictions
+    SymbolMetaVar -/- [A-Za-z0-9\']
+
+%%%
+ %% Grammar: Section 7.2
+ %%%
+
+  variables
+    "G" [0-9\']* -> Grammar
+
+%%%
+ %% Productions and attributes: Section 7.3.1
+ %%%
+
+  variables
+    "attr" [0-9\']*     -> Attribute
+    "attr" [0-9\']* "*" -> {Attribute ","}*
+    "attr" [0-9\']* "+" -> {Attribute ","}+
+    "attrs" [0-9\']*        -> Attributes
+
+    "p" [0-9\']*     -> Production
+    "p" [0-9\']* "*" -> Production*
+    "p" [0-9\']* "+" -> Production+
+
+%%%
+ %% Sort: Section 7.4.1
+ %%%
+
+  variables
+     SortMetaVar -> Sort
+
+  lexical syntax
+    "S" [0-9\']* -> SortMetaVar
+    SortMetaVar -> MetaVar
+
+  lexical restrictions
+    SortMetaVar -/- [A-Za-z0-9\']
+
+%%%
+ %% CharClass: Section 7.4.2
+ %%%
+
+  variables
+    "cc" [0-9\']* -> CharClass {prefer}
+
+%%%
+ %% Literals
+ %%%
+
+  variables
+    StrConMetaVar -> StrCon
+
+  lexical syntax
+    "L" [0-9\']*  -> StrConMetaVar
+    StrConMetaVar -> MetaVar
+
+  lexical restrictions
+    StrConMetaVar -/- [A-Za-z0-9\']
+
+%%%
+ %% Groups and priorities
+ %%%
+
+  variables %% section 8.1.1
+    "g" [0-9\']*      -> Group
+    "gg" [0-9\']* "*" -> {Group ">"}*
+    "gg" [0-9\']* "+" -> {Group ">"}+
+
+    "pr" [0-9\']*     -> Priority
+    "pr" [0-9\']* "*" -> {Priority ","}*
+    "pr" [0-9\']* "+" -> {Priority ","}+
+
+    AssocMetaVar -> Associativity
+
+  lexical syntax
+    "as" [0-9\']* -> AssocMetaVar
+
+  lexical restrictions
+    AssocMetaVar -/- [A-Za-z0-9\']
+
+  variables %% section 8.4.1
+    "restr" [0-9\']*     -> Restriction
+    "restr" [0-9\']* "*" -> Restriction*
+    "restr" [0-9\']* "+" -> Restriction+
+
+  variables %% section 9.1.1
+    "ro" [0-9\']*     -> Renaming
+    "ro" [0-9\']* "*" -> Renaming*
+    "ro" [0-9\']* "+" -> Renaming+
+
+  variables %% section 9.2.1
+    "al" [0-9\']*     -> Alias
+    "al" [0-9\']* "*" -> Alias*
+    "al" [0-9\']* "+" -> Alias+
+
+  variables %% section 9.3.1
+    "Mid" [0-9\']* -> ModuleId
+    "M"   [0-9\']* -> ModuleName
+
+    "s" [0-9\']*     -> Section
+    "s" [0-9\']* "*" -> Section*
+    "s" [0-9\']* "+" -> Section+
+
+    "m" [0-9\']*     -> Module
+    "m" [0-9\']* "*" -> Module*
+    "m" [0-9\']* "+" -> Module+
+
+    "d" [0-9\']*     -> Definition
+
+    "i" [0-9\']*     -> Import
+    "i" [0-9\']* "*" -> Import*
+    "i" [0-9\']* "+" -> Import+
+
+    "is" [0-9\']*     -> ImpSection
+    "is" [0-9\']* "*" -> ImpSection*

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/StrategoStratego.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/StrategoStratego.sdf	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,7 @@
+module StrategoStratego
+imports
+  StrategoMix[StrategoHost]
+  EmbeddedStrategoMix[StrategoObject PreTerm[[StrategoHost]] Term[[StrategoHost]]]
+
+hiddens
+  context-free start-symbols Module[[StrategoHost]]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/editor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/editor-common.generated.str	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,255 @@
+module lib/editor-common.generated
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-file = parse-templatelang-file
+  parse-templatelang-file =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(include/TemplateLang.tbl)>
+    )
+
+  parse-string = parse-templatelang-string
+  parse-templatelang-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(include/TemplateLang.tbl)>
+    )
+  
+  parse-stream = parse-templatelang-stream
+  parse-templatelang-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(include/TemplateLang.tbl)>
+    )
+
+  pp-templatelang-string =
+    ast2abox(|[<import-term(include/TemplateLang.generated.pp.af)>,
+               <import-term(include/TemplateLang.pp.af)>]);
+    box2text-string(|100)
+
+strategies
+  
+  /**
+   * Processes an import during semantic analysis.
+   * Ensures proper caching of files and prevents
+   * processing duplicate imports more than once.
+   *
+   * @param resolve-path  Resolves the filesystem path of this import
+   * @param parse-file    Parses a file (optionally removing definition bodies
+   *                      so only signatures are stored in the cache)
+   * @param record-declarations
+   *                      Performs semantic analysis on a tree
+   */
+  open-import(resolve-path, parse-file, record-declarations):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path       := <resolve-path> import;
+        cache-path := <import-cache-path> path;
+        if not(<IsImported> path) then
+          rules(
+            IsImported: path
+          );
+          ( <is-newer> (cache-path, path);
+            file := <ReadFromFile> cache-path
+          <+
+            file := <parse-file> path;
+            if <file-exists> path then
+              // Only cache if on filesystem (e.g., ignore libstratego-lib)
+              <WriteToBinaryFile> (cache-path, file)
+            end        
+          );
+          {| CurrentFile:
+            rules(CurrentFile := path);
+            <record-declarations> file
+          |}
+        end
+      end
+
+  open-wildcard-import(resolve-path, parse-file, record-declarations, is-source-file):
+    import -> import
+    where
+      if not(!import => COMPLETION(_)) then
+        path := <resolve-path> import;
+        readdir;
+        list-loop(
+          if is-source-file then
+            <open-import(id, parse-file, record-declarations)>
+              $[[path]/[<id>]]
+          <+
+            try(?one-failed)
+          end
+        );
+        not(!one-failed)
+      end
+  
+  import-cache-path:
+    full-path -> cache-path
+    with
+      project-path := <project-path>;
+      cache-dir    := <file-exists <+ mkdir> $[[project-path]/.cache];
+      full-path'   := <string-replace(|"/", "+"); string-replace(|"\\", "+"); string-replace(|":", "+")> full-path;
+      cache-path   := $[[cache-dir]/[full-path'].sig]
+
+  project-path = prim("SSL_EXT_projectpath")
+  
+  plugin-path = prim("SSL_EXT_pluginpath")
+  
+  candidate-sorts = prim("SSL_EXT_candidatesorts")
+
+  is-newer:
+    (file1, file2) -> <id>
+    where
+      <gt> (<file-exists; modification-time> file1, <file-exists; modification-time> file2) 
+
+strategies
+  
+  editor-init =
+    // Ensure all dynamic rules are properly scoped
+    try(dr-scope-all-end);
+    dr-scope-all-start
+  
+  refresh-workspace-file:
+    path -> <prim("SSL_EXT_refreshresource", path)>
+  
+  string-starts-with-capital =
+    explode-string; Hd; is-upper
+
+strategies
+  
+  origin-term      = prim("SSL_EXT_origin_term", <id>)
+  origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-offset    = prim("SSL_EXT_origin_offset", <id>)
+  origin-location  = prim("SSL_EXT_origin_location", <id>)
+  origin-line      = origin-location => (<id>, _, _, _)
+  origin-column    = origin-location => (_, <id>, _, _)
+  origin-strip     = prim("SSL_EXT_origin_strip", <id>)
+  origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+  
+  origin-surrounding-comments =
+    prim("SSL_EXT_origin_surrounding_comments", "TemplateLang", <id>)
+    
+  origin-documentation-comment =
+    origin-surrounding-comments;
+    filter(string-as-chars(documentation-comment-chars));
+    concat-strings
+  
+  documentation-comment-chars:
+    ['*' | c*] -> <ltrim(' ' + '\t' + '\n' + '\r')> c*
+  
+  origin-track-forced(s) =
+    ![<id>]; all(s); ?[<id>]
+
+strategies
+
+  desugar-position(desugar|ast):
+    position -> position'
+    where
+      ast'  := <at-position(!<id>{MARKER()}|position)> ast;
+      ast'' := <topdown(repeat(preserve-annos({?x; desugar; not(?x)})))> ast';
+      position' := <position-of-term({?_{a*}; <one(?MARKER())> a*})> ast''
+   
+  at-position(s|position):
+    c#(t*) -> t'
+    where
+      !position => [i | position']
+    where
+      t' := c#(<at-index(at-position(s|position'))> (i, t*))
+
+  at-position(s|position):
+    t -> t'
+    where
+      !position => [];
+      t' := <s> t
+
+  position-of-term(is-term):
+    t -> []
+    where
+      is-term
+  
+  position-of-term(is-term):
+    _#(t*) -> <position-of-term(is-term|0)> t*
+  
+  position-of-term(is-term|start-index):
+    [t | t*] -> position
+    where
+      if i* := <position-of-term(is-term)> t then
+        position := [start-index | i*]
+      else
+        position := <position-of-term(is-term | <inc> start-index)> t*
+      end
+
+  term-at-position(|position):
+    t -> t'
+    where
+      at-position(?t'|position) 
+
+  parent-at-position(|position):
+    t -> t'
+    where
+      !position => [i, _];
+      t' := <subterm-at(|i)> t
+  
+  parent-at-position(|position):
+    t -> <parent-at-position(|position')> t'
+    where
+      !position => [i | position' @ [_, _ | _]];
+      t' := <subterm-at(|i)> t
+
+  subterm-at(|index):
+    _#(t*) -> <index(|<inc> index)> t*
+  
+signature constructors
+
+  COMPLETION : String -> Term
+  NOCONTEXT  : Term   -> Term
+  MARKER     : Term
+
+  // Below are copies of the signatures of the terms used in example
+  // trans/templatelang.str file. These definitions should also be automatically 
+  // generated in the imported include/TemplateLang.str module. However,
+  // to ensure that the example transformation doesn't break when the
+  // syntax is changed, we also hard-coded them here.
+          
+  Module   : ID * List(Entity)   -> Module
+  Entity   : ID * List(Property) -> Entity
+  Property : ID * Type           -> Property
+  Type     : ID                  -> Type
+
+strategies
+  
+  // Set markers for a given file. Use when checking files from a queued strategy.
+  // Current term: (ast-desugared, errors, warnings, notes) tuple
+  // ast: the root node of the file to set markers on 
+  set-markers(|ast) = prim("SSL_EXT_set_markers", ast)
+
+  // Indicate that one or more files need analysis. 
+  // Current term: ss a list of absolute file paths, or a single absolute file path to analyze
+  queue-analysis = 
+       (is-list; list-loop(queue-analysis))
+    <+ prim("SSL_EXT_queue_analysis")
+
+  // Set the total number of work units to complete. Can be called multiple times. 
+  // Current term: number of work units (int).
+  set-total-work-units = prim("SSL_EXT_set_total_work_units")
+  
+  // Complete one work unit and update progress monitors.
+  // Current term: ignored
+  complete-work-unit = prim("SSL_EXT_complete_work_unit")
+  
+  // Queue a strategy for background processing with a progress indicator.
+  // Current term: the term to pass to the background strategy
+  // s: the strategy, as string
+  // description: name of the task (will be shown in progress view)
+  queue-strategy(|s,description) = prim("SSL_EXT_queue_strategy", s, description)
+  
+  // Return the result of this strategy to indicate a non-completed (backgrounded) analysis.
+  // Editor services (hover, resolve) will be delayed until a complete analysis is performed. 
+  set-analysis-backgrounded = !"BACKGROUNDED"
+  

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/refactor-common.generated.str	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/TemplateLang.generated.pp.af)
+	

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/plugin.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/plugin.xml	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="tmpl" description="TemplateLang" language="TemplateLang" derivedFrom="DynamicRoot" validator="org.strategoxt.imp.editors.template.TemplateLangValidator" validatorClass="org.strategoxt.imp.editors.template.TemplateLangValidator"></language>
+       </extension>
+       <extension id="org.strategoxt.imp.editors.template.parser" name="TemplateLang Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="org.strategoxt.imp.editors.template.TemplateLangParseController" language="TemplateLang">
+          </parser>
+       </extension>    
+    </plugin>
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXCommon.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXCommon.sdf	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,113 @@
+module SPXCommon
+
+exports
+
+  lexical syntax
+
+    [a-zA-Z]* "CONTENTCOMPLETE" [0-9]+ -> CONTENTCOMPLETE {avoid}
+
+    [a-zA-Z][a-zA-Z0-9\_\-]* -> ID
+    "-"? [0-9]+            -> INT
+
+    "\"" StringChar* "\"" -> STRING
+    ~[\"\n]               -> StringChar
+    "\\\""                -> StringChar
+    BackSlashChar         -> StringChar
+    "\\"                  -> BackSlashChar
+
+    [\ \t\n\r] -> LAYOUT
+
+    [\*]                             -> CommentChar
+    "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
+    "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT
+
+    -> EOF
+
+  lexical restrictions
+
+    %% Ensure greedy matching for lexicals
+
+    CommentChar   -/- [\/]
+    INT           -/- [0-9]
+    ID            -/- [a-zA-Z0-9\_\-]
+
+    %% EOF may not be followed by any char
+
+    EOF           -/- ~[]
+
+    %% Backslash chars in strings may not be followed by "
+
+    BackSlashChar -/- [\"]
+
+  context-free restrictions
+
+    %% Ensure greedy matching for comments
+
+    LAYOUT? -/- [\ \t\n\r]
+    LAYOUT? -/- [\/].[\/]
+    LAYOUT? -/- [\/].[\*]
+
+	lexical restrictions
+
+		"main"
+		"module"
+		"package"
+		"imports"
+		"language" -/- [A-Za-z0-9\_]
+
+
+	lexical syntax
+
+    "language"          -> Reserved
+    "project"           -> Reserved
+    "retain"            -> Reserved
+    "with"              -> Reserved
+    "unimports"         -> Reserved
+
+
+
+    "imports"           -> Reserved
+    "overlays"          -> Reserved
+    "rules"             -> Reserved
+    "signature"         -> Reserved
+    "strategies"        -> Reserved
+    "attributes"        -> Reserved
+
+    "aliases"           -> Reserved
+    "lexical"           -> Reserved
+    "priorities"        -> Reserved
+    "context-free"      -> Reserved
+    "definition"        -> Reserved
+    "syntax"            -> Reserved
+    "variables"         -> Reserved
+    "module"            -> Reserved
+    "imports"           -> Reserved
+    "exports"           -> Reserved
+    "hiddens"           -> Reserved
+    "left"              -> Reserved
+    "right"             -> Reserved
+    "assoc"             -> Reserved
+    "non-assoc"         -> Reserved
+    "bracket"           -> Reserved
+    "sorts"             -> Reserved
+    "bracket"           -> Reserved
+    "sorts"             -> Reserved
+    "restrictions"      -> Reserved
+  	"as"								-> Reserved
+ 		"main"							-> Reserved
+ 		"__default"					-> Reserved
+ 		"__internal"				-> Reserved
+ 		"template"          -> Reserved
+ 		"templates"         -> Reserved
+
+ 		Reserved 						-> ReservedName[[ESV]]
+ 		ReservedName[[ESV]]	-> ID {reject}
+
+
+	lexical syntax
+ 		"package"  	-> EnclosingSymbol
+		"assembly"  -> EnclosingSymbol
+		"module"  	-> EnclosingSymbol
+
+	context-free syntax
+		"main"			-> MainID{cons("Main")}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXFake.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXFake.sdf	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,27 @@
+%% Fake module that provides just enough of SpoofaxLang
+%% to be able to use the template language.
+
+module SPXFake
+
+imports
+  SPXCommon
+  TemplateLang
+
+  SDFMix[SDF] [
+    "definition" Definition -> SDF {cons("Definition")}
+      => -> IGNORED
+    "module" ModuleName list:ImpSection* Sections -> Module {cons("module")}
+      => -> IGNORED
+    "left":Grammar "right":Grammar -> Grammar {assoc, cons("conc-grammars")}
+      => -> IGNORED
+    ImpSection -> Grammar {cons("imp-section")}
+      => -> IGNORED
+  ]
+
+exports
+  context-free start-symbols
+    Start
+
+  context-free syntax
+    Section* -> Start {cons("CompilationUnit")}
+    Grammar[[SDF]] -> Section

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/TemplateLang.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/TemplateLang.sdf	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,170 @@
+module TemplateLang
+imports
+  SPXCommon
+  SPXFake
+
+exports
+  context-free start-symbols
+    %% for testing
+    SdfProduction TemplateProduction Template
+
+  context-free syntax
+    %% tweaks for content completion
+    CONTENTCOMPLETE -> TemplateProduction {recover, cons("WATER")}
+    CONTENTCOMPLETE -> PlaceholderOption  {recover, cons("WATER")}
+    CONTENTCOMPLETE -> PlaceholderOptions {recover, cons("WATER")}
+
+  context-free syntax
+    %% options section
+    "template" "options" TemplateOption* -> Section {cons("TemplateOptions")}
+
+    "newlines" ":" NewlineOptionValue -> TemplateOption {cons("Newlines")}
+
+    "none"       -> NewlineOptionValue {cons("None")}
+    "leading"    -> NewlineOptionValue {cons("Leading")}
+    "trailing"   -> NewlineOptionValue {cons("Trailing")}
+    "separating" -> NewlineOptionValue {cons("Separating")}
+
+    "keyword" "-/-" Lookaheads[[SDF]] -> TemplateOption {cons("KeywordFollowRestriction")}
+
+  context-free syntax
+    %% references to productions using sort.cons notation in priority specification
+    SortCons                                   -> Group[[SDF]]  {cons("simple-ref-group")}
+    "{" SortCons+ "}"                          -> Group[[SDF]]  {cons("prods-ref-group")}
+    "{" Associativity[[SDF]] ":" SortCons+ "}" -> Group[[SDF]]  {cons("assoc-ref-group")}
+
+  context-free syntax
+    %% "grammars"
+    "templates" TemplateProduction* -> Section {cons("TemplateSection")}
+
+    %% BNF order and SDF order can't go together in the same section,
+    %% because of ambiguity. "X = Y -> Z": is it "X = Y" "Z" or "X =" "Y -> Z"?
+    "lexical" "syntax"      SdfProduction* -> Grammar[[SDF]] {cons("lexical-syntax")}
+    "context-free" "syntax" SdfProduction* -> Grammar[[SDF]] {cons("context-free-syntax")}
+
+    %% syntactic sugar for SDF
+    ID "=" Symbols[[SDF]] Attributes[[SDF]] -> SdfProduction {cons("SdfProduction")}
+    SortCons "=" Symbols[[SDF]] Attributes[[SDF]] -> SdfProduction {cons("SdfProductionWithCons")}
+
+    %% template productions
+    ID "=" Template Attributes[[SDF]] -> TemplateProduction {cons("TemplateProduction")}
+
+    %% template productions `sort.cons = ...'
+    SortCons "=" Template Attributes[[SDF]] -> TemplateProduction {cons("TemplateProductionWithCons")}
+
+    ID "." ID -> SortCons {cons("SortCons")}
+
+    %% placeholders
+    "<" Placeholder ">" -> TemplatePart1 {bracket}
+    "[" Placeholder "]" -> TemplatePart2 {bracket}
+    PlaceholderSort PlaceholderSuffix PlaceholderOptions -> Placeholder {cons("Placeholder")}
+
+    %% constructor identical to SDF sort to simplify some transformations
+    ID -> PlaceholderSort {cons("sort")}
+
+        -> PlaceholderSuffix {cons("None")}
+    "*" -> PlaceholderSuffix {cons("Star")}
+    "+" -> PlaceholderSuffix {cons("Plus")}
+    "?" -> PlaceholderSuffix {cons("Option")}
+
+                                 -> PlaceholderOptions {cons("NoOptions")}
+    ";" {PlaceholderOption ","}+ -> PlaceholderOptions {cons("Options")}
+
+    "hide"                 -> PlaceholderOption {cons("Hide")}
+    "wrap"                 -> PlaceholderOption {cons("Wrap")}
+    "anchor"               -> PlaceholderOption {cons("Anchor")}
+    "separator" "=" STRING -> PlaceholderOption {cons("Separator")}
+    "text" "=" STRING      -> PlaceholderOption {cons("Text")}
+
+  syntax
+    %% template parts
+    "<" {<TemplateLine1-CF> "\n"}+ ">" -> <Template-CF> {cons("Template")}
+    "<<" {<TemplateLine1-CF> "\n"}+ ">>" -> <Template-CF> {cons("Template"), avoid, deprecated("Use single brackets to delimit the template")}
+    <TemplatePart1-CF>* -> <TemplateLine1-CF> {cons("Line")}
+    <TemplateString1-LEX> -> <TemplatePart1-CF> {cons("String")}
+    <TemplateEscape1-LEX> -> <TemplatePart1-CF> {cons("Escape")}
+    <TemplateLayout-LEX>  -> <TemplatePart1-CF> {cons("Layout")}
+
+    "[" {<TemplateLine2-CF> "\n"}+ "]" -> <Template-CF> {cons("Template")}
+    "[[" {<TemplateLine2-CF> "\n"}+ "]]" -> <Template-CF> {cons("Template"), avoid, deprecated("Use single brackets to delimit the template")}
+    <TemplatePart2-CF>* -> <TemplateLine2-CF> {cons("Line")}
+    <TemplateString2-LEX> -> <TemplatePart2-CF> {cons("String")}
+    <TemplateEscape2-LEX> -> <TemplatePart2-CF> {cons("Escape")}
+    <TemplateLayout-LEX>  -> <TemplatePart2-CF> {cons("Layout")}
+
+    %% special: no placeholders, no newlines
+    '"' <TemplatePartQ-CF>* '"' -> <Template-CF> {cons("SingleLineTemplate")}
+    <TemplateStringQ-LEX> -> <TemplatePartQ-CF> {cons("String")}
+    <TemplateEscapeQ-LEX> -> <TemplatePartQ-CF> {cons("Escape")}
+    <TemplateLayout-LEX>  -> <TemplatePartQ-CF> {cons("Layout")}
+
+  lexical syntax
+  	[\r][\n] -> "\n"
+    [\ \t]+  -> TemplateLayout
+
+    (~[\\\<\>\ \t\r\n] | Backslash1)+ -> TemplateString1
+    (~[\\\[\]\ \t\r\n] | Backslash2)+ -> TemplateString2
+    ~[\\\"\ \t]+                      -> TemplateStringQ
+
+    [\\] -> Backslash1
+    [\\] -> Backslash2
+
+  lexical restrictions
+    TemplateLayout -/- [\ \t]
+
+    %% must be followed by:
+    TemplateString1 -/- ~[\\\<\>\ \t\r\n]
+    TemplateString2 -/- ~[\\\[\]\ \t\r\n]
+    TemplateStringQ -/- ~[\\\"\ \t]
+
+    %% if followed by a backslash, then the backslash must be followed by:
+    TemplateString1 -/- [\\].~[\<\>\\]
+    TemplateString2 -/- [\\].~[\[\]\\]
+
+    Backslash1 -/- [\<\>\\]
+    Backslash2 -/- [\[\]\\]
+
+  lexical syntax
+    %% combine sequences of escaped chars 
+    EscapedChar1+ -> TemplateEscape1
+    EscapedChar2+ -> TemplateEscape2
+
+    %% this are the escapes which StringTemplate has
+    "\\<"  -> EscapedChar1
+    "\\>"  -> EscapedChar1
+    "\\\\" -> EscapedChar1
+    "\\["  -> EscapedChar2
+    "\\]"  -> EscapedChar2
+    "\\\\" -> EscapedChar2
+
+    "<" EscapedChar* ">"    -> EscapedChar1
+    "<\\\\>" [\ \t\r]* [\n] -> EscapedChar1
+    "[" EscapedChar* "]"    -> EscapedChar2
+    "[\\\\]" [\ \t\r]* [\n] -> EscapedChar2
+
+    %% double-backslash isn't allowed in <<>> / [[]] templates
+    %% (would clash with <\\> / [\\] line continuation construct)
+    ("\\\\" | EscapedChar)+ -> TemplateEscapeQ
+
+    %% escapes allowed in a placeholder-like construct
+    "\\'" -> EscapedChar
+    '\\"' -> EscapedChar
+    "\\ " -> EscapedChar
+    "\\t" -> EscapedChar
+    "\\r" -> EscapedChar
+    "\\n" -> EscapedChar
+
+    "\\u" [0-9A-Fa-f]+ -> EscapedUnicodeChar
+    EscapedUnicodeChar -> EscapedChar
+
+    "\\" ~[]       -> EscapedChar  {recover, cons("WATER")}
+    "<" ~[\>]+ ">" -> EscapedChar1 {recover, cons("WATER")}
+    "[" ~[\]]+ "]" -> EscapedChar2 {recover, cons("WATER")}
+
+  lexical restrictions
+    TemplateEscape1 -/- [\\]
+    TemplateEscape1 -/- [\<].[\\]
+    TemplateEscape2 -/- [\\]
+    TemplateEscape2 -/- [\[].[\\]
+    TemplateEscapeQ -/- [\\]
+    EscapedUnicodeChar -/- [0-9A-Fa-f]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,28 @@
+module analyze
+
+imports
+  include/TemplateLang
+  templatelang/utils/attributes
+  templatelang/desugar
+
+strategies
+
+  analyze =
+    templatelang-desugar-top;
+    templatelang-desugar-sdf-top;
+    declare-top
+
+  declare-top = alltd(declare)
+
+  declare:
+    prod @ TemplateProduction(sort, _, attrs) -> <id>
+    where
+      rules( Declaration :+ sort -> prod );
+      if cons := <fetch-cons-name> attrs then
+        sortcons := (sort, cons);
+        rules( Declaration :+ sortcons -> prod )
+      end
+
+  // hook into templatelang/expand-template
+  get-declarations =
+    bagof-Declaration

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,45 @@
+module templatelang
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/TemplateLang
+  lib/editor-common.generated
+  analyze
+  templatelang/expand
+  templatelang/to-esv
+
+rules // Main editor interface (defined by editor/TemplateLang-Builders and -References.esv)
+
+  // Analyzes the current program, returning a tuple with errors, warnings, and notes;
+  // each a list of (term, message) tuples or simply (message) terms.
+  editor-analyze:
+    (ast, path, project-path) -> (ast', [], [], [])
+    with
+      editor-init;
+      ast' := <analyze> ast
+
+  // Prints the abstract syntax ATerm of a selection.
+  generate-aterm(s):
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := <s> selected
+
+  generate-aterm = generate-aterm(id)
+
+  // Only the builder options are different.
+  generate-desugared-aterm = generate-aterm
+
+  generate-expanded =
+    generate-aterm(
+      collect-om(?TemplateProduction(_, _, _));
+      map(expand-multi-line-template-production)
+    )
+
+  generate-esv =
+    generate-aterm(
+      collect-om(?TemplateProduction(_, _, _));
+      filter(template-to-completion-template)
+    )

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,170 @@
+module desugar
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  include/TemplateLang
+  templatelang/utils/attributes
+  templatelang/utils/misc
+
+strategies
+
+  templatelang-desugar-sdf-top =
+    alltd(origin-track-forced(templatelang-desugar-sdf))
+
+  templatelang-desugar-top =
+    alltd(origin-track-forced(templatelang-desugar))
+
+rules
+
+  templatelang-desugar-sdf:
+    SdfProduction(sort, symbol*, attr*) -> prod(symbol*, sort(sort), attr*)
+
+  templatelang-desugar-sdf:
+    SdfProductionWithCons(SortCons(sort, cons), symbol*, attrs(attr*)) ->
+      prod(symbol*, sort(sort), attrs(attr'*))
+    where with-spxverify(
+      attr'* := [sdf-cons(<double-quote> cons) | attr*]
+    )
+
+  templatelang-desugar-sdf:
+    SdfProductionWithCons(SortCons(sort, cons), symbol*, no-attrs()) ->
+      prod(symbol*, sort(sort), attrs(attr'*))
+    where with-spxverify(
+      attr'* := [sdf-cons(<double-quote> cons)]
+    )
+
+rules
+
+  templatelang-desugar:
+    TemplateProduction(sort, template, a) ->
+      TemplateProduction(sort, template', attrs(attr*))
+    where
+      with-spxverify(
+          template' := <origin-track-forced(templatelang-template-desugar)> template;
+          attr*     := <templatelang-get-attrs> a
+      )
+
+  templatelang-desugar:
+    TemplateProductionWithCons(SortCons(sort, cons), template, a) ->
+      TemplateProduction(sort, template', attrs(attr*))
+    where
+      with-spxverify(
+        template' := <origin-track-forced(templatelang-template-desugar)> template;
+        attr*     := [sdf-cons(<double-quote> cons) | <templatelang-get-attrs> a]
+      )
+
+  templatelang-get-attrs =
+    (no-attrs() -> []) + ?attrs(<id>)
+
+  templatelang-template-desugar:
+    SingleLineTemplate(elem*) -> SingleLineTemplate(elem'*)
+    where with-spxverify(
+      elem'* := <templatelang-element-desugar-top> elem* )
+
+  templatelang-template-desugar:
+    Template([Line(elem*)]) -> SingleLineTemplate(elem'*)
+    where with-spxverify(
+      elem'* := <templatelang-element-desugar-top> elem* )
+
+  templatelang-template-desugar:
+    Template(line*) -> Template(line'*)
+    where
+      not(!line* => [_])
+    where with-spxverify(
+      let line-is-empty =
+            ?Line([]) + ?Line([Layout(_)])
+
+          remove-head-if-empty =
+            try(\[<line-is-empty> | t] -> t\)
+
+          remove-last-if-empty =
+            try(at-last(\[<line-is-empty>] -> []\))
+
+          line-remove-trailing-layout =
+            try(Line(at-last(\[Layout(_)] -> []\)))
+
+          line-ensure-leading-layout =
+            ?Line([Layout(_) | _]) <+ Line(![Layout("") | <id>])
+
+          line-get-indent =
+            // Only non-blank lines matter.
+            ?Line([Layout(<string-length>), _ | _])
+
+          get-indent =
+            filter(line-get-indent);
+            list-min
+
+          string-unindent(|n) =
+            ?"" <+ origin-track-forced(string-as-chars(drop(|n)))
+
+          line-unindent(|n) =
+            Line([origin-track-forced(Layout(string-unindent(|n))) | id])
+
+          unindent =
+            if get-indent => n then
+              map(line-unindent(|n))
+            end
+      in
+        !line*;
+        remove-head-if-empty;
+        remove-last-if-empty;
+        templatelang-element-desugar-top;
+        map(line-remove-trailing-layout; line-ensure-leading-layout);
+        unindent;
+        ?line'*
+      end )
+
+  templatelang-element-desugar-top =
+    alltd(origin-track-forced(templatelang-element-desugar))
+
+  templatelang-element-desugar:
+    NoOptions() -> []
+
+  templatelang-element-desugar:
+    Options(x) -> <alltd(origin-track-forced(templatelang-option-desugar))> x
+
+  templatelang-option-desugar:
+    Separator(x) -> Separator(<origin-track-forced(un-double-quote; unescape)> x)
+
+  templatelang-option-desugar:
+    Text(x) -> Text(<origin-track-forced(un-double-quote; unescape)> x)
+
+  templatelang-element-desugar:
+    Escape(t) -> String(t')
+    where with-spxverify(
+      let parse-unicode =
+            {before*, mid, after*:
+               split-fetch-keep(not(is-hexnum)) => (before*, mid, after*);
+               ![<hex-chars-to-int> before*, mid | after*]
+            <+ ![<hex-chars-to-int>]
+            }
+
+          unescape =
+            string-as-chars(rec x(
+               \['\', ' ' | tail] -> [' '  | <x> tail]\
+            <+ \['\', '\' | tail] -> ['\'  | <x> tail]\
+            <+ \['\', '"' | tail] -> ['"'  | <x> tail]\
+            <+ \['\', '\''| tail] -> ['\'' | <x> tail]\
+            <+ \['\', 't' | tail] -> ['\t' | <x> tail]\
+            <+ \['\', 'r' | tail] -> ['\r' | <x> tail]\
+            <+ \['\', 'n' | tail] -> ['\n' | <x> tail]\
+            <+ \['\', '<' | tail] -> ['<'  | <x> tail]\
+            <+ \['\', '>' | tail] -> ['>'  | <x> tail]\
+            <+ \['\', '[' | tail] -> ['['  | <x> tail]\
+            <+ \['\', ']' | tail] -> [']'  | <x> tail]\
+            <+ \['\', 'u' | tail] -> <parse-unicode; [id | x]> tail\
+            <+ \['<', '\', '\', '>' | tail] -> <x> tail\
+            <+ \['[', '\', '\', ']' | tail] -> <x> tail\
+            <+ \[_ | tail] -> <x> tail\
+            <+ []
+            ))
+      in
+        t' := <origin-track-forced(unescape)> t
+      end
+      )
+
+  templatelang-element-desugar:
+    Layout(t) -> Layout(t')
+    where with-spxverify(
+      t' := <origin-track-forced(string-replace(|"\t", "  "))> t
+     )

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,229 @@
+module expand
+
+imports
+  include/TemplateLang
+  templatelang/utils/attributes
+  templatelang/to-string
+
+strategies
+
+  // Must be extended by other code to map a sort to its declarations.
+  get-declarations = fail
+
+strategies
+
+  // Many of the following strategies fail if a placeholder is encountered
+  // that has been expanded before (i.e., a cycle).
+
+  // The failure propagates up and is handled by the filter strategy in
+  // get-template-lines / get-template-elements, so that placeholders that
+  // would lead to infinite recursion are never expanded.
+
+  /**
+   * @type TemplateProduction ->? List(template-line)
+   */
+  expand-multi-line-template-production:
+    TemplateProduction(sort, SingleLineTemplate(elem*), a) ->
+      <memo(expand-template-production)> TemplateProduction(sort, Template([Line(elem*)]), a)
+
+  expand-multi-line-template-production:
+    TemplateProduction(_, Template(_), _) -> <memo(expand-template-production)>
+
+  expand-multi-line-template-production:
+    prod(_, _, _) -> <memo(expand-template-production)>
+
+  /**
+   * @type TemplateProduction ->? List(template-element)
+   */
+  expand-single-line-template-production:
+    TemplateProduction(_, SingleLineTemplate(_), _) -> <memo(expand-template-production)>
+
+  expand-single-line-template-production:
+    prod(_, _, _) -> <memo(expand-template-production)>
+
+  /**
+   * @type TemplateProduction ->? List(template-line) | List(template-element)
+   */
+  expand-template-production:
+    TemplateProduction(sort, template, attrs) -> result{score}
+    where
+      <not(is-reject)> attrs;
+      <not(Expanded)> sort
+    where {|Expanded:
+      rules( Expanded: sort -> sort );
+      result := <expand-template> template;
+      score := <determine-score> attrs
+    |}
+
+  // FIXME
+  // expand-template-production:
+  //   prod(_, _, _) -> <sdf-production-to-template; expand-template-production>
+
+  /**
+   * @type template-attributes -> Int
+   */
+  determine-score:
+    attrs -> <sum> [depr', prefer', avoid']
+    where
+      depr'   := <is-deprecated < !-100 + !0> attrs;
+      prefer' := <is-completion-prefer < !50 + !0> attrs;
+      avoid'  := <is-completion-avoid < !-50 + !0> attrs
+
+  /**
+   * @type SingleLineTemplate ->? List(template-element)
+   */
+  expand-template:
+    t @ SingleLineTemplate(elem*) -> elem'*
+    where
+      elem'* := <listbu(expand-template-element)> elem*
+
+  /**
+   * @type Template ->? List(template-line)
+   */
+  expand-template:
+    t @ Template(line*) -> line'*
+    where
+      line'* := <listbu(expand-template-line)> line*
+
+  /**
+   * @type Placeholder ->? Placeholder
+   */
+  is-template-placeholder:
+    Placeholder(sort(x), _, _) -> <id>
+    where
+      <get-declarations; one(?TemplateProduction(_, _, _))> x
+
+  /**
+   * @type List(template-line) ->? List(template-line)
+   *
+   * expand-template-line covers exactly all valid input terms except:
+   *  Line([indent @ Layout(_), Placeholder(sort(x), <None() + Plus()>, _)]) where <Expanded> x
+   */
+  expand-template-line:
+    [t @ Line([indent @ Layout(_), Placeholder(sort(x), <None() + Plus()>, option*)]) | tail] -> [line* | tail]
+    where
+      <not(Expanded)> x;
+      <not(one(?Hide()))> option*
+    where
+      line* := <get-template-lines(|indent) <+ ![t]> x
+
+  // Do not touch already expanded placeholders.
+  expand-template-line:
+    [t @ Line([Layout(_), Placeholder(sort(x), <None() + Plus()>, _)]) | tail] -> [t | tail]
+    where
+      <Expanded> x
+
+  // Do not touch option/star placeholders.
+  expand-template-line:
+    [t @ Line([Layout(_), Placeholder(_, <Option() + Star()>, option*)]) | tail] -> [t | tail]
+    where
+      <not(one(?Hide()))> option*
+
+  // Remove line with hidden placeholder.
+  expand-template-line:
+    [Line([Layout(_), Placeholder(_, _, option*)]) | tail] -> tail
+    where
+      <one(?Hide())> option*
+
+  expand-template-line:
+    [t @ Line(elem*) | tail] -> t'
+    where
+      not(!elem* => [Layout(_), Placeholder(_, <None() + Plus()>, _)])
+    where
+      t' := <![Line(<listbu(expand-template-element); not(?[])>) | tail] <+ !tail> elem*
+
+  expand-template-line:
+    [] -> <id>
+
+  /**
+   * @type List(template-element) ->? List(template-element)
+   *
+   * expand-template-element covers exactly all valid input terms except:
+   *  Placeholder(sort(x), <None() + Plus()>, _) where <Expanded> x
+   */
+  expand-template-element:
+    [t @ Placeholder(sort(x), m @ <None() + Plus()>, option*) | tail] ->
+      // [elem* | tail]
+      [Placeholder(sort(x), m, [Text(text) | option*]) | tail]
+    where
+      <not(Expanded)> x;
+      <not(one(?Hide()))> option*
+    where
+      elem* := <get-template-elements <+ ![t]> x;
+      text := <map(template-element-to-string); concat-strings> elem*
+
+  // Do not touch already expanded placeholders.
+  expand-template-element:
+    [t @ Placeholder(sort(x), <None() + Plus()>, _) | tail] -> [t | tail]
+    where
+      <Expanded> x
+
+  // Do not touch option/star placeholders.
+  expand-template-element:
+    [t @ Placeholder(_, <Option() + Star()>, option*) | tail] -> [t | tail]
+    where
+      <not(one(?Hide()))> option*
+
+  // Remove hidden placeholder.
+  expand-template-element:
+    [Placeholder(_, _, option*) | tail] -> tail
+    where
+      <one(?Hide())> option*
+
+  expand-template-element:
+    [t | tail] -> [t | tail]
+    where
+      not(!t => Placeholder(sort(x), <None() + Plus()>, _))
+
+  expand-template-element:
+    [] -> <id>
+
+strategies  // helpers
+
+  /**
+   * @type String -> List(template-line)
+   */
+  get-template-lines(|indent) =
+    get-declarations;
+    not(?[]);
+    filter(expand-multi-line-template-production);
+    choose-one-expansion;
+    map(Line(![indent | <id>]))
+
+  /**
+   * @type String -> List(template-element)
+   */
+  get-template-elements =
+    get-declarations;
+    not(?[]);
+    filter(expand-single-line-template-production);
+    choose-one-expansion
+
+  choose-one-expansion =
+       filter(not(oncetd(is-template-placeholder)));
+       qsort(template-compare);
+       Hd
+    <+
+       Hd
+
+  /**
+   * @type Any{Int} * Any{Int} -> Any
+   *
+   * The expansion with the least amount of literal characters is preferred.
+   */
+  template-compare:
+    (x{x-score}, y{y-score}) -> <id>
+    where
+      <gti> (x-score, y-score)
+    <+
+      <eq> (x-score, y-score);
+      <lti> (<template-character-count> x, <template-character-count> y)
+
+  template-character-count =
+    ?String(<string-length>)
+    <+ ?Layout(<string-length>)
+    <+ ?Text(<string-length>)
+    <+ crush(!0, addi, template-character-count)
+
+  // lower than (does not exist in library)
+  lti = not(gti)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.meta
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.meta	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-EditorService")])

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,117 @@
+module templatelang/to-esv
+
+imports
+  include/TemplateLang
+  lib/EditorService
+  templatelang/utils/attributes
+  templatelang/utils/misc
+  templatelang/expand
+  templatelang/to-string
+
+strategies
+
+  sdf-production-to-template:
+    prod([lit(text)], sort(sort), attrs) ->
+      TemplateProduction(sort, SingleLineTemplate([String(<un-double-quote> text)]), attrs)
+
+  template-to-completion-template:
+    prod @ TemplateProduction(sort, SingleLineTemplate(_), attrs) ->
+      |[ completion template ~sort : ~prefix = ~*part* ]|
+    where
+      not(<is-deprecated + is-reject> attrs)
+    where with-spxverify(
+      elem* := <expand-single-line-template-production> prod;
+      part* := <filter(template-element-to-esv);
+                template-to-completion-template-helper> elem*;
+      prefix := <build-prefix> part*
+    )
+    where
+      <accept-template-parts(|sort)> part*
+
+  template-to-completion-template:
+    prod @ TemplateProduction(sort, Template(_), attrs) ->
+      |[ completion template ~sort : ~prefix = ~*part* (blank) ]|
+    where
+      not(<is-deprecated + is-reject> attrs)
+    where with-spxverify(
+      line* := <expand-multi-line-template-production> prod;
+      part* := <filter(template-line-to-esv);
+                remove-cursor-except-first;
+                separate-by(|String("\n"));
+                template-to-completion-template-helper> line*;
+      prefix := <build-prefix> part*
+    )
+    where
+      <accept-template-parts(|sort)> part*
+
+  template-to-completion-template-helper =
+    flatten-list;
+    concatenate-consecutive-strings;
+    map(try(String(templatelang-escape)))
+
+  build-prefix =
+    map(template-element-to-string);
+    concat-strings;
+    string-replace(|"\\n", " ");
+    string-replace(|"\\t", " ");
+    string-as-chars(listbu(try( \[' ', ' ' | t] -> [' ' | t]\ )));
+    !String(<id>)
+
+  accept-template-parts(|sort) =
+    // not acceptable are:
+    //  * empty templates
+    //  * injections (i.e., a single element that isn't String(_))
+    ?[_, _ | _] + ?[String(_) | _]
+
+rules
+
+  template-line-to-esv:
+    Line([Layout(x), Placeholder(_, <Option() + Star()>, option*)]) ->
+      <spaces-to-tabs> [String(x), Cursor()]
+      where
+        <not(one(?Text(_)))> option*
+
+  template-line-to-esv:
+    Line(elem*) -> <filter(template-element-to-esv); not(?[]); spaces-to-tabs> elem*
+
+  spaces-to-tabs =
+    try([String(string-replace(|"  ", "\t")) | id])
+
+  // Any placeholder with title results in a placeholder with that title.
+  template-element-to-esv:
+    Placeholder(sort(sort), _, option*) ->
+      PlaceholderWithSort($[<[text]:], sort)
+      where
+        <one(?Text(text))> option*
+
+  // A and A+ result in a placeholder containing the shortest expansion of A.
+  template-element-to-esv:
+    placeholder @ Placeholder(sort(sort), <None() + Plus()>, option*) ->
+      PlaceholderWithSort($[<[text]:], sort)
+    where
+      <not(one(?Text(_) + ?Hide()))> option*
+    where
+      text := <expand-template-element;
+               map(template-element-to-string);
+               concat-strings
+               <+ !sort> [placeholder]
+
+  // A? and A* result in a 0-length placeholder.
+  template-element-to-esv:
+    Placeholder(sort(sort), <Option() + Star()>, option*) ->
+      PlaceholderWithSort("<:", sort)
+    where
+      <not(one(?Text(_)))> option*
+
+  template-element-to-esv:
+    Layout(x) -> String(x)
+
+  template-element-to-esv:
+    String(_) -> <id>
+
+  remove-cursor-except-first =
+    [[id, Cursor()] | remove-cursor] <+ [id | remove-cursor-except-first] <+ []
+
+  remove-cursor =
+    ?[[_, Cursor()] | <remove-cursor>] <+ [id | remove-cursor] <+ []
+

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-string.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-string.str	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,42 @@
+module to-string
+
+imports
+  include/TemplateLang
+  lib/EditorService
+
+rules // TemplateLang / completion template element to string
+
+  template-element-to-string:
+    Placeholder(_, _, option*) -> text
+    where
+      <one(?Text(text))> option*
+
+  template-element-to-string:
+    Placeholder(sort(sort), <None() + Plus()>, option*) -> sort
+    where
+      <not(one(?Text(_) + ?Hide()))> option*
+
+  template-element-to-string:
+    Placeholder(_, <Option() + Star()>, option*) -> ""
+    where
+      <not(one(?Text(_) + ?Hide()))> option*
+
+  template-element-to-string:
+    Placeholder(_, _, option*) -> ""
+    where
+      <one(?Hide())> option*
+
+  template-element-to-string:
+    Placeholder(t) -> t
+
+  template-element-to-string:
+    PlaceholderWithSort(t, _) -> <string-as-chars(Tl; init)> t
+
+  template-element-to-string:
+    Layout(x) -> x
+
+  template-element-to-string:
+    String(x) -> x
+
+  template-element-to-string:
+    Cursor() -> ""

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,53 @@
+module templatelang/utils/attributes
+imports
+	libstratego-lib
+	libstratego-sglr
+	include/TemplateLang
+
+signature
+  constructors
+    deprecated : String -> Term
+    deprecated : Term
+
+overlays
+  sdf-cons(x) = term(default(appl(unquoted("cons"), [fun(quoted(x))])))
+  sdf-deprecated() = term(default(fun(unquoted("deprecated"))))
+  sdf-deprecated(x) = term(default(appl(unquoted("deprecated"), [fun(quoted(x))])))
+
+  sdf-completion-prefer() = term(default(appl(unquoted("completion"), [fun(unquoted("prefer"))])))
+  sdf-completion-avoid() = term(default(appl(unquoted("completion"), [fun(unquoted("avoid"))])))
+  sdf-completion(x) = term(default(appl(unquoted("completion"), [x])))
+
+strategies
+
+  fetch-cons =
+    ?sdf-cons(_) //FIXME: + ?Constructor(_)
+
+  fetch-cons:
+    attrs(attr*) -> <getfirst(fetch-cons)> attr*
+
+  fetch-cons-name:
+    sdf-cons(cons) -> <un-double-quote> cons
+
+  // FIXME
+  // fetch-cons-name:
+  //   Constructor(cons) -> <un-double-quote> cons
+
+  fetch-cons-name:
+    attrs(attr*) -> <getfirst(fetch-cons-name)> attr*
+
+  is-bracket:
+    attrs(attr*) -> <one(?bracket())> attr*
+
+  is-deprecated:
+    attrs(attr*) -> <one(?deprecated(_) + ?deprecated()
+                         + ?sdf-deprecated() + ?sdf-deprecated(_))> attr*
+
+  is-reject:
+    attrs(attr*) -> <one(?reject())> attr*
+
+  is-completion-prefer:
+  	attrs(attr*) -> <one(?sdf-completion-prefer())> attr*
+
+  is-completion-avoid:
+    attrs(attr*) -> <one(?sdf-completion-avoid())> attr*

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str	Fri Feb  3 15:58:38 2012	(r24198)
@@ -0,0 +1,24 @@
+module templatelang/utils/misc
+
+imports
+  include/TemplateLang
+
+strategies
+
+  with-spxverify(s) = with(s)
+
+  concatenate-consecutive-strings =
+    rec r(
+         ?[String("") | <r>]
+      <+ \[String(a), String(b) | tail] -> <r> [String(<conc-strings> (a, b)) | tail]\
+      <+ [id | r]
+      <+ []
+    )
+
+  templatelang-escape =
+    string-replace(|"\\", "\\\\");
+    string-replace(|"\t", "\\t");
+    string-replace(|"\r", "\\r");
+    string-replace(|"\n", "\\n");
+    string-replace(|"'", "\\'");
+    string-replace(|"\"", "\\\"")

From tobivollebregt at gmail.com  Fri Feb  3 16:58:48 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Fri, 03 Feb 2012 15:58:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24199 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: .
	editor lib trans trans/utils
Message-ID: <20120203155848.BAE21108C024@mx3.tudelft.nl>

Author: tvo
Date: Fri Feb  3 15:58:48 2012
New Revision: 24199
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24199&sc=1

Log:
ESV concrete syntax

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EditorService-pretty.pp
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Fri Feb  3 15:58:38 2012	(r24198)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Fri Feb  3 15:58:48 2012	(r24199)
@@ -20,16 +20,16 @@
 	<!-- Imports -->
 	<property name="build.sdf.imports" value="-Idef ${lib}/SDF.def" />
 	<property name="build.stratego.args" value="
-    --library
-    -I &quot;${trans}&quot;
-    -I &quot;${basedir}&quot;
-    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm" />
+	    --library
+	    -I &quot;${trans}&quot;
+	    -I &quot;${basedir}&quot;
+	    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm" />
 
 	<!-- Optional: external .def and .jar locations
-  <property name="externaldef" location="syntax/${sdfmodule}.def"/>
-  <property name="externaljar" value="../lib.jar"/>
-  <property name="externaljarflags" value="-la org.lib"/>
-  -->
+	<property name="externaldef" location="syntax/${sdfmodule}.def"/>
+	<property name="externaljar" value="../lib.jar"/>
+	<property name="externaljarflags" value="-la org.lib"/>
+	-->
 
 	<!-- Environment configuration for command-line builds -->
 	<condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
@@ -40,7 +40,7 @@
 	<import file="build.generated.xml" />
 
 	<!-- Main target -->
-	<target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,spoofaximp.default.ctree" />
+	<target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,pppack-esv,spoofaximp.default.ctree" />
 
 	<!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
 	<available file="include/Stratego-Sdf2.tbl" property="stratego-sdf2.available" />
@@ -86,4 +86,16 @@
 		</antcall>
 		<antcall target="meta-sdf2table.helper" />
 	</target>
+
+	<!-- Target to create EditorService-pretty.pp.af from EditorService-pretty.pp -->
+	<available file="include/EditorService-pretty.pp.af" property="pppack-esv.available" />
+	<target name="pppack-esv" unless="pppack-esv.available">
+		<java classname="run" failonerror="true">
+			<arg value="org.strategoxt.tools.main-parse-pp-table"/>
+			<arg value="-i"/>
+			<arg value="${lib}/EditorService-pretty.pp"/>
+			<arg value="-o"/>
+			<arg value="${include}/EditorService-pretty.pp.af"/>
+		</java>
+	</target>
 </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Fri Feb  3 15:58:38 2012	(r24198)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Fri Feb  3 15:58:48 2012	(r24199)
@@ -19,7 +19,8 @@
   builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (source)
   builder  : "Show desugared AST (for selection)" = generate-desugared-aterm (openeditor) (realtime)
   builder  : "Show expanded templates (for selection)" = generate-expanded (openeditor) (realtime)
-  builder  : "Generate ESV (for selection)" = generate-esv (openeditor) (realtime)
+  builder  : "Generate ESV (abstract, for selection)" = generate-esv-abstract (openeditor) (realtime)
+  builder  : "Generate ESV (concrete, for selection)" = generate-esv-concrete (openeditor) (realtime)
 
 refactorings
 

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EditorService-pretty.pp
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/EditorService-pretty.pp	Fri Feb  3 15:58:48 2012	(r24199)
@@ -0,0 +1,145 @@
+%% Copied from org.strategoxt.imp.generator/src/sdf2imp/syntax/EditorService-pretty.pp
+[
+   PPTable                                -- R [ H [KW["pp-table"]] KW[":"] _1],
+   PrettyPrint                            -- R [ H [KW["pretty-print"]] KW[":"] _1],
+   Refactorings                           -- V is=2 vs=1 [H hs=0 [KW["refactorings"] _1]  _2],
+   Refactoring                            -- V is=2 [ H [ KW["refactoring"] _1  KW[":"] _2  KW["="] _3 _4] _5],
+   Refactoring.1:iter-star                -- _1,
+   Refactoring.4:iter-star                -- _1,
+   Refactoring.5:iter                     -- _1,
+   Shortcut                               -- H [KW["shortcut"] KW[":"] _1],
+   KeyBinding                             -- _1,
+   Shortcut                               -- H [KW["shortcut"] KW[":"] _1],
+   InteractionId                          -- _1,
+   UserInput                              -- V is=2 [H  [KW["input"]] _1],
+   UserInput.1:iter                       -- _1,
+   IdInputField                           -- H [KW["identifier"] KW[":"] _1],
+   IdInputField                           -- H [KW["identifier"] KW[":"] _1 KW["="] _2],
+   IdInputField                           -- H [KW["identifier"] KW[":"] _1 KW["="] _2],
+   TextInputField                         -- H [KW["text"] KW[":"] _1 KW["="] _2],
+   TextInputField                         -- H [KW["text"] KW[":"] _1 KW["="] _2],
+   ReferenceHoverRule   -- R [ H [ KW["reference"] _1 ] KW[":"] H [ _2 _3 ] ],
+   ReferenceRule        -- R [ H [ KW["reference"] _1 ] KW[":"] _2 ],
+   CompletionProposer   -- R [ H [ KW["completion"] KW["proposer"] ] KW[":"] _1 ],
+   CompletionLexical    -- R [ H [ KW["completion"] KW["lexical"] ] KW[":"] _1 ],
+   IdentifierLexical    -- R [ H [ KW["identifier"] KW["lexical"] ] KW[":"] _1 ],
+   Placeholder          -- H hs=0 [ _1 ],
+   PlaceholderWithSort  -- H hs=0 [ _1 _2 KW[">"] ],
+   CompletionKeyword    -- R [ H [ KW["completion"] KW["keyword"] ] KW[":"] H [ _1 _2 ] ],
+   CompletionTemplate   -- R [ H [ KW["completion"] KW["template"] ] KW[":"] H [ _1 _2 _3 ] ],
+   CompletionTemplate.2:iter-star -- _1,
+   CompletionTemplateWithSort   -- R [ V is=2 [ H [ KW["completion"] KW["template"] KW[":"] _1 KW["="]] ]
+                                                H [ _2 _3 _4 ] ],
+   CompletionTemplateWithSort.3:iter-star -- _1,
+   CompletionTemplateEx -- R [ V is=2 [ H [ KW["completion"] KW["template"] _1 KW[":"] _2 ]
+                                        H [ _3 _4 ] ] ],
+   CompletionTemplateEx.1:iter-star       -- _1,
+   CompletionTemplateEx.3:iter            -- _1,
+   CompletionTemplateEx.4:iter-star       -- _1,
+   NoCompletionPrefix                     -- ,
+   CompletionPrefix                       -- _1 KW["="],
+   CompletionTrigger    -- R [ H [ KW["completion"] KW["trigger"] ] KW[":"] H [ _1 _2 ] ],
+   HoverRule            -- R [ H [ KW["hover"]     _1 ] KW[":"] _2 ],
+   OccurrenceRule       -- R [ H [ KW["occurrence"] _1 ] H [ KW[":"] _2 ] ],
+   SemanticProvider     -- R [ H [ KW["provider"] ] KW[":"] _1 ],
+   OnSave               -- R [ H [ KW["on"] KW["save"] ] KW[":"] _1 _2 ],
+   Disambiguator        -- R [ H [ KW["disambiguator"] ] KW[":"] _1 ],
+   SemanticObserver     -- R [ H [ KW["observer"] ]  KW[":"] _1 ],
+   Builder              -- R [ H [ KW["builder"] ]   KW[":"] _1 H [ KW["="] _2 _3 ] ],
+   Builder.3:iter-star  -- _1,
+   BuilderCaption       -- R [ H [ KW["builder"] KW["caption"] ] KW[":"] _1 ],
+   OpenEditor           -- KW["(openeditor)"],
+   RealTime             -- KW["(realtime)"],
+   Persistent           -- KW["(persistent)"],
+   Meta                 -- KW["(meta)"],
+   Source               -- KW["(source)"],
+   Cursor               -- KW["(cursor)"],
+   Strategy             -- _1,
+   Attribute            -- H hs=0 [ KW["id"] KW["."] _1 ],
+   Analysis             -- V is=2 [H hs=0 [ KW["analysis"] _1 ] A(l,l,l) [_2] ],
+   References           -- V is=2 [H hs=0 [ KW["references"] _1 ] A(l,l,l) [_2] ],
+   Completions          -- V is=2 [H hs=0 [ KW["completions"] _1 ] A(l,l,l) [_2] ],
+   Occurrences          -- V is=2 [H hs=0 [ KW["occurrences"] _1 ] A(l,l,l) [_2] ],
+   Strategy             -- _1,
+   Attribute            -- H hs=0 [ KW["id"] KW["."] _1 ],
+   Builders             -- V is=2 [H hs=0 [KW["builders"] _1] A(l,l,l,l,l,l) [_2]],
+   Builders.2:iter-star -- _1,
+   Colorer              -- V is=2 [H hs=0 [KW["colorer"] _1] A(l,l,l,l,l,l) [_2]],
+   Colorer.2:iter-star  -- _1,
+   ColorDef             -- R [ _1 KW["="] _2],
+   ColorRuleAll         -- R [ H [ KW["environment"] _1 ] KW[":"] H [ _2 ] ],
+   ColorRule            -- R [ H [                   _1 ] KW[":"] H [ _2 ] ],
+   ColorRuleAllNamed    -- R [ H [ KW["environment"] _1 ] KW[":"] H [ _2 ] KW["="] H [ _3 ] ],
+   ColorRuleNamed       -- R [ H [                   _1 ] KW[":"] H [ _2 ] KW["="] H [ _3 ] ],
+   Attribute            -- _1 _2 _3,
+   Attribute            -- _1 _2 _3,
+   AttributeRef         -- _1,
+   FoldRuleAll          -- H [ KW["all"] _1 _2 ],
+   FoldRule             -- H [ _1 _2 ],
+   Blank                -- KW["(blank)"],
+   Disable              -- KW["(disabled)"],
+   Folded               -- KW["(folded)"],
+   None                 -- ,
+   OutlineRule          -- _1,
+   Values                 -- H [ _1 ],
+   Values.1:iter-star-sep -- _1 KW[","],
+   Language             -- V is=2 [H hs=0 [KW["language"] _1] A(l,l,l) [_2]],
+   Language.2:iter-star -- _1,
+   LanguageName         -- R [ KW["name"] KW[":"] _1 ],
+   LanguageId           -- R [ KW["id"] KW[":"] _1 ],
+   Extensions           -- R [ KW["extensions"] KW[":"] _1 ],
+   Description          -- R [ KW["description"] KW[":"] _1 ],
+   Table                -- R [ KW["table"] KW[":"] _1 ],
+   TableProvider        -- R [ KW["table"] KW["provider"] KW[":"] _1 ],
+   UnmanagedTablePrefix -- R [ H [ KW["unmanaged"] KW["table"] ] KW[":"] H hs=0 [ _1 KW["*"] ] ],
+   StartSymbols         -- R [ H [ KW["start"] KW["symbols"] ] KW[":"] _1 ],
+   NoStartSymbols       -- KW["_"],
+   URL                  -- R [ KW["url"] KW[":"] _1 ],
+   Extends              -- R [ KW["extends"] KW[":"] _1 ],
+   Aliases              -- R [ KW["aliases"] KW[":"] _1 ],
+   LineCommentPrefix    -- R [ H [ KW["line"] KW["comment"] ] KW[":"] _1 ],
+   BlockCommentDefs     -- R [ H [ KW["block"] KW["comment"] ] KW[":"] _1 ],
+   FenceDefs            -- R [ KW["fences"] KW[":"] A(l,l) [ _1 ] ],
+   FenceDef             -- R [ _1 _2 ],
+   IndentDefs           -- R [ H [ KW["indent"] KW["after"]] KW[":"] V [ _1 ] ],
+   IndentDef            -- _1,
+   BlockCommentDef      -- H [ _1 _2 _3 ],
+   String               -- _1,
+   NoContinuation       --,
+   CommentLine          -- R [ H hs=0 [ KW["//"] _1 ]],
+   EmptyLine            -- R [KW[""]],
+   Token                -- _1,
+   TK_IDENTIFIER        -- KW["identifier"],
+   TK_NUMBER            -- KW["number"],
+   TK_LAYOUT            -- KW["layout"],
+   TK_STRING            -- KW["string"],
+   TK_KEYWORD           -- KW["keyword"],
+   TK_OPERATOR          -- KW["operator"],
+   TK_VAR               -- KW["var"],
+   TK_JUNK              -- KW["junk"],
+   TK_UNKNOWN           -- KW["unknown"],
+   NORMAL               -- ,
+   BOLD                 -- KW["bold"],
+   ITALIC               -- KW["italic"],
+   BOLD_ITALIC          -- H [KW["bold"] KW["italic"]],
+   ColorDefault         -- KW["_"],
+   NoColor              -- ,
+   ColorRGB             -- H  [_1 _2 _3],
+   Outliner             -- V is=2 [H hs=0  [KW["outliner"] _1] V [_2]],
+   Outliner.2:iter-star -- _1,
+   Folding              -- V is=2 [H hs=0  [KW["folding"] _1] V [_2]],
+   Folding.2:iter-star  -- _1,
+   Sort                 -- _1,
+   ListSort             -- _1 KW["*"],
+   ConstructorOnly      -- H hs=0 [KW["_"] KW["."] _1],
+   Constructor          -- _1,
+   SortAndConstructor   -- H hs=0 [_1 KW["."] _2],
+   Module               -- V vs = 1 [H  [KW["module"] _1] _2 _3 ],
+   Module.3:iter-star   -- _1,
+   Imports              -- V is=2 [KW["imports"] _1],
+   Imports.1:iter       -- _1,
+   Import               -- _1,
+   ImportRenamed        -- H hs=0 [_1 KW["["] _2 KW["]"]],
+   NoImports            --
+]
+

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Fri Feb  3 15:58:38 2012	(r24198)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Fri Feb  3 15:58:48 2012	(r24199)
@@ -5,10 +5,12 @@
   libstratego-gpp
   libstratego-aterm
   include/TemplateLang
+  lib/EditorService
   lib/editor-common.generated
   analyze
   templatelang/expand
   templatelang/to-esv
+  utils/pp
 
 rules // Main editor interface (defined by editor/TemplateLang-Builders and -References.esv)
 
@@ -32,14 +34,30 @@
   // Only the builder options are different.
   generate-desugared-aterm = generate-aterm
 
+  // Expanded templates (input to completion template generator)
   generate-expanded =
     generate-aterm(
       collect-om(?TemplateProduction(_, _, _));
       map(expand-multi-line-template-production)
     )
 
+  // Generate completion templates
   generate-esv =
-    generate-aterm(
-      collect-om(?TemplateProduction(_, _, _));
-      filter(template-to-completion-template)
-    )
+    collect-om(?TemplateProduction(_, _, _));
+    filter(template-to-completion-template)
+
+  generate-esv-abstract =
+    generate-aterm(generate-esv)
+
+  generate-esv-concrete:
+    (selected, position, ast, path, project-path) ->
+      (filename,
+        $[module example
+          [result]])
+    with
+      filename := <guarantee-extension(|"generated.esv")> path;
+      result   := <generate-esv;
+                   // R boxes are formatted incorrectly outside an A box.
+                   // Completions is the A box ...
+                   !Completions("", <id>);
+                   pp-descriptor-to-string> selected

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp.str	Fri Feb  3 15:58:48 2012	(r24199)
@@ -0,0 +1,49 @@
+/* Copied from org.strategoxt.imp.generator/src/sdf2imp/util/pp.str */
+
+module sdf2imp/util/pp
+
+imports
+  libstratego-gpp
+  lib/EditorService
+
+strategies
+
+  /**
+   * Pretty-prints the descriptor AST to a string.
+   *
+   * @type descriptor -> String
+   */
+  pp-descriptor-to-string =
+    descriptor-to-abox;
+    box2text-string(|80)
+  
+  /**
+   * Pretty-prints the descriptor AST to a Box representation.
+   *
+   * @type descriptor -> Box
+   */    
+  descriptor-to-abox =
+    topdown(try(pp-fix-string-quotes));
+    ast2box(|[<descriptor-pp-table>])
+  
+  descriptor-pp-table =
+    DescriptorPPTable
+  <+
+    tbl := <import-term(include/EditorService-pretty.pp.af)>;
+    rules(DescriptorPPTable := tbl)
+    
+  // HACK: add quotes omitted by the stratego parser
+  
+  pp-fix-string-quotes:
+    String(string) -> String(string')
+    where
+      <not(string-starts-with(|"\""))> string
+    with
+      string' := <conc-strings> ("\"", string, "\"")
+  
+  pp-fix-string-quotes:
+    Placeholder(string) -> Placeholder(string')
+    where
+      <not(string-starts-with(|"<"))> string
+    with
+      string' := <conc-strings> ("<", string, ">")

From tobivollebregt at gmail.com  Fri Feb  3 16:58:53 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Fri, 03 Feb 2012 15:58:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24200 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor
	lib trans trans/templatelang trans/templatelang/utils trans/utils
Message-ID: <20120203155853.0F5D6CC2D3@mx4.tudelft.nl>

Author: tvo
Date: Fri Feb  3 15:58:52 2012
New Revision: 24200
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24200&sc=1

Log:
integrate SDF generation (both concrete and abstract)

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/sdf-desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/sdf-parenthesize.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/contract.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/tokenize.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str
      - copied, changed from r24199, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Fri Feb  3 15:58:48 2012	(r24199)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Fri Feb  3 15:58:52 2012	(r24200)
@@ -21,6 +21,8 @@
   builder  : "Show expanded templates (for selection)" = generate-expanded (openeditor) (realtime)
   builder  : "Generate ESV (abstract, for selection)" = generate-esv-abstract (openeditor) (realtime)
   builder  : "Generate ESV (concrete, for selection)" = generate-esv-concrete (openeditor) (realtime)
+  builder  : "Generate SDF (abstract, for selection)" = generate-sdf-abstract (openeditor) (realtime)
+  builder  : "Generate SDF (concrete, for selection)" = generate-sdf-concrete (openeditor) (realtime)
 
 refactorings
 

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/sdf-desugar.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/sdf-desugar.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -0,0 +1,42 @@
+/**
+ * sdf-desugar implements the following desugarings:
+ *
+ *   - remove double quotes in String literals: cons, lit
+ *   - replace no-attrs by attrs([])
+ *   - add quotes to generated quoted stings
+ *
+ * @author Martin Bravenboer <martin.bravenboer at gmail.com>
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+module sdf2imp/lib/sdf-desugar
+
+imports
+  libstratego-aterm
+
+strategies
+  
+  sdf-desugar =
+      topdown(repeat(SdfDesugar); try(SdfDesugarOnce))
+
+  SdfDesugar :
+    no-attrs() -> attrs([])
+
+  SdfDesugar :
+    term(default(t)) -> term(t)
+
+rules
+
+  SdfDesugarOnce =
+    alltd(EnsureQuotes);
+    term(implode-aterm)
+
+  SdfDesugarOnce :
+    lit(s) -> lit(<un-double-quote> s)
+
+  SdfDesugarOnce :
+    ci-lit(s) -> ci-lit(<un-single-quote> s)
+  
+  EnsureQuotes :
+    quoted(s) -> quoted(<double-quote> s)
+    where
+      not(<un-double-quote> s)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/sdf-parenthesize.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/sdf-parenthesize.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -0,0 +1,111 @@
+module lib/sdf-parenthesize // core-sdf-parenthesize
+
+imports
+  libstratego-lib
+  libstratego-sglr
+
+
+strategies
+  io-core-sdf-parenthesize =
+    io-wrap(parenthesize-Sdf2)
+
+  parenthesize-Sdf2 =
+    innermost(Sdf2Parenthesize)
+
+
+rules
+
+  Sdf2Parenthesize :
+    comp(t_0) -> comp(Parenthetical(t_0))
+    where <(?union(_, _)
+            + ?isect(_, _)
+            + ?diff(_, _)
+            + fail)> t_0
+
+  Sdf2Parenthesize :
+    diff(t_0, t_1) -> diff(Parenthetical(t_0), t_1)
+    where <(?union(_, _)
+            + ?isect(_, _)
+            + fail)> t_0
+
+  Sdf2Parenthesize :
+    diff(t_0, t_1) -> diff(t_0, Parenthetical(t_1))
+    where <(?union(_, _)
+            + ?isect(_, _)
+            + ?diff(_, _)
+            + fail)> t_1
+
+  Sdf2Parenthesize :
+    iter(t_0) -> iter(Parenthetical(t_0))
+    where <(?label(_, _)
+            + ?alt(_, _)
+            + fail)> t_0
+
+  Sdf2Parenthesize :
+    iter-star(t_0) -> iter-star(Parenthetical(t_0))
+    where <(?label(_, _)
+            + ?alt(_, _)
+            + fail)> t_0
+
+  Sdf2Parenthesize :
+    opt(t_0) -> opt(Parenthetical(t_0))
+    where <(?label(_, _)
+            + ?alt(_, _)
+            + fail)> t_0
+
+  Sdf2Parenthesize :
+    alt(t_0, t_1) -> alt(Parenthetical(t_0), t_1)
+    where <(?label(_, _)
+            + ?alt(_, _)
+            + fail)> t_0
+
+  Sdf2Parenthesize :
+    alt(t_0, t_1) -> alt(t_0, Parenthetical(t_1))
+    where <(?label(_, _) + fail)> t_1
+
+  Sdf2Parenthesize :
+    seq(t_0, t_1) -> seq(Parenthetical(t_0), t_1)
+    where <(?alt(_, _) + fail)> t_0
+
+  Sdf2Parenthesize :
+    seq(t_0, t_1) -> seq(t_0, Parenthetical(t_1))
+    where <(?alt(_, _) + fail)> t_1
+
+  Sdf2Parenthesize :
+    isect(t_0, t_1) -> isect(Parenthetical(t_0), t_1)
+    where <(?union(_, _) + fail)> t_0
+
+  Sdf2Parenthesize :
+    isect(t_0, t_1) -> isect(t_0, Parenthetical(t_1))
+    where <(?union(_, _)
+            + ?isect(_, _)
+            + fail)> t_1
+
+  Sdf2Parenthesize :
+    non-transitive(t_0) -> non-transitive(Parenthetical(t_0))
+    where <(?non-transitive(_) + fail)> t_0
+
+  Sdf2Parenthesize :
+    union(t_0, t_1) -> union(t_0, Parenthetical(t_1))
+    where <(?union(_, _) + fail)> t_1
+
+  Sdf2Parenthesize :
+    conc(t_0, t_1) -> conc(Parenthetical(t_0), t_1)
+    where <(?conc(_, _) + fail)> t_0
+
+  Sdf2Parenthesize :
+    with-arguments(t_0, t_1) -> with-arguments(Parenthetical(t_0), t_1)
+    where <(?with-arguments(_, _) + fail)> t_0
+
+  Sdf2Parenthesize :
+    with-arguments(t_0, t_1) -> with-arguments(t_0, Parenthetical(t_1))
+    where <(?with-arguments(_, _) + fail)> t_1
+
+  Sdf2Parenthesize :
+    conc-grammars(t_0, t_1) -> conc-grammars(t_0, Parenthetical(t_1))
+    where <(?conc-grammars(_, _) + fail)> t_1
+
+
+signature
+  constructors
+    Parenthetical : Unknown -> Unknown

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str	Fri Feb  3 15:58:48 2012	(r24199)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -3,6 +3,7 @@
 imports
   include/TemplateLang
   templatelang/utils/attributes
+  templatelang/analyze
   templatelang/desugar
 
 strategies
@@ -10,19 +11,23 @@
   analyze =
     templatelang-desugar-top;
     templatelang-desugar-sdf-top;
+    init-template-options;
     declare-top
 
-  declare-top = alltd(declare)
+  declare-top =
+    alltd(declare-template-section)
 
-  declare:
-    prod @ TemplateProduction(sort, _, attrs) -> <id>
-    where
-      rules( Declaration :+ sort -> prod );
-      if cons := <fetch-cons-name> attrs then
-        sortcons := (sort, cons);
-        rules( Declaration :+ sortcons -> prod )
-      end
-
-  // hook into templatelang/expand-template
-  get-declarations =
-    bagof-Declaration
+  // hooks
+
+  index-symbol-definition =
+    ?(key, type, value);
+    rules( Declaration :+ (key, type) -> value )
+
+  resolve-symbol-definition =
+    ?(key, type);
+    Declaration
+
+  resolve-symbol-definitions =
+    ?(key, type);
+    bagof-Declaration;
+    nub

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Fri Feb  3 15:58:48 2012	(r24199)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -4,13 +4,16 @@
   libstratego-lib
   libstratego-gpp
   libstratego-aterm
+  libstratego-sglr
   include/TemplateLang
   lib/EditorService
   lib/editor-common.generated
   analyze
   templatelang/expand
   templatelang/to-esv
-  utils/pp
+  templatelang/to-sdf
+  utils/pp-esv
+  utils/pp-sdf
 
 rules // Main editor interface (defined by editor/TemplateLang-Builders and -References.esv)
 
@@ -61,3 +64,19 @@
                    // Completions is the A box ...
                    !Completions("", <id>);
                    pp-descriptor-to-string> selected
+
+  // Generate SDF
+  generate-sdf =
+    collect-om(?TemplateProduction(_, _, _));
+    <template-sections-to-sdf> [TemplateSection(<id>)]
+
+  generate-sdf-abstract =
+    generate-aterm(generate-sdf)
+
+  generate-sdf-concrete:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"generated.sdf")> path;
+      result   := <generate-sdf;
+                   !'module(unparameterized("example"), [], [exports(<id>)]);
+                   pp-sdf-to-string> selected

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -0,0 +1,90 @@
+module templatelang/analyze
+
+imports
+  include/TemplateLang
+  templatelang/utils/attributes
+  templatelang/utils/contract
+
+signature
+  constructors
+    TemplateBySort     : SymbolType
+    TemplateBySortCons : SymbolType
+    TemplateOption     : SymbolType 
+
+signature
+  constructors
+    Newlines                 : TemplateOption
+    KeywordFollowRestriction : TemplateOption
+
+strategies
+
+  index-symbol-definition = fail
+  resolve-symbol-definition = fail
+  resolve-symbol-definitions = fail
+
+strategies
+
+  declare-template-section:
+    TemplateSection(prod*) -> <id>
+    where
+      with-spxverify(
+          <map(declare-template)> prod*
+      )
+
+  declare-template:
+    prod @ TemplateProduction(sort, _, attrs) -> <id>
+    where
+      with-spxverify(
+          <index-symbol-definition> (sort, TemplateBySort(), prod)
+        ; if cons := <fetch-cons-name> attrs then
+              sortcons := (sort, cons)
+            ; <index-symbol-definition> (sortcons, TemplateBySortCons(), prod)
+          end
+      )
+
+strategies
+
+  //resolve templatelang options 
+  get-template-option =
+    ? key
+    ; with-spxverify( 
+        result := <resolve-symbol-definition> (key, TemplateOption()) 
+        , !"Failed to get template option"
+      )
+    ; !result 
+
+  index-template-option = 
+    ? (key, value)
+    ; with-spxverify(  
+        <index-symbol-definition> (key, TemplateOption() ,  value) 
+        , !"Failed to index template option"
+      )
+
+  init-template-options =
+    with-spxverify(
+      if not(<resolve-symbol-definition> (Newlines(), TemplateOption())) then
+          <index-template-option> (Newlines(), None())
+        ; <index-template-option> (KeywordFollowRestriction(), None())
+      end
+    )
+
+  declare-template-section:
+    TemplateOptions(opt*) -> <id>
+    where
+      with-spxverify(
+          <map(declare-template-option)> opt*
+      )
+
+  declare-template-option:
+    Newlines(t) -> <id>
+    where
+      with-spxverify(
+          <index-template-option> (Newlines(), t)
+      )
+
+  declare-template-option:
+    KeywordFollowRestriction(t) -> <id>
+    where
+      with-spxverify(
+          <index-template-option> (KeywordFollowRestriction(), t)
+      )

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str	Fri Feb  3 15:58:48 2012	(r24199)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -3,15 +3,11 @@
 imports
   include/TemplateLang
   templatelang/utils/attributes
+  templatelang/analyze
   templatelang/to-string
 
 strategies
 
-  // Must be extended by other code to map a sort to its declarations.
-  get-declarations = fail
-
-strategies
-
   // Many of the following strategies fail if a placeholder is encountered
   // that has been expanded before (i.e., a cycle).
 
@@ -91,7 +87,8 @@
   is-template-placeholder:
     Placeholder(sort(x), _, _) -> <id>
     where
-      <get-declarations; one(?TemplateProduction(_, _, _))> x
+      <<resolve-symbol-definitions> (<id>, TemplateBySort());
+       one(?TemplateProduction(_, _, _))> x
 
   /**
    * @type List(template-line) ->? List(template-line)
@@ -184,7 +181,7 @@
    * @type String -> List(template-line)
    */
   get-template-lines(|indent) =
-    get-declarations;
+    <resolve-symbol-definitions> (<id>, TemplateBySort());
     not(?[]);
     filter(expand-multi-line-template-production);
     choose-one-expansion;
@@ -194,7 +191,7 @@
    * @type String -> List(template-element)
    */
   get-template-elements =
-    get-declarations;
+    <resolve-symbol-definitions> (<id>, TemplateBySort());
     not(?[]);
     filter(expand-single-line-template-production);
     choose-one-expansion

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str	Fri Feb  3 15:58:48 2012	(r24199)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -4,6 +4,7 @@
   include/TemplateLang
   lib/EditorService
   templatelang/utils/attributes
+  templatelang/utils/contract
   templatelang/utils/misc
   templatelang/expand
   templatelang/to-string
@@ -114,4 +115,3 @@
 
   remove-cursor =
     ?[[_, Cursor()] | <remove-cursor>] <+ [id | remove-cursor] <+ []
-

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.meta
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.meta	Fri Feb  3 15:58:52 2012	(r24200)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-Sdf2")])

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -0,0 +1,235 @@
+module to-sdf
+imports
+  libstratego-lib
+  libstratego-sglr
+  include/TemplateLang
+  templatelang/analyze
+  templatelang/utils/attributes
+  templatelang/utils/contract
+  templatelang/utils/misc
+  templatelang/utils/tokenize
+
+strategies
+
+  /** @type List(TemplateSection) -> List(grammar) */
+  template-sections-to-sdf:
+    section* -> sdf-section'*
+    where
+      with-spxverify(
+        verify(ListOf(?TemplateSection(_)) | section* , "ListOf(?TemplateSection(_)) ::template-sections-to-sdf")
+      )
+    where with-spxverify (
+      sdf-section*  := <map(template-section-to-sdf)> section*;
+      sdf-section'* := <add-contentcomplete; add-lexical-restrictions> sdf-section*
+    )
+    where with-spxverify (
+      verify(ListOf(?context-free-syntax(_) + ?lexical-restrictions(_)) | sdf-section'* , "ListOf(?context-free-syntax(_) + ?lexical-restrictions(_)) ::template-sections-to-sdf")
+    )
+
+  /** @type TemplateSection -> grammar */
+  template-section-to-sdf:
+    TemplateSection(prod*) -> G|[
+      context-free syntax
+        p*
+    ]|
+    where with-spxverify (
+      // main productions
+      p* := <map(template-production-to-sdf)> prod*
+    )
+
+  /** @type List(grammar) -> List(grammar) */
+  add-contentcomplete:
+    sdf-section* -> [sdf-section*, injections*]
+    where with-spxverify (
+      A* := <collect-om(?sort(_)); nub; string-sort-ex> sdf-section*;
+      p* := <map(sort-to-contentcomplete)> A*;
+      if !p* => [] then
+        injections* := []
+      else
+        injections* := [context-free-syntax(p*)]
+      end
+    )
+
+  /** @type List(grammar) -> List(grammar) */
+  add-lexical-restrictions:
+    sdf-section* -> [sdf-section*, restrictions*]
+    where with-spxverify(
+      let ends-with-identifier-char =
+            where(
+              explode-string;
+              un-double-quote-chars;
+              // Must end with idenfifier character, may not be preceded by backslash.
+              reverse; ?[<is-alphanum + '_' + '-'> | <not(?['\' | _])>]
+            )
+      in
+        A* := <collect-om(lit(ends-with-identifier-char)); nub; string-sort-ex> sdf-section*;
+        r  := <get-template-option> KeywordFollowRestriction();
+        if (!A* => []) + (!r => None()) then
+          restrictions* := []
+        else
+          restrictions* := [lexical-restrictions([follow(A*, r)])]
+        end
+      end
+     )
+
+  // Used when rewriting `Sort.Cons' in priority sections to a production.
+  template-production-to-sdf-no-attrs:
+    TemplateProduction(S', t, _) -> p|[ A* -> S' ]|
+    where with-spxverify (
+      A* := <template-to-sdf> t
+    )
+
+  template-production-to-sdf:
+    TemplateProduction(S', t, attrs) -> p|[ A* -> S' attrs' ]|
+    where with-spxverify (
+      A* := <template-to-sdf> t;
+      attrs' := <attrs(filter(not(?sdf-completion(_)))) <+ no-attrs()> attrs
+    )
+
+  // Single line template.
+  //  -OR-
+  // Template with only a placeholder. (i.e., injection)
+  // The placeholder is at the start AND at the end of the template!
+  template-to-sdf:
+    < ?SingleLineTemplate(elem*)
+    + ?Template([Line(elem* @ [Layout(_), Placeholder(_, _, _)])]) > -> A*
+    where with-spxverify (
+      A* := <maybe-separating(
+               filter(template-element-to-sdf-sep <+ template-element-to-sdf),
+               filter(template-element-to-sdf)
+             );
+             flatten-list> elem*
+    )
+
+  // Multi line template.
+  template-to-sdf:
+    Template(line*) -> A*
+    where with-spxverify (
+      A* := <filter(?Line([Layout(_), _ | _]));
+             maybe-separating(
+                !(<id>, 0); thread-map(template-line-to-sdf-sep); ?(<id>, _),
+                map(template-line-to-sdf)
+             );
+             flatten-list> line*
+    )
+  maybe-separating(yes, no) =
+    if <get-template-option> Newlines() => Separating() then yes else no end
+
+rules
+
+  template-line-to-sdf-sep:
+    (Line([Layout(_), p @ Placeholder(sort(S), mult, option*)]), state) ->
+      (result, state)
+    where
+      <one(Separator("\n"))> option*
+    where
+      L := "\"\\n\"";
+      switch !(mult, state)
+        case ?(None()  , 0) : result := A|[ (S L)  ]|
+        case ?(Option(), 0) : result := A|[ (S L)? ]|
+        case ?(Star()  , 0) : result := A|[ (S L)* ]|
+        case ?(Plus()  , 0) : result := A|[ (S L)+ ]|
+        case ?(None()  , 1) : result := A|[ (L S)  ]|
+        case ?(Option(), 1) : result := A|[ (L S)? ]|
+        case ?(Star()  , 1) : result := A|[ (L S)* ]|
+        case ?(Plus()  , 1) : result := A|[ (L S)+ ]|
+      end
+
+  template-line-to-sdf-sep:
+    (Line(elem*), 0) -> (<template-line-to-sdf-sep-helper> elem*, 1)
+
+  template-line-to-sdf-sep:
+    (Line(elem*), 1) ->
+      ([ A|[ "\"\\n\"" ]| | <template-line-to-sdf-sep-helper> elem*], 1)
+
+  template-line-to-sdf-sep-helper =
+    not(?[Layout(_), Placeholder(_, _, <one(Separator("\n"))>)]);
+    filter(template-element-to-sdf-sep <+ template-element-to-sdf)
+
+  template-element-to-sdf-sep:
+    Placeholder(sort(S), Star(), option*) -> A|[ {S "\"\\n\""}* ]|
+    where <one(Separator("\n"))> option*
+
+  template-element-to-sdf-sep:
+    Placeholder(sort(S), Plus(), option*) -> A|[ {S "\"\\n\""}+ ]|
+    where <one(Separator("\n"))> option*
+
+rules
+
+  template-line-to-sdf =
+    ?Line(<id>);
+    if not(?[Layout(_), Placeholder(_, _, _)]) then
+      switch <get-template-option> Newlines()
+        case ?None()     : id
+        case ?Leading()  : ![String("\n") | <id>]
+        case ?Trailing() : (elem* -> [elem*, String("\n")])
+      end
+    end;
+    filter(template-element-to-sdf)
+
+  template-element-to-sdf:
+    String(x) -> <string-to-sdf> x
+
+  template-element-to-sdf:
+    Placeholder(sort(S), None(), _) -> A|[ S ]|
+
+  template-element-to-sdf:
+    Placeholder(sort(S), Option(), _) -> A|[ S? ]|
+
+  template-element-to-sdf:
+    Placeholder(sort(S), Star(), option*) -> A|[ S* ]|
+    where <not(one(Separator(not(string-is-layout))))> option*
+
+  template-element-to-sdf:
+    Placeholder(sort(S), Star(), option*) -> A|[ { S L }* ]|
+    where <one(Separator(not(string-is-layout)))> option*
+    where with-spxverify ( L := <separator-to-literal> option*)
+
+  template-element-to-sdf:
+    Placeholder(sort(S), Plus(), option*) -> A|[ S+ ]|
+    where <not(one(Separator(not(string-is-layout))))> option*
+
+  template-element-to-sdf:
+    Placeholder(sort(S), Plus(), option*) -> A|[ { S L }+ ]|
+    where <one(Separator(not(string-is-layout)))> option*
+    where with-spxverify( L := <separator-to-literal> option*  )
+
+  char-is-layout =
+    ' ' + '\t' + '\r' + '\n'
+
+  string-is-layout =
+    string-as-chars(all(char-is-layout))
+
+  remove-layout =
+    string-as-chars(filter(not(char-is-layout)))
+
+  separator-to-literal =
+    getfirst(?Separator(<remove-layout; templatelang-escape; double-quote>))
+
+  sort-to-contentcomplete:
+    sort(S) -> p|[ CONTENTCOMPLETE -> S {cons(L)} ]|
+    where
+      L := $["COMPLETION-[S]"]
+
+strategies
+
+  /**
+   * Sorts a list of terms on the outermost string within each term.
+   */
+  string-sort-ex =
+    qsort(<string-lt> (<collect-one(is-string)>, <collect-one(is-string)>))
+
+  /**
+   * Split on the edges delimiting identifiers.
+   * E.g. "func(x,y)" => ["func", "(", "x", ",", "y", ")"]
+   */
+  string-to-sdf =
+    // FIXME: Use identifier lexical (or keyword follow restriction?) defined by the language.
+    string-edge-tokenize(is-alphanum + '_');
+    // FIXME: Case insensitive literals need ci-lit/single-quote.
+    map({raw, sdf:
+      ?raw; !lit(<templatelang-escape; double-quote>); ?sdf;
+      if <explode-string; at-last(is-alphanum + '_')> raw then
+        rules(Restrictions :+= sdf)
+      end
+    })

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/contract.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/contract.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -0,0 +1,86 @@
+/* Adapted from org.strategoxt.imp.editors.spoofax/trans/utils/contract.str */
+
+module 	utils/contract
+
+rules
+
+  with-spxverify(s, msg) = with-verify(s, id, msg)
+
+  with-spxverify(s) = with-verify(s, id, !"with-spxverify (no message)")
+
+  with-verify(s, on-fail-exec , msg) = where(verify-stratego(s, on-fail-exec, !$["Internal error: with clause failed unexpectedly. More : [<msg>]]))
+
+  with-verify(s, on-fail-exec) = where(verify-stratego(s, on-fail-exec, !"Internal error: with clause failed unexpectedly"))
+
+  verify-stratego(s,on-fail-exec,message) =
+    s
+  <+
+    try(on-fail-exec);
+    log(|Critical(), <as-string(message)>, <id>);
+    prim("SSL_stacktrace_get_all_frame_names");
+    report-failure
+
+
+  as-string(s) = s; as-string <+ !"<?>"
+
+  as-string = is-string <+ write-to-string
+
+
+
+//Draft of code contracts for stratego
+rules
+  verify(s | arg , expected) = contracts(contract-requires(s| arg , expected))
+
+  verify(s | arg) = contracts(contract-requires(s| arg))
+
+  verify(s) = contracts(contract-requires(s))
+
+rules
+
+  contract-requires ( s , on-fail | arg , expected) =
+      contract-requires ( s | arg , expected)
+    <+
+      on-fail
+
+
+  contract-requires ( s | arg , expected) =
+      where(<s> arg)
+    <+
+      //dbg-analysis(! $[Requires Failed. Reason : actual :[<print-as-string>arg] expected : [expected]] | "Contract" , <debug-level-WARNING> )
+      <debug> "Warning - Contract: Requires Failed. Reason :"
+      ; <debug(!"  actual   : ")> arg
+      ; <debug(!"  expected : ")> expected
+      ; fail
+
+
+  contract-requires ( s | arg ) = <contract-requires (s)> arg
+
+
+  contract-requires (s) =
+      where(s)
+    <+
+      //dbg-analysis(! $[Requires Failed - argument :[<print-as-string>] ]  | "Contact" , <debug-level-WARNING>)
+      where(<debug> "Warning - Contract: Requires Failed. Reason :")
+      ; debug(!"  input : ")
+      ; fail
+
+
+  contracts ( s ) =  where(s) <+ fail
+
+
+  with-verification (preconditions, s ) = with-verification (preconditions, s , id)
+
+
+  with-verification (preconditions, s , postconditions) = where(preconditions) ; s ; where(postconditions) <+ fail
+
+
+rules
+
+  run-strategy(  s  , on-fail | msg) = s <+  <debug> msg ; on-fail
+
+rules
+  String = is-string
+
+  List = is-list
+
+  ListOf(s) = list-loop(s)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str	Fri Feb  3 15:58:48 2012	(r24199)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -5,8 +5,6 @@
 
 strategies
 
-  with-spxverify(s) = with(s)
-
   concatenate-consecutive-strings =
     rec r(
          ?[String("") | <r>]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/tokenize.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/tokenize.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -0,0 +1,39 @@
+module tokenize
+
+imports
+  libstratego-lib
+
+strategies
+
+  /**
+   * @see edge-tokenize
+   * @type String -> List(String)
+   */
+  string-edge-tokenize(s) =
+    explode-string;
+    edge-tokenize(s);
+    map(implode-string)
+
+  /**
+   * Edge-triggered tokenizer; a new token starts whenever s starts
+   * succeeding or starts failing, i.e. when for two consecutive list items
+   * s succeeds on the first item but s fails on the second item or
+   * s fails on the first item and s succeeds on the second item.
+   *
+   * @type List(a) -> List(List(a))
+   */
+  edge-tokenize(s) =
+    ?[first | tail];
+    if second := <Hd> tail then
+      tokens := <edge-tokenize(s)> tail;
+      if (<s> first) < (<not(s)> second) + (<s> second) then
+        ![[first] | tokens]
+      else
+        [firstToken | restTokens] := tokens;
+        ![[first | firstToken] | restTokens]
+      end
+    else
+      ![[first]]
+    end
+  <+
+    []

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str (from r24199, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp.str	Fri Feb  3 15:58:48 2012	(r24199, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -1,6 +1,6 @@
 /* Copied from org.strategoxt.imp.generator/src/sdf2imp/util/pp.str */
 
-module sdf2imp/util/pp
+module utils/pp-esv
 
 imports
   libstratego-gpp

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str	Fri Feb  3 15:58:52 2012	(r24200)
@@ -0,0 +1,18 @@
+module utils/pp-sdf
+
+imports
+	libstratego-sdf
+	libstratego-gpp
+	lib/sdf-desugar
+	lib/sdf-parenthesize
+
+strategies
+
+  // override pp-sdf-string = fail // ensure compiler doesn't blow up
+
+  pp-sdf-to-string =
+    sdf-desugar;
+    parenthesize-Sdf2;
+    sdf-ppfix;
+    ast2box(|[<pp-table-sdf>]);
+    box2text-string(|80)

From tobivollebregt at gmail.com  Fri Feb  3 16:58:56 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Fri, 03 Feb 2012 15:58:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24201 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor
	trans trans/templatelang
Message-ID: <20120203155856.DC715108C056@mx3.tudelft.nl>

Author: tvo
Date: Fri Feb  3 15:58:56 2012
New Revision: 24201
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24201&sc=1

Log:
integrate BOX-based PP/STR generation (concrete only)

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Fri Feb  3 15:58:52 2012	(r24200)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Fri Feb  3 15:58:56 2012	(r24201)
@@ -23,6 +23,7 @@
   builder  : "Generate ESV (concrete, for selection)" = generate-esv-concrete (openeditor) (realtime)
   builder  : "Generate SDF (abstract, for selection)" = generate-sdf-abstract (openeditor) (realtime)
   builder  : "Generate SDF (concrete, for selection)" = generate-sdf-concrete (openeditor) (realtime)
+  builder  : "Generate BOX-based PP (for selection)" = generate-box-pp (openeditor) (realtime)
 
 refactorings
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Fri Feb  3 15:58:52 2012	(r24200)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Fri Feb  3 15:58:56 2012	(r24201)
@@ -12,6 +12,7 @@
   templatelang/expand
   templatelang/to-esv
   templatelang/to-sdf
+  templatelang/to-str
   utils/pp-esv
   utils/pp-sdf
 
@@ -80,3 +81,14 @@
       result   := <generate-sdf;
                    !'module(unparameterized("example"), [], [exports(<id>)]);
                    pp-sdf-to-string> selected
+
+  // Generate pretty printer (BOX-based)
+  generate-box-pp-string =
+    collect-om(?TemplateProduction(_, _, _));
+    <template-sections-to-stratego-string> [TemplateSection(<id>)]
+
+  generate-box-pp:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"generated.str")> path;
+      result   := <generate-box-pp-string> selected

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.meta
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.meta	Fri Feb  3 15:58:56 2012	(r24201)
@@ -0,0 +1 @@
+Meta([Syntax("StrategoStratego")])

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str	Fri Feb  3 15:58:56 2012	(r24201)
@@ -0,0 +1,367 @@
+module to-str
+
+imports
+  libstratego-lib
+  libstrc
+  include/TemplateLang
+  templatelang/utils/attributes
+  templatelang/utils/contract
+  templatelang/utils/misc
+
+strategies
+
+  // FIXME: find parse-stratego-string, then uncomment
+
+  // template-sections-to-stratego =
+  //   template-sections-to-stratego-string;
+  //   parse-stratego-string;
+  //   alltd(try(un-double-quote); unescape)
+
+  template-sections-to-stratego-string:
+    section* ->
+    ${module prettyprinter
+      imports
+        libstratego-gpp
+        libstratego-lib
+
+      signature constructors
+        HZ : S-OPTIONS * BOX-LIST -> BOX
+        Z  : S-OPTIONS * BOX-LIST -> BOX
+        I  : S-OPTIONS * BOX -> BOX
+
+      strategies
+
+        box2text-string'(|width) =
+          abox2text'(|width)
+          ; (is-string <+ flatten-list; concat-strings)
+
+        abox2text'(|width) =
+            rules( GppIndent := 0 )
+          ; let local-abox2text(|pos) =
+                  abox2text'(local-abox2text | pos, width)
+
+             in local-abox2text(|0)
+            end
+          ; Fst
+
+        abox2text'(rec : t * t -> t | xpos, width) =
+          abox2text-HV(rec | xpos, width)
+          + abox2text-HZ(rec | xpos, width)
+          + abox2text-H(rec | xpos, width)
+          + abox2text-V(rec | xpos, width)
+          + abox2text-Z(rec | xpos, width)
+          + abox2text-I(rec | xpos, width)
+          + abox2text-A(rec | xpos, width)
+          + abox2text-R(rec | xpos, width)
+          + abox2text-S(rec | xpos, width)
+          + abox2text-C(rec | xpos, width)
+          + abox2text-FBOX(rec | xpos, width)
+          + abox2text-R(rec | xpos, width)
+          + abox2text-ALT(rec | xpos, width)
+          + abox2text-list(rec | xpos, width)
+
+        // `I is=N b' is equivalent to `H hs=N [S(""), b]'
+        // NOTE: this I box is not context sensitive!
+        // NOTE: this I box takes a single box as argument, not a list of boxes!
+        abox2text-I(rec : t * t -> t | xpos, width) =
+          ?I(sopt, bs)
+
+          ; {"{|"}GppIndent:
+                <add> (xpos, <gpp-is-length> sopt) => left-xpos
+              ; rules( GppIndent := left-xpos )
+              ; <fetch-elem(?SOpt(IS(), <id>)) <+ !"0"> sopt => value
+              ; <rec(|xpos)> H([SOpt(HS(), value)], [S(""), bs])
+            {"|}"}
+
+        abox2text-Z(rec : t * t -> t | xpos, width) =
+          ?Z(sopt, bs)
+
+          ; GppIndent => indent
+          ; <add> (indent, <gpp-is-length> sopt) => left-xpos
+          ; <filter(gpp-is-real-vbox)> bs
+          ; if ?[] then
+              !([], xpos)
+            else
+              gpp-do-vbox-children(rec | xpos, left-xpos)
+              ; gpp-format-vbox(|sopt, indent)
+            end
+
+        abox2text-HZ(rec : t * t -> t | xpos, width) =
+          ?HZ(sopt, bs)
+
+          ; <gpp-hs-chars> sopt => hs-chars
+          ; <implode-string> hs-chars => hs
+          ; <gpp-vs-text> sopt => vs
+          ; <length> hs-chars => hsl
+          ; GppIndent => indent
+          ; <add> (indent, <gpp-is-length> sopt) => left-xpos
+          ; <filter(gpp-is-real-vbox)> bs
+          ; if ?[] then
+              !([], xpos)
+            else
+              !(<id>, [([], xpos)])
+              ; foldl(
+                  gpp-hv-add-to-hbox(rec | hsl, width)
+                  <+ gpp-hv-in-new-vbox(rec | hsl, left-xpos, width)
+                )
+                // Substract last hspace from xpos
+              ; [(id, <subt> (<id>, hsl)) | id]
+              ; reverse; map((reverse, id))
+              ; map((<separate-by> (hs, <id>), id))
+              ; gpp-format-vbox(|sopt, indent)
+            end
+
+      overlays
+        Line(xs) = H([SOpt(HS(), "0")], xs)
+
+      strategies
+
+        pp-one-V(s) = !V([], <s>)
+        pp-one-Z(s) = !Z([], <s>)
+
+        pp-option(s) = \None() -> []\ + \Some(t) -> <s> t\
+
+        pp-v-list(s)   = ?[] <+ !V([], <map(pp-one-V(s))>)
+        pp-v-list(s|t) = ?[] <+ !V([SOpt(VS(), t)], <map(pp-one-V(s))>)
+
+        pp-indent(|t) = ?[] <+ !I([SOpt(IS(), t)], Line(<id>))
+
+        pp-h-list(s)   = ?[] <+ !H([], <map(pp-one-Z(s))>)
+        pp-h-list(s|t) = ?[] <+ !Line(<map(pp-one-Z(s)); separate-by(|S(t))>)
+
+        pp-hv-list(s)   = ?[] <+ !HV([SOpt(HS(), "0")], <map(pp-one-Z(s))>)
+        pp-hv-list(s|t) = ?[] <+ !HV([SOpt(HS(), "0")], <map(pp-one-Z(s)); separate-by(|S(t))>)
+
+        pp-hz-list(s)   = ?[] <+ !HZ([SOpt(HS(), "0")], <map(pp-one-Z(s))>)
+        pp-hz-list(s|t) = ?[] <+ !HZ([SOpt(HS(), "0")], <map(pp-one-Z(s)); separate-by(|S(t))>)
+
+      {section'*}
+
+      strategies // all other sorts used in placeholders
+
+        {strategy*}}
+    where
+      with-spxverify(
+        section'* := <filter(template-section-to-stratego-string);
+                      separate-by(|"\n\n")> section*
+         , !"Failed to desugar "
+       );
+      with-spxverify(
+        // All sorts used in pp minus all sorts for which a pp strategy has been
+        // created will get a `prettyprint-sort = is-string' default strategy.
+        sorts-used-in-pp := <collect-om(sort-used-in-prettyprinting); nub> section*; // FIXME: global data
+        sorts-decl-in-pp := <collect-om(sort-decl-in-prettyprinting); nub> section*; // FIXME: global data
+        sorts-without-pp := <diff> (sorts-used-in-pp, sorts-decl-in-pp);
+        strategy* := <map(sort-to-prettyprint-strategy); separate-by(|"\n\n")> sorts-without-pp
+        , !"Failed to generate sort-to-pretty-print strategy"
+      )
+
+  template-section-to-stratego-string:
+    TemplateSection(prod*) ->
+    $[strategies
+
+        [strategy*]]
+    where
+      with-spxverify(
+        strategy* := <map(template-to-prettyprint-strategy);
+                      separate-by(|"\n\n")> prod*
+        , !"Failed to pretty-print template to strategy"
+      )
+
+/*internal*/ strategies
+
+  sort-to-prettyprint-strategy:
+    sort -> ${prettyprint-{sort} = ![S(<is-string>)]}
+
+  sort-decl-in-prettyprinting:
+    TemplateProduction(sort, _, _) -> sort
+
+  sort-used-in-prettyprinting:
+    Placeholder(sort(sort), _, _) -> sort
+
+rules
+
+  template-to-prettyprint-strategy:
+    TemplateProduction(sort, SingleLineTemplate(elem*), attrs) ->
+      <template-to-prettyprint-strategy> TemplateProduction(sort, Template([Line(elem*)]), attrs)
+
+  template-to-prettyprint-strategy:
+    TemplateProduction(sort, Template(line*), attrs) ->
+    ${prettyprint-{sort}:
+        {input} -> [{output}]}
+    where with-spxverify(
+      (line'*, _)    := <thread-map(rename-template-line)> (line*, 0);
+      line''*        := <map(template-line-to-stratego <+ fail)> line'*;
+      arg*           := <mapconcat(template-line-to-cons-arg)> line'*;
+      output         := <separate-by(|",\n")> line''*;
+      if cons := <fetch-cons-name> attrs then
+        input := $[[cons]([<separate-by(|",")> arg*])]
+      else
+        if !arg* => [_] then
+          input := "a"
+        else
+          input := $[([<separate-by(|",")> arg*])]
+        end
+      end,
+      !"Failed to pretty-print template"
+    )
+
+rules
+
+  rename-template-line:
+    (Line(elem*), index) -> (Line(elem'*), index')
+    where with-spxverify(
+      (elem'*, index') := <thread-map(try(rename-template-element))> (elem*, index),
+      !"Failed to rename template elements"
+    )
+
+  rename-template-element:
+    (Placeholder(a, b, c), index) -> (Placeholder(a, b, c){name'}, index')
+    where with-spxverify(
+      name'  := <implode-string> [<addi> ('a', index)];
+      index' := <inc> index,
+      !"Failed to rename template element"
+    )
+
+rules
+
+  template-line-to-cons-arg:
+    Line(elem*) -> <filter(template-element-to-cons-arg)> elem*
+
+  template-element-to-cons-arg:
+    Placeholder(_, _, _){name} -> name
+
+rules
+
+  template-line-to-stratego:
+    Line([Layout(indent) | elem*]) ->
+      ${<pp-indent(|"{<string-length> indent}")> [{elem'*}]}
+    where
+      not(!indent => "");
+      elem'* := <template-line-elements-to-stratego> elem*
+
+  template-line-to-stratego:
+    Line(elem*) -> ${Line([{elem'*}])}
+    where
+      not(!elem* => [Layout(<not("")>) | _]);
+      elem'* := <template-line-elements-to-stratego> elem*
+
+  template-line-elements-to-stratego =
+    // 1. Map template elements to strings of Stratego code and String cons.
+    map(template-element-to-stratego);
+    // 2. Collapse consecutive String cons into one String cons.
+    // (Optional, improves readability and performance of generated code.)
+    concatenate-consecutive-strings;
+    // 3. Convert String cons to Stratego code, while removing empty strings.
+    // (The latter is necessary to prevent spurious blank lines:
+    // BOX removes empty lists, but not empty string elements.)
+    filter(
+      \String(t) -> $[S([<templatelang-escape; double-quote> t])]\
+      <+ not(?String(""))
+    );
+    // 4. Insert commas.
+    separate-by(|",")
+
+  template-element-to-stratego:
+    String(t) -> <id>
+
+  template-element-to-stratego:
+    Layout(t) -> String(t)
+
+  template-element-to-stratego:
+    Placeholder(sort(x), None(), _){name}
+      -> $[<[s]> [name]]
+    where with-spxverify(
+      placeholder-to-pp-one => s,
+      !"Failed to determine placeholder type"
+    )
+
+  template-element-to-stratego:
+    Placeholder(sort(x), Option(), _){name} ->
+      $[<pp-option([s])> [name]]
+    where with-spxverify(
+      placeholder-to-pp-one => s,
+      !"Failed to determine placeholder type (option)"
+    )
+
+  placeholder-to-pp-one:
+    Placeholder(sort(x), _, option*) ->
+      $[pp-one-[v-or-z](prettyprint-[x])]
+    where with-spxverify(
+      <one(?Anchor()) < !"V" + !"Z"> option* => v-or-z,
+      !"Failed to determine placeholder box type (V or Z)"
+    )
+
+  template-element-to-stratego:
+    Placeholder(sort(x), <Star() + Plus()>, option*){name}
+      -> $[<[s]> [name]]
+    where with-spxverify(
+      h-or-hv-or-hz := <one(?Wrap()) <
+             (one(?Anchor()) < !"hv" + !"hz") + !"h"> option*;
+      if <getfirst(?Separator(<id>))> option* => sep then
+        <explode-string; filter(?'\n'); length; dec> sep => vs;
+        if !vs => -1 then
+          // separator without line breaks => horizontal box
+          s := $[pp-[h-or-hv-or-hz]-list(prettyprint-[x]|"[<templatelang-escape> sep]")]
+        else
+          // TODO: Support separators with mixed line breaks and literals.
+          if !vs => 0 then
+            // separator with one line break => vertical box
+            s := $[pp-v-list(prettyprint-[x])]
+          else
+            // separator with multiple line breaks => vertical box with vs option
+            s := $[pp-v-list(prettyprint-[x]|"[vs]")]
+          end
+        end
+      else
+        // no separator => horizontal box
+        s := $[pp-[h-or-hv-or-hz]-list(prettyprint-[x])]
+      end,
+      !"Failed to convert list placeholder"
+   )
+
+rules
+
+  // FIXME
+  // Production without cons but with bracket annotation
+  // (cons + bracket -> no need to parenthesize)
+  // template-to-prettyprint-strategy:
+  //   TemplateProduction(sort, Template(elem*), attrs) ->
+  //   ${parenthesize-{sort}(not-allowed) =
+  //       if not-allowed then
+  //         <concat-strings> ["{open}", <prettyprint-{sort}>, "{close}"]
+  //       else
+  //         prettyprint-{sort}
+  //       end}
+  //   where
+  //     not(<fetch-cons-name> attrs);
+  //     FIXME <getfirst(?bracket())> attr*
+  //   where
+  //     <length> <filter(?Placeholder(_, _, _))> elem* => 1
+  //     <+ debug(!"Bracket production must have exactly one placeholder: "); fail
+  //   with
+  //     (before, placeholder, after) := <split-fetch-keep(?Placeholder(_, _, _))> elem*
+  //   where
+  //     [String(open)]  := <map(template-element-to-stratego'); concatenate-consecutive-strings> before;
+  //     [String(close)] := <map(template-element-to-stratego'); concatenate-consecutive-strings> after
+  //     <+ debug(!"Bracket production must have text before and after the placeholder: "); fail
+
+//   template-element-to-parenthesize(|conflicts):
+//     (i0, Placeholder(sort(x), None(), _){name}) -> $[[name]' := <parenthesize-[x]([na])> [name]]
+//     where
+//       not(<filter(?(i0, <id>))> conflicts => conflicts' => [])
+//     with
+//       let to-match =
+//             {a*: \ Symbol(x, n) -> <concat-strings> ["?", x, "(", a*, ")"]
+//                    with a* := <range; map(!"_"); separate-by(|", ")> (0, n) \}
+//       in
+//         na := <filter(to-match); separate-by(|" + ")> conflicts'
+//       end
+//
+//   template-element-to-parenthesize(|conflicts):
+//     (i0, p@ Placeholder(sort(x), None(), _){name}) -> <template-element-to-prettyprint> p
+//     where
+//       <filter(?(i0, _))> conflicts => []
+//
+//   template-element-to-parenthesize(|conflicts):
+//     (i0, p@ Placeholder(sort(x), <not(?None())>, _){name}) -> <template-element-to-prettyprint> p

From gabrielkonat at gmail.com  Fri Feb  3 17:31:54 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 03 Feb 2012 16:31:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24202 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
	spoofax-imp/trunk/...
Message-ID: <20120203163154.E04377F8017@mx1.tudelft.nl>

Author: gkonat
Date: Fri Feb  3 16:31:54 2012
New Revision: 24202
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24202&sc=1

Log:
Also compile all dependent files of the file to compile.
Added background compiling when saving a file in the entity-with-aspects experiment.
Added exception when using index without setting it up.
Fixed index-timestamp-get-updates also returning internal 'timestamp files'.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_files_newer_than.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Fri Feb  3 15:58:56 2012	(r24201)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Fri Feb  3 16:31:54 2012	(r24202)
@@ -28,4 +28,6 @@
   pretty-print              : prettyprint                                         
                                                                                   
   refactoring ID            : "Rename Entity"  = rename-entity (source) (cursor)
-  refactoring Property *    : "Extract Entity" = extract-entity (source)
\ No newline at end of file
+  refactoring Property *    : "Extract Entity" = extract-entity (source)
+  
+  on save: schedule-project-to-java
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Fri Feb  3 15:58:56 2012	(r24201)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Fri Feb  3 16:31:54 2012	(r24202)
@@ -35,11 +35,20 @@
 
 rules // Incremental code generation of project
   
+  schedule-project-to-java = 
+    queue-strategy(|"project-to-java", "Java code generation"); !None()
+    
+  project-to-java:
+    (_, _, _, path, project-path) -> <project-to-java(|path, project-path)>
+  
   project-to-java(|path, project-path):
     _ -> None()
     with
-      files := <index-get-all-files>;
-      <map(\(file, subFile) -> file\; file-to-java(|path, project-path))> files
+      index-setup(|"EntityWithAspects", [project-path]);
+      changedFiles := <index-timestamp-get-updates(|"compile")>;
+      allDependentFiles := <make-set> <mapconcat(index-file-dependencies)> changedFiles;
+      <map(\(file, subFile) -> file\; file-to-java(|path, project-path))> allDependentFiles;
+      index-timestamp-set-updated(|"compile")
       
   file-to-java(|path, project-path):
   	file -> None()
@@ -52,7 +61,8 @@
   		writePath := $[[full-path]/java/];
   		writeFile :=  $[[writePath][filename]];
   		try(<mkdir> writePath);
-  		<fclose> <fputs> (java, <fopen> (writeFile, "w"))
+  		<fclose> <fputs> (java, <fopen> (writeFile, "w"));
+  		<debug> $[Compiling to [writeFile]]
 
 rules // Code generation to java strings
 	

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb  3 15:58:56 2012	(r24201)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb  3 16:31:54 2012	(r24202)
@@ -363,6 +363,30 @@
       else
         readwildcards' := []
       end
+      
+  /**
+   * Gets a set of all references to other files the given file (and subfile) has, including the file itself.
+   *
+   * @param entryFilter Filter strategy that is applied to all entries of given file to only look
+   *                    at dependency constructs such as Use(_) or Read(_)
+   *
+   * Example:
+   *   <index-file-references(?Read(_) <+ ?ReadWildcard(_, _)))> "fullpath/file.ext" => [("fullpath/otherfile.ext", "subfile"), ...]
+   *   <index-file-references(?Use(_)> ("fullpath/file.ext", "subfile") => [("fullpath/otherfile.ext", "othersubfile"), ...]
+   */
+  index-file-references(entryFilter):
+    file -> files
+    where
+      entries := <index-get-all-in-file> file;
+      references := <filter(entryFilter)> entries;
+      files := <make-set> <mapconcat(index-get-files-of)> references
+      
+  /**
+   * Convenience function for finding Read dependencies to other files of given file.
+   *
+   * @see index-file-references(entryFilter)
+   */
+  index-file-dependencies = index-file-references(?Read(_) <+ ?ReadWildcard(_, _))
  
   /**
    * Get all index entries that match the given template.

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Fri Feb  3 15:58:56 2012	(r24201)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Fri Feb  3 16:31:54 2012	(r24202)
@@ -137,9 +137,11 @@
    * Gets all files with changes since the last time stamp update for the given service name.
    */
   index-timestamp-get-updates(|service):
-    _ -> files
+    _ -> files'
     with
-      files := <prim("LANG_index_get_files_newer_than", $[/.internal/timestamps/[service]])>
+      timestampName := $[/.internal/timestamps/[service]];
+      files := <prim("LANG_index_get_files_newer_than", timestampName)>;
+      files' := <remove-all(?(timestampName, _))> files
 
   /**
    * Gets the URI for given term.

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_files_newer_than.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_files_newer_than.java	Fri Feb  3 15:58:56 2012	(r24201)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_files_newer_than.java	Fri Feb  3 16:31:54 2012	(r24202)
@@ -43,7 +43,7 @@
 	private static IStrategoList getFilesAfter(ITermFactory factory, SemanticIndex ind, Date time) {
  		IStrategoList results = factory.makeList();
 		for (SemanticIndexFile file : ind.getAllFiles()) {
-			if (!file.getTime().before(time)) {
+			if (file.getTime() != null && !file.getTime().before(time)) {
 				results = factory.makeListCons(file.toTerm(factory), results);
 			}
 		}

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java	Fri Feb  3 15:58:56 2012	(r24201)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java	Fri Feb  3 16:31:54 2012	(r24202)
@@ -31,6 +31,9 @@
 		new HashMap<String, Map<URI, WeakReference<SemanticIndex>>>();
 	
 	public SemanticIndex getCurrent() {
+		if(current == null)
+			throw new IllegalStateException("No semantic index has been set-up, use index-setup(|language, project-paths) to set up the index before use.");
+		
 		return current;
 	}
 	

From gabrielkonat at gmail.com  Fri Feb  3 17:39:26 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 03 Feb 2012 16:39:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24203 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
Message-ID: <20120203163926.53AEA7F805F@mx1.tudelft.nl>

Author: gkonat
Date: Fri Feb  3 16:39:26 2012
New Revision: 24203
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24203&sc=1

Log:
Fixed files with no Reads not being compiled at all.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Fri Feb  3 16:31:54 2012	(r24202)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Fri Feb  3 16:39:26 2012	(r24203)
@@ -47,7 +47,8 @@
       index-setup(|"EntityWithAspects", [project-path]);
       changedFiles := <index-timestamp-get-updates(|"compile")>;
       allDependentFiles := <make-set> <mapconcat(index-file-dependencies)> changedFiles;
-      <map(\(file, subFile) -> file\; file-to-java(|path, project-path))> allDependentFiles;
+      files := <make-set> <conc> (allDependentFiles, changedFiles);
+      <map(\(file, subFile) -> file\; file-to-java(|path, project-path))> files;
       index-timestamp-set-updated(|"compile")
       
   file-to-java(|path, project-path):

From gabrielkonat at gmail.com  Fri Feb  3 18:08:35 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 03 Feb 2012 17:08:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24204 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120203170835.3C4E87F8017@mx1.tudelft.nl>

Author: gkonat
Date: Fri Feb  3 17:08:34 2012
New Revision: 24204
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24204&sc=1

Log:
Fixed wrong dependency calculation in index-file-references.

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb  3 16:39:26 2012	(r24203)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb  3 17:08:34 2012	(r24204)
@@ -368,25 +368,29 @@
    * Gets a set of all references to other files the given file (and subfile) has, including the file itself.
    *
    * @param entryFilter Filter strategy that is applied to all entries of given file to only look
-   *                    at dependency constructs such as Use(_) or Read(_)
+   *                    at dependency constructs such as Use(_, _) or Read(_)
    *
    * Example:
-   *   <index-file-references(?Read(_) <+ ?ReadWildcard(_, _)))> "fullpath/file.ext" => [("fullpath/otherfile.ext", "subfile"), ...]
-   *   <index-file-references(?Use(_)> ("fullpath/file.ext", "subfile") => [("fullpath/otherfile.ext", "othersubfile"), ...]
+   *   <index-file-references(?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _))> "fullpath/file.ext" => 
+   *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *   <index-file-references(?Use(_, _)> ("fullpath/file.ext", "subfile") => 
+   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
    */
   index-file-references(entryFilter):
     file -> files
     where
       entries := <index-get-all-in-file> file;
       references := <filter(entryFilter)> entries;
-      files := <make-set> <mapconcat(index-get-files-of)> references
+      uris := <filter(index-uri)> references;
+      defs := <map(\uri -> Def(uri)\)> uris;
+      files := <make-set> <mapconcat(index-get-files-of)> defs
       
   /**
-   * Convenience function for finding Read dependencies to other files of given file.
+   * Convenience function for finding Read and Use dependencies to other files of given file.
    *
    * @see index-file-references(entryFilter)
    */
-  index-file-dependencies = index-file-references(?Read(_) <+ ?ReadWildcard(_, _))
+  index-file-dependencies = index-file-references(?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _))
  
   /**
    * Get all index entries that match the given template.
@@ -429,6 +433,7 @@
   index-uri:
     Read(uri) -> uri
  
+  // TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
   /**
    * Gets the URI for given term.
    */

From gabrielkonat at gmail.com  Mon Feb  6 11:41:43 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 06 Feb 2012 10:41:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24205 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120206104143.4B58E108C019@mx3.tudelft.nl>

Author: gkonat
Date: Mon Feb  6 10:41:43 2012
New Revision: 24205
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24205&sc=1

Log:
Added a get referenced files (as opposed to file references) strategy to the analysis library.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Fri Feb  3 17:08:34 2012	(r24204)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Mon Feb  6 10:41:43 2012	(r24205)
@@ -46,7 +46,7 @@
     with
       index-setup(|"EntityWithAspects", [project-path]);
       changedFiles := <index-timestamp-get-updates(|"compile")>;
-      allDependentFiles := <make-set> <mapconcat(index-file-dependencies)> changedFiles;
+      allDependentFiles := <make-set> <mapconcat(index-get-dependent-files)> changedFiles;
       files := <make-set> <conc> (allDependentFiles, changedFiles);
       <map(\(file, subFile) -> file\; file-to-java(|path, project-path))> files;
       index-timestamp-set-updated(|"compile")

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb  3 17:08:34 2012	(r24204)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb  6 10:41:43 2012	(r24205)
@@ -376,21 +376,59 @@
    *   <index-file-references(?Use(_, _)> ("fullpath/file.ext", "subfile") => 
    *     [("fullpath/otherfile.ext", "othersubfile"), ...]
    */
-  index-file-references(entryFilter):
+  index-get-file-references(entryFilter):
     file -> files
     where
-      entries := <index-get-all-in-file> file;
-      references := <filter(entryFilter)> entries;
-      uris := <filter(index-uri)> references;
-      defs := <map(\uri -> Def(uri)\)> uris;
-      files := <make-set> <mapconcat(index-get-files-of)> defs
+      entries     := <index-get-all-in-file> file;
+      references  := <filter(entryFilter)> entries;
+      uris        := <filter(index-uri)> references;
+      defs        := <map(\uri -> Def(uri)\)> uris;
+      files       := <make-set> <mapconcat(index-get-files-of)> defs
       
   /**
-   * Convenience function for finding Read and Use dependencies to other files of given file.
+   * Convenience function for finding Read and Use dependencies to other files of given file and subfile.
    *
    * @see index-file-references(entryFilter)
+   *
+   * Example:
+   *   <index-file-dependencies> "fullpath/file.ext" => [("fullpath/otherfile.ext", "subfile"), ...]
+   *   <index-file-dependencies> ("fullpath/file.ext", "subfile") => 
+   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
+   */
+  index-get-file-dependencies = index-get-file-references(?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _))
+  
+  /**
+   * Gets a set of all files that have a reference to the given file and subfile.
+   *
+   * @param createFromDef Construction strategy that creates a list of reference constructs from all 
+   *                      defs of the given file, such as Def(uri) -> [Read(uri), Use(uri, [])]
+   *
+   * Example:
+   *   <index-file-referenced(\Def(uri) -> [Read(uri), Use(uri, [])]\)> "fullpath/file.ext" => 
+   *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *   <index-file-referenced(\Def(uri) -> [Read(uri), Use(uri, [])]\)> ("fullpath/file.ext", "subfile") => 
+   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
    */
-  index-file-dependencies = index-file-references(?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _))
+  index-get-referenced-files(constructFromDef):
+    file -> files
+    where
+      entries     := <index-get-all-in-file> file;
+      defs        := <filter(?Def(_))> entries;
+      referenced  := <concat> <filter(constructFromDef)> defs;
+      files       := <make-set> <mapconcat(index-get-files-of)> referenced
+ 
+  /**
+   * Convenience function for finding files with Read and Use dependencies to the given file and subfile.
+   *
+   * @see index-file-referenced(entryFilter)
+   * @see index-file-dependent-construct
+   *
+   * Example:
+   *   <index-file-dependent> "fullpath/file.ext" => [("fullpath/otherfile.ext", "subfile"), ...]
+   *   <index-file-dependent> ("fullpath/file.ext", "subfile") => 
+   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
+   */
+  index-get-dependent-files = index-get-referenced-files(index-file-dependent-construct)
  
   /**
    * Get all index entries that match the given template.
@@ -703,6 +741,11 @@
     where <is-substring(!prefix)> name
       
   index-is-unresolved(|x) = <iset-contains(|x)> <UnresolvedSet>
+  
+  index-file-dependent-construct: 
+    Def(uri@[namespace | path]) -> [Read(uri), ReadWildcard([namespace | rest], firstElem), Use(uri, [])]
+    where
+      [firstElem | rest] := path
  
   do-adjust-index-lookup(|namespace, path, use, prefix) =
     // UNDONE: try(origin-term);

From L.C.L.Kats at tudelft.nl  Mon Feb  6 14:10:25 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 06 Feb 2012 13:10:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24206 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20120206131025.714252B801B@mx2.tudelft.nl>

Author: LennartKats
Date: Mon Feb  6 13:10:25 2012
New Revision: 24206
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24206&sc=1

Log:
fixed possible IndexOutOfBoundsException in 'on save' handler

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	Mon Feb  6 10:41:43 2012	(r24205)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	Mon Feb  6 13:10:25 2012	(r24206)
@@ -71,7 +71,7 @@
 					messages.commitAllChanges();
 				} else if (isTermString(result)) {
 					// Function's returning a filename
-					String file = asJavaString(termAt(result, 0));
+					String file = asJavaString(result);
 					if (new File(file).exists())
 						RefreshResourcePrimitive.call(runtime.getRuntime().getContext(), file);	
 				} else if (isTermTuple(result) && result.getSubtermCount() == 2 && isTermString(termAt(result, 0)) && isTermString(termAt(result, 1))) {

From gabrielkonat at gmail.com  Mon Feb  6 14:19:47 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 06 Feb 2012 13:19:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24207 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120206131947.8C8E12B802C@mx2.tudelft.nl>

Author: gkonat
Date: Mon Feb  6 13:19:47 2012
New Revision: 24207
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24207&sc=1

Log:
Changed entity-with-aspects library to not use DefData anymore.
Added rules to index library to ease retrieval of values from the index.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Mon Feb  6 13:10:25 2012	(r24206)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Mon Feb  6 13:19:47 2012	(r24207)
@@ -43,9 +43,9 @@
   constraint-error:
     Call(f, a*) -> (f, $[Illegal argument types, expected [<strip-annos; write-to-string> param-types] not [<strip-annos; write-to-string> arg-types]])
     where
-      arg-types   := <map(type-of)> a*;
-      def         := <index-lookup> f;
-      param-types := <index-get-data(|ParamTypes())> def;
+      arg-types    := <map(type-of)> a*;
+      def at Def(uri) := <index-lookup> f;
+      param-types  := <index-get-all-values> ParamTypes(uri, ());
       not(
         <is-params-compatible(|arg-types)> def
       )

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Mon Feb  6 13:10:25 2012	(r24206)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Mon Feb  6 13:19:47 2012	(r24207)
@@ -15,21 +15,18 @@
     
 signature constructors
 
-  POINTCUT  : Type -> Advice
-  Pointcut  : DefDataKind
+  Pointcut  : Uri * Type -> Pointcut
 
-  ADVICE    : BeforeAfter * Params * Pointcut * Statement -> Advice
-  Advice    : DefDataKind
+  ADVICE    : BeforeAfter * Params * Pointcut * Statement -> AdviceData
+  Advice    : Uri * AdviceData -> Advice
     
 rules // Store advices and pointcuts for code generation
     
   adjust-index-def-data(store-results |namespace, path):
-    Pointcut(_, _, type) -> <store-results> DefData([namespace | path], Pointcut(), data)
-    where
-      data := POINTCUT(type)
+    Pointcut(_, _, type) -> <store-results> Pointcut([namespace | path], type)
       
   adjust-index-def-data(store-results |namespace, path):
-    Advice(_, beforeafter, params, pointcut, _, statement) -> <store-results> DefData([namespace | path], Advice(), data)
+    Advice(_, beforeafter, params, pointcut, _, statement) -> <store-results> Advice([namespace | path], data)
     where
       data := ADVICE(beforeafter, params, pointcut, statement)
 
@@ -131,21 +128,17 @@
     
       [after]]
 	    with
+	      type    := <to-java-aspect-type> <type-of> Def(<index-uri> name);
 	      // TODO: Better way of getting the right DefData elements, getting ALL elements and filtering is expensive.
-	    	advicesDefData := <filter(?DefData(_, Advice(), _))> <indexlib-get-all-elements>;
-	      advicesData := <map(\DefData(_, _, data) -> data\)> advicesDefData;
-	      advices := <map(to-java-fixadvice(|exp))> advicesData;
-	      type := <to-java-aspect-type> <type-of> Def(<index-uri> name);
-	      beforeAdvices := <filter(?(Before(), Assigned(type), _))> advices;
-	      before := <map(\(_, _, statement) -> statement\; to-java)> beforeAdvices;
-	      afterAdvices := <filter(?(After(), Assigned(type), _))> advices;
-	      after := <map(\(_, _, statement) -> statement\; to-java)> afterAdvices
+				advices := <filter(?Advice(_, <to-java-fixadvice(|exp)>))> <indexlib-get-all-elements>;
+				before  := <filter(?(Before(), Assigned(type), <to-java>))> advices;
+				after   := <filter(?(After(), Assigned(type), <to-java>))> advices
     
     to-java-fixadvice(|exp):
     	ADVICE(beforeafter, params, pointcut, statement) -> (beforeafter, type, statement')
     	with 
-  		  POINTCUT(types) := <index-get-data(|Pointcut())> Def(<index-uri> pointcut);
-  	    type := <get-first> types;
+  		  Pointcut(_, types) := <index-get> Pointcut(<index-uri> pointcut, ());
+  		  type := <get-first> types;
         Param(paramName, _) := <get-first> params;
         var := Var(paramName);
         statement' := <try(sometd(to-java-aspect-replace-var(|var, exp)))> statement

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Mon Feb  6 13:10:25 2012	(r24206)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Mon Feb  6 13:19:47 2012	(r24207)
@@ -8,8 +8,8 @@
 signature constructors
 
   TYPE     		: STRING -> Type
-  Type       	: DefDataKind
-  ParamTypes 	: DefDataKind
+  Type       	: Uri * Type -> TypeData
+  ParamTypes 	: Uri * List(Type) -> ParamTypesData
 
 rules // type projections
 
@@ -47,14 +47,14 @@
     Assign(_, x) -> <type-of> x
 
   type-of:
-    Def(uri) -> <index-get-data(|Type())> Def(uri)
+    Def(uri) -> <index-get-value> Type(uri, ())
 
 rules // utility
 
   is-params-compatible(|arg-types):
     Def(uri) -> <id>
     with
-      param-types := <index-get-data(|ParamTypes())>
+      param-types := <index-get-value> ParamTypes(uri, ())
     where
       <eq> (<length> arg-types, <length> param-types);
       <zip(is-assignable-to)> (arg-types, param-types)
@@ -68,11 +68,11 @@
 rules // store definition and parameter types
     
   adjust-index-def-data(store-results |namespace, path):
-    def -> <store-results> DefData([namespace | path], Type(), type)
+    def -> <store-results> Type([namespace | path], type)
     where
       type := <type-of> def
   
   adjust-index-def-data(store-results |namespace, path):
-    Function(_, params, _) -> <store-results> DefData([namespace | path], ParamTypes(), types)
+    Function(_, params, _) -> <store-results> ParamTypes([namespace | path], types)
     with
       types := <map(type-of)> params

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb  6 13:10:25 2012	(r24206)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb  6 13:19:47 2012	(r24207)
@@ -317,9 +317,7 @@
    *   <index-get-data(|Type())> Def([Entity(), "Bar"]) => [DefData([Entity(), "Bar"], Type(), TYPE("Bar")), ...]
    */
   index-get-data(|kind):
-    <with(?Def(uri) | "Def expected")> -> data
-    where
-      <index-get-all> DefData(uri, kind, []) => [DefData(_, _, data) | _]
+    <with(?Def(uri) | "Def expected")> -> <index-get-value> DefData(uri, kind, ())
       
 	/**
 	 * Gets all data entries that match the kind of data and URI in given definition.
@@ -330,10 +328,7 @@
 	 *   <index-get-data-all(|Type())> Def([Entity(), "Bar"]) => [TYPE("Bar"), ...]
 	 */
   index-get-data-all(|kind):
-    <with(?Def(uri) | "Def expected")> -> datas'
-    where
-      datas  := <index-get-all> DefData(uri, kind, []);
-      datas' := <map(\DefData(_, _, d) -> d\)> datas
+    <with(?Def(uri) | "Def expected")> -> <index-get-all-values> DefData(uri, kind, ())
      
   /**
    * Gets all Use entries that match the URI in given definition.
@@ -342,9 +337,7 @@
    *   <index-get-uses-all> Def([Entity(), "M", "Bar"]) => [Use([Entity(), "M", "Bar"], [Entity(), "M"]), ...]
    */
   index-get-uses-all:
-    <with(?Def(uri) | "Def expected")> -> uses
-    where
-      uses := <index-get-all> Use(uri, [])
+    <with(?Def(uri) | "Def expected")> -> <index-get-all> Use(uri, [])
      
   /**
    * Gets all Read or ReadWildcard entries that match the given template.
@@ -363,72 +356,6 @@
       else
         readwildcards' := []
       end
-      
-  /**
-   * Gets a set of all references to other files the given file (and subfile) has, including the file itself.
-   *
-   * @param entryFilter Filter strategy that is applied to all entries of given file to only look
-   *                    at dependency constructs such as Use(_, _) or Read(_)
-   *
-   * Example:
-   *   <index-file-references(?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _))> "fullpath/file.ext" => 
-   *     [("fullpath/otherfile.ext", "subfile"), ...]
-   *   <index-file-references(?Use(_, _)> ("fullpath/file.ext", "subfile") => 
-   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
-   */
-  index-get-file-references(entryFilter):
-    file -> files
-    where
-      entries     := <index-get-all-in-file> file;
-      references  := <filter(entryFilter)> entries;
-      uris        := <filter(index-uri)> references;
-      defs        := <map(\uri -> Def(uri)\)> uris;
-      files       := <make-set> <mapconcat(index-get-files-of)> defs
-      
-  /**
-   * Convenience function for finding Read and Use dependencies to other files of given file and subfile.
-   *
-   * @see index-file-references(entryFilter)
-   *
-   * Example:
-   *   <index-file-dependencies> "fullpath/file.ext" => [("fullpath/otherfile.ext", "subfile"), ...]
-   *   <index-file-dependencies> ("fullpath/file.ext", "subfile") => 
-   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
-   */
-  index-get-file-dependencies = index-get-file-references(?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _))
-  
-  /**
-   * Gets a set of all files that have a reference to the given file and subfile.
-   *
-   * @param createFromDef Construction strategy that creates a list of reference constructs from all 
-   *                      defs of the given file, such as Def(uri) -> [Read(uri), Use(uri, [])]
-   *
-   * Example:
-   *   <index-file-referenced(\Def(uri) -> [Read(uri), Use(uri, [])]\)> "fullpath/file.ext" => 
-   *     [("fullpath/otherfile.ext", "subfile"), ...]
-   *   <index-file-referenced(\Def(uri) -> [Read(uri), Use(uri, [])]\)> ("fullpath/file.ext", "subfile") => 
-   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
-   */
-  index-get-referenced-files(constructFromDef):
-    file -> files
-    where
-      entries     := <index-get-all-in-file> file;
-      defs        := <filter(?Def(_))> entries;
-      referenced  := <concat> <filter(constructFromDef)> defs;
-      files       := <make-set> <mapconcat(index-get-files-of)> referenced
- 
-  /**
-   * Convenience function for finding files with Read and Use dependencies to the given file and subfile.
-   *
-   * @see index-file-referenced(entryFilter)
-   * @see index-file-dependent-construct
-   *
-   * Example:
-   *   <index-file-dependent> "fullpath/file.ext" => [("fullpath/otherfile.ext", "subfile"), ...]
-   *   <index-file-dependent> ("fullpath/file.ext", "subfile") => 
-   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
-   */
-  index-get-dependent-files = index-get-referenced-files(index-file-dependent-construct)
  
   /**
    * Get all index entries that match the given template.
@@ -445,13 +372,35 @@
        end
        
   /**
+   * Get all values of index entries that match the given template.
+   *
+   * @see index-value
+   *
+   * Example:
+   *   <index-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   */
+  index-get-all-values:
+    template -> <map(index-value)> <index-get-all> template
+       
+  /**
    * Get the first index entry that matches the given template, or fail.
    *
    * Example:
    *   <index-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
    */
   index-get:
-    template -> <Fst> <index-get-all> template
+    template -> <index-get-first> <index-get-all> template
+      
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * @see index-value
+   *
+   * Example:
+   *   <index-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   */
+  index-get-value:
+    template -> <index-value> <index-get-first> <index-get-all> template
  
   /**
    * Gets the URI for given term.
@@ -477,6 +426,14 @@
    */
   index-uri:
     ReadWildcard(uri, _) -> uri
+    
+  /**
+   * Gets the URI for given term.
+   */ 
+  index-uri:
+    term -> <?_#(<index-get-first>)> term
+    where 
+      not(<?Def(_) <+ ?Use(_, _) <+ ?Read(_) <+ ?ReadWildcard(_, _)> term)
    
   /**
    * Gets the URI for given term.
@@ -501,6 +458,38 @@
       else
         path' := path
       end
+
+  /**
+   * Gets the value part for given term.
+   */ 
+  index-value:
+    Def(value) -> value
+    
+  /**
+   * Gets the value part for given term.
+   */ 
+  index-value:
+    Use(_, value) -> value
+    
+  /**
+   * Gets the value part for given term.
+   */ 
+  index-value:
+    Read(value) -> value
+    
+  /**
+   * Gets the value part for given term.
+   */ 
+  index-value:
+    ReadWildcard(_, value) -> value
+    
+  /**
+   * Gets the value part for given term.
+   */ 
+  index-value:
+    term -> <?_#(<index-get-second>)> term
+    where 
+      not(<?Def(_) <+ ?Use(_, _) <+ ?Read(_) <+ ?ReadWildcard(_, _)> term)  
  
   /**
    * Determines if a given AST node is a definition site,
@@ -530,6 +519,72 @@
       if set := <ReadSet> then
         <iset-add(|ReadWildcard([namespace | path], prefix'))> set
       end
+      
+  /**
+   * Gets a set of all references to other files the given file (and subfile) has, including the file itself.
+   *
+   * @param entryFilter Filter strategy that is applied to all entries of given file to only look
+   *                    at dependency constructs such as Use(_, _) or Read(_)
+   *
+   * Example:
+   *   <index-file-references(?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _))> "fullpath/file.ext" => 
+   *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *   <index-file-references(?Use(_, _)> ("fullpath/file.ext", "subfile") => 
+   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
+   */
+  index-get-file-references(entryFilter):
+    file -> files
+    where
+      entries     := <index-get-all-in-file> file;
+      references  := <filter(entryFilter)> entries;
+      uris        := <filter(index-uri)> references;
+      defs        := <map(\uri -> Def(uri)\)> uris;
+      files       := <make-set> <mapconcat(index-get-files-of)> defs
+      
+  /**
+   * Convenience function for finding Read and Use dependencies to other files of given file and subfile.
+   *
+   * @see index-file-references(entryFilter)
+   *
+   * Example:
+   *   <index-file-dependencies> "fullpath/file.ext" => [("fullpath/otherfile.ext", "subfile"), ...]
+   *   <index-file-dependencies> ("fullpath/file.ext", "subfile") => 
+   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
+   */
+  index-get-file-dependencies = index-get-file-references(?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _))
+  
+  /**
+   * Gets a set of all files that have a reference to the given file and subfile.
+   *
+   * @param createFromDef Construction strategy that creates a list of reference constructs from all 
+   *                      defs of the given file, such as Def(uri) -> [Read(uri), Use(uri, [])]
+   *
+   * Example:
+   *   <index-file-referenced(\Def(uri) -> [Read(uri), Use(uri, [])]\)> "fullpath/file.ext" => 
+   *     [("fullpath/otherfile.ext", "subfile"), ...]
+   *   <index-file-referenced(\Def(uri) -> [Read(uri), Use(uri, [])]\)> ("fullpath/file.ext", "subfile") => 
+   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
+   */
+  index-get-referenced-files(constructFromDef):
+    file -> files
+    where
+      entries     := <index-get-all-in-file> file;
+      defs        := <filter(?Def(_))> entries;
+      referenced  := <concat> <filter(constructFromDef)> defs;
+      files       := <make-set> <mapconcat(index-get-files-of)> referenced
+ 
+  /**
+   * Convenience function for finding files with Read and Use dependencies to the given file and subfile.
+   *
+   * @see index-file-referenced(entryFilter)
+   * @see index-file-dependent-construct
+   *
+   * Example:
+   *   <index-file-dependent> "fullpath/file.ext" => [("fullpath/otherfile.ext", "subfile"), ...]
+   *   <index-file-dependent> ("fullpath/file.ext", "subfile") => 
+   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
+   */
+  index-get-dependent-files = index-get-referenced-files(index-file-dependent-construct)
      
 rules // index lookup rules (take into account adjust-index-lookup)
  

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Mon Feb  6 13:10:25 2012	(r24206)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Mon Feb  6 13:19:47 2012	(r24207)
@@ -104,6 +104,12 @@
   index-get-files-of:
     template -> <prim("LANG_index_get_files_of", template)>
     
+  /**
+   * Gets all index entries (of every file for current project).
+   *
+   * Example:
+   *   <indexlib-get-all-elements> => [Def([Entity(), "Bar"]), ...]
+   */
   indexlib-get-all-elements =
     <mapconcat(index-get-all-in-file)> <index-get-all-files>
     
@@ -115,6 +121,17 @@
    */
   indexlib-get-all:
     template -> <prim("LANG_index_get", template)>
+    
+  /**
+   * Get all values of index entries that match the given template.
+   *
+   * @see index-value
+   *
+   * Example:
+   *   <indexlib-get-all-values> DefData([Property(), "s"], Type(), ()) => [TYPE("String"), ...]
+   */
+  indexlib-get-all-values:
+    template -> <map(index-value)> <indexlib-get-all> template
  
   /**
    * Get the first index entry that matches the given template, or fail.
@@ -123,7 +140,18 @@
    *   <indexlib-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
    */
   indexlib-get:
-    template -> <Fst> <indexlib-get-all> template
+    template -> <index-get-first> <indexlib-get-all> template
+   
+  /**
+   * Get the value of first index entry that matches the given template, or fail.
+   *
+   * @see index-value
+   *
+   * Example:
+   *   <indexlib-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
+   */
+  indexlib-get-value:
+    template -> <index-value> <index-get-first> <indexlib-get-all> template
  
   /**
    * Updates the "last updated" timestamp for the given service name.
@@ -148,8 +176,20 @@
    */ 
   index-uri:
     DefData(uri, _, _) -> uri
+    
+  /**
+   * Gets the value part for given term.
+   */ 
+  index-value:
+    DefData(_, _, value) -> value
       
 rules // Internal helpers
   
   index-namespace-unwrap =
     \Unresolved(n) -> n\ <+ id
+    
+  index-get-first:
+    [first|_] -> first
+    
+  index-get-second:
+    [_,second|_] -> second 

From gabrielkonat at gmail.com  Mon Feb  6 15:02:14 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 06 Feb 2012 14:02:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24208 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
	spoofax-imp/trunk/...
Message-ID: <20120206140214.AD6782B8011@mx2.tudelft.nl>

Author: gkonat
Date: Mon Feb  6 14:02:13 2012
New Revision: 24208
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24208&sc=1

Log:
Moved project compilation code into analysis library.
Reads into the index during compile-time are now also stored in the index.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Mon Feb  6 13:19:47 2012	(r24207)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Mon Feb  6 14:02:13 2012	(r24208)
@@ -30,4 +30,4 @@
   refactoring ID            : "Rename Entity"  = rename-entity (source) (cursor)
   refactoring Property *    : "Extract Entity" = extract-entity (source)
   
-  on save: schedule-project-to-java
\ No newline at end of file
+  on save: index-schedule-compilation
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Mon Feb  6 13:19:47 2012	(r24207)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Mon Feb  6 14:02:13 2012	(r24208)
@@ -69,7 +69,7 @@
   generate-java-project:
     (selected, position, ast, path, project-path) -> None()
     with
-      project-to-java(|path, project-path)
+      index-compilation
       
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
   editor-resolve:

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Mon Feb  6 13:19:47 2012	(r24207)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Mon Feb  6 14:02:13 2012	(r24208)
@@ -31,25 +31,9 @@
       data := ADVICE(beforeafter, params, pointcut, statement)
 
 rules // Incremental code generation of project
-  
-  schedule-project-to-java = 
-    queue-strategy(|"project-to-java", "Java code generation"); !None()
-    
-  project-to-java:
-    (_, _, _, path, project-path) -> <project-to-java(|path, project-path)>
-  
-  project-to-java(|path, project-path):
-    _ -> None()
-    with
-      index-setup(|"EntityWithAspects", [project-path]);
-      changedFiles := <index-timestamp-get-updates(|"compile")>;
-      allDependentFiles := <make-set> <mapconcat(index-get-dependent-files)> changedFiles;
-      files := <make-set> <conc> (allDependentFiles, changedFiles);
-      <map(\(file, subFile) -> file\; file-to-java(|path, project-path))> files;
-      index-timestamp-set-updated(|"compile")
       
-  file-to-java(|path, project-path):
-  	file -> None()
+  index-compile-file(|path, project-path):
+  	(file, _) -> None()
   	with
   		ast := <parse-file> file;
   	  ast' := <analyze-top(|Compile(), "EntityWithAspects")> (ast, path, project-path);

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb  6 13:19:47 2012	(r24207)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb  6 14:02:13 2012	(r24208)
@@ -33,6 +33,8 @@
   adjust-index-path(is-def |namespace, path) = fail
  
   // adjust-index-path-from-filesystem(|project-path, path)
+  
+  index-compile-file(|path, project-path) = fail
  
 rules // analysis traversals
   
@@ -88,12 +90,12 @@
         <index-clear-file> full-path
       end
     with
-      {| ReadSet, UnresolvedSet:
+      {| Index-ReadSet, Index-UnresolvedSet:
         readSet := <new-iset>;
         unresolvedSet := <new-iset>;
         
-        rules(ReadSet: _ -> readSet);
-        rules(UnresolvedSet: _ -> unresolvedSet);
+        rules(Index-ReadSet: _ -> readSet);
+        rules(Index-UnresolvedSet: _ -> unresolvedSet);
        
         // Add Unresolved annotations, record globals
         (Some(ast2), defs) := <analyze-defs(|Anon(), Anon())> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
@@ -306,6 +308,42 @@
       appl'          := <all(\(a, _) -> a\)> appl;
       unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
  
+rules // compilation
+  
+  index-schedule-compilation = 
+    queue-strategy(|"index-compilation", "Compiling!"); !None()
+    
+  index-compilation:
+    (ast, _, _, path, project-path) -> <index-compilation(|path, project-path)> ast
+  
+  index-compilation(|path, project-path):
+    ast -> None()
+    with
+      // Init
+      full-path := $[[project-path]/[path]];
+      index-setup(|<index-origin-language> ast, [project-path])
+    with
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+	      // Get all changes files by looking at the timestamps.
+	      changedFiles := <index-timestamp-get-updates(|"compile")>;
+	      
+	      // Determine the files to compile by looking at dependencies.
+	      allDependentFiles := <make-set> <mapconcat(index-get-dependent-files)> changedFiles;
+	      files := <make-set> <conc> (allDependentFiles, changedFiles);
+	      
+	      // Compile the files
+	      <map(index-compile-file(|path, project-path))> files;
+	      
+	      // Store compile-time reads.
+        <index-add-all(|full-path)> <iset-elements> readSet;
+        
+        // Update timestamps to current time.
+	      index-timestamp-set-updated(|"compile")
+      |}
+ 
 rules // index API primitives
  
   /**
@@ -366,7 +404,7 @@
   index-get-all:
     template -> <indexlib-get-all> template
       with
-       if set := <ReadSet> then
+       if set := <Index-ReadSet> then
          uri := <index-uri>;
          <iset-add(|Read(uri))> set
        end
@@ -516,7 +554,7 @@
       children' := <filter(index-is-name-substring(|prefix'))> children;
       store     := [namespace, prefix' | path];
       // Store read in index.
-      if set := <ReadSet> then
+      if set := <Index-ReadSet> then
         <iset-add(|ReadWildcard([namespace | path], prefix'))> set
       end
       
@@ -622,7 +660,7 @@
       def         := <index-lookup(is-adjust-lookup-enabled |namespace, path', prefix)> x
     <+
       [] := path;
-      <iset-add(|x)> <UnresolvedSet>
+      <iset-add(|x)> <Index-UnresolvedSet>
       
   /**
    * Given an annotated AST node, resolves it, returning all its Defs.
@@ -795,7 +833,7 @@
     ReadWildcard(_, name) -> <id>
     where <is-substring(!prefix)> name
       
-  index-is-unresolved(|x) = <iset-contains(|x)> <UnresolvedSet>
+  index-is-unresolved(|x) = <iset-contains(|x)> <Index-UnresolvedSet>
   
   index-file-dependent-construct: 
     Def(uri@[namespace | path]) -> [Read(uri), ReadWildcard([namespace | rest], firstElem), Use(uri, [])]

From gabrielkonat at gmail.com  Mon Feb  6 15:30:03 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 06 Feb 2012 14:30:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24209 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120206143003.09C17108C013@mx3.tudelft.nl>

Author: gkonat
Date: Mon Feb  6 14:30:02 2012
New Revision: 24209
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24209&sc=1

Log:
Moved some more compilation code into the analysis library.
Fixed the analysis library trying to compile testing language files.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Mon Feb  6 14:02:13 2012	(r24208)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Mon Feb  6 14:30:02 2012	(r24209)
@@ -31,20 +31,18 @@
       data := ADVICE(beforeafter, params, pointcut, statement)
 
 rules // Incremental code generation of project
-      
-  index-compile-file(|path, project-path):
-  	(file, _) -> None()
-  	with
-  		ast := <parse-file> file;
-  	  ast' := <analyze-top(|Compile(), "EntityWithAspects")> (ast, path, project-path);
-  		java := <to-java> ast';
-  		full-path := <dirname> $[[project-path]/[path]];
-  		filename := <guarantee-extension(|"java")> <base-filename> file;
-  		writePath := $[[full-path]/java/];
-  		writeFile :=  $[[writePath][filename]];
-  		try(<mkdir> writePath);
-  		<fclose> <fputs> (java, <fopen> (writeFile, "w"));
-  		<debug> $[Compiling to [writeFile]]
+  		
+  index-compile-ast(|file, subfile, path, project-path):
+    ast -> None()
+    with
+      java := <to-java> ast;
+      full-path := <dirname> $[[project-path]/[path]];
+      filename := <guarantee-extension(|"java")> <base-filename> file;
+      writePath := $[[full-path]/java/];
+      writeFile :=  $[[writePath][filename]];
+      try(<mkdir> writePath);
+      <fclose> <fputs> (java, <fopen> (writeFile, "w"));
+      <debug> $[Compiling to [writeFile]]
 
 rules // Code generation to java strings
 	

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb  6 14:02:13 2012	(r24208)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb  6 14:30:02 2012	(r24209)
@@ -34,7 +34,8 @@
  
   // adjust-index-path-from-filesystem(|project-path, path)
   
-  index-compile-file(|path, project-path) = fail
+  // Should compile given analysed ast.
+  index-compile-ast(|file, subfile, path, project-path) = fail
  
 rules // analysis traversals
   
@@ -321,7 +322,8 @@
     with
       // Init
       full-path := $[[project-path]/[path]];
-      index-setup(|<index-origin-language> ast, [project-path])
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path])
     with
       {| Index-ReadSet:
         readSet := <new-iset>;
@@ -335,7 +337,7 @@
 	      files := <make-set> <conc> (allDependentFiles, changedFiles);
 	      
 	      // Compile the files
-	      <map(index-compile-file(|path, project-path))> files;
+	      <filter(index-compilation-file(|language, path, project-path))> files;
 	      
 	      // Store compile-time reads.
         <index-add-all(|full-path)> <iset-elements> readSet;
@@ -343,6 +345,15 @@
         // Update timestamps to current time.
 	      index-timestamp-set-updated(|"compile")
       |}
+
+  index-compilation-file(|language, path, project-path):
+    (file, subfile) -> None()
+    where
+      not(<is-test-file> file) // Don't try compile testing language files.
+    with
+      ast := <parse-file> file;
+      ast' := <analyze-top(|Compile(), language)> (ast, path, project-path);
+      <index-compile-ast(|file, subfile, path, project-path)> ast'
  
 rules // index API primitives
  

From L.C.L.Kats at tudelft.nl  Mon Feb  6 17:34:01 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 06 Feb 2012 16:34:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24210 -
	strategoxt-javascript-backend/trunk
Message-ID: <20120206163401.653E9CC1AD@mx4.tudelft.nl>

Author: LennartKats
Date: Mon Feb  6 16:34:01 2012
New Revision: 24210
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24210&sc=1

Log:
made Makefile more compatible:
- use ecj where possible, or else javac with a ridiculous heap size
- don't use fastjar, it tends to be unreliable

Modified:
   strategoxt-javascript-backend/trunk/Makefile

Modified: strategoxt-javascript-backend/trunk/Makefile
==============================================================================
--- strategoxt-javascript-backend/trunk/Makefile	Mon Feb  6 14:30:02 2012	(r24209)
+++ strategoxt-javascript-backend/trunk/Makefile	Mon Feb  6 16:34:01 2012	(r24210)
@@ -7,6 +7,9 @@
 LIBPATH=src/stratego
 LIBPATH=.
 
+JAVAC=`if which ecj >/dev/null; then echo ecj; else echo javac -J-Xmx512m; fi`
+
+
 all: s2js.jar
 
 out/s2js/s2js.java: src/stratego/s2js.str $(wildcard src/stratego/*.str)
@@ -15,10 +18,10 @@
 	strj -I $(LIBPATH) -i $< -o $@ -p s2js $(SLIBS)
 
 out/s2js/s2js.class: out/s2js/s2js.java
-	javac -cp $(SXTJAR) -source 5 out/s2js/*.java
+	$(JAVAC) -cp $(SXTJAR) -source 5 out/s2js/*.java
 
 s2js.jar: out/s2js/s2js.class
-	fastjar cf s2js.jar -C out/ .
+	jar cf s2js.jar -C out/ .
 
 clean:
 	rm -rf out

From L.C.L.Kats at tudelft.nl  Mon Feb  6 17:44:58 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 06 Feb 2012 16:44:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24211 - in
	strategoxt-javascript-backend/trunk: . src/META-INF
Message-ID: <20120206164458.38F527F8029@mx1.tudelft.nl>

Author: LennartKats
Date: Mon Feb  6 16:44:57 2012
New Revision: 24211
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24211&sc=1

Log:
added manifest for s2js.jar

Added:
   strategoxt-javascript-backend/trunk/src/META-INF/
   strategoxt-javascript-backend/trunk/src/META-INF/MANIFEST.MF
Modified:
   strategoxt-javascript-backend/trunk/Makefile

Modified: strategoxt-javascript-backend/trunk/Makefile
==============================================================================
--- strategoxt-javascript-backend/trunk/Makefile	Mon Feb  6 16:34:01 2012	(r24210)
+++ strategoxt-javascript-backend/trunk/Makefile	Mon Feb  6 16:44:57 2012	(r24211)
@@ -21,7 +21,8 @@
 	$(JAVAC) -cp $(SXTJAR) -source 5 out/s2js/*.java
 
 s2js.jar: out/s2js/s2js.class
-	jar cf s2js.jar -C out/ .
+	cp $(SXTJAR) .
+	jar cfm s2js.jar src/META-INF/MANIFEST.MF -C out/ .
 
 clean:
 	rm -rf out

Added: strategoxt-javascript-backend/trunk/src/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ strategoxt-javascript-backend/trunk/src/META-INF/MANIFEST.MF	Mon Feb  6 16:44:57 2012	(r24211)
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Main-Class: s2js.s2js
+Class-Path: strategoxt.jar

From L.C.L.Kats at tudelft.nl  Mon Feb  6 18:04:26 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 06 Feb 2012 17:04:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24212 - in
	spoofax-imp/trunk: org.strategoxt.imp.generator/src/sdf2imp/project
	org.strategoxt.imp.spoofax.generator/src/sdf2imp/project
Message-ID: <20120206170426.822F47F805E@mx1.tudelft.nl>

Author: LennartKats
Date: Mon Feb  6 17:04:26 2012
New Revision: 24212
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24212&sc=1

Log:
added missing origin-language strategy

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-common-trans.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	Mon Feb  6 16:44:57 2012	(r24211)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	Mon Feb  6 17:04:26 2012	(r24212)
@@ -144,6 +144,9 @@
   origin-column    = origin-location => (_, <id>, _, _)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
   
   origin-surrounding-comments =
     prim("SSL_EXT_origin_surrounding_comments", "{sdf-name}", <id>)

Modified: spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-common-trans.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-common-trans.str	Mon Feb  6 16:44:57 2012	(r24211)
+++ spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-common-trans.str	Mon Feb  6 17:04:26 2012	(r24212)
@@ -141,6 +141,9 @@
   origin-column    = origin-location => (_, <id>, _, _)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
   
   origin-surrounding-comments =
     prim("SSL_EXT_origin_surrounding_comments", "{sdf-name}", <id>)

From L.C.L.Kats at tudelft.nl  Mon Feb  6 18:33:05 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 06 Feb 2012 17:33:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24213 -
	spoofax-imp/trunk/org.strategoxt.imp.testing/trans
Message-ID: <20120206173305.A2690CC1B4@mx4.tudelft.nl>

Author: LennartKats
Date: Mon Feb  6 17:33:05 2012
New Revision: 24213
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24213&sc=1

Log:
clear index entries for test files after each test run

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str	Mon Feb  6 17:04:26 2012	(r24212)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str	Mon Feb  6 17:33:05 2012	(r24213)
@@ -58,7 +58,8 @@
     where
       switch !results
         case one(is-successful-resolver(|to')): fail
-        case one(?Some(t)):  error := $[Unexpected result: [<write-to-string> t]]
+        case one(?Some(t)):  error := $[Unexpected result:
+                                        <pre>[<write-to-string> t]</pre>]
         case one(?Error(m)): error := $[Unexpected error resolving:
                                         <pre>[m]</pre>]
         case one(?Fail(m)):  error := $[Unexpected error resolving:

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str	Mon Feb  6 17:04:26 2012	(r24212)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str	Mon Feb  6 17:33:05 2012	(r24213)
@@ -41,7 +41,8 @@
         notes'    := <flatten-list> [notes, <bagof-GrabbedNotes>];
         if not([] := errors) then
             rules ( HasErrors := () )
-        end
+        end;
+        spt-index-clear-file
       | path, project-path
       )
 
@@ -137,6 +138,8 @@
         results   := <map(execute-service(|input-tuple))> completers;
         proposals := <getfirst(?Some(<id>))> results
       |}
+    with
+      spt-index-clear-file
   
   editor-resolve:
     (construct, position, ast, path, project-path) -> proposals
@@ -162,6 +165,9 @@
     property -> value
     where
       plugin-get-property-values(|<Language>) => [property#([value]) | _]
+      
+  spt-index-clear-file =
+    try(<plugin-strategy-invoke(|<Language>, "index-clear-file")> <InputFile>)
 	
   spt-get-observer =
     <plugin-get-string-property> "SemanticObserver"

From L.C.L.Kats at tudelft.nl  Mon Feb  6 18:35:07 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 06 Feb 2012 17:35:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24214 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120206173507.793C67F8096@mx1.tudelft.nl>

Author: LennartKats
Date: Mon Feb  6 17:35:07 2012
New Revision: 24214
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24214&sc=1

Log:
- support index deserialization
- each SemanticIndexFile has a list, not set of entries

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_clear_file.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_all_in_file.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_setup.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_clear_file.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_clear_file.java	Mon Feb  6 17:33:05 2012	(r24213)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_clear_file.java	Mon Feb  6 17:35:07 2012	(r24214)
@@ -24,7 +24,7 @@
 
 	@Override
 	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
-		if (isTermString(tvars[0]) || isTermTuple(tvars[0])) {
+		if (index.isInitialized() && (isTermString(tvars[0]) || isTermTuple(tvars[0]))) {
 			SemanticIndex ind = index.getCurrent();
 			ind.clear(ind.getFile(tvars[0]));
 			return true;

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_all_in_file.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_all_in_file.java	Mon Feb  6 17:33:05 2012	(r24213)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_all_in_file.java	Mon Feb  6 17:35:07 2012	(r24214)
@@ -3,7 +3,7 @@
 import static org.spoofax.interpreter.core.Tools.isTermString;
 import static org.spoofax.interpreter.core.Tools.isTermTuple;
 
-import java.util.Set;
+import java.util.List;
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.library.AbstractPrimitive;
@@ -28,7 +28,7 @@
 	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
 		if (isTermTuple(tvars[0]) || isTermString(tvars[0])) {
 			SemanticIndex idn = index.getCurrent();
-			Set<SemanticIndexEntry> results = idn.getFile(tvars[0]).getEntries();
+			List<SemanticIndexEntry> results = idn.getFile(tvars[0]).getEntries();
 			env.setCurrent(SemanticIndexEntry.toTerms(env.getFactory(), results));
 			return true;
 		} else {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_setup.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_setup.java	Mon Feb  6 17:33:05 2012	(r24213)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_setup.java	Mon Feb  6 17:35:07 2012	(r24214)
@@ -35,8 +35,8 @@
 		}
 		IOAgent agent = SSLLibrary.instance(env).getIOAgent();
 		SemanticIndexFile project = SemanticIndexFile.fromTerm(agent, projectPaths.head());
-		index.loadIndex(asJavaString(language), project.getURI()); 
-		index.getCurrent().initialize(env.getFactory(), SSLLibrary.instance(env).getIOAgent());
+		index.loadIndex(asJavaString(language), project.getURI(), env.getFactory(), agent); 
+		index.getCurrent().initialize(env.getFactory(), agent);
 		return true;
 	}
 }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Mon Feb  6 17:33:05 2012	(r24213)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Mon Feb  6 17:35:07 2012	(r24214)
@@ -1,10 +1,15 @@
 package org.spoofax.interpreter.library.language;
 
+import static org.spoofax.interpreter.core.Tools.isTermList;
+import static org.spoofax.terms.Term.termAt;
+import static org.spoofax.terms.Term.tryGetConstructor;
+
+import java.io.IOException;
 import java.util.Collection;
 import java.util.Date;
 import java.util.HashMap;
+import java.util.List;
 import java.util.Map;
-import java.util.Set;
 
 import org.spoofax.interpreter.library.IOAgent;
 import org.spoofax.interpreter.terms.IStrategoAppl;
@@ -12,6 +17,8 @@
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
+import org.spoofax.terms.TermFactory;
+import org.spoofax.terms.attachments.TermAttachmentSerializer;
 
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
@@ -23,6 +30,9 @@
 	
 	private final Map<SemanticIndexFile, SemanticIndexFile> files =
 		new HashMap<SemanticIndexFile, SemanticIndexFile>();
+	
+	private static final IStrategoConstructor FILE_ENTRIES_CON =
+			new TermFactory().makeConstructor("FileEntries", 2);
 
 	private IOAgent agent;
 
@@ -67,6 +77,13 @@
 		add(factory.createEntry(entry.getConstructor(), namespace, id, contentsType, contents, parent, file), parent);
 	}
 	
+	public void addAll(IStrategoList entries, SemanticIndexFile file) {
+		while (!entries.isEmpty()) {
+			add((IStrategoAppl) entries.head(), file);
+			entries = entries.tail();
+		}
+	}
+	
 	public void add(SemanticIndexEntry entry) {
 		ensureInitialized();
 		add(entry, getEntryParentAbove(entry.getNamespace(), entry.getId(), true));
@@ -79,12 +96,12 @@
 		if (existing == null) {
 			table.put(entry, entry);
 			if (entry.getFile() != null)
-				entry.getFile().getEntries().add(entry);
+				entry.getFile().addEntry(entry);
 		} else {
 			assert !entry.isParent() && existing != entry;
 			existing.getLast().setNext(entry);
 			if (entry.getFile() != null)
-				entry.getFile().getEntries().add(entry);
+				entry.getFile().addEntry(entry);
 		}
 		if (entry.getFile() != null)
 			entry.getFile().setTime(new Date());
@@ -114,11 +131,15 @@
 		// Remove from fileTable
 		SemanticIndexFile file = entry.getFile();
 		if (file != null) {
-			file.getEntries().remove(entry);
+			file.removeEntry(entry);
 			entry.getFile().setTime(new Date());
 		}
 	}
 	
+	/**
+	 * @param fileTerm  a string or (string, string) tuple with the filename
+	 *                  or the filename and subfilename
+	 */
 	public SemanticIndexFile getFile(IStrategoTerm fileTerm) {
 		return getFile(SemanticIndexFile.fromTerm(agent, fileTerm));
 	}
@@ -230,28 +251,75 @@
 		files.clear();
 	}
 	
-	public IStrategoTerm toTerm() {
+	public IStrategoTerm toTerm(boolean includePositions) {
 		ITermFactory terms = factory.getTermFactory();
-		IStrategoList entries = SemanticIndexEntry.toTerms(terms, table.values());
-		return entries;
+		IStrategoList results = terms.makeList();
+		for (SemanticIndexFile file : files.keySet()) {
+			IStrategoList fileResults = SemanticIndexEntry.toTerms(terms, file.getEntries());
+			// TODO: include time stamp for file
+			IStrategoTerm result = terms.makeAppl(FILE_ENTRIES_CON, file.toTerm(terms), fileResults);
+			results = terms.makeListCons(result, results);
+		}
+		
+		if (includePositions) {
+			// TODO: optimize -- store more compact attachments for positions
+			TermFactory simpleFactory = new TermFactory();
+			TermAttachmentSerializer serializer = new TermAttachmentSerializer(simpleFactory);
+			results = (IStrategoList) serializer.toAnnotations(results);
+		}
+		
+		return results;
 	}
 	
-	public static SemanticIndex fromTerm(IStrategoTerm term) {
-		return null; // TODO
+	/**
+	 * Reads an index from a term.
+	 */
+	public static SemanticIndex fromTerm(IStrategoTerm term, ITermFactory factory, IOAgent agent, boolean extractPositions) throws IOException {
+		if (extractPositions) {
+			TermAttachmentSerializer serializer = new TermAttachmentSerializer(factory);
+			term = (IStrategoList) serializer.fromAnnotations(term, false);
+		}
+		
+		if (isTermList(term)) {
+			SemanticIndex result = new SemanticIndex();
+			result.initialize(factory, agent);
+			for (IStrategoList list = (IStrategoList) term; !list.isEmpty(); list = list.tail()) {
+				fromFileEntriesTerm(list.head(), result);
+			}
+			return result;
+		} else {
+			throw new IOException("Expected list of " + FILE_ENTRIES_CON.getName());
+		}
 	}
 	
+	private static void fromFileEntriesTerm(IStrategoTerm fileEntries, SemanticIndex result) throws IOException {
+		if (tryGetConstructor(fileEntries) == FILE_ENTRIES_CON) {
+			try {
+				SemanticIndexFile file = SemanticIndexFile.fromTerm(null, termAt(fileEntries, 0));
+				result.addAll((IStrategoList) termAt(fileEntries, 1), file);
+			} catch (IllegalStateException e) {
+				throw new IllegalStateException(e);
+			} catch (RuntimeException e) { // HACK: catch all runtime exceptions
+				throw new IOException("Unexpected exception reading index: " + e);
+			}
+		} else {
+			throw new IOException("Illegal index entry: " + fileEntries);
+		}
+	}
+
 	public void clear(SemanticIndexFile file) {
 		assert files.get(file) == null || files.get(file) == file;
 		
-		Set<SemanticIndexEntry> fileSet = file.getEntries();
-		if (fileSet.isEmpty()) return;
+		List<SemanticIndexEntry> entries = file.getEntries();
+		if (entries.isEmpty()) return;
 		
-		SemanticIndexEntry[] copy = new SemanticIndexEntry[fileSet.size()];
-		copy = fileSet.toArray(copy);
+		SemanticIndexEntry[] copy = entries.toArray(new SemanticIndexEntry[entries.size()]);
 		for (SemanticIndexEntry entry : copy) {
 		    assert table.get(entry) != null;
 			remove(entry);
 		}
+		
+		assert file.getEntries().isEmpty();
 	}
 	
 	public Collection<SemanticIndexFile> getAllFiles() {
@@ -260,7 +328,7 @@
 	
 	@Override
 	public String toString() {
-		return table.keySet().toString();
+		return files.keySet().toString();
 	}
 	
 	

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java	Mon Feb  6 17:33:05 2012	(r24213)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java	Mon Feb  6 17:35:07 2012	(r24214)
@@ -173,8 +173,8 @@
 			ImploderAttachment.putImploderAttachment(term, false, attach.getSort(), attach.getLeftToken(), attach.getRightToken());
 		} else {
 			String fn = file == null ? null : file.getURI().getPath();
-			term.putAttachment(ImploderAttachment.createCompactPositionAttachment(
-					fn, 0, 0, 0, -1));
+			attach = ImploderAttachment.createCompactPositionAttachment(fn, 0, 0, 0, -1);
+			term.putAttachment(attach);
 		}
 		return term;
 	}
@@ -218,6 +218,7 @@
 		if (id != other.id && !id.match(other.id))
 			return false;
 		/* Not considered: data is not part of the key, makes it impossible to look up!
+		   (same for file)
 		if (contents != other.contents && contents != null && !contents.match(other.contents))
 			return false;
 		*/

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Mon Feb  6 17:33:05 2012	(r24213)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Mon Feb  6 17:35:07 2012	(r24214)
@@ -5,9 +5,10 @@
 
 import java.io.File;
 import java.net.URI;
+import java.util.ArrayList;
+import java.util.Collections;
 import java.util.Date;
-import java.util.HashSet;
-import java.util.Set;
+import java.util.List;
 
 import org.spoofax.interpreter.library.IOAgent;
 import org.spoofax.interpreter.terms.IStrategoString;
@@ -23,7 +24,7 @@
 	
 	public static final String DEFAULT_DESCRIPTOR = "";
 	
-	private final Set<SemanticIndexEntry> entries = new HashSet<SemanticIndexEntry>();
+	private final List<SemanticIndexEntry> entries = new ArrayList<SemanticIndexEntry>();
 
 	private final URI uri;
 	
@@ -43,10 +44,35 @@
 		return descriptor;
 	}
 	
-	public Set<SemanticIndexEntry> getEntries() {
+	/**
+	 * Gets all entries associated with this file.
+	 * Should not be modified.
+	 */
+	public List<SemanticIndexEntry> getEntries() {
+		boolean assertionsOn = false;
+		assert assertionsOn = true;
+		if (assertionsOn)
+			return Collections.unmodifiableList(entries);
 		return entries;
 	}
 	
+	public void addEntry(SemanticIndexEntry entry) {
+		entries.add(entry);
+	}
+	
+	/**
+	 * Removes an entry using pointer-equality, taking into account
+	 * other entries that may be equal to the given entry
+	 */
+	public void removeEntry(SemanticIndexEntry entry) {
+		for (int i = 0; i < entries.size(); i++) {
+			if (entries.get(i) == entry) {
+				entries.remove(i);
+				return;
+			}
+		}
+	}
+	
 	public void setTime(Date time) {
 		this.time = time;
 	}
@@ -63,6 +89,11 @@
 	 * Converts a term file representation to a SemanticIndexFile,
 	 * using the  {@link IOAgent} to create an absolute path.
 	 * 
+	 * @param agent  The agent that provides the current path and file system access,
+	 *               or null if the path should be used as-is.
+	 * @param term   A string or (string, string) tuple with the filename
+	 *               or the filename and subfilename
+	 * 
 	 * @see SemanticIndex#getFile()
 	 */
 	public static SemanticIndexFile fromTerm(IOAgent agent, IStrategoTerm term) {
@@ -76,7 +107,7 @@
 			descriptor = DEFAULT_DESCRIPTOR;
 		}
 		File file = new File(name);
-		if (!file.isAbsolute())
+		if (!file.isAbsolute() && agent != null)
 			file = new File(agent.getWorkingDir(), name);
 		return new SemanticIndexFile(file.toURI(), descriptor, null);
 	}

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java	Mon Feb  6 17:33:05 2012	(r24213)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java	Mon Feb  6 17:35:07 2012	(r24214)
@@ -10,9 +10,9 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import org.spoofax.interpreter.library.IOAgent;
 import org.spoofax.interpreter.terms.IStrategoTerm;
-import org.spoofax.terms.TermFactory;
-import org.spoofax.terms.attachments.TermAttachmentSerializer;
+import org.spoofax.interpreter.terms.ITermFactory;
 import org.spoofax.terms.io.binary.TermReader;
 
 /**
@@ -31,13 +31,17 @@
 		new HashMap<String, Map<URI, WeakReference<SemanticIndex>>>();
 	
 	public SemanticIndex getCurrent() {
-		if(current == null)
+		if (!isInitialized())
 			throw new IllegalStateException("No semantic index has been set-up, use index-setup(|language, project-paths) to set up the index before use.");
 		
 		return current;
 	}
 	
-	public void loadIndex(String language, URI project) {
+	public boolean isInitialized() {
+		return current != null;
+	}
+	
+	public void loadIndex(String language, URI project, ITermFactory factory, IOAgent agent) {
 		Map<URI, WeakReference<SemanticIndex>> indicesByProject =
 			indicesByLanguage.get(language);
 		if (indicesByProject == null) {
@@ -47,22 +51,21 @@
 		WeakReference<SemanticIndex> indexRef = indicesByProject.get(project);
 		SemanticIndex index = indexRef == null ? null : indexRef.get();
 		if (index == null) {
-			index = readFromFile(getIndexFile(project, language));
+			index = tryReadFromFile(getIndexFile(project, language), factory, agent);
 		}
 		if (index == null) {
 			index = new SemanticIndex();
-			indicesByProject.put(project, new WeakReference<SemanticIndex>(index));
 		}
+		indicesByProject.put(project, new WeakReference<SemanticIndex>(index));
 		current = index;
 		currentLanguage = language;
 		currentProject = project;
 	}
 	
-	public SemanticIndex readFromFile(File file) {
+	public SemanticIndex tryReadFromFile(File file, ITermFactory factory, IOAgent agent) {
 		try {
-			TermFactory simpleFactory = new TermFactory();
-			IStrategoTerm term = new TermReader(simpleFactory).parseFromFile(file.toString());
-			return SemanticIndex.fromTerm(term);
+			IStrategoTerm term = new TermReader(factory).parseFromFile(file.toString());
+			return SemanticIndex.fromTerm(term, factory, agent, true);
 		} catch (IOException e) {
 			return null;
 		}
@@ -70,9 +73,7 @@
 	
 	public void storeCurrent() throws IOException {
 		File file = getIndexFile(currentProject, currentLanguage);
-		IStrategoTerm stored = getCurrent().toTerm();
-		TermFactory simpleFactory = new TermFactory();
-		stored = new TermAttachmentSerializer(simpleFactory).toAnnotations(stored);
+		IStrategoTerm stored = getCurrent().toTerm(true);
 		Writer writer = new BufferedWriter(new FileWriter(file));
 		try {
 			stored.writeAsString(writer, IStrategoTerm.INFINITE);

From L.C.L.Kats at tudelft.nl  Mon Feb  6 18:36:42 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 06 Feb 2012 17:36:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24215 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120206173642.02DE0CC175@mx4.tudelft.nl>

Author: LennartKats
Date: Mon Feb  6 17:36:41 2012
New Revision: 24215
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24215&sc=1

Log:
fixed timestamps filling up the index; index-commit now uses timestamps

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Mon Feb  6 17:35:07 2012	(r24214)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Mon Feb  6 17:36:41 2012	(r24215)
@@ -20,6 +20,8 @@
   Anon   : Int -> UriPart
   Anon   : UriPart
   
+  FileEntries : Term * Term -> Term
+  
 rules // Index management
    
   /**
@@ -70,7 +72,10 @@
    * Commits index to a file on disk.
    */
   index-commit = 
-    prim("LANG_index_commit")
+    if not(index-timestamp-get-updates(|"LANG_index_commit") => []) then
+      prim("LANG_index_commit");
+      index-timestamp-set-updated(|"LANG_index_commit")
+    end
   
 rules // Index API
   
@@ -159,7 +164,9 @@
    * @see index-get-changes-since-timestamp(|service)
    */
   index-timestamp-set-updated(|service) =
-    prim("LANG_index_add", DefData([Timestamp(), "timestamps", ".internal"], Timestamp(), []), $[/.internal/timestamps/[service]])
+    file := $[/.internal/timestamps/[service]];
+    <index-clear-file> file;
+    prim("LANG_index_add", DefData([Timestamp(), "timestamps", ".internal"], Timestamp(), []), file)
    
   /**
    * Gets all files with changes since the last time stamp update for the given service name.

From L.C.L.Kats at tudelft.nl  Mon Feb  6 18:38:00 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 06 Feb 2012 17:38:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24216 -
	spoofax-imp/trunk/experimental/NamingExperiment/editor
Message-ID: <20120206173800.5406ECC1B4@mx4.tudelft.nl>

Author: LennartKats
Date: Mon Feb  6 17:38:00 2012
New Revision: 24216
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24216&sc=1

Log:
index-commit on save

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/editor/NamingExperiment-Builders.esv

Modified: spoofax-imp/trunk/experimental/NamingExperiment/editor/NamingExperiment-Builders.esv
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/editor/NamingExperiment-Builders.esv	Mon Feb  6 17:36:41 2012	(r24215)
+++ spoofax-imp/trunk/experimental/NamingExperiment/editor/NamingExperiment-Builders.esv	Mon Feb  6 17:38:00 2012	(r24216)
@@ -19,7 +19,10 @@
   builder  : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
   builder  : "Show analyzed syntax" = generate-analyzed (openeditor) (realtime) (source)
   builder  : "Show index entries for current file" = index-currentfile (openeditor) (realtime) (source)   
-  builder  : "Show index entries for all files" = index-allfiles (openeditor) (realtime) (source)                                                                                                            
+  builder  : "Show index entries for all files" = index-allfiles (openeditor) (realtime) (source)       
+  
+  // TODO: index-commit 'on exit'? or have Spoofax handle it internally?
+  on save : index-commit                                                                                                     
 
 refactorings
                                                                                   
@@ -30,4 +33,4 @@
     input
       identifier : "new name" = ""    
                                                                                   
-  // on save: generate-java                                                       
\ No newline at end of file
+  // on save: generate-java                                                       

From L.C.L.Kats at tudelft.nl  Mon Feb  6 18:38:36 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 06 Feb 2012 17:38:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24217 - in
	spoofax-imp/trunk/experimental/NamingExperiment: lib test trans
Message-ID: <20120206173836.5814C108C013@mx3.tudelft.nl>

Author: LennartKats
Date: Mon Feb  6 17:38:36 2012
New Revision: 24217
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24217&sc=1

Log:
some more tests and adjustments for (de)serialization support

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/test/index-serialization.spt
   spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb  6 17:38:00 2012	(r24216)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb  6 17:38:36 2012	(r24217)
@@ -124,7 +124,7 @@
           <index-add-all(|full-path)> uses
         end;
         
-        ast5         := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast4;
+        ast5 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast4;
        
         // Store reads into the index (if current language is not testing language)
         // TODO: Add phase information to reads?

Modified: spoofax-imp/trunk/experimental/NamingExperiment/test/index-serialization.spt
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/test/index-serialization.spt	Mon Feb  6 17:38:00 2012	(r24216)
+++ spoofax-imp/trunk/experimental/NamingExperiment/test/index-serialization.spt	Mon Feb  6 17:38:36 2012	(r24217)
@@ -17,8 +17,15 @@
   <index-add-all(|"/foo")> [Def([Def(), "newdef"])];
   index-commit;
   
-  prim("LANG_index_setup", "NamingExperiment", ["/tmp/test-serialization2"]);  
+  prim("LANG_index_setup", "NamingExperiment", ["/tmp/test-serialization2"]);
+  <index-get-all> Def([Def(), "newdef"]) => [];
+    
   prim("LANG_index_setup", "NamingExperiment", ["/tmp/test-serialization"]);
-  
   <index-get-all> Def([Def(), "newdef"]) => [_]
 
+test Load, copy, load from disk (bypass in-memory cache)
+  <call> ("cp", ["-r", "/tmp/test-serialization", "/tmp/test-serialization-copy"]);
+  prim("LANG_index_setup", "NamingExperiment", ["/tmp/test-serialization-copy"]); 
+  
+  <index-get-all> Def([Def(), "newdef"]) => [_]
+  
\ No newline at end of file

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Mon Feb  6 17:38:00 2012	(r24216)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Mon Feb  6 17:38:36 2012	(r24217)
@@ -78,7 +78,7 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
-      result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
+      result   := <map(\filename -> FileEntries(filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
   
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
   editor-resolve:

From gabrielkonat at gmail.com  Mon Feb  6 19:38:44 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 06 Feb 2012 18:38:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24218 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120206183844.ED098108C010@mx3.tudelft.nl>

Author: gkonat
Date: Mon Feb  6 18:38:43 2012
New Revision: 24218
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24218&sc=1

Log:
Fixed generic index-uri and index-value accepting DefData constructs.

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb  6 17:38:36 2012	(r24217)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb  6 18:38:43 2012	(r24218)
@@ -137,9 +137,9 @@
       // HACK: Depends on file extension, could be other languages with .spt extension?
       if Editor() := phase; not(<is-test-file> path) then
 	      // Find removed and added definitions
-	      (added, removed) := <analyze-diff> (olddefs, defs);
+	      (added, removed) := <analyze-diff> (olddefs, defs)
 	      // Schedule re-analysis of files that have a Use or Read of a removed def and Read of an added def
-	      reanalyze-all(|added, removed, full-path)
+	      //reanalyze-all(|added, removed, full-path)
 	    else
 	      (added, removed) := ([], [])
       end
@@ -482,7 +482,7 @@
   index-uri:
     term -> <?_#(<index-get-first>)> term
     where 
-      not(<?Def(_) <+ ?Use(_, _) <+ ?Read(_) <+ ?ReadWildcard(_, _)> term)
+      not(<?Def(_) <+ ?DefData(_, _, _) <+ ?Use(_, _) <+ ?Read(_) <+ ?ReadWildcard(_, _)> term)
    
   /**
    * Gets the URI for given term.
@@ -538,7 +538,7 @@
   index-value:
     term -> <?_#(<index-get-second>)> term
     where 
-      not(<?Def(_) <+ ?Use(_, _) <+ ?Read(_) <+ ?ReadWildcard(_, _)> term)  
+      not(<?Def(_) <+ ?DefData(_, _, _) <+ ?Use(_, _) <+ ?Read(_) <+ ?ReadWildcard(_, _)> term)  
  
   /**
    * Determines if a given AST node is a definition site,

From tobivollebregt at gmail.com  Mon Feb  6 20:26:19 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 19:26:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24219 - in
	spoofax-imp/trunk: org.strategoxt.imp.debug.stratego.runtime
	org.strategoxt.imp.debug.stratego.transformer
	org.strategoxt.imp.editors.aster org.strategoxt.imp.e...
Message-ID: <20120206192619.8DFB12B8019@mx2.tudelft.nl>

Author: tvo
Date: Mon Feb  6 19:26:19 2012
New Revision: 24219
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24219&sc=1

Log:
directory in build.properties must end with slash

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.debug.stratego.runtime/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.debug.stratego.transformer/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.properties
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str
   spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-build-properties.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.debug.stratego.runtime/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.debug.stratego.runtime/build.properties	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.debug.stratego.runtime/build.properties	Mon Feb  6 19:26:19 2012	(r24219)
@@ -7,4 +7,4 @@
                .,\
                plugin.xml,\
                str-lib/
-bin.excludes = trans
+bin.excludes = trans/

Modified: spoofax-imp/trunk/org.strategoxt.imp.debug.stratego.transformer/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.debug.stratego.transformer/build.properties	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.debug.stratego.transformer/build.properties	Mon Feb  6 19:26:19 2012	(r24219)
@@ -6,4 +6,4 @@
                lib/,\
                plugin.xml,\
                .
-bin.excludes = trans
+bin.excludes = trans/

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.properties	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aster/build.properties	Mon Feb  6 19:26:19 2012	(r24219)
@@ -5,4 +5,4 @@
                include/,\
                bin/,\
                .
-bin.excludes = trans
+bin.excludes = trans/

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.properties	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.properties	Mon Feb  6 19:26:19 2012	(r24219)
@@ -5,4 +5,4 @@
                include/,\
                bin/,\
                .
-bin.excludes = trans
+bin.excludes = trans/

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.properties	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.properties	Mon Feb  6 19:26:19 2012	(r24219)
@@ -5,4 +5,4 @@
                include/,\
                bin/,\
                .
-bin.excludes = trans
+bin.excludes = trans/

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.properties	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.properties	Mon Feb  6 19:26:19 2012	(r24219)
@@ -5,4 +5,4 @@
                include/,\
                bin/,\
                .
-bin.excludes = trans
+bin.excludes = trans/

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/build.properties	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/build.properties	Mon Feb  6 19:26:19 2012	(r24219)
@@ -6,4 +6,4 @@
                bin/,\
                lib/,\
                .
-bin.excludes = trans
+bin.excludes = trans/

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.properties	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.properties	Mon Feb  6 19:26:19 2012	(r24219)
@@ -5,4 +5,4 @@
                include/,\
                bin/,\
                .
-bin.excludes = trans
+bin.excludes = trans/

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.properties	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.properties	Mon Feb  6 19:26:19 2012	(r24219)
@@ -6,4 +6,4 @@
                bin/,\
                lib/,\
                .
-bin.excludes = trans
+bin.excludes = trans/

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.properties	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.properties	Mon Feb  6 19:26:19 2012	(r24219)
@@ -7,4 +7,4 @@
                lib/,\
                include/spoofaxlang.jar,\
                .
-bin.excludes = trans
+bin.excludes = trans/

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.properties
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.properties	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/build.properties	Mon Feb  6 19:26:19 2012	(r24219)
@@ -6,4 +6,4 @@
                bin/,\
                icons/,\
                .
-bin.excludes = trans
+bin.excludes = trans/

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-build-properties.str	Mon Feb  6 19:26:19 2012	(r24219)
@@ -17,5 +17,5 @@
                bin/,\\
                lib/,\\
                .
-bin.excludes = trans
+bin.excludes = trans/
 "

Modified: spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-build-properties.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-build-properties.str	Mon Feb  6 18:38:43 2012	(r24218)
+++ spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-build-properties.str	Mon Feb  6 19:26:19 2012	(r24219)
@@ -15,7 +15,7 @@
                plugin.xml,\\
                include/,\\
                bin/,\\
-               lib/\
+               lib/,\\
                .
-bin.excludes = trans
+bin.excludes = trans/
 "

From tobivollebregt at gmail.com  Mon Feb  6 22:08:48 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 21:08:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24220 - in
	spoofax-imp/trunk:
	org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang
	org.strategoxt.imp.editors.template/test
	org.strategoxt.imp.editors.template...
Message-ID: <20120206210848.780082B8021@mx2.tudelft.nl>

Author: tvo
Date: Mon Feb  6 21:08:47 2012
New Revision: 24220
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24220&sc=1

Log:
moved test code and fix a few things

* expand.str: mark template as expanded when processing placeholder,
  not when processing top-level template
* expand.str: placeholder with text option set does not prevent its
  template from being chosen by `choose-one-expansion'
* all tests: use TemplateLang abstract syntax builder,
  instead of running custom strategies

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/desugar-sdf.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar-sdf.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/desugar-template.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar-template.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/desugar.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/parse-template.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/parse-template.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/spoofax-431.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/spoofax-431.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-1.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-1.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-2.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-2.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-3.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-3.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-4.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-4.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-sdf-1.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-sdf-1.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-sdf-2.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-sdf-2.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-str-1.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-1.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-str-2.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-2.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-str-3.spt
      - copied, changed from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-3.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar-sdf.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar-template.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/parse-template.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/spoofax-431.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-1.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-2.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-3.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-4.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-sdf-1.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-sdf-2.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-1.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-2.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-3.spt
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/desugar-sdf.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar-sdf.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar-sdf.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/desugar-sdf.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,6 +1,6 @@
 module templatelang-desugar-sdf
 
-language SpoofaxLang
+language TemplateLang
 start symbol SdfProduction
 
 test transform SdfProductionWithCons without attrs into prod [[ X.Y = ]]

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/desugar-template.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar-template.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar-template.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/desugar-template.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,6 +1,6 @@
 module templatelang-desugar-template
 
-language SpoofaxLang
+language TemplateLang
 start symbol Template
 
 test transform NoOptions() into empty list [[ <<Z>> ]]

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/desugar.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/desugar.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/desugar.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,6 +1,6 @@
 module templatelang-desugar
 
-language SpoofaxLang
+language TemplateLang
 start symbol TemplateProduction
 
 test transform no-attrs() into attrs(...) (1) [[ X = "" ]]

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/parse-template.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/parse-template.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/parse-template.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/parse-template.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,6 +1,6 @@
 module templatelang-parse
 
-language SpoofaxLang
+language TemplateLang
 start symbol Template
 
 test empty [[ <> ]]

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/spoofax-431.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/spoofax-431.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/spoofax-431.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/spoofax-431.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -4,7 +4,7 @@
 // NOTE: file must be saved using UNIX-style line endings,
 //       and tabs must not be converted to spaces!
 
-language SpoofaxLang
+language TemplateLang
 
 // this test succeeds
 test tab char (1) [[ <	> ]] // tab char!

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-1.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-1.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-1.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-1.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,11 +1,9 @@
 module templatelang-to-esv
 
-language SpoofaxLang
+language TemplateLang
 target language EditorService
 
 setup [[
-  package example
-  module example
   templates
 ]]
 
@@ -15,30 +13,30 @@
 ]]
 
 test empty [[ X.Y = <> ]]
-run test-templatelang-to-esv to [[ ]]
+build generate-esv-abstract to [[ ]]
 
 test placeholder [[ X.Y = <foo <Z> bar> ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template X: "foo Z bar" = "foo " <Z:Z> " bar"
 ]]
 
 test placeholder (text) [[ X.Y = <foo <Z; text=" display text "> bar> ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template X: "foo display text bar" = "foo " < display text :Z> " bar"
 ]]
 
 test placeholder (option) [[ X.Y = <foo <Z?> bar> ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template X: "foo bar" = "foo " <:Z> " bar"
 ]]
 
 test placeholder (plus) [[ X.Y = <foo <Z+> bar> ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template X: "foo Z bar" = "foo " <Z:Z> " bar"
 ]]
 
 test placeholder (star) [[ X.Y = <foo <Z*> bar> ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template X: "foo bar" = "foo " <:Z> " bar"
 ]]
 
@@ -51,19 +49,19 @@
     bar
   >
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template X: "foo bar" = "foo\n\t" (cursor) "\nbar" (blank)
 ]]
 
 test if then statement [[
   Statement.IfThen = <
-    <MetaAnno*; separator="\n">
+    <MetaAnno*; separator="\n", hide>
     if <Exp> then
       <Statement*; separator="\n">
     end
   >
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template Statement: "if Exp then end" =
     "if " <Exp:Exp> " then\n\t" (cursor) "\nend" (blank)
 ]]

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-2.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-2.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-2.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-2.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,11 +1,9 @@
 module templatelang-to-esv-2
 
-language SpoofaxLang
+language TemplateLang
 target language EditorService
 
-setup [[
-  package example
-  module example
+setup [[
   templates
 ]]
 
@@ -19,7 +17,7 @@
   A.B = "bar" {completion(prefer)}
   B = <x: <A>>
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template A: "foo" = "foo"
 	completion template A: "bar" = "bar"
 	completion template B: "x: bar" = "x: " <bar:A>
@@ -30,7 +28,7 @@
   A.B = "bar"
   B = <x: <A>>
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template A: "foo" = "foo"
   completion template A: "bar" = "bar"
   completion template B: "x: bar" = "x: " <bar:A>
@@ -42,7 +40,7 @@
   A.B = "bar"
   B = <x: <A>>
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   // WRONG: completion template A: "foo" = "foo"
   // WRONG: completion template A: "ffoo" = "ffoo"
   completion template A: "bar" = "bar"
@@ -59,12 +57,12 @@
     <Definition*; separator="\n">
   >
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template QId: "ID::ID" = <ID:QId> "::" <ID:ID>
   completion template Start: "module ID " =
     "module " <ID:QId> "\n\n" (cursor) (blank)
 ]]
-
+    
 test Mobl types [[[[
   QId = <<ID>>
   QId.QId = <<QId>::<ID>>
@@ -77,27 +75,63 @@
   Type.FunctionType = [[NFType+; separator=" * "] -> [NFType]] {avoid}
 
   FunctionDef.Function = <
-    <MetaAnno*; separator="\n">
+    <MetaAnno*; separator="\n", hide>
     function <QId>(<FArg*; separator=", ">) : <Type> {
       <Statement*; separator="\n">
     }
   >
 ]]]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template QId: "ID::ID" = <ID:QId> "::" <ID:ID>
   completion template NFType: "ID<>" = <ID:QId> "<" <:Type> ">"
   completion template NFType: "()" = "(" <:Type> ")"
-  completion template NFType: "[ID]" = "[" <ID:Type> "]"
+  completion template NFType: "[?]" = "[" <?:Type> "]"
   completion template NFType: "?" = "?"
-  completion template Type: "ID -> ID" = <ID:NFType> " -> " <ID:NFType>
-  completion template FunctionDef: "function ID() : ID { }" =
-    "function " <ID:QId> "(" <:FArg> ") : " <ID:Type> " {\n\t" (cursor) "\n}" (blank)
+  completion template Type: "? -> ?" = <?:NFType> " -> " <?:NFType>
+  completion template FunctionDef: "function ID() : ? { }" =
+    "function " <ID:QId> "(" <:FArg> ") : " <?:Type> " {\n\t" (cursor) "\n}" (blank)
 ]]
 
-test template-character-count
-  !(String("foo"), Placeholder("Sort", None(), Options([Placeholder("f")])), [Layout("bar"), String("baz")]);
+test template-character-count (1)
+  !(String("foo"), Placeholder("Sort", None(), Options([Text("f")])), [Layout("bar"), String("baz")]);
   template-character-count => 10
-
+
+test template-character-count (2)
+  ![
+  	Placeholder(sort("NFType"),Plus(),[Text("ID"),Separator(" * ")]),
+    Layout(" "),String("->"),Layout(" "),
+    Placeholder(sort("NFType"),None(),[Text("ID")])
+  ];
+  template-character-count => 8
+
+test template-character-count (3)
+  ![Placeholder(sort("NFType"),None(),[Text("ID")])];
+  template-character-count => 2
+
+test template-compare (1)
+  !([
+      Placeholder(sort("NFType"),Plus(),[Text("ID"),Separator(" * ")]),
+      Layout(" "),String("->"),Layout(" "),
+      Placeholder(sort("NFType"),None(),[Text("ID")])
+    ]{0},
+    [
+  	  Placeholder(sort("NFType"),None(),[Text("ID")])
+	  ]{0}
+	 );
+	 template-compare fails
+
+test template-compare (2)
+  !([
+      Placeholder(sort("NFType"),None(),[Text("ID")])
+    ]{0},
+  	[
+      Placeholder(sort("NFType"),Plus(),[Text("ID"),Separator(" * ")]),
+      Layout(" "),String("->"),Layout(" "),
+      Placeholder(sort("NFType"),None(),[Text("ID")])
+    ]{0}
+   );
+   template-compare => _
+
 test substring(1, -1)
   !"foo";
   string-as-chars(Tl; init) => "o"

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-3.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-3.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-3.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-3.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,11 +1,9 @@
 module templatelang-to-esv-3
 
-language SpoofaxLang
+language TemplateLang
 target language EditorService
 
 setup [[
-  package example
-  module example
   templates
 ]]
 
@@ -16,13 +14,13 @@
 
 test stuff [[
   Statement.IfThen = <
-    <MetaAnno*; separator="\n">
+    <MetaAnno*; separator="\n", hide>
     if <Exp> then
       <Statement*; separator="\n">
     end
   >
   Statement.For = <
-    <MetaAnno*; separator="\n">
+    <MetaAnno*; separator="\n", hide>
     for (<Exp>; <Exp>; <Exp>) do
       <Statement*; separator="\n">
     end
@@ -44,7 +42,7 @@
   FactorOp.Times = "*"
   FactorOp.Over = "/"
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template Statement: "if $ID$ then end" =
     "if " <$ID$:Exp> " then\n\t" (cursor) "\nend" (blank)
   completion template Statement: "for ($ID$; $ID$; $ID$) do end" =

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-4.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-4.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-esv-4.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-esv-4.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,13 +1,8 @@
 module templatelang-to-esv-4
 
-language SpoofaxLang
+language TemplateLang
 target language EditorService
 
-setup [[
-  package example
-  module example
-]]
-
 target setup [[
   module example
   completions
@@ -17,7 +12,7 @@
   lexical syntax
     "||" -> BoolMethodId
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template BoolMethodId: "||" = "||"
 ]]
 
@@ -25,7 +20,7 @@
   lexical syntax
     BoolMethodId = "||"
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template BoolMethodId: "||" = "||"
 ]]
 
@@ -35,7 +30,7 @@
   templates
     Exp.BinOp = <<Exp> <BoolMethodId> <Exp>>
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
   completion template BoolMethodId: "||" = "||"
   completion template Exp: "Exp || Exp" = <Exp:Exp> " " <||:BoolMethodId> " " <Exp:Exp>
 ]]
@@ -44,7 +39,7 @@
   lexical syntax
     "if" -> ID {reject}
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
 ]]
 
 test no expansion for reject production [[
@@ -53,6 +48,6 @@
   templates
     Exp.Var = <*<ID>>
 ]]
-run test-templatelang-to-esv to [[
+build generate-esv-abstract to [[
 	completion template Exp: "*ID" = "*" <ID:ID>
 ]]

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-sdf-1.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-sdf-1.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-sdf-1.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-sdf-1.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,11 +1,9 @@
 module templatelang-to-sdf-1
 
-language SpoofaxLang
+language TemplateLang
 target language SDF
 
 setup [[
-  package example
-  module example
   templates
 ]]
 
@@ -19,37 +17,37 @@
   Z.Y = <<>>  // double test to be able to re-use the footer for this test
   X.Y = <<>>
 ]]
-run test-templatelang-to-sdf to [[
+build generate-sdf-abstract to [[
   -> Z {cons("Y")}
   -> X {cons("Y")}
 ]]
 
 test placeholder [[ X.Y = <<Z>> ]]
-run test-templatelang-to-sdf to [[ Z -> X {cons("Y")} ]]
+build generate-sdf-abstract to [[ Z -> X {cons("Y")} ]]
 
 test placeholder (option) [[ X.Y = <<Z?>> ]]
-run test-templatelang-to-sdf to [[ Z? -> X {cons("Y")} ]]
+build generate-sdf-abstract to [[ Z? -> X {cons("Y")} ]]
 
 test placeholder (plus) [[ X.Y = <<Z+>> ]]
-run test-templatelang-to-sdf to [[ Z+ -> X {cons("Y")} ]]
+build generate-sdf-abstract to [[ Z+ -> X {cons("Y")} ]]
 
 test placeholder (star) [[ X.Y = <<Z*>> ]]
-run test-templatelang-to-sdf to [[ Z* -> X {cons("Y")} ]]
+build generate-sdf-abstract to [[ Z* -> X {cons("Y")} ]]
 
 test placeholder (plus, separator) [[ X.Y = <<Z+; separator=", ">> ]]
-run test-templatelang-to-sdf to [[ {Z ","}+ -> X {cons("Y")} ]]
+build generate-sdf-abstract to [[ {Z ","}+ -> X {cons("Y")} ]]
 
 test placeholder (star, separator) [[ X.Y = <<Z*; separator=" + ">> ]]
-run test-templatelang-to-sdf to [[ {Z "+"}* -> X {cons("Y")} ]]
+build generate-sdf-abstract to [[ {Z "+"}* -> X {cons("Y")} ]]
 
 test escaped chars in literal [[ X.Y = <<\"\t\n><Z>> ]]
-run test-templatelang-to-sdf to [[ "\"\t\n" Z -> X {cons("Y")} ]]
+build generate-sdf-abstract to [[ "\"\t\n" Z -> X {cons("Y")} ]]
 
 test escaped chars in separator [[ X.Y = <<Z*; separator="\"">> ]]
-run test-templatelang-to-sdf to [[ {Z "\""}* -> X {cons("Y")} ]]
+build generate-sdf-abstract to [[ {Z "\""}* -> X {cons("Y")} ]]
 
 test completion(...) attribute is erased [[ X.Y = <<Z>> {completion(prefer) }]]
-run test-templatelang-to-sdf to [[ Z -> X {cons("Y")} ]]
+build generate-sdf-abstract to [[ Z -> X {cons("Y")} ]]
 
 target setup footer [[
   context-free syntax

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-sdf-2.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-sdf-2.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-sdf-2.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-sdf-2.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,11 +1,9 @@
 module templatelang-to-sdf-2
 
-language SpoofaxLang
+language TemplateLang
 target language SDF
 
 setup [[
-  package example
-  module example
   templates
     // multi line template
     // placeholder @ (start, middle, end)
@@ -38,7 +36,7 @@
   template options
     newlines: none
 ]]
-run test-templatelang-to-sdf to [[
+build generate-sdf-abstract to [[
   MetaAnno* "if" Exp "then" Statement* "else" Statement* -> Statement {cons("IfThen")}
   Statement* -> Statements {}
 ]]
@@ -47,7 +45,7 @@
   template options
     newlines: leading
 ]]
-run test-templatelang-to-sdf to [[
+build generate-sdf-abstract to [[
   MetaAnno* "\n" "if" Exp "then" Statement* "\n" "else" Statement* -> Statement {cons("IfThen")}
   Statement* -> Statements {}
 ]]
@@ -56,7 +54,7 @@
   template options
     newlines: trailing
 ]]
-run test-templatelang-to-sdf to [[
+build generate-sdf-abstract to [[
   MetaAnno* "if" Exp "then" "\n" Statement* "else" "\n" Statement* -> Statement {cons("IfThen")}
   Statement* -> Statements {}
 ]]
@@ -65,7 +63,7 @@
   template options
     newlines: separating
 ]]
-run test-templatelang-to-sdf to [[
+build generate-sdf-abstract to [[
   %% Newlines separating MetaAnnos must be at end because sort is used at start of production.  
   %% Newlines separating Statement must be at start because sort is used at end of production.
   (MetaAnno "\n")* "if" Exp "then" ("\n" Statement)* "\n" "else" ("\n" Statement)* -> Statement {cons("IfThen")}

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-str-1.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-1.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-1.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-str-1.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,6 +1,6 @@
 module templatelang-to-str-1
 
-language SpoofaxLang
+language TemplateLang
 target language Stratego-Sugar
 
 // FIXME: This testsuite should really eval the generated stratego code on sample
@@ -8,8 +8,6 @@
 //        This is currently not really possible, however ...
 
 setup [[
-  package example
-  module example
   templates
 ]]
 

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-str-2.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-2.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-2.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-str-2.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,6 +1,6 @@
 module templatelang-to-str-2
 
-language SpoofaxLang
+language TemplateLang
 target language Stratego-Sugar
 
 // FIXME: This testsuite should really eval the generated stratego code on sample
@@ -8,8 +8,6 @@
 //        This is currently not really possible, however ...
 
 test if then statement [[
-  package example
-  module example
   templates
     Statement.IfThen = <
       <MetaAnno*; separator="\n">

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-str-3.spt (from r24219, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-3.spt)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/templatelang/to-str-3.spt	Mon Feb  6 19:26:19 2012	(r24219, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/to-str-3.spt	Mon Feb  6 21:08:47 2012	(r24220)
@@ -1,11 +1,9 @@
 module templatelang-to-str-3
 
-language SpoofaxLang
+language TemplateLang
 target language Stratego-Sugar
 
 setup [[
-  package example
-  module example
   templates
 ]]
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Mon Feb  6 19:26:19 2012	(r24219)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Mon Feb  6 21:08:47 2012	(r24220)
@@ -15,6 +15,7 @@
   templatelang/to-str
   utils/pp-esv
   utils/pp-sdf
+  utils/sdf
 
 rules // Main editor interface (defined by editor/TemplateLang-Builders and -References.esv)
 
@@ -48,28 +49,24 @@
   // Generate completion templates
   generate-esv =
     collect-om(?TemplateProduction(_, _, _));
-    filter(template-to-completion-template)
+    filter(template-to-completion-template);
+    !Module("example", NoImports(), [Completions("", <id>)]);
+    topdown(try(pp-fix-string-quotes))
 
   generate-esv-abstract =
     generate-aterm(generate-esv)
 
   generate-esv-concrete:
-    (selected, position, ast, path, project-path) ->
-      (filename,
-        $[module example
-          [result]])
+    (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"generated.esv")> path;
-      result   := <generate-esv;
-                   // R boxes are formatted incorrectly outside an A box.
-                   // Completions is the A box ...
-                   !Completions("", <id>);
-                   pp-descriptor-to-string> selected
+      result   := <generate-esv; pp-descriptor-to-string> selected
 
   // Generate SDF
   generate-sdf =
     collect-om(?TemplateProduction(_, _, _));
-    <template-sections-to-sdf> [TemplateSection(<id>)]
+    <template-sections-to-sdf> [TemplateSection(<id>)];
+    !'module(unparameterized("example"), [], [exports(<list-to-conc-grammars>)])
 
   generate-sdf-abstract =
     generate-aterm(generate-sdf)
@@ -78,9 +75,7 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"generated.sdf")> path;
-      result   := <generate-sdf;
-                   !'module(unparameterized("example"), [], [exports(<id>)]);
-                   pp-sdf-to-string> selected
+      result   := <generate-sdf; pp-sdf-to-string> selected
 
   // Generate pretty printer (BOX-based)
   generate-box-pp-string =

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Mon Feb  6 19:26:19 2012	(r24219)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Mon Feb  6 21:08:47 2012	(r24220)
@@ -4,6 +4,7 @@
   lib/editor-common.generated
   include/TemplateLang
   templatelang/utils/attributes
+  templatelang/utils/contract
   templatelang/utils/misc
 
 strategies

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str	Mon Feb  6 19:26:19 2012	(r24219)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str	Mon Feb  6 21:08:47 2012	(r24220)
@@ -43,13 +43,10 @@
   expand-template-production:
     TemplateProduction(sort, template, attrs) -> result{score}
     where
-      <not(is-reject)> attrs;
-      <not(Expanded)> sort
-    where {|Expanded:
-      rules( Expanded: sort -> sort );
+      <not(is-reject)> attrs
+    where
       result := <expand-template> template;
       score := <determine-score> attrs
-    |}
 
   // FIXME
   // expand-template-production:
@@ -85,7 +82,9 @@
    * @type Placeholder ->? Placeholder
    */
   is-template-placeholder:
-    Placeholder(sort(x), _, _) -> <id>
+    Placeholder(sort(x), _, option*) -> <id>
+    where
+      not(<one(?Text(_))> option*)
     where
       <<resolve-symbol-definitions> (<id>, TemplateBySort());
        one(?TemplateProduction(_, _, _))> x
@@ -177,24 +176,32 @@
 
 strategies  // helpers
 
+  get-templates =
+    ?sort;
+    rules( Expanded : sort -> sort );
+    <resolve-symbol-definitions> (sort, TemplateBySort());
+    not(?[])
+
   /**
    * @type String -> List(template-line)
    */
   get-template-lines(|indent) =
-    <resolve-symbol-definitions> (<id>, TemplateBySort());
-    not(?[]);
-    filter(expand-multi-line-template-production);
-    choose-one-expansion;
-    map(Line(![indent | <id>]))
+    {|Expanded:
+      get-templates;
+      filter(expand-multi-line-template-production);
+      choose-one-expansion;
+      map(Line(![indent | <id>]))
+    |}
 
   /**
    * @type String -> List(template-element)
    */
   get-template-elements =
-    <resolve-symbol-definitions> (<id>, TemplateBySort());
-    not(?[]);
-    filter(expand-single-line-template-production);
-    choose-one-expansion
+    {|Expanded:
+      get-templates;
+      filter(expand-single-line-template-production);
+      choose-one-expansion
+    |}
 
   choose-one-expansion =
        filter(not(oncetd(is-template-placeholder)));

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str	Mon Feb  6 21:08:47 2012	(r24220)
@@ -0,0 +1,17 @@
+/* Copied from org.strategoxt.imp.spoofax/trans/codegen/sdf/to-sdf.str */
+
+module utils/sdf
+
+imports
+  libstratego-sglr
+
+rules
+
+  list-to-conc-grammars:
+    [g1, g2 | gs] -> conc-grammars(g1, <list-to-conc-grammars> [g2 | gs])
+
+  list-to-conc-grammars:
+    [g1] -> g1
+
+  list-to-conc-grammars:
+    [] -> []

From tobivollebregt at gmail.com  Mon Feb  6 22:08:53 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 21:08:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24221 - in
	spoofax-imp/trunk:
	org.strategoxt.imp.editors.spoofax/trans/unit-tests/utils
	org.strategoxt.imp.editors.spoofax/trans/utils
	org.strategoxt.imp.editors.template/...
Message-ID: <20120206210853.B69A7CC1B7@mx4.tudelft.nl>

Author: tvo
Date: Mon Feb  6 21:08:53 2012
New Revision: 24221
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24221&sc=1

Log:
remove some TemplateLang specific code from SpoofaxLang

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/attic/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/attic/unit-tests/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/attic/unit-tests/utils/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/attic/unit-tests/utils/sdf2conflicts.meta
      - copied, changed from r24220, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/utils/sdf2conflicts.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/attic/unit-tests/utils/sdf2conflicts.str
      - copied, changed from r24220, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/utils/sdf2conflicts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/attic/utils/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/attic/utils/sdf2conflicts.str
      - copied, changed from r24220, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/sdf2conflicts.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/utils/sdf2conflicts.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/utils/sdf2conflicts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/sdf2conflicts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/tokenize.str

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/attic/unit-tests/utils/sdf2conflicts.meta (from r24220, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/utils/sdf2conflicts.meta)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/attic/unit-tests/utils/sdf2conflicts.str (from r24220, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/utils/sdf2conflicts.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/attic/utils/sdf2conflicts.str (from r24220, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/sdf2conflicts.str)
==============================================================================

From tobivollebregt at gmail.com  Mon Feb  6 22:08:57 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 21:08:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24222 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans:
	. templatelang templatelang/utils utils
Message-ID: <20120206210857.1B528108C00B@mx3.tudelft.nl>

Author: tvo
Date: Mon Feb  6 21:08:56 2012
New Revision: 24222
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24222&sc=1

Log:
stubs in single file

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/contract.str
      - copied, changed from r24221, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/contract.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/contract.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Mon Feb  6 21:08:53 2012	(r24221)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Mon Feb  6 21:08:56 2012	(r24222)
@@ -13,6 +13,7 @@
   templatelang/to-esv
   templatelang/to-sdf
   templatelang/to-str
+  utils/contract
   utils/pp-esv
   utils/pp-sdf
   utils/sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str	Mon Feb  6 21:08:53 2012	(r24221)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str	Mon Feb  6 21:08:56 2012	(r24222)
@@ -3,7 +3,7 @@
 imports
   include/TemplateLang
   templatelang/utils/attributes
-  templatelang/utils/contract
+  templatelang/utils/stubs
 
 signature
   constructors
@@ -18,12 +18,6 @@
 
 strategies
 
-  index-symbol-definition = fail
-  resolve-symbol-definition = fail
-  resolve-symbol-definitions = fail
-
-strategies
-
   declare-template-section:
     TemplateSection(prod*) -> <id>
     where

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Mon Feb  6 21:08:53 2012	(r24221)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Mon Feb  6 21:08:56 2012	(r24222)
@@ -4,7 +4,7 @@
   lib/editor-common.generated
   include/TemplateLang
   templatelang/utils/attributes
-  templatelang/utils/contract
+  templatelang/utils/stubs
   templatelang/utils/misc
 
 strategies

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str	Mon Feb  6 21:08:53 2012	(r24221)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str	Mon Feb  6 21:08:56 2012	(r24222)
@@ -4,8 +4,8 @@
   include/TemplateLang
   lib/EditorService
   templatelang/utils/attributes
-  templatelang/utils/contract
   templatelang/utils/misc
+  templatelang/utils/stubs
   templatelang/expand
   templatelang/to-string
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str	Mon Feb  6 21:08:53 2012	(r24221)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str	Mon Feb  6 21:08:56 2012	(r24222)
@@ -5,8 +5,8 @@
   include/TemplateLang
   templatelang/analyze
   templatelang/utils/attributes
-  templatelang/utils/contract
   templatelang/utils/misc
+  templatelang/utils/stubs
   templatelang/utils/tokenize
 
 strategies

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str	Mon Feb  6 21:08:53 2012	(r24221)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str	Mon Feb  6 21:08:56 2012	(r24222)
@@ -5,8 +5,8 @@
   libstrc
   include/TemplateLang
   templatelang/utils/attributes
-  templatelang/utils/contract
   templatelang/utils/misc
+  templatelang/utils/stubs
 
 strategies
 

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str	Mon Feb  6 21:08:56 2012	(r24222)
@@ -0,0 +1,42 @@
+module templatelang/utils/stubs
+
+// Strategies that must be supplied by client code.
+// (i.e., SpoofaxLang or non-public org.strategoxt.imp.editors.template code)
+
+strategies
+  index-symbol-definition = fail
+  resolve-symbol-definition = fail
+  resolve-symbol-definitions = fail
+
+// contract.str
+
+strategies
+  with-spxverify(s, msg) = fail
+  with-spxverify(s) = fail
+  with-verify(s, on-fail-exec , msg) = fail
+  with-verify(s, on-fail-exec) = fail
+  verify-stratego(s,on-fail-exec,message) = fail
+  as-string(s) = fail
+  as-string = fail
+
+strategies
+  verify(s | arg , expected) = fail
+  verify(s | arg) = fail
+  verify(s) = fail
+
+strategies
+  contract-requires ( s , on-fail | arg , expected) = fail
+  contract-requires ( s | arg , expected) = fail
+  contract-requires ( s | arg ) = fail
+  contract-requires (s) = fail
+  contracts ( s ) = fail
+  with-verification (preconditions, s ) = fail
+  with-verification (preconditions, s , postconditions) = fail
+
+strategies
+  run-strategy(  s  , on-fail | msg) = fail
+
+strategies
+  String = is-string
+  List = is-list
+  ListOf(s) = list-loop(s)

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/contract.str (from r24221, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/contract.str)
==============================================================================

From tobivollebregt at gmail.com  Mon Feb  6 22:09:03 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 21:09:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24223 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: .
	.externalToolBuilders .settings editor trans trans/private
	trans/private/utils trans/public trans/publi...
Message-ID: <20120206210903.0E6672B802F@mx2.tudelft.nl>

Author: tvo
Date: Mon Feb  6 21:09:02 2012
New Revision: 24223
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24223&sc=1

Log:
split into public and private folder

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.settings/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.settings/org.strategoxt.imp.editors.stratego.prefs
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/analyze.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/templatelang.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/contract.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/contract.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/pp-esv.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/pp-sdf.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/sdf.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/analyze.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/desugar.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/expand.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.meta
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-sdf.meta
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-sdf.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.meta
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-string.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-string.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/attributes.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/misc.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/stubs.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/tokenize.str
      - copied, changed from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/tokenize.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-string.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/tokenize.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/contract.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/TemplateLang build.main.xml.launch
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/TemplateLang build.main.xml.launch
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/TemplateLang build.main.xml.launch	Mon Feb  6 21:08:56 2012	(r24222)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/.externalToolBuilders/TemplateLang build.main.xml.launch	Mon Feb  6 21:09:02 2012	(r24223)
@@ -2,8 +2,12 @@
 <launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
 <stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
 <booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
-<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
-<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
+<listEntry value="/org.strategoxt.imp.editors.template/build.main.xml"/>
+</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
+<listEntry value="1"/>
+</listAttribute>
 <booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
 <listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
 <listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
@@ -14,7 +18,6 @@
 <booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.strategoxt.imp.editors.template/build.main.xml}"/>
 <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/.settings/org.strategoxt.imp.editors.stratego.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/.settings/org.strategoxt.imp.editors.stratego.prefs	Mon Feb  6 21:09:02 2012	(r24223)
@@ -0,0 +1 @@
+stratego.include=. trans/private trans/public

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Mon Feb  6 21:08:56 2012	(r24222)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Mon Feb  6 21:09:02 2012	(r24223)
@@ -6,7 +6,7 @@
 	<property name="sdfmodule" value="TemplateLang" />
 	<property name="metasdfmodule" value="Stratego-TemplateLang" />
 	<property name="esvmodule" value="TemplateLang" />
-	<property name="strmodule" value="templatelang" />
+	<property name="strmodule" value="private/templatelang" />
 
 	<!-- Project directories -->
 	<property name="trans" location="trans" />
@@ -21,7 +21,8 @@
 	<property name="build.sdf.imports" value="-Idef ${lib}/SDF.def" />
 	<property name="build.stratego.args" value="
 	    --library
-	    -I &quot;${trans}&quot;
+	    -I &quot;${trans}/private/&quot;
+	    -I &quot;${trans}/public/&quot;
 	    -I &quot;${basedir}&quot;
 	    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm" />
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Mon Feb  6 21:08:56 2012	(r24222)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Mon Feb  6 21:09:02 2012	(r24223)
@@ -10,7 +10,7 @@
 
 builders
 
-  provider : include/templatelang.ctree
+  provider : include/private/templatelang.ctree
   // provider : include/templatelang-java.jar
 
   observer : editor-analyze

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/analyze.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/templatelang.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Mon Feb  6 21:08:56 2012	(r24222, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/templatelang.str	Mon Feb  6 21:09:02 2012	(r24223)
@@ -8,11 +8,13 @@
   include/TemplateLang
   lib/EditorService
   lib/editor-common.generated
-  analyze
+imports
   templatelang/expand
   templatelang/to-esv
   templatelang/to-sdf
   templatelang/to-str
+imports
+  analyze
   utils/contract
   utils/pp-esv
   utils/pp-sdf

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/contract.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/contract.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/pp-esv.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/pp-sdf.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/sdf.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/analyze.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/desugar.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/expand.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.meta (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.meta)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-sdf.meta (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.meta)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-sdf.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.meta (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.meta)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-string.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-string.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/attributes.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/misc.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/stubs.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/tokenize.str (from r24222, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/tokenize.str)
==============================================================================

From tobivollebregt at gmail.com  Mon Feb  6 22:09:08 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 21:09:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24224 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax: .
	.settings trans trans/codegen/esv trans/codegen/sdf
	trans/codegen/str trans/codegen/template trans/conte...
Message-ID: <20120206210908.A06712B8021@mx2.tudelft.nl>

Author: tvo
Date: Mon Feb  6 21:09:08 2012
New Revision: 24224
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24224&sc=1

Log:
remove TemplateLang from SpoofaxLang;
refer to org.strategoxt.imp.editors.template instead

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/.settings/
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/.settings/org.strategoxt.imp.editors.stratego.prefs
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/template/to-esv.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/template/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/template/to-sdf.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/template/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/template/to-str.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/template/to-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/template/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/templatelang.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/.settings/org.strategoxt.imp.editors.stratego.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/.settings/org.strategoxt.imp.editors.stratego.prefs	Mon Feb  6 21:09:08 2012	(r24224)
@@ -0,0 +1 @@
+stratego.include=. trans lib src syntax syn src/syntax ../org.strategoxt.imp.editors.template/trans/public

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Mon Feb  6 21:09:02 2012	(r24223)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Mon Feb  6 21:09:08 2012	(r24224)
@@ -26,6 +26,8 @@
         <property name="build.stratego.args" value="
                         -I &quot;${trans}&quot;
                         -I &quot;${basedir}&quot;
+        	              -I &quot;${basedir}/../org.strategoxt.imp.editors.template/trans/public&quot;
+        	              -I &quot;${basedir}/../org.strategoxt.imp.editors.template&quot;
                         -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
         	              -la strc -la stratego-sdf"/>
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Mon Feb  6 21:09:02 2012	(r24223)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Mon Feb  6 21:09:08 2012	(r24224)
@@ -15,10 +15,11 @@
 imports
 	codegen/main
 	codegen/generate
-	codegen/template/to-esv
 	context/-
 imports
 	lib/editor-common.generated
+imports
+  templatelang/to-esv
 
 
 signature constructors
@@ -101,8 +102,8 @@
  				<conc>(<map(get-original-module-definition; template-module-to-esv)> module-qname* ,  sections)
  			else
  				!sections
- 			end	  
-		 	
+ 			end
+
 	ensure-lang-id-added(|package-id) =
 		?sections;
 		// Adding language Id if not already added with language description

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Mon Feb  6 21:09:02 2012	(r24223)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Mon Feb  6 21:09:08 2012	(r24224)
@@ -16,7 +16,6 @@
 imports
   normalize/main
 	normalize/signatures
-	normalize/templatelang
 imports
 	common
 	config
@@ -27,9 +26,10 @@
 imports
 	codegen/main
 	codegen/generate
-	codegen/template/to-sdf
 	utils/contract
-	utils/sdf2conflicts
+imports
+  templatelang/desugar
+  templatelang/to-sdf
 
 rules
 
@@ -55,7 +55,7 @@
     	sdf-string := <pp-sdf-string'> 'module(
     																		<qname-to-path>module-untyped-qname, 
     																		<to-sdf-imports-block>section* , 
-    																		<to-sdf-section-block;sdf2conflicts-store-sdf>section* 
+    																		<to-sdf-section-block/* TVO-FIXME: ;sdf2conflicts-store-sdf */>section* 
     																		)
     	; dbg-compiler(!$[ Codegen | SDF | Saving the artifacts of [<print-as-string> module-untyped-qname].])
 			; <save-artifact(| package-untyped-qname , root-directory, output-path)>sdf-string 
@@ -223,6 +223,8 @@
 									 ]
 rules
 
+  // TVO-FIXME: move to TemplateLang
+
   // (from TemplateLang)
 
   // Allows one to write `Sort.Cons' where a production is expected.

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Mon Feb  6 21:09:02 2012	(r24223)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Mon Feb  6 21:09:08 2012	(r24224)
@@ -18,13 +18,11 @@
 	codegen/main
 	codegen/sdf/to-name-analysis
   codegen/sdf/to-signature
-	codegen/template/to-str
 imports
 	context/-
 imports
 	normalize/signatures
 	utils/contract
-	utils/sdf2conflicts
 	common
 
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Mon Feb  6 21:09:02 2012	(r24223)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Mon Feb  6 21:09:08 2012	(r24224)
@@ -4,7 +4,6 @@
 	context/sdf/declare
 	context/str/-
 	context/esv/declare
-	context/template/declare
 	context/sdf/declare-signature
 	context/-
 	normalize/signatures
@@ -18,6 +17,8 @@
 	config
 	common
 	codegen/main
+imports
+  templatelang/analyze
 
 rules 
 	
@@ -85,14 +86,14 @@
   declare-local-symbols:
     TemplateSection(definition*) -> TemplateSection(declared-definition*)
     with
-     <declare-template-definition-main> definition* => declared-definition* 
+     <map(declare-template)> definition* => declared-definition* 
 
   // TemplateLang
   // FIXME: move to spoofax.configuration?
   declare-local-symbols:
   	TemplateOptions(option*) -> TemplateOptions(declared-option*)
   	with
-  	  <declare-template-options-main> option* => declared-option* 
+  	  <map(declare-template-option)> option* => declared-option* 
 
 rules
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Mon Feb  6 21:09:02 2012	(r24223)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Mon Feb  6 21:09:08 2012	(r24224)
@@ -6,7 +6,6 @@
 imports 
 	context/-
 	context/str/-
-	context/template/declare
 imports  
   	normalize/signatures
 	codegen/compile

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Mon Feb  6 21:09:02 2012	(r24223)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Mon Feb  6 21:09:08 2012	(r24224)
@@ -7,7 +7,6 @@
 imports
 	normalize/stratego
 	normalize/signatures
-	normalize/templatelang
 imports
 	include/SpoofaxLang
 imports
@@ -21,6 +20,8 @@
 	context/-
 	utils/contract
 	context/signatures
+imports
+  templatelang/desugar
 
 rules 
 	 normalize:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Mon Feb  6 21:09:02 2012	(r24223)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Mon Feb  6 21:09:08 2012	(r24224)
@@ -24,7 +24,6 @@
 	codegen/sdf/to-name-analysis
  	codegen/sdf/to-signature
   	codegen/main
-   	codegen/template/-
 imports
 	normalize/main
 	normalize/signatures
@@ -90,15 +89,4 @@
     editor-resolve;
     editor-hover;
     // meta tooling
-    build-spoofaxlang-jvm;
-    // testing
-    test-templatelang-to-esv;
-    test-templatelang-to-sdf;
-    test-templatelang-to-str;
-    build-templatelang-sdf;
-    build-templatelang-esv;
-    build-templatelang-str
-
-  build-templatelang-sdf = fail
-  build-templatelang-esv = fail
-  build-templatelang-str = fail
+    build-spoofaxlang-jvm

From tobivollebregt at gmail.com  Mon Feb  6 22:09:12 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 21:09:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24225 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: syntax
	trans/public/templatelang
Message-ID: <20120206210912.B68FC108C01F@mx3.tudelft.nl>

Author: tvo
Date: Mon Feb  6 21:09:12 2012
New Revision: 24225
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24225&sc=1

Log:
missing strategies required for SpoofaxLang

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXFake.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXFake.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXFake.sdf	Mon Feb  6 21:09:08 2012	(r24224)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXFake.sdf	Mon Feb  6 21:09:12 2012	(r24225)
@@ -24,4 +24,4 @@
 
   context-free syntax
     Section* -> Start {cons("CompilationUnit")}
-    Grammar[[SDF]] -> Section
+    Grammar[[SDF]] -> Section {cons("SDFSection")}

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.str	Mon Feb  6 21:09:08 2012	(r24224)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.str	Mon Feb  6 21:09:12 2012	(r24225)
@@ -10,6 +10,63 @@
   templatelang/to-string
 
 strategies
+	
+	// this block is mostly necessary by SpoofaxLang ???
+
+  /** @type Module -> List(Completions) */
+  template-module-to-esv:
+    Module(_, _, section*) -> <template-sections-to-esv> section*
+
+  /** @type List(TemplateSection) -> List(Completions) */
+  template-sections-to-esv:
+    section* -> completion*
+    where with-spxverify(
+      verify(List | section* , "List ::template-sections-to-esv")
+    )
+    where with-spxverify(
+      completion* := <filter(template-section-to-esv); concat> section*
+    )
+    where with-spxverify(
+      verify(ListOf(?CompletionTemplateEx(_, _, _, _)) | completion* , "ListOf(?CompletionTemplateEx(_, _, _, _))  ::template-module-to-esv")
+    )
+
+  /** @type TemplateSection -> List(CompletionTemplate) */
+  template-section-to-esv:
+    TemplateSection(prod*) -> completion*
+    where
+      with-spxverify(
+        verify( ListOf(?TemplateProduction(_, _, _) + ?TemplateProductionWithCons(_, _, _)) | prod* , "ListOf(?TemplateProduction(_, _, _) + ?TemplateProductionWithCons(_, _, _))  ::template-section-to-esv")
+      )
+    where with-spxverify(
+      completion* := <filter(template-to-completion-template)> prod*
+    )
+    where with-spxverify(
+      verify(ListOf(?CompletionTemplateEx(_, _, _, _)) | completion* , "ListOf(?CompletionTemplateEx(_, _, _, _))  ::template-section-to-esv")
+     )
+
+  template-section-to-esv:
+    SDFSection(lexical-syntax(prod*)) ->
+      <sdf-productions-to-completion-templates> prod*
+
+  template-section-to-esv:
+    SDFSection(context-free-syntax(prod*)) ->
+      <sdf-productions-to-completion-templates> prod*
+
+  sdf-productions-to-completion-templates:
+    prod* -> completion*
+    where with-spxverify(
+        verify(ListOf(?prod(_, _, _) + ?SdfProduction(_, _, _) + ?SdfProductionWithCons(_, _, _)) | prod* , "ListOf(?prod(_, _, _) + ?SdfProduction(_, _, _) + ?SdfProductionWithCons(_, _, _))  ::sdf-productions-to-completion-templates")
+    )
+   where
+     with-spxverify(
+      completion* := <filter(sdf-production-to-template;
+                             template-to-completion-template)> prod*
+     )
+    where with-spxverify(
+      verify(ListOf(?CompletionTemplateEx(_, _, _, _)) | completion* , "ListOf(?CompletionTemplateEx(_, _, _, _))  ::sdf-productions-to-completion-templates " )
+    )
+
+strategies
 
   sdf-production-to-template:
     prod([lit(text)], sort(sort), attrs) ->

From tobivollebregt at gmail.com  Mon Feb  6 22:09:15 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 21:09:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24226 - in
	spoofax-imp/trunk:
	org.strategoxt.imp.editors.spoofax/trans/codegen/str
	org.strategoxt.imp.editors.template/trans/private/utils
	org.strategoxt.imp.editors.templ...
Message-ID: <20120206210915.F3442108C00B@mx3.tudelft.nl>

Author: tvo
Date: Mon Feb  6 21:09:15 2012
New Revision: 24226
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24226&sc=1

Log:
add parse-stratego-string to TemplateLang, fix SpoofaxLang to-stratego.str

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/parse-str.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/stubs.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Mon Feb  6 21:09:12 2012	(r24225)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Mon Feb  6 21:09:15 2012	(r24226)
@@ -24,6 +24,8 @@
 	normalize/signatures
 	utils/contract
 	common
+imports
+  templatelang/to-str
 
 
 rules
@@ -104,16 +106,16 @@
 			; if templatelang-enabled then    
 					 with-spxverify(
 				    	dbg-compiler(!$[Codegen | STR | Generating prettyprinter from package-name: [<print-as-string> package-qname]]);
-				    	{|SubtermConflicts:
-					      <sdf2conflicts> []
+				    	//TVO-FIXME: {|SubtermConflicts:
+					    //TVO-FIXME:  <sdf2conflicts> []
 					      // HACK: this lacks any sanity wrt the original modules in which the SDF was placed ...
-					      ; section* := <map(get-original-module-definition; ?Module(_, _, <id>)); concat> module-qname*
+					        section* := <map(get-original-module-definition; ?Module(_, _, <id>)); concat> module-qname*
 				        ; section'* := <filter(?SDFSection(_) + ?SDFSectionEH(_, _) + ?TemplateSection(_))> section*
 				        ; activate-internal-scope(  
 				        	// this uses information collected by sdf2conflicts
 				        	pp-aterm := <template-sections-to-stratego> section'*
 				        )  
-				   	 |}
+				   	 //TVO-FIXME:|}
 			       ; pp-string := <pp-stratego-string> <parenthesize-Stratego> pp-aterm
 				     ; pp-qname := <QName(at-last([<conc-strings>(<id>, "-prettyprinter")]))> package-qname
 				     ; <save-artifact(save-to-file      | pp-qname , root-directory, <get-main-output-path(|pp-module-name, "str")>(root-directory, pp-qname))> pp-string

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/parse-str.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/parse-str.str	Mon Feb  6 21:09:15 2012	(r24226)
@@ -0,0 +1,28 @@
+/* Copied from org.strategoxt.imp.editors.spoofax/trans/context/str/parse.str */
+
+module utils/parse-str
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  libstratego-gpp
+
+strategies
+
+  parse-stratego =
+    parse-file(
+      strsglr-perror, strsglr-report-parse-error
+    | <import-term(lib/Stratego-Sugar.tbl)>
+    )
+
+  parse-stratego-string =
+    parse-string(
+      strsglr-report-parse-error
+    | <import-term(lib/Stratego-Sugar.tbl)>
+    )
+
+  parse-stratego-stream =
+    parse-stream(
+      strsglr-report-parse-error
+    | <import-term(lib/Stratego-Sugar.tbl)>
+    )

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.str	Mon Feb  6 21:09:12 2012	(r24225)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.str	Mon Feb  6 21:09:15 2012	(r24226)
@@ -10,12 +10,10 @@
 
 strategies
 
-  // FIXME: find parse-stratego-string, then uncomment
-
-  // template-sections-to-stratego =
-  //   template-sections-to-stratego-string;
-  //   parse-stratego-string;
-  //   alltd(try(un-double-quote); unescape)
+  template-sections-to-stratego =
+    template-sections-to-stratego-string;
+    parse-stratego-string;
+    alltd(try(un-double-quote); unescape)
 
   template-sections-to-stratego-string:
     section* ->

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/stubs.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/stubs.str	Mon Feb  6 21:09:12 2012	(r24225)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/stubs.str	Mon Feb  6 21:09:15 2012	(r24226)
@@ -4,6 +4,9 @@
 // (i.e., SpoofaxLang or non-public org.strategoxt.imp.editors.template code)
 
 strategies
+  parse-stratego-string = fail
+
+strategies
   index-symbol-definition = fail
   resolve-symbol-definition = fail
   resolve-symbol-definitions = fail

From tobivollebregt at gmail.com  Mon Feb  6 22:09:20 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 21:09:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24227 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax: . lib
Message-ID: <20120206210920.64A7ECC1B7@mx4.tudelft.nl>

Author: tvo
Date: Mon Feb  6 21:09:20 2012
New Revision: 24227
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24227&sc=1

Log:
remove SDF files for Stratego-{EditorService, SDF, Stratego}

(added in r22993 for TemplateLang, now present in *template project)

Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EditorService.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EmbeddedStratego.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EmbeddedStrategoMix.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-EditorService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Sdf2.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/StrategoStratego.sdf
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Mon Feb  6 21:09:15 2012	(r24226)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Mon Feb  6 21:09:20 2012	(r24227)
@@ -49,58 +49,9 @@
         <target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,spoofaximp.default.jar"/>
 				-->
 				
-		<target name="spoofaximp.edited.jar" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,spx.stratego.jar,sdf2imp,refresh"/>
+		<target name="spoofaximp.edited.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,spx.stratego.jar,sdf2imp,refresh"/>
 	
 		<target name="all" depends = "spoofaximp.edited.jar"/>
-					
-	
-        <!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
-        <available file="include/Stratego-Sdf2.tbl" property="stratego-sdf2.available"/>
-        <target name="meta-sdf2table-stratego-sdf2" unless="stratego-sdf2.available">
-          <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
-          <antcall target="pack-sdf.helper">
-            <param name="syntax" value="${lib}" />
-            <param name="sdfmodule" value="Stratego-Sdf2" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="sdf2table">
-            <param name="sdfmodule" value="Stratego-Sdf2" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="meta-sdf2table.helper" />
-        </target>
-
-        <!-- Target to create -Permissive grammar and parse table for Stratego-EditorService.def -->
-        <available file="include/Stratego-EditorService.tbl" property="stratego-esv.available"/>
-        <target name="meta-sdf2table-stratego-esv" unless="stratego-esv.available">
-          <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
-          <antcall target="pack-sdf.helper">
-            <param name="syntax" value="${lib}" />
-            <param name="sdfmodule" value="Stratego-EditorService" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="sdf2table">
-            <param name="sdfmodule" value="Stratego-EditorService" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="meta-sdf2table.helper" />
-        </target>
-
-      	<!-- Target to create -Permissive grammar and parse table for Stratego-EditorService.def -->
-        <available file="include/StrategoStratego.tbl" property="strategostratego.available"/>
-        <target name="meta-sdf2table-strategostratego" unless="strategostratego.available">
-          <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
-          <antcall target="pack-sdf.helper">
-            <param name="syntax" value="${lib}" />
-            <param name="sdfmodule" value="StrategoStratego" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="sdf2table">
-            <param name="sdfmodule" value="StrategoStratego" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="meta-sdf2table.helper" />
-        </target>
 	
 		<!-- Target Stratego to Java compiler -->
         <target name="spx.stratego.jar" depends="rtg2sig,utils-files">

From tobivollebregt at gmail.com  Mon Feb  6 22:09:32 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 21:09:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24228 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.aterm
	org.strategoxt.imp.editors.editorservice
	org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt...
Message-ID: <20120206210932.4B128108C00B@mx3.tudelft.nl>

Author: tvo
Date: Mon Feb  6 21:09:32 2012
New Revision: 24228
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24228&sc=1

Log:
update generated files

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceParseControllerGenerated.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceValidator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/refactor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/BoxPPParseControllerGenerated.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/refactor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/lib/refactor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/java/org/strategoxt/imp/editors/sdf/SDFParseControllerGenerated.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/java/org/strategoxt/imp/editors/sdf/SDFValidator.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/refactor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/SpoofaxLangParseControllerGenerated.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/refactor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseControllerGenerated.java
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/refactor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.testing.test/lib/refactor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.testing/lib/refactor-common.generated.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.testing.test/build.generated.xml
   spoofax-imp/trunk/org.strategoxt.imp.testing.test/lib/editor-common.generated.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.aterm/build.generated.xml	Mon Feb  6 21:09:32 2012	(r24228)
@@ -7,7 +7,7 @@
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${build}/org/strategoxt/imp/editors/aterm/strategies/Main.class" property="java.jar.enabled"/>
+        <available file="${src-gen}/org/strategoxt/imp/editors/aterm/strategies/Main.java" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.aterm.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>
@@ -19,9 +19,12 @@
         <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
-        <condition property="externaljarimport" value=":${externaljar}" else="">
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
             <isset property="externaljar"/>
         </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
         <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
             <isset property="eclipse.running"/>
         </condition>
@@ -43,7 +46,7 @@
         <mkdir dir="${lib}"/>
         <mkdir dir="${syntax}"/>
 
-        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
             <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
@@ -247,6 +250,43 @@
             </java>
         </target>
         
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper.fallback"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+
+    	<target name="sdf2parenthesize.helper.fallback" unless="sdf2parenthesize.available">
+        	<echo file="${include}/${sdfmodule}-parenthesize.str" message="module include/${sdfmodule}-parenthesize rules parenthesize-${sdfmodule} = id"/>
+    	</target>
+        
         <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -378,7 +418,7 @@
                 <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
                 <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
             </antcall>
-            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
@@ -418,145 +458,145 @@
                 
         <!-- begin: targets used for adding debugging instrumentation to stratego -->
         
-		<!-- 
-			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
-			Only used by stratego.jvm.helper.debug 
-		-->
-		<condition property="transformer-output" value="" else="--output-rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
-		
-		<!-- 
-			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
-			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
-			Only used by stratego.jvm.helper.debug
-		-->
-		<condition property="strj.input.file.type" value="str" else="rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
+        <!-- 
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug 
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- 
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
         
         <!-- value determines which target will be executed.
-        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
-        	else call stratego.jar
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
         -->
         <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
             <available file=".debugmode"/>
         </condition>
-		
-		<!-- will save the stratego files with debug info in this folder -->
-		<property name="trans-debug" location="trans-debug"/>
-		
-		<!-- this helper target determines what target to call, based on debug.build.enabled -->
-		<target name="stratego.jar.helper">
-			<antcall target="${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar unless debug.build.enabled property is set --> 
-		<target name="call.stratego.jar" depends="stratego.jar">
-			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
-		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
-			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- copy stratego runtime jars to utils folder -->
-		<target name="utils-files-debug" depends="utils-files">
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
-		</target>
-		
-	    <!-- Stratego to Java compiler with debugging capabilities -->
-	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
-	        <dependset>
-	            <srcfileset dir="${basedir}">
-	                <include name="**/*.str"/>
-	                <include name="**/*.astr"/>
-	                <exclude name="lib/editor-common.generated.str"/>
-	            </srcfileset>
-	            <targetfileset file="${src-gen}/trans/Main.java"/>
-	        </dependset>
-	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
-	        <antcall target="copy-jar"/>
-	        <antcall target="stratego.jar.deletehelper"/>
-	    	<!-- compile stratego to java -->
-	        <antcall target="stratego.jvm.helper.debug">
-	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
-	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
-	        </antcall>
-	    	<!-- compile java to class -->
-	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
-	    		<!-- attribute in javac: srcdir="${src-gen}" -->
-	    		<src path="${src-gen}"/>
-	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
-	        	<classpath>
-	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
-	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
-	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
-	        	</classpath>
-	        	<!-- attribute in javac: includes="trans/**"  -->
-	        	<include name="trans/**"/>
-	    	</javac>
-	        <!-- copy imported terms -->
-	        <copy todir="${build}/trans">
-	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-	        </copy>
-	    	<!-- create a jar from the class files -->
-	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
-	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
-	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
-	    </target>
-		
-		<!-- instrument the stratego program and compile it to java -->
-	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
-	    	<echo message="generate stratego with debug information"/>
-	    	<echo message="${basedir}"/>
-	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
-	    	<!-- add debug information -->
-	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
-	  		     <classpath>
-					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
-	  		     </classpath>
-	  			<arg value="-i"/>
-	  			<arg value="${trans}/${strmodule}.str"/>
-	  			<arg value="--gen-dir"/>
-	  			<arg value="${trans-debug}"/>
-	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
-	  			<arg value="${basedir}"/>
-	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
-	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
-	  			
-	  			<!-- arguments should start with two '-'-characters -->
-	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
-	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
-	  			<!-- <arg value="-output-rtree"/> --> 
-	    	</java>
-	    	<!-- now compile instrumented stratego to java -->
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <java classname="org.strategoxt.strj.Main" failonerror="true">
-	            <arg value="-i"/>
-	            <arg value="${trans-debug}/trans/${strmodule}.{strj.input.file.type}"/>
-	            <arg value="-o"/>
-	            <arg value="${build.stratego.outputfile}"/>
-	            <arg value="-p"/>
-	            <arg value="trans"/>
-	            <arg value="--library"/>
-	            <arg value="--clean"/>
-	            <arg line="${build.stratego.args}"/>
-	            <arg line="${build.stratego.extraargs}"/>
-	            <arg line="${externaljarflags}"/>
-	            <arg line="${externaldefimport}"/>
-	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
-	        	<!-- put strategodebuglib.rtree on the include path -->
-	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
-	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
-	        </java>
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <mkdir dir="${build}/trans"/>
-	    </target>
+        
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+        
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar unless debug.build.enabled property is set --> 
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+        
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="trans/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments --> 
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+                  
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> --> 
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
         
         
         <!-- end: targets used for adding debugging instrumentation to stratego -->

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/build.generated.xml	Mon Feb  6 21:09:32 2012	(r24228)
@@ -7,7 +7,7 @@
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${build}/org/strategoxt/imp/editors/editorservice/strategies/Main.class" property="java.jar.enabled"/>
+        <available file="${src-gen}/org/strategoxt/imp/editors/editorservice/strategies/Main.java" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.editorservice.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>
@@ -19,9 +19,12 @@
         <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
-        <condition property="externaljarimport" value=":${externaljar}" else="">
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
             <isset property="externaljar"/>
         </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
         <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
             <isset property="eclipse.running"/>
         </condition>
@@ -43,7 +46,7 @@
         <mkdir dir="${lib}"/>
         <mkdir dir="${syntax}"/>
 
-        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
             <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
@@ -247,6 +250,43 @@
             </java>
         </target>
         
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper.fallback"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+
+    	<target name="sdf2parenthesize.helper.fallback" unless="sdf2parenthesize.available">
+        	<echo file="${include}/${sdfmodule}-parenthesize.str" message="module include/${sdfmodule}-parenthesize rules parenthesize-${sdfmodule} = id"/>
+    	</target>
+        
         <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -378,7 +418,7 @@
                 <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
                 <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
             </antcall>
-            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
@@ -418,145 +458,145 @@
                 
         <!-- begin: targets used for adding debugging instrumentation to stratego -->
         
-		<!-- 
-			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
-			Only used by stratego.jvm.helper.debug 
-		-->
-		<condition property="transformer-output" value="" else="--output-rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
-		
-		<!-- 
-			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
-			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
-			Only used by stratego.jvm.helper.debug
-		-->
-		<condition property="strj.input.file.type" value="str" else="rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
+        <!-- 
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug 
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- 
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
         
         <!-- value determines which target will be executed.
-        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
-        	else call stratego.jar
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
         -->
         <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
             <available file=".debugmode"/>
         </condition>
-		
-		<!-- will save the stratego files with debug info in this folder -->
-		<property name="trans-debug" location="trans-debug"/>
-		
-		<!-- this helper target determines what target to call, based on debug.build.enabled -->
-		<target name="stratego.jar.helper">
-			<antcall target="${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar unless debug.build.enabled property is set --> 
-		<target name="call.stratego.jar" depends="stratego.jar">
-			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
-		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
-			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- copy stratego runtime jars to utils folder -->
-		<target name="utils-files-debug" depends="utils-files">
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
-		</target>
-		
-	    <!-- Stratego to Java compiler with debugging capabilities -->
-	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
-	        <dependset>
-	            <srcfileset dir="${basedir}">
-	                <include name="**/*.str"/>
-	                <include name="**/*.astr"/>
-	                <exclude name="lib/editor-common.generated.str"/>
-	            </srcfileset>
-	            <targetfileset file="${src-gen}/trans/Main.java"/>
-	        </dependset>
-	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
-	        <antcall target="copy-jar"/>
-	        <antcall target="stratego.jar.deletehelper"/>
-	    	<!-- compile stratego to java -->
-	        <antcall target="stratego.jvm.helper.debug">
-	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
-	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
-	        </antcall>
-	    	<!-- compile java to class -->
-	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
-	    		<!-- attribute in javac: srcdir="${src-gen}" -->
-	    		<src path="${src-gen}"/>
-	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
-	        	<classpath>
-	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
-	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
-	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
-	        	</classpath>
-	        	<!-- attribute in javac: includes="trans/**"  -->
-	        	<include name="trans/**"/>
-	    	</javac>
-	        <!-- copy imported terms -->
-	        <copy todir="${build}/trans">
-	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-	        </copy>
-	    	<!-- create a jar from the class files -->
-	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
-	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
-	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
-	    </target>
-		
-		<!-- instrument the stratego program and compile it to java -->
-	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
-	    	<echo message="generate stratego with debug information"/>
-	    	<echo message="${basedir}"/>
-	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
-	    	<!-- add debug information -->
-	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
-	  		     <classpath>
-					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
-	  		     </classpath>
-	  			<arg value="-i"/>
-	  			<arg value="${trans}/${strmodule}.str"/>
-	  			<arg value="--gen-dir"/>
-	  			<arg value="${trans-debug}"/>
-	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
-	  			<arg value="${basedir}"/>
-	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
-	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
-	  			
-	  			<!-- arguments should start with two '-'-characters -->
-	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
-	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
-	  			<!-- <arg value="-output-rtree"/> --> 
-	    	</java>
-	    	<!-- now compile instrumented stratego to java -->
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <java classname="org.strategoxt.strj.Main" failonerror="true">
-	            <arg value="-i"/>
-	            <arg value="${trans-debug}/trans/${strmodule}.{strj.input.file.type}"/>
-	            <arg value="-o"/>
-	            <arg value="${build.stratego.outputfile}"/>
-	            <arg value="-p"/>
-	            <arg value="trans"/>
-	            <arg value="--library"/>
-	            <arg value="--clean"/>
-	            <arg line="${build.stratego.args}"/>
-	            <arg line="${build.stratego.extraargs}"/>
-	            <arg line="${externaljarflags}"/>
-	            <arg line="${externaldefimport}"/>
-	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
-	        	<!-- put strategodebuglib.rtree on the include path -->
-	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
-	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
-	        </java>
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <mkdir dir="${build}/trans"/>
-	    </target>
+        
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+        
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar unless debug.build.enabled property is set --> 
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+        
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="trans/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments --> 
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+                  
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> --> 
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
         
         
         <!-- end: targets used for adding debugging instrumentation to stratego -->

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceParseControllerGenerated.java	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,108 @@
+package org.strategoxt.imp.editors.editorservice;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class EditorServiceParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("EditorService");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    EditorServiceParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = EditorServiceParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = EditorServiceParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(EditorServiceParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return EditorServiceParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/editor/java/org/strategoxt/imp/editors/editorservice/EditorServiceValidator.java	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,12 @@
+package org.strategoxt.imp.editors.editorservice;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class EditorServiceValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return EditorServiceParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/editor-common.generated.str	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/editor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -125,6 +125,7 @@
   
   origin-term      = prim("SSL_EXT_origin_term", <id>)
   origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-offset    = prim("SSL_EXT_origin_offset", <id>)
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.editorservice/lib/refactor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/EditorService.generated.pp.af)
+	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/build.generated.xml	Mon Feb  6 21:09:32 2012	(r24228)
@@ -7,7 +7,7 @@
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${build}/org/strategoxt/imp/editors/pp/strategies/Main.class" property="java.jar.enabled"/>
+        <available file="${src-gen}/org/strategoxt/imp/editors/pp/strategies/Main.java" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.pp.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>
@@ -19,9 +19,12 @@
         <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
-        <condition property="externaljarimport" value=":${externaljar}" else="">
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
             <isset property="externaljar"/>
         </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
         <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
             <isset property="eclipse.running"/>
         </condition>
@@ -43,7 +46,7 @@
         <mkdir dir="${lib}"/>
         <mkdir dir="${syntax}"/>
 
-        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
             <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
@@ -247,6 +250,43 @@
             </java>
         </target>
         
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper.fallback"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+
+    	<target name="sdf2parenthesize.helper.fallback" unless="sdf2parenthesize.available">
+        	<echo file="${include}/${sdfmodule}-parenthesize.str" message="module include/${sdfmodule}-parenthesize rules parenthesize-${sdfmodule} = id"/>
+    	</target>
+        
         <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -378,7 +418,7 @@
                 <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
                 <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
             </antcall>
-            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
@@ -418,145 +458,145 @@
                 
         <!-- begin: targets used for adding debugging instrumentation to stratego -->
         
-		<!-- 
-			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
-			Only used by stratego.jvm.helper.debug 
-		-->
-		<condition property="transformer-output" value="" else="--output-rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
-		
-		<!-- 
-			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
-			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
-			Only used by stratego.jvm.helper.debug
-		-->
-		<condition property="strj.input.file.type" value="str" else="rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
+        <!-- 
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug 
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- 
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
         
         <!-- value determines which target will be executed.
-        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
-        	else call stratego.jar
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
         -->
         <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
             <available file=".debugmode"/>
         </condition>
-		
-		<!-- will save the stratego files with debug info in this folder -->
-		<property name="trans-debug" location="trans-debug"/>
-		
-		<!-- this helper target determines what target to call, based on debug.build.enabled -->
-		<target name="stratego.jar.helper">
-			<antcall target="${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar unless debug.build.enabled property is set --> 
-		<target name="call.stratego.jar" depends="stratego.jar">
-			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
-		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
-			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- copy stratego runtime jars to utils folder -->
-		<target name="utils-files-debug" depends="utils-files">
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
-		</target>
-		
-	    <!-- Stratego to Java compiler with debugging capabilities -->
-	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
-	        <dependset>
-	            <srcfileset dir="${basedir}">
-	                <include name="**/*.str"/>
-	                <include name="**/*.astr"/>
-	                <exclude name="lib/editor-common.generated.str"/>
-	            </srcfileset>
-	            <targetfileset file="${src-gen}/trans/Main.java"/>
-	        </dependset>
-	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
-	        <antcall target="copy-jar"/>
-	        <antcall target="stratego.jar.deletehelper"/>
-	    	<!-- compile stratego to java -->
-	        <antcall target="stratego.jvm.helper.debug">
-	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
-	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
-	        </antcall>
-	    	<!-- compile java to class -->
-	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
-	    		<!-- attribute in javac: srcdir="${src-gen}" -->
-	    		<src path="${src-gen}"/>
-	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
-	        	<classpath>
-	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
-	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
-	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
-	        	</classpath>
-	        	<!-- attribute in javac: includes="trans/**"  -->
-	        	<include name="trans/**"/>
-	    	</javac>
-	        <!-- copy imported terms -->
-	        <copy todir="${build}/trans">
-	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-	        </copy>
-	    	<!-- create a jar from the class files -->
-	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
-	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
-	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
-	    </target>
-		
-		<!-- instrument the stratego program and compile it to java -->
-	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
-	    	<echo message="generate stratego with debug information"/>
-	    	<echo message="${basedir}"/>
-	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
-	    	<!-- add debug information -->
-	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
-	  		     <classpath>
-					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
-	  		     </classpath>
-	  			<arg value="-i"/>
-	  			<arg value="${trans}/${strmodule}.str"/>
-	  			<arg value="--gen-dir"/>
-	  			<arg value="${trans-debug}"/>
-	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
-	  			<arg value="${basedir}"/>
-	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
-	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
-	  			
-	  			<!-- arguments should start with two '-'-characters -->
-	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
-	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
-	  			<!-- <arg value="-output-rtree"/> --> 
-	    	</java>
-	    	<!-- now compile instrumented stratego to java -->
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <java classname="org.strategoxt.strj.Main" failonerror="true">
-	            <arg value="-i"/>
-	            <arg value="${trans-debug}/trans/${strmodule}.{strj.input.file.type}"/>
-	            <arg value="-o"/>
-	            <arg value="${build.stratego.outputfile}"/>
-	            <arg value="-p"/>
-	            <arg value="trans"/>
-	            <arg value="--library"/>
-	            <arg value="--clean"/>
-	            <arg line="${build.stratego.args}"/>
-	            <arg line="${build.stratego.extraargs}"/>
-	            <arg line="${externaljarflags}"/>
-	            <arg line="${externaldefimport}"/>
-	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
-	        	<!-- put strategodebuglib.rtree on the include path -->
-	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
-	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
-	        </java>
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <mkdir dir="${build}/trans"/>
-	    </target>
+        
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+        
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar unless debug.build.enabled property is set --> 
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+        
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="trans/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments --> 
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+                  
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> --> 
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
         
         
         <!-- end: targets used for adding debugging instrumentation to stratego -->

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/BoxPPParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/editor/java/org/strategoxt/imp/editors/pp/BoxPPParseControllerGenerated.java	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,108 @@
+package org.strategoxt.imp.editors.pp;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class BoxPPParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("BoxPP");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    BoxPPParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = BoxPPParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = BoxPPParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(BoxPPParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return BoxPPParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/editor-common.generated.str	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/editor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -125,6 +125,7 @@
   
   origin-term      = prim("SSL_EXT_origin_term", <id>)
   origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-offset    = prim("SSL_EXT_origin_offset", <id>)
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.pp/lib/refactor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/BoxPP.generated.pp.af)
+	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/build.generated.xml	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/build.generated.xml	Mon Feb  6 21:09:32 2012	(r24228)
@@ -7,7 +7,7 @@
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${build}/org/strategoxt/imp/editors/rtg/strategies/Main.class" property="java.jar.enabled"/>
+        <available file="${src-gen}/org/strategoxt/imp/editors/rtg/strategies/Main.java" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.rtg.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>
@@ -19,9 +19,12 @@
         <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
-        <condition property="externaljarimport" value=":${externaljar}" else="">
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
             <isset property="externaljar"/>
         </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
         <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
             <isset property="eclipse.running"/>
         </condition>
@@ -43,7 +46,7 @@
         <mkdir dir="${lib}"/>
         <mkdir dir="${syntax}"/>
 
-        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
             <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
@@ -247,6 +250,43 @@
             </java>
         </target>
         
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper.fallback"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+
+    	<target name="sdf2parenthesize.helper.fallback" unless="sdf2parenthesize.available">
+        	<echo file="${include}/${sdfmodule}-parenthesize.str" message="module include/${sdfmodule}-parenthesize rules parenthesize-${sdfmodule} = id"/>
+    	</target>
+        
         <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -378,7 +418,7 @@
                 <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
                 <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
             </antcall>
-            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
@@ -418,145 +458,145 @@
                 
         <!-- begin: targets used for adding debugging instrumentation to stratego -->
         
-		<!-- 
-			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
-			Only used by stratego.jvm.helper.debug 
-		-->
-		<condition property="transformer-output" value="" else="--output-rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
-		
-		<!-- 
-			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
-			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
-			Only used by stratego.jvm.helper.debug
-		-->
-		<condition property="strj.input.file.type" value="str" else="rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
+        <!-- 
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug 
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- 
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
         
         <!-- value determines which target will be executed.
-        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
-        	else call stratego.jar
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
         -->
         <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
             <available file=".debugmode"/>
         </condition>
-		
-		<!-- will save the stratego files with debug info in this folder -->
-		<property name="trans-debug" location="trans-debug"/>
-		
-		<!-- this helper target determines what target to call, based on debug.build.enabled -->
-		<target name="stratego.jar.helper">
-			<antcall target="${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar unless debug.build.enabled property is set --> 
-		<target name="call.stratego.jar" depends="stratego.jar">
-			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
-		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
-			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- copy stratego runtime jars to utils folder -->
-		<target name="utils-files-debug" depends="utils-files">
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
-		</target>
-		
-	    <!-- Stratego to Java compiler with debugging capabilities -->
-	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
-	        <dependset>
-	            <srcfileset dir="${basedir}">
-	                <include name="**/*.str"/>
-	                <include name="**/*.astr"/>
-	                <exclude name="lib/editor-common.generated.str"/>
-	            </srcfileset>
-	            <targetfileset file="${src-gen}/trans/Main.java"/>
-	        </dependset>
-	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
-	        <antcall target="copy-jar"/>
-	        <antcall target="stratego.jar.deletehelper"/>
-	    	<!-- compile stratego to java -->
-	        <antcall target="stratego.jvm.helper.debug">
-	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
-	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
-	        </antcall>
-	    	<!-- compile java to class -->
-	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
-	    		<!-- attribute in javac: srcdir="${src-gen}" -->
-	    		<src path="${src-gen}"/>
-	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
-	        	<classpath>
-	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
-	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
-	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
-	        	</classpath>
-	        	<!-- attribute in javac: includes="trans/**"  -->
-	        	<include name="trans/**"/>
-	    	</javac>
-	        <!-- copy imported terms -->
-	        <copy todir="${build}/trans">
-	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-	        </copy>
-	    	<!-- create a jar from the class files -->
-	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
-	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
-	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
-	    </target>
-		
-		<!-- instrument the stratego program and compile it to java -->
-	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
-	    	<echo message="generate stratego with debug information"/>
-	    	<echo message="${basedir}"/>
-	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
-	    	<!-- add debug information -->
-	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
-	  		     <classpath>
-					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
-	  		     </classpath>
-	  			<arg value="-i"/>
-	  			<arg value="${trans}/${strmodule}.str"/>
-	  			<arg value="--gen-dir"/>
-	  			<arg value="${trans-debug}"/>
-	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
-	  			<arg value="${basedir}"/>
-	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
-	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
-	  			
-	  			<!-- arguments should start with two '-'-characters -->
-	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
-	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
-	  			<!-- <arg value="-output-rtree"/> --> 
-	    	</java>
-	    	<!-- now compile instrumented stratego to java -->
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <java classname="org.strategoxt.strj.Main" failonerror="true">
-	            <arg value="-i"/>
-	            <arg value="${trans-debug}/trans/${strmodule}.{strj.input.file.type}"/>
-	            <arg value="-o"/>
-	            <arg value="${build.stratego.outputfile}"/>
-	            <arg value="-p"/>
-	            <arg value="trans"/>
-	            <arg value="--library"/>
-	            <arg value="--clean"/>
-	            <arg line="${build.stratego.args}"/>
-	            <arg line="${build.stratego.extraargs}"/>
-	            <arg line="${externaljarflags}"/>
-	            <arg line="${externaldefimport}"/>
-	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
-	        	<!-- put strategodebuglib.rtree on the include path -->
-	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
-	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
-	        </java>
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <mkdir dir="${build}/trans"/>
-	    </target>
+        
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+        
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar unless debug.build.enabled property is set --> 
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+        
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="trans/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments --> 
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+                  
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> --> 
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
         
         
         <!-- end: targets used for adding debugging instrumentation to stratego -->

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/lib/editor-common.generated.str	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/lib/editor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -125,6 +125,7 @@
   
   origin-term      = prim("SSL_EXT_origin_term", <id>)
   origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-offset    = prim("SSL_EXT_origin_offset", <id>)
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.rtg/lib/refactor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/rtg.generated.pp.af)
+	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.generated.xml	Mon Feb  6 21:09:32 2012	(r24228)
@@ -7,7 +7,7 @@
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${build}/org/strategoxt/imp/editors/sdf/strategies/Main.class" property="java.jar.enabled"/>
+        <available file="${src-gen}/org/strategoxt/imp/editors/sdf/strategies/Main.java" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.sdf.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>
@@ -19,9 +19,12 @@
         <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
-        <condition property="externaljarimport" value=":${externaljar}" else="">
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
             <isset property="externaljar"/>
         </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
         <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
             <isset property="eclipse.running"/>
         </condition>
@@ -43,7 +46,7 @@
         <mkdir dir="${lib}"/>
         <mkdir dir="${syntax}"/>
 
-        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
             <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
@@ -247,6 +250,43 @@
             </java>
         </target>
         
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper.fallback"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+
+    	<target name="sdf2parenthesize.helper.fallback" unless="sdf2parenthesize.available">
+        	<echo file="${include}/${sdfmodule}-parenthesize.str" message="module include/${sdfmodule}-parenthesize rules parenthesize-${sdfmodule} = id"/>
+    	</target>
+        
         <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -378,7 +418,7 @@
                 <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
                 <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
             </antcall>
-            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
@@ -418,145 +458,145 @@
                 
         <!-- begin: targets used for adding debugging instrumentation to stratego -->
         
-		<!-- 
-			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
-			Only used by stratego.jvm.helper.debug 
-		-->
-		<condition property="transformer-output" value="" else="--output-rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
-		
-		<!-- 
-			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
-			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
-			Only used by stratego.jvm.helper.debug
-		-->
-		<condition property="strj.input.file.type" value="str" else="rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
+        <!-- 
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug 
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- 
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
         
         <!-- value determines which target will be executed.
-        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
-        	else call stratego.jar
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
         -->
         <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
             <available file=".debugmode"/>
         </condition>
-		
-		<!-- will save the stratego files with debug info in this folder -->
-		<property name="trans-debug" location="trans-debug"/>
-		
-		<!-- this helper target determines what target to call, based on debug.build.enabled -->
-		<target name="stratego.jar.helper">
-			<antcall target="${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar unless debug.build.enabled property is set --> 
-		<target name="call.stratego.jar" depends="stratego.jar">
-			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
-		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
-			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- copy stratego runtime jars to utils folder -->
-		<target name="utils-files-debug" depends="utils-files">
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
-		</target>
-		
-	    <!-- Stratego to Java compiler with debugging capabilities -->
-	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
-	        <dependset>
-	            <srcfileset dir="${basedir}">
-	                <include name="**/*.str"/>
-	                <include name="**/*.astr"/>
-	                <exclude name="lib/editor-common.generated.str"/>
-	            </srcfileset>
-	            <targetfileset file="${src-gen}/trans/Main.java"/>
-	        </dependset>
-	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
-	        <antcall target="copy-jar"/>
-	        <antcall target="stratego.jar.deletehelper"/>
-	    	<!-- compile stratego to java -->
-	        <antcall target="stratego.jvm.helper.debug">
-	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
-	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
-	        </antcall>
-	    	<!-- compile java to class -->
-	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
-	    		<!-- attribute in javac: srcdir="${src-gen}" -->
-	    		<src path="${src-gen}"/>
-	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
-	        	<classpath>
-	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
-	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
-	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
-	        	</classpath>
-	        	<!-- attribute in javac: includes="trans/**"  -->
-	        	<include name="trans/**"/>
-	    	</javac>
-	        <!-- copy imported terms -->
-	        <copy todir="${build}/trans">
-	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-	        </copy>
-	    	<!-- create a jar from the class files -->
-	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
-	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
-	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
-	    </target>
-		
-		<!-- instrument the stratego program and compile it to java -->
-	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
-	    	<echo message="generate stratego with debug information"/>
-	    	<echo message="${basedir}"/>
-	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
-	    	<!-- add debug information -->
-	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
-	  		     <classpath>
-					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
-	  		     </classpath>
-	  			<arg value="-i"/>
-	  			<arg value="${trans}/${strmodule}.str"/>
-	  			<arg value="--gen-dir"/>
-	  			<arg value="${trans-debug}"/>
-	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
-	  			<arg value="${basedir}"/>
-	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
-	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
-	  			
-	  			<!-- arguments should start with two '-'-characters -->
-	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
-	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
-	  			<!-- <arg value="-output-rtree"/> --> 
-	    	</java>
-	    	<!-- now compile instrumented stratego to java -->
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <java classname="org.strategoxt.strj.Main" failonerror="true">
-	            <arg value="-i"/>
-	            <arg value="${trans-debug}/trans/${strmodule}.{strj.input.file.type}"/>
-	            <arg value="-o"/>
-	            <arg value="${build.stratego.outputfile}"/>
-	            <arg value="-p"/>
-	            <arg value="trans"/>
-	            <arg value="--library"/>
-	            <arg value="--clean"/>
-	            <arg line="${build.stratego.args}"/>
-	            <arg line="${build.stratego.extraargs}"/>
-	            <arg line="${externaljarflags}"/>
-	            <arg line="${externaldefimport}"/>
-	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
-	        	<!-- put strategodebuglib.rtree on the include path -->
-	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
-	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
-	        </java>
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <mkdir dir="${build}/trans"/>
-	    </target>
+        
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+        
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar unless debug.build.enabled property is set --> 
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+        
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="trans/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments --> 
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+                  
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> --> 
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
         
         
         <!-- end: targets used for adding debugging instrumentation to stratego -->

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/java/org/strategoxt/imp/editors/sdf/SDFParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/java/org/strategoxt/imp/editors/sdf/SDFParseControllerGenerated.java	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,108 @@
+package org.strategoxt.imp.editors.sdf;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class SDFParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("SDF");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    SDFParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = SDFParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = SDFParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(SDFParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return SDFParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/java/org/strategoxt/imp/editors/sdf/SDFValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/java/org/strategoxt/imp/editors/sdf/SDFValidator.java	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,12 @@
+package org.strategoxt.imp.editors.sdf;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class SDFValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return SDFParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -125,6 +125,7 @@
   
   origin-term      = prim("SSL_EXT_origin_term", <id>)
   origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-offset    = prim("SSL_EXT_origin_offset", <id>)
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/refactor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/SDF.generated.pp.af)
+	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.generated.xml	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/build.generated.xml	Mon Feb  6 21:09:32 2012	(r24228)
@@ -7,7 +7,7 @@
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${build}/org/strategoxt/imp/editors/spoofax/configuration/strategies/Main.class" property="java.jar.enabled"/>
+        <available file="${src-gen}/org/strategoxt/imp/editors/spoofax/configuration/strategies/Main.java" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.spoofax.configuration.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>
@@ -19,9 +19,12 @@
         <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
-        <condition property="externaljarimport" value=":${externaljar}" else="">
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
             <isset property="externaljar"/>
         </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
         <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
             <isset property="eclipse.running"/>
         </condition>
@@ -43,7 +46,7 @@
         <mkdir dir="${lib}"/>
         <mkdir dir="${syntax}"/>
 
-        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
             <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
@@ -247,6 +250,43 @@
             </java>
         </target>
         
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper.fallback"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+
+    	<target name="sdf2parenthesize.helper.fallback" unless="sdf2parenthesize.available">
+        	<echo file="${include}/${sdfmodule}-parenthesize.str" message="module include/${sdfmodule}-parenthesize rules parenthesize-${sdfmodule} = id"/>
+    	</target>
+        
         <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -378,7 +418,7 @@
                 <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
                 <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
             </antcall>
-            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
@@ -418,145 +458,145 @@
                 
         <!-- begin: targets used for adding debugging instrumentation to stratego -->
         
-		<!-- 
-			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
-			Only used by stratego.jvm.helper.debug 
-		-->
-		<condition property="transformer-output" value="" else="--output-rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
-		
-		<!-- 
-			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
-			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
-			Only used by stratego.jvm.helper.debug
-		-->
-		<condition property="strj.input.file.type" value="str" else="rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
+        <!-- 
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug 
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- 
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
         
         <!-- value determines which target will be executed.
-        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
-        	else call stratego.jar
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
         -->
         <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
             <available file=".debugmode"/>
         </condition>
-		
-		<!-- will save the stratego files with debug info in this folder -->
-		<property name="trans-debug" location="trans-debug"/>
-		
-		<!-- this helper target determines what target to call, based on debug.build.enabled -->
-		<target name="stratego.jar.helper">
-			<antcall target="${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar unless debug.build.enabled property is set --> 
-		<target name="call.stratego.jar" depends="stratego.jar">
-			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
-		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
-			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- copy stratego runtime jars to utils folder -->
-		<target name="utils-files-debug" depends="utils-files">
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
-		</target>
-		
-	    <!-- Stratego to Java compiler with debugging capabilities -->
-	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
-	        <dependset>
-	            <srcfileset dir="${basedir}">
-	                <include name="**/*.str"/>
-	                <include name="**/*.astr"/>
-	                <exclude name="lib/editor-common.generated.str"/>
-	            </srcfileset>
-	            <targetfileset file="${src-gen}/trans/Main.java"/>
-	        </dependset>
-	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
-	        <antcall target="copy-jar"/>
-	        <antcall target="stratego.jar.deletehelper"/>
-	    	<!-- compile stratego to java -->
-	        <antcall target="stratego.jvm.helper.debug">
-	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
-	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
-	        </antcall>
-	    	<!-- compile java to class -->
-	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
-	    		<!-- attribute in javac: srcdir="${src-gen}" -->
-	    		<src path="${src-gen}"/>
-	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
-	        	<classpath>
-	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
-	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
-	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
-	        	</classpath>
-	        	<!-- attribute in javac: includes="trans/**"  -->
-	        	<include name="trans/**"/>
-	    	</javac>
-	        <!-- copy imported terms -->
-	        <copy todir="${build}/trans">
-	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-	        </copy>
-	    	<!-- create a jar from the class files -->
-	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
-	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
-	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
-	    </target>
-		
-		<!-- instrument the stratego program and compile it to java -->
-	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
-	    	<echo message="generate stratego with debug information"/>
-	    	<echo message="${basedir}"/>
-	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
-	    	<!-- add debug information -->
-	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
-	  		     <classpath>
-					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
-	  		     </classpath>
-	  			<arg value="-i"/>
-	  			<arg value="${trans}/${strmodule}.str"/>
-	  			<arg value="--gen-dir"/>
-	  			<arg value="${trans-debug}"/>
-	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
-	  			<arg value="${basedir}"/>
-	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
-	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
-	  			
-	  			<!-- arguments should start with two '-'-characters -->
-	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
-	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
-	  			<!-- <arg value="-output-rtree"/> --> 
-	    	</java>
-	    	<!-- now compile instrumented stratego to java -->
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <java classname="org.strategoxt.strj.Main" failonerror="true">
-	            <arg value="-i"/>
-	            <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
-	            <arg value="-o"/>
-	            <arg value="${build.stratego.outputfile}"/>
-	            <arg value="-p"/>
-	            <arg value="trans"/>
-	            <arg value="--library"/>
-	            <arg value="--clean"/>
-	            <arg line="${build.stratego.args}"/>
-	            <arg line="${build.stratego.extraargs}"/>
-	            <arg line="${externaljarflags}"/>
-	            <arg line="${externaldefimport}"/>
-	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
-	        	<!-- put strategodebuglib.rtree on the include path -->
-	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
-	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
-	        </java>
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <mkdir dir="${build}/trans"/>
-	    </target>
+        
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+        
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar unless debug.build.enabled property is set --> 
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+        
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="trans/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments --> 
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+                  
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> --> 
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
         
         
         <!-- end: targets used for adding debugging instrumentation to stratego -->

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/lib/editor-common.generated.str	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax.configuration/lib/editor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -125,6 +125,7 @@
   
   origin-term      = prim("SSL_EXT_origin_term", <id>)
   origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-offset    = prim("SSL_EXT_origin_offset", <id>)
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/SpoofaxLangParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/SpoofaxLangParseControllerGenerated.java	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,108 @@
+package org.strategoxt.imp.editors.spoofax;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class SpoofaxLangParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("SpoofaxLang");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    SpoofaxLangParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = SpoofaxLangParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = SpoofaxLangParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(SpoofaxLangParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return SpoofaxLangParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/refactor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/SpoofaxLang.generated.pp.af)
+	

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/java/org/strategoxt/imp/editors/stratego/StrategoSugarParseControllerGenerated.java	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,108 @@
+package org.strategoxt.imp.editors.stratego;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class StrategoSugarParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("Stratego-Sugar");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    StrategoSugarParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = StrategoSugarParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = StrategoSugarParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(StrategoSugarParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return StrategoSugarParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/lib/refactor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/Stratego-Sugar.generated.pp.af)
+	

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing.test/build.generated.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing.test/build.generated.xml	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing.test/build.generated.xml	Mon Feb  6 21:09:32 2012	(r24228)
@@ -7,7 +7,7 @@
         <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
     
         <!-- Initialization -->
-        <available file="${build}/org/strategoxt/imp/testing/test/strategies/Main.class" property="java.jar.enabled"/>
+        <available file="${src-gen}/org/strategoxt/imp/testing/test/strategies/Main.java" property="java.jar.enabled"/>
         <condition property="java.jar.import" value="-la org.strategoxt.imp.testing.test.strategies" else="">
             <isset property="java.jar.enabled"/>
         </condition>
@@ -19,9 +19,12 @@
         <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
             <isset property="externaldef"/>
         </condition>
-        <condition property="externaljarimport" value=":${externaljar}" else="">
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
             <isset property="externaljar"/>
         </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
         <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
             <isset property="eclipse.running"/>
         </condition>
@@ -43,7 +46,7 @@
         <mkdir dir="${lib}"/>
         <mkdir dir="${syntax}"/>
 
-        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone"/>
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
         
         <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
             <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
@@ -247,6 +250,43 @@
             </java>
         </target>
         
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper.fallback"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+
+    	<target name="sdf2parenthesize.helper.fallback" unless="sdf2parenthesize.available">
+        	<echo file="${include}/${sdfmodule}-parenthesize.str" message="module include/${sdfmodule}-parenthesize rules parenthesize-${sdfmodule} = id"/>
+    	</target>
+        
         <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
             <dependset>
                 <srcfileset file="${include}/${sdfmodule}.def"/>
@@ -378,7 +418,7 @@
                 <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
                 <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
             </antcall>
-            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
             <!-- copy imported terms -->
             <copy todir="${build}/trans">
                 <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
@@ -418,145 +458,145 @@
                 
         <!-- begin: targets used for adding debugging instrumentation to stratego -->
         
-		<!-- 
-			if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
-			Only used by stratego.jvm.helper.debug 
-		-->
-		<condition property="transformer-output" value="" else="--output-rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
-		
-		<!-- 
-			if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
-			if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
-			Only used by stratego.jvm.helper.debug
-		-->
-		<condition property="strj.input.file.type" value="str" else="rtree">
-			<isset property="debug.the.debug.transformer"/>
-		</condition>
+        <!-- 
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug 
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- 
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
         
         <!-- value determines which target will be executed.
-        	If the file ".debugmode" can be found in the project root call stratego.jar.debug
-        	else call stratego.jar
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
         -->
         <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
             <available file=".debugmode"/>
         </condition>
-		
-		<!-- will save the stratego files with debug info in this folder -->
-		<property name="trans-debug" location="trans-debug"/>
-		
-		<!-- this helper target determines what target to call, based on debug.build.enabled -->
-		<target name="stratego.jar.helper">
-			<antcall target="${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar unless debug.build.enabled property is set --> 
-		<target name="call.stratego.jar" depends="stratego.jar">
-			<echo message="call.stratego.jar - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- call stratego.jar.debug when debug.build.enabled property is set -->
-		<target name="call.stratego.jar.debug" depends="stratego.jar.debug">
-			<echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
-		</target>
-		
-		<!-- copy stratego runtime jars to utils folder -->
-		<target name="utils-files-debug" depends="utils-files">
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
-			<copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
-		</target>
-		
-	    <!-- Stratego to Java compiler with debugging capabilities -->
-	    <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
-	        <dependset>
-	            <srcfileset dir="${basedir}">
-	                <include name="**/*.str"/>
-	                <include name="**/*.astr"/>
-	                <exclude name="lib/editor-common.generated.str"/>
-	            </srcfileset>
-	            <targetfileset file="${src-gen}/trans/Main.java"/>
-	        </dependset>
-	        <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
-	        <antcall target="copy-jar"/>
-	        <antcall target="stratego.jar.deletehelper"/>
-	    	<!-- compile stratego to java -->
-	        <antcall target="stratego.jvm.helper.debug">
-	            <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
-	            <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
-	        </antcall>
-	    	<!-- compile java to class -->
-	        <javac destdir="${build}" source="1.5" target="1.5" debug="on">
-	    		<!-- attribute in javac: srcdir="${src-gen}" -->
-	    		<src path="${src-gen}"/>
-	        	<!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"  -->
-	        	<classpath>
-	        		<pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
-	        		<pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
-	        		<pathelement location="utils/stratego-debug-runtime-java.jar"/>
-	        	</classpath>
-	        	<!-- attribute in javac: includes="trans/**"  -->
-	        	<include name="trans/**"/>
-	    	</javac>
-	        <!-- copy imported terms -->
-	        <copy todir="${build}/trans">
-	            <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
-	        </copy>
-	    	<!-- create a jar from the class files -->
-	        <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
-	        <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
-	        <delete><fileset dir="${build}" includes="trans/**"/></delete>
-	    </target>
-		
-		<!-- instrument the stratego program and compile it to java -->
-	    <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
-	    	<echo message="generate stratego with debug information"/>
-	    	<echo message="${basedir}"/>
-	    	<available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
-	    	<!-- add debug information -->
-	  		<java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
-	  		     <classpath>
-					<pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
-	  		     	<pathelement location="${eclipse.spoofaximp.strategojar}"/>
-	  		     </classpath>
-	  			<arg value="-i"/>
-	  			<arg value="${trans}/${strmodule}.str"/>
-	  			<arg value="--gen-dir"/>
-	  			<arg value="${trans-debug}"/>
-	  			<arg value="--base-dir"/> <!-- set the basedir to the project dir -->
-	  			<arg value="${basedir}"/>
-	  			<!-- "arg line='val'" val should contain space-separated arguments --> 
-	  			<arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
-	  			
-	  			<!-- arguments should start with two '-'-characters -->
-	  			<!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
-	  			<!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
-	  			<!-- <arg value="-output-rtree"/> --> 
-	    	</java>
-	    	<!-- now compile instrumented stratego to java -->
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <java classname="org.strategoxt.strj.Main" failonerror="true">
-	            <arg value="-i"/>
-	            <arg value="${trans-debug}/trans/${strmodule}.{strj.input.file.type}"/>
-	            <arg value="-o"/>
-	            <arg value="${build.stratego.outputfile}"/>
-	            <arg value="-p"/>
-	            <arg value="trans"/>
-	            <arg value="--library"/>
-	            <arg value="--clean"/>
-	            <arg line="${build.stratego.args}"/>
-	            <arg line="${build.stratego.extraargs}"/>
-	            <arg line="${externaljarflags}"/>
-	            <arg line="${externaldefimport}"/>
-	            <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
-	        	<!-- put strategodebuglib.rtree on the include path -->
-	        	<arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
-	        	<arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
-	        </java>
-	        <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
-	        <mkdir dir="${build}/trans"/>
-	    </target>
+        
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+        
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar unless debug.build.enabled property is set --> 
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+        
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="trans/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments --> 
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+                  
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> --> 
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
         
         
         <!-- end: targets used for adding debugging instrumentation to stratego -->

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing.test/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing.test/lib/editor-common.generated.str	Mon Feb  6 21:09:20 2012	(r24227)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing.test/lib/editor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -125,6 +125,7 @@
   
   origin-term      = prim("SSL_EXT_origin_term", <id>)
   origin-text      = prim("SSL_EXT_origin_text", <id>)
+  origin-offset    = prim("SSL_EXT_origin_offset", <id>)
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)

Added: spoofax-imp/trunk/org.strategoxt.imp.testing.test/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing.test/lib/refactor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/TestingTesting.generated.pp.af)
+	

Added: spoofax-imp/trunk/org.strategoxt.imp.testing/lib/refactor-common.generated.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/lib/refactor-common.generated.str	Mon Feb  6 21:09:32 2012	(r24228)
@@ -0,0 +1,67 @@
+module lib/refactor-common.generated
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  
+
+strategies //transformation
+
+/**
+ * Replaces elements in a list (once, starting from the right)
+ * @param match strategy for partial list
+ * @param new elements List(b)
+ * @type List(a) -> List(a,b)
+ */
+replace-sublist(match-sublist|new-elems): 
+  list -> <
+    at-suffix(match-sublist;!new-elems) <+
+    (
+      init; 
+      replace-sublist(match-sublist|new-elems);
+      at-end(![<last> list])
+    )
+  > list 
+
+/**
+ * Inserts an element at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list element 
+ * @type Term -> Term
+ */
+insert-elem(|pos, elem)=
+  insert-sublist(|pos, [elem])
+
+/**
+ * Inserts a list of elements at a given AST position
+ * @param List(Int), denoting an AST position
+ * @param inserted list elements 
+ * @type Term -> Term
+ */	
+insert-sublist(|pos, elems)=
+  at-position(
+    split-at(|<last> pos);
+    ?(prefix, suffix);
+    <concat>[prefix, elems, suffix]
+    |<init> pos
+  )
+
+
+strategies //user-input
+
+/**
+ * Opens an input dialog for one string value that represents an identifier
+ * The language is used to check if the input value matches the identifier pattern
+ * @type (String, String, String, String) -> String
+ */
+input-dialog:
+  (language, title, label, default-value) -> <prim("SSL_EXT_newnamedialog", language, title, label, default-value)>
+  
+input-dialog:
+  (title, label, default-value) -> <input-dialog>("", title, label, default-value)
+
+strategies //pp-table
+	
+get-pp-table=
+  import-term(include/Spoofax-Testing.generated.pp.af)
+	

From tobivollebregt at gmail.com  Mon Feb  6 22:40:03 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 21:40:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24229 - hydra/jobs
Message-ID: <20120206214003.3AA7FCC18A@mx4.tudelft.nl>

Author: tvo
Date: Mon Feb  6 21:40:02 2012
New Revision: 24229
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24229&sc=1

Log:
build org.strategoxt.imp.editors.template

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon Feb  6 21:09:32 2012	(r24228)
+++ hydra/jobs/spoofax-imp.nix	Mon Feb  6 21:40:02 2012	(r24229)
@@ -102,6 +102,7 @@
                  ${spoofaxImp}/org.strategoxt.imp.editors.spoofax \
                  ${spoofaxImp}/org.strategoxt.imp.editors.stratego \
                  ${spoofaxImp}/org.strategoxt.imp.editors.spoofax.configuration \
+                 ${spoofaxImp}/org.strategoxt.imp.editors.template \
                  ${spoofaxImp}/org.strategoxt.imp.testing \
                  ${spoofaxImp}/org.strategoxt.imp.testing.ui \
                  ${spoofaxImp}/org.strategoxt.imp.feature \

From tobivollebregt at gmail.com  Mon Feb  6 23:16:41 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 22:16:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24230 - hydra/jobs
Message-ID: <20120206221641.4E84A108C00F@mx3.tudelft.nl>

Author: tvo
Date: Mon Feb  6 22:16:41 2012
New Revision: 24230
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24230&sc=1

Log:
build o.s.i.e.template before o.s.i.e.spoofax

o.s.i.e.spoofax needs parse tables built during o.s.i.e.template build.

Modified:
   hydra/jobs/spoofax-imp.nix

Modified: hydra/jobs/spoofax-imp.nix
==============================================================================
--- hydra/jobs/spoofax-imp.nix	Mon Feb  6 21:40:02 2012	(r24229)
+++ hydra/jobs/spoofax-imp.nix	Mon Feb  6 22:16:41 2012	(r24230)
@@ -99,10 +99,10 @@
                  ${spoofaxImp}/org.strategoxt.imp.editors.pp \
                  ${spoofaxImp}/org.strategoxt.imp.editors.rtg \
                  ${spoofaxImp}/org.strategoxt.imp.editors.sdf \
+                 ${spoofaxImp}/org.strategoxt.imp.editors.template \
                  ${spoofaxImp}/org.strategoxt.imp.editors.spoofax \
                  ${spoofaxImp}/org.strategoxt.imp.editors.stratego \
                  ${spoofaxImp}/org.strategoxt.imp.editors.spoofax.configuration \
-                 ${spoofaxImp}/org.strategoxt.imp.editors.template \
                  ${spoofaxImp}/org.strategoxt.imp.testing \
                  ${spoofaxImp}/org.strategoxt.imp.testing.ui \
                  ${spoofaxImp}/org.strategoxt.imp.feature \

From tobivollebregt at gmail.com  Mon Feb  6 23:45:44 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Mon, 06 Feb 2012 22:45:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24231 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax: . lib
Message-ID: <20120206224544.E4C242B8003@mx2.tudelft.nl>

Author: tvo
Date: Mon Feb  6 22:45:44 2012
New Revision: 24231
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24231&sc=1

Log:
Revert "remove SDF files for Stratego-{EditorService, SDF, Stratego}"

Because build order cannot be controlled atm both projects will need
the parse tables for concrete syntax embedding.

This reverts r24227.

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EditorService.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EmbeddedStratego.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EmbeddedStrategoMix.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-EditorService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Sdf2.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/StrategoStratego.sdf
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Mon Feb  6 22:16:41 2012	(r24230)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Mon Feb  6 22:45:44 2012	(r24231)
@@ -49,9 +49,58 @@
         <target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,spoofaximp.default.jar"/>
 				-->
 				
-		<target name="spoofaximp.edited.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,spx.stratego.jar,sdf2imp,refresh"/>
+		<target name="spoofaximp.edited.jar" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,spx.stratego.jar,sdf2imp,refresh"/>
 	
 		<target name="all" depends = "spoofaximp.edited.jar"/>
+					
+	
+        <!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
+        <available file="include/Stratego-Sdf2.tbl" property="stratego-sdf2.available"/>
+        <target name="meta-sdf2table-stratego-sdf2" unless="stratego-sdf2.available">
+          <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
+          <antcall target="pack-sdf.helper">
+            <param name="syntax" value="${lib}" />
+            <param name="sdfmodule" value="Stratego-Sdf2" />
+            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+          </antcall>
+          <antcall target="sdf2table">
+            <param name="sdfmodule" value="Stratego-Sdf2" />
+            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+          </antcall>
+          <antcall target="meta-sdf2table.helper" />
+        </target>
+
+        <!-- Target to create -Permissive grammar and parse table for Stratego-EditorService.def -->
+        <available file="include/Stratego-EditorService.tbl" property="stratego-esv.available"/>
+        <target name="meta-sdf2table-stratego-esv" unless="stratego-esv.available">
+          <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
+          <antcall target="pack-sdf.helper">
+            <param name="syntax" value="${lib}" />
+            <param name="sdfmodule" value="Stratego-EditorService" />
+            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+          </antcall>
+          <antcall target="sdf2table">
+            <param name="sdfmodule" value="Stratego-EditorService" />
+            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+          </antcall>
+          <antcall target="meta-sdf2table.helper" />
+        </target>
+
+      	<!-- Target to create -Permissive grammar and parse table for Stratego-EditorService.def -->
+        <available file="include/StrategoStratego.tbl" property="strategostratego.available"/>
+        <target name="meta-sdf2table-strategostratego" unless="strategostratego.available">
+          <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
+          <antcall target="pack-sdf.helper">
+            <param name="syntax" value="${lib}" />
+            <param name="sdfmodule" value="StrategoStratego" />
+            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+          </antcall>
+          <antcall target="sdf2table">
+            <param name="sdfmodule" value="StrategoStratego" />
+            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+          </antcall>
+          <antcall target="meta-sdf2table.helper" />
+        </target>
 	
 		<!-- Target Stratego to Java compiler -->
         <target name="spx.stratego.jar" depends="rtg2sig,utils-files">

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EditorService.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EditorService.str	Mon Feb  6 22:45:44 2012	(r24231)
@@ -0,0 +1,149 @@
+module EditorService
+
+signature
+  constructors
+    ImportRenamed              : ModuleName * Id -> Import
+    Import                     : ModuleName -> Import
+    NoImports                  : Imports
+    Imports                    : List(Import) -> Imports
+    Module                     : ModuleName * Imports * List(Section) -> Module
+                               : String -> ModuleName
+    Source                     : BuilderOption
+    Cursor                     : BuilderOption
+    Meta                       : BuilderOption
+    Persistent                 : BuilderOption
+    RealTime                   : BuilderOption
+    OpenEditor                 : BuilderOption
+    Linked                     : CompletionAnno
+    Blank                      : CompletionAnno
+    Disable                    : CompletionAnno
+                               : CompletionAnno -> OptCompletionAnno
+    None                       : OptCompletionAnno
+    PlaceholderWithSort        : PlaceholderWithSortPrefix * Id -> CompletionPart
+    Cursor                     : CompletionPart
+    Placeholder                : Placeholder -> CompletionPart
+                               : String -> CompletionPart
+    CompletionPrefix           : String -> CompletionPrefix
+    NoCompletionPrefix         : CompletionPrefix
+                               : String -> Placeholder
+                               : String -> PlaceholderWithSortPrefix
+                               : String -> AttributeId
+                               : Id -> AttributeId
+                               : NoColor -> MaybeColor
+                               : Color -> MaybeColor
+    NoColor                    : NoColor
+    ColorRGB                   : Int * Int * Int -> Color
+    ColorDefault               : Color
+    BOLD_ITALIC                : Font
+    ITALIC                     : Font
+    BOLD                       : Font
+    NORMAL                     : Font
+    TK_UNKNOWN                 : TokenKindName
+    TK_ERROR                   : TokenKindName
+    TK_VAR                     : TokenKindName
+    TK_OPERATOR                : TokenKindName
+    TK_KEYWORD                 : TokenKindName
+    TK_STRING                  : TokenKindName
+    TK_LAYOUT                  : TokenKindName
+    TK_NUMBER                  : TokenKindName
+    TK_IDENTIFIER              : TokenKindName
+    Literal                    : Id -> ColorNode
+    Token                      : TokenKindName -> ColorNode
+                               : Node -> ColorNode
+    AttributeRef               : AttributeId -> Attribute
+    Attribute                  : Color * MaybeColor * Font -> Attribute
+    ColorDef                   : AttributeId * Attribute -> ColorRule
+    ColorRuleNamed             : ColorNode * String * Attribute -> ColorRule
+    ColorRuleAllNamed          : ColorNode * String * Attribute -> ColorRule
+    ColorRule                  : ColorNode * Attribute -> ColorRule
+    ColorRuleAll               : ColorNode * Attribute -> ColorRule
+    OutlineRule                : Node -> OutlineRule
+    None                       : FoldingAnno
+    Folded                     : FoldingAnno
+    Disable                    : FoldingAnno
+    FoldRuleAll                : Node * FoldingAnno -> FoldingRule
+    FoldRule                   : Node * FoldingAnno -> FoldingRule
+    IndentDef                  : PropertyValue -> IndentDef
+    FenceDef                   : PropertyValue * PropertyValue -> FenceDef
+    NoContinuation             : NoContinuation
+    BlockCommentDef            : PropertyValue * NoContinuation * PropertyValue -> BlockCommentDef
+    BlockCommentDef            : PropertyValue * PropertyValue * PropertyValue -> BlockCommentDef
+    IdentifierLexical          : PropertyValue -> LanguageProperty
+    IndentDefs                 : List(IndentDef) -> LanguageProperty
+    FenceDefs                  : List(FenceDef) -> LanguageProperty
+    BlockCommentDefs           : BlockCommentDef -> LanguageProperty
+    LineCommentPrefix          : PropertyValue -> LanguageProperty
+    UnmanagedTablePrefix       : Id -> LanguageProperty
+    Aliases                    : PropertyValues -> LanguageProperty
+    Extends                    : PropertyValues -> LanguageProperty
+    URL                        : URL -> LanguageProperty
+    StartSymbols               : PropertyValues -> LanguageProperty
+    StartSymbols               : List(Sort) -> LanguageProperty
+    TableProvider              : StrategoCall -> LanguageProperty
+    Table                      : PropertyValue -> LanguageProperty
+    Description                : PropertyValue -> LanguageProperty
+    Extensions                 : PropertyValues -> LanguageProperty
+    LanguageId                 : PropertyValue -> LanguageProperty
+    LanguageName               : PropertyValue -> LanguageProperty
+    Values                     : List(PropertyValue) -> PropertyValues
+                               : String -> URL
+                               : String -> PropertyValue
+                               : String -> PropertyValue
+    Refactorings               : String * List(SemanticRule) -> Section
+    Builders                   : String * List(SemanticRule) -> Section
+    Completions                : String * List(SemanticRule) -> Section
+    References                 : String * List(SemanticRule) -> Section
+    Colorer                    : String * List(ColorRule) -> Section
+    Outliner                   : String * List(OutlineRule) -> Section
+    Folding                    : String * List(FoldingRule) -> Section
+    Language                   : String * List(LanguageProperty) -> Section
+    None                       : OnSaveAnno
+    Attribute                  : StrategoId -> StrategoCall
+    Strategy                   : StrategoId -> StrategoCall
+    Refactoring                : List(SemanticNode) * String * StrategoCall * List(BuilderOption) -> SemanticRule
+    PrettyPrint                : StrategoCall -> SemanticRule
+    PPTable                    : StrategoCall -> SemanticRule
+    BuilderCaption             : PropertyValue -> SemanticRule
+    Builder                    : String * StrategoCall * List(BuilderOption) -> SemanticRule
+    SemanticObserver           : StrategoCall -> SemanticRule
+    CompletionTemplateEx       : List(Sort) * CompletionPrefix * List(CompletionPart) * List(CompletionAnno) -> SemanticRule
+    CompletionTrigger          : PropertyValue * OptCompletionAnno -> SemanticRule
+    CompletionTemplateEx       : List(Sort) * PropertyValue * List(CompletionPart) * List(CompletionAnno) -> SemanticRule
+    CompletionTemplateWithSort : Sort * CompletionPart * List(CompletionPart) * OptCompletionAnno -> SemanticRule
+    CompletionTemplate         : Id * List(CompletionPart) * OptCompletionAnno -> SemanticRule
+    CompletionKeyword          : PropertyValue * OptCompletionAnno -> SemanticRule
+    IdentifierLexical          : PropertyValue -> SemanticRule
+    CompletionProposer         : StrategoCall -> SemanticRule
+    OccurrenceRule             : SemanticNode * StrategoCall -> SemanticRule
+    HoverRule                  : SemanticNode * StrategoCall -> SemanticRule
+    ReferenceRule              : SemanticNode * StrategoCall -> SemanticRule
+    ReferenceHoverRule         : SemanticNode * StrategoCall * StrategoCall -> SemanticRule
+    OnSave                     : StrategoCall * OnSaveAnno -> SemanticRule
+    SemanticProvider           : PropertyValue -> SemanticRule
+                               : Node -> SemanticNode
+                               : String -> SemanticNode
+                               : String -> StrategoId
+    SortAndConstructor         : Sort * ConstructorId -> Node
+                               : Constructor -> Node
+                               : Sort -> Node
+    Constructor                : Id -> ConstructorId
+    ConstructorOnly            : ConstructorId -> Constructor
+    String                     : STRING -> String
+    ListSort                   : Id -> Sort
+    Sort                       : Id -> Sort
+                               : String -> STRING
+                               : String -> Int
+                               : String -> Id
+
+
+signature
+  constructors
+    Some : a -> Option(a)
+    None : Option(a)
+
+
+signature
+  constructors
+    Cons : a * List(a) -> List(a)
+    Nil  : List(a)
+    Conc : List(a) * List(a) -> List(a)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EmbeddedStratego.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EmbeddedStratego.sdf	Mon Feb  6 22:45:44 2012	(r24231)
@@ -0,0 +1,171 @@
+module EmbeddedStratego [E1 E2]
+imports Stratego
+exports
+  context-free syntax
+
+              "|[" Module "]|" -> E1 {cons("ToTerm"),prefer}
+    "Module"  "|[" Module "]|" -> E1 {cons("ToTerm")}
+
+              "|[" Decl   "]|" -> E1 {cons("ToTerm")}
+              "|[" Sdecl  "]|" -> E1 {cons("ToTerm")}
+
+              "|[" Opdecl "]|" -> E1 {cons("ToTerm")}
+    "Constr"  "|[" Opdecl "]|" -> E1 {cons("ToTerm")}
+
+              "|[" Type   "]|" -> E1 {cons("ToTerm")}
+    "Type"    "|[" Type   "]|" -> E1 {cons("ToTerm")}
+
+    "Sort"    "|[" Sort   "]|" -> E1 {cons("ToTerm")}
+
+              "|[" Term   "]|" -> E1 {cons("ToTerm")}
+    "Term"    "|[" Term   "]|" -> E1 {cons("ToTerm")}
+
+              "|[" Def    "]|" -> E1 {cons("ToTerm")}
+    "Def"     "|[" Def    "]|" -> E1 {cons("ToTerm")}
+
+             "|[" Rule      "]|" -> E1 {cons("ToTerm")}
+    "Rule"   "|[" Rule      "]|" -> E1 {cons("ToTerm")}
+             "|[" StratRule "]|" -> E1 {cons("ToTerm")}
+
+               "|[" Strategy "]|" -> E1 {cons("ToTerm")}
+    "Strat"    "|[" Strategy "]|" -> E1 {cons("ToTerm")}
+    "Strategy" "|[" Strategy "]|" -> E1 {cons("ToTerm")}
+
+    "O"        "|[" Overlay  "]|" -> E1 {cons("ToTerm")}
+    "Overlay"  "|[" Overlay  "]|" -> E1 {cons("ToTerm")}
+
+    "Typedid"    "|[" Typedid    "]|" -> E1 {cons("ToTerm")}
+    "DynRuleDef" "|[" DynRuleDef "]|" -> E1 {cons("ToTerm")}
+
+  context-free syntax
+    "~"         E2 -> ModName          {cons("FromTerm")}
+
+    "~"         E2 -> Term             {cons("FromTerm")}
+    "~term:"    E2 -> Term             {cons("FromTerm")}
+    %%"~term*:" E2 -> {Term ","}*      {cons("FromTerm")}
+    "~term*:"   E2 -> {Term ","}+      {cons("FromTerm")}
+    "~"         E2 -> {ID   ","}+      {cons("FromTerm")}
+
+    "~"         E2 -> Strategy         {cons("FromTerm")}
+    "~strat:"   E2 -> Strategy         {cons("FromTerm")}
+    "~*"        E2 -> {Strategy ","}+  {cons("FromTerm")}
+    "~strat*:"  E2 -> {Strategy ","}+  {cons("FromTerm")}
+
+    "~srt:"     E2 -> Sort {cons("FromTerm")}
+    "~srtvar:"  E2 -> LCID {cons("FromTerm")}
+    "~srtid:"   E2 -> UCID {cons("FromTerm")}
+
+    "~id:"    E2 -> Id     {cons("FromTerm")}
+    "~int:"   E2 -> Int    {cons("FromTerm")}
+    "~str:"   E2 -> String {cons("FromTerm")}
+
+    Id "/" Id -> Id {cons("ManglePrefix")}
+    Id "\\" Id -> Id {cons("MangleSuffix")}
+
+    "~"   E2 -> Def       {cons("FromTerm")}
+    "~*"  E2 -> Def+      {cons("FromTerm")}
+
+    "~*"  E2 -> Opdecl+      {cons("FromTerm")}
+    "~*"  E2 -> {Type "*"}+  {cons("FromTerm")}
+
+    "~*"          E2 -> {Typedid ","}+   {cons("FromTerm")}
+    "~typed-id*:" E2 -> {Typedid ","}+   {cons("FromTerm")}
+
+  %%%
+   %% Hacks
+   %%
+   %% Why are these hacks nessary? What do they do?
+   %%%
+  context-free syntax
+    "<" Strategy ">" -> StrategyAngle {bracket}
+    "(" Strategy ")" -> Strategy      {bracket,prefer}
+
+%%%
+ %% Identifiers
+ %%%
+
+  variables
+    [xyzfglc][0-9\']*       -> Id       {prefer}
+    [xyzfgl][0-9\']*  "*"   -> {Id ","}+ {prefer}
+    "xs"[0-9\']*            -> {Id ","}+ {prefer,obsolete}
+
+    [xyzfgl][0-9\']*  "*"   -> {ID ","}+ {prefer}
+
+%%%
+ %% Terms
+ %%%
+
+  variables
+    TermMetaVar     -> Term        {prefer}
+    TermListMetaVar -> {Term ","}+ {prefer}
+    TermListMetaVar -> {Term ","}+ {prefer,obsolete}
+
+  lexical syntax
+    [t][0-9\']*      -> TermMetaVar
+    "t:"Id           -> TermMetaVar
+    [t][0-9\']*  "*" -> TermListMetaVar
+    "ts"[0-9\']*     -> TermListMetaVar
+
+    TermMetaVar      -> MetaVar
+    TermListMetaVar  -> MetaVar
+
+%%%
+ %% Cleanup
+ %%%
+
+  variables
+    "str"[0-9\']* -> String
+
+  lexical syntax
+    "str"[0-9\']* -> Id {reject}
+
+  variables
+    "s"[0-9\']*           -> Strategy {prefer}
+    "ss"[0-9\']*          -> {Strategy ","}+ {prefer,obsolete}
+    "s"[0-9\']*   "*"     -> {Strategy ","}+ {prefer}
+
+    [r][0-9\']*           -> Rule {prefer}
+
+    "rd"[0-9\']*          -> RuleDef {prefer}
+    "rd"[0-9\']*  "*"     -> RuleDef* {prefer}
+
+    %% "a"[0-9\']*           -> Typedid        {prefer}
+    %% "a"[0-9\']*   "*"     -> {Typedid ","}+ {prefer}
+    %% "as"[0-9\']*          -> {Typedid ","}+ {prefer,obsolete}
+
+    "tp"[0-9\']*          -> Type
+    "tp"[0-9\']*  "*"     -> {Type "*"}+
+
+    "srt" [0-9\']*        -> Sort         {prefer}
+    "srt" [0-9\']* "*"    -> {Sort ","}*  {prefer}
+    "srt" [xyz] [0-9\']*  -> UCID         {prefer}
+
+    "M"   [0-9\']*        -> ModName {prefer}
+
+    "sc" [0-9\']*         -> SwitchCase {prefer}
+    "sc" [0-9\']* "*"     -> SwitchCase* {prefer}
+
+  variables
+    "sc" [0-9\']*         -> DynRuleScopeId        {prefer}
+    "sc" [0-9\']* "*"     -> {DynRuleScopeId ","}+ {prefer}
+
+    "dr" [0-9\']*         -> DynRuleId {prefer}
+
+    "drd"[0-9\']*         -> DynRuleDef {prefer}
+    "drd"[0-9\']*  "*"    -> DynRuleDef+ {prefer}
+
+%%%
+ %%
+ %% Disambiguation
+ %%%
+
+  lexical syntax
+    MetaVar -> Id  {reject}
+    MetaVar -> LId {reject}
+
+    "xs"[0-9\']*    -> Id  {reject}
+    [s][0-9\']*     -> Id  {reject}
+    "ss"[0-9\']*    -> Id  {reject}
+    [r][0-9\']*     -> Id  {reject}
+    %%  "a"[0-9\']*    -> Id  {reject}
+    %% "as"[0-9\']*    -> Id  {reject}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EmbeddedStrategoMix.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EmbeddedStrategoMix.sdf	Mon Feb  6 22:45:44 2012	(r24231)
@@ -0,0 +1,76 @@
+module EmbeddedStrategoMix[Ctx0 E1 E2]
+imports EmbeddedStratego[E1 E2]
+          [ MetaVar            => MetaVar[[Ctx0]]
+            TermListMetaVar    => TermListMetaVar[[Ctx0]]
+            TermMetaVar        => TermMetaVar[[Ctx0]]
+            RuleNames          => RuleNames[[Ctx0]]
+            RuleDec            => RuleDec[[Ctx0]]
+            DynRuleScopeId     => DynRuleScopeId[[Ctx0]]
+            DynRuleId          => DynRuleId[[Ctx0]]
+            DynRuleDef         => DynRuleDef[[Ctx0]]
+            ScopeLabels        => ScopeLabels[[Ctx0]]
+            RuleCond           => RuleCond[[Ctx0]]
+            Rule               => Rule[[Ctx0]]
+            RuleDef            => RuleDef[[Ctx0]]
+            Overlay            => Overlay[[Ctx0]]
+            SwitchCase         => SwitchCase[[Ctx0]]
+            StrategyCurly      => StrategyCurly[[Ctx0]]
+            StrategyAngle      => StrategyAngle[[Ctx0]]
+            Kind               => Kind[[Ctx0]]
+            LID                => LID[[Ctx0]]
+            ImportModName      => ImportModName[[Ctx0]]
+            Decl               => Decl[[Ctx0]]
+            Module             => Module[[Ctx0]]
+            StrategyParen      => StrategyParen[[Ctx0]]
+            Typedid            => Typedid[[Ctx0]]
+            Anno               => Anno[[Ctx0]]
+            EmptyId            => EmptyId[[Ctx0]]
+            StrategyDef        => StrategyDef[[Ctx0]]
+            SVar               => SVar[[Ctx0]]
+            Def                => Def[[Ctx0]]
+            Type               => Type[[Ctx0]]
+            RetType            => RetType[[Ctx0]]
+            ArgType            => ArgType[[Ctx0]]
+            FunType            => FunType[[Ctx0]]
+            ConstType          => ConstType[[Ctx0]]
+            Opdecl             => Opdecl[[Ctx0]]
+            Sort               => Sort[[Ctx0]]
+            Sdecl              => Sdecl[[Ctx0]]
+            Wld                => Wld[[Ctx0]]
+            ID                 => ID[[Ctx0]]
+            Var                => Var[[Ctx0]]
+            CharChar           => CharChar[[Ctx0]]
+            Char               => Char[[Ctx0]]
+            Padding            => Padding[[Ctx0]]
+            Dollar4            => Dollar4[[Ctx0]]
+            QuotedBracket4     => QuotedBracket4[[Ctx0]]
+            StringQuotedChars4 => StringQuotedChars4[[Ctx0]]
+            StringQuotedPart4  => StringQuotedPart4[[Ctx0]]
+            Dollar3            => Dollar3[[Ctx0]]
+            QuotedBracket3     => QuotedBracket3[[Ctx0]]
+            StringQuotedChars3 => StringQuotedChars3[[Ctx0]]
+            StringQuotedPart3  => StringQuotedPart3[[Ctx0]]
+            Dollar2            => Dollar2[[Ctx0]]
+            QuotedBracket2     => QuotedBracket2[[Ctx0]]
+            StringQuotedChars2 => StringQuotedChars2[[Ctx0]]
+            StringQuotedPart2  => StringQuotedPart2[[Ctx0]]
+            Dollar1            => Dollar1[[Ctx0]]
+            QuotedBracket1     => QuotedBracket1[[Ctx0]]
+            StringQuotedChars1 => StringQuotedChars1[[Ctx0]]
+            StringQuotedPart1  => StringQuotedPart1[[Ctx0]]
+            StringQuotation    => StringQuotation[[Ctx0]]
+            StrChar            => StrChar[[Ctx0]]
+            String             => String[[Ctx0]]
+            Real               => Real[[Ctx0]]
+            Int                => Int[[Ctx0]]
+            Keyword            => Keyword[[Ctx0]]
+            UCID               => UCID[[Ctx0]]
+            LCID               => LCID[[Ctx0]]
+            LId                => LId[[Ctx0]]
+            Id                 => Id[[Ctx0]]
+            ModNamePart        => ModNamePart[[Ctx0]]
+            ModName            => ModName[[Ctx0]]
+            PreTerm            => PreTerm[[Ctx0]]
+            Term               => Term[[Ctx0]]
+            StrategyMid        => StrategyMid[[Ctx0]]
+            Strategy           => Strategy[[Ctx0]] ]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-EditorService.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-EditorService.sdf	Mon Feb  6 22:45:44 2012	(r24231)
@@ -0,0 +1,72 @@
+%% Adapted from org.strategoxt.imp.generator/src/syntax/Stratego-Java-EditorService.sdf
+%% Removed Java imports
+%% Added QuotedTerms -> CompletionPart+ production
+%% Added "~anno:" Term[[StrategoHost]] -> CompletionAnno production
+%% Removed QuotedTerm -> CompletionPart
+
+module Stratego-EditorService
+imports
+  EditorService
+  StrategoMix[StrategoHost]
+
+exports
+  context-free start-symbols Module[[StrategoHost]]
+
+  sorts
+    QuotedTerm
+    QuotedTerms
+
+  context-free syntax
+
+    %% (Anti-)quotations
+    "descriptor" "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+                 "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+    "descriptor" "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+    "descriptor" "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+    "descriptor" "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
+    "descriptor" "|[" SemanticRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+                 "|[" OutlineRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" ColorRule    "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" FoldingRule  "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr"), avoid}
+                 "|[" SemanticRule "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+    "descriptor" "|[" Section "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+                 "|[" Section "]|" -> Term[[StrategoHost]] {cons("ToMetaExpr")}
+
+    QuotedTerm -> Id {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> PropertyValue {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> URL {cons("FromMetaExpr"), avoid}
+    QuotedTerm -> ModuleName {cons("FromMetaExpr")}
+    QuotedTerm -> Color {cons("FromMetaExpr")}
+    QuotedTerm -> Font  {cons("FromMetaExpr")}
+    QuotedTerm -> SectionName {cons("FromMetaExpr")}
+    QuotedTerm -> SemanticRule {cons("FromMetaExpr"), avoid}
+    %% QuotedTerm -> CompletionPart {cons("FromMetaExpr")}
+    QuotedTerm -> Section {cons("FromMetaExpr")}
+    QuotedTerm -> String {cons("FromMetaExpr")}
+
+    QuotedTerms -> OutlineRule*   {cons("FromMetaExpr")}
+    QuotedTerms -> ColorRule*     {cons("FromMetaExpr")}
+    QuotedTerms -> FoldingRule*   {cons("FromMetaExpr")}
+    QuotedTerms -> PropertyValues {cons("FromMetaExpr")}
+    QuotedTerms -> SemanticRule*  {cons("FromMetaExpr")}
+    QuotedTerms -> CompletionPart+ {cons("FromMetaExpr")}
+    QuotedTerms -> Section*        {cons("FromMetaExpr")}
+
+    "~"  Term[[StrategoHost]] -> QuotedTerm  {bracket}
+    "~*" Term[[StrategoHost]] -> QuotedTerms {bracket}
+
+    "~sort:" Term[[StrategoHost]] -> Sort {cons("FromMetaExpr"), prefer}
+    "~anno:" Term[[StrategoHost]] -> CompletionAnno {cons("FromMetaExpr"), prefer}
+
+    %% Stratego applications as anti-quotation
+    "<" Strategy[[StrategoHost]] ">" Term[[StrategoHost]] -> QuotedTerm {cons("App")}
+    StrategyAngle[[StrategoHost]]                         -> QuotedTerm {cons("RootApp"), avoid}
+
+  lexical syntax
+
+    "<" ~[]* ">" -> PropertyValue {reject}
+    "~" ~[]*     -> PropertyValue {reject}

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Sdf2.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Sdf2.sdf	Mon Feb  6 22:45:44 2012	(r24231)
@@ -0,0 +1,216 @@
+%%%
+ %% The definition of Sdf2 in Stratego tries to stay as close to the ASF+SDF
+ %% specification of SDF2 in "Syntax Definition for Language Prototyping" by
+ %% Eelco Visser.
+ %%
+ %% @author Martin Bravenboer
+ %%%
+module Stratego-Sdf2
+imports
+  languages/sdf2/syntax/Sdf2
+  StrategoMix[StrategoHost]
+
+exports
+  context-free start-symbols Module[[StrategoHost]]
+
+exports
+  %% HACK
+  context-free syntax
+    Group "." -> Group {non-assoc,cons("non-transitive")}
+
+
+  context-free syntax
+
+        "|[" SDF "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "d" "|[" SDF "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "m" "|[" Module "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "M" "|[" ModuleName "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "i" "|[" Import "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Section  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "s" "|[" Section  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Grammar  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+         "|[" Grammar* "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "G"  "|[" Grammar  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "G*" "|[" Grammar* "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "is" "|[" ImpSection "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Attributes "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "$" "|[" Attributes "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Production  "]|" -> Term[[StrategoHost]] {cons("ToTerm"), prefer}
+    "p" "|[" Production  "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Productions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "p*" "|[" Productions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+        "|[" Restriction "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "r" "|[" Restriction "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Restrictions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "r*" "|[" Restrictions "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Symbol      "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "A"  "|[" Symbol      "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "A*" "|[" Symbols     "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "cc" "|[" CharClass "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Renaming "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "ro" "|[" Renaming "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+         "|[" Alias "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+    "al" "|[" Alias "]|" -> Term[[StrategoHost]] {cons("ToTerm")}
+
+    "~"     Var[[StrategoHost]]  -> Symbol {cons("FromTerm")}
+    "~sym:" Term[[StrategoHost]] -> Symbol {cons("FromTerm")}
+
+
+%%%
+ %% Tricky: the reject needs to be lexical syntax to
+ %% avoid reject of variables. These lexical rejects only
+ %% reject the literal alternatives of an ambiguity. Thus,
+ %% the context-free variable is still allowed.
+ %%%
+
+  lexical syntax
+    %% MetaVar -> Sort {reject}
+    MetaVar -> IdCon  {reject}
+    MetaVar -> StrCon {reject}
+
+%%%
+ %% Symbols: Section 7.1
+ %%%
+
+  variables
+    SymbolMetaVar      -> Symbol
+    SymbolMetaVar "*"  -> Symbol*
+    SymbolMetaVar "+"  -> Symbol+
+
+    SymbolMetaVar "*"  -> {Symbol ","}*
+    SymbolMetaVar "+"  -> {Symbol ","}+
+
+  lexical syntax
+    [ABC][0-9\']* -> SymbolMetaVar
+    SymbolMetaVar -> MetaVar
+
+  lexical restrictions
+    SymbolMetaVar -/- [A-Za-z0-9\']
+
+%%%
+ %% Grammar: Section 7.2
+ %%%
+
+  variables
+    "G" [0-9\']* -> Grammar
+
+%%%
+ %% Productions and attributes: Section 7.3.1
+ %%%
+
+  variables
+    "attr" [0-9\']*     -> Attribute
+    "attr" [0-9\']* "*" -> {Attribute ","}*
+    "attr" [0-9\']* "+" -> {Attribute ","}+
+    "attrs" [0-9\']*        -> Attributes
+
+    "p" [0-9\']*     -> Production
+    "p" [0-9\']* "*" -> Production*
+    "p" [0-9\']* "+" -> Production+
+
+%%%
+ %% Sort: Section 7.4.1
+ %%%
+
+  variables
+     SortMetaVar -> Sort
+
+  lexical syntax
+    "S" [0-9\']* -> SortMetaVar
+    SortMetaVar -> MetaVar
+
+  lexical restrictions
+    SortMetaVar -/- [A-Za-z0-9\']
+
+%%%
+ %% CharClass: Section 7.4.2
+ %%%
+
+  variables
+    "cc" [0-9\']* -> CharClass {prefer}
+
+%%%
+ %% Literals
+ %%%
+
+  variables
+    StrConMetaVar -> StrCon
+
+  lexical syntax
+    "L" [0-9\']*  -> StrConMetaVar
+    StrConMetaVar -> MetaVar
+
+  lexical restrictions
+    StrConMetaVar -/- [A-Za-z0-9\']
+
+%%%
+ %% Groups and priorities
+ %%%
+
+  variables %% section 8.1.1
+    "g" [0-9\']*      -> Group
+    "gg" [0-9\']* "*" -> {Group ">"}*
+    "gg" [0-9\']* "+" -> {Group ">"}+
+
+    "pr" [0-9\']*     -> Priority
+    "pr" [0-9\']* "*" -> {Priority ","}*
+    "pr" [0-9\']* "+" -> {Priority ","}+
+
+    AssocMetaVar -> Associativity
+
+  lexical syntax
+    "as" [0-9\']* -> AssocMetaVar
+
+  lexical restrictions
+    AssocMetaVar -/- [A-Za-z0-9\']
+
+  variables %% section 8.4.1
+    "restr" [0-9\']*     -> Restriction
+    "restr" [0-9\']* "*" -> Restriction*
+    "restr" [0-9\']* "+" -> Restriction+
+
+  variables %% section 9.1.1
+    "ro" [0-9\']*     -> Renaming
+    "ro" [0-9\']* "*" -> Renaming*
+    "ro" [0-9\']* "+" -> Renaming+
+
+  variables %% section 9.2.1
+    "al" [0-9\']*     -> Alias
+    "al" [0-9\']* "*" -> Alias*
+    "al" [0-9\']* "+" -> Alias+
+
+  variables %% section 9.3.1
+    "Mid" [0-9\']* -> ModuleId
+    "M"   [0-9\']* -> ModuleName
+
+    "s" [0-9\']*     -> Section
+    "s" [0-9\']* "*" -> Section*
+    "s" [0-9\']* "+" -> Section+
+
+    "m" [0-9\']*     -> Module
+    "m" [0-9\']* "*" -> Module*
+    "m" [0-9\']* "+" -> Module+
+
+    "d" [0-9\']*     -> Definition
+
+    "i" [0-9\']*     -> Import
+    "i" [0-9\']* "*" -> Import*
+    "i" [0-9\']* "+" -> Import+
+
+    "is" [0-9\']*     -> ImpSection
+    "is" [0-9\']* "*" -> ImpSection*

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/StrategoStratego.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/StrategoStratego.sdf	Mon Feb  6 22:45:44 2012	(r24231)
@@ -0,0 +1,7 @@
+module StrategoStratego
+imports
+  StrategoMix[StrategoHost]
+  EmbeddedStrategoMix[StrategoObject PreTerm[[StrategoHost]] Term[[StrategoHost]]]
+
+hiddens
+  context-free start-symbols Module[[StrategoHost]]

From tobivollebregt at gmail.com  Tue Feb  7 11:28:49 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 10:28:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24232 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.spoofax/META-INF
	org.strategoxt.imp.editors.template/META-INF
Message-ID: <20120207102849.62639CC285@mx4.tudelft.nl>

Author: tvo
Date: Tue Feb  7 10:28:49 2012
New Revision: 24232
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24232&sc=1

Log:
test if runtime dependency influences build order

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/META-INF/MANIFEST.MF	Mon Feb  6 22:45:44 2012	(r24231)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/META-INF/MANIFEST.MF	Tue Feb  7 10:28:49 2012	(r24232)
@@ -6,17 +6,18 @@
 Bundle-ClassPath: .,
  include/spoofaxlang.jar
 Require-Bundle: org.eclipse.core.runtime,
-  org.eclipse.core.resources,
-  org.eclipse.imp.runtime,
-  org.eclipse.ui,
-  lpg.runtime,
-  org.eclipse.jface.text,
-  org.eclipse.ui.editors,
-  org.eclipse.ui.workbench.texteditor,
-  org.strategoxt.imp.runtime,
-  org.spoofax.jsglr,
-  org.spoofax.interpreter.library.language,
-  org.strategoxt.strj
+ org.eclipse.core.resources,
+ org.eclipse.imp.runtime,
+ org.eclipse.ui,
+ lpg.runtime,
+ org.eclipse.jface.text,
+ org.eclipse.ui.editors,
+ org.eclipse.ui.workbench.texteditor,
+ org.strategoxt.imp.runtime,
+ org.spoofax.jsglr,
+ org.spoofax.interpreter.library.language,
+ org.strategoxt.strj,
+ org.strategoxt.imp.editors.template
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Bundle-ActivationPolicy: lazy
 Export-Package: org.strategoxt.imp.editors.spoofax,

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF	Mon Feb  6 22:45:44 2012	(r24231)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF	Tue Feb  7 10:28:49 2012	(r24232)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: TemplateLang Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.editors.template; singleton:=true
-Bundle-Version: 1.0.0
+Bundle-Version: 1.0.0.qualifier
 Bundle-Activator: org.strategoxt.imp.editors.template.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

From tobivollebregt at gmail.com  Tue Feb  7 13:21:49 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 12:21:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24233 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.template/META-INF
	org.strategoxt.imp.feature
Message-ID: <20120207122149.62860108C067@mx3.tudelft.nl>

Author: tvo
Date: Tue Feb  7 12:21:49 2012
New Revision: 24233
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24233&sc=1

Log:
make o.s.i.e.template installable

(should fix install test)

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF	Tue Feb  7 10:28:49 2012	(r24232)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF	Tue Feb  7 12:21:49 2012	(r24233)
@@ -2,7 +2,7 @@
 Bundle-ManifestVersion: 2
 Bundle-Name: TemplateLang Plug-in
 Bundle-SymbolicName: org.strategoxt.imp.editors.template; singleton:=true
-Bundle-Version: 1.0.0.qualifier
+Bundle-Version: 0.1.0.qualifier
 Bundle-Activator: org.strategoxt.imp.editors.template.Activator
 Import-Package: org.osgi.framework;version="1.3.0"
 Require-Bundle: org.eclipse.core.runtime,

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Tue Feb  7 10:28:49 2012	(r24232)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Tue Feb  7 12:21:49 2012	(r24233)
@@ -396,4 +396,10 @@
          install-size="0"
          version="1.0.1.qualifier"/>
 
+   <plugin
+         id="org.strategoxt.imp.editors.template"
+         download-size="0"
+         install-size="0"
+         version="0.1.0.qualifier"/>
+
 </feature>

From tobivollebregt at gmail.com  Tue Feb  7 13:49:11 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 12:49:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24234 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax: . lib
Message-ID: <20120207124911.73495108C062@mx3.tudelft.nl>

Author: tvo
Date: Tue Feb  7 12:49:11 2012
New Revision: 24234
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24234&sc=1

Log:
remove SDF files for Stratego-{EditorService, SDF, Stratego}

(added in r22993 for TemplateLang, now present in *template project,
and shouldn't be needed anymore now runtime dependency is set up...)

This reverts r24231, re-applies r24227.

Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EditorService.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EmbeddedStratego.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/EmbeddedStrategoMix.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-EditorService.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Sdf2.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/StrategoStratego.sdf
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Tue Feb  7 12:21:49 2012	(r24233)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Tue Feb  7 12:49:11 2012	(r24234)
@@ -49,58 +49,9 @@
         <target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,spoofaximp.default.jar"/>
 				-->
 				
-		<target name="spoofaximp.edited.jar" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,spx.stratego.jar,sdf2imp,refresh"/>
+		<target name="spoofaximp.edited.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,spx.stratego.jar,sdf2imp,refresh"/>
 	
 		<target name="all" depends = "spoofaximp.edited.jar"/>
-					
-	
-        <!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
-        <available file="include/Stratego-Sdf2.tbl" property="stratego-sdf2.available"/>
-        <target name="meta-sdf2table-stratego-sdf2" unless="stratego-sdf2.available">
-          <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
-          <antcall target="pack-sdf.helper">
-            <param name="syntax" value="${lib}" />
-            <param name="sdfmodule" value="Stratego-Sdf2" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="sdf2table">
-            <param name="sdfmodule" value="Stratego-Sdf2" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="meta-sdf2table.helper" />
-        </target>
-
-        <!-- Target to create -Permissive grammar and parse table for Stratego-EditorService.def -->
-        <available file="include/Stratego-EditorService.tbl" property="stratego-esv.available"/>
-        <target name="meta-sdf2table-stratego-esv" unless="stratego-esv.available">
-          <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
-          <antcall target="pack-sdf.helper">
-            <param name="syntax" value="${lib}" />
-            <param name="sdfmodule" value="Stratego-EditorService" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="sdf2table">
-            <param name="sdfmodule" value="Stratego-EditorService" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="meta-sdf2table.helper" />
-        </target>
-
-      	<!-- Target to create -Permissive grammar and parse table for Stratego-EditorService.def -->
-        <available file="include/StrategoStratego.tbl" property="strategostratego.available"/>
-        <target name="meta-sdf2table-strategostratego" unless="strategostratego.available">
-          <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
-          <antcall target="pack-sdf.helper">
-            <param name="syntax" value="${lib}" />
-            <param name="sdfmodule" value="StrategoStratego" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="sdf2table">
-            <param name="sdfmodule" value="StrategoStratego" />
-            <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-          </antcall>
-          <antcall target="meta-sdf2table.helper" />
-        </target>
 	
 		<!-- Target Stratego to Java compiler -->
         <target name="spx.stratego.jar" depends="rtg2sig,utils-files">

From gabrielkonat at gmail.com  Tue Feb  7 15:25:57 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 07 Feb 2012 14:25:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24235 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120207142557.D86E8108C050@mx3.tudelft.nl>

Author: gkonat
Date: Tue Feb  7 14:25:57 2012
New Revision: 24235
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24235&sc=1

Log:
Enabled re-analysis again

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Tue Feb  7 12:49:11 2012	(r24234)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Tue Feb  7 14:25:57 2012	(r24235)
@@ -137,9 +137,9 @@
       // HACK: Depends on file extension, could be other languages with .spt extension?
       if Editor() := phase; not(<is-test-file> path) then
 	      // Find removed and added definitions
-	      (added, removed) := <analyze-diff> (olddefs, defs)
+	      (added, removed) := <analyze-diff> (olddefs, defs);
 	      // Schedule re-analysis of files that have a Use or Read of a removed def and Read of an added def
-	      //reanalyze-all(|added, removed, full-path)
+	      reanalyze-all(|added, removed, full-path)
 	    else
 	      (added, removed) := ([], [])
       end

From gabrielkonat at gmail.com  Tue Feb  7 16:57:27 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 07 Feb 2012 15:57:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24236 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120207155727.D5359CC33B@mx4.tudelft.nl>

Author: gkonat
Date: Tue Feb  7 15:57:27 2012
New Revision: 24236
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24236&sc=1

Log:
Fixed compilation passing the wrong filename analyse-top.
Fixed analyse-top clearing compile time reads.
Fixed wrong anonymous scope lookups during compilation.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Tue Feb  7 14:25:57 2012	(r24235)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Tue Feb  7 15:57:27 2012	(r24236)
@@ -32,11 +32,11 @@
 
 rules // Incremental code generation of project
   		
-  index-compile-ast(|file, subfile, path, project-path):
+  index-compile-ast(|file, subfile, project-path):
     ast -> None()
     with
       java := <to-java> ast;
-      full-path := <dirname> $[[project-path]/[path]];
+      full-path := <dirname> file;
       filename := <guarantee-extension(|"java")> <base-filename> file;
       writePath := $[[full-path]/java/];
       writeFile :=  $[[writePath][filename]];

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Tue Feb  7 14:25:57 2012	(r24235)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Tue Feb  7 15:57:27 2012	(r24236)
@@ -35,7 +35,7 @@
   // adjust-index-path-from-filesystem(|project-path, path)
   
   // Should compile given analysed ast.
-  index-compile-ast(|file, subfile, path, project-path) = fail
+  index-compile-ast(|file, subfile, project-path) = fail
  
 rules // analysis traversals
   
@@ -76,20 +76,21 @@
    *
    * @internal
    */
-  analyze-top-internal = analyze-top-internal(|Editor())
-  analyze-top-internal(|phase) = ?(ast, _, _); analyze-top-internal(|phase, <index-origin-language> ast)
-  analyze-top-internal(|phase, language):
+  analyze-top-internal = 
+    analyze-top-internal(|Editor())
+  analyze-top-internal(|phase) = 
+    ?(ast, path, project-path); analyze-top-internal(|phase, <index-origin-language> ast)
+  analyze-top-internal(|phase, language) = 
+    ?(_, path, project-path); analyze-top-internal(|phase, language, $[[project-path]/[path]])
+  analyze-top-internal(|phase, language, full-path):
     (ast, path, project-path) -> AnalysedResult(ast5, defs, uses, data', added, removed)
     with
       // Init
-      full-path := $[[project-path]/[path]];
       index-setup(|language, [project-path])
     with
-      if Editor() := phase then
-      	// Store copy of defs for diff and clear file
-        olddefs := <filter(?Def(_))> <index-get-all-in-file> full-path;
-        <index-clear-file> full-path
-      end
+    	// Store copy of defs for diff and clear file
+      olddefs := <filter(?Def(_))> <index-get-all-in-file> full-path;
+      <index-clear-file> full-path
     with
       {| Index-ReadSet, Index-UnresolvedSet:
         readSet := <new-iset>;
@@ -100,35 +101,26 @@
        
         // Add Unresolved annotations, record globals
         (Some(ast2), defs) := <analyze-defs(|Anon(), Anon())> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
-        if Editor() := phase then
-          <index-add-all(|full-path)> defs
-        end;
+        <index-add-all(|full-path)> defs;
 
         // Find DefData
         ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2;
         data := <origin-track-forced(analyze-tree-data)> ast3;
-        if Editor() := phase then
-          <index-add-all(|full-path)> data
-        end;
+        <index-add-all(|full-path)> data;
 
         // Resolve an references in DefData (using what we just stored)
         (data', data-uses) := <analyze-uses> data;
-        if Editor() := phase then
-          <index-remove-all(|full-path)> data;
-          <index-add-all(|full-path)> data'
-        end;
+        <index-remove-all(|full-path)> data;
+        <index-add-all(|full-path)> data';
        
         // Resolve all unresolved references in the tree
         (ast4, uses) := <analyze-uses> ast3;
-        if Editor() := phase then
-          <index-add-all(|full-path)> uses
-        end;
+        <index-add-all(|full-path)> uses;
         
         ast5 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast4;
        
         // Store reads into the index (if current language is not testing language)
-        // TODO: Add phase information to reads?
-        if Editor() := phase; not(<is-test-input(|language)> (ast, path)) then
+        if not(<is-test-input(|language)> (ast, path)) then
           <index-add-all(|full-path)> <iset-elements> readSet
         end
       |}
@@ -171,7 +163,7 @@
   analyze-all-changed-files(|added, removed, full-path):
     _ -> changed
     with
-    changed := <make-set> <remove-all(?full-path <+ is-test-file)> <concat> [
+    changed := <make-set> <remove-all(?full-path <+ is-test-file <+ index-is-fake-file)> <concat> [
 	    <analyze-changed(index-get-uses-all)> removed,
 	    <analyze-changed(index-get-reads-all)> removed,
 	    <analyze-changed(index-get-reads-all)> added
@@ -325,35 +317,54 @@
       language  := <index-origin-language> ast;
       index-setup(|language, [project-path])
     with
+      // Get all changes files by looking at the timestamps.
+      changedFiles      := <index-timestamp-get-updates(|"compile")>;
+      
+      // Determine the files to compile by looking at dependencies.
+      allDependentFiles := <make-set> <mapconcat(index-get-dependent-files)> changedFiles;
+      files             := <make-set> <conc> (allDependentFiles, changedFiles);
+      
+      // Restore compile time reads.
+      <filter(index-compilation-restore-reads)> files;
+      
+      // Compile the files
+      <filter(index-compilation-file(|language, project-path))> files;
+      
+      // Update timestamps to current time.
+      index-timestamp-set-updated(|"compile")
+
+  index-compilation-file(|language, project-path):
+    (file, subfile) -> None()
+    where
+      not(<is-test-file <+ index-is-fake-file> file) // Don't try to compile testing language or 'fake' files.
+    with
+      // Parse and analyze ast.
+      ast                                 := <parse-file> file;
+      AnalysedResult(ast', _, _, _, _, _) := <analyze-top-internal(|Compile(), language, file)> (ast, file, project-path)
+    with
       {| Index-ReadSet:
         readSet := <new-iset>;
         rules(Index-ReadSet: _ -> readSet);
         
-	      // Get all changes files by looking at the timestamps.
-	      changedFiles := <index-timestamp-get-updates(|"compile")>;
-	      
-	      // Determine the files to compile by looking at dependencies.
-	      allDependentFiles := <make-set> <mapconcat(index-get-dependent-files)> changedFiles;
-	      files := <make-set> <conc> (allDependentFiles, changedFiles);
-	      
-	      // Compile the files
-	      <filter(index-compilation-file(|language, path, project-path))> files;
-	      
-	      // Store compile-time reads.
-        <index-add-all(|full-path)> <iset-elements> readSet;
+        // Compile file
+        <index-compile-ast(|file, subfile, project-path)> ast';
         
-        // Update timestamps to current time.
-	      index-timestamp-set-updated(|"compile")
+	      // Store compile-time reads.
+	      reads := <iset-elements> readSet;
+	      <index-add-all(|(file, subfile))> reads;
+	      <index-add-all(|<index-compilation-file-tuple> (file, subfile))> reads
       |}
-
-  index-compilation-file(|language, path, project-path):
+      
+  index-compilation-restore-reads:
     (file, subfile) -> None()
-    where
-      not(<is-test-file> file) // Don't try compile testing language files.
     with
-      ast := <parse-file> file;
-      ast' := <analyze-top(|Compile(), language)> (ast, path, project-path);
-      <index-compile-ast(|file, subfile, path, project-path)> ast'
+      compilationFiles := <index-compilation-file-tuple> (file, subfile);
+      reads := <index-get-all-in-file> compilationFiles;
+      <index-add-all(|(file, subfile))> reads;
+      <index-clear-file> compilationFiles
+      
+  index-compilation-file-tuple:
+    (file, subfile) -> ($[/.internal/reads/compile/[file]], subfile)
  
 rules // index API primitives
  

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Tue Feb  7 14:25:57 2012	(r24235)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Tue Feb  7 15:57:27 2012	(r24236)
@@ -179,6 +179,11 @@
       files' := <remove-all(?(timestampName, _))> files
 
   /**
+   * Queries if given index file is a 'fake' file for storing internal data.
+   */
+  index-is-fake-file = string-starts-with(|"/.internal")
+
+  /**
    * Gets the URI for given term.
    */ 
   index-uri:

From richard at vogelij.nl  Tue Feb  7 17:01:53 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Tue, 07 Feb 2012 16:01:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24237 - in
	spoofax-ace/src/spoofax/ace: . exceptions generator
	spoofaxinfo utils
Message-ID: <20120207160153.717572B8060@mx2.tudelft.nl>

Author: rvogelij
Date: Tue Feb  7 16:01:53 2012
New Revision: 24237
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24237&sc=1

Log:
Updated the spoofax to ace project:

  -Use pre built ctree files by the spoofax ant build file
  -No longer needed to alter the spoofax project's stratego code to add an entry point for the ace editor services
  -Gets info from .esv file
  -Cleaned up

Added:
   spoofax-ace/src/spoofax/ace/exceptions/S2ASpoofaxSetupException.java
   spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java
   spoofax-ace/src/spoofax/ace/spoofaxinfo/
   spoofax-ace/src/spoofax/ace/spoofaxinfo/S2AEsvParser.java
   spoofax-ace/src/spoofax/ace/spoofaxinfo/S2ASpoofaxInfo.java
   spoofax-ace/src/spoofax/ace/utils/
   spoofax-ace/src/spoofax/ace/utils/S2AUtils.java
Modified:
   spoofax-ace/src/spoofax/ace/SpoofaxToAce.java
   spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java

Modified: spoofax-ace/src/spoofax/ace/SpoofaxToAce.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/SpoofaxToAce.java	Tue Feb  7 15:57:27 2012	(r24236)
+++ spoofax-ace/src/spoofax/ace/SpoofaxToAce.java	Tue Feb  7 16:01:53 2012	(r24237)
@@ -13,9 +13,8 @@
  */
 public class SpoofaxToAce {
 	
-	final static String _version 		= "0.11a";
+	final static String _version 		= "0.2";
 	final static String P_SPOOFAXDIR 	= "--i";
-	final static String P_ENTRYPOINT 	= "--entry";
 	final static String P_JSSGLRJSFILE 	= "--jssglr";
 	final static String P_STR2JSDIR 	= "--s2js";
 	final static String P_STRLIB		= "--strlib";
@@ -23,7 +22,8 @@
 	final static String P_WWWOUTPUT		= "--wwwout";
 	final static String P_TESTSRC		= "--testsrc";
 	
-	final static String[] reqParams = {P_SPOOFAXDIR, P_ENTRYPOINT, P_JSSGLRJSFILE, P_STR2JSDIR, P_STRLIB, P_STRCTREE, P_WWWOUTPUT, P_TESTSRC};
+	final static String[] reqParams = {P_SPOOFAXDIR, P_JSSGLRJSFILE, P_STR2JSDIR, P_STRLIB, P_STRCTREE, P_WWWOUTPUT};
+	final static String[] optParams = {P_TESTSRC};	
 	
 	public static void main(String[] args) throws Exception {
 		HashMap<String, String> params = new HashMap<String, String>();
@@ -38,7 +38,7 @@
 		
 		for (String p : reqParams)
 		{
-			if (!params.containsKey(p))
+			if (!params.containsKey(p) || params.get(p).equals(""))
 			{
 				showArgs();
 				System.err.println("");
@@ -49,7 +49,6 @@
 		
 		new S2AGenerator(
 				params.get(P_SPOOFAXDIR),
-				params.get(P_ENTRYPOINT),
 				params.get(P_JSSGLRJSFILE),
 				params.get(P_STR2JSDIR),
 				params.get(P_STRLIB),
@@ -57,7 +56,6 @@
 				params.get(P_WWWOUTPUT),
 				params.get(P_TESTSRC)
 				).Go();
-
 	}
 	
 	private static void showArgs()
@@ -68,12 +66,13 @@
 		System.err.println("");
 		System.err.println("Required:");
 		System.err.println("\t"+P_SPOOFAXDIR+" <dir>\t\tSpoofax project root");
-		System.err.println("\t"+P_ENTRYPOINT+" <strfile>\tEntry point for semantic checking (stratego file with the *main strategy)");
 		System.err.println("\t"+P_JSSGLRJSFILE+" <jsfile>\tPath to jssglr file");
 		System.err.println("\t"+P_STR2JSDIR+" <dir>\t\tPath to str2js");
 		System.err.println("\t"+P_STRLIB+" <dir>\t\tPath to Stratego lib");
-		System.err.println("\t"+P_STRCTREE+" <dir>\tPath to Stratefo ctrees");
+		System.err.println("\t"+P_STRCTREE+" <dir>\tPath to Stratego ctrees");
 		System.err.println("\t"+P_WWWOUTPUT+" <dir>\t\tTarget www root");
-		System.err.println("\t"+P_TESTSRC+" <file>\tFull path to a source file from the tatget language");
+		System.err.println("");
+		System.err.println("Optional:");
+		System.err.println("\t"+P_TESTSRC+" <file>\tFull path to a source file from the target language");
 	}
 }

Added: spoofax-ace/src/spoofax/ace/exceptions/S2ASpoofaxSetupException.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-ace/src/spoofax/ace/exceptions/S2ASpoofaxSetupException.java	Tue Feb  7 16:01:53 2012	(r24237)
@@ -0,0 +1,3 @@
+package spoofax.ace.exceptions;
+
+public class S2ASpoofaxSetupException extends Exception { private static final long serialVersionUID = 1L; }
\ No newline at end of file

Added: spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java	Tue Feb  7 16:01:53 2012	(r24237)
@@ -0,0 +1,40 @@
+package spoofax.ace.generator;
+
+import java.io.BufferedWriter;
+import java.io.FileWriter;
+import java.io.IOException;
+
+import spoofax.ace.exceptions.S2ASpoofaxSetupException;
+import spoofax.ace.spoofaxinfo.S2AEsvParser;
+
+public class S2AEntryPoint {
+	/*
+	 * Generates a stratego file which calls the original editor-analyze
+	 * Strategy results in a ace parseable JS object
+	 */
+	public static void GenerateS2AEntry(String entryFile, S2AEsvParser esvParser) throws S2ASpoofaxSetupException
+	{
+		try
+		{
+			String strategoMain =
+			"module spoofax2ace\n" +
+			"imports\n" + 
+	        "libstratego-lib\n" +
+	        esvParser.GetCtreeName() + "\n" +
+	        "  rules\n" +
+	        "    main: [sourcecode,x] -> <prim(\"JSSGLR_ACE_TOKENIZE\", parser)>(ast, [errors, warnings, notes])\n" + 
+	        "      where table := <import-term("+esvParser.GetTableName()+")>\n" +
+	        "      where parser := <prim(\"JSSGLR_GET_PARSER\")>table\n" +
+	        "      where ast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode\n" +
+	        "      where (ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(ast, \"\", \"\")\n";
+			FileWriter fstream = new FileWriter(entryFile);
+			BufferedWriter out = new BufferedWriter(fstream);
+			out.write(strategoMain);
+			out.close();
+		} catch (IOException e)
+		{
+			System.err.println("###CRITICAL ERROR### " + e.getMessage());
+			throw new S2ASpoofaxSetupException();			
+		}
+	}
+}

Modified: spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Tue Feb  7 15:57:27 2012	(r24236)
+++ spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Tue Feb  7 16:01:53 2012	(r24237)
@@ -1,25 +1,29 @@
 package spoofax.ace.generator;
 
 import java.io.BufferedReader;
+import java.io.BufferedWriter;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
 import java.io.FileReader;
+import java.io.FileWriter;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.PrintStream;
 import java.security.Permission;
+import org.strategoxt.strj.strj;
 import s2js.s2js; //make sure cp contains strategoxt.jar
 import spoofax.ace.exceptions.S2ACompilerException;
+import spoofax.ace.exceptions.S2ASpoofaxSetupException;
 import spoofax.ace.exceptions.S2AValidatorException;
 import spoofax.ace.exceptions.S2AWrapperException;
+import spoofax.ace.spoofaxinfo.S2AEsvParser;
+import spoofax.ace.spoofaxinfo.S2ASpoofaxInfo;
+import spoofax.ace.utils.S2AUtils;
 import spoofax.ace.validator.S2AValidator;
 
-
 public class S2AGenerator {
-	
 	private final String _spoofaxProjDir;
-	private final String _strategoEntry;
 	private final String _jssglr;
 	private final String _str2jsPath;
 	
@@ -29,10 +33,9 @@
 	private final String _wwwoutput;
 	private final String _mainSrcFile;
 
-	public S2AGenerator(String spoofaxProjdir, String strategoEntry, String jssglr, String str2jsPath, String strategoLib, String strategoCtrees, String wwwoutput, String mainSrcFile)
+	public S2AGenerator(String spoofaxProjdir, String jssglr, String str2jsPath, String strategoLib, String strategoCtrees, String wwwoutput, String mainSrcFile)
 	{
 		_spoofaxProjDir = spoofaxProjdir;
-		_strategoEntry = strategoEntry;
 		_jssglr = jssglr;
 		_str2jsPath = str2jsPath;
 		_strategoLib = strategoLib;
@@ -41,16 +44,20 @@
 		_mainSrcFile = mainSrcFile;
 	}
 	
-	public boolean Go() throws S2AWrapperException, S2ACompilerException, S2AValidatorException
+	public boolean Go() throws S2ASpoofaxSetupException, S2AWrapperException, S2ACompilerException, S2AValidatorException, IOException
 	{
-		Validate();
-		final String tmpDir = "out/";
+		final String tmpDir = "/tmp/s2a/";
 		final String jsbin = tmpDir+"/jsbin.js";
 		final String wrappedJsBin =  tmpDir+"/jsbin.wrapped.js";
 		final String aceWorkerBin = tmpDir+"/aceworker.js";
-		
+		final String strategoEntry = tmpDir + "spoofax2ace.str";
+		final String esvFile = S2ASpoofaxInfo.GetEsvSettings(_spoofaxProjDir);
+		final S2AEsvParser esv = new S2AEsvParser(esvFile);
 		new File(tmpDir.substring(0,tmpDir.lastIndexOf(File.separator))).mkdirs();
-		CompileStratego(jsbin);
+		
+		CacheRequiredFiles(tmpDir, esv);
+		S2AEntryPoint.GenerateS2AEntry(strategoEntry, esv);
+		CompileStratego(tmpDir, strategoEntry, jsbin);
 		WrapStratego(jsbin, wrappedJsBin);
 		WrapAceWorker(wrappedJsBin, aceWorkerBin);
 		BuildAceBackend(aceWorkerBin, _wwwoutput);
@@ -60,12 +67,28 @@
 	}
 	
 	
-	private void Validate() throws S2AValidatorException
-	{ 
-		S2AValidator.ValidateS2AEntryPoint(_spoofaxProjDir + _strategoEntry);
-			 
+	/*
+	 * Copies the required files (ctree, tbl) to @cacheDir. 
+	 */
+	private void CacheRequiredFiles(String cacheDir, S2AEsvParser esv) throws S2ASpoofaxSetupException
+	{
+		try 
+		{
+			if (S2AUtils.FilesToDest(_spoofaxProjDir + "/include", cacheDir, ".tbl") == 0)
+				throw new Exception("No table files present in include folder");
+		    if (S2AUtils.FilesToDest(_spoofaxProjDir + "/include", cacheDir, ".ctree") == 0)
+		    	throw new Exception("No ctree files present in include folder");
+		} catch (Exception e)
+		{
+			System.err.println("###CRITICAL ERROR### " + e.getMessage());
+			throw new S2ASpoofaxSetupException();
+		}
 	}
 	
+	/*
+	 * Places the required files for an ACE editor in the www output directory.  
+	 */
+
 	private void BuildAceBackend(String wrappedAceWorker, String wwwroot) throws S2AWrapperException
 	{
 		System.err.println("Building ace editor backend...");
@@ -73,20 +96,23 @@
 			new File(wwwroot).delete();
 			new File(wwwroot).mkdirs();
 			new File(wwwroot+"/src").mkdirs();
-			WriteResourceToFile("/ace/require.js", wwwroot+"/require.js");
-			WriteResourceToFile("/ace/static.py", wwwroot+"/static.py");
-			WriteResourceToFile("/ace/src/ace-uncompressed.js", wwwroot+"/src/ace-uncompressed.js");
-			WriteResourceToFile("/ace/src/mode-spoofax2ace.js", wwwroot+"/src/mode-spoofax2ace.js");
-			WriteResourceToFile("/ace/src/theme-dawn.js", wwwroot+"/src/theme-dawn.js");
-			WriteFileToFile(wrappedAceWorker, wwwroot+"/src/worker-spoofax2ace.js");
+			S2AUtils.WriteResourceToFile(getClass(), "/ace/require.js", wwwroot+"/require.js");
+			S2AUtils.WriteResourceToFile(getClass(), "/ace/static.py", wwwroot+"/static.py");
+			S2AUtils.WriteResourceToFile(getClass(), "/ace/src/ace-uncompressed.js", wwwroot+"/src/ace-uncompressed.js");
+			S2AUtils.WriteResourceToFile(getClass(), "/ace/src/mode-spoofax2ace.js", wwwroot+"/src/mode-spoofax2ace.js");
+			S2AUtils.WriteResourceToFile(getClass(), "/ace/src/theme-dawn.js", wwwroot+"/src/theme-dawn.js");
+			S2AUtils.WriteFileToFile(wrappedAceWorker, wwwroot+"/src/worker-spoofax2ace.js");
 			new File(wwwroot+"/static.py").setExecutable(true, false);
 		} catch (IOException e) {
 			System.err.println("###CRITICAL ERROR### " + e.getMessage());
 			throw new S2AWrapperException();
 		}		
-
 	}
 	
+	/*
+	 *  Builds the ACE frontent. (html file) with an example program from testSrcPath  
+	 */
+	
 	private void BuildAceFrontEnd(String wwwroot, String testSrcPath) throws S2AWrapperException
 	{
 		System.err.println("Building ace editor based on " + testSrcPath);
@@ -94,9 +120,10 @@
 		try
 		{
 			editorFrontend = new FileOutputStream(wwwroot+"/editor.html", true);
-			WriteResourceToStream("/html/editor_prepend.html", editorFrontend);	
-			WriteFileToStream(testSrcPath, editorFrontend);
-			WriteResourceToStream("/html/editor_append.html", editorFrontend);
+			S2AUtils.WriteResourceToStream(getClass(), "/html/editor_prepend.html", editorFrontend);	
+			if (new File(testSrcPath).exists())
+				S2AUtils.WriteFileToStream(testSrcPath, editorFrontend);
+			S2AUtils.WriteResourceToStream(getClass(), "/html/editor_append.html", editorFrontend);
 			editorFrontend.flush();
 			editorFrontend.close();
 		}  catch (IOException e) {
@@ -105,14 +132,18 @@
 		}	
 	}
 	
+	/*
+	 * Turns the stratego program into an ace-worker  
+	 */
+	
 	private void WrapAceWorker(String wrappedStrprog, String wrappedAceWorker) throws S2AWrapperException
 	{
 		FileOutputStream wrappedAceWorkerStrm;
 		try {
 			wrappedAceWorkerStrm = new FileOutputStream(wrappedAceWorker, true);
-			WriteResourceToStream("/javascript/aceworker/worker-spoofax2ace-prepend.js", wrappedAceWorkerStrm);
-			WriteFileToStream(wrappedStrprog, wrappedAceWorkerStrm);
-			WriteResourceToStream("/javascript/aceworker/worker-spoofax2ace-append.js", wrappedAceWorkerStrm);
+			S2AUtils.WriteResourceToStream(getClass(), "/javascript/aceworker/worker-spoofax2ace-prepend.js", wrappedAceWorkerStrm);
+			S2AUtils.WriteFileToStream(wrappedStrprog, wrappedAceWorkerStrm);
+			S2AUtils.WriteResourceToStream(getClass(), "/javascript/aceworker/worker-spoofax2ace-append.js", wrappedAceWorkerStrm);
 			wrappedAceWorkerStrm.flush();
 			wrappedAceWorkerStrm.close();
 		} catch (IOException e) {
@@ -121,99 +152,48 @@
 		}		
 	}
 	
+	/*
+	 * Wraps the generated stratego program with dependencies from the stratego-javascript-backend.
+	 * Also adds an jssglr parser implementation.   
+	 */
+	
 	
 	private void WrapStratego(String strProg, String wrappedJs) throws S2AWrapperException
 	{
 		FileOutputStream wrappedStrProg;
 		try {
 			wrappedStrProg = new FileOutputStream(wrappedJs, true);
-			WriteFileToStream(_str2jsPath + "/src/javascript/strategojs.js", wrappedStrProg);
-			WriteFileToStream(_str2jsPath + "/src/javascript/terms.js", wrappedStrProg);
-			WriteFileToStream(_str2jsPath + "/src/javascript/srts.js", wrappedStrProg);
-			WriteFileToStream(_str2jsPath + "/src/javascript/ssl.js", wrappedStrProg);
-			WriteFileToStream(_str2jsPath + "/src/javascript/jssglr/jssglr_prepend.js", wrappedStrProg);
-			WriteFileToStream(_jssglr, wrappedStrProg);
-			WriteFileToStream(_str2jsPath + "/src/javascript/jssglr/jssglr_append.js", wrappedStrProg);
-			WriteFileToStream(strProg, wrappedStrProg);
-			WriteFileToStream(_str2jsPath + "/src/javascript/ace-wrapper-end.js", wrappedStrProg);
+			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/strategojs.js", wrappedStrProg);
+			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/terms.js", wrappedStrProg);
+			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/srts.js", wrappedStrProg);
+			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/ssl.js", wrappedStrProg);
+			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/jssglr/jssglr_prepend.js", wrappedStrProg);
+			S2AUtils.WriteFileToStream(_jssglr, wrappedStrProg);
+			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/jssglr/jssglr_append.js", wrappedStrProg);
+			S2AUtils.WriteFileToStream(strProg, wrappedStrProg);
+			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/ace-wrapper-end.js", wrappedStrProg);
+			//WriteFileToStream(_str2jsPath + "/src/javascript/cli-wrapper.js", wrappedStrProg);
 			wrappedStrProg.flush();
 		} catch (IOException e) {
 			System.err.println("###CRITICAL ERROR### " + e.getMessage());
 			throw new S2AWrapperException();
 		}
-	}
+	}	
 	
-	private void WriteFileToFile(String filesrc, String filedest) throws IOException
-	{
-		System.err.println("Copying to file: " + filedest);
-		FileOutputStream dst = new FileOutputStream(filedest, true);
-		InputStream src =new FileInputStream(filesrc);
-		int b;
-		while ((b = src.read()) != -1)
-			dst.write(b);
-		dst.flush();
-		dst.close();
-	}
-	
-	private void WriteResourceToFile(String resource, String filename) throws IOException
-	{
-		System.err.println("Writing file: " + resource);
-		FileOutputStream fo = new FileOutputStream(filename, true);
-		InputStream br = getClass().getResourceAsStream(resource);
-		int b;
-		while ((b = br.read()) != -1)
-			fo.write(b);
-		fo.flush();
-		fo.close();
-	}
-	
-	
-	private FileOutputStream WriteResourceToStream(String resource, FileOutputStream stream) throws IOException
-	{
-		System.err.println("Merging with: " + resource);
-		InputStream br = getClass().getResourceAsStream(resource);
-		int b;
-		while ((b = br.read()) != -1)
-			stream.write(b);
-		return stream;
-	}
+	/*
+	 * Actually compiles the stratego associated with the project's semantic check. 
+	 * Expects the file at @strategoProg to contain a `main` strategy    
+	 */
 	
-	private FileOutputStream WriteFileToStream(String file, FileOutputStream stream) throws IOException
-	{
-		System.err.println("Merging with: " + file);
-		BufferedReader br = null;
-		br = new BufferedReader(new FileReader(file));
-		int b;
-		while ((b = br.read()) != -1)
-			stream.write(b);
-		return stream;
-	}
-	
-	
-	
-	private void CompileStratego(String jsOutput) throws S2ACompilerException
+
+	private void CompileStratego(String tmpDir, String strategoProg, String jsOutput) throws S2ACompilerException
 	{
 		System.err.println("Compiling the stratego program...");
 		String arg =
-		"-O 0 " +
-		"-I . " +
+        "-i " + strategoProg + " " +
+        "-I " + _spoofaxProjDir + " " +
 		"-I " + _strategoLib + " " +
 		"-I " + _strategoCtrees + " " +
-		//"-I /home/richard/.nix-profile/share/sdf/stratego-front " +
-		//"-I /home/richard/.nix-profile/share/sdf/stratego-regular " +
-		"-I " + _spoofaxProjDir + " " +
-		"-i " + _spoofaxProjDir + _strategoEntry + " " +
-		
-		//TODO: Automatically add (all?) subdirs in the spoofax proj as include dir
-		"-I " + _spoofaxProjDir + "/include/ " +
-		"-I " + _spoofaxProjDir + "/lib/ " +
-		"-I " + _spoofaxProjDir + "/trans/ " +
-		"-I " + _spoofaxProjDir + "/trans/generation/ " +
-		"-I " + _spoofaxProjDir + "/trans/editor/ " +
-		"-I " + _spoofaxProjDir + "/trans/names/ " +
-		"-I " + _spoofaxProjDir + "/trans/normal/ " +
-		"-I " + _spoofaxProjDir + "/trans/types/ " +
-		
 		"";
 		
 		PrintStream buOut = System.out;
@@ -223,7 +203,7 @@
 		try
 		{
 			outp = new PrintStream(jsOutput);
-			errp = new PrintStream("out/compiler.log");
+			errp = new PrintStream(tmpDir+"/compiler.log");
 		} catch (Exception e)
 		{
 			System.err.println("###CRITICAL ERROR### " + e.getMessage());
@@ -232,7 +212,7 @@
 		
 		//Capture the dump of the js file into the jsOutput file and set err printstream to a buffer to avoid console spamming
 		System.setOut(outp);
-		//System.setErr(errp);
+		System.setErr(errp);
 		
 		//Catch the System.exit call from s2j; We're not done after the compiler has finished.
 		System.setSecurityManager(securityManager);
@@ -250,7 +230,7 @@
 		//Check whether a js file was created
 		if (new File(jsOutput).length() == 0L)
 		{
-			System.err.println("###CRITICAL ERROR### " + "Empty or no output file found.");
+			System.err.println("###CRITICAL ERROR### " + "Empty or no output file found.\n\nSee "+tmpDir+"compiler.log for details.");
 			throw new S2ACompilerException();
 		}
 		System.err.println("Finished compiling the stratego program.");

Added: spoofax-ace/src/spoofax/ace/spoofaxinfo/S2AEsvParser.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-ace/src/spoofax/ace/spoofaxinfo/S2AEsvParser.java	Tue Feb  7 16:01:53 2012	(r24237)
@@ -0,0 +1,81 @@
+package spoofax.ace.spoofaxinfo;
+
+import java.io.File;
+import java.io.IOException;
+import java.util.LinkedList;
+import java.util.List;
+
+import org.spoofax.interpreter.terms.IStrategoAppl;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.terms.TermFactory;
+import org.spoofax.terms.io.binary.TermReader;
+
+
+/*
+ * Class retrieves some key information from a Spoofax project settings pack. 
+ */
+
+public class S2AEsvParser {
+	private final String _esvFile;
+	private final TermReader _termReader;
+	private final IStrategoTerm _rootTerm;
+	
+	public S2AEsvParser(String esvFile) throws IOException
+	{
+		_esvFile = esvFile;
+		_termReader = new TermReader(new TermFactory());
+		_rootTerm = _termReader.parseFromFile(_esvFile);
+	}
+	
+	public String GetTableName()
+	{
+		List<IStrategoTerm> result = new LinkedList<IStrategoTerm>();
+		result = FindApplMatches(_rootTerm, "Table", result);
+		return result.get(0).getSubterm(0).toString().replaceAll("\"", "");
+	}
+	
+	public String GetCtreeName()
+	{
+		String fn = new File(GetSemanticProviderCtree()).getName();
+		int index = fn.lastIndexOf('.');
+		return fn.substring(0, index);
+	}
+	
+	public String GetSemanticProviderCtree()
+	{
+		List<IStrategoTerm> result = new LinkedList<IStrategoTerm>();
+		result = FindApplMatches(_rootTerm, "SemanticProvider", result);
+		return result.get(0).getSubterm(0).toString();
+	}
+	
+	public String GetSemanticObserverStrategy()
+	{
+		List<IStrategoTerm> result = new LinkedList<IStrategoTerm>();
+		result = FindApplMatches(_rootTerm, "SemanticObserver", result);
+		return result.get(0).getSubterm(0).getSubterm(0).toString().replaceAll("\"", "");
+	}
+
+	public String GetSemanticHoverRuleStrategy()
+	{
+		List<IStrategoTerm> result = new LinkedList<IStrategoTerm>();
+		result = FindApplMatches(_rootTerm, "HoverRule", result);
+		return result.get(0).getSubterm(1).getSubterm(0).toString().replaceAll("\"", "");
+	}
+	
+	public String GetCompletionStrategy()
+	{
+		List<IStrategoTerm> result = new LinkedList<IStrategoTerm>();
+		result = FindApplMatches(_rootTerm, "CompletionProposer", result);
+		return result.get(0).getSubterm(0).getSubterm(0).toString().replaceAll("\"", "");
+	}
+		
+	private List<IStrategoTerm> FindApplMatches(IStrategoTerm visitable, String applName, List<IStrategoTerm> results)
+	{
+		if (visitable.getTermType() == IStrategoTerm.APPL)
+			if (((IStrategoAppl) visitable).getName().equals(applName))
+				results.add((IStrategoTerm)visitable);
+		for (int i = 0; i < visitable.getSubtermCount(); i++)
+			FindApplMatches(visitable.getSubterm(i), applName, results);
+		return results;
+	}
+}

Added: spoofax-ace/src/spoofax/ace/spoofaxinfo/S2ASpoofaxInfo.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-ace/src/spoofax/ace/spoofaxinfo/S2ASpoofaxInfo.java	Tue Feb  7 16:01:53 2012	(r24237)
@@ -0,0 +1,28 @@
+package spoofax.ace.spoofaxinfo;
+
+import java.io.File;
+
+import spoofax.ace.exceptions.S2ASpoofaxSetupException;
+
+public class S2ASpoofaxInfo {
+	
+	/*
+	 * Locates the packed .esv file in a spoofax project 
+	 */
+	public static String GetEsvSettings(String spoofaxProj) throws S2ASpoofaxSetupException
+	{
+		if (!new File(spoofaxProj + "/include").exists())
+		{
+			System.err.println("FATAL Error - Directory " + spoofaxProj + "/include/ does not exist.");
+			throw new S2ASpoofaxSetupException();
+		}
+		File dir = new File(spoofaxProj + "/include");
+		for (String file : dir.list())
+		{
+			if (file.endsWith("packed.esv"))
+				return spoofaxProj + "/include/" +file;
+		}
+		System.err.println("FATAL Error - Could not find a *.packed.esv in " + spoofaxProj + "/include/");
+		throw new S2ASpoofaxSetupException();
+	}
+}

Added: spoofax-ace/src/spoofax/ace/utils/S2AUtils.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-ace/src/spoofax/ace/utils/S2AUtils.java	Tue Feb  7 16:01:53 2012	(r24237)
@@ -0,0 +1,75 @@
+package spoofax.ace.utils;
+
+import java.io.BufferedReader;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.FileReader;
+import java.io.IOException;
+import java.io.InputStream;
+
+public class S2AUtils {
+	
+	public static void WriteFileToFile(String filesrc, String filedest) throws IOException
+	{
+		System.err.println("Copying to file: " + filedest);
+		FileOutputStream dst = new FileOutputStream(filedest, true);
+		InputStream src =new FileInputStream(filesrc);
+		int b;
+		while ((b = src.read()) != -1)
+			dst.write(b);
+		dst.flush();
+		dst.close();
+	}
+	
+	public static void WriteResourceToFile(@SuppressWarnings("rawtypes") Class owner, String resource, String filename) throws IOException
+	{
+		System.err.println("Writing file: " + resource);
+		FileOutputStream fo = new FileOutputStream(filename, true);
+		InputStream br = owner.getResourceAsStream(resource);
+		int b;
+		while ((b = br.read()) != -1)
+			fo.write(b);
+		fo.flush();
+		fo.close();
+	}
+	
+	
+	public static FileOutputStream WriteResourceToStream(@SuppressWarnings("rawtypes") Class owner, String resource, FileOutputStream stream) throws IOException
+	{
+		System.err.println("Merging with: " + resource);
+		InputStream br = owner.getResourceAsStream(resource);
+		int b;
+		while ((b = br.read()) != -1)
+			stream.write(b);
+		return stream;
+	}
+	
+	public static FileOutputStream WriteFileToStream(String file, FileOutputStream stream) throws IOException
+	{
+		System.err.println("Merging with: " + file);
+		BufferedReader br = null;
+		br = new BufferedReader(new FileReader(file));
+		int b;
+		while ((b = br.read()) != -1)
+			stream.write(b);
+		return stream;
+	}
+	
+	public static int FilesToDest(String srcPath, String destPath, String withSuffix) throws IOException
+	{
+		int count = 0;
+		File dir = new File(srcPath);
+		for (String file : dir.list())
+		{
+			if (file.endsWith(withSuffix))
+			{
+				WriteFileToFile(srcPath + "/" +file, destPath + "/" + file);
+				count++;
+			}
+		}
+		return count;
+	}
+	
+	
+}

From richard at vogelij.nl  Tue Feb  7 17:06:40 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Tue, 07 Feb 2012 16:06:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24238 - hydra/jobs
Message-ID: <20120207160640.1ECF97F801B@mx1.tudelft.nl>

Author: rvogelij
Date: Tue Feb  7 16:06:39 2012
New Revision: 24238
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24238&sc=1

Log:
Updated the spoofax-ace nix builder.

Modified:
   hydra/jobs/spoofax-ace.nix

Modified: hydra/jobs/spoofax-ace.nix
==============================================================================
--- hydra/jobs/spoofax-ace.nix	Tue Feb  7 16:01:53 2012	(r24237)
+++ hydra/jobs/spoofax-ace.nix	Tue Feb  7 16:06:39 2012	(r24238)
@@ -4,7 +4,6 @@
 , strategoxtJavaBackend ? { outPath = ../../strc-java ; rev = 1234; } 
 , strategoxtJavaScriptBackend ? ( import ./strategoxt-javascript-backend.nix { } ).build
 , jssglr ? ( import ./org.spoofax.jssglr.nix { } ).build
-
 , hydraConfig ? { outPath = ../.; rev = 1234; }
 }:
 
@@ -16,9 +15,9 @@
   }).build { system = "i686-linux"; };
 
   antvarspoofaxproj 	= "\\\${spoofaxproj}";
-  antvarstrentry 	= "\\\${strentry}";
   antvartestsrc 	= "\\\${testsrc}";
   antvarwwwroot		= "\\\${wwwroot}";
+
 in
 {
  jssglrbuild = pkgs.releaseTools.antBuild {
@@ -27,19 +26,19 @@
 
     antProperties = [
      { name = "s2js"; value =  ''${strategoxtJavaScriptBackend}''; }
-     { name = "jssglr"; value =  ''${jssglr}/bin/jssglr.generated.js''; }
      { name = "strxt"; value =  ''${strcJava}/share/strc-java/strategoxt.jar''; }
      { name = "resourcesDir"; value =''./resources''; }
     ];
+
+    buildInputs = [pkgs.ant strcJava ];
     antTargets = [ "jar" ];
     buildfile = "build.xml";
-    buildInputs = [pkgs.ant];
+
 
     finalPhase = ''
 echo "<project default=\"spoofax2ace\">
   <property file=\"build.properties\" />
-  <property name=\"spoofaxproj\" value=\"\"/>
-  <property name=\"strentry\" value=\"\"/>
+  <property name=\"spoofaxproj\" value=\"./\"/>
   <property name=\"testsrc\" value=\"\"/>
   <property name=\"wwwroot\" value=\"\"/>
 
@@ -48,17 +47,19 @@
       <jvmarg line=\"-Xmx1536m -ss8m -XX:MaxPermSize=256m\"/>
       <classpath>
         <pathelement location=\"lib/java/s2a.jar\"/>
-        <pathelement location=\"${strcJava}/share/strc-java/strategoxt.jar\"/>
-        <pathelement location=\"${strategoxtJavaScriptBackend}/s2js.jar\"/>
+        <pathelement location=\"resources/strategoxt.jar\"/>
+        <pathelement location=\"resources/s2js.jar\"/>
       </classpath>
       <arg value=\"--i\"/>
         <arg value=\"${antvarspoofaxproj}\"/>
-      <arg value=\"--entry\"/>
-        <arg value=\"${antvarstrentry}\"/>
       <arg value=\"--jssglr\"/>
-        <arg value=\"${jssglr}/bin/jssglr.generated.js\"/>
+        <arg value=\"resources/jssglr.generated.js\"/>
+      <arg value=\"--strlib\"/>
+        <arg value=\"${pkgs.strategoPackages.strategoxt}/share/stratego-lib\"/>
+      <arg value=\"--strctrees\"/>
+        <arg value=\"${pkgs.strategoPackages.strategoxt}/share\"/>
       <arg value=\"--s2js\"/>
-        <arg value=\"${strategoxtJavaScriptBackend}\"/>
+        <arg value=\"$out/resources/\"/>
       <arg value=\"--wwwout\"/>
         <arg value=\"${antvarwwwroot}\"/>
       <arg value=\"--testsrc\"/>
@@ -67,10 +68,17 @@
   </target>
 </project>" >> $out/build.xml
 
-echo "spoofaxproj=/path/to/spoofaxproject
-strentry=/relative/path/to/stratego/entry/point.str
+echo "spoofaxproj=
 testsrc=/path/to/sourcefile/to/embed.src
 wwwroot=/path/to/www/output/" >> $out/build.properties
-    '';
+
+mkdir $out/resources/
+cp ${strategoxtJavaScriptBackend}/s2js.jar $out/resources/
+cp -R ${strategoxtJavaScriptBackend}/src $out/resources/
+cp ${jssglr}/bin/jssglr.generated.js $out/resources/
+cp ${strcJava}/share/strc-java/strategoxt.jar $out/resources/
+'';
+
+
  };
 }

From L.C.L.Kats at tudelft.nl  Tue Feb  7 18:07:06 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 07 Feb 2012 17:07:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24239 -
	spoofax-imp/trunk/experimental/NamingExperiment/test
Message-ID: <20120207170706.9F9C52B801B@mx2.tudelft.nl>

Author: LennartKats
Date: Tue Feb  7 17:07:06 2012
New Revision: 24239
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24239&sc=1

Log:
fixed time stamp tests: API was changed to no longer return time stamp files :)

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/test/test-timestamps.spt
   spoofax-imp/trunk/experimental/NamingExperiment/test/test1.spt

Modified: spoofax-imp/trunk/experimental/NamingExperiment/test/test-timestamps.spt
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/test/test-timestamps.spt	Tue Feb  7 16:06:39 2012	(r24238)
+++ spoofax-imp/trunk/experimental/NamingExperiment/test/test-timestamps.spt	Tue Feb  7 17:07:06 2012	(r24239)
@@ -5,11 +5,11 @@
 test No changes after update
   prim("LANG_index_setup", "NamingExperiment", ["/tmp/test-timestamps"]);
   
-  <index-add-all(|"/foo")> [Def([Def(), "newdef"])];
+  <index-add-all(|"/foo")> [Def([Def(), "spanish enquisition"])];
   with(<call> ("sleep", ["1"]) | "System must provide sleep command");
   
   index-timestamp-set-updated(|"ServiceA");
-  index-timestamp-get-updates(|"ServiceA") => [_] // expect only timestamp
+  index-timestamp-get-updates(|"ServiceA") => [] // don't expect spanish enquisition
 
 test Changes after add
   prim("LANG_index_setup", "NamingExperiment", ["/tmp/test-timestamps"]);
@@ -18,4 +18,4 @@
   
   index-timestamp-set-updated(|"ServiceA");
   <index-add-all(|"/foo")> [Def([Def(), "newdef"])];
-  index-timestamp-get-updates(|"ServiceA") => [_, _] // expect timestamp + file
\ No newline at end of file
+  index-timestamp-get-updates(|"ServiceA") => [_] // expect newdef
\ No newline at end of file

Modified: spoofax-imp/trunk/experimental/NamingExperiment/test/test1.spt
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/test/test1.spt	Tue Feb  7 16:06:39 2012	(r24238)
+++ spoofax-imp/trunk/experimental/NamingExperiment/test/test1.spt	Tue Feb  7 17:07:06 2012	(r24239)
@@ -81,7 +81,7 @@
   entity B {
     y : A
     f(a : A) {
-      var v : A = a.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.x
+      var v : A = a.x.y/*.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y*/.x.x
     }
   }
 ]] 1 error

From karltk at strategoxt.org  Tue Feb  7 18:19:57 2012
From: karltk at strategoxt.org (Karl Trygve Kalleberg)
Date: Tue, 07 Feb 2012 17:19:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24240 - hydra/jobs
Message-ID: <20120207171957.6AD4E7F8044@mx1.tudelft.nl>

Author: karltk
Date: Tue Feb  7 17:19:57 2012
New Revision: 24240
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24240&sc=1

Log:
Fixed bad casing of webworkerBuild variable.

Modified:
   hydra/jobs/org.spoofax.jssglr.nix

Modified: hydra/jobs/org.spoofax.jssglr.nix
==============================================================================
--- hydra/jobs/org.spoofax.jssglr.nix	Tue Feb  7 17:07:06 2012	(r24239)
+++ hydra/jobs/org.spoofax.jssglr.nix	Tue Feb  7 17:19:57 2012	(r24240)
@@ -3,7 +3,7 @@
 , spoofaxJsglr ? { outPath = ../../org.spoofax.jsglr ; rev = 1234; }
 , spoofaxTerms ? { outPath = ../../org.spoofax.terms ; }
 , spoofaxJssglr ? { outPath = ../../org.spoofax.jssglr ;  }
-, webworkerbuild ? ( import ./webworker.nix { } ).build
+, webworkerBuild ? ( import ./webworker.nix { } ).build
 }: 
 
 let 
@@ -34,7 +34,7 @@
      { name = "org.spoofax.terms.src.dir"; value =  ''${spoofaxTerms}/src''; }
 
      { name = "gwt.jars"; value = gwtcompiler; }
-     { name = "gwtworker"; value = ''${webworkerbuild}/lib/java/webworker.jar'' ; }
+     { name = "gwtworker"; value = ''${webworkerBuild}/lib/java/webworker.jar'' ; }
     ];
     antTargets = [ "jssglr_gwt_c" ];
     buildfile = "build.xml";

From tobivollebregt at gmail.com  Tue Feb  7 19:04:40 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 18:04:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24241 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: . editor
Message-ID: <20120207180440.110E42B800D@mx2.tudelft.nl>

Author: tvo
Date: Tue Feb  7 18:04:39 2012
New Revision: 24241
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24241&sc=1

Log:
TemplateLang: jar instead of ctree

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 17:19:57 2012	(r24240)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 18:04:39 2012	(r24241)
@@ -24,7 +24,7 @@
 	    -I &quot;${trans}/private/&quot;
 	    -I &quot;${trans}/public/&quot;
 	    -I &quot;${basedir}&quot;
-	    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm" />
+	    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -la stratego-sdf" />
 
 	<!-- Optional: external .def and .jar locations
 	<property name="externaldef" location="syntax/${sdfmodule}.def"/>
@@ -41,7 +41,7 @@
 	<import file="build.generated.xml" />
 
 	<!-- Main target -->
-	<target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,pppack-esv,spoofaximp.default.ctree" />
+	<target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,pppack-esv,spoofaximp.default.jar" />
 
 	<!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
 	<available file="include/Stratego-Sdf2.tbl" property="stratego-sdf2.available" />

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Tue Feb  7 17:19:57 2012	(r24240)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Tue Feb  7 18:04:39 2012	(r24241)
@@ -10,7 +10,7 @@
 
 builders
 
-  provider : include/private/templatelang.ctree
+  provider : include/private/templatelang.jar
   // provider : include/templatelang-java.jar
 
   observer : editor-analyze

From tobivollebregt at gmail.com  Tue Feb  7 19:04:55 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 18:04:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24242 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: .
	.settings trans trans/private trans/private/utils
	trans/public/templatelang trans/public/templatelang/u...
Message-ID: <20120207180455.2B6152B8013@mx2.tudelft.nl>

Author: tvo
Date: Tue Feb  7 18:04:54 2012
New Revision: 24242
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24242&sc=1

Log:
TemplateLang: revert public/private split, not really compatible with build files

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/expand.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.meta
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.meta
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-sdf.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.meta
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-string.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-string.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/attributes.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/misc.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/stubs.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/tokenize.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/tokenize.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/contract.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/contract.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/parse-str.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/parse-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/pp-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/pp-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str
      - copied, changed from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/sdf.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/.settings/org.strategoxt.imp.editors.stratego.prefs
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/contract.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/parse-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/pp-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/pp-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/expand.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-sdf.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-string.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/attributes.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/misc.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/stubs.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/tokenize.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 18:04:39 2012	(r24241)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 18:04:54 2012	(r24242)
@@ -6,7 +6,7 @@
 	<property name="sdfmodule" value="TemplateLang" />
 	<property name="metasdfmodule" value="Stratego-TemplateLang" />
 	<property name="esvmodule" value="TemplateLang" />
-	<property name="strmodule" value="private/templatelang" />
+	<property name="strmodule" value="templatelang" />
 
 	<!-- Project directories -->
 	<property name="trans" location="trans" />
@@ -21,8 +21,6 @@
 	<property name="build.sdf.imports" value="-Idef ${lib}/SDF.def" />
 	<property name="build.stratego.args" value="
 	    --library
-	    -I &quot;${trans}/private/&quot;
-	    -I &quot;${trans}/public/&quot;
 	    -I &quot;${basedir}&quot;
 	    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -la stratego-sdf" />
 

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/analyze.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/templatelang.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/analyze.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/desugar.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/expand.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.meta (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.meta)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-esv.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.meta (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-sdf.meta)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-sdf.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.meta (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.meta)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-str.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-string.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/to-string.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/attributes.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/misc.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/misc.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/stubs.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/tokenize.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/public/templatelang/utils/tokenize.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/contract.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/contract.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/parse-str.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/parse-str.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/pp-esv.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/pp-sdf.str)
==============================================================================

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str (from r24241, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/private/utils/sdf.str)
==============================================================================

From tobivollebregt at gmail.com  Tue Feb  7 19:04:59 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 18:04:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24243 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template
Message-ID: <20120207180459.E1BE12B8013@mx2.tudelft.nl>

Author: tvo
Date: Tue Feb  7 18:04:59 2012
New Revision: 24243
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24243&sc=1

Log:
TemplateLang: build Java strategies in o.s.i.e.template.generated package

(currently using a hack using edited generated code)

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.modified.xml
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 18:04:54 2012	(r24242)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 18:04:59 2012	(r24243)
@@ -36,7 +36,7 @@
 	</condition>
 	<property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin" />
 
-	<import file="build.generated.xml" />
+	<import file="build.modified.xml" />
 
 	<!-- Main target -->
 	<target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,pppack-esv,spoofaximp.default.jar" />

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.modified.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.modified.xml	Tue Feb  7 18:04:59 2012	(r24243)
@@ -0,0 +1,636 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
+
+        <!-- Initialization -->
+        <available file="${src-gen}/org/strategoxt/imp/editors/template/strategies/Main.java" property="java.jar.enabled"/>
+        <condition property="java.jar.import" value="-la org.strategoxt.imp.editors.template.strategies" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <condition property="java.jar.classpath" value=":${include}/${strmodule}-java.jar" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <available classname="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
+
+        <fail unless="build" message="Please use build.main.xml to build this project or configure the required properties manually"/>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
+
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.convertPath fileSystemPath="${syntax}" property="syntaxdir"/>
+            <eclipse.convertPath fileSystemPath="${lib}" property="libdir"/>
+            <eclipse.refreshLocal resource="${libdir}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${syntaxdir}/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${libdir}/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
+        </target>
+
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>
+        </target>
+
+        <target name="init" if="eclipse.running">
+            <!-- refresh one file/dir in the project to trigger an Ant rebuild with the next build command -->
+            <java classname="org.strategoxt.imp.metatooling.building.AntForceRefreshScheduler" failonerror="false">
+                <arg value="${include}"/>
+            </java>
+        </target>
+
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
+
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+
+        <target name="meta-sdf2table" if="metasdfmodule.available">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
+        </target>
+
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <srcfileset dir="${lib}">
+                    <include name="**/*.def"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper.fallback"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+
+      <target name="sdf2parenthesize.helper.fallback" unless="sdf2parenthesize.available">
+          <echo file="${include}/${sdfmodule}-parenthesize.str" message="module include/${sdfmodule}-parenthesize rules parenthesize-${sdfmodule} = id"/>
+      </target>
+
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-t"/>
+                <arg value="-b"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <fileset dir="${basedir}" id="aster-input-set">
+              <include name="**/*.astr"/>
+            </fileset>
+            <pathconvert pathsep=" " setonempty="false" property="aster-input" refid="aster-input-set"/>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg line="${aster-input}"/>
+            </java>
+        </target>
+
+        <target name="java.jar" if="java.jar.enabled">
+            <jar basedir="${build}" excludes="org/strategoxt/imp/editors/template/generated/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
+
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${include}/${strmodule}.ctree"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+            </antcall>
+        </target>
+
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java"/>
+            </dependset>
+            <available file="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="org/strategoxt/imp/editors/template/generated/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/org/strategoxt/imp/editors/template/generated">
+                <fileset dir="${src-gen}/org/strategoxt/imp/editors/template/generated" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="org/strategoxt/imp/editors/template/generated/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="org/strategoxt/imp/editors/template/generated/**"/></delete>
+        </target>
+
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="org/strategoxt/imp/editors/template/generated/**"/>
+                <fileset dir="${build}" includes="org/strategoxt/imp/editors/template/generated/**"/>
+            </delete>
+        </target>
+
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="org.strategoxt.imp.editors.template.generated"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/org/strategoxt/imp/editors/template/generated"/>
+        </target>
+
+        <!-- begin: targets used for adding debugging instrumentation to stratego -->
+
+        <!--
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+
+        <!--
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+
+        <!-- value determines which target will be executed.
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
+        -->
+        <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
+            <available file=".debugmode"/>
+        </condition>
+
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+
+        <!-- call stratego.jar unless debug.build.enabled property is set -->
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java"/>
+            </dependset>
+            <available file="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="org/strategoxt/imp/editors/template/generated/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/org/strategoxt/imp/editors/template/generated">
+                <fileset dir="${src-gen}/org/strategoxt/imp/editors/template/generated" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="org/strategoxt/imp/editors/template/generated/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="org/strategoxt/imp/editors/template/generated/**"/></delete>
+        </target>
+
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments -->
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> -->
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="org.strategoxt.imp.editors.template.generated"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/org/strategoxt/imp/editors/template/generated"/>
+        </target>
+
+
+        <!-- end: targets used for adding debugging instrumentation to stratego -->
+
+
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+            <delete file="${include}/${sdfmodule}.def"/>
+            <delete dir="${src-gen}/org/strategoxt/imp/editors/template/generated"/>
+        </target>
+    </project>

From tobivollebregt at gmail.com  Tue Feb  7 19:05:04 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 18:05:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24244 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template
Message-ID: <20120207180504.0E9AFCC322@mx4.tudelft.nl>

Author: tvo
Date: Tue Feb  7 18:05:03 2012
New Revision: 24244
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24244&sc=1

Log:
TemplateLang: generate a libtemplatelang.rtree

(delete tasks appeared to be no-ops?)

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.modified.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.modified.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.modified.xml	Tue Feb  7 18:04:59 2012	(r24243)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.modified.xml	Tue Feb  7 18:05:03 2012	(r24244)
@@ -419,6 +419,7 @@
                 <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
             </antcall>
             <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="org/strategoxt/imp/editors/template/generated/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <copy file="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.rtree" tofile="${include}/lib${strmodule}.rtree"/>
             <!-- copy imported terms -->
             <copy todir="${build}/org/strategoxt/imp/editors/template/generated">
                 <fileset dir="${src-gen}/org/strategoxt/imp/editors/template/generated" excludes="**/*.java"/>
@@ -436,7 +437,6 @@
         </target>
 
         <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
-            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <java classname="org.strategoxt.strj.Main" failonerror="true">
                 <arg value="-i"/>
                 <arg value="${trans}/${strmodule}.str"/>
@@ -451,7 +451,6 @@
                 <arg line="${externaldefimport}"/>
                 <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
             </java>
-            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/org/strategoxt/imp/editors/template/generated"/>
         </target>
 
@@ -574,7 +573,6 @@
                   <!-- <arg value="-output-rtree"/> -->
             </java>
             <!-- now compile instrumented stratego to java -->
-            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <java classname="org.strategoxt.strj.Main" failonerror="true">
                 <arg value="-i"/>
                 <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
@@ -593,7 +591,6 @@
                 <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
                 <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
             </java>
-            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
             <mkdir dir="${build}/org/strategoxt/imp/editors/template/generated"/>
         </target>
 

From tobivollebregt at gmail.com  Tue Feb  7 19:05:07 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 18:05:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24245 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax: .
	.settings editor trans trans/codegen/esv trans/codegen/sdf
	trans/codegen/str trans/context trans/normalize
Message-ID: <20120207180507.E19BA2B800D@mx2.tudelft.nl>

Author: tvo
Date: Tue Feb  7 18:05:07 2012
New Revision: 24245
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24245&sc=1

Log:
SpoofaxLang: refer to TemplateLang as library

(instead of including str files from other project)

Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/.settings/org.strategoxt.imp.editors.stratego.prefs
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Tue Feb  7 18:05:03 2012	(r24244)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Tue Feb  7 18:05:07 2012	(r24245)
@@ -26,11 +26,17 @@
         <property name="build.stratego.args" value="
                         -I &quot;${trans}&quot;
                         -I &quot;${basedir}&quot;
-        	              -I &quot;${basedir}/../org.strategoxt.imp.editors.template/trans/public&quot;
-        	              -I &quot;${basedir}/../org.strategoxt.imp.editors.template&quot;
                         -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
         	              -la strc -la stratego-sdf"/>
 
+        <property name="externaljar" value="../org.strategoxt.imp.editors.template/include/templatelang.jar"/>
+        <property name="externaljarflags" value="-la org.strategoxt.imp.editors.template.generated"/>
+        <property name="externalrtree" value="../org.strategoxt.imp.editors.template/include/libtemplatelang.rtree"/>
+
+        <target name="copy-rtree">
+            <copy file="${externalrtree}" todir="${include}" preservelastmodified="true"/>
+        </target>
+
         <!-- Optional: external .def and .jar locations
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
         <property name="externaljar" value="../lib.jar"/>
@@ -68,6 +74,7 @@
 	        </dependset>
         	
           	<antcall target="copy-jar"/>
+            <antcall target="copy-rtree"/>
         		<antcall target="spx.stratego.jvm.helper">
 	          	<param name="build.stratego.outputfile" value="${src-gen2}/${strmodule}.java"/>
             	<param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv	Tue Feb  7 18:05:03 2012	(r24244)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv	Tue Feb  7 18:05:07 2012	(r24245)
@@ -12,6 +12,7 @@
 builders
 
   provider                  : include/spoofaxlang.jar
+  provider                  : include/templatelang.jar
 
 	observer                  : editor-analyze
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Tue Feb  7 18:05:03 2012	(r24244)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Tue Feb  7 18:05:07 2012	(r24245)
@@ -1,7 +1,7 @@
 module codegen/esv/to-esv
 imports
 	libstratego-lib
-	libstrc
+	include/libtemplatelang
 imports
   common
   config
@@ -18,8 +18,6 @@
 	context/-
 imports
 	lib/editor-common.generated
-imports
-  templatelang/to-esv
 
 
 signature constructors

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Tue Feb  7 18:05:03 2012	(r24244)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Tue Feb  7 18:05:07 2012	(r24245)
@@ -5,6 +5,7 @@
   libstratego-gpp
   libstratego-sglr
   libstratego-sdf
+  include/libtemplatelang
 imports
 	include/SpoofaxLang
 	lib/editor-common.generated
@@ -27,9 +28,6 @@
 	codegen/main
 	codegen/generate
 	utils/contract
-imports
-  templatelang/desugar
-  templatelang/to-sdf
 
 rules
 
@@ -204,17 +202,6 @@
 
 rules
 
-  list-to-conc-grammars:
-    [g1, g2 | gs] -> conc-grammars(g1, <list-to-conc-grammars> [g2 | gs])
-
-  list-to-conc-grammars:
-    [g1] -> g1
-
-  list-to-conc-grammars:
-    [] -> []
-
-rules
-
 	//pretty printing as sdf imports
 	pp-sdf-import: 
 		Module(q at QName(qnameparts*))-> result

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Tue Feb  7 18:05:03 2012	(r24244)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Tue Feb  7 18:05:07 2012	(r24245)
@@ -1,8 +1,7 @@
 module codegen/str/to-stratego
 imports
-	libstrc
-imports
   libstratego-lib
+  include/libtemplatelang
 	lib/editor-common.generated
 imports
   include/SpoofaxLang
@@ -24,9 +23,6 @@
 	normalize/signatures
 	utils/contract
 	common
-imports
-  templatelang/to-str
-
 
 rules
 	// emit STR definition for the specified SPX module.

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Tue Feb  7 18:05:03 2012	(r24244)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Tue Feb  7 18:05:07 2012	(r24245)
@@ -1,6 +1,8 @@
 module context/declare
 
 imports
+  include/libtemplatelang
+imports
 	context/sdf/declare
 	context/str/-
 	context/esv/declare
@@ -17,8 +19,6 @@
 	config
 	common
 	codegen/main
-imports
-  templatelang/analyze
 
 rules 
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Tue Feb  7 18:05:03 2012	(r24244)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/main.str	Tue Feb  7 18:05:07 2012	(r24245)
@@ -2,7 +2,7 @@
 
 imports
   libstratego-lib
-  libstrc
+  include/libtemplatelang
   lib/editor-common.generated
 imports
 	normalize/stratego
@@ -20,8 +20,6 @@
 	context/-
 	utils/contract
 	context/signatures
-imports
-  templatelang/desugar
 
 rules 
 	 normalize:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Tue Feb  7 18:05:03 2012	(r24244)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Tue Feb  7 18:05:07 2012	(r24245)
@@ -6,7 +6,7 @@
   libstratego-aterm
   libstratego-sglr
   libstratego-sdf
-  libstrc
+  include/libtemplatelang
 imports
   include/SpoofaxLang
   lib/editor-common.generated
@@ -36,7 +36,6 @@
 	 editor/main
 	 codegen/main
 /*
-	unit-tests/templatelang/-
 	unit-tests/utils/-
 	unit-tests/-
 */

From tobivollebregt at gmail.com  Tue Feb  7 19:05:12 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 18:05:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24246 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: .
	trans/templatelang
Message-ID: <20120207180512.59FE5108C004@mx3.tudelft.nl>

Author: tvo
Date: Tue Feb  7 18:05:12 2012
New Revision: 24246
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24246&sc=1

Log:
TemplateLang: split build into 2 jars (library & editor)

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/main.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 18:05:07 2012	(r24245)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 18:05:12 2012	(r24246)
@@ -22,6 +22,7 @@
 	<property name="build.stratego.args" value="
 	    --library
 	    -I &quot;${basedir}&quot;
+	    -I &quot;${trans}&quot;
 	    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -la stratego-sdf" />
 
 	<!-- Optional: external .def and .jar locations
@@ -36,10 +37,11 @@
 	</condition>
 	<property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin" />
 
-	<import file="build.modified.xml" />
+	<import file="build.generated.xml" />
 
 	<!-- Main target -->
-	<target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,pppack-esv,spoofaximp.default.jar" />
+	<target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,pppack-esv,spoofaximp.edited.jar" />
+	<target name="spoofaximp.edited.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,libtemplatelang.stratego.jar,stratego.jar.helper,sdf2imp,refresh"/>
 
 	<!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
 	<available file="include/Stratego-Sdf2.tbl" property="stratego-sdf2.available" />
@@ -97,4 +99,55 @@
 			<arg value="${include}/EditorService-pretty.pp.af"/>
 		</java>
 	</target>
+
+	<!-- Targets to create libtemplatelang.{jar,rtree} -->
+  <!-- Stratego to Java compiler -->
+  <target name="libtemplatelang.stratego.jar" depends="utils-files">
+      <dependset>
+          <srcfileset dir="${basedir}/trans/templatelang">
+              <include name="**/*.str"/>
+          </srcfileset>
+          <targetfileset file="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java"/>
+      </dependset>
+      <available file="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java" property="libtemplatelang.strc-java.available"/>
+      <antcall target="libtemplatelang.stratego.jar.deletehelper"/>
+      <antcall target="libtemplatelang.stratego.jvm.helper">
+          <param name="build.stratego.outputfile" value="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java"/>
+          <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+      </antcall>
+      <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="org/strategoxt/imp/editors/template/generated/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+      <copy file="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.rtree" tofile="${include}/lib${strmodule}.rtree"/>
+      <!-- copy imported terms -->
+      <copy todir="${build}/org/strategoxt/imp/editors/template/generated">
+          <fileset dir="${src-gen}/org/strategoxt/imp/editors/template/generated" excludes="**/*.java"/>
+      </copy>
+      <jar basedir="${build}" includes="org/strategoxt/imp/editors/template/generated/**" destfile="${include}/lib${strmodule}.tmp.jar"/>
+      <move file="${include}/lib${strmodule}.tmp.jar" tofile="${include}/lib${strmodule}.jar"/>
+      <delete><fileset dir="${build}" includes="org/strategoxt/imp/editors/template/generated/**"/></delete>
+  </target>
+
+  <target name="libtemplatelang.stratego.jar.deletehelper" unless="libtemplatelang.strc-java.available">
+      <delete>
+          <fileset dir="${src-gen}" includes="org/strategoxt/imp/editors/template/generated/**"/>
+          <fileset dir="${build}" includes="org/strategoxt/imp/editors/template/generated/**"/>
+      </delete>
+  </target>
+
+  <target name="libtemplatelang.stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+      <java classname="org.strategoxt.strj.Main" failonerror="true">
+          <arg value="-i"/>
+          <arg value="${trans}/templatelang/main.str"/>
+          <arg value="-o"/>
+          <arg value="${build.stratego.outputfile}"/>
+          <arg value="-p"/>
+          <arg value="org.strategoxt.imp.editors.template.generated"/>
+          <arg value="--clean"/>
+          <arg line="${build.stratego.args}"/>
+          <arg line="${build.stratego.extraargs}"/>
+          <arg line="${externaljarflags}"/>
+          <arg line="${externaldefimport}"/>
+          <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+      </java>
+      <mkdir dir="${build}/org/strategoxt/imp/editors/template/generated"/>
+  </target>
 </project>

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/main.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/main.str	Tue Feb  7 18:05:12 2012	(r24246)
@@ -0,0 +1,5 @@
+module templatelang/main
+
+imports
+  templatelang/utils/-
+  templatelang/-

From tobivollebregt at gmail.com  Tue Feb  7 19:05:16 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 18:05:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24247 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax
Message-ID: <20120207180516.1D931108C002@mx3.tudelft.nl>

Author: tvo
Date: Tue Feb  7 18:05:15 2012
New Revision: 24247
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24247&sc=1

Log:
SpoofaxLang: use libtemplatelang

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Tue Feb  7 18:05:12 2012	(r24246)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Tue Feb  7 18:05:15 2012	(r24247)
@@ -29,7 +29,7 @@
                         -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
         	              -la strc -la stratego-sdf"/>
 
-        <property name="externaljar" value="../org.strategoxt.imp.editors.template/include/templatelang.jar"/>
+        <property name="externaljar" value="../org.strategoxt.imp.editors.template/include/libtemplatelang.jar"/>
         <property name="externaljarflags" value="-la org.strategoxt.imp.editors.template.generated"/>
         <property name="externalrtree" value="../org.strategoxt.imp.editors.template/include/libtemplatelang.rtree"/>
 

From tobivollebregt at gmail.com  Tue Feb  7 19:05:20 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 18:05:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24248 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans:
	templatelang/utils utils
Message-ID: <20120207180520.0B09D108C004@mx3.tudelft.nl>

Author: tvo
Date: Tue Feb  7 18:05:19 2012
New Revision: 24248
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24248&sc=1

Log:
TemplateLang: export some misc stuff that shouldn't be duplicated

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-str.str
      - copied, changed from r24247, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/parse-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/pp-esv.str
      - copied, changed from r24247, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/pp-sdf.str
      - copied, changed from r24247, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/sdf.str
      - copied, changed from r24247, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/parse-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-str.str (from r24247, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/parse-str.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/parse-str.str	Tue Feb  7 18:05:15 2012	(r24247, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-str.str	Tue Feb  7 18:05:19 2012	(r24248)
@@ -1,6 +1,6 @@
 /* Copied from org.strategoxt.imp.editors.spoofax/trans/context/str/parse.str */
 
-module utils/parse-str
+module templatelang/utils/parse-str
 
 imports
   libstratego-lib

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/pp-esv.str (from r24247, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-esv.str	Tue Feb  7 18:05:15 2012	(r24247, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/pp-esv.str	Tue Feb  7 18:05:19 2012	(r24248)
@@ -1,6 +1,6 @@
 /* Copied from org.strategoxt.imp.generator/src/sdf2imp/util/pp.str */
 
-module utils/pp-esv
+module templatelang/utils/pp-esv
 
 imports
   libstratego-gpp

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/pp-sdf.str (from r24247, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/pp-sdf.str	Tue Feb  7 18:05:15 2012	(r24247, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/pp-sdf.str	Tue Feb  7 18:05:19 2012	(r24248)
@@ -1,4 +1,4 @@
-module utils/pp-sdf
+module templatelang/utils/pp-sdf
 
 imports
 	libstratego-sdf
@@ -8,8 +8,6 @@
 
 strategies
 
-  // override pp-sdf-string = fail // ensure compiler doesn't blow up
-
   pp-sdf-to-string =
     sdf-desugar;
     parenthesize-Sdf2;

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/sdf.str (from r24247, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/sdf.str	Tue Feb  7 18:05:15 2012	(r24247, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/sdf.str	Tue Feb  7 18:05:19 2012	(r24248)
@@ -1,6 +1,6 @@
 /* Copied from org.strategoxt.imp.spoofax/trans/codegen/sdf/to-sdf.str */
 
-module utils/sdf
+module templatelang/utils/sdf
 
 imports
   libstratego-sglr

From tobivollebregt at gmail.com  Tue Feb  7 19:05:25 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 18:05:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24249 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.spoofax/lib
	org.strategoxt.imp.editors.spoofax/trans
	org.strategoxt.imp.editors.spoofax/trans/analyze/sdf org.stra...
Message-ID: <20120207180525.5BF9D2B8013@mx2.tudelft.nl>

Author: tvo
Date: Tue Feb  7 18:05:25 2012
New Revision: 24249
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24249&sc=1

Log:
SpoofaxLang/TemplateLang: Fix name clashes

Either by removing strategy from SpoofaxLang, or by overriding
the TemplateLang strategy in SpoofaxLang (for strategies that
must be dependency-injected into libtemplatelang).

Moved some lib/sdf and lib/stratego code and parse tables to
templatelang, so that it consistently provides parsing for both.
(Technically only lib/sdf is needed in templatelang.)

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/SDF.tbl
      - copied, changed from r24248, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/SDF.tbl
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-Sugar.tbl
      - copied, changed from r24248, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Sugar.tbl
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-sdf.str
      - copied, changed from r24248, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/parse.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/SDF.tbl
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Sugar.tbl
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/sdf-desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/sdf-parenthesize.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/parse.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/parse.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/attributes.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/symboltable.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -4,11 +4,10 @@
   lib/editor-common.generated
  	common
  	utils/debug
- 	utils/attributes
   context/sdf/-
   context/-
   include/SpoofaxLang
-  utils/attributes
+  include/libtemplatelang
 rules
 	verify-sdf-symbol-declaration-exists =
 		<verify-symbol-exists>( <id>, SDFDeclaration())

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -5,8 +5,8 @@
   context/sdf/declare-signature
   context/sdf/declare
   include/SpoofaxLang
+  include/libtemplatelang
   analyze/sdf/check
-  utils/attributes
   common
 
 rules

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -9,8 +9,6 @@
 imports
 	include/SpoofaxLang
 	lib/editor-common.generated
-  lib/sdf-desugar
-  lib/sdf-parenthesize
 imports
 	context/-
 	context/sdf/declare
@@ -21,7 +19,6 @@
 	common
 	config
 	utils/annotations
-	utils/attributes
 	utils/path
 	utils/debug
 imports
@@ -50,7 +47,7 @@
     	; dbg-compiler(!$[ Codegen | SDF | Found Section + Imports for the following module [<print-as-string> module-untyped-qname]])
     where
       // sdf2conflicts here collects information for the parenthesation in the prettyprinter
-    	sdf-string := <pp-sdf-string'> 'module(
+    	sdf-string := <pp-sdf-to-string> 'module(
     																		<qname-to-path>module-untyped-qname, 
     																		<to-sdf-imports-block>section* , 
     																		<to-sdf-section-block/* TVO-FIXME: ;sdf2conflicts-store-sdf */>section* 
@@ -88,7 +85,7 @@
 			)
  		where
  			sdf-string :=
-				<pp-sdf-string'>
+				<pp-sdf-to-string>
 				'module(
   				unparameterized(main-sdf-module-name)
 					, [imports(<map(pp-sdf-import;!'module(unparameterized(<id>)))>module-qname*)]
@@ -166,16 +163,10 @@
 			end
 		)
 
-rules
-
-	override pp-sdf-string = fail // ensure compiler doesn't blow up
-
-  pp-sdf-string' =
-    sdf-desugar;
-    parenthesize-Sdf2;
-  	sdf-ppfix;
-    ast2box(|[<pp-table-sdf>]);
-    box2text-string(|80)
+overlays
+  // Overlays cannot be imported from a library but still the library overlay
+  // names cannot be reused here.
+  sdf-cons'(x) = term(default(appl(unquoted("cons"), [fun(quoted(x))])))
 
 rules
   // TODO: also support Constructor("Module(<2>, <1>)") => {ast("...")}?
@@ -183,7 +174,7 @@
   //  term(default(fun(quoted(s)))) -> term(default(appl(unquoted("cons"), [fun(quoted(s))])))
 
   desugar-sdf-redux:
-    Constructor(s) -> sdf-cons(s)
+    Constructor(s) -> sdf-cons'(s)
 
   // HACK: remove scope from output
   desugar-sdf-redux:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-signature.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -10,9 +10,9 @@
 	context/-
 	codegen/sdf/to-sdf
 	include/SpoofaxLang
+	include/libtemplatelang
 imports
 	codegen/compile
-	context/str/parse
 	codegen/main
 	codegen/generate
 	context/signatures

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -8,8 +8,7 @@
   libstratego-aterm
   libstrc
   lib/editor-common.generated
-  lib/sdf-desugar
-  lib/sdf-parenthesize
+  include/libtemplatelang
 imports 
 	include/SpoofaxLang
 	normalize/signatures
@@ -26,11 +25,11 @@
 
 rules 
   //several events regarding the current compiler session. 
-  with-spxverify(s) = with-verify( s ,  compile-unload )  
+  override with-spxverify(s) = with-verify( s ,  compile-unload )  
   
   //with-spxverify(s, get-msg) = with-verify( s ,compile-unload<+ fail|msg )
   
-  with-spxverify(s , msg) = with-verify( s , compile-unload ,  msg)
+  override with-spxverify(s , msg) = with-verify( s , compile-unload ,  msg)
 	
 rules 
 	get-project-path = (ProjectPath <+ project-path)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -2,13 +2,12 @@
 
 imports
 	include/SpoofaxLang
+  include/libtemplatelang
 	context/signatures
 	normalize/signatures
 	lib/Configuration/SpoofaxConfiguration
 	lib/editor-common.generated
 imports
-	context/sdf/parse
-	context/str/parse
 	codegen/-
 imports
 	utils/path

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare-signature.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -2,10 +2,10 @@
 
 imports
 	include/SpoofaxLang
+	include/libtemplatelang
 imports
 	common
 	libstrc
-	utils/attributes
 	utils/debug
 	utils/contract
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/declare.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -3,6 +3,7 @@
 	libstratego-sdf
   lib/editor-common.generated
 	include/SpoofaxLang
+	include/libtemplatelang
 imports
 	context/-
 	context/esv/declare
@@ -14,7 +15,6 @@
 	common
 	utils/debug
 	utils/annotations
-	utils/attributes
 	utils/contract
 imports
 	libstratego-sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/symboltable.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/symboltable.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/symboltable.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -1,6 +1,7 @@
 module context/symboltable
 imports 
 	include/SpoofaxLang
+	include/libtemplatelang
 imports 
   common
   utils/contract
@@ -148,7 +149,7 @@
   	typeCtor 
   	-> <resolve-all-symbol-definitions> (<ALL_AS_SET> ,  typeCtor)
      
-  resolve-all-symbol-definitions: 
+  override resolve-all-symbol-definitions: 
   	(scoped-symbol-key , typeCtor) 
   	-> <resolve-all-symbol-definitions( project-from-symboldef-to-symbol | (LookupAllScope() ,<ALL_AS_SET>) ) >(scoped-symbol-key , typeCtor) 
   
@@ -156,7 +157,7 @@
   	(scoped-symbol-key , typeCtor) 
   	-> <resolve-all-symbol-definitions(project-from-symboldef-to-symbol | ( LookupAllScope() ,<ALL_AS_SEQUENCE>)) >(scoped-symbol-key , typeCtor)
   
-  resolve-symbol-definition:
+  override resolve-symbol-definition:
   	(scoped-symbol-key , typeCtor) 
   	-> <resolve-symbol-definition(project-from-symboldef-to-symbol)>(scoped-symbol-key , typeCtor)
 
@@ -296,7 +297,7 @@
   // TODO : refactor index-symbol-definition and index-unique-symbol-definition      
   // It has almost all the common logic . Only diff is the provided argument : 
   // UniqueSymbol() or OverridableSymbol().      
-  index-symbol-definition:
+  override index-symbol-definition:
   	(symbol-key , symbol-type , symbol) -> <id>
     where
         dbg-symboltable(!$[with: [<print-as-string>(symbol-key , symbol-type , symbol)].]|"index-symbol-definition" , "info")

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -1,15 +1,18 @@
 module 	utils/contract
 imports
+  include/libtemplatelang
 	common
 	utils/debug
 
 rules 
+
+  // FIXME: Too much overrides here. (The overridden strats are in libtemplatelang.)
   
-  with-verify(s, on-fail-exec , msg) = where(verify-stratego(s, on-fail-exec, !$["Internal error: with clause failed unexpectedly. More : [<msg>]]))
+  override with-verify(s, on-fail-exec , msg) = where(verify-stratego(s, on-fail-exec, !$["Internal error: with clause failed unexpectedly. More : [<msg>]]))
   
-  with-verify(s, on-fail-exec) = where(verify-stratego(s, on-fail-exec, !"Internal error: with clause failed unexpectedly"))
+  override with-verify(s, on-fail-exec) = where(verify-stratego(s, on-fail-exec, !"Internal error: with clause failed unexpectedly"))
   
-  verify-stratego(s,on-fail-exec,message) =
+  override verify-stratego(s,on-fail-exec,message) =
     s
   <+
     try(on-fail-exec);
@@ -18,61 +21,61 @@
     report-failure
 
   
-  as-string(s) = s; as-string <+ !"<?>"
+  override as-string(s) = s; as-string <+ !"<?>"
 
-  as-string = is-string <+ write-to-string
+  override as-string = is-string <+ write-to-string
 
 
     
 //Draft of code contracts for stratego
 rules 
-  verify(s | arg , expected) = contracts(contract-requires(s| arg , expected))
+  override verify(s | arg , expected) = contracts(contract-requires(s| arg , expected))
   
-  verify(s | arg) = contracts(contract-requires(s| arg))
+  override verify(s | arg) = contracts(contract-requires(s| arg))
   
-  verify(s) = contracts(contract-requires(s))
+  override verify(s) = contracts(contract-requires(s))
  
 rules
 
-	contract-requires ( s , on-fail | arg , expected) =
+	override contract-requires ( s , on-fail | arg , expected) =
 			contract-requires ( s | arg , expected)
 		<+
 			on-fail
 
 
-	contract-requires ( s | arg , expected) =
+	override contract-requires ( s | arg , expected) =
 			where(<s> arg)
 		<+
 			dbg-analysis(! $[Requires Failed. Reason : actual :[<print-as-string>arg] expected : [expected]] | "Contract" , <debug-level-WARNING> ) 
 			; fail
 
 
-	contract-requires ( s | arg ) = <contract-requires (s)> arg
+	override contract-requires ( s | arg ) = <contract-requires (s)> arg
 
 
-	contract-requires (s) =
+	override contract-requires (s) =
 			where(s)
 		<+
 			dbg-analysis(! $[Requires Failed - argument :[<print-as-string>] ]  | "Contact" , <debug-level-WARNING>) 
 			; fail
 
 
-	contracts ( s ) =  where(s) <+ fail
+	override contracts ( s ) =  where(s) <+ fail
 
 
-	with-verification (preconditions, s ) = with-verification (preconditions, s , id)
+	override with-verification (preconditions, s ) = with-verification (preconditions, s , id)
 
 
-	with-verification (preconditions, s , postconditions) = where(preconditions) ; s ; where(postconditions) <+ fail
+	override with-verification (preconditions, s , postconditions) = where(preconditions) ; s ; where(postconditions) <+ fail
 
 
 rules
 
-	run-strategy(  s  , on-fail | msg) = s <+  <debug> msg ; on-fail
+	override run-strategy(  s  , on-fail | msg) = s <+  <debug> msg ; on-fail
 
 rules
-	String = is-string
+	override String = is-string
 
-	List = is-list
+	override List = is-list
 
-	ListOf(s) = list-loop(s)
+	override ListOf(s) = list-loop(s)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 18:05:25 2012	(r24249)
@@ -141,6 +141,7 @@
           <arg value="${build.stratego.outputfile}"/>
           <arg value="-p"/>
           <arg value="org.strategoxt.imp.editors.template.generated"/>
+          <arg value="--library"/>
           <arg value="--clean"/>
           <arg line="${build.stratego.args}"/>
           <arg line="${build.stratego.extraargs}"/>

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/SDF.tbl (from r24248, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/SDF.tbl)
==============================================================================
Binary file (source and/or target). No diff available.

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-Sugar.tbl (from r24248, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Sugar.tbl)
==============================================================================
Binary file (source and/or target). No diff available.

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -27,7 +27,7 @@
     ?(key, type);
     Declaration
 
-  resolve-symbol-definitions =
+  resolve-all-symbol-definitions =
     ?(key, type);
     bagof-Declaration;
     nub

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -9,6 +9,9 @@
   lib/EditorService
   lib/editor-common.generated
 imports
+  templatelang/utils/pp-esv
+  templatelang/utils/pp-sdf
+  templatelang/utils/sdf
   templatelang/expand
   templatelang/to-esv
   templatelang/to-sdf
@@ -16,9 +19,6 @@
 imports
   analyze
   utils/contract
-  utils/pp-esv
-  utils/pp-sdf
-  utils/sdf
 
 rules // Main editor interface (defined by editor/TemplateLang-Builders and -References.esv)
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -1,7 +1,6 @@
 module desugar
 imports
   libstratego-lib
-  lib/editor-common.generated
   include/TemplateLang
   templatelang/utils/attributes
   templatelang/utils/stubs
@@ -9,11 +8,18 @@
 
 strategies
 
+  // copied & renamed to prevent clashes with editor-common.generated.str
+  // templatelang-origin-track-forced, which is present in all editors ...
+  templatelang-origin-track-forced(s) =
+    ![<id>]; all(s); ?[<id>]
+
+strategies
+
   templatelang-desugar-sdf-top =
-    alltd(origin-track-forced(templatelang-desugar-sdf))
+    alltd(templatelang-origin-track-forced(templatelang-desugar-sdf))
 
   templatelang-desugar-top =
-    alltd(origin-track-forced(templatelang-desugar))
+    alltd(templatelang-origin-track-forced(templatelang-desugar))
 
 rules
 
@@ -41,7 +47,7 @@
       TemplateProduction(sort, template', attrs(attr*))
     where
       with-spxverify(
-          template' := <origin-track-forced(templatelang-template-desugar)> template;
+          template' := <templatelang-origin-track-forced(templatelang-template-desugar)> template;
           attr*     := <templatelang-get-attrs> a
       )
 
@@ -50,7 +56,7 @@
       TemplateProduction(sort, template', attrs(attr*))
     where
       with-spxverify(
-        template' := <origin-track-forced(templatelang-template-desugar)> template;
+        template' := <templatelang-origin-track-forced(templatelang-template-desugar)> template;
         attr*     := [sdf-cons(<double-quote> cons) | <templatelang-get-attrs> a]
       )
 
@@ -96,10 +102,10 @@
             list-min
 
           string-unindent(|n) =
-            ?"" <+ origin-track-forced(string-as-chars(drop(|n)))
+            ?"" <+ templatelang-origin-track-forced(string-as-chars(drop(|n)))
 
           line-unindent(|n) =
-            Line([origin-track-forced(Layout(string-unindent(|n))) | id])
+            Line([templatelang-origin-track-forced(Layout(string-unindent(|n))) | id])
 
           unindent =
             if get-indent => n then
@@ -116,19 +122,19 @@
       end )
 
   templatelang-element-desugar-top =
-    alltd(origin-track-forced(templatelang-element-desugar))
+    alltd(templatelang-origin-track-forced(templatelang-element-desugar))
 
   templatelang-element-desugar:
     NoOptions() -> []
 
   templatelang-element-desugar:
-    Options(x) -> <alltd(origin-track-forced(templatelang-option-desugar))> x
+    Options(x) -> <alltd(templatelang-origin-track-forced(templatelang-option-desugar))> x
 
   templatelang-option-desugar:
-    Separator(x) -> Separator(<origin-track-forced(un-double-quote; unescape)> x)
+    Separator(x) -> Separator(<templatelang-origin-track-forced(un-double-quote; unescape)> x)
 
   templatelang-option-desugar:
-    Text(x) -> Text(<origin-track-forced(un-double-quote; unescape)> x)
+    Text(x) -> Text(<templatelang-origin-track-forced(un-double-quote; unescape)> x)
 
   templatelang-element-desugar:
     Escape(t) -> String(t')
@@ -160,12 +166,12 @@
             <+ []
             ))
       in
-        t' := <origin-track-forced(unescape)> t
+        t' := <templatelang-origin-track-forced(unescape)> t
       end
       )
 
   templatelang-element-desugar:
     Layout(t) -> Layout(t')
     where with-spxverify(
-      t' := <origin-track-forced(string-replace(|"\t", "  "))> t
+      t' := <templatelang-origin-track-forced(string-replace(|"\t", "  "))> t
      )

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/expand.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -3,6 +3,7 @@
 imports
   include/TemplateLang
   templatelang/utils/attributes
+  templatelang/utils/stubs
   templatelang/analyze
   templatelang/to-string
 
@@ -86,7 +87,7 @@
     where
       not(<one(?Text(_))> option*)
     where
-      <<resolve-symbol-definitions> (<id>, TemplateBySort());
+      <<resolve-all-symbol-definitions> (<id>, TemplateBySort());
        one(?TemplateProduction(_, _, _))> x
 
   /**
@@ -179,7 +180,7 @@
   get-templates =
     ?sort;
     rules( Expanded : sort -> sort );
-    <resolve-symbol-definitions> (sort, TemplateBySort());
+    <resolve-all-symbol-definitions> (sort, TemplateBySort());
     not(?[])
 
   /**

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-sdf.str (from r24248, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/parse.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/sdf/parse.str	Tue Feb  7 18:05:19 2012	(r24248, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-sdf.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -1,29 +1,29 @@
-module analyze/sdf/parse
+module templatelang/utils/parse-sdf
 
 imports
   libstratego-lib
   libstratego-sglr
   libstratego-gpp
-	
+
 strategies
 
-  
+
   parse-sdf-file =
     parse-file(
       strsglr-perror, strsglr-report-parse-error
     | <import-term(lib/SDF.tbl)>
     )
 
-  
+
   parse-sdf-string =
     parse-string(
       strsglr-report-parse-error
     | <import-term(lib/SDF.tbl)>
     )
-  
-  
+
+
   parse-sdf-stream =
     parse-stream(
       strsglr-report-parse-error
     | <import-term(lib/SDF.tbl)>
-    )
\ No newline at end of file
+    )

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str	Tue Feb  7 18:05:19 2012	(r24248)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str	Tue Feb  7 18:05:25 2012	(r24249)
@@ -9,7 +9,7 @@
 strategies
   index-symbol-definition = fail
   resolve-symbol-definition = fail
-  resolve-symbol-definitions = fail
+  resolve-all-symbol-definitions = fail
 
 // contract.str
 

From tobivollebregt at gmail.com  Tue Feb  7 20:07:07 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 19:07:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24250 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template
Message-ID: <20120207190707.38DFB108C008@mx3.tudelft.nl>

Author: tvo
Date: Tue Feb  7 19:07:06 2012
New Revision: 24250
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24250&sc=1

Log:
push

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 18:05:25 2012	(r24249)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 19:07:06 2012	(r24250)
@@ -2,105 +2,105 @@
 
 <project name="TemplateLang" default="all">
 
-	<!-- Key input modules -->
-	<property name="sdfmodule" value="TemplateLang" />
-	<property name="metasdfmodule" value="Stratego-TemplateLang" />
-	<property name="esvmodule" value="TemplateLang" />
-	<property name="strmodule" value="templatelang" />
-
-	<!-- Project directories -->
-	<property name="trans" location="trans" />
-	<property name="src-gen" location="editor/java" />
-	<property name="syntax" location="syntax" />
-	<property name="include" location="include" />
-	<property name="lib" location="lib" />
-	<property name="build" location="bin" />
-	<property name="dist" location="bin/dist" />
-
-	<!-- Imports -->
-	<property name="build.sdf.imports" value="-Idef ${lib}/SDF.def" />
-	<property name="build.stratego.args" value="
-	    --library
-	    -I &quot;${basedir}&quot;
-	    -I &quot;${trans}&quot;
-	    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -la stratego-sdf" />
-
-	<!-- Optional: external .def and .jar locations
-	<property name="externaldef" location="syntax/${sdfmodule}.def"/>
-	<property name="externaljar" value="../lib.jar"/>
-	<property name="externaljarflags" value="-la org.lib"/>
-	-->
-
-	<!-- Environment configuration for command-line builds -->
-	<condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
-		<isset property="eclipse.spoofaximp.nativeprefix" />
-	</condition>
-	<property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin" />
-
-	<import file="build.generated.xml" />
-
-	<!-- Main target -->
-	<target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,pppack-esv,spoofaximp.edited.jar" />
-	<target name="spoofaximp.edited.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,libtemplatelang.stratego.jar,stratego.jar.helper,sdf2imp,refresh"/>
-
-	<!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
-	<available file="include/Stratego-Sdf2.tbl" property="stratego-sdf2.available" />
-	<target name="meta-sdf2table-stratego-sdf2" unless="stratego-sdf2.available">
-		<fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
-		<antcall target="pack-sdf.helper">
-			<param name="syntax" value="${lib}" />
-			<param name="sdfmodule" value="Stratego-Sdf2" />
-			<param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-		</antcall>
-		<antcall target="sdf2table">
-			<param name="sdfmodule" value="Stratego-Sdf2" />
-		</antcall>
-		<antcall target="meta-sdf2table.helper" />
-	</target>
-
-	<!-- Target to create -Permissive grammar and parse table for Stratego-EditorService.def -->
-	<available file="include/Stratego-EditorService.tbl" property="stratego-esv.available" />
-	<target name="meta-sdf2table-stratego-esv" unless="stratego-esv.available">
-		<fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
-		<antcall target="pack-sdf.helper">
-			<param name="syntax" value="${lib}" />
-			<param name="sdfmodule" value="Stratego-EditorService" />
-			<param name="build.sdf.imports" value="-Idef &quot;${lib}/EditorService.def&quot; -Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-		</antcall>
-		<antcall target="sdf2table">
-			<param name="sdfmodule" value="Stratego-EditorService" />
-		</antcall>
-		<antcall target="meta-sdf2table.helper" />
-	</target>
-
-	<!-- Target to create -Permissive grammar and parse table for StrategoStratego.def -->
-	<available file="include/StrategoStratego.tbl" property="strategostratego.available" />
-	<target name="meta-sdf2table-strategostratego" unless="strategostratego.available">
-		<fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
-		<antcall target="pack-sdf.helper">
-			<param name="syntax" value="${lib}" />
-			<param name="sdfmodule" value="StrategoStratego" />
-			<param name="build.sdf.imports" value="-Idef &quot;${lib}/Stratego-Attributes.def&quot; -Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
-		</antcall>
-		<antcall target="sdf2table">
-			<param name="sdfmodule" value="StrategoStratego" />
-		</antcall>
-		<antcall target="meta-sdf2table.helper" />
-	</target>
-
-	<!-- Target to create EditorService-pretty.pp.af from EditorService-pretty.pp -->
-	<available file="include/EditorService-pretty.pp.af" property="pppack-esv.available" />
-	<target name="pppack-esv" unless="pppack-esv.available">
-		<java classname="run" failonerror="true">
-			<arg value="org.strategoxt.tools.main-parse-pp-table"/>
-			<arg value="-i"/>
-			<arg value="${lib}/EditorService-pretty.pp"/>
-			<arg value="-o"/>
-			<arg value="${include}/EditorService-pretty.pp.af"/>
-		</java>
-	</target>
+  <!-- Key input modules -->
+  <property name="sdfmodule" value="TemplateLang" />
+  <property name="metasdfmodule" value="Stratego-TemplateLang" />
+  <property name="esvmodule" value="TemplateLang" />
+  <property name="strmodule" value="templatelang" />
+
+  <!-- Project directories -->
+  <property name="trans" location="trans" />
+  <property name="src-gen" location="editor/java" />
+  <property name="syntax" location="syntax" />
+  <property name="include" location="include" />
+  <property name="lib" location="lib" />
+  <property name="build" location="bin" />
+  <property name="dist" location="bin/dist" />
+
+  <!-- Imports -->
+  <property name="build.sdf.imports" value="-Idef ${lib}/SDF.def" />
+  <property name="build.stratego.args" value="
+      --library
+      -I &quot;${basedir}&quot;
+      -I &quot;${trans}&quot;
+      -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -la stratego-sdf" />
+
+  <!-- Optional: external .def and .jar locations
+  <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+  <property name="externaljar" value="../lib.jar"/>
+  <property name="externaljarflags" value="-la org.lib"/>
+  -->
+
+  <!-- Environment configuration for command-line builds -->
+  <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+    <isset property="eclipse.spoofaximp.nativeprefix" />
+  </condition>
+  <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin" />
+
+  <import file="build.generated.xml" />
+
+  <!-- Main target -->
+  <target name="all" depends="meta-sdf2table-stratego-sdf2,meta-sdf2table-stratego-esv,meta-sdf2table-strategostratego,pppack-esv,spoofaximp.edited.jar" />
+  <target name="spoofaximp.edited.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,libtemplatelang.stratego.jar,stratego.jar.helper,sdf2imp,refresh"/>
+
+  <!-- Target to create -Permissive grammar and parse table for Stratego-Sdf2.def -->
+  <available file="include/Stratego-Sdf2.tbl" property="stratego-sdf2.available" />
+  <target name="meta-sdf2table-stratego-sdf2" unless="stratego-sdf2.available">
+    <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
+    <antcall target="pack-sdf.helper">
+      <param name="syntax" value="${lib}" />
+      <param name="sdfmodule" value="Stratego-Sdf2" />
+      <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+    </antcall>
+    <antcall target="sdf2table">
+      <param name="sdfmodule" value="Stratego-Sdf2" />
+    </antcall>
+    <antcall target="meta-sdf2table.helper" />
+  </target>
+
+  <!-- Target to create -Permissive grammar and parse table for Stratego-EditorService.def -->
+  <available file="include/Stratego-EditorService.tbl" property="stratego-esv.available" />
+  <target name="meta-sdf2table-stratego-esv" unless="stratego-esv.available">
+    <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
+    <antcall target="pack-sdf.helper">
+      <param name="syntax" value="${lib}" />
+      <param name="sdfmodule" value="Stratego-EditorService" />
+      <param name="build.sdf.imports" value="-Idef &quot;${lib}/EditorService.def&quot; -Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+    </antcall>
+    <antcall target="sdf2table">
+      <param name="sdfmodule" value="Stratego-EditorService" />
+    </antcall>
+    <antcall target="meta-sdf2table.helper" />
+  </target>
+
+  <!-- Target to create -Permissive grammar and parse table for StrategoStratego.def -->
+  <available file="include/StrategoStratego.tbl" property="strategostratego.available" />
+  <target name="meta-sdf2table-strategostratego" unless="strategostratego.available">
+    <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def" />
+    <antcall target="pack-sdf.helper">
+      <param name="syntax" value="${lib}" />
+      <param name="sdfmodule" value="StrategoStratego" />
+      <param name="build.sdf.imports" value="-Idef &quot;${lib}/Stratego-Attributes.def&quot; -Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}" />
+    </antcall>
+    <antcall target="sdf2table">
+      <param name="sdfmodule" value="StrategoStratego" />
+    </antcall>
+    <antcall target="meta-sdf2table.helper" />
+  </target>
+
+  <!-- Target to create EditorService-pretty.pp.af from EditorService-pretty.pp -->
+  <available file="include/EditorService-pretty.pp.af" property="pppack-esv.available" />
+  <target name="pppack-esv" unless="pppack-esv.available">
+    <java classname="run" failonerror="true">
+      <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+      <arg value="-i"/>
+      <arg value="${lib}/EditorService-pretty.pp"/>
+      <arg value="-o"/>
+      <arg value="${include}/EditorService-pretty.pp.af"/>
+    </java>
+  </target>
 
-	<!-- Targets to create libtemplatelang.{jar,rtree} -->
+  <!-- Targets to create libtemplatelang.{jar,rtree} -->
   <!-- Stratego to Java compiler -->
   <target name="libtemplatelang.stratego.jar" depends="utils-files">
       <dependset>

From richard at vogelij.nl  Tue Feb  7 23:50:39 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Tue, 07 Feb 2012 22:50:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24251 -
	spoofax/trunk/spoofax/org.spoofax.jssglr
Message-ID: <20120207225039.4D0F62B800D@mx2.tudelft.nl>

Author: rvogelij
Date: Tue Feb  7 22:50:38 2012
New Revision: 24251
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24251&sc=1

Log:
updated ant build

Modified:
   spoofax/trunk/spoofax/org.spoofax.jssglr/build.xml

Modified: spoofax/trunk/spoofax/org.spoofax.jssglr/build.xml
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jssglr/build.xml	Tue Feb  7 19:07:06 2012	(r24250)
+++ spoofax/trunk/spoofax/org.spoofax.jssglr/build.xml	Tue Feb  7 22:50:38 2012	(r24251)
@@ -16,8 +16,7 @@
            <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
                    <classpath>
 			   <pathelement location="${src.dir}" />
-			   <pathelement location="${gwtworker.dir}/src/" />
-			   <pathelement location="${gwtworker.dir}/bin/" />
+			   <pathelement location="${gwtworker}" />
 			   <pathelement location="${org.spoofax.jsglr.src.dir}" />
 			   <pathelement location="${org.spoofax.terms.src.dir}" />
                            <path refid="compile.classpath" />

From tobivollebregt at gmail.com  Wed Feb  8 00:57:01 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 23:57:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24252 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template
Message-ID: <20120207235701.397417F807F@mx1.tudelft.nl>

Author: tvo
Date: Tue Feb  7 23:57:00 2012
New Revision: 24252
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24252&sc=1

Log:
TemplateLang: Fix clean build

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 22:50:38 2012	(r24251)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 23:57:00 2012	(r24252)
@@ -102,7 +102,7 @@
 
   <!-- Targets to create libtemplatelang.{jar,rtree} -->
   <!-- Stratego to Java compiler -->
-  <target name="libtemplatelang.stratego.jar" depends="utils-files">
+  <target name="libtemplatelang.stratego.jar" depends="rtg2sig,utils-files">
       <dependset>
           <srcfileset dir="${basedir}/trans/templatelang">
               <include name="**/*.str"/>

From tobivollebregt at gmail.com  Wed Feb  8 00:57:05 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 07 Feb 2012 23:57:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24253 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: .
	editor trans trans/templatelang trans/templatelang/utils trans/utils
Message-ID: <20120207235705.12C64108C002@mx3.tudelft.nl>

Author: tvo
Date: Tue Feb  7 23:57:04 2012
New Revision: 24253
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24253&sc=1

Log:
TemplateLang: Make editor jar properly depend on library jar

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/contract.str
      - copied, changed from r24252, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/contract.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/contract.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 23:57:00 2012	(r24252)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Tue Feb  7 23:57:04 2012	(r24253)
@@ -23,7 +23,8 @@
       --library
       -I &quot;${basedir}&quot;
       -I &quot;${trans}&quot;
-      -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -la stratego-sdf" />
+      -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
+      -la stratego-sdf -la org.strategoxt.imp.editors.template.generated" />
 
   <!-- Optional: external .def and .jar locations
   <property name="externaldef" location="syntax/${sdfmodule}.def"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Tue Feb  7 23:57:00 2012	(r24252)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Tue Feb  7 23:57:04 2012	(r24253)
@@ -10,7 +10,8 @@
 
 builders
 
-  provider : include/private/templatelang.jar
+  provider : include/templatelang.jar
+  provider : include/libtemplatelang.jar
   // provider : include/templatelang-java.jar
 
   observer : editor-analyze

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str	Tue Feb  7 23:57:00 2012	(r24252)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str	Tue Feb  7 23:57:04 2012	(r24253)
@@ -2,9 +2,7 @@
 
 imports
   include/TemplateLang
-  templatelang/utils/attributes
-  templatelang/analyze
-  templatelang/desugar
+  include/libtemplatelang
 
 strategies
 
@@ -19,15 +17,15 @@
 
   // hooks
 
-  index-symbol-definition =
+  override index-symbol-definition =
     ?(key, type, value);
     rules( Declaration :+ (key, type) -> value )
 
-  resolve-symbol-definition =
+  override resolve-symbol-definition =
     ?(key, type);
     Declaration
 
-  resolve-all-symbol-definitions =
+  override resolve-all-symbol-definitions =
     ?(key, type);
     bagof-Declaration;
     nub

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Tue Feb  7 23:57:00 2012	(r24252)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Tue Feb  7 23:57:04 2012	(r24253)
@@ -6,19 +6,11 @@
   libstratego-aterm
   libstratego-sglr
   include/TemplateLang
+  include/libtemplatelang
   lib/EditorService
   lib/editor-common.generated
 imports
-  templatelang/utils/pp-esv
-  templatelang/utils/pp-sdf
-  templatelang/utils/sdf
-  templatelang/expand
-  templatelang/to-esv
-  templatelang/to-sdf
-  templatelang/to-str
-imports
   analyze
-  utils/contract
 
 rules // Main editor interface (defined by editor/TemplateLang-Builders and -References.esv)
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str	Tue Feb  7 23:57:00 2012	(r24252)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str	Tue Feb  7 23:57:04 2012	(r24253)
@@ -3,6 +3,7 @@
 imports
   include/TemplateLang
   templatelang/utils/attributes
+  templatelang/utils/contract
   templatelang/utils/stubs
 
 signature

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Tue Feb  7 23:57:00 2012	(r24252)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Tue Feb  7 23:57:04 2012	(r24253)
@@ -3,7 +3,7 @@
   libstratego-lib
   include/TemplateLang
   templatelang/utils/attributes
-  templatelang/utils/stubs
+  templatelang/utils/contract
   templatelang/utils/misc
 
 strategies

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str	Tue Feb  7 23:57:00 2012	(r24252)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str	Tue Feb  7 23:57:04 2012	(r24253)
@@ -4,8 +4,8 @@
   include/TemplateLang
   lib/EditorService
   templatelang/utils/attributes
+  templatelang/utils/contract
   templatelang/utils/misc
-  templatelang/utils/stubs
   templatelang/expand
   templatelang/to-string
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str	Tue Feb  7 23:57:00 2012	(r24252)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str	Tue Feb  7 23:57:04 2012	(r24253)
@@ -5,8 +5,8 @@
   include/TemplateLang
   templatelang/analyze
   templatelang/utils/attributes
+  templatelang/utils/contract
   templatelang/utils/misc
-  templatelang/utils/stubs
   templatelang/utils/tokenize
 
 strategies

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str	Tue Feb  7 23:57:00 2012	(r24252)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str	Tue Feb  7 23:57:04 2012	(r24253)
@@ -5,8 +5,9 @@
   libstrc
   include/TemplateLang
   templatelang/utils/attributes
+  templatelang/utils/contract
   templatelang/utils/misc
-  templatelang/utils/stubs
+  templatelang/utils/parse-str
 
 strategies
 

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/contract.str (from r24252, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/contract.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/utils/contract.str	Tue Feb  7 23:57:00 2012	(r24252, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/contract.str	Tue Feb  7 23:57:04 2012	(r24253)
@@ -1,6 +1,6 @@
 /* Adapted from org.strategoxt.imp.editors.spoofax/trans/utils/contract.str */
 
-module 	utils/contract
+module templatelang/utils/contract
 
 rules
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str	Tue Feb  7 23:57:00 2012	(r24252)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/stubs.str	Tue Feb  7 23:57:04 2012	(r24253)
@@ -4,42 +4,6 @@
 // (i.e., SpoofaxLang or non-public org.strategoxt.imp.editors.template code)
 
 strategies
-  parse-stratego-string = fail
-
-strategies
   index-symbol-definition = fail
   resolve-symbol-definition = fail
   resolve-all-symbol-definitions = fail
-
-// contract.str
-
-strategies
-  with-spxverify(s, msg) = fail
-  with-spxverify(s) = fail
-  with-verify(s, on-fail-exec , msg) = fail
-  with-verify(s, on-fail-exec) = fail
-  verify-stratego(s,on-fail-exec,message) = fail
-  as-string(s) = fail
-  as-string = fail
-
-strategies
-  verify(s | arg , expected) = fail
-  verify(s | arg) = fail
-  verify(s) = fail
-
-strategies
-  contract-requires ( s , on-fail | arg , expected) = fail
-  contract-requires ( s | arg , expected) = fail
-  contract-requires ( s | arg ) = fail
-  contract-requires (s) = fail
-  contracts ( s ) = fail
-  with-verification (preconditions, s ) = fail
-  with-verification (preconditions, s , postconditions) = fail
-
-strategies
-  run-strategy(  s  , on-fail | msg) = fail
-
-strategies
-  String = is-string
-  List = is-list
-  ListOf(s) = list-loop(s)

From tobivollebregt at gmail.com  Wed Feb  8 09:20:20 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 08:20:20 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24254 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF
Message-ID: <20120208082020.C43BBCC06C@mx4.tudelft.nl>

Author: tvo
Date: Wed Feb  8 08:20:18 2012
New Revision: 24254
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24254&sc=1

Log:
TemplateLang: Export the o.s.i.e.template.generated package

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF	Tue Feb  7 23:57:04 2012	(r24253)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/META-INF/MANIFEST.MF	Wed Feb  8 08:20:18 2012	(r24254)
@@ -18,4 +18,5 @@
   org.strategoxt.strj
 Bundle-RequiredExecutionEnvironment: J2SE-1.5
 Bundle-ActivationPolicy: lazy
-Export-Package: org.strategoxt.imp.editors.template
+Export-Package: org.strategoxt.imp.editors.template,
+ org.strategoxt.imp.editors.template.generated

From seba at informatik.uni-marburg.de  Wed Feb  8 11:38:08 2012
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 08 Feb 2012 10:38:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24255 - in
	sugarj/trunk: compiler editor editor/editor editor/syntax
	update-site
Message-ID: <20120208103808.979077F8084@mx1.tudelft.nl>

Author: SebastianErdweg
Date: Wed Feb  8 10:38:07 2012
New Revision: 24255
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24255&sc=1

Log:
older changes

Modified:
   sugarj/trunk/compiler/.classpath
   sugarj/trunk/editor/   (props changed)
   sugarj/trunk/editor/editor/   (props changed)
   sugarj/trunk/editor/syntax/   (props changed)
   sugarj/trunk/update-site/   (props changed)

Modified: sugarj/trunk/compiler/.classpath
==============================================================================
--- sugarj/trunk/compiler/.classpath	Wed Feb  8 08:20:18 2012	(r24254)
+++ sugarj/trunk/compiler/.classpath	Wed Feb  8 10:38:07 2012	(r24255)
@@ -6,6 +6,6 @@
 	<classpathentry exported="true" kind="lib" path="make_permissive.jar"/>
 	<classpathentry exported="true" kind="lib" path="commons-cli-1.2.jar"/>
 	<classpathentry kind="lib" path="commons-collections-3.2.1.jar"/>
-	<classpathentry kind="lib" path="/Users/seba/Library/eclipse-sugarj/plugins/org.strategoxt.imp.nativebundle_0.1.1.201108031014"/>
+	<classpathentry kind="lib" path="/Users/seba/Downloads/eclipse/plugins/org.strategoxt.imp.nativebundle_0.1.1.201109082108"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

From seba at informatik.uni-marburg.de  Wed Feb  8 11:43:34 2012
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 08 Feb 2012 10:43:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24256 - in
	sugarj/tags/20120208-before-deletion: . compiler editor
	editor/.externalToolBuilders editor/.settings editor/META-INF
	editor/editor editor/editor/java editor/li...
Message-ID: <20120208104334.2C835CC07B@mx4.tudelft.nl>

Author: SebastianErdweg
Date: Wed Feb  8 10:43:33 2012
New Revision: 24256
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24256&sc=1

Log:
tagged before deletion

Added:
   sugarj/tags/20120208-before-deletion/
      - copied from r24254, sugarj/trunk/
Replaced:
   sugarj/tags/20120208-before-deletion/compiler/.classpath
      - copied unchanged from r24255, sugarj/trunk/compiler/.classpath
   sugarj/tags/20120208-before-deletion/editor/
      - copied from r24255, sugarj/trunk/editor/
   sugarj/tags/20120208-before-deletion/editor/.classpath
      - copied unchanged from r24254, sugarj/trunk/editor/.classpath
   sugarj/tags/20120208-before-deletion/editor/.externalToolBuilders/
      - copied from r24254, sugarj/trunk/editor/.externalToolBuilders/
   sugarj/tags/20120208-before-deletion/editor/.project
      - copied unchanged from r24254, sugarj/trunk/editor/.project
   sugarj/tags/20120208-before-deletion/editor/.settings/
      - copied from r24254, sugarj/trunk/editor/.settings/
   sugarj/tags/20120208-before-deletion/editor/COPYING
      - copied unchanged from r24254, sugarj/trunk/editor/COPYING
   sugarj/tags/20120208-before-deletion/editor/META-INF/
      - copied from r24254, sugarj/trunk/editor/META-INF/
   sugarj/tags/20120208-before-deletion/editor/build.generated.xml
      - copied unchanged from r24254, sugarj/trunk/editor/build.generated.xml
   sugarj/tags/20120208-before-deletion/editor/build.main.xml
      - copied unchanged from r24254, sugarj/trunk/editor/build.main.xml
   sugarj/tags/20120208-before-deletion/editor/build.properties
      - copied unchanged from r24254, sugarj/trunk/editor/build.properties
   sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Builders.esv
      - copied unchanged from r24254, sugarj/trunk/editor/editor/SugarJ-Builders.esv
   sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Colorer.esv
      - copied unchanged from r24254, sugarj/trunk/editor/editor/SugarJ-Colorer.esv
   sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Completions.esv
      - copied unchanged from r24254, sugarj/trunk/editor/editor/SugarJ-Completions.esv
   sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Folding.esv
      - copied unchanged from r24254, sugarj/trunk/editor/editor/SugarJ-Folding.esv
   sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Outliner.esv
      - copied unchanged from r24254, sugarj/trunk/editor/editor/SugarJ-Outliner.esv
   sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-References.esv
      - copied unchanged from r24254, sugarj/trunk/editor/editor/SugarJ-References.esv
   sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Syntax.esv
      - copied unchanged from r24254, sugarj/trunk/editor/editor/SugarJ-Syntax.esv
   sugarj/tags/20120208-before-deletion/editor/editor/SugarJ.main.esv
      - copied unchanged from r24254, sugarj/trunk/editor/editor/SugarJ.main.esv
   sugarj/tags/20120208-before-deletion/editor/editor/java/
      - copied from r24254, sugarj/trunk/editor/editor/java/
   sugarj/tags/20120208-before-deletion/editor/lib/
      - copied from r24254, sugarj/trunk/editor/lib/
   sugarj/tags/20120208-before-deletion/editor/plugin.xml
      - copied unchanged from r24254, sugarj/trunk/editor/plugin.xml
   sugarj/tags/20120208-before-deletion/editor/syntax/SugarJ.pp
      - copied unchanged from r24254, sugarj/trunk/editor/syntax/SugarJ.pp
   sugarj/tags/20120208-before-deletion/editor/syntax/SugarJ.sdf
      - copied unchanged from r24254, sugarj/trunk/editor/syntax/SugarJ.sdf
   sugarj/tags/20120208-before-deletion/editor/trans/
      - copied from r24254, sugarj/trunk/editor/trans/
   sugarj/tags/20120208-before-deletion/update-site/
      - copied from r24255, sugarj/trunk/update-site/
   sugarj/tags/20120208-before-deletion/update-site/.project
      - copied unchanged from r24254, sugarj/trunk/update-site/.project
   sugarj/tags/20120208-before-deletion/update-site/copy-to-server.sh
      - copied unchanged from r24254, sugarj/trunk/update-site/copy-to-server.sh
   sugarj/tags/20120208-before-deletion/update-site/site.xml
      - copied unchanged from r24254, sugarj/trunk/update-site/site.xml

Copied: sugarj/tags/20120208-before-deletion/compiler/.classpath (from r24255, sugarj/trunk/compiler/.classpath)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/compiler/.classpath	Wed Feb  8 10:43:33 2012	(r24256, copy of r24255, sugarj/trunk/compiler/.classpath)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="src" path=""/>
+	<classpathentry exported="true" kind="lib" path="make_permissive.jar"/>
+	<classpathentry exported="true" kind="lib" path="commons-cli-1.2.jar"/>
+	<classpathentry kind="lib" path="commons-collections-3.2.1.jar"/>
+	<classpathentry kind="lib" path="/Users/seba/Downloads/eclipse/plugins/org.strategoxt.imp.nativebundle_0.1.1.201109082108"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Copied: sugarj/tags/20120208-before-deletion/editor/.classpath (from r24254, sugarj/trunk/editor/.classpath)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/.classpath	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/.classpath)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="src" path="editor/java"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Copied: sugarj/tags/20120208-before-deletion/editor/.project (from r24254, sugarj/trunk/editor/.project)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/.project	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/.project)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.sugarj.editor</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&lt;project&gt;/.externalToolBuilders/SugarJ build.main.xml.launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

Copied: sugarj/tags/20120208-before-deletion/editor/COPYING (from r24254, sugarj/trunk/editor/COPYING)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/COPYING	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/COPYING)
@@ -0,0 +1,674 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 3, 29 June 2007
+
+ Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The GNU General Public License is a free, copyleft license for
+software and other kinds of works.
+
+  The licenses for most software and other practical works are designed
+to take away your freedom to share and change the works.  By contrast,
+the GNU General Public License is intended to guarantee your freedom to
+share and change all versions of a program--to make sure it remains free
+software for all its users.  We, the Free Software Foundation, use the
+GNU General Public License for most of our software; it applies also to
+any other work released this way by its authors.  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+them if you wish), that you receive source code or can get it if you
+want it, that you can change the software or use pieces of it in new
+free programs, and that you know you can do these things.
+
+  To protect your rights, we need to prevent others from denying you
+these rights or asking you to surrender the rights.  Therefore, you have
+certain responsibilities if you distribute copies of the software, or if
+you modify it: responsibilities to respect the freedom of others.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must pass on to the recipients the same
+freedoms that you received.  You must make sure that they, too, receive
+or can get the source code.  And you must show them these terms so they
+know their rights.
+
+  Developers that use the GNU GPL protect your rights with two steps:
+(1) assert copyright on the software, and (2) offer you this License
+giving you legal permission to copy, distribute and/or modify it.
+
+  For the developers' and authors' protection, the GPL clearly explains
+that there is no warranty for this free software.  For both users' and
+authors' sake, the GPL requires that modified versions be marked as
+changed, so that their problems will not be attributed erroneously to
+authors of previous versions.
+
+  Some devices are designed to deny users access to install or run
+modified versions of the software inside them, although the manufacturer
+can do so.  This is fundamentally incompatible with the aim of
+protecting users' freedom to change the software.  The systematic
+pattern of such abuse occurs in the area of products for individuals to
+use, which is precisely where it is most unacceptable.  Therefore, we
+have designed this version of the GPL to prohibit the practice for those
+products.  If such problems arise substantially in other domains, we
+stand ready to extend this provision to those domains in future versions
+of the GPL, as needed to protect the freedom of users.
+
+  Finally, every program is threatened constantly by software patents.
+States should not allow patents to restrict development and use of
+software on general-purpose computers, but in those that do, we wish to
+avoid the special danger that patents applied to a free program could
+make it effectively proprietary.  To prevent this, the GPL assures that
+patents cannot be used to render the program non-free.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                       TERMS AND CONDITIONS
+
+  0. Definitions.
+
+  "This License" refers to version 3 of the GNU General Public License.
+
+  "Copyright" also means copyright-like laws that apply to other kinds of
+works, such as semiconductor masks.
+
+  "The Program" refers to any copyrightable work licensed under this
+License.  Each licensee is addressed as "you".  "Licensees" and
+"recipients" may be individuals or organizations.
+
+  To "modify" a work means to copy from or adapt all or part of the work
+in a fashion requiring copyright permission, other than the making of an
+exact copy.  The resulting work is called a "modified version" of the
+earlier work or a work "based on" the earlier work.
+
+  A "covered work" means either the unmodified Program or a work based
+on the Program.
+
+  To "propagate" a work means to do anything with it that, without
+permission, would make you directly or secondarily liable for
+infringement under applicable copyright law, except executing it on a
+computer or modifying a private copy.  Propagation includes copying,
+distribution (with or without modification), making available to the
+public, and in some countries other activities as well.
+
+  To "convey" a work means any kind of propagation that enables other
+parties to make or receive copies.  Mere interaction with a user through
+a computer network, with no transfer of a copy, is not conveying.
+
+  An interactive user interface displays "Appropriate Legal Notices"
+to the extent that it includes a convenient and prominently visible
+feature that (1) displays an appropriate copyright notice, and (2)
+tells the user that there is no warranty for the work (except to the
+extent that warranties are provided), that licensees may convey the
+work under this License, and how to view a copy of this License.  If
+the interface presents a list of user commands or options, such as a
+menu, a prominent item in the list meets this criterion.
+
+  1. Source Code.
+
+  The "source code" for a work means the preferred form of the work
+for making modifications to it.  "Object code" means any non-source
+form of a work.
+
+  A "Standard Interface" means an interface that either is an official
+standard defined by a recognized standards body, or, in the case of
+interfaces specified for a particular programming language, one that
+is widely used among developers working in that language.
+
+  The "System Libraries" of an executable work include anything, other
+than the work as a whole, that (a) is included in the normal form of
+packaging a Major Component, but which is not part of that Major
+Component, and (b) serves only to enable use of the work with that
+Major Component, or to implement a Standard Interface for which an
+implementation is available to the public in source code form.  A
+"Major Component", in this context, means a major essential component
+(kernel, window system, and so on) of the specific operating system
+(if any) on which the executable work runs, or a compiler used to
+produce the work, or an object code interpreter used to run it.
+
+  The "Corresponding Source" for a work in object code form means all
+the source code needed to generate, install, and (for an executable
+work) run the object code and to modify the work, including scripts to
+control those activities.  However, it does not include the work's
+System Libraries, or general-purpose tools or generally available free
+programs which are used unmodified in performing those activities but
+which are not part of the work.  For example, Corresponding Source
+includes interface definition files associated with source files for
+the work, and the source code for shared libraries and dynamically
+linked subprograms that the work is specifically designed to require,
+such as by intimate data communication or control flow between those
+subprograms and other parts of the work.
+
+  The Corresponding Source need not include anything that users
+can regenerate automatically from other parts of the Corresponding
+Source.
+
+  The Corresponding Source for a work in source code form is that
+same work.
+
+  2. Basic Permissions.
+
+  All rights granted under this License are granted for the term of
+copyright on the Program, and are irrevocable provided the stated
+conditions are met.  This License explicitly affirms your unlimited
+permission to run the unmodified Program.  The output from running a
+covered work is covered by this License only if the output, given its
+content, constitutes a covered work.  This License acknowledges your
+rights of fair use or other equivalent, as provided by copyright law.
+
+  You may make, run and propagate covered works that you do not
+convey, without conditions so long as your license otherwise remains
+in force.  You may convey covered works to others for the sole purpose
+of having them make modifications exclusively for you, or provide you
+with facilities for running those works, provided that you comply with
+the terms of this License in conveying all material for which you do
+not control copyright.  Those thus making or running the covered works
+for you must do so exclusively on your behalf, under your direction
+and control, on terms that prohibit them from making any copies of
+your copyrighted material outside their relationship with you.
+
+  Conveying under any other circumstances is permitted solely under
+the conditions stated below.  Sublicensing is not allowed; section 10
+makes it unnecessary.
+
+  3. Protecting Users' Legal Rights From Anti-Circumvention Law.
+
+  No covered work shall be deemed part of an effective technological
+measure under any applicable law fulfilling obligations under article
+11 of the WIPO copyright treaty adopted on 20 December 1996, or
+similar laws prohibiting or restricting circumvention of such
+measures.
+
+  When you convey a covered work, you waive any legal power to forbid
+circumvention of technological measures to the extent such circumvention
+is effected by exercising rights under this License with respect to
+the covered work, and you disclaim any intention to limit operation or
+modification of the work as a means of enforcing, against the work's
+users, your or third parties' legal rights to forbid circumvention of
+technological measures.
+
+  4. Conveying Verbatim Copies.
+
+  You may convey verbatim copies of the Program's source code as you
+receive it, in any medium, provided that you conspicuously and
+appropriately publish on each copy an appropriate copyright notice;
+keep intact all notices stating that this License and any
+non-permissive terms added in accord with section 7 apply to the code;
+keep intact all notices of the absence of any warranty; and give all
+recipients a copy of this License along with the Program.
+
+  You may charge any price or no price for each copy that you convey,
+and you may offer support or warranty protection for a fee.
+
+  5. Conveying Modified Source Versions.
+
+  You may convey a work based on the Program, or the modifications to
+produce it from the Program, in the form of source code under the
+terms of section 4, provided that you also meet all of these conditions:
+
+    a) The work must carry prominent notices stating that you modified
+    it, and giving a relevant date.
+
+    b) The work must carry prominent notices stating that it is
+    released under this License and any conditions added under section
+    7.  This requirement modifies the requirement in section 4 to
+    "keep intact all notices".
+
+    c) You must license the entire work, as a whole, under this
+    License to anyone who comes into possession of a copy.  This
+    License will therefore apply, along with any applicable section 7
+    additional terms, to the whole of the work, and all its parts,
+    regardless of how they are packaged.  This License gives no
+    permission to license the work in any other way, but it does not
+    invalidate such permission if you have separately received it.
+
+    d) If the work has interactive user interfaces, each must display
+    Appropriate Legal Notices; however, if the Program has interactive
+    interfaces that do not display Appropriate Legal Notices, your
+    work need not make them do so.
+
+  A compilation of a covered work with other separate and independent
+works, which are not by their nature extensions of the covered work,
+and which are not combined with it such as to form a larger program,
+in or on a volume of a storage or distribution medium, is called an
+"aggregate" if the compilation and its resulting copyright are not
+used to limit the access or legal rights of the compilation's users
+beyond what the individual works permit.  Inclusion of a covered work
+in an aggregate does not cause this License to apply to the other
+parts of the aggregate.
+
+  6. Conveying Non-Source Forms.
+
+  You may convey a covered work in object code form under the terms
+of sections 4 and 5, provided that you also convey the
+machine-readable Corresponding Source under the terms of this License,
+in one of these ways:
+
+    a) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by the
+    Corresponding Source fixed on a durable physical medium
+    customarily used for software interchange.
+
+    b) Convey the object code in, or embodied in, a physical product
+    (including a physical distribution medium), accompanied by a
+    written offer, valid for at least three years and valid for as
+    long as you offer spare parts or customer support for that product
+    model, to give anyone who possesses the object code either (1) a
+    copy of the Corresponding Source for all the software in the
+    product that is covered by this License, on a durable physical
+    medium customarily used for software interchange, for a price no
+    more than your reasonable cost of physically performing this
+    conveying of source, or (2) access to copy the
+    Corresponding Source from a network server at no charge.
+
+    c) Convey individual copies of the object code with a copy of the
+    written offer to provide the Corresponding Source.  This
+    alternative is allowed only occasionally and noncommercially, and
+    only if you received the object code with such an offer, in accord
+    with subsection 6b.
+
+    d) Convey the object code by offering access from a designated
+    place (gratis or for a charge), and offer equivalent access to the
+    Corresponding Source in the same way through the same place at no
+    further charge.  You need not require recipients to copy the
+    Corresponding Source along with the object code.  If the place to
+    copy the object code is a network server, the Corresponding Source
+    may be on a different server (operated by you or a third party)
+    that supports equivalent copying facilities, provided you maintain
+    clear directions next to the object code saying where to find the
+    Corresponding Source.  Regardless of what server hosts the
+    Corresponding Source, you remain obligated to ensure that it is
+    available for as long as needed to satisfy these requirements.
+
+    e) Convey the object code using peer-to-peer transmission, provided
+    you inform other peers where the object code and Corresponding
+    Source of the work are being offered to the general public at no
+    charge under subsection 6d.
+
+  A separable portion of the object code, whose source code is excluded
+from the Corresponding Source as a System Library, need not be
+included in conveying the object code work.
+
+  A "User Product" is either (1) a "consumer product", which means any
+tangible personal property which is normally used for personal, family,
+or household purposes, or (2) anything designed or sold for incorporation
+into a dwelling.  In determining whether a product is a consumer product,
+doubtful cases shall be resolved in favor of coverage.  For a particular
+product received by a particular user, "normally used" refers to a
+typical or common use of that class of product, regardless of the status
+of the particular user or of the way in which the particular user
+actually uses, or expects or is expected to use, the product.  A product
+is a consumer product regardless of whether the product has substantial
+commercial, industrial or non-consumer uses, unless such uses represent
+the only significant mode of use of the product.
+
+  "Installation Information" for a User Product means any methods,
+procedures, authorization keys, or other information required to install
+and execute modified versions of a covered work in that User Product from
+a modified version of its Corresponding Source.  The information must
+suffice to ensure that the continued functioning of the modified object
+code is in no case prevented or interfered with solely because
+modification has been made.
+
+  If you convey an object code work under this section in, or with, or
+specifically for use in, a User Product, and the conveying occurs as
+part of a transaction in which the right of possession and use of the
+User Product is transferred to the recipient in perpetuity or for a
+fixed term (regardless of how the transaction is characterized), the
+Corresponding Source conveyed under this section must be accompanied
+by the Installation Information.  But this requirement does not apply
+if neither you nor any third party retains the ability to install
+modified object code on the User Product (for example, the work has
+been installed in ROM).
+
+  The requirement to provide Installation Information does not include a
+requirement to continue to provide support service, warranty, or updates
+for a work that has been modified or installed by the recipient, or for
+the User Product in which it has been modified or installed.  Access to a
+network may be denied when the modification itself materially and
+adversely affects the operation of the network or violates the rules and
+protocols for communication across the network.
+
+  Corresponding Source conveyed, and Installation Information provided,
+in accord with this section must be in a format that is publicly
+documented (and with an implementation available to the public in
+source code form), and must require no special password or key for
+unpacking, reading or copying.
+
+  7. Additional Terms.
+
+  "Additional permissions" are terms that supplement the terms of this
+License by making exceptions from one or more of its conditions.
+Additional permissions that are applicable to the entire Program shall
+be treated as though they were included in this License, to the extent
+that they are valid under applicable law.  If additional permissions
+apply only to part of the Program, that part may be used separately
+under those permissions, but the entire Program remains governed by
+this License without regard to the additional permissions.
+
+  When you convey a copy of a covered work, you may at your option
+remove any additional permissions from that copy, or from any part of
+it.  (Additional permissions may be written to require their own
+removal in certain cases when you modify the work.)  You may place
+additional permissions on material, added by you to a covered work,
+for which you have or can give appropriate copyright permission.
+
+  Notwithstanding any other provision of this License, for material you
+add to a covered work, you may (if authorized by the copyright holders of
+that material) supplement the terms of this License with terms:
+
+    a) Disclaiming warranty or limiting liability differently from the
+    terms of sections 15 and 16 of this License; or
+
+    b) Requiring preservation of specified reasonable legal notices or
+    author attributions in that material or in the Appropriate Legal
+    Notices displayed by works containing it; or
+
+    c) Prohibiting misrepresentation of the origin of that material, or
+    requiring that modified versions of such material be marked in
+    reasonable ways as different from the original version; or
+
+    d) Limiting the use for publicity purposes of names of licensors or
+    authors of the material; or
+
+    e) Declining to grant rights under trademark law for use of some
+    trade names, trademarks, or service marks; or
+
+    f) Requiring indemnification of licensors and authors of that
+    material by anyone who conveys the material (or modified versions of
+    it) with contractual assumptions of liability to the recipient, for
+    any liability that these contractual assumptions directly impose on
+    those licensors and authors.
+
+  All other non-permissive additional terms are considered "further
+restrictions" within the meaning of section 10.  If the Program as you
+received it, or any part of it, contains a notice stating that it is
+governed by this License along with a term that is a further
+restriction, you may remove that term.  If a license document contains
+a further restriction but permits relicensing or conveying under this
+License, you may add to a covered work material governed by the terms
+of that license document, provided that the further restriction does
+not survive such relicensing or conveying.
+
+  If you add terms to a covered work in accord with this section, you
+must place, in the relevant source files, a statement of the
+additional terms that apply to those files, or a notice indicating
+where to find the applicable terms.
+
+  Additional terms, permissive or non-permissive, may be stated in the
+form of a separately written license, or stated as exceptions;
+the above requirements apply either way.
+
+  8. Termination.
+
+  You may not propagate or modify a covered work except as expressly
+provided under this License.  Any attempt otherwise to propagate or
+modify it is void, and will automatically terminate your rights under
+this License (including any patent licenses granted under the third
+paragraph of section 11).
+
+  However, if you cease all violation of this License, then your
+license from a particular copyright holder is reinstated (a)
+provisionally, unless and until the copyright holder explicitly and
+finally terminates your license, and (b) permanently, if the copyright
+holder fails to notify you of the violation by some reasonable means
+prior to 60 days after the cessation.
+
+  Moreover, your license from a particular copyright holder is
+reinstated permanently if the copyright holder notifies you of the
+violation by some reasonable means, this is the first time you have
+received notice of violation of this License (for any work) from that
+copyright holder, and you cure the violation prior to 30 days after
+your receipt of the notice.
+
+  Termination of your rights under this section does not terminate the
+licenses of parties who have received copies or rights from you under
+this License.  If your rights have been terminated and not permanently
+reinstated, you do not qualify to receive new licenses for the same
+material under section 10.
+
+  9. Acceptance Not Required for Having Copies.
+
+  You are not required to accept this License in order to receive or
+run a copy of the Program.  Ancillary propagation of a covered work
+occurring solely as a consequence of using peer-to-peer transmission
+to receive a copy likewise does not require acceptance.  However,
+nothing other than this License grants you permission to propagate or
+modify any covered work.  These actions infringe copyright if you do
+not accept this License.  Therefore, by modifying or propagating a
+covered work, you indicate your acceptance of this License to do so.
+
+  10. Automatic Licensing of Downstream Recipients.
+
+  Each time you convey a covered work, the recipient automatically
+receives a license from the original licensors, to run, modify and
+propagate that work, subject to this License.  You are not responsible
+for enforcing compliance by third parties with this License.
+
+  An "entity transaction" is a transaction transferring control of an
+organization, or substantially all assets of one, or subdividing an
+organization, or merging organizations.  If propagation of a covered
+work results from an entity transaction, each party to that
+transaction who receives a copy of the work also receives whatever
+licenses to the work the party's predecessor in interest had or could
+give under the previous paragraph, plus a right to possession of the
+Corresponding Source of the work from the predecessor in interest, if
+the predecessor has it or can get it with reasonable efforts.
+
+  You may not impose any further restrictions on the exercise of the
+rights granted or affirmed under this License.  For example, you may
+not impose a license fee, royalty, or other charge for exercise of
+rights granted under this License, and you may not initiate litigation
+(including a cross-claim or counterclaim in a lawsuit) alleging that
+any patent claim is infringed by making, using, selling, offering for
+sale, or importing the Program or any portion of it.
+
+  11. Patents.
+
+  A "contributor" is a copyright holder who authorizes use under this
+License of the Program or a work on which the Program is based.  The
+work thus licensed is called the contributor's "contributor version".
+
+  A contributor's "essential patent claims" are all patent claims
+owned or controlled by the contributor, whether already acquired or
+hereafter acquired, that would be infringed by some manner, permitted
+by this License, of making, using, or selling its contributor version,
+but do not include claims that would be infringed only as a
+consequence of further modification of the contributor version.  For
+purposes of this definition, "control" includes the right to grant
+patent sublicenses in a manner consistent with the requirements of
+this License.
+
+  Each contributor grants you a non-exclusive, worldwide, royalty-free
+patent license under the contributor's essential patent claims, to
+make, use, sell, offer for sale, import and otherwise run, modify and
+propagate the contents of its contributor version.
+
+  In the following three paragraphs, a "patent license" is any express
+agreement or commitment, however denominated, not to enforce a patent
+(such as an express permission to practice a patent or covenant not to
+sue for patent infringement).  To "grant" such a patent license to a
+party means to make such an agreement or commitment not to enforce a
+patent against the party.
+
+  If you convey a covered work, knowingly relying on a patent license,
+and the Corresponding Source of the work is not available for anyone
+to copy, free of charge and under the terms of this License, through a
+publicly available network server or other readily accessible means,
+then you must either (1) cause the Corresponding Source to be so
+available, or (2) arrange to deprive yourself of the benefit of the
+patent license for this particular work, or (3) arrange, in a manner
+consistent with the requirements of this License, to extend the patent
+license to downstream recipients.  "Knowingly relying" means you have
+actual knowledge that, but for the patent license, your conveying the
+covered work in a country, or your recipient's use of the covered work
+in a country, would infringe one or more identifiable patents in that
+country that you have reason to believe are valid.
+
+  If, pursuant to or in connection with a single transaction or
+arrangement, you convey, or propagate by procuring conveyance of, a
+covered work, and grant a patent license to some of the parties
+receiving the covered work authorizing them to use, propagate, modify
+or convey a specific copy of the covered work, then the patent license
+you grant is automatically extended to all recipients of the covered
+work and works based on it.
+
+  A patent license is "discriminatory" if it does not include within
+the scope of its coverage, prohibits the exercise of, or is
+conditioned on the non-exercise of one or more of the rights that are
+specifically granted under this License.  You may not convey a covered
+work if you are a party to an arrangement with a third party that is
+in the business of distributing software, under which you make payment
+to the third party based on the extent of your activity of conveying
+the work, and under which the third party grants, to any of the
+parties who would receive the covered work from you, a discriminatory
+patent license (a) in connection with copies of the covered work
+conveyed by you (or copies made from those copies), or (b) primarily
+for and in connection with specific products or compilations that
+contain the covered work, unless you entered into that arrangement,
+or that patent license was granted, prior to 28 March 2007.
+
+  Nothing in this License shall be construed as excluding or limiting
+any implied license or other defenses to infringement that may
+otherwise be available to you under applicable patent law.
+
+  12. No Surrender of Others' Freedom.
+
+  If conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot convey a
+covered work so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you may
+not convey it at all.  For example, if you agree to terms that obligate you
+to collect a royalty for further conveying from those to whom you convey
+the Program, the only way you could satisfy both those terms and this
+License would be to refrain entirely from conveying the Program.
+
+  13. Use with the GNU Affero General Public License.
+
+  Notwithstanding any other provision of this License, you have
+permission to link or combine any covered work with a work licensed
+under version 3 of the GNU Affero General Public License into a single
+combined work, and to convey the resulting work.  The terms of this
+License will continue to apply to the part which is the covered work,
+but the special requirements of the GNU Affero General Public License,
+section 13, concerning interaction through a network will apply to the
+combination as such.
+
+  14. Revised Versions of this License.
+
+  The Free Software Foundation may publish revised and/or new versions of
+the GNU General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+  Each version is given a distinguishing version number.  If the
+Program specifies that a certain numbered version of the GNU General
+Public License "or any later version" applies to it, you have the
+option of following the terms and conditions either of that numbered
+version or of any later version published by the Free Software
+Foundation.  If the Program does not specify a version number of the
+GNU General Public License, you may choose any version ever published
+by the Free Software Foundation.
+
+  If the Program specifies that a proxy can decide which future
+versions of the GNU General Public License can be used, that proxy's
+public statement of acceptance of a version permanently authorizes you
+to choose that version for the Program.
+
+  Later license versions may give you additional or different
+permissions.  However, no additional obligations are imposed on any
+author or copyright holder as a result of your choosing to follow a
+later version.
+
+  15. Disclaimer of Warranty.
+
+  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
+APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
+HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
+OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
+THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
+IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
+ALL NECESSARY SERVICING, REPAIR OR CORRECTION.
+
+  16. Limitation of Liability.
+
+  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
+THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
+GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
+USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
+DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
+PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
+EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGES.
+
+  17. Interpretation of Sections 15 and 16.
+
+  If the disclaimer of warranty and limitation of liability provided
+above cannot be given local legal effect according to their terms,
+reviewing courts shall apply local law that most closely approximates
+an absolute waiver of all civil liability in connection with the
+Program, unless a warranty or assumption of liability accompanies a
+copy of the Program in return for a fee.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+state the exclusion of warranty; and each file should have at least
+the "copyright" line and a pointer to where the full notice is found.
+
+    <one line to give the program's name and a brief idea of what it does.>
+    Copyright (C) <year>  <name of author>
+
+    This program is free software: you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License
+    along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+Also add information on how to contact you by electronic and paper mail.
+
+  If the program does terminal interaction, make it output a short
+notice like this when it starts in an interactive mode:
+
+    <program>  Copyright (C) <year>  <name of author>
+    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, your program's commands
+might be different; for a GUI interface, you would use an "about box".
+
+  You should also get your employer (if you work as a programmer) or school,
+if any, to sign a "copyright disclaimer" for the program, if necessary.
+For more information on this, and how to apply and follow the GNU GPL, see
+<http://www.gnu.org/licenses/>.
+
+  The GNU General Public License does not permit incorporating your program
+into proprietary programs.  If your program is a subroutine library, you
+may consider it more useful to permit linking proprietary applications with
+the library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.  But first, please read
+<http://www.gnu.org/philosophy/why-not-lgpl.html>.

Copied: sugarj/tags/20120208-before-deletion/editor/build.generated.xml (from r24254, sugarj/trunk/editor/build.generated.xml)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/build.generated.xml	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/build.generated.xml)
@@ -0,0 +1,631 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="build.generated">
+
+        <target name="spoofaximp.default" depends="spoofaximp.default.ctree"/>
+        <target name="spoofaximp.default.ctree" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.ctree,sdf2imp,refresh"/>
+        <target name="spoofaximp.default.jar" depends="check-classpath,init,sdf2table,meta-sdf2table,ppgen,pppack,stratego.aster,java.jar,stratego.jar.helper,sdf2imp,refresh"/>
+    
+        <!-- Initialization -->
+        <available file="${src-gen}/org/sugarj/editor/strategies/Main.java" property="java.jar.enabled"/>
+        <condition property="java.jar.import" value="-la org.sugarj.editor.strategies" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <condition property="java.jar.classpath" value=":${include}/${strmodule}-java.jar" else="">
+            <isset property="java.jar.enabled"/>
+        </condition>
+        <available file="${trans}/${strmodule}.str" property="build.stratego.enabled"/>
+        <dirname property="externaldefdir" file="${externaldef}"/>
+        <condition property="externaldefimport" value="-I &quot;${externaldefdir}&quot;" else="">
+            <isset property="externaldef"/>
+        </condition>
+        <condition property="externaljarimport1" value=":${externaljar}" else="">
+            <isset property="externaljar"/>
+        </condition>
+        <condition property="externaljarimport2" value=":${externaljarx}" else="">
+            <isset property="externaljarx"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <isset property="eclipse.running"/>
+        </condition>
+        <condition property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter">
+            <available classname="org.eclipse.jdt.core.JDTCompilerAdapter"/>
+        </condition>
+        <condition property="externaljarflags" value="${externaljarflags}" else="">
+            <isset property="externaljarflags"/>
+        </condition>
+        <condition property="metasdfmodule.available" value="1">
+            <available file="${syntax}/${metasdfmodule}.sdf"/>
+        </condition>
+        
+        <fail unless="build" message="Please use build.main.xml to build this project or configure the required properties manually"/>
+        <mkdir dir="${build}"/>
+        <mkdir dir="${src-gen}"/>
+        <mkdir dir="${dist}"/>
+        <mkdir dir="${include}"/>
+        <mkdir dir="${lib}"/>
+        <mkdir dir="${syntax}"/>
+
+        <target name="sdf2imp" depends="sdf2table,sdf2imp.eclipse,sdf2imp.standalone,sdf2parenthesize"/>
+        
+        <target name="sdf2imp.eclipse" if="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.metatooling.building.AntDescriptorBuilder" failonerror="true">
+                <arg value="${include}/${esvmodule}.packed.esv"/>
+            </java>
+        </target>
+        
+        <target name="refresh" if="eclipse.running">
+            <eclipse.convertPath fileSystemPath="${basedir}" property="projectdir"/>
+            <eclipse.convertPath fileSystemPath="${syntax}" property="syntaxdir"/>
+            <eclipse.convertPath fileSystemPath="${lib}" property="libdir"/>
+            <eclipse.refreshLocal resource="${libdir}" depth="infinite"/>
+            <eclipse.refreshLocal resource="${syntaxdir}/${sdfmodule}.pp.generated" depth="infinite"/>
+            <eclipse.refreshLocal resource="${libdir}/editor-common.generated.str" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/build.generated.xml" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Builders.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Colorer.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Completions.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Folding.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-References.generated.esv" depth="infinite"/>
+            <eclipse.refreshLocal resource="${projectdir}/editor/${sdfmodule}-Syntax.generated.esv" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${src-gen}" property="eclipse.path.src-gen"/>
+            <eclipse.refreshLocal resource="${eclipse.path.src-gen}" depth="infinite"/>
+            <eclipse.convertPath fileSystemPath="${build}" property="eclipse.path.build"/>
+            <eclipse.refreshLocal resource="${eclipse.path.build}" depth="infinite"/>
+            <!-- Might cause the editor to be reloaded?
+            <eclipse.refreshLocal resource="${projectdir}/include" depth="infinite" />
+            -->
+        </target>
+        
+        <target name="sdf2imp.standalone" unless="eclipse.running" depends="sdf2rtg">
+            <java classname="org.strategoxt.imp.generator.sdf2imp" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${basedir}/editor/${esvmodule}.main.esv"/>
+                <arg value="-p"/>
+                <arg value="${include}/${sdfmodule}.tbl"/>
+            </java>
+        </target>
+        
+        <target name="check-classpath">
+            <available classname="org.strategoxt.imp.generator.sdf2imp" property="check-classpath.available"/>
+            <antcall target="check-classpath.helper"/>  
+        </target>
+        
+        <target name="init" if="eclipse.running">
+            <!-- refresh one file/dir in the project to trigger an Ant rebuild with the next build command -->
+            <java classname="org.strategoxt.imp.metatooling.building.AntForceRefreshScheduler" failonerror="false">
+                <arg value="${include}"/>
+            </java>
+        </target>
+  
+        <target name="check-classpath.helper" unless="check-classpath.available">
+            <echo level="error" message="Could not load the Spoofax plugin loading classes."/>
+            <echo level="error" message="Make sure it is on the class path."/>
+            <echo level="error" message=""/>               
+            <echo level="error" message="In Eclipse, make sure the Ant builder is configured properly:"/>
+            <echo level="error" message="right-click on build.main.xml, go to Run as, Ant build..., JRE tab,"/>
+            <echo level="error" message="and ensure Run in the same JRE as the workspace is selected"/>
+            <echo level="error" message="alternatively, build the project using Build Project in the Project menu"/>
+            <fail/>
+        </target>
+    
+        <target name="sdf2table" depends="make-permissive">
+            <apply executable="${build.strategoxt.sdf}sdf2table" dest="${include}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                
+                <fileset file="${include}/${sdfmodule}-Permissive.def"/>
+                <mapper type="glob" from="*-Permissive.def" to="*.tbl"/>
+            </apply>
+        </target>
+        
+        <target name="meta-sdf2table" if="metasdfmodule.available">
+            <fail unless="eclipse.spoofaximp.jars" message="Property eclipse.spoofaximp.jars must point to the directory containing StrategoMix.def"/>
+            <antcall target="sdf2table">
+                <param name="sdfmodule" value="${metasdfmodule}"/>
+                <param name="build.sdf.imports" value="-Idef &quot;${eclipse.spoofaximp.jars}/StrategoMix.def&quot; ${build.sdf.imports}"/>
+            </antcall>
+            <antcall target="meta-sdf2table.helper"/>
+        </target>
+        
+        <target name="meta-sdf2table.helper" if="eclipse.running">
+           <eclipse.convertPath fileSystemPath="${include}" property="includeresource"/>
+           <eclipse.refreshLocal resource="${includeresource}/${metasdfmodule}.tbl" depth="infinite"/>
+        </target>
+        
+        <target name="make-permissive" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-Permissive.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-Permissive.def" property="permissive-grammar.available"/>
+            <antcall target="make-permissive.helper"/>
+        </target>
+    
+        <target name="make-permissive.helper" unless="permissive-grammar.available">
+            <java classname="org.strategoxt.permissivegrammars.make_permissive" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-Permissive.def"/>
+                <arg line="--optimize on"/>
+            </java>
+        </target>
+
+        <target name="utils-files"> <!-- only useful for builds outside of Eclipse -->
+            <mkdir dir="utils"/>
+            <copy file="${eclipse.spoofaximp.jars}/make_permissive.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/sdf2imp.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.jars}/aster.jar" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.strategojar}" todir="utils" failonerror="false"/>
+        </target>
+    
+        <target name="pack-sdf" unless="externaldef">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.sdf"/>
+                </srcfileset>
+                <srcfileset dir="${lib}">
+                    <include name="**/*.def"/>
+                </srcfileset>
+                <targetfileset file="${include}/${sdfmodule}.def"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.def" property="pack-sdf.available"/>
+            <antcall target="pack-sdf.helper"/>
+        </target>
+    
+        <target name="pack-sdf.helper" unless="pack-sdf.available">
+            <condition property="utils-include" value="-I ${utils}" else="">
+                <available file="${utils}"/>
+            </condition>
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-pack-sdf"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.sdf"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-I"/>
+                <arg value="${syntax}"/>
+                <arg value="-I"/>
+                <arg value="${lib}"/>
+                <arg line="${utils-include}"/>
+                <arg line="${build.sdf.imports}"/>
+            </java>
+        </target>
+    
+        <target name="copy-sdf" if="externaldef">
+            <copy file="${externaldef}" tofile="${include}/${sdfmodule}.def" preservelastmodified="true"/>
+        </target>
+    
+        <target name="copy-jar" if="externaljar">
+            <copy file="${externaljar}" todir="${include}" preservelastmodified="true"/>
+        </target>
+    
+        <target name="rtg2sig" if="build.stratego.enabled" depends="sdf2rtg">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.rtg"/>
+                <targetfileset file="${include}/${sdfmodule}.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.str" property="rtg2sig.available"/>
+            <antcall target="rtg2sig.helper"/>
+        </target>
+    
+        <target name="rtg2sig.helper" unless="rtg2sig.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-rtg2sig"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.str"/>
+                <arg value="--module"/>
+                <arg value="${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2rtg" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}.rtg"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.rtg" property="sdf2rtg.available"/>
+            <antcall target="sdf2rtg.helper"/>
+        </target>
+    
+        <target name="sdf2rtg.helper" unless="sdf2rtg.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2rtg"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.rtg"/>
+                <arg value="--ignore-missing-cons"/>
+                <arg value="-Xnativepath"/>
+                <arg value="${build.strategoxt.sdf}"/>
+            </java>
+        </target>
+        
+        <target name="sdf2parenthesize" depends="pack-sdf,copy-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${include}/${sdfmodule}-parenthesize.str"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}-parenthesize.str" property="sdf2parenthesize.available"/>
+            <antcall target="sdf2parenthesize.helper"/>
+        </target>
+
+        <target name="sdf2parenthesize.helper" unless="sdf2parenthesize.available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-sdf2parenthesize"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-m"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}-parenthesize.str"/>
+                <arg value="--omod"/>
+                <arg value="include/${sdfmodule}-parenthesize"/>
+                <arg value="--main-strategy"/>
+                <arg value="io-${sdfmodule}-parenthesize"/>
+                <arg value="--lang"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--rule-prefix"/>
+                <arg value="${sdfmodule}"/>
+                <arg value="--sig-module"/>
+                <arg value="include/${sdfmodule}"/>
+            </java>
+        </target>
+        
+        <target name="ppgen" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${include}/${sdfmodule}.def"/>
+                <targetfileset file="${syntax}/${sdfmodule}.generated.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.generated.pp.af"/>
+            </dependset>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper"/>
+            <available file="${include}/${sdfmodule}.generated.pp.af" property="ppgen.available"/>
+            <antcall target="ppgen.helper.fallback"/>
+        </target>
+    
+        <target name="ppgen.helper" unless="ppgen.available">
+            <!-- Any failures here are ignored; they are only a problem when imported from Stratego -->
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-ppgen"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.def"/>
+                <arg value="-t"/>
+                <arg value="-b"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+            </java>
+            <java classname="run" failonerror="false">
+                <arg value="org.strategoxt.tools.main-pp-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${include}/${sdfmodule}.generated.pp.af"/>
+                <arg value="-o"/>
+                <arg value="${syntax}/${sdfmodule}.generated.pp"/>
+            </java>
+        </target>
+    
+        <target name="ppgen.helper.fallback" unless="ppgen.available">
+            <echo file="${include}/${sdfmodule}.generated.pp.af" message="PP-Table([])"/>
+        </target>
+        
+        <target name="pppack" if="build.stratego.enabled" depends="pack-sdf">
+            <dependset>
+                <srcfileset file="${syntax}/${sdfmodule}.pp"/>
+                <targetfileset file="${include}/${sdfmodule}.pp.af"/>
+            </dependset>
+            <available file="${syntax}/${sdfmodule}.pp" property="pppack.source-available"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper"/>
+            <available file="${include}/${sdfmodule}.pp.af" property="pppack.available"/>
+            <antcall target="pppack.helper.fallback"/>
+        </target>
+    
+        <target name="pppack.helper" unless="pppack.available" if="pppack.source-available">
+            <java classname="run" failonerror="true">
+                <arg value="org.strategoxt.tools.main-parse-pp-table"/>
+                <arg value="-i"/>
+                <arg value="${syntax}/${sdfmodule}.pp"/>
+                <arg value="-o"/>
+                <arg value="${include}/${sdfmodule}.pp.af"/>
+            </java>
+        </target>
+    
+        <target name="pppack.helper.fallback" unless="pppack.available">
+            <echo file="${include}/${sdfmodule}.pp.af" message="PP-Table([])"/>
+        </target>
+    
+        <!-- Aster to Stratego -->
+        <target name="stratego.aster">
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.available"/>
+            <fileset dir="${basedir}" id="aster-input-set">
+              <include name="**/*.astr"/>
+            </fileset>
+            <pathconvert pathsep=" " setonempty="false" property="aster-input" refid="aster-input-set"/>
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.astr"/>
+                </srcfileset>
+                <targetfileset file="${trans}/${strmodule}.rtree"/>
+            </dependset>
+            <condition property="aster-output.uptodate">
+                <and>
+                    <isset property="aster-output.available"/>
+                    <available file="${trans}/${strmodule}.rtree"/>
+                </and>
+            </condition>
+            <available file="${trans}/${strmodule}.rtree" property="aster-output.uptodate"/>
+            <antcall target="stratego.aster.helper"/>
+        </target>
+    
+        <target name="stratego.aster.helper" if="aster-input" unless="aster-output.uptodate">
+            <java classname="org.strategoxt.aster.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg line="${aster-input}"/>
+            </java>
+        </target>
+        
+        <target name="java.jar" if="java.jar.enabled">
+            <jar basedir="${build}" excludes="trans/**" update="true" destfile="${include}/${strmodule}-java.jar"/>
+        </target>
+    
+        <!-- Stratego to Java interpreter -->
+        <target name="stratego.ctree" depends="rtg2sig">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${include}/${strmodule}.ctree"/>
+            </dependset>
+            <available file="${include}/${strmodule}.ctree" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${include}/${strmodule}.ctree"/>
+                <param name="build.stratego.extraargs" value="-F"/>
+            </antcall>
+        </target>
+    
+        <!-- Stratego to Java compiler -->
+        <target name="stratego.jar" depends="rtg2sig,utils-files">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/*.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <antcall target="stratego.jvm.helper">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="trans/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <target name="stratego.jar.deletehelper" unless="strc-java.available">
+            <delete>
+                <fileset dir="${src-gen}" includes="trans/**"/>
+                <fileset dir="${build}" includes="trans/**"/>
+            </delete>
+        </target>
+            
+        <target name="stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans}/${strmodule}.str"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+                
+        <!-- begin: targets used for adding debugging instrumentation to stratego -->
+        
+        <!-- 
+            if "debug.the.debug.transformer" is set, debug the debug instrumentation, do not output rtree-files, but str-files
+            Only used by stratego.jvm.helper.debug 
+        -->
+        <condition property="transformer-output" value="" else="--output-rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- 
+            if debug.the.debug.transformer is set then the debug.transformer outputs str files, so the strj-compiler should accept a str-file.
+            if debug.the.debug.transformer is NOT set then the debug.transformer outputs rtree files (much faster generated), so the strj-compiler should accept a rtree-file
+            Only used by stratego.jvm.helper.debug
+        -->
+        <condition property="strj.input.file.type" value="str" else="rtree">
+            <isset property="debug.the.debug.transformer"/>
+        </condition>
+        
+        <!-- value determines which target will be executed.
+            If the file ".debugmode" can be found in the project root call stratego.jar.debug
+            else call stratego.jar
+        -->
+        <condition property="stratego.jar.target" value="call.stratego.jar.debug" else="call.stratego.jar">
+            <available file=".debugmode"/>
+        </condition>
+        
+        <!-- will save the stratego files with debug info in this folder -->
+        <property name="trans-debug" location="trans-debug"/>
+        
+        <!-- this helper target determines what target to call, based on debug.build.enabled -->
+        <target name="stratego.jar.helper">
+            <antcall target="${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar unless debug.build.enabled property is set --> 
+        <target name="call.stratego.jar" depends="stratego.jar">
+            <echo message="call.stratego.jar - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- call stratego.jar.debug when debug.build.enabled property is set -->
+        <target name="call.stratego.jar.debug" depends="stratego.jar.debug">
+            <echo message="call.stratego.jar.debug - ${stratego.jar.target}"/>
+        </target>
+        
+        <!-- copy stratego runtime jars to utils folder -->
+        <target name="utils-files-debug" depends="utils-files">
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-jar}" todir="utils" failonerror="false"/>
+            <copy file="${eclipse.spoofaximp.stratego-debug-runtime-java-jar}" todir="utils" failonerror="false"/>
+        </target>
+        
+        <!-- Stratego to Java compiler with debugging capabilities -->
+        <target name="stratego.jar.debug" depends="rtg2sig,utils-files-debug">
+            <dependset>
+                <srcfileset dir="${basedir}">
+                    <include name="**/*.str"/>
+                    <include name="**/*.astr"/>
+                    <exclude name="lib/editor-common.generated.str"/>
+                </srcfileset>
+                <targetfileset file="${src-gen}/trans/Main.java"/>
+            </dependset>
+            <available file="${src-gen}/trans/Main.java" property="strc-java.available"/>
+            <antcall target="copy-jar"/>
+            <antcall target="stratego.jar.deletehelper"/>
+            <!-- compile stratego to java -->
+            <antcall target="stratego.jvm.helper.debug">
+                <param name="build.stratego.outputfile" value="${src-gen}/trans/Main.java"/>
+                <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
+            </antcall>
+            <!-- compile java to class -->
+            <javac destdir="${build}" source="1.5" target="1.5" debug="on">
+                <!-- attribute in javac: srcdir="${src-gen}" -->
+                <src path="${src-gen}"/>
+                <!-- attribute in javac: classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"  -->
+                <classpath>
+                    <pathelement path="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}"/> <!-- the path attribute accepts colon- or semicolon-separated lists of locations -->
+                    <pathelement location="utils/stratego-debug-runtime.jar"/> <!-- The location attribute specifies a single file or directory relative to the project's base directory (or an absolute filename) -->
+                    <pathelement location="utils/stratego-debug-runtime-java.jar"/>
+                </classpath>
+                <!-- attribute in javac: includes="trans/**"  -->
+                <include name="trans/**"/>
+            </javac>
+            <!-- copy imported terms -->
+            <copy todir="${build}/trans">
+                <fileset dir="${src-gen}/trans" excludes="**/*.java"/>
+            </copy>
+            <!-- create a jar from the class files -->
+            <jar basedir="${build}" includes="trans/**" destfile="${include}/${strmodule}.tmp.jar"/>
+            <move file="${include}/${strmodule}.tmp.jar" tofile="${include}/${strmodule}.jar"/>
+            <delete><fileset dir="${build}" includes="trans/**"/></delete>
+        </target>
+        
+        <!-- instrument the stratego program and compile it to java -->
+        <target name="stratego.jvm.helper.debug" unless="strc-java.available" if="build.stratego.enabled">
+            <echo message="generate stratego with debug information"/>
+            <echo message="${basedir}"/>
+            <available classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" property="transformer.available"/>
+            <!-- add debug information -->
+              <java classname="org.strategoxt.imp.debug.stratego.transformer.trans.Main" failonerror="true" fork="true">
+                   <classpath>
+                    <pathelement location="${eclipse.spoofaximp.stratego-transformer-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.stratego-transformer-java-jar}"/>
+                       <pathelement location="${eclipse.spoofaximp.strategojar}"/>
+                   </classpath>
+                  <arg value="-i"/>
+                  <arg value="${trans}/${strmodule}.str"/>
+                  <arg value="--gen-dir"/>
+                  <arg value="${trans-debug}"/>
+                  <arg value="--base-dir"/> <!-- set the basedir to the project dir -->
+                  <arg value="${basedir}"/>
+                  <!-- "arg line='val'" val should contain space-separated arguments --> 
+                  <arg line="--charoffset-converter --fail-catch ${transformer-output}"/>
+                  
+                  <!-- arguments should start with two '-'-characters -->
+                  <!-- <arg value="-charoffset-converter"/> --> <!-- create charoffset table -->
+                  <!-- <arg value="-fail-catch"/>  --> <!-- catch failures in where/with-clauses in rules -->
+                  <!-- <arg value="-output-rtree"/> --> 
+            </java>
+            <!-- now compile instrumented stratego to java -->
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <java classname="org.strategoxt.strj.Main" failonerror="true">
+                <arg value="-i"/>
+                <arg value="${trans-debug}/trans/${strmodule}.${strj.input.file.type}"/>
+                <arg value="-o"/>
+                <arg value="${build.stratego.outputfile}"/>
+                <arg value="-p"/>
+                <arg value="trans"/>
+                <arg value="--library"/>
+                <arg value="--clean"/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaljarflags}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; -I &quot;${include}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                <!-- put strategodebuglib.rtree on the include path -->
+                <arg line="-I &quot;${eclipse.spoofaximp.strategodebuglib-folder}&quot;"/>
+                <arg line="-la org.strategoxt.imp.debug.stratego.runtime.trans"/>
+            </java>
+            <delete file="${include}/${strmodule}.rtree" failonerror="false"/>
+            <mkdir dir="${build}/trans"/>
+        </target>
+        
+        
+        <!-- end: targets used for adding debugging instrumentation to stratego -->
+
+
+        <!-- Stratego to C-based native executable -->
+        <target name="stratego.c">
+            <antcall target="stratego.c.helper">
+                <param name="build.stratego.outputpath" value="${basedir}/include"/>
+                <param name="build.stratego.extraargs" value=""/>
+                <param name="build.stratego.extension" value=""/>
+                <param name="build.stratego.compiler" value="strc"/>
+            </antcall>
+        </target>
+        
+        <!-- Helper target for calling the stratego compiler -->
+        <target name="stratego.c.helper" depends="rtg2sig" if="build.stratego.enabled">
+            <apply executable="${build.strategoxt.stratego}/${build.stratego.compiler}" dest="${build.stratego.outputpath}" failonerror="true">
+                <arg value="-i"/>
+                <srcfile/>
+                <arg value="-o"/>
+                <targetfile/>
+                <arg line="${build.stratego.args}"/>
+                <arg line="${build.stratego.extraargs}"/>
+                <arg line="${externaldefimport}"/>
+                <arg line="-I &quot;${lib}&quot; --cache-dir &quot;${basedir}/.cache&quot;"/>
+                
+                <fileset file="${trans}/${strmodule}.str"/>
+                <mapper type="glob" from="*.str" to="*.${build.stratego.extension}"/>
+            </apply>
+        </target>
+        
+        <target name="clean" description="clean up">
+            <delete dir="${build}"/>
+            <delete file="${include}/${sdfmodule}.def"/>
+            <delete dir="${src-gen}/trans"/>
+        </target>
+    </project>
\ No newline at end of file

Copied: sugarj/tags/20120208-before-deletion/editor/build.main.xml (from r24254, sugarj/trunk/editor/build.main.xml)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/build.main.xml	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/build.main.xml)
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+
+<project name="SugarJ" default="all">
+        
+        <!-- Key input modules -->
+        <property name="sdfmodule" value="SugarJ"/>
+        <property name="metasdfmodule" value="Stratego-SugarJ"/>
+        <property name="esvmodule" value="SugarJ"/>
+        <property name="strmodule" value="sugarj"/>
+    
+        <!-- Project directories -->
+        <property name="trans" location="trans"/>
+        <property name="src-gen" location="editor/java"/>
+        <property name="syntax" location="syntax"/>
+        <property name="include" location="include"/>
+        <property name="lib" location="lib"/>
+        <property name="build" location="bin"/>
+        <property name="dist" location="bin/dist"/>
+        
+        <!-- Imports -->
+        <property name="build.sdf.imports" value="
+        	              -Idef ${lib}/Java-15.def
+        	              -Idef ${lib}/Sdf2.def
+        	              -Idef ${lib}/Stratego.def"/>
+        <property name="build.stratego.args" value="
+                        --library
+                        -I &quot;${trans}&quot;
+                        -I &quot;${basedir}&quot;
+                        -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm"/>
+        
+        <!-- Optional: external .def and .jar locations
+        <property name="externaldef" location="syntax/${sdfmodule}.def"/>
+        <property name="externaljar" value="../lib.jar"/>
+        <property name="externaljarflags" value="-la org.lib"/>
+        -->
+    
+        <!-- Environment configuration for command-line builds -->
+        <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
+            <isset property="eclipse.spoofaximp.nativeprefix"/>
+        </condition>
+        <property name="build.strategoxt.stratego" location="${user.home}/.nix-profile/bin"/>
+    
+        <import file="build.generated.xml"/>
+    
+        <!-- Main target -->
+        <target name="all" depends="spoofaximp.default.ctree"/>
+    </project>
\ No newline at end of file

Copied: sugarj/tags/20120208-before-deletion/editor/build.properties (from r24254, sugarj/trunk/editor/build.properties)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/build.properties	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/build.properties)
@@ -0,0 +1,8 @@
+source.. = editor/java/
+output.. = bin/
+bin.includes = META-INF/,\
+               plugin.xml,\
+               include/,\
+               bin/,\
+               lib/,\
+               .

Copied: sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Builders.esv (from r24254, sugarj/trunk/editor/editor/SugarJ-Builders.esv)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Builders.esv	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/editor/SugarJ-Builders.esv)
@@ -0,0 +1,15 @@
+
+module SugarJ-Builders
+
+builders
+                                                                      
+  // This file can be used for custom analysis and builder rules.     
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
+
+builders
+                                                                                                              
+  provider : include/sugarj.ctree                                                                             
+  provider : include/sugarj-java.jar                                                                          
+                                                                                                              
+  builder  : "Show abstract syntax (for selection)" = generate-aterm (openeditor) (realtime) (source)

Copied: sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Colorer.esv (from r24254, sugarj/trunk/editor/editor/SugarJ-Colorer.esv)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Colorer.esv	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/editor/SugarJ-Colorer.esv)
@@ -0,0 +1,7 @@
+module SugarJ-Colorer
+
+colorer
+                                                                      
+  // This file can be used for custom colorer rules.                  
+  //                                                                  
+  // See the imported file for a brief introduction and examples.     
\ No newline at end of file

Copied: sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Completions.esv (from r24254, sugarj/trunk/editor/editor/SugarJ-Completions.esv)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Completions.esv	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/editor/SugarJ-Completions.esv)
@@ -0,0 +1,8 @@
+module SugarJ-Completions
+
+completions
+                                                                   
+  // This file is used to define content completion.               
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
+                                                                   

Copied: sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Folding.esv (from r24254, sugarj/trunk/editor/editor/SugarJ-Folding.esv)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Folding.esv	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/editor/SugarJ-Folding.esv)
@@ -0,0 +1,7 @@
+module SugarJ-Folding
+
+folding
+  
+  // This file can be used for custom folding rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Copied: sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Outliner.esv (from r24254, sugarj/trunk/editor/editor/SugarJ-Outliner.esv)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Outliner.esv	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/editor/SugarJ-Outliner.esv)
@@ -0,0 +1,7 @@
+module SugarJ-Outliner
+
+outliner
+  
+  // This file can be used for custom outliner rules.
+  //
+  // See the imported file for a brief introduction and examples.
\ No newline at end of file

Copied: sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-References.esv (from r24254, sugarj/trunk/editor/editor/SugarJ-References.esv)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-References.esv	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/editor/SugarJ-References.esv)
@@ -0,0 +1,13 @@
+module SugarJ-References
+
+references
+                                                                                                   
+  // This file can be used to specify reference resolving and hover help, and content completion.  
+  //                                                                                               
+  // See the imported file for a brief introduction and examples.                                  
+                                                                                                   
+
+references
+                
+//  reference _ : editor-resolve
+//  hover _     : editor-hover
\ No newline at end of file

Copied: sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Syntax.esv (from r24254, sugarj/trunk/editor/editor/SugarJ-Syntax.esv)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/editor/SugarJ-Syntax.esv	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/editor/SugarJ-Syntax.esv)
@@ -0,0 +1,7 @@
+module SugarJ-Syntax
+
+language
+                                                                   
+  // This file can be used for custom syntax rules.                
+  //                                                               
+  // See the imported file for a brief introduction and examples.  
\ No newline at end of file

Copied: sugarj/tags/20120208-before-deletion/editor/editor/SugarJ.main.esv (from r24254, sugarj/trunk/editor/editor/SugarJ.main.esv)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/editor/SugarJ.main.esv	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/editor/SugarJ.main.esv)
@@ -0,0 +1,16 @@
+module SugarJ.main
+
+imports SugarJ-Builders SugarJ-Colorer SugarJ-Completions SugarJ-Folding SugarJ-Outliner SugarJ-References SugarJ-Syntax
+
+language General properties
+                  
+  name          : SugarJ
+  id            : org.sugarj.editor
+  extends       : Root
+                  
+  description   : "Spoofax/IMP-generated editor for the SugarJ language"
+  url           : http://strategoxt.org
+                  
+  extensions    : sugj
+  table         : include/SugarJ.tbl
+  start symbols : SugarCompilationUnit
\ No newline at end of file

Copied: sugarj/tags/20120208-before-deletion/editor/plugin.xml (from r24254, sugarj/trunk/editor/plugin.xml)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/plugin.xml	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/plugin.xml)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<?eclipse version="3.0"?>
+
+<plugin>
+       <extension point="org.eclipse.imp.runtime.languageDescription">
+          <language extensions="sugj" description="SugarJ" language="SugarJ" derivedFrom="DynamicRoot" validator="org.sugarj.editor.SugarJValidator" validatorClass="org.sugarj.editor.SugarJValidator"></language>
+       </extension>
+       <extension id="org.sugarj.editor.parser" name="SugarJ Parser" point="org.eclipse.imp.runtime.parser">
+          <parser class="org.sugarj.editor.SugarJParseController" language="SugarJ">
+          </parser>
+       </extension>
+       <extension
+             id="SugarJBuilder"
+             name="SugarJ builder"
+             point="org.eclipse.core.resources.builders">
+          <builder>
+	         <run class="org.sugarj.builder.Builder">
+	            <parameter name="optimize" value="true"/>
+	            <parameter name="comment" value="SugarJ Builder"/>
+	         </run>
+          </builder>
+       </extension>    
+    </plugin>

Copied: sugarj/tags/20120208-before-deletion/editor/syntax/SugarJ.pp (from r24254, sugarj/trunk/editor/syntax/SugarJ.pp)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/syntax/SugarJ.pp	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/syntax/SugarJ.pp)
@@ -0,0 +1,2 @@
+%% Pretty printing table (see also SugarJ.generated.pp)
+[]

Copied: sugarj/tags/20120208-before-deletion/editor/syntax/SugarJ.sdf (from r24254, sugarj/trunk/editor/syntax/SugarJ.sdf)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/editor/syntax/SugarJ.sdf	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/editor/syntax/SugarJ.sdf)
@@ -0,0 +1,7 @@
+module SugarJ
+exports
+  context-free start-symbols
+    SugarCompilationUnit
+  
+  context-free syntax
+    "abc" -> SugarCompilationUnit {cons("abc")}
\ No newline at end of file

Copied: sugarj/tags/20120208-before-deletion/update-site/.project (from r24254, sugarj/trunk/update-site/.project)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/update-site/.project	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/update-site/.project)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.sugarj.update-site</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.pde.UpdateSiteBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.UpdateSiteNature</nature>
+	</natures>
+</projectDescription>

Copied: sugarj/tags/20120208-before-deletion/update-site/copy-to-server.sh (from r24254, sugarj/trunk/update-site/copy-to-server.sh)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/update-site/copy-to-server.sh	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/update-site/copy-to-server.sh)
@@ -0,0 +1,12 @@
+#!/bin/sh
+
+DESTDIR=/Volumes/seba\@login/public_html/projects/sugarj/update
+
+cp -Rn features/* $DESTDIR/features
+cp -Rn plugins/* $DESTDIR/plugins
+cp -Rn web/* $DESTDIR/web
+cp -f *.jar $DESTDIR
+cp -f *.html $DESTDIR
+cp -f *.xml $DESTDIR
+
+

Copied: sugarj/tags/20120208-before-deletion/update-site/site.xml (from r24254, sugarj/trunk/update-site/site.xml)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/tags/20120208-before-deletion/update-site/site.xml	Wed Feb  8 10:43:33 2012	(r24256, copy of r24254, sugarj/trunk/update-site/site.xml)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<site>
+   <description name="SugarJ" url="sugarj.org/update">
+      SugarJ
+   </description>
+   <feature url="features/org.sugarj.editor_1.3.1.201111161843.jar" id="org.sugarj.editor" version="1.3.1.201111161843">
+      <category name="SugarJ"/>
+   </feature>
+   <category-def name="SugarJ" label="SugarJ">
+      <description>
+         SugarJ plugin
+      </description>
+   </category-def>
+</site>


From seba at informatik.uni-marburg.de  Wed Feb  8 11:58:21 2012
From: seba at informatik.uni-marburg.de (Sebastian Erdweg)
Date: Wed, 08 Feb 2012 10:58:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24257 - in
	sugarj/trunk: . case-studies compiler editor feature stdlib
	update-site
Message-ID: <20120208105821.816027F80F1@mx1.tudelft.nl>

Author: SebastianErdweg
Date: Wed Feb  8 10:58:20 2012
New Revision: 24257
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24257&sc=1

Log:
This repository has moved to GIT. Please find us here: http://github.com/seba--/sugarj

Added:
   sugarj/trunk/MOVED
Deleted:
   sugarj/trunk/case-studies/
   sugarj/trunk/compiler/
   sugarj/trunk/editor/
   sugarj/trunk/feature/
   sugarj/trunk/readme.txt
   sugarj/trunk/stdlib/
   sugarj/trunk/update-site/

Added: sugarj/trunk/MOVED
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ sugarj/trunk/MOVED	Wed Feb  8 10:58:20 2012	(r24257)
@@ -0,0 +1,2 @@
+This repository has moved to GIT. Please find us here
+  http://github.com/seba--/sugarj

From tobivollebregt at gmail.com  Wed Feb  8 13:07:46 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 12:07:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24258 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor trans
Message-ID: <20120208120746.4A83E108C016@mx3.tudelft.nl>

Author: tvo
Date: Wed Feb  8 12:07:45 2012
New Revision: 24258
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24258&sc=1

Log:
TemplateLang: Builder for abstract syntax of pretty printer

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Wed Feb  8 10:58:20 2012	(r24257)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Wed Feb  8 12:07:45 2012	(r24258)
@@ -24,7 +24,8 @@
   builder  : "Generate ESV (concrete, for selection)" = generate-esv-concrete (openeditor) (realtime)
   builder  : "Generate SDF (abstract, for selection)" = generate-sdf-abstract (openeditor) (realtime)
   builder  : "Generate SDF (concrete, for selection)" = generate-sdf-concrete (openeditor) (realtime)
-  builder  : "Generate BOX-based PP (for selection)" = generate-box-pp (openeditor) (realtime)
+  builder  : "Generate BOX-based PP (abstract, for selection)" = generate-box-pp-abstract (openeditor) (realtime)
+  builder  : "Generate BOX-based PP (concrete, for selection)" = generate-box-pp-concrete (openeditor) (realtime)
 
 refactorings
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Wed Feb  8 10:58:20 2012	(r24257)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Wed Feb  8 12:07:45 2012	(r24258)
@@ -77,7 +77,13 @@
     collect-om(?TemplateProduction(_, _, _));
     <template-sections-to-stratego-string> [TemplateSection(<id>)]
 
-  generate-box-pp:
+  generate-box-pp-abstract =
+    generate-aterm(
+      collect-om(?TemplateProduction(_, _, _));
+      <template-sections-to-stratego> [TemplateSection(<id>)]
+    )
+
+  generate-box-pp-concrete:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       filename := <guarantee-extension(|"generated.str")> path;

From tobivollebregt at gmail.com  Wed Feb  8 13:07:49 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 12:07:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24259 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template
Message-ID: <20120208120749.0D66F7F812E@mx1.tudelft.nl>

Author: tvo
Date: Wed Feb  8 12:07:48 2012
New Revision: 24259
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24259&sc=1

Log:
TemplateLang: Less unnecessary rebuilds

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Wed Feb  8 12:07:45 2012	(r24258)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Wed Feb  8 12:07:48 2012	(r24259)
@@ -134,7 +134,7 @@
       </delete>
   </target>
 
-  <target name="libtemplatelang.stratego.jvm.helper" unless="strc-java.available" if="build.stratego.enabled">
+  <target name="libtemplatelang.stratego.jvm.helper" unless="libtemplatelang.strc-java.available" if="build.stratego.enabled">
       <java classname="org.strategoxt.strj.Main" failonerror="true">
           <arg value="-i"/>
           <arg value="${trans}/templatelang/main.str"/>

From tobivollebregt at gmail.com  Wed Feb  8 13:07:52 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 12:07:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24260 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans: . utils
Message-ID: <20120208120752.25579108C020@mx3.tudelft.nl>

Author: tvo
Date: Wed Feb  8 12:07:51 2012
New Revision: 24260
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24260&sc=1

Log:
SpoofaxLang: Remove unnecessary overrides

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Wed Feb  8 12:07:48 2012	(r24259)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/common.str	Wed Feb  8 12:07:51 2012	(r24260)
@@ -23,7 +23,11 @@
 	editor/main
 
 
-rules 
+rules
+
+  // Override the libtemplatelang strategies to plug in the SpoofaxLang-specific
+  // compile-unload cleanup strategy.
+
   //several events regarding the current compiler session. 
   override with-spxverify(s) = with-verify( s ,  compile-unload )  
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Wed Feb  8 12:07:48 2012	(r24259)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/contract.str	Wed Feb  8 12:07:51 2012	(r24260)
@@ -6,42 +6,11 @@
 
 rules 
 
-  // FIXME: Too much overrides here. (The overridden strats are in libtemplatelang.)
-  
-  override with-verify(s, on-fail-exec , msg) = where(verify-stratego(s, on-fail-exec, !$["Internal error: with clause failed unexpectedly. More : [<msg>]]))
-  
-  override with-verify(s, on-fail-exec) = where(verify-stratego(s, on-fail-exec, !"Internal error: with clause failed unexpectedly"))
-  
-  override verify-stratego(s,on-fail-exec,message) =
-    s
-  <+
-    try(on-fail-exec);
-    log(|Critical(), <as-string(message)>, <id>);
-    prim("SSL_stacktrace_get_all_frame_names");
-    report-failure
-
-  
-  override as-string(s) = s; as-string <+ !"<?>"
-
-  override as-string = is-string <+ write-to-string
-
-
-    
-//Draft of code contracts for stratego
-rules 
-  override verify(s | arg , expected) = contracts(contract-requires(s| arg , expected))
-  
-  override verify(s | arg) = contracts(contract-requires(s| arg))
-  
-  override verify(s) = contracts(contract-requires(s))
- 
-rules
-
-	override contract-requires ( s , on-fail | arg , expected) =
-			contract-requires ( s | arg , expected)
-		<+
-			on-fail
+  // Other contract strategies are in
+  //   org.strategoxt.imp.editors.template/trans/templatelang/utils/contract
 
+  // The two strategies below are overridden because they report errors
+  // through a different strategy. 
 
 	override contract-requires ( s | arg , expected) =
 			where(<s> arg)
@@ -50,32 +19,8 @@
 			; fail
 
 
-	override contract-requires ( s | arg ) = <contract-requires (s)> arg
-
-
 	override contract-requires (s) =
 			where(s)
 		<+
 			dbg-analysis(! $[Requires Failed - argument :[<print-as-string>] ]  | "Contact" , <debug-level-WARNING>) 
 			; fail
-
-
-	override contracts ( s ) =  where(s) <+ fail
-
-
-	override with-verification (preconditions, s ) = with-verification (preconditions, s , id)
-
-
-	override with-verification (preconditions, s , postconditions) = where(preconditions) ; s ; where(postconditions) <+ fail
-
-
-rules
-
-	override run-strategy(  s  , on-fail | msg) = s <+  <debug> msg ; on-fail
-
-rules
-	override String = is-string
-
-	override List = is-list
-
-	override ListOf(s) = list-loop(s)

From gabrielkonat at gmail.com  Wed Feb  8 13:43:54 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 08 Feb 2012 12:43:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24261 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120208124354.E0A847F8039@mx1.tudelft.nl>

Author: gkonat
Date: Wed Feb  8 12:43:54 2012
New Revision: 24261
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24261&sc=1

Log:
Moved around and removed some unnecessary code in index and analysis library to be less confusing.

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb  8 12:07:51 2012	(r24260)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb  8 12:43:54 2012	(r24261)
@@ -449,7 +449,7 @@
    *   <index-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
    */
   index-get:
-    template -> <index-get-first> <index-get-all> template
+    template -> <?[<id>|_]> <index-get-all> template
       
   /**
    * Get the value of first index entry that matches the given template, or fail.
@@ -460,46 +460,7 @@
    *   <index-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
    */
   index-get-value:
-    template -> <index-value> <index-get-first> <index-get-all> template
- 
-  /**
-   * Gets the URI for given term.
-   */
-  index-uri:
-    Def(uri) -> uri
-    
-  /**
-   * Gets the URI for given term.
-   */
-  index-uri:
-    Use(uri, _) -> uri
-    
-  /**
-   * Gets the URI for given term.
-   */
-  index-uri:
-    Read(uri) -> uri
- 
-  // TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
-  /**
-   * Gets the URI for given term.
-   */
-  index-uri:
-    ReadWildcard(uri, _) -> uri
-    
-  /**
-   * Gets the URI for given term.
-   */ 
-  index-uri:
-    term -> <?_#(<index-get-first>)> term
-    where 
-      not(<?Def(_) <+ ?DefData(_, _, _) <+ ?Use(_, _) <+ ?Read(_) <+ ?ReadWildcard(_, _)> term)
-   
-  /**
-   * Gets the URI for given term.
-   */
-  index-uri:
-    x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
+    template -> <index-value> <?[<id>|_]> <index-get-all> template
    
   /**
    * Gets the namespace part of the URI for given term.
@@ -518,40 +479,8 @@
       else
         path' := path
       end
-
-  /**
-   * Gets the value part for given term.
-   */ 
-  index-value:
-    Def(value) -> value
-    
-  /**
-   * Gets the value part for given term.
-   */ 
-  index-value:
-    Use(_, value) -> value
     
   /**
-   * Gets the value part for given term.
-   */ 
-  index-value:
-    Read(value) -> value
-    
-  /**
-   * Gets the value part for given term.
-   */ 
-  index-value:
-    ReadWildcard(_, value) -> value
-    
-  /**
-   * Gets the value part for given term.
-   */ 
-  index-value:
-    term -> <?_#(<index-get-second>)> term
-    where 
-      not(<?Def(_) <+ ?DefData(_, _, _) <+ ?Use(_, _) <+ ?Read(_) <+ ?ReadWildcard(_, _)> term)  
- 
-  /**
    * Determines if a given AST node is a definition site,
    * according to the syntax.
    */
@@ -838,7 +767,38 @@
       end
     <+
       defs := []
+       
+/** @internal */
+rules // URI and value projections
+       
+  index-uri-impl:
+    Def(uri) -> uri
+    
+  index-uri-impl:
+    Use(uri, _) -> uri
+    
+  index-uri-impl:
+    Read(uri) -> uri
+    
+  index-uri-impl:
+    x{[namespace | path]} -> [<index-namespace-unwrap> namespace | path]
  
+  // TODO: Should second part of ReadWildcard be included in the URI, between namespace and path?
+  index-uri-impl:
+    ReadWildcard(uri, _) -> uri
+
+  index-value-impl:
+    Def(value) -> value
+
+  index-value-impl:
+    Use(_, value) -> value
+
+  index-value-impl:
+    Read(value) -> value
+    
+  index-value-impl:
+    ReadWildcard(_, value) -> value
+       
 /** @internal */
 rules // Internal helpers
        

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Wed Feb  8 12:07:51 2012	(r24260)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Wed Feb  8 12:43:54 2012	(r24261)
@@ -145,7 +145,7 @@
    *   <indexlib-get> Def([Entity(), "Bar"]) => Def([Entity(), "Bar"])
    */
   indexlib-get:
-    template -> <index-get-first> <indexlib-get-all> template
+    template -> <?[<id>|_]> <indexlib-get-all> template
    
   /**
    * Get the value of first index entry that matches the given template, or fail.
@@ -156,7 +156,7 @@
    *   <indexlib-get-value> DefData([Entity(), "Bar"], Type(), ()) => TYPE("Bar")
    */
   indexlib-get-value:
-    template -> <index-value> <index-get-first> <indexlib-get-all> template
+    template -> <index-value> <?[<id>|_]> <indexlib-get-all> template
  
   /**
    * Updates the "last updated" timestamp for the given service name.
@@ -182,26 +182,34 @@
    * Queries if given index file is a 'fake' file for storing internal data.
    */
   index-is-fake-file = string-starts-with(|"/.internal")
-
+    
   /**
-   * Gets the URI for given term.
+   * Gets the URI part for given term.
    */ 
-  index-uri:
-    DefData(uri, _, _) -> uri
-    
+  index-uri = index-uri-impl <+ index-uri-generic
+  
   /**
    * Gets the value part for given term.
-   */ 
-  index-value:
-    DefData(_, _, value) -> value
+   */  
+  index-value = index-value-impl <+ index-value-generic
       
+/** @internal */
+rules // URI and value projections
+	
+  index-uri-impl:
+    DefData(uri, _, _) -> uri
+
+  index-uri-generic:
+    term -> <?_#(<?[<id>|_]>)> term
+  
+  index-value-impl:
+    DefData(_, _, value) -> value
+    
+  index-value-generic:
+    term -> <?_#(<?[_, <id>|_]> )> term
+     
+/** @internal */ 
 rules // Internal helpers
   
   index-namespace-unwrap =
     \Unresolved(n) -> n\ <+ id
-    
-  index-get-first:
-    [first|_] -> first
-    
-  index-get-second:
-    [_,second|_] -> second 

From gabrielkonat at gmail.com  Wed Feb  8 13:56:16 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 08 Feb 2012 12:56:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24262 -
	spoofax-contrib/separate-compilation-examples/c-without-macros
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-compil...
Message-ID: <20120208125616.600BF108C052@mx3.tudelft.nl>

Author: gkonat
Date: Wed Feb  8 12:56:16 2012
New Revision: 24262
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24262&sc=1

Log:
Moved compilation code to separate stratego file.

Added:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml	Wed Feb  8 12:43:54 2012	(r24261)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml	Wed Feb  8 12:56:16 2012	(r24262)
@@ -42,9 +42,10 @@
         <!-- Main target -->
         <target name="all" depends="copy-files, spoofaximp.default.ctree"/>
       
-        <!-- Copy analysis and index library from naming experiment -->
+        <!-- Copy libraries from naming experiment -->
         <target name="copy-files">
-            <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
             <copyfile dest="lib/index-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str"/>
+            <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
+        	  <copyfile dest="lib/compilation-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str"/>
         </target>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Wed Feb  8 12:43:54 2012	(r24261)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Wed Feb  8 12:56:16 2012	(r24262)
@@ -8,6 +8,7 @@
   lib/editor-common.generated
   lib/index-library
   lib/analysis-library
+  lib/compilation-library
   check
   analysis-manual
   analysis-generated

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml	Wed Feb  8 12:43:54 2012	(r24261)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml	Wed Feb  8 12:56:16 2012	(r24262)
@@ -42,9 +42,10 @@
         <!-- Main target -->
         <target name="all" depends="copy-files, spoofaximp.default.ctree"/>
       
-        <!-- Copy analysis and index library from naming experiment -->
+        <!-- Copy libraries from naming experiment -->
         <target name="copy-files">
-            <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
             <copyfile dest="lib/index-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str"/>
+            <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
+            <copyfile dest="lib/compilation-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str"/>
         </target>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Wed Feb  8 12:43:54 2012	(r24261)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Wed Feb  8 12:56:16 2012	(r24262)
@@ -8,6 +8,7 @@
   lib/editor-common.generated
   lib/index-library
   lib/analysis-library
+  lib/compilation-library
   check
   analysis-manual
   analysis-generated

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml	Wed Feb  8 12:43:54 2012	(r24261)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml	Wed Feb  8 12:56:16 2012	(r24262)
@@ -42,9 +42,10 @@
         <!-- Main target -->
         <target name="all" depends="copy-files, spoofaximp.default.ctree"/>
 	
-        <!-- Copy analysis and index library from naming experiment -->
+        <!-- Copy libraries from naming experiment -->
         <target name="copy-files">
-            <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
             <copyfile dest="lib/index-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str"/>
+            <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
+            <copyfile dest="lib/compilation-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str"/>
         </target>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Wed Feb  8 12:43:54 2012	(r24261)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Wed Feb  8 12:56:16 2012	(r24262)
@@ -8,6 +8,7 @@
   lib/editor-common.generated
   lib/index-library
   lib/analysis-library
+  lib/compilation-library
   check
   generate
   prettyprint

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Wed Feb  8 12:43:54 2012	(r24261)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Wed Feb  8 12:56:16 2012	(r24262)
@@ -9,6 +9,7 @@
   lib/editor-common.generated
   lib/index-library
   lib/analysis-library
+  lib/compilation-library
   analysis-generated
   types
   util

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb  8 12:43:54 2012	(r24261)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb  8 12:56:16 2012	(r24262)
@@ -33,9 +33,6 @@
   adjust-index-path(is-def |namespace, path) = fail
  
   // adjust-index-path-from-filesystem(|project-path, path)
-  
-  // Should compile given analysed ast.
-  index-compile-ast(|file, subfile, project-path) = fail
  
 rules // analysis traversals
   
@@ -301,71 +298,6 @@
       appl'          := <all(\(a, _) -> a\)> appl;
       unzipped-parts := <concat> <get-appl-arguments(\(_, b) -> b\) <+ map(\(_, b) -> b\) <+ ![]> appl
  
-rules // compilation
-  
-  index-schedule-compilation = 
-    queue-strategy(|"index-compilation", "Compiling!"); !None()
-    
-  index-compilation:
-    (ast, _, _, path, project-path) -> <index-compilation(|path, project-path)> ast
-  
-  index-compilation(|path, project-path):
-    ast -> None()
-    with
-      // Init
-      full-path := $[[project-path]/[path]];
-      language  := <index-origin-language> ast;
-      index-setup(|language, [project-path])
-    with
-      // Get all changes files by looking at the timestamps.
-      changedFiles      := <index-timestamp-get-updates(|"compile")>;
-      
-      // Determine the files to compile by looking at dependencies.
-      allDependentFiles := <make-set> <mapconcat(index-get-dependent-files)> changedFiles;
-      files             := <make-set> <conc> (allDependentFiles, changedFiles);
-      
-      // Restore compile time reads.
-      <filter(index-compilation-restore-reads)> files;
-      
-      // Compile the files
-      <filter(index-compilation-file(|language, project-path))> files;
-      
-      // Update timestamps to current time.
-      index-timestamp-set-updated(|"compile")
-
-  index-compilation-file(|language, project-path):
-    (file, subfile) -> None()
-    where
-      not(<is-test-file <+ index-is-fake-file> file) // Don't try to compile testing language or 'fake' files.
-    with
-      // Parse and analyze ast.
-      ast                                 := <parse-file> file;
-      AnalysedResult(ast', _, _, _, _, _) := <analyze-top-internal(|Compile(), language, file)> (ast, file, project-path)
-    with
-      {| Index-ReadSet:
-        readSet := <new-iset>;
-        rules(Index-ReadSet: _ -> readSet);
-        
-        // Compile file
-        <index-compile-ast(|file, subfile, project-path)> ast';
-        
-	      // Store compile-time reads.
-	      reads := <iset-elements> readSet;
-	      <index-add-all(|(file, subfile))> reads;
-	      <index-add-all(|<index-compilation-file-tuple> (file, subfile))> reads
-      |}
-      
-  index-compilation-restore-reads:
-    (file, subfile) -> None()
-    with
-      compilationFiles := <index-compilation-file-tuple> (file, subfile);
-      reads := <index-get-all-in-file> compilationFiles;
-      <index-add-all(|(file, subfile))> reads;
-      <index-clear-file> compilationFiles
-      
-  index-compilation-file-tuple:
-    (file, subfile) -> ($[/.internal/reads/compile/[file]], subfile)
- 
 rules // index API primitives
  
   /**

Added: spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Wed Feb  8 12:56:16 2012	(r24262)
@@ -0,0 +1,77 @@
+module lib/compilation-library
+
+imports
+  libstratego-lib
+  lib/editor-common.generated
+  lib/index-library
+  lib/analysis-library
+  
+rules // Extension points
+    
+  // Should compile given analysed ast.
+  index-compile-ast(|file, subfile, project-path) = fail
+  
+rules // Compilation
+  
+  index-schedule-compilation = 
+    queue-strategy(|"index-compilation", "Compiling!"); !None()
+    
+  index-compilation:
+    (ast, _, _, path, project-path) -> <index-compilation(|path, project-path)> ast
+  
+  index-compilation(|path, project-path):
+    ast -> None()
+    with
+      // Init
+      full-path := $[[project-path]/[path]];
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path])
+    with
+      // Get all changes files by looking at the timestamps.
+      changedFiles      := <index-timestamp-get-updates(|"compile")>;
+      
+      // Determine the files to compile by looking at dependencies.
+      allDependentFiles := <make-set> <mapconcat(index-get-dependent-files)> changedFiles;
+      files             := <make-set> <conc> (allDependentFiles, changedFiles);
+      
+      // Restore compile time reads.
+      <filter(index-compilation-restore-reads)> files;
+      
+      // Compile the files
+      <filter(index-compilation-file(|language, project-path))> files;
+      
+      // Update timestamps to current time.
+      index-timestamp-set-updated(|"compile")
+
+  index-compilation-file(|language, project-path):
+    (file, subfile) -> None()
+    where
+      not(<is-test-file <+ index-is-fake-file> file) // Don't try to compile testing language or 'fake' files.
+    with
+      // Parse and analyze ast.
+      ast                                 := <parse-file> file;
+      AnalysedResult(ast', _, _, _, _, _) := <analyze-top-internal(|Compile(), language, file)> (ast, file, project-path)
+    with
+      {| Index-ReadSet:
+        readSet := <new-iset>;
+        rules(Index-ReadSet: _ -> readSet);
+        
+        // Compile file
+        <index-compile-ast(|file, subfile, project-path)> ast';
+        
+        // Store compile-time reads.
+        reads := <iset-elements> readSet;
+        <index-add-all(|(file, subfile))> reads;
+        <index-add-all(|<index-compilation-file-tuple> (file, subfile))> reads
+      |}
+      
+  index-compilation-restore-reads:
+    (file, subfile) -> None()
+    with
+      compilationFiles := <index-compilation-file-tuple> (file, subfile);
+      reads := <index-get-all-in-file> compilationFiles;
+      <index-add-all(|(file, subfile))> reads;
+      <index-clear-file> compilationFiles
+      
+  index-compilation-file-tuple:
+    (file, subfile) -> ($[/.internal/reads/compile/[file]], subfile)

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Wed Feb  8 12:43:54 2012	(r24261)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Wed Feb  8 12:56:16 2012	(r24262)
@@ -8,6 +8,7 @@
   lib/editor-common.generated
   lib/index-library
   lib/analysis-library
+  lib/compilation-library
   check
   generate
   prettyprint

From gabrielkonat at gmail.com  Wed Feb  8 14:18:36 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 08 Feb 2012 13:18:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24263 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120208131836.925257F8137@mx1.tudelft.nl>

Author: gkonat
Date: Wed Feb  8 13:18:36 2012
New Revision: 24263
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24263&sc=1

Log:
Fixed non-existing files failing the project compilation and non-existing files are removed from the index.

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb  8 12:56:16 2012	(r24262)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb  8 13:18:36 2012	(r24263)
@@ -81,6 +81,8 @@
     ?(_, path, project-path); analyze-top-internal(|phase, language, $[[project-path]/[path]])
   analyze-top-internal(|phase, language, full-path):
     (ast, path, project-path) -> AnalysedResult(ast5, defs, uses, data', added, removed)
+    where
+      <file-exists> full-path
     with
       // Init
       index-setup(|language, [project-path])
@@ -132,6 +134,15 @@
 	    else
 	      (added, removed) := ([], [])
       end
+      
+  // If given file to analyze does not exist, remove it from the index.
+  analyze-top-internal(|phase, language, full-path):
+    (ast, path, project-path) -> None()
+    where
+      not(<file-exists> full-path)
+    with
+      index-setup(|language, [project-path]);
+      <index-clear-file> full-path
      
   analyze-diff:
     (defs1, defs2) -> (added, removed)

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Wed Feb  8 12:56:16 2012	(r24262)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Wed Feb  8 13:18:36 2012	(r24263)
@@ -46,6 +46,8 @@
   index-compilation-file(|language, project-path):
     (file, subfile) -> None()
     where
+      <file-exists> file
+    where
       not(<is-test-file <+ index-is-fake-file> file) // Don't try to compile testing language or 'fake' files.
     with
       // Parse and analyze ast.
@@ -65,6 +67,13 @@
         <index-add-all(|<index-compilation-file-tuple> (file, subfile))> reads
       |}
       
+  index-compilation-file(|language, project-path):
+    (file, subfile) -> None()
+    where
+      not(<file-exists> file)
+    with
+      <index-clear-file> file
+      
   index-compilation-restore-reads:
     (file, subfile) -> None()
     with

From gabrielkonat at gmail.com  Wed Feb  8 17:04:35 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 08 Feb 2012 16:04:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24264 - in
	spoofax-contrib/separate-compilation-examples/entity-with-aspects:
	syntax test trans
Message-ID: <20120208160435.6543B7F8018@mx1.tudelft.nl>

Author: gkonat
Date: Wed Feb  8 16:04:35 2012
New Revision: 24264
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24264&sc=1

Log:
Started working on imports for entity with aspects.

Added:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.nam
Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.generated.pp
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.generated.pp
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.generated.pp	Wed Feb  8 13:18:36 2012	(r24263)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.generated.pp	Wed Feb  8 16:04:35 2012	(r24264)
@@ -4,6 +4,8 @@
    Entity                   -- KW["entity"] _1 KW["{"] _2 KW["}"],
    Entity.2:iter-star       -- _1,
    Import                   -- KW["import"] _1,
+   WildcardImport           -- _1 KW["."] KW["*"],
+   EntityImport             -- _1 KW["."] _2,
    Aspect                   -- KW["aspect"] _1 KW["{"] _2 KW["}"],
    Aspect.2:iter-star       -- _1,
    Pointcut                 -- KW["pointcut"] _1 KW["("] _2 KW[")"] KW[":"] _3,

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf	Wed Feb  8 13:18:36 2012	(r24263)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf	Wed Feb  8 16:04:35 2012	(r24264)
@@ -12,7 +12,9 @@
 
     "module" ID Definition*                                                   -> Start        {cons("Module"), scope}
     "entity" ID "{" Member* "}"                                               -> Definition   {cons("Entity"), scope}
-    "import" STRING                                                           -> Definition   {cons("Import")}
+    "import" ImportPart                                                       -> Definition   {cons("Import")}
+    ID "." "*"                                                                -> ImportPart   {cons("WildcardImport")}
+    ID "." ID                                                                 -> ImportPart   {cons("EntityImport")}
     "aspect" ID "{" AspectMember* "}"                                         -> Definition   {cons("Aspect"), scope}
     "pointcut" ID "(" {Param ","}* ")" ":" {JoinPoint ","}+                   -> AspectMember {cons("Pointcut"), scope}
     "advice" ID AdviceType "(" {Param ","}* ")" ":" ID "(" {Exp ","}* ")" Stm -> AspectMember {cons("Advice"), scope}

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx	Wed Feb  8 13:18:36 2012	(r24263)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx	Wed Feb  8 16:04:35 2012	(r24264)
@@ -5,9 +5,12 @@
 context-free syntax
     
     %% Constructs
-    "module" Module@=ID Definition*         -> Start {"Module", scope(Entity, Module, Aspect)}
-    "entity" Entity@=ID "{" Member* "}"     -> Definition {"Entity", scope(Property, Function)}
-    "import" Module at STRING                  -> Definition {"Import"}
+    "module" Module@=ID Definition*     -> Start {"Module", scope(Entity, Module, Aspect)}
+    "entity" Entity@=ID "{" Member* "}" -> Definition {"Entity", scope(Property, Function)}
+    "import" ImportPart                 -> Definition {"Import"}
+    
+    Module at ID "." "*"       -> ImportPart {"WildcardImport"}
+    Module at ID "." Entity at ID -> ImportPart {"EntityImport"}
     
     %% Aspect weaving
     "aspect" Aspect@=ID "{" AspectMember* "}"                                               		-> Definition {"Aspect", scope(Pointcut, Advice)}

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.nam
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.nam	Wed Feb  8 16:04:35 2012	(r24264)
@@ -0,0 +1,9 @@
+module ImportTest1
+
+import Test.Ent1
+import Test.*
+
+entity TestEntity
+{
+	mValue : Ent1 // TODO: Resolve from Test module.
+}  
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Wed Feb  8 13:18:36 2012	(r24263)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Wed Feb  8 16:04:35 2012	(r24264)
@@ -103,29 +103,38 @@
     VarDeclInit(x, _, _) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Module(n_3259, o_3259) -> Module(n_3259{def-path}, o_3259)
+    Module(z_172, a_173) -> Module(z_172{def-path}, a_173)
 
   nam-annotate-names(|def-path):
-    Entity(l_3259, m_3259) -> Entity(l_3259{def-path}, m_3259)
+    Entity(x_172, y_172) -> Entity(x_172{def-path}, y_172)
 
   nam-annotate-names(|def-path):
-    Import(k_3259) -> Import(<nam-annotate-use(|Module())> k_3259)
+    Import(w_172) -> Import(w_172)
 
   nam-annotate-names(|def-path):
-    Aspect(i_3259, j_3259) -> Aspect(i_3259{def-path}, j_3259)
+    WildcardImport(v_172) -> WildcardImport(<nam-annotate-use(|Module())> v_172)
 
   nam-annotate-names(|def-path):
-    Pointcut(f_3259, g_3259, h_3259) -> Pointcut(f_3259{def-path}, g_3259, h_3259)
+    EntityImport(s_172, t_172) -> EntityImport(
+                                    <nam-annotate-use(|Module())> s_172
+                                  , <nam-annotate-use(|Entity())> t_172
+                                  )
+
+  nam-annotate-names(|def-path):
+    Aspect(o_172, p_172) -> Aspect(o_172{def-path}, p_172)
+
+  nam-annotate-names(|def-path):
+    Pointcut(l_172, m_172, n_172) -> Pointcut(l_172{def-path}, m_172, n_172)
 
   nam-annotate-names(|def-path):
-    Advice(z_3258, a_3259, b_3259, c_3259, d_3259, e_3259) -> Advice(
-                                                                z_3258{def-path}
-                                                              , a_3259
-                                                              , b_3259
-                                                              , <nam-annotate-use(|Pointcut())> c_3259
-                                                              , d_3259
-                                                              , e_3259
-                                                              )
+    Advice(b_172, c_172, d_172, e_172, f_172, k_172) -> Advice(
+                                                          b_172{def-path}
+                                                        , c_172
+                                                        , d_172
+                                                        , <nam-annotate-use(|Pointcut())> e_172
+                                                        , f_172
+                                                        , k_172
+                                                        )
 
   nam-annotate-names(|def-path):
     Before() -> Before()
@@ -134,52 +143,52 @@
     After() -> After()
 
   nam-annotate-names(|def-path):
-    Assigned(y_3258) -> Assigned(y_3258)
+    Assigned(a_172) -> Assigned(a_172)
 
   nam-annotate-names(|def-path):
-    Property(w_3258, x_3258) -> Property(w_3258{def-path}, x_3258)
+    Property(y_171, z_171) -> Property(y_171{def-path}, z_171)
 
   nam-annotate-names(|def-path):
-    Function(t_3258, u_3258, v_3258) -> Function(t_3258{def-path}, u_3258, v_3258)
+    Function(v_171, w_171, x_171) -> Function(v_171{def-path}, w_171, x_171)
 
   nam-annotate-names(|def-path):
-    Param(r_3258, s_3258) -> Param(r_3258{def-path}, s_3258)
+    Param(q_171, u_171) -> Param(q_171{def-path}, u_171)
 
   nam-annotate-names(|def-path):
-    VarDecl(p_3258, q_3258) -> VarDecl(p_3258{def-path}, q_3258)
+    VarDecl(o_171, p_171) -> VarDecl(o_171{def-path}, p_171)
 
   nam-annotate-names(|def-path):
-    VarDeclInit(m_3258, n_3258, o_3258) -> VarDeclInit(m_3258{def-path}, n_3258, o_3258)
+    VarDeclInit(l_171, m_171, n_171) -> VarDeclInit(l_171{def-path}, m_171, n_171)
 
   nam-annotate-names(|def-path):
-    Assign(k_3258, l_3258) -> Assign(
-                                <nam-annotate-use(|Var())> k_3258
-                              , l_3258
-                              )
+    Assign(j_171, k_171) -> Assign(
+                              <nam-annotate-use(|Var())> j_171
+                            , k_171
+                            )
 
   nam-annotate-names(|def-path):
-    Block(j_3258) -> Block(j_3258)
+    Block(i_171) -> Block(i_171)
 
   nam-annotate-names(|def-path):
-    Print(i_3258) -> Print(i_3258)
+    Print(h_171) -> Print(h_171)
 
   nam-annotate-names(|def-path):
-    Call(g_3258, h_3258) -> Call(
-                              <nam-annotate-use(|Function())> g_3258
-                            , h_3258
-                            )
+    Call(z_170, a_171) -> Call(
+                            <nam-annotate-use(|Function())> z_170
+                          , a_171
+                          )
 
   nam-annotate-names(|def-path):
-    Var(f_3258) -> Var(<nam-annotate-use(|Var())> f_3258)
+    Var(y_170) -> Var(<nam-annotate-use(|Var())> y_170)
 
   nam-annotate-names(|def-path):
-    PropAccess(d_3258, e_3258) -> PropAccess(
-                                    d_3258
-                                  , <nam-annotate-use(|Property())> e_3258
-                                  )
+    PropAccess(w_170, x_170) -> PropAccess(
+                                  w_170
+                                , <nam-annotate-use(|Property())> x_170
+                                )
 
   nam-annotate-names(|def-path):
-    Type(c_3258) -> Type(<nam-annotate-use(|Entity())> c_3258)
+    Type(v_170) -> Type(<nam-annotate-use(|Entity())> v_170)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str	Wed Feb  8 13:18:36 2012	(r24263)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str	Wed Feb  8 16:04:35 2012	(r24264)
@@ -15,7 +15,7 @@
   // TODO: imports; consider project directory and so-called "referenced projects"
   //       requires runtime support a project-wide index
 
-  adjust-index-def-data(store-results |namespace, path):
+  /*adjust-index-def-data(store-results |namespace, path):
     Module(m, defs) -> <store-results> DefData([namespace | path], Imports(), import*)
     where
       import* := <filter(get-import-name)> defs
@@ -31,4 +31,4 @@
     where
       !namespace => Entity();
       import*  := <index-get-data(|Imports())>;
-      all-uris := <map(import-name-to-uri(|namespace))> import* 
+      all-uris := <map(import-name-to-uri(|namespace))> import**/

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Wed Feb  8 13:18:36 2012	(r24263)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Wed Feb  8 16:04:35 2012	(r24264)
@@ -22,6 +22,13 @@
       else
         p* := []
       end
+      
+  // Adjust lookup behavior for entity imports, overriding
+  // the lookup with a lookup in the parent module.
+  adjust-index-lookup(is-use |namespace, path, prefix):
+    EntityImport(mod, <is-use>) -> e
+    with
+      e := <index-lookup-children(|Entity(), prefix)> mod
 
   // Adjust the lookup behavior for variables,
   // overriding the lookup with a list of URIs

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Wed Feb  8 13:18:36 2012	(r24263)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Wed Feb  8 16:04:35 2012	(r24264)
@@ -58,6 +58,18 @@
 			
 	to-java: Aspect(_, _) -> "" // Aspects are ignored in simple code generation, they should already be handled.
 	
+	to-java: 
+	  Import(type) -> $[import [type'];
+	  ]
+	  where
+	    type' := <to-java> type
+	    
+	to-java:
+	  EntityImport(mod, entity) -> $[[mod].[entity]]
+	 
+	to-java:
+	  WildcardImport(mod) -> $[[mod].*]
+	
   to-java: 
     Entity(name, members) ->
     $[class [name] 

From tobivollebregt at gmail.com  Wed Feb  8 17:12:18 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 16:12:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24265 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: syntax
	trans/templatelang/utils
Message-ID: <20120208161218.5FFB8108C01D@mx3.tudelft.nl>

Author: tvo
Date: Wed Feb  8 16:12:17 2012
New Revision: 24265
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24265&sc=1

Log:
TemplateLang: Fix some FIXMEs

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXFake.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXFake.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXFake.sdf	Wed Feb  8 16:04:35 2012	(r24264)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/syntax/SPXFake.sdf	Wed Feb  8 16:12:17 2012	(r24265)
@@ -23,5 +23,9 @@
     Start
 
   context-free syntax
-    Section* -> Start {cons("CompilationUnit")}
-    Grammar[[SDF]] -> Section {cons("SDFSection")}
+    Section*                    -> Start {cons("CompilationUnit")}
+    Grammar[[SDF]]              -> Section {cons("SDFSection")}
+
+  context-free syntax
+    Constructor                 -> Attribute[[SDF]] {prefer, cons("Constructor")}
+    StrCon[[SDF]]               -> Constructor

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str	Wed Feb  8 16:04:35 2012	(r24264)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str	Wed Feb  8 16:12:17 2012	(r24265)
@@ -21,7 +21,7 @@
 strategies
 
   fetch-cons =
-    ?sdf-cons(_) //FIXME: + ?Constructor(_)
+    ?sdf-cons(_) + ?Constructor(_)
 
   fetch-cons:
     attrs(attr*) -> <getfirst(fetch-cons)> attr*
@@ -29,9 +29,8 @@
   fetch-cons-name:
     sdf-cons(cons) -> <un-double-quote> cons
 
-  // FIXME
-  // fetch-cons-name:
-  //   Constructor(cons) -> <un-double-quote> cons
+  fetch-cons-name:
+    Constructor(cons) -> <un-double-quote> cons
 
   fetch-cons-name:
     attrs(attr*) -> <getfirst(fetch-cons-name)> attr*

From tobivollebregt at gmail.com  Wed Feb  8 17:12:24 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 16:12:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24266 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils
Message-ID: <20120208161224.C1110CC33E@mx4.tudelft.nl>

Author: tvo
Date: Wed Feb  8 16:12:24 2012
New Revision: 24266
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24266&sc=1

Log:
TemplateLang: add some dumb tests

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/attributes.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/esv.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/sdf.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/str.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/tokenize.spt

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/attributes.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/attributes.spt	Wed Feb  8 16:12:24 2012	(r24266)
@@ -0,0 +1,86 @@
+module attributes
+language TemplateLang
+
+test fetch-cons (1)
+  <fetch-cons> attrs([term(default(appl(unquoted("cons"), [fun(quoted("\"lala\""))])))])
+    => term(default(appl(unquoted("cons"), [fun(quoted("\"lala\""))])))
+
+test fetch-cons (2)
+  <fetch-cons> attrs([Constructor("\"lala\"")])
+    => Constructor("\"lala\"")
+
+test fetch-cons (3)
+  <fetch-cons> attrs([])
+    fails
+
+test fetch-cons-name (1)
+  <fetch-cons-name> attrs([term(default(appl(unquoted("cons"), [fun(quoted("\"lala\""))])))])
+    => "lala"
+
+test fetch-cons-name (2)
+  <fetch-cons-name> attrs([Constructor("\"lala\"")])
+    => "lala"
+
+test fetch-cons-name (3)
+  <fetch-cons-name> attrs([])
+    fails
+
+test is-bracket (1)
+  <is-bracket> attrs([bracket()])
+    => _
+
+test is-bracket (2)
+  <is-bracket> attrs([])
+    fails
+
+test is-reject (1)
+  <is-reject> attrs([reject()])
+    => _
+
+test is-reject (2)
+  <is-reject> attrs([])
+    fails
+
+test is-deprecated (1)
+  <is-deprecated> attrs([term(default(fun(unquoted("deprecated"))))])
+    => _
+
+test is-deprectated (2)
+  <is-deprecated> attrs([term(default(appl(unquoted("deprecated"), [fun(quoted("\"message\""))])))])
+    => _
+
+test is-deprecated (3)
+  <is-deprecated> attrs([deprecated()])
+    => _
+
+test is-deprecated (4)
+  <is-deprecated> attrs([deprecated("message")])
+    => _
+
+test is-deprecated (5)
+  <is-deprecated> attrs([])
+    fails
+
+test is-completion-prefer (1)
+  <is-completion-prefer> attrs([term(default(appl(unquoted("completion"), [fun(unquoted("prefer"))])))])
+    => _
+
+test is-completion-prefer (2)
+  <is-completion-prefer> attrs([])
+    fails
+
+test is-completion-prefer (3)
+  <is-completion-prefer> attrs([term(default(appl(unquoted("completion"), [fun(unquoted("avoid"))])))])
+    fails
+
+test is-completion-avoid (1)
+  <is-completion-avoid> attrs([term(default(appl(unquoted("completion"), [fun(unquoted("avoid"))])))])
+    => _
+
+test is-completion-avoid (2)
+  <is-completion-avoid> attrs([])
+    fails
+
+test is-completion-avoid (3)
+  <is-completion-avoid> attrs([term(default(appl(unquoted("completion"), [fun(unquoted("prefer"))])))])
+    fails

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/esv.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/esv.spt	Wed Feb  8 16:12:24 2012	(r24266)
@@ -0,0 +1,13 @@
+module esv
+language TemplateLang
+
+test pp-descriptor-to-string
+  <pp-descriptor-to-string> Completions("", [
+    CompletionTemplateEx(
+      [Sort("MetaAnno")]
+    , CompletionPrefix(String("\"@Exp\""))
+    , [String("\"@\""), PlaceholderWithSort("<Exp:", "Exp")]
+    , []
+    )
+  ])
+    => "completions\n  completion template MetaAnno : \"@Exp\" =\n    \"@\" <Exp:Exp>  "

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/sdf.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/sdf.spt	Wed Feb  8 16:12:24 2012	(r24266)
@@ -0,0 +1,38 @@
+module sdf
+language TemplateLang
+
+test parse-sdf-string
+  <parse-sdf-string> "module example exports context-free syntax A -> B"
+    => module(unparameterized("example"), _, _)
+
+test pp-sdf-to-string
+  <pp-sdf-to-string> 'module(unparameterized("example"), [], [
+    exports(
+      context-free-syntax([
+        prod(
+          [lit("\"@\""), sort("Exp")]
+        , sort("MetaAnno")
+        , attrs(
+            [ term(
+                default(appl(unquoted("cons"), [fun(quoted("\"DecoratorAnno\""))]))
+              )
+            , avoid()
+            ]
+          )
+        )
+      ])
+    )
+  ])
+    => "module example\nexports\n  context-free syntax\n    \"@\" Exp -> MetaAnno {cons(\"DecoratorAnno\"), avoid}"
+
+test list-to-conc-grammars (1)
+  <list-to-conc-grammars> [] => []
+
+test list-to-conc-grammars (2)
+  <list-to-conc-grammars> [1] => 1
+
+test list-to-conc-grammars (3)
+  <list-to-conc-grammars> [1, 2] => conc-grammars(1, 2)
+
+test list-to-conc-grammars (4)
+  <list-to-conc-grammars> [1, 2, 3] => conc-grammars(1, conc-grammars(2, 3))

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/str.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/str.spt	Wed Feb  8 16:12:24 2012	(r24266)
@@ -0,0 +1,6 @@
+module str
+language TemplateLang
+
+test parse-stratego-string
+  <parse-stratego-string> "module example strategies foo = id"
+    => Module("example", _)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/tokenize.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/test/templatelang/utils/tokenize.spt	Wed Feb  8 16:12:24 2012	(r24266)
@@ -0,0 +1,14 @@
+module tokenize
+language TemplateLang
+
+test string-edge-tokenize (1)
+  <string-edge-tokenize(is-alpha)> "aa133bbb;c"
+    => ["aa", "133", "bbb", ";", "c"]
+
+test string-edge-tokenize (2)
+  <string-edge-tokenize(is-alpha)> "a"
+    => ["a"]
+
+test string-edge-tokenize (3)
+  <string-edge-tokenize(is-alpha)> ""
+    => []

From tobivollebregt at gmail.com  Wed Feb  8 17:12:27 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 16:12:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24267 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.spoofax/trans/context
	org.strategoxt.imp.editors.template/trans
	org.strategoxt.imp.editors.template/trans/template...
Message-ID: <20120208161227.ACC832B8060@mx2.tudelft.nl>

Author: tvo
Date: Wed Feb  8 16:12:27 2012
New Revision: 24267
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24267&sc=1

Log:
TemplateLang: Misc., rename some strategies, tighten some contracts

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Wed Feb  8 16:12:24 2012	(r24266)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/declare.str	Wed Feb  8 16:12:27 2012	(r24267)
@@ -24,7 +24,7 @@
 	
 	init-declarations = 
 		init-record-signatures;
-		init-template-options
+		templatelang-init-options
     
 rules
   declare-spx-global-symbols =
@@ -82,18 +82,8 @@
       
   declare-local-symbols: ESVSection(def*) -> <id>
 
-  // TemplateLang
-  declare-local-symbols:
-    TemplateSection(definition*) -> TemplateSection(declared-definition*)
-    with
-     <map(declare-template)> definition* => declared-definition* 
-
-  // TemplateLang
-  // FIXME: move to spoofax.configuration?
-  declare-local-symbols:
-  	TemplateOptions(option*) -> TemplateOptions(declared-option*)
-  	with
-  	  <map(declare-template-option)> option* => declared-option* 
+  // hook up to TemplateLang
+  declare-local-symbols = templatelang-declare-section
 
 rules
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Wed Feb  8 16:12:24 2012	(r24266)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Wed Feb  8 16:12:27 2012	(r24267)
@@ -60,7 +60,7 @@
   // Generate SDF
   generate-sdf =
     collect-om(?TemplateProduction(_, _, _));
-    <template-sections-to-sdf> [TemplateSection(<id>)];
+    <template-sections-to-sdf> [TemplateSection(<id>){"desugared"}];
     !'module(unparameterized("example"), [], [exports(<list-to-conc-grammars>)])
 
   generate-sdf-abstract =
@@ -75,12 +75,12 @@
   // Generate pretty printer (BOX-based)
   generate-box-pp-string =
     collect-om(?TemplateProduction(_, _, _));
-    <template-sections-to-stratego-string> [TemplateSection(<id>)]
+    <template-sections-to-stratego-string> [TemplateSection(<id>){"desugared"}]
 
   generate-box-pp-abstract =
     generate-aterm(
       collect-om(?TemplateProduction(_, _, _));
-      <template-sections-to-stratego> [TemplateSection(<id>)]
+      <template-sections-to-stratego> [TemplateSection(<id>){"desugared"}]
     )
 
   generate-box-pp-concrete:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str	Wed Feb  8 16:12:24 2012	(r24266)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str	Wed Feb  8 16:12:27 2012	(r24267)
@@ -5,12 +5,13 @@
   templatelang/utils/attributes
   templatelang/utils/contract
   templatelang/utils/stubs
+  templatelang/desugar
 
 signature
   constructors
     TemplateBySort     : SymbolType
     TemplateBySortCons : SymbolType
-    TemplateOption     : SymbolType 
+    TemplateOption     : SymbolType
 
 signature
   constructors
@@ -19,67 +20,75 @@
 
 strategies
 
-  declare-template-section:
-    TemplateSection(prod*) -> <id>
+  templatelang-declare-section:
+    section @ TemplateSection(prod*) -> <id>
     where
       with-spxverify(
-          <map(declare-template)> prod*
+        verify(templatelang-is-desugared-section | section, "templatelang-is-desugared-section ::templatelang-declare-section")
+      )
+    where
+      with-spxverify(
+        <list-loop(templatelang-declare-template)> prod*
       )
 
-  declare-template:
+  templatelang-declare-template:
     prod @ TemplateProduction(sort, _, attrs) -> <id>
     where
       with-spxverify(
-          <index-symbol-definition> (sort, TemplateBySort(), prod)
-        ; if cons := <fetch-cons-name> attrs then
-              sortcons := (sort, cons)
-            ; <index-symbol-definition> (sortcons, TemplateBySortCons(), prod)
-          end
+        verify(templatelang-is-desugared-production | prod, "templatelang-is-desugared-production ::templatelang-declare-template")
+      )
+    where
+      with-spxverify(
+        <index-symbol-definition> (sort, TemplateBySort(), prod);
+        if cons := <fetch-cons-name> attrs then
+          sortcons := (sort, cons);
+          <index-symbol-definition> (sortcons, TemplateBySortCons(), prod)
+        end
       )
 
 strategies
 
-  //resolve templatelang options 
-  get-template-option =
+  //resolve templatelang options
+  templatelang-get-option =
     ? key
-    ; with-spxverify( 
-        result := <resolve-symbol-definition> (key, TemplateOption()) 
+    ; with-spxverify(
+        result := <resolve-symbol-definition> (key, TemplateOption())
         , !"Failed to get template option"
       )
-    ; !result 
+    ; !result
 
-  index-template-option = 
+  templatelang-index-option =
     ? (key, value)
-    ; with-spxverify(  
-        <index-symbol-definition> (key, TemplateOption() ,  value) 
+    ; with-spxverify(
+        <index-symbol-definition> (key, TemplateOption(), value)
         , !"Failed to index template option"
       )
 
-  init-template-options =
+  templatelang-init-options =
     with-spxverify(
       if not(<resolve-symbol-definition> (Newlines(), TemplateOption())) then
-          <index-template-option> (Newlines(), None())
-        ; <index-template-option> (KeywordFollowRestriction(), None())
+          <templatelang-index-option> (Newlines(), None())
+        ; <templatelang-index-option> (KeywordFollowRestriction(), None())
       end
     )
 
-  declare-template-section:
+  templatelang-declare-section:
     TemplateOptions(opt*) -> <id>
     where
       with-spxverify(
-          <map(declare-template-option)> opt*
+        <list-loop(templatelang-declare-option)> opt*
       )
 
-  declare-template-option:
+  templatelang-declare-option:
     Newlines(t) -> <id>
     where
       with-spxverify(
-          <index-template-option> (Newlines(), t)
+        <templatelang-index-option> (Newlines(), t)
       )
 
-  declare-template-option:
+  templatelang-declare-option:
     KeywordFollowRestriction(t) -> <id>
     where
       with-spxverify(
-          <index-template-option> (KeywordFollowRestriction(), t)
+        <templatelang-index-option> (KeywordFollowRestriction(), t)
       )

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Wed Feb  8 16:12:24 2012	(r24266)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Wed Feb  8 16:12:27 2012	(r24267)
@@ -8,7 +8,7 @@
 
 strategies
 
-  // copied & renamed to prevent clashes with editor-common.generated.str
+  // Copied & renamed to prevent clashes with editor-common.generated.str
   // templatelang-origin-track-forced, which is present in all editors ...
   templatelang-origin-track-forced(s) =
     ![<id>]; all(s); ?[<id>]
@@ -42,18 +42,30 @@
 
 rules
 
+  // Add special marker to sections and productions to make it easier
+  // to bail out early in strategies that expect desugared input.
+
+  templatelang-desugar:
+    TemplateSection(t) -> TemplateSection(<templatelang-desugar-top> t){"desugared"}
+
+  templatelang-is-desugared-section:
+    TemplateSection(_){"desugared"} -> <id>
+
+  templatelang-is-desugared-production:
+    TemplateProduction(_, _, _){"desugared"} -> <id>
+
   templatelang-desugar:
     TemplateProduction(sort, template, a) ->
-      TemplateProduction(sort, template', attrs(attr*))
+      TemplateProduction(sort, template', attrs(attr*)){"desugared"}
     where
       with-spxverify(
-          template' := <templatelang-origin-track-forced(templatelang-template-desugar)> template;
-          attr*     := <templatelang-get-attrs> a
+        template' := <templatelang-origin-track-forced(templatelang-template-desugar)> template;
+        attr*     := <templatelang-get-attrs> a
       )
 
   templatelang-desugar:
     TemplateProductionWithCons(SortCons(sort, cons), template, a) ->
-      TemplateProduction(sort, template', attrs(attr*))
+      TemplateProduction(sort, template', attrs(attr*)){"desugared"}
     where
       with-spxverify(
         template' := <templatelang-origin-track-forced(templatelang-template-desugar)> template;

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str	Wed Feb  8 16:12:24 2012	(r24266)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str	Wed Feb  8 16:12:27 2012	(r24267)
@@ -6,6 +6,7 @@
   templatelang/utils/attributes
   templatelang/utils/contract
   templatelang/utils/misc
+  templatelang/desugar
   templatelang/expand
   templatelang/to-string
 
@@ -21,7 +22,7 @@
   template-sections-to-esv:
     section* -> completion*
     where with-spxverify(
-      verify(List | section* , "List ::template-sections-to-esv")
+      verify(ListOf(templatelang-is-desugared-section) | section* , "ListOf(templatelang-is-desugared-section) ::")
     )
     where with-spxverify(
       completion* := <filter(template-section-to-esv); concat> section*

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str	Wed Feb  8 16:12:24 2012	(r24266)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str	Wed Feb  8 16:12:27 2012	(r24267)
@@ -4,6 +4,7 @@
   libstratego-sglr
   include/TemplateLang
   templatelang/analyze
+  templatelang/desugar
   templatelang/utils/attributes
   templatelang/utils/contract
   templatelang/utils/misc
@@ -16,7 +17,7 @@
     section* -> sdf-section'*
     where
       with-spxverify(
-        verify(ListOf(?TemplateSection(_)) | section* , "ListOf(?TemplateSection(_)) ::template-sections-to-sdf")
+        verify(ListOf(templatelang-is-desugared-section) | section* , "ListOf(templatelang-is-desugared-section) ::template-sections-to-sdf")
       )
     where with-spxverify (
       sdf-section*  := <map(template-section-to-sdf)> section*;
@@ -63,7 +64,7 @@
             )
       in
         A* := <collect-om(lit(ends-with-identifier-char)); nub; string-sort-ex> sdf-section*;
-        r  := <get-template-option> KeywordFollowRestriction();
+        r  := <templatelang-get-option> KeywordFollowRestriction();
         if (!A* => []) + (!r => None()) then
           restrictions* := []
         else
@@ -113,7 +114,7 @@
              flatten-list> line*
     )
   maybe-separating(yes, no) =
-    if <get-template-option> Newlines() => Separating() then yes else no end
+    if <templatelang-get-option> Newlines() => Separating() then yes else no end
 
 rules
 
@@ -159,7 +160,7 @@
   template-line-to-sdf =
     ?Line(<id>);
     if not(?[Layout(_), Placeholder(_, _, _)]) then
-      switch <get-template-option> Newlines()
+      switch <templatelang-get-option> Newlines()
         case ?None()     : id
         case ?Leading()  : ![String("\n") | <id>]
         case ?Trailing() : (elem* -> [elem*, String("\n")])

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str	Wed Feb  8 16:12:24 2012	(r24266)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str	Wed Feb  8 16:12:27 2012	(r24267)
@@ -8,6 +8,7 @@
   templatelang/utils/contract
   templatelang/utils/misc
   templatelang/utils/parse-str
+  templatelang/desugar
 
 strategies
 
@@ -141,6 +142,10 @@
         {strategy*}}
     where
       with-spxverify(
+        verify(ListOf(templatelang-is-desugared-section) | "ListOf(templatelang-is-desugared-section) ::template-sections-to-stratego-string")
+      )
+    where
+      with-spxverify(
         section'* := <filter(template-section-to-stratego-string);
                       separate-by(|"\n\n")> section*
          , !"Failed to desugar "

From tobivollebregt at gmail.com  Wed Feb  8 17:12:31 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 16:12:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24268 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor
Message-ID: <20120208161231.A4F6F2B8072@mx2.tudelft.nl>

Author: tvo
Date: Wed Feb  8 16:12:31 2012
New Revision: 24268
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24268&sc=1

Log:
SpoofaxLang: Fix provider name

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv	Wed Feb  8 16:12:27 2012	(r24267)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv	Wed Feb  8 16:12:31 2012	(r24268)
@@ -12,7 +12,7 @@
 builders
 
   provider                  : include/spoofaxlang.jar
-  provider                  : include/templatelang.jar
+  provider                  : include/libtemplatelang.jar
 
 	observer                  : editor-analyze
 

From tobivollebregt at gmail.com  Wed Feb  8 17:12:34 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 16:12:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24269 -
	spoofax-imp/trunk/org.strategoxt.imp.testing/trans
Message-ID: <20120208161234.CD31E108C016@mx3.tudelft.nl>

Author: tvo
Date: Wed Feb  8 16:12:34 2012
New Revision: 24269
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24269&sc=1

Log:
Partial fix for Spoofax/490

(just s/write-to-string/write-to-html-string/g throughout testing project)

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-complete.str
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str	Wed Feb  8 16:12:31 2012	(r24268)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str	Wed Feb  8 16:12:34 2012	(r24269)
@@ -119,7 +119,7 @@
       !output => refactor-result
    
   check-builder-expectation(|result) :
-    Fails() -> $[Builder was expected to fail, but produced: [<write-to-string> result]]
+    Fails() -> $[Builder was expected to fail, but produced: [<write-to-html-string> result]]
    
   check-builder-expectation(|result) :
     File(_) -> $[Builder comparison to file is not implemented] // TODO
@@ -132,7 +132,7 @@
     with
       result' := <spt-pp-target-string> result
     <+
-      result' := $[[<write-to-string> result] instead of [<write-to-string> ast]]
+      result' := $[[<write-to-html-string> result] instead of [<write-to-html-string> ast]]
   
   equal-in-desugared-form:
   	(ast, result) -> (ast, result)
@@ -147,7 +147,7 @@
     where
       if <is-string> result; !p => fun(quoted(p')) then
         not(<is-string-equal-modulo-whitespace> (result, <un-double-quote> p'));
-        result-string := <is-string <+ write-to-string> result
+        result-string := <is-string <+ write-to-html-string> result
       else
         result' := <explode-aterm> result;
         not(<aterm-eq> (result', p));
@@ -181,19 +181,19 @@
       <?(result-ast, _, _, _)> result
  
   check-refactor-expectation(|result) :
-    Warnings(n) -> $[[n] refactor warning(s) expected: [<write-to-string> warnings]]
+    Warnings(n) -> $[[n] refactor warning(s) expected: [<write-to-html-string> warnings]]
     where
       <?(_, _, _, warnings)> result
     ; not(<eq> (<length> warnings, <string-to-int> n))
 
   check-refactor-expectation(|result) :
-    Errors(n) -> $[[n] refactor error(s) expected: [<write-to-string> errors]]
+    Errors(n) -> $[[n] refactor error(s) expected: [<write-to-html-string> errors]]
     where
       <?(_, _, errors, _)> result
     ; not(<eq> (<length> errors, <string-to-int> n))
 
   check-refactor-expectation(|result) :
-    Fatals(n) -> $[[n] refactor fatal-error(s) expected: [<write-to-string> fatals]]
+    Fatals(n) -> $[[n] refactor fatal-error(s) expected: [<write-to-html-string> fatals]]
     where
       <?(_, fatals, _, _)> result
     ; not(<eq> (<length> fatals, <string-to-int> n))

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-complete.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-complete.str	Wed Feb  8 16:12:31 2012	(r24268)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-complete.str	Wed Feb  8 16:12:34 2012	(r24269)
@@ -36,7 +36,7 @@
       switch !results
         case one(is-successful-completion(|from', to')): fail
         case filter(?Some(<id>)) => t: 
-                             error := $[Unexpected result: [<try(flatten-list); write-to-string> t]]
+                             error := $[Unexpected result: [<try(flatten-list); write-to-html-string> t]]
         case one(?Error(m)): error := $[Unexpected error: [m]]
         case one(?Fail(m)):  error := $[Unexpected error: [m]]
         otherwise: with(fail)

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str	Wed Feb  8 16:12:31 2012	(r24268)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str	Wed Feb  8 16:12:34 2012	(r24269)
@@ -59,7 +59,7 @@
       switch !results
         case one(is-successful-resolver(|to')): fail
         case one(?Some(t)):  error := $[Unexpected result:
-                                        <pre>[<write-to-string> t]</pre>]
+                                        <pre>[<write-to-html-string> t]</pre>]
         case one(?Error(m)): error := $[Unexpected error resolving:
                                         <pre>[m]</pre>]
         case one(?Fail(m)):  error := $[Unexpected error resolving:

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str	Wed Feb  8 16:12:31 2012	(r24268)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str	Wed Feb  8 16:12:34 2012	(r24269)
@@ -176,19 +176,19 @@
       !messages => Error(details)
 
   check-expectation(|ast, selections, messages) :
-    FailsParsing() -> $[Parse failure expected: [<write-to-string> ast]]
+    FailsParsing() -> $[Parse failure expected: [<write-to-html-string> ast]]
     where
       not(!ast => FailsParsing());
       not(!ast => error(_, _))
 
   check-expectation(|ast, selections, messages) :
-    c -> $[Syntax is ambiguous: [<write-to-string> ast]]
+    c -> $[Syntax is ambiguous: [<write-to-html-string> ast]]
     where
       <oncetd(?amb(_))> ast;
       not(!c => pattern(_); oncetd(?unquoted("amb")))
 
   check-expectation(|ast, selections, messages) :
-    pattern(p) -> $[Does not match pattern: [<write-to-string> ast]]
+    pattern(p) -> $[Does not match pattern: [<write-to-html-string> ast]]
     where
       exploded := <explode-aterm> ast
     ; not(<aterm-eq> (exploded, p))
@@ -200,10 +200,10 @@
     with
       result := <spt-pp-string> ast
     <+
-      result := $[[<write-to-string> ast] instead of [<write-to-string> ast]]
+      result := $[[<write-to-html-string> ast] instead of [<write-to-html-string> ast]]
 
   check-expectation(|ast, selections, messages) :
-    file(f) -> $[Does not match pattern: [<write-to-string> ast]]
+    file(f) -> $[Does not match pattern: [<write-to-html-string> ast]]
     where
       exploded := <explode-aterm> ast
     ; p := <resolve-path(|<current-path>); ReadFromFile; explode-aterm> f
@@ -248,10 +248,10 @@
       rules(GrabbedNotes :+= bad-selections')
 
   check-error :
-    Stratego(_) -> (<id>, $[Not implemented: [<write-to-string>]])
+    Stratego(_) -> (<id>, $[Not implemented: [<write-to-html-string>]])
 
   check-error :
-    VarDecl(_, _) -> (<id>, $[Not implemented: [<write-to-string>]])
+    VarDecl(_, _) -> (<id>, $[Not implemented: [<write-to-html-string>]])
   
   check-error :
     RegexPattern(r) -> (r, $[Full regular expression support not implemented])
@@ -288,19 +288,19 @@
     SuccessParsing + FailsParsing + ?pattern(_) + ?ParseOutput(_)
 
   grab-messages:
-    (errors, warnings, notes) -> <write-to-string> // TODO: make nice string?
+    (errors, warnings, notes) -> <write-to-html-string> // TODO: make nice string?
     where
       rules(GrabbedErrors   :+= errors);
       rules(GrabbedWarnings :+= warnings);
       rules(GrabbedNotes    :+= notes)
 
   grab-errors:
-    (errors, _, _) -> <write-to-string> errors // TODO: make nice string?
+    (errors, _, _) -> <write-to-html-string> errors // TODO: make nice string?
     where
       rules(GrabbedErrors :+= errors)
 
   grab-warnings:
-    (_, warnings, _) -> <write-to-string> warnings // TODO: make nice string?
+    (_, warnings, _) -> <write-to-html-string> warnings // TODO: make nice string?
     where
       rules(GrabbedWarnings :+= warnings)
 
@@ -338,7 +338,7 @@
 
   check-expectation(|result) :
     StrategoFails() -> $[Failure expected:
-                         <pre>[<write-to-string> result']</pre>]
+                         <pre>[<write-to-html-string> result']</pre>]
     where
       !result => Some(result')
 
@@ -346,7 +346,7 @@
     StrategoSuccess() -> StrategoSuccess()
     where
       !result => Some(result')
-    ; rules(GrabbedNotes :+= (d, $[Result: [<write-to-string> result'] (no => expectation specified)]))
+    ; rules(GrabbedNotes :+= (d, $[Result: [<write-to-html-string> result'] (no => expectation specified)]))
 
   check-expectation(|result) :
     <not(StrategoFails)> -> $[Failure unexpected:
@@ -355,7 +355,7 @@
       !result => Fail(trace)
 
   check-expectation(|result) :
-    StrategoEquals(p) -> $[Unexpected output: [<write-to-string> result']]
+    StrategoEquals(p) -> $[Unexpected output: [<write-to-html-string> result']]
     where
       !result => Some(result')
     ; result'' := <explode-aterm> result'

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/generate.str	Wed Feb  8 16:12:31 2012	(r24268)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/generate.str	Wed Feb  8 16:12:34 2012	(r24269)
@@ -156,7 +156,7 @@
           
           assertNotNull(description, aterm_eq_0_1.instance.invoke(context, ast, context.getFactory().makeString("[p']")));
        ]  
-      with p' := <write-to-string ; escape-string>p
+      with p' := <write-to-html-string ; escape-string>p
         
 strategies
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str	Wed Feb  8 16:12:31 2012	(r24268)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str	Wed Feb  8 16:12:34 2012	(r24269)
@@ -110,6 +110,14 @@
   external input-dialog(|title, message, initial)
 
 strategies
+
+  write-to-html-string =
+    write-to-string;
+    string-replace(|"&", "&amp;");
+    string-replace(|"<", "&lt;");
+    string-replace(|">", "&gt;")
+
+strategies
   
   editor-complete:
     (CompletionHelper(_), _, _, path, _) ->

From tobivollebregt at gmail.com  Wed Feb  8 17:12:38 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 16:12:38 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24270 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template
Message-ID: <20120208161238.9A5F9108C004@mx3.tudelft.nl>

Author: tvo
Date: Wed Feb  8 16:12:38 2012
New Revision: 24270
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24270&sc=1

Log:
TemplateLang: Rename main class of lib to Main

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Wed Feb  8 16:12:34 2012	(r24269)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Wed Feb  8 16:12:38 2012	(r24270)
@@ -108,16 +108,16 @@
           <srcfileset dir="${basedir}/trans/templatelang">
               <include name="**/*.str"/>
           </srcfileset>
-          <targetfileset file="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java"/>
+          <targetfileset file="${src-gen}/org/strategoxt/imp/editors/template/generated/Main.java"/>
       </dependset>
-      <available file="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java" property="libtemplatelang.strc-java.available"/>
+      <available file="${src-gen}/org/strategoxt/imp/editors/template/generated/Main.java" property="libtemplatelang.strc-java.available"/>
       <antcall target="libtemplatelang.stratego.jar.deletehelper"/>
       <antcall target="libtemplatelang.stratego.jvm.helper">
-          <param name="build.stratego.outputfile" value="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.java"/>
+          <param name="build.stratego.outputfile" value="${src-gen}/org/strategoxt/imp/editors/template/generated/Main.java"/>
           <param name="build.stratego.extraargs" value="-la java-front ${java.jar.import}"/>
       </antcall>
       <javac classpath="utils/strategoxt.jar:${src-gen}${externaljarimport1}${externaljarimport2}${java.jar.classpath}" srcdir="${src-gen}" includes="org/strategoxt/imp/editors/template/generated/**" destdir="${build}" source="1.5" target="1.5" debug="on"/>
-      <copy file="${src-gen}/org/strategoxt/imp/editors/template/generated/TemplateLang.rtree" tofile="${include}/lib${strmodule}.rtree"/>
+      <copy file="${src-gen}/org/strategoxt/imp/editors/template/generated/Main.rtree" tofile="${include}/lib${strmodule}.rtree"/>
       <!-- copy imported terms -->
       <copy todir="${build}/org/strategoxt/imp/editors/template/generated">
           <fileset dir="${src-gen}/org/strategoxt/imp/editors/template/generated" excludes="**/*.java"/>

From tobivollebregt at gmail.com  Wed Feb  8 17:19:50 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 16:19:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24271 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax
Message-ID: <20120208161950.7919BCC22A@mx4.tudelft.nl>

Author: tvo
Date: Wed Feb  8 16:19:50 2012
New Revision: 24271
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24271&sc=1

Log:
SpoofaxLang: Less unnecessary rebuilds

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Wed Feb  8 16:12:38 2012	(r24270)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/build.main.xml	Wed Feb  8 16:19:50 2012	(r24271)
@@ -73,6 +73,7 @@
             	<targetfileset file="${src-gen2}/${strmodule}.java"/>
 	        </dependset>
         	
+            <available file="${src-gen2}/${strmodule}.java" property="strc-java.available"/>
           	<antcall target="copy-jar"/>
             <antcall target="copy-rtree"/>
         		<antcall target="spx.stratego.jvm.helper">

From tobivollebregt at gmail.com  Wed Feb  8 19:31:42 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 08 Feb 2012 18:31:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24272 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans
Message-ID: <20120208183142.D911F108C004@mx3.tudelft.nl>

Author: tvo
Date: Wed Feb  8 18:31:42 2012
New Revision: 24272
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24272&sc=1

Log:
TemplateLang: Fix strategy names

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str	Wed Feb  8 16:19:50 2012	(r24271)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/analyze.str	Wed Feb  8 18:31:42 2012	(r24272)
@@ -9,11 +9,11 @@
   analyze =
     templatelang-desugar-top;
     templatelang-desugar-sdf-top;
-    init-template-options;
+    templatelang-init-options;
     declare-top
 
   declare-top =
-    alltd(declare-template-section)
+    alltd(templatelang-declare-section)
 
   // hooks
 

From L.C.L.Kats at tudelft.nl  Wed Feb  8 21:50:26 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 08 Feb 2012 20:50:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24273 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
	spoofax-imp/trunk/org.strategoxt....
Message-ID: <20120208205026.5DF2B7F8023@mx1.tudelft.nl>

Author: LennartKats
Date: Wed Feb  8 20:50:26 2012
New Revision: 24273
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24273&sc=1

Log:
Spoofax/224: support queueing analyses on file system changes. caveats: may schedule spurious analyses (particularly on save) and does not yet support deletes

Added:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/INotificationService.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/NotificationCenter.java
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/EditorIOAgent.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisPrimitive.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF	Wed Feb  8 18:31:42 2012	(r24272)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/META-INF/MANIFEST.MF	Wed Feb  8 20:50:26 2012	(r24273)
@@ -26,7 +26,8 @@
  org.spoofax.terms,
  org.strategoxt.strj,
  org.strategoxt.imp.debug.core,
- org.eclipse.core.expressions
+ org.eclipse.core.expressions,
+ org.spoofax.interpreter.library.language;bundle-version="1.0.0"
 Export-Package: org.strategoxt.imp.runtime,
  org.strategoxt.imp.runtime.dynamicloading,
  org.strategoxt.imp.runtime.parser,

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Wed Feb  8 18:31:42 2012	(r24272)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -26,6 +26,7 @@
 import org.spoofax.interpreter.core.StackTracer;
 import org.spoofax.interpreter.library.IOAgent;
 import org.spoofax.interpreter.library.jsglr.JSGLRLibrary;
+import org.spoofax.interpreter.library.language.NotificationCenter;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 import org.spoofax.jsglr.client.InvalidParseTableException;
@@ -49,6 +50,8 @@
 import org.strategoxt.imp.runtime.stratego.IMPLibrary;
 import org.strategoxt.imp.runtime.stratego.IMPOpenFile;
 import org.strategoxt.imp.runtime.stratego.IMPParseStringPTPrimitive;
+import org.strategoxt.imp.runtime.stratego.FileNotificationServer;
+import org.strategoxt.imp.runtime.stratego.QueueAnalysisService;
 
 /**
  * Environment class that maintains a term factories, languages, and
@@ -88,26 +91,6 @@
 		termFactory = new TermFactory().getFactoryWithStorageType(IStrategoTerm.MUTABLE);
 		parseTableManager = new ParseTableManager(termFactory);
 		parseTables = Collections.synchronizedMap(new HashMap<String, ParseTableProvider>());
-		checkJVMOptions();
-	}
-
-	private static void checkJVMOptions() {
-		boolean ssOption = false;
-		boolean serverOption = false;
-		boolean mxOption = false;
-		
-		for (String arg : ManagementFactory.getRuntimeMXBean().getInputArguments()) {
-			if (arg.startsWith("-Xserver") || arg.startsWith("-server")) serverOption = true;
-			if (arg.startsWith("-Xss") || arg.startsWith("-ss")) ssOption = true;
-			if (arg.startsWith("-Xmx") || arg.startsWith("-mx")) mxOption = true;
-		}
-		
-		if (!serverOption)
-			Environment.logWarning("Make sure Eclipse is started with -vmargs -server (can be set in eclipse.ini) for best performance");
-		if (!mxOption)
-			Environment.logWarning("Make sure Eclipse is started with -vmargs -Xmx1024m (can be set in eclipse.ini) for at least 1024 MiB heap space (adjust downwards for low-memory systems)");
-		if (!ssOption)
-			Environment.logWarning("Make sure Eclipse is started with -vmargs -Xss8m (can be set in eclipse.ini) for an 8 MiB stack size");
 	}
 	
 	// TODO: Split up shared and non-shared environment entities?

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java	Wed Feb  8 18:31:42 2012	(r24272)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -3,11 +3,13 @@
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
+import java.lang.management.ManagementFactory;
 import java.net.URL;
 
 import org.eclipse.core.runtime.FileLocator;
 import org.eclipse.core.runtime.Path;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
+import org.strategoxt.imp.runtime.stratego.FileNotificationServer;
 
 public class RuntimeActivator extends AbstractUIPlugin {
 	
@@ -17,6 +19,31 @@
 	
 	public RuntimeActivator() {
 		instance = this;
+
+		FileNotificationServer.init();
+		checkJVMOptions();
+		
+		// Trigger static initialization in this safe context
+		Environment.getStrategoLock(); 
+	}
+
+	private static void checkJVMOptions() {
+		boolean ssOption = false;
+		boolean serverOption = false;
+		boolean mxOption = false;
+		
+		for (String arg : ManagementFactory.getRuntimeMXBean().getInputArguments()) {
+			if (arg.startsWith("-Xserver") || arg.startsWith("-server")) serverOption = true;
+			if (arg.startsWith("-Xss") || arg.startsWith("-ss")) ssOption = true;
+			if (arg.startsWith("-Xmx") || arg.startsWith("-mx")) mxOption = true;
+		}
+		
+		if (!serverOption)
+			Environment.logWarning("Make sure Eclipse is started with -vmargs -server (can be set in eclipse.ini) for best performance");
+		if (!mxOption)
+			Environment.logWarning("Make sure Eclipse is started with -vmargs -Xmx1024m (can be set in eclipse.ini) for at least 1024 MiB heap space (adjust downwards for low-memory systems)");
+		if (!ssOption)
+			Environment.logWarning("Make sure Eclipse is started with -vmargs -Xss8m (can be set in eclipse.ini) for an 8 MiB stack size");
 	}
 
 	public static RuntimeActivator getInstance() { 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Wed Feb  8 18:31:42 2012	(r24272)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -180,6 +180,11 @@
 		}
 	}
     
+    /**
+     * Returns the editor for this parse controller.
+     * Only available if an editor has been assigned to it,
+     * which happens after the editor first launches the parser.
+     */
     public EditorState getEditor() {
 		return editor;
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	Wed Feb  8 18:31:42 2012	(r24272)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -13,6 +13,7 @@
 import org.eclipse.core.runtime.Status;
 import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Debug;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.MonitorStateWatchDog;
 
@@ -221,6 +222,8 @@
 		pendingUpdates.put(absolutePath, updateJob);
 		add(updateJob);
 		wake();
+		
+		Debug.log("Background analysis queued for " + absolutePath);
 
 		return updateJob;
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Wed Feb  8 18:31:42 2012	(r24272)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -78,8 +78,7 @@
 			}
 		    
 		} catch (Exception e) {
-			// hmm.
-			e.printStackTrace();
+			Environment.logException("Background job failed", e);
 		}
 		
 		return Status.OK_STATUS;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/EditorIOAgent.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/EditorIOAgent.java	Wed Feb  8 18:31:42 2012	(r24272)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/EditorIOAgent.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -157,6 +157,9 @@
 		return getResource(file2);
 	}
 
+	/**
+	 * @throws FileNotFoundException  if the file does not exist in the workspace
+	 */
 	public static IResource getResource(File file) throws FileNotFoundException {
 		if (file == null) {
 			assert false : "file should not be null";
@@ -185,4 +188,24 @@
 		IResource[] resources = workspace.getRoot().findContainersForLocationURI(uri);
 		return resources.length > 0;
 	}
+	
+	/**
+	 * Gets the project that corresponds to the given file path.
+	 * If the file does not exist, its parent is recursively tried instead.
+	 * If it still won't exist, a {@link FileNotFoundException} is thrown.
+	 * 
+	 * @throws FileNotFoundException 
+	 *           If the file has no parent directory that is in the workspace. 
+	 */
+	public static IProject getProject(File file) throws FileNotFoundException {
+		File original = file;
+		while (!file.exists()) {
+			file = file.getParentFile();
+			if (file == null) {
+				throw new FileNotFoundException("File not found: " + original);
+			}
+		}
+		IResource resource = getResource(file);
+		return resource.getProject();
+	}
 }

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -0,0 +1,80 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import static org.eclipse.core.resources.IResourceChangeEvent.POST_CHANGE;
+import static org.eclipse.core.resources.IResourceDelta.ADDED;
+import static org.eclipse.core.resources.IResourceDelta.CHANGED;
+import static org.eclipse.core.resources.IResourceDelta.CONTENT;
+import static org.eclipse.core.resources.IResourceDelta.MOVED_FROM;
+import static org.eclipse.core.resources.IResourceDelta.MOVED_TO;
+import static org.eclipse.core.resources.IResourceDelta.REMOVED;
+import static org.eclipse.core.resources.IResourceDelta.REPLACED;
+
+import java.net.URI;
+
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.IResourceChangeEvent;
+import org.eclipse.core.resources.IResourceChangeListener;
+import org.eclipse.core.resources.IResourceDelta;
+import org.eclipse.core.resources.IResourceDeltaVisitor;
+import org.eclipse.core.resources.ResourcesPlugin;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.imp.language.LanguageRegistry;
+import org.spoofax.interpreter.library.language.NotificationCenter;
+import org.strategoxt.imp.runtime.Environment;
+
+/**
+ * Sends Eclipse resource change notifications
+ * to the Spoofax {@link NotificationCenter}.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class FileNotificationServer implements IResourceChangeListener {
+	
+	public static final int SIGNIFICANT_CHANGES =
+			CONTENT | MOVED_TO | MOVED_FROM | REPLACED | ADDED |
+			ADDED | REMOVED | CHANGED;
+	
+	private FileNotificationServer() {
+		// Use the statics
+	}
+
+	public static void init() {
+		ResourcesPlugin.getWorkspace().addResourceChangeListener(new FileNotificationServer(), SIGNIFICANT_CHANGES);
+
+		NotificationCenter.putObserver(null, null, new QueueAnalysisService());
+	}
+
+	public void resourceChanged(IResourceChangeEvent event) {
+		if (event.getType() == POST_CHANGE) {
+			postResourceChanged(event.getDelta());
+		}
+	}
+
+	private void postResourceChanged(IResourceDelta delta) {
+		try {
+			delta.accept(new IResourceDeltaVisitor() {
+				public boolean visit(IResourceDelta delta) throws CoreException {
+					IResource resource = delta.getResource();
+					if (isSignificantChange(delta) && LanguageRegistry.findLanguage(resource.getLocation(), null) != null) {
+						URI uri = resource.getLocationURI();
+						NotificationCenter.notifyChanges(uri, null);
+					}
+					return true;
+				}
+			});
+		} catch (CoreException e) {
+			Environment.logException("Exception when processing fileystem events", e);
+		}
+	}
+
+	public static boolean isSignificantChange(IResourceDelta delta) {
+		int flags = delta.getFlags();
+		return (flags & ADDED) == ADDED
+			|| (flags & REMOVED) == REMOVED
+			|| (flags & CHANGED) == CHANGED
+			|| (flags & CONTENT) == CONTENT
+			|| (flags & MOVED_TO) == MOVED_TO
+			|| (flags & MOVED_FROM) == MOVED_FROM
+			|| (flags & REPLACED) == REPLACED;
+	}
+}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisPrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisPrimitive.java	Wed Feb  8 18:31:42 2012	(r24272)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisPrimitive.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -23,8 +23,10 @@
  */
 public class QueueAnalysisPrimitive extends AbstractPrimitive {
 
+	public static final String NAME = "SSL_EXT_queue_analysis";
+	
 	QueueAnalysisPrimitive() {
-		super("SSL_EXT_queue_analysis", 0, 0);
+		super(NAME, 0, 0);
 	}
 	
 	/**

Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -0,0 +1,71 @@
+package org.strategoxt.imp.runtime.stratego;
+
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.net.URI;
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.language.Language;
+import org.eclipse.imp.language.LanguageRegistry;
+import org.spoofax.interpreter.library.language.INotificationService;
+import org.spoofax.interpreter.library.language.NotificationCenter;
+import org.spoofax.interpreter.library.language.SemanticIndexManager;
+import org.strategoxt.imp.runtime.Debug;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.services.StrategoAnalysisQueueFactory;
+
+/**
+ * A {@link INotificationService} that uses {@link StrategoAnalysisQueueFactory}.
+ * 
+ * Receives notifications sent by {@link FileNotificationServer} to the {@link NotificationCenter}.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class QueueAnalysisService implements INotificationService {
+
+	public void notifyFileChanges(URI file, String subfile) {
+		assert file.isAbsolute();
+		try {
+			IProject project = EditorIOAgent.getProject(new File(file));
+			IPath path = new Path(file.getPath());
+			
+			if (LanguageRegistry.findLanguage(path, null) != null) {
+				IPath relPath = path.removeFirstSegments(path.matchingFirstSegments(project.getLocation()));
+				assert !relPath.isAbsolute();
+				StrategoAnalysisQueueFactory.getInstance().queueAnalysis(relPath, project);
+			}
+		} catch (FileNotFoundException e) {
+			Environment.logException("Background language service failed", e);
+		} catch (RuntimeException e) {
+			Environment.logException("Background language service failed", e);
+		}
+	}
+
+	public void notifyNewProject(URI project) {
+		Debug.log("Loading uninitialized project ", project);
+		notifyNewProjectFiles(new File(project));
+	}
+
+	/**
+	 * Notify changes of all files in the project,
+	 * as long as they are known to have an index associated with them.
+	 */
+	private void notifyNewProjectFiles(File file) {
+		if (file.isFile()) {
+			if (isIndexedFile(new Path(file.getAbsolutePath())))
+				notifyFileChanges(file.toURI(), null);
+		} else {
+			for (File child : file.listFiles()) {
+				notifyNewProjectFiles(child);
+			}
+		}
+	}
+
+	public static boolean isIndexedFile(IPath path) {
+		Language language = LanguageRegistry.findLanguage(path, null);
+		return language != null && SemanticIndexManager.isKnownIndexingLanguage(language.getName());
+	}
+	
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/INotificationService.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/INotificationService.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -0,0 +1,15 @@
+package org.spoofax.interpreter.library.language;
+
+import java.net.URI;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+
+/**
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public interface INotificationService {
+	
+	void notifyFileChanges(URI file, String subfile);
+
+	void notifyNewProject(URI project);
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/NotificationCenter.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/NotificationCenter.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -0,0 +1,106 @@
+package org.spoofax.interpreter.library.language;
+
+import java.net.URI;
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * A central, static go-to point for file system notifications.
+ * 
+ * Notifications are sent when files are added, deleted, renamed, or modified.
+ * 
+ * @author Lennart Kats <lennart add lclnet.nl>
+ */
+public class NotificationCenter {
+
+	private static Map<ObserverDescription, INotificationService> asyncObservers =
+			new HashMap<ObserverDescription, INotificationService>();
+	
+	/**
+	 * @param file      The URI of the file
+	 * @param subfile   The subfilename, or null if not applicable
+	 */
+	public synchronized static void notifyChanges(URI file, String subfile) {
+		assert file.isAbsolute();
+		for (INotificationService observer : asyncObservers.values()) {
+			observer.notifyFileChanges(file, subfile);
+		}
+	}
+
+	/*
+	private static boolean isUriPrefixOf(URI file, URI root) {
+		return !root.relativize(file).isAbsolute();
+	}
+	*/
+	
+	/**
+	 * Registers an observer. Only one observer is stored at a time for a language/serviceName combination.
+	 * 
+	 * @param language     The language for this observer, may be null.
+	 * @param serviceName  The name of the service represented by this observer, may be null.
+	 */
+	public synchronized static void putObserver(String language, String serviceName, INotificationService service) {
+		asyncObservers.put(new ObserverDescription(language, serviceName), service);
+	}
+	
+	public static boolean removeObserver(String language, String service) {
+		return asyncObservers.remove(new ObserverDescription(language, service)) != null;
+	}
+
+	public static void notifyNewProject(URI project) {
+		for (INotificationService observer : asyncObservers.values()) {
+			observer.notifyNewProject(project);
+		}
+	}
+	
+	
+	/**
+	 * An observer. A wannabe case class.
+	 * 
+	 * @author Lennart Kats <lennart add lclnet.nl>
+	 */
+	private static class ObserverDescription {
+		final String language;
+		
+		final String service;
+
+		public ObserverDescription(String language, String service) {
+			this.language = language;
+			this.service = service;
+		}
+
+		@Override
+		public int hashCode() {
+			final int prime = 31;
+			int result = 1;
+			result = prime * result
+					+ ((language == null) ? 0 : language.hashCode());
+			result = prime * result
+					+ ((service == null) ? 0 : service.hashCode());
+			return result;
+		}
+
+		@Override
+		public boolean equals(Object obj) {
+			if (this == obj)
+				return true;
+			if (obj == null)
+				return false;
+			if (!(obj instanceof ObserverDescription))
+				return false;
+			ObserverDescription other = (ObserverDescription) obj;
+			if (language == null) {
+				if (other.language != null)
+					return false;
+			} else if (!language.equals(other.language))
+				return false;
+			if (service == null) {
+				if (other.service != null)
+					return false;
+			} else if (!service.equals(other.service))
+				return false;
+			return true;
+		}
+		
+	}
+}

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Wed Feb  8 18:31:42 2012	(r24272)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -22,7 +22,8 @@
  */
 public class SemanticIndexFile {
 	
-	public static final String DEFAULT_DESCRIPTOR = "";
+	@Deprecated
+	public static final String DEFAULT_DESCRIPTOR = null;
 	
 	private final List<SemanticIndexEntry> entries = new ArrayList<SemanticIndexEntry>();
 
@@ -81,8 +82,6 @@
 		this.uri = uri;
 		this.descriptor = descriptor;
 		this.time = time;
-		if (descriptor == null)
-			throw new IllegalArgumentException("descriptor can't be null, use DEFAULT_DESCRIPTOR");
 	}
 	
 	/**
@@ -119,14 +118,20 @@
 	
 	public IStrategoTerm toTerm(ITermFactory factory) {
 		IStrategoString uriString = factory.makeString(toString());
-		return factory.makeTuple(uriString, factory.makeString(descriptor));
+		IStrategoString descriptorName = factory.makeString(descriptor == null ? "" : descriptor);
+		return factory.makeTuple(uriString, descriptorName);
 	}
 	
 	@Override
 	public boolean equals(Object obj) {
-		return obj instanceof SemanticIndexFile
-			&& ((SemanticIndexFile) obj).uri.equals(uri)
-			&& ((SemanticIndexFile) obj).descriptor.equals(descriptor);
+		if (obj instanceof SemanticIndexFile) {
+			if (obj == this) return true;
+			SemanticIndexFile other = (SemanticIndexFile) obj;
+			return other.uri.equals(uri)
+					&& (descriptor == null ? other.descriptor == null : descriptor.equals(other.descriptor));
+		} else {
+			return false;
+		}
 	}
 	
 	@Override

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java	Wed Feb  8 18:31:42 2012	(r24272)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java	Wed Feb  8 20:50:26 2012	(r24273)
@@ -26,8 +26,10 @@
 	
 	private String currentLanguage;
 	
-	// (don't have access to WeakValueHashMap here, this is close enough)
-	private static Map<String, Map<URI, WeakReference<SemanticIndex>>> indicesByLanguage =
+	/**
+	 * Indices by language and project. Access requires a lock on {@link #getSyncRoot}
+	 */
+	private static Map<String, Map<URI, WeakReference<SemanticIndex>>> asyncIndexCache =
 		new HashMap<String, Map<URI, WeakReference<SemanticIndex>>>();
 	
 	public SemanticIndex getCurrent() {
@@ -37,29 +39,42 @@
 		return current;
 	}
 	
+	private static Object getSyncRoot() {
+		return SemanticIndexManager.class;
+	}
+	
 	public boolean isInitialized() {
 		return current != null;
 	}
 	
-	public void loadIndex(String language, URI project, ITermFactory factory, IOAgent agent) {
-		Map<URI, WeakReference<SemanticIndex>> indicesByProject =
-			indicesByLanguage.get(language);
-		if (indicesByProject == null) {
-			indicesByProject = new HashMap<URI, WeakReference<SemanticIndex>>();
-			indicesByLanguage.put(language, indicesByProject);
-		}
-		WeakReference<SemanticIndex> indexRef = indicesByProject.get(project);
-		SemanticIndex index = indexRef == null ? null : indexRef.get();
-		if (index == null) {
-			index = tryReadFromFile(getIndexFile(project, language), factory, agent);
+	public static boolean isKnownIndexingLanguage(String language) {
+		synchronized (getSyncRoot()) {
+			return asyncIndexCache.containsKey(language);
 		}
-		if (index == null) {
-			index = new SemanticIndex();
+	}
+	
+	public void loadIndex(String language, URI project, ITermFactory factory, IOAgent agent) {
+		synchronized (getSyncRoot()) {
+			Map<URI, WeakReference<SemanticIndex>> indicesByProject =
+					asyncIndexCache.get(language);
+			if (indicesByProject == null) {
+				indicesByProject = new HashMap<URI, WeakReference<SemanticIndex>>();
+				asyncIndexCache.put(language, indicesByProject);
+			}
+			WeakReference<SemanticIndex> indexRef = indicesByProject.get(project);
+			SemanticIndex index = indexRef == null ? null : indexRef.get();
+			if (index == null) {
+				index = tryReadFromFile(getIndexFile(project, language), factory, agent);
+			}
+			if (index == null) {
+				index = new SemanticIndex();
+				NotificationCenter.notifyNewProject(project);
+			}
+			indicesByProject.put(project, new WeakReference<SemanticIndex>(index));
+			current = index;
+			currentLanguage = language;
+			currentProject = project;
 		}
-		indicesByProject.put(project, new WeakReference<SemanticIndex>(index));
-		current = index;
-		currentLanguage = language;
-		currentProject = project;
 	}
 	
 	public SemanticIndex tryReadFromFile(File file, ITermFactory factory, IOAgent agent) {

From L.C.L.Kats at tudelft.nl  Wed Feb  8 21:59:12 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 08 Feb 2012 20:59:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24274 -
	spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading
Message-ID: <20120208205912.E8BBB108C01D@mx3.tudelft.nl>

Author: LennartKats
Date: Wed Feb  8 20:59:12 2012
New Revision: 24274
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24274&sc=1

Log:
updated DynamicDescriptorLoader to use Visitor-based file system event processing

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Wed Feb  8 20:50:26 2012	(r24273)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Wed Feb  8 20:59:12 2012	(r24274)
@@ -1,11 +1,6 @@
 package org.strategoxt.imp.metatooling.loading;
 
 import static org.eclipse.core.resources.IMarker.SEVERITY_ERROR;
-import static org.eclipse.core.resources.IResourceDelta.ADDED;
-import static org.eclipse.core.resources.IResourceDelta.CONTENT;
-import static org.eclipse.core.resources.IResourceDelta.MOVED_FROM;
-import static org.eclipse.core.resources.IResourceDelta.MOVED_TO;
-import static org.eclipse.core.resources.IResourceDelta.REPLACED;
 
 import java.io.File;
 import java.io.FileNotFoundException;
@@ -20,6 +15,7 @@
 import org.eclipse.core.resources.IResourceChangeEvent;
 import org.eclipse.core.resources.IResourceChangeListener;
 import org.eclipse.core.resources.IResourceDelta;
+import org.eclipse.core.resources.IResourceDeltaVisitor;
 import org.eclipse.core.resources.WorkspaceJob;
 import org.eclipse.core.runtime.CoreException;
 import org.eclipse.core.runtime.IProgressMonitor;
@@ -35,6 +31,7 @@
 import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
 import org.strategoxt.imp.runtime.parser.ast.AstMessageBatch;
 import org.strategoxt.imp.runtime.parser.ast.AstMessageHandler;
+import org.strategoxt.imp.runtime.stratego.FileNotificationServer;
 
 /**
  * This class updates any editors in the environment,
@@ -102,7 +99,7 @@
 	}
 
 	public void resourceChanged(final IResourceChangeEvent event) {
-		if (event.getType() == IResourceChangeEvent.POST_CHANGE  && isSignificantChangeDeep(event.getDelta())) {
+		if (event.getType() == IResourceChangeEvent.POST_CHANGE) {
 			synchronized (asyncEventQueue) {
 				asyncEventQueue.add(event);
 				if (!isAsyncEventHandlerActive)
@@ -143,40 +140,20 @@
 		job.schedule(SCHEDULE_DELAY);
 	}
 	
-	public void postResourceChanged(IResourceDelta delta, IProgressMonitor monitor) {
-		IResourceDelta[] children = delta.getAffectedChildren();
-		
-		if (children.length == 0) {		
-			IResource resource = delta.getResource();
-			if (isSignificantChange(delta))
-				updateResource(resource, monitor, false);
-		} else {
-			// Recurse
-			for (IResourceDelta child : children)
-				postResourceChanged(child, monitor);
-		}
-	}
-
-	private static boolean isSignificantChange(IResourceDelta delta) {
-		int flags = delta.getFlags();
-		return (flags & CONTENT) == CONTENT
-			|| (flags & MOVED_TO) == MOVED_TO
-			|| (flags & MOVED_FROM) == MOVED_FROM
-			|| (flags & REPLACED) == REPLACED
-			|| (flags & ADDED) == ADDED;
-			// UNDONE: || (flags == 0) (one known instance: when markers were added/removed)
-	}
-
-	private static boolean isSignificantChangeDeep(IResourceDelta delta) {
-		if (isSignificantChange(delta)) {
-			return true;
-		} else {
-			for (IResourceDelta child : delta.getAffectedChildren()) {
-				if (isSignificantChangeDeep(child) && isSignificantName(delta.getResource().getName()))
+	public void postResourceChanged(IResourceDelta delta, final IProgressMonitor monitor) {
+		try {
+			delta.accept(new IResourceDeltaVisitor() {
+				public boolean visit(IResourceDelta delta) throws CoreException {
+					if (FileNotificationServer.isSignificantChange(delta)) {
+						IResource resource = delta.getResource();
+						updateResource(resource, monitor, false);
+					}
 					return true;
-			}
+				}
+			});
+		} catch (CoreException e) {
+			Environment.logException("Exception when processing fileystem events", e);
 		}
-		return false;
 	}
 
 	private static boolean isSignificantName(String name) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java	Wed Feb  8 20:50:26 2012	(r24273)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/StartupDescriptorLoader.java	Wed Feb  8 20:59:12 2012	(r24274)
@@ -34,6 +34,7 @@
 		
 			loadAllServices();
 			
+			// (note: don't set eventMask parameter; Eclipse will ignore some events)
 			ResourcesPlugin.getWorkspace().addResourceChangeListener(loader);
 			
 		} catch (RuntimeException e) {

From L.C.L.Kats at tudelft.nl  Wed Feb  8 21:59:44 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 08 Feb 2012 20:59:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24275 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <20120208205944.61B612B806E@mx2.tudelft.nl>

Author: LennartKats
Date: Wed Feb  8 20:59:44 2012
New Revision: 24275
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24275&sc=1

Log:
disabled event mask filter for Eclipse's resource listener; it's b0rked

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Wed Feb  8 20:59:12 2012	(r24274)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Wed Feb  8 20:59:44 2012	(r24275)
@@ -30,16 +30,13 @@
  */
 public class FileNotificationServer implements IResourceChangeListener {
 	
-	public static final int SIGNIFICANT_CHANGES =
-			CONTENT | MOVED_TO | MOVED_FROM | REPLACED | ADDED |
-			ADDED | REMOVED | CHANGED;
-	
 	private FileNotificationServer() {
 		// Use the statics
 	}
 
 	public static void init() {
-		ResourcesPlugin.getWorkspace().addResourceChangeListener(new FileNotificationServer(), SIGNIFICANT_CHANGES);
+		// (note: don't set eventMask parameter; Eclipse will ignore some events)
+		ResourcesPlugin.getWorkspace().addResourceChangeListener(new FileNotificationServer());
 
 		NotificationCenter.putObserver(null, null, new QueueAnalysisService());
 	}

From richard at vogelij.nl  Thu Feb  9 03:17:21 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Thu, 09 Feb 2012 02:17:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24276 - in
	spoofax-ace: . resources/javascript/aceworker
	resources/javascript/jssglr src/spoofax/ace/generator
	src/spoofax/ace/utils
Message-ID: <20120209021721.90683108C021@mx3.tudelft.nl>

Author: rvogelij
Date: Thu Feb  9 02:17:21 2012
New Revision: 24276
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24276&sc=1

Log:
-removed unneeded stuff
-added statistics (in log)
-less console spamming

Deleted:
   spoofax-ace/resources/javascript/jssglr/
Modified:
   spoofax-ace/build.xml
   spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-append.js
   spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-prepend.js
   spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java
   spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java
   spoofax-ace/src/spoofax/ace/utils/S2AUtils.java

Modified: spoofax-ace/build.xml
==============================================================================
--- spoofax-ace/build.xml	Wed Feb  8 20:59:44 2012	(r24275)
+++ spoofax-ace/build.xml	Thu Feb  9 02:17:21 2012	(r24276)
@@ -13,8 +13,6 @@
 			</classpath>
 			<arg value="--i"/>
 				<arg value="${spoofaxproj}"/>
-			<arg value="--entry"/>
-				<arg value="${strentry}"/>
 			<arg value="--jssglr"/>
 				<arg value="${jssglr}"/>
 			<arg value="--s2js"/>

Modified: spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-append.js
==============================================================================
--- spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-append.js	Wed Feb  8 20:59:44 2012	(r24275)
+++ spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-append.js	Thu Feb  9 02:17:21 2012	(r24276)
@@ -1,4 +1,3 @@
-
 }).call(SpoofaxToAceWorker.prototype);
 });
 

Modified: spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-prepend.js
==============================================================================
--- spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-prepend.js	Wed Feb  8 20:59:44 2012	(r24275)
+++ spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-prepend.js	Thu Feb  9 02:17:21 2012	(r24276)
@@ -1498,8 +1498,6 @@
 
 define('ace/mode/spoofax2ace_worker', ['require', 'exports', 'module' , 'ace/lib/oop', 'ace/worker/mirror'], function(require, exports, module) { var oop = require("ace/lib/oop"); 
 var Mirror = require("ace/worker/mirror").Mirror; 
-
-
 var working = false;
 var goAgain = false;
 var SpoofaxToAceWorker = exports.SpoofaxToAceWorker = function(sender) {
@@ -1511,6 +1509,40 @@
     this.load();
     Mirror.call(this, sender);
 };
+
+/*
+ *  Statistics collecting start
+ */
+
+var lastLineCount = 0;
+var analyzeCount = 0;
+var totalAnalyzeTime = 0;
+
+
+var doneAnalyzing = function(lineCount, timeTaken)
+{
+	if (lastLineCount !== lineCount)
+	{
+		lastLineCount = lineCount;
+		analyzeCount = 1;
+		totalAnalyzeTime = timeTaken;
+	} else
+	{
+        	totalAnalyzeTime = totalAnalyzeTime + timeTaken;
+	        analyzeCount = analyzeCount + 1;
+		sender.emit("log", "Analyzed " + lastLineCount +" lines " + analyzeCount + " times. cur:" + timeTaken + " avg: " + averageAnalyzeTime());
+	}
+}
+
+var averageAnalyzeTime = function() 
+{
+  return parseInt(totalAnalyzeTime/analyzeCount);
+}
+
+/*
+ *  Statistics collecting end
+ */
+
 oop.inherits(SpoofaxToAceWorker, Mirror); (function() {
     this.log = function(value) {
         if(typeof(console) !== 'undefined' && console.log !== undefined) {
@@ -1531,16 +1563,17 @@
 		if (!this.loading)
 		{
 			this.loading = true;
+			var start = new Date().getTime();
 			this.analyzer = StrategoJS.init();
+
 			this.loaded = true;
 			this.loading = false;
-		        sender.emit("log", "loaded.");
+			var elapsed = (new Date().getTime() - start);
+		        sender.emit("log", "loaded. (" +  elapsed + ")");
 			this.onUpdate();
 		}
 		return;
 	}
-    	
-
     	if (working)
     	{
                 sender.emit("log", "spoofax2ace_worker.onUpdate Busy with last task. finishing...");
@@ -1549,40 +1582,40 @@
     	}
     	working = true;
     	goAgain = false;
+	
+	sender.emit("log", "spoofax2ace_worker.onUpdate enter");
+//        sender.emit("log", "Analyze start");
+	var analyze_start = new Date().getTime();
+
     
         var value = this.doc.getValue();
         value = value.replace(/^#!.*\n/, "\n");
-        sender.emit("log", "spoofax2ace_worker.onUpdate enter");
         
-        //var result = StrategoJS.init().main(["aap", value]);
-        sender.emit("log", "Analyze start");
         var result = this.analyzer.main(["aap", value]);
-        sender.emit("log", "Analyze finished.");
         if (result === null)
         {
         	working = false;
         	return;
         }
-        
         var splitlines = value.split('\n');
-        //var result = this.parser.parseAndTokenize(splitlines.length, value);
-        //sender.emit("log", result);
         var length = result.tokens.length;
         var parsed = [];
         for(var i = 0; i < length; i++) {
             var line = splitlines[i];
             var tokens = result.tokens[i];
             parsed[i] = {text: line, tokens: tokens};
-            //sender.emit("log", result.tokens[i].ToString());
         }
-        debugger;
+
+
         sender.emit("jsglr", {
             parsed: parsed,
             errors: result.errors
-            //errors: [ { column: 5, row: 10, type:'error', text:'trol'} ]
         });
-        //sender.emit("log", parsed);
-        //sender.emit("log", result.errors);
+
+	var analyze_elapsed = (new Date().getTime() - analyze_start);
+
+	doneAnalyzing(length, analyze_elapsed);
+
         sender.emit("log", "spoofax2ace_worker.onUpdate exit");
         working = false;
         if (goAgain)

Modified: spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java	Wed Feb  8 20:59:44 2012	(r24275)
+++ spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java	Thu Feb  9 02:17:21 2012	(r24276)
@@ -22,11 +22,12 @@
 	        "libstratego-lib\n" +
 	        esvParser.GetCtreeName() + "\n" +
 	        "  rules\n" +
-	        "    main: [sourcecode,x] -> <prim(\"JSSGLR_ACE_TOKENIZE\", parser)>(ast, [errors, warnings, notes])\n" + 
+	        "    main: [sourcecode,x] -> <prim(\"JSSGLR_ACE_TOKENIZE\", parser)>(ast, [errors, warnings, notes])\n" +
 	        "      where table := <import-term("+esvParser.GetTableName()+")>\n" +
 	        "      where parser := <prim(\"JSSGLR_GET_PARSER\")>table\n" +
 	        "      where ast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode\n" +
-	        "      where (ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(ast, \"\", \"\")\n";
+	        "      where (ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(ast, \"\", \"\")\n"
+			;
 			FileWriter fstream = new FileWriter(entryFile);
 			BufferedWriter out = new BufferedWriter(fstream);
 			out.write(strategoMain);

Modified: spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Wed Feb  8 20:59:44 2012	(r24275)
+++ spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Thu Feb  9 02:17:21 2012	(r24276)
@@ -46,7 +46,7 @@
 	
 	public boolean Go() throws S2ASpoofaxSetupException, S2AWrapperException, S2ACompilerException, S2AValidatorException, IOException
 	{
-		final String tmpDir = "/tmp/s2a/";
+		final String tmpDir = "./tmp/";
 		final String jsbin = tmpDir+"/jsbin.js";
 		final String wrappedJsBin =  tmpDir+"/jsbin.wrapped.js";
 		final String aceWorkerBin = tmpDir+"/aceworker.js";
@@ -54,6 +54,7 @@
 		final String esvFile = S2ASpoofaxInfo.GetEsvSettings(_spoofaxProjDir);
 		final S2AEsvParser esv = new S2AEsvParser(esvFile);
 		new File(tmpDir.substring(0,tmpDir.lastIndexOf(File.separator))).mkdirs();
+		S2AUtils.EmptyDir(tmpDir);
 		
 		CacheRequiredFiles(tmpDir, esv);
 		S2AEntryPoint.GenerateS2AEntry(strategoEntry, esv);
@@ -172,7 +173,7 @@
 			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/jssglr/jssglr_append.js", wrappedStrProg);
 			S2AUtils.WriteFileToStream(strProg, wrappedStrProg);
 			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/ace-wrapper-end.js", wrappedStrProg);
-			//WriteFileToStream(_str2jsPath + "/src/javascript/cli-wrapper.js", wrappedStrProg);
+			//S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/cli-wrapper.js", wrappedStrProg);
 			wrappedStrProg.flush();
 		} catch (IOException e) {
 			System.err.println("###CRITICAL ERROR### " + e.getMessage());
@@ -195,7 +196,7 @@
 		"-I " + _strategoLib + " " +
 		"-I " + _strategoCtrees + " " +
 		"";
-		
+		 
 		PrintStream buOut = System.out;
 		PrintStream buErr = System.err;
 		PrintStream outp = null;

Modified: spoofax-ace/src/spoofax/ace/utils/S2AUtils.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/utils/S2AUtils.java	Wed Feb  8 20:59:44 2012	(r24275)
+++ spoofax-ace/src/spoofax/ace/utils/S2AUtils.java	Thu Feb  9 02:17:21 2012	(r24276)
@@ -71,5 +71,20 @@
 		return count;
 	}
 	
+	public static boolean EmptyDir(String path)
+	{
+		System.err.println("Emptying dir: " + path);
+		boolean r = true;
+		for (File f : new File(path).listFiles()) 
+		{
+			if (f.isDirectory())
+				EmptyDir(f.getAbsolutePath());
+			else
+				r = r && f.delete();
+		}
+		return r;
+	}
+			
+	
 	
 }

From L.C.L.Kats at tudelft.nl  Thu Feb  9 13:01:45 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 09 Feb 2012 12:01:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24277 -
	spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments
Message-ID: <20120209120145.9EAD17F808F@mx1.tudelft.nl>

Author: LennartKats
Date: Thu Feb  9 12:01:45 2012
New Revision: 24277
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24277&sc=1

Log:
do origin tracking for (large) lists without recursion

Modified:
   spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java

Modified: spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java	Thu Feb  9 02:17:21 2012	(r24276)
+++ spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java	Thu Feb  9 12:01:45 2012	(r24277)
@@ -174,26 +174,16 @@
 	 * May add origin tracking information to list Cons nodes.
 	 */
 	private IStrategoList makeListLink(IStrategoList terms, IStrategoList old) {
-		if (terms.isEmpty()) {
-			assert old.isEmpty();
-			// We don't bother linking empty lists
-			return terms;
-		} else {
-			IStrategoTerm head = terms.head();
-			IStrategoList tail = terms.tail();
-			IStrategoTerm newHead = ensureLink(head, old.head(), false);
-			IStrategoList newTail = makeListLink(tail, old.tail());
-			
-			/* UNDONE: Origin tracking for Cons nodes
-			           (relatively expensive, and who cares about them?)
-			if (old instanceof WrappedAstNodeList) {
-				WrappedAstNodeList oldList = (WrappedAstNodeList) old;
-				return new WrappedAstNodeList(oldList.getNode(), oldList.getOffset(), head, tail, terms.getAnnotations());
-			}
-			*/
-			if (head == newHead && tail == newTail) return terms;
-			return makeListCons(newHead, newTail, terms.getAnnotations());
+		assert terms.size() == old.size();
+		while (!terms.isEmpty()) {
+			IStrategoTerm term = terms.head();
+			IStrategoTerm oldTerm = old.head();
+			IStrategoTerm newTerm = ensureLink(term, oldTerm, false);
+			assert newTerm == term : "We assume mutable operations for origins";
+			terms = terms.tail();
+			old = old.tail();
 		}
+		return terms;
 	}
 	
 	protected IStrategoTerm[] ensureChildLinks(IStrategoTerm[] kids, IStrategoTerm old) {

From L.C.L.Kats at tudelft.nl  Thu Feb  9 13:02:10 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 09 Feb 2012 12:02:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24278 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120209120210.71D4B108C05D@mx3.tudelft.nl>

Author: LennartKats
Date: Thu Feb  9 12:02:10 2012
New Revision: 24278
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24278&sc=1

Log:
fixed a problem where index file references would not be shared

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Thu Feb  9 12:01:45 2012	(r24277)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Thu Feb  9 12:02:10 2012	(r24278)
@@ -295,7 +295,7 @@
 	private static void fromFileEntriesTerm(IStrategoTerm fileEntries, SemanticIndex result) throws IOException {
 		if (tryGetConstructor(fileEntries) == FILE_ENTRIES_CON) {
 			try {
-				SemanticIndexFile file = SemanticIndexFile.fromTerm(null, termAt(fileEntries, 0));
+				SemanticIndexFile file = result.getFile(termAt(fileEntries, 0));
 				result.addAll((IStrategoList) termAt(fileEntries, 1), file);
 			} catch (IllegalStateException e) {
 				throw new IllegalStateException(e);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Thu Feb  9 12:01:45 2012	(r24277)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Thu Feb  9 12:02:10 2012	(r24278)
@@ -80,7 +80,7 @@
 	
 	public SemanticIndexFile(URI uri, String descriptor, Date time) {
 		this.uri = uri;
-		this.descriptor = descriptor;
+		this.descriptor = "".equals(descriptor) ? null : descriptor;
 		this.time = time;
 	}
 	
@@ -103,7 +103,7 @@
 			descriptor = asJavaString(term.getSubterm(1));
 		} else {
 			name = asJavaString(term);
-			descriptor = DEFAULT_DESCRIPTOR;
+			descriptor = null;
 		}
 		File file = new File(name);
 		if (!file.isAbsolute() && agent != null)

From L.C.L.Kats at tudelft.nl  Thu Feb  9 13:22:53 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 09 Feb 2012 12:22:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24279 -
	spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments
Message-ID: <20120209122253.A00FA108C033@mx3.tudelft.nl>

Author: LennartKats
Date: Thu Feb  9 12:22:52 2012
New Revision: 24279
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24279&sc=1

Log:
fixed all/map regression

Modified:
   spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java

Modified: spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java	Thu Feb  9 12:02:10 2012	(r24278)
+++ spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java	Thu Feb  9 12:22:52 2012	(r24279)
@@ -174,6 +174,7 @@
 	 * May add origin tracking information to list Cons nodes.
 	 */
 	private IStrategoList makeListLink(IStrategoList terms, IStrategoList old) {
+		IStrategoList results = terms;
 		assert terms.size() == old.size();
 		while (!terms.isEmpty()) {
 			IStrategoTerm term = terms.head();
@@ -183,7 +184,7 @@
 			terms = terms.tail();
 			old = old.tail();
 		}
-		return terms;
+		return results;
 	}
 	
 	protected IStrategoTerm[] ensureChildLinks(IStrategoTerm[] kids, IStrategoTerm old) {

From tobivollebregt at gmail.com  Thu Feb  9 13:27:55 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Thu, 09 Feb 2012 12:27:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24280 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans:
	analyze codegen codegen/str context context/esv context/str
	normalize unit-tests utils
Message-ID: <20120209122755.770EBCC361@mx4.tudelft.nl>

Author: tvo
Date: Thu Feb  9 12:27:55 2012
New Revision: 24280
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24280&sc=1

Log:
SpoofaxLang: Add missing imports (in editor)

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/esv/declare.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare-utils.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/signature-generator.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/to-spx.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/symboltable.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/cache.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/main.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -7,6 +7,7 @@
 	normalize/signatures
 imports 
 	include/SpoofaxLang
+	include/libtemplatelang
 imports
 	common
 	utils/annotations

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -18,6 +18,7 @@
 	config
 imports
 	include/SpoofaxLang
+	include/libtemplatelang
 imports
 	analyze/main
 	lib/editor-common.generated

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/generate.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -12,6 +12,7 @@
 imports	
 	lib/editor-common.generated 
 	include/SpoofaxLang
+	include/libtemplatelang
 imports	
 	context/-
 	normalize/signatures

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -1,6 +1,7 @@
 module codegen/str/to-stratego
 imports
   libstratego-lib
+  libstrc
   include/libtemplatelang
 	lib/editor-common.generated
 imports

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/esv/declare.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/esv/declare.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/esv/declare.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -2,6 +2,7 @@
 
 imports
 	include/SpoofaxLang
+	include/libtemplatelang
 	context/-
 	context/sdf/-
 	utils/debug

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/resolve-declarations.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -1,7 +1,8 @@
 module context/resolve-declarations
 
 imports
-	include/SpoofaxLang 
+	include/SpoofaxLang
+	include/libtemplatelang 
 	lib/editor-common.generated
 imports 
 	context/-

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/scope-tree.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -1,6 +1,7 @@
 module context/scope-tree
 imports
-	include/SpoofaxLang 
+	include/SpoofaxLang
+	include/libtemplatelang 
 imports 
 	context/signatures 
 	context/resolve-symbols

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/store-imports.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -1,6 +1,7 @@
 module context/store-imports 
 imports
-	include/SpoofaxLang 
+	include/SpoofaxLang
+	include/libtemplatelang 
 	lib/editor-common.generated
 imports 
 	context/-

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare-utils.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare-utils.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/declare-utils.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -8,6 +8,7 @@
 imports
 	lib/editor-common.generated
 	include/SpoofaxLang
+	include/libtemplatelang
 imports	
 	utils/sourcedir
  	utils/debug

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/signature-generator.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/signature-generator.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/str/signature-generator.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -1,7 +1,8 @@
 module context/str/signature-generator
 
 imports 
-	include/SpoofaxLang
+	include/SpoofaxLang
+	include/libtemplatelang
 	utils/contract
 	utils/annotations
 imports

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/to-spx.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/to-spx.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/normalize/to-spx.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -2,6 +2,7 @@
 
 imports 
 	include/SpoofaxLang
+	include/libtemplatelang
 	utils/contract
 	normalize/-
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/contracts.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -1,7 +1,8 @@
 module unit-tests/contracts 
 
 imports
-	include/SpoofaxLang 
+	include/SpoofaxLang
+	include/libtemplatelang 
 	lib/editor-common.generated
 	utils/debug
 imports

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/symboltable.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/symboltable.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/unit-tests/symboltable.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -2,7 +2,7 @@
 
 imports 
 	normalize/-
-	include/spoofaxlang
+	include/SpoofaxLang
 	lib/editor-common.generated
 	context/symboltable
 	common

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/cache.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/cache.str	Thu Feb  9 12:22:52 2012	(r24279)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/utils/cache.str	Thu Feb  9 12:27:55 2012	(r24280)
@@ -1,6 +1,7 @@
 module utils/cache
-imports 
-	common 
+imports
+  include/libtemplatelang
+	common
 	lib/editor-common.generated 
 	utils/path
 	utils/debug

From L.C.L.Kats at tudelft.nl  Thu Feb  9 13:53:18 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 09 Feb 2012 12:53:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24281 -
	spoofax-imp/trunk/experimental/NamingExperiment/.externalToolBuilders
Message-ID: <20120209125318.07FEA7F8025@mx1.tudelft.nl>

Author: LennartKats
Date: Thu Feb  9 12:53:17 2012
New Revision: 24281
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24281&sc=1

Log:
disabled verbose ant build

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/.externalToolBuilders/NamingExperiment build.main.xml.launch

Modified: spoofax-imp/trunk/experimental/NamingExperiment/.externalToolBuilders/NamingExperiment build.main.xml.launch
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/.externalToolBuilders/NamingExperiment build.main.xml.launch	Thu Feb  9 12:27:55 2012	(r24280)
+++ spoofax-imp/trunk/experimental/NamingExperiment/.externalToolBuilders/NamingExperiment build.main.xml.launch	Thu Feb  9 12:53:17 2012	(r24281)
@@ -20,7 +20,6 @@
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/NamingExperiment/build.main.xml}"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS" value="-verbose"/>
 <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/NamingExperiment}"/>
 <stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>

From L.C.L.Kats at tudelft.nl  Thu Feb  9 13:53:48 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 09 Feb 2012 12:53:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24282 -
	spoofax-imp/trunk/experimental/NamingExperiment/trans
Message-ID: <20120209125348.186947F8025@mx1.tudelft.nl>

Author: LennartKats
Date: Thu Feb  9 12:53:47 2012
New Revision: 24282
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24282&sc=1

Log:
fixed call to index API without calling index-setup first

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Thu Feb  9 12:53:17 2012	(r24281)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Thu Feb  9 12:53:47 2012	(r24282)
@@ -78,6 +78,8 @@
   index-allfiles:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path]);
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
       result   := <map(\filename -> FileEntries(filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
   

From L.C.L.Kats at tudelft.nl  Thu Feb  9 13:56:51 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 09 Feb 2012 12:56:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24283 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	dynamicloading parser services stratego
Message-ID: <20120209125651.D4045CC37B@mx4.tudelft.nl>

Author: LennartKats
Date: Thu Feb  9 12:56:51 2012
New Revision: 24283
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24283&sc=1

Log:
- fixes to file system event notification
- support for file deletions
- changed StrategoObserver interface to use Files instead of IResources, in order to support non-existent files

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseTableProvider.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/CustomDisambiguator.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/DebugModeBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoRefactoring.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceAttachment.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseTableProvider.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseTableProvider.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/DynamicParseTableProvider.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -2,6 +2,7 @@
 
 import static org.spoofax.interpreter.core.Tools.asJavaString;
 import static org.spoofax.interpreter.core.Tools.isTermString;
+import static org.strategoxt.imp.runtime.stratego.SourceAttachment.*;
 
 import java.io.File;
 import java.io.IOException;
@@ -52,9 +53,8 @@
 				runtime = getDescriptor().createService(StrategoObserver.class, controller);
 			runtime.getLock().lock();
 			try {
-				IResource resource = EditorIOAgent.getResource(input);
 				IStrategoTerm pathTerm = Environment.getTermFactory().makeString(input.getAbsolutePath());
-				IStrategoTerm table = runtime.invokeSilent(providerFunction, pathTerm, resource);
+				IStrategoTerm table = runtime.invokeSilent(providerFunction, pathTerm, input);
 				if (isTermString(table)) {
 					setTable(Environment.loadParseTable(asJavaString(table)));
 				} else {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/CustomDisambiguator.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/CustomDisambiguator.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/CustomDisambiguator.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -7,13 +7,14 @@
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.putImploderAttachment;
 import static org.spoofax.terms.TermVisitor.tryGetListIterator;
 import static org.spoofax.terms.attachments.OriginAttachment.getOrigin;
+import static org.strategoxt.imp.runtime.stratego.SourceAttachment.getFile;
 import static org.strategoxt.imp.runtime.stratego.SourceAttachment.getParseController;
 import static org.strategoxt.imp.runtime.stratego.SourceAttachment.getResource;
 
+import java.io.File;
 import java.lang.ref.WeakReference;
 import java.util.Iterator;
 
-import org.eclipse.core.resources.IResource;
 import org.eclipse.core.runtime.OperationCanceledException;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.client.imploder.IToken;
@@ -22,10 +23,10 @@
 import org.spoofax.terms.attachments.OriginAttachment;
 import org.spoofax.terms.attachments.ParentAttachment;
 import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 import org.strategoxt.imp.runtime.services.StrategoObserver;
 import org.strategoxt.imp.runtime.stratego.SourceAttachment;
-import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 
 /**
  * A class that uses the language runtime to disambiguate an AST.
@@ -61,10 +62,10 @@
 
 		myRuntime.getLock().lock();
 		try {
-			IResource resource = getResource(ast);
+			File file = getFile(ast);
 			for (String f : functions) {
 				IStrategoTerm input = myRuntime.getInputBuilder().makeInputTerm(ast, false);
-				IStrategoTerm result = myRuntime.invokeSilent(f, input, resource);
+				IStrategoTerm result = myRuntime.invokeSilent(f, input, file);
 				if (result == null) {
 					myRuntime.reportRewritingFailed();
 					Environment.logException("Disambiguation failed (see error log)");

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -113,6 +113,11 @@
 		if (currentAst == null) forceInitialParse();
 		return currentAst;
 	}
+	
+	public void internalSetAst(IStrategoTerm ast) {
+		currentAst = ast;
+		errorHandler.setRecoveryFailed(false);
+	}
 
 	public final ISourceProject getProject() {
 		return project;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/ContentProposer.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -6,7 +6,7 @@
 import static org.spoofax.interpreter.terms.IStrategoTerm.TUPLE;
 import static org.spoofax.terms.Term.tryGetConstructor;
 import static org.strategoxt.imp.runtime.services.ContentProposerParser.COMPLETION_UNKNOWN;
-import static org.strategoxt.imp.runtime.stratego.SourceAttachment.getResource;
+import static org.strategoxt.imp.runtime.stratego.SourceAttachment.getFile;
 
 import java.io.IOException;
 import java.util.Arrays;
@@ -339,7 +339,7 @@
 					observer.update(controller, new NullProgressMonitor());
 				}
 				IStrategoTerm input = observer.getInputBuilder().makeInputTerm(completionNode, true, false);
-				result = observer.invokeSilent(completionFunction, input, getResource(completionNode));
+				result = observer.invokeSilent(completionFunction, input, getFile(completionNode));
 				if (result == null) {
 					observer.reportRewritingFailed();
 					result = TermFactory.EMPTY_LIST;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/CustomStrategyBuilder.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -100,7 +100,7 @@
 		IStrategoTerm input = getDerivedFromEditor() == null
 				? node
 				: inputBuilder.implodeATerm(inputBuilder.getImplodableNode(node));
-		IStrategoTerm result = getObserver().invoke(getBuilderRule(), input, SourceAttachment.getResource(node));
+		IStrategoTerm result = getObserver().invoke(getBuilderRule(), input, SourceAttachment.getFile(node));
 		if (result != null) return addFileName(result, SourceAttachment.getResource(node));
 		String[] trace1 = getObserver().getRuntime().getCompiledContext().getTrace();
 		

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/DebugModeBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/DebugModeBuilder.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/DebugModeBuilder.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -9,7 +9,6 @@
 import org.eclipse.core.runtime.Status;
 import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.jface.dialogs.ErrorDialog;
-import org.eclipse.ui.progress.UIJob;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -4,15 +4,19 @@
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getRightToken;
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort;
 import static org.spoofax.terms.Term.tryGetConstructor;
+import static org.spoofax.terms.attachments.OriginAttachment.tryGetOrigin;
 import static org.spoofax.terms.attachments.ParentAttachment.getParent;
 import static org.spoofax.terms.attachments.ParentAttachment.getRoot;
-import static org.spoofax.terms.attachments.OriginAttachment.tryGetOrigin;
 
+import java.io.File;
+import java.io.FileNotFoundException;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Map;
 
 import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.Path;
 import org.spoofax.interpreter.terms.IStrategoConstructor;
 import org.spoofax.interpreter.terms.IStrategoList;
 import org.spoofax.interpreter.terms.IStrategoTerm;
@@ -20,10 +24,11 @@
 import org.spoofax.interpreter.terms.ITermFactory;
 import org.spoofax.jsglr.client.imploder.IToken;
 import org.spoofax.jsglr.client.imploder.TermTreeFactory;
+import org.spoofax.terms.StrategoSubList;
 import org.strategoxt.HybridInterpreter;
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
-import org.spoofax.terms.StrategoSubList;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
 import org.strategoxt.imp.runtime.stratego.SourceAttachment;
 import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
 import org.strategoxt.lang.Context;
@@ -131,9 +136,18 @@
 			IStrategoTerm rootTerm) {
 		ITermFactory factory = Environment.getTermFactory();
 		assert factory.getDefaultStorageType() == IStrategoTerm.MUTABLE;
-		IResource resource = SourceAttachment.getResource(node);
-		String path = resource == null ? "string" : resource.getProjectRelativePath().toPortableString();
-		String absolutePath = resource == null ? "." : tryGetProjectPath(resource);
+		File file = SourceAttachment.getFile(node);
+		IPath project = tryGetProjectPath(file);
+		String path, projectPath;
+		if (file != null && project != null) {
+			projectPath = project.toPortableString();
+			IPath fullPath = new Path(file.toString());
+			path = fullPath.removeFirstSegments(fullPath.matchingFirstSegments(project)).toPortableString();
+			assert !new File(path).isAbsolute();
+		} else {
+			projectPath = ".";
+			path = "string";
+		}
 		
 		if (includeSubNode) {
 			IStrategoTerm[] inputParts = {
@@ -141,19 +155,28 @@
 					termPath,
 					rootTerm,
 					factory.makeString(path),
-					factory.makeString(absolutePath)
+					factory.makeString(projectPath)
 				};
 			return factory.makeTuple(inputParts);
 		} else {
 			IStrategoTerm[] inputParts = {
 					node,
 					factory.makeString(path),
-					factory.makeString(absolutePath)
+					factory.makeString(projectPath)
 				};
 			return factory.makeTuple(inputParts);
 		}
 	}
 
+	private IPath tryGetProjectPath(File file) {
+		try {
+			if (file == null) return null;
+			return EditorIOAgent.getProject(file).getLocation();
+		} catch (FileNotFoundException e) {
+			return null;
+		}
+	}
+
 	public IStrategoTerm makeInputTermRefactoring(IStrategoTerm userInput, IStrategoTerm node, boolean includeSubNode, boolean source) {
 		IStrategoTuple tuple = makeInputTerm(node, includeSubNode, source);
 		ITermFactory factory = Environment.getTermFactory();

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -302,7 +302,7 @@
 		IStrategoTerm inputTerm = derivedFromEditor != null
 				? observer.getInputBuilder().makeATermInputTerm(node, true, derivedFromEditor.getResource()) 
 				: observer.getInputBuilder().makeInputTerm(node, true, source);
-		IStrategoTerm result = observer.invoke(builderRule, inputTerm, SourceAttachment.getResource(node));
+		IStrategoTerm result = observer.invoke(builderRule, inputTerm, SourceAttachment.getFile(node));
 		return result;
 	}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -13,6 +13,7 @@
 import static org.strategoxt.imp.runtime.dynamicloading.TermReader.termContents;
 
 import java.io.File;
+import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.net.URL;
 import java.util.ArrayList;
@@ -486,7 +487,7 @@
 				feedback = invokeSilent(
 					feedbackFunction,
 					getInputBuilder().makeInputTerm(ast, false), 
-					SourceAttachment.getResource(ast),
+					SourceAttachment.getFile(ast),
 					true
 				);	
 				if (feedback == null) {
@@ -646,19 +647,19 @@
 			throws UndefinedStrategyException, InterpreterErrorExit, InterpreterExit, InterpreterException {
 
 		IStrategoTerm input = getInputBuilder().makeInputTerm(node, true);
-		return invoke(function, input, SourceAttachment.getResource(node));
+		return invoke(function, input, SourceAttachment.getFile(node));
 	}
 	
 	/**
 	 * Invoke a Stratego function with a specific term its input,
 	 * given a particular working directory.
 	 */
-	public IStrategoTerm invoke(String function, IStrategoTerm term, IResource resource)
+	public IStrategoTerm invoke(String function, IStrategoTerm term, File file)
 			throws UndefinedStrategyException, InterpreterErrorExit, InterpreterExit, InterpreterException {
-		return invoke(function, term, resource, false);
+		return invoke(function, term, file, false);
 	}
 
-	private IStrategoTerm invoke(String function, IStrategoTerm term, IResource resource,
+	private IStrategoTerm invoke(String function, IStrategoTerm term, File file,
 			boolean assignDesugaredOrigins) throws InterpreterErrorExit, InterpreterExit,
 			UndefinedStrategyException, InterpreterException {
 		getLock().lock();
@@ -671,7 +672,7 @@
 			//       (e.g., overriding Context.lookupPrimitive to throw an OperationCanceledException) 
 			
 			runtime.setCurrent(term);
-			configureRuntime(resource);
+			configureRuntime(file);
 
 			((LoggingIOAgent) runtime.getIOAgent()).clearLog();
 			assert runtime.getCompiledContext().getOperatorRegistry(IMPJSGLRLibrary.REGISTRY_NAME)
@@ -712,7 +713,7 @@
 	 */
 	public IStrategoTerm invokeSilent(String function, IStrategoTerm node) {
 		try {
-			return invokeSilent(function, getInputBuilder().makeInputTerm(node, true), SourceAttachment.getResource(node));
+			return invokeSilent(function, getInputBuilder().makeInputTerm(node, true), SourceAttachment.getFile(node));
 		} catch (RuntimeException e) {
 			if (runtime != null) runtime.getIOAgent().printError("Internal error evaluating " + function + " (" + name(e) + "; see error log)");
 			Environment.logException("Internal error evaluating strategy " + function, e);
@@ -726,24 +727,28 @@
 	 * given a particular working directory.
 	 * Logs and swallows all exceptions.
 	 */
-	public IStrategoTerm invokeSilent(String function, IStrategoTerm input, IResource resource) {
-		return invokeSilent(function, input, resource, false);
+	public IStrategoTerm invokeSilent(String function, IStrategoTerm input, File file) {
+		return invokeSilent(function, input, file, false);
 	}
 
-	private IStrategoTerm invokeSilent(String function, IStrategoTerm input, IResource resource,
+	private IStrategoTerm invokeSilent(String function, IStrategoTerm input, File file,
 			boolean assignDesugaredOrigins) {
 		assert getLock().isHeldByCurrentThread();
 		IStrategoTerm result = null;
 		try {
 			wasExceptionLogged = true;
-			result = invoke(function, input, resource, assignDesugaredOrigins);
+			result = invoke(function, input, file, assignDesugaredOrigins);
 			wasExceptionLogged = false;
 		} catch (InterpreterExit e) {
 			if (descriptor.isDynamicallyLoaded()) StrategoConsole.activateConsole();
-			messages.clearMarkers(resource);
-			if (!(e instanceof InterpreterErrorExit))
-				messages.addMarkerFirstLine(resource, "Analysis failed (" + name(e) + "; see error log)", IMarker.SEVERITY_ERROR);
-			messages.commitAllChanges();
+			try {
+				messages.clearMarkers(EditorIOAgent.getResource(file));
+				if (!(e instanceof InterpreterErrorExit))
+					messages.addMarkerFirstLine(EditorIOAgent.getResource(file), "Analysis failed (" + name(e) + "; see error log)", IMarker.SEVERITY_ERROR);
+				messages.commitAllChanges();
+			} catch (FileNotFoundException f) {
+				// No resource for file
+			}
 			Environment.logException("Runtime exited when evaluating strategy " + function, runtime.getCompiledContext(), e);
 		} catch (UndefinedStrategyException e) {
 			// Note that this condition may also be reached when the semantic service hasn't been loaded yet
@@ -796,11 +801,18 @@
 		return null;
 	}
 	
-	private void configureRuntime(IResource resource) {
+	private void configureRuntime(File file) {
 		assert getLock().isHeldByCurrentThread();
 		
-		String projectPath = getInputBuilder().tryGetProjectPath(resource);
-		IProject project = resource.getProject();
+		IProject project;
+		String projectPath;
+		try {
+			project = EditorIOAgent.getProject(file);
+			projectPath = project.getLocation().toString();
+		} catch (FileNotFoundException e) {
+			project = null;
+			projectPath = "";
+		}
 		
 		configureRuntime(project, projectPath);
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundJob.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -44,7 +44,7 @@
 			observer.getLock().lock();
 			
 			((EditorIOAgent)observer.getRuntime().getIOAgent()).setJob(this);
-			observer.invoke(strategyName, term, project);
+			observer.invoke(strategyName, term, project.getLocation().toFile());
 		    
 		} catch (Exception e) {
 			Environment.logException("Background job failed", e);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -3,22 +3,31 @@
 import java.io.BufferedInputStream;
 import java.io.File;
 import java.io.FileInputStream;
+import java.io.IOException;
 
+import org.eclipse.core.internal.resources.Workspace;
 import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IResource;
+import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.IPath;
 import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Path;
 import org.eclipse.core.runtime.Status;
 import org.eclipse.imp.language.Language;
 import org.eclipse.imp.language.LanguageRegistry;
 import org.eclipse.imp.model.ISourceProject;
 import org.eclipse.imp.model.ModelFactory;
+import org.eclipse.imp.model.ModelFactory.ModelException;
 import org.eclipse.imp.parser.IParseController;
+import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+import org.strategoxt.imp.runtime.stratego.SourceAttachment;
 
 public class StrategoObserverBackgroundUpdateJob implements StrategoAnalysisJob {
 
@@ -61,23 +70,26 @@
 				
 				// Read file
 				File file = absolutePath.toFile();
-				byte[] buffer = new byte[(int) file.length()];
-			    BufferedInputStream f = new BufferedInputStream(new FileInputStream(file));
-			    f.read(buffer);
-			    String input = new String(buffer);
+				String input = readFile(file);
 			
 			    // Parse file
 			    ISourceProject sproject = ModelFactory.open(project);
 			    
 			    parseController.initialize(path, sproject, null);
-			    parseController.parse(input, new NullProgressMonitor());
+			    IStrategoTerm ast = parseController.parse(input, new NullProgressMonitor());
+			    if (ast == null) {
+			    	// HACK: default to () as the AST
+			    	parseController.internalSetAst(makeFakeAST(parseController, file));
+			    }
 				
 			    observer.update(parseController, monitor);
 			} finally {
 				observer.getLock().unlock();
 			}
 		    
-		} catch (Exception e) {
+		} catch (ModelException e) {
+			Environment.logException("Background job failed", e);
+		} catch (BadDescriptorException e) {
 			Environment.logException("Background job failed", e);
 		}
 		
@@ -85,6 +97,32 @@
 		
 	}
 
+	private static IStrategoTerm makeFakeAST(SGLRParseController controller, File file) {
+		// HACK: make fake resource using internal API
+		//       we really need to stop using the stupid IResource interface where possible
+		IStrategoTerm result = Environment.getTermFactory().makeTuple();
+		Workspace workspace = (Workspace) ResourcesPlugin.getWorkspace();
+		IResource resource = workspace.newResource(new Path(file.getAbsolutePath()), IResource.FILE);
+		SourceAttachment.putSource(result, resource, controller);
+		return result;
+	}
+
+	private String readFile(File file) {
+		if (file.exists()) {
+			try {
+				byte[] buffer = new byte[(int) file.length()];
+			    BufferedInputStream f = new BufferedInputStream(new FileInputStream(file));
+			    f.read(buffer);
+			    return new String(buffer);
+			} catch (IOException e) {
+				Environment.logWarning("Could not read file", e);
+				return ""; // treat as empty file
+			}
+		} else {
+			return ""; // treat as empty file
+		}
+	}
+
 	public IPath getPath() {
 		return this.path;
 	}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoRefactoring.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoRefactoring.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoRefactoring.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -6,6 +6,7 @@
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
 import static org.spoofax.jsglr.client.imploder.ImploderAttachment.hasImploderOrigin;
 
+import java.io.File;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashSet;
@@ -35,7 +36,6 @@
 import org.spoofax.interpreter.terms.ITermFactory;
 import org.spoofax.terms.TermFactory;
 import org.spoofax.terms.attachments.OriginAttachment;
-import org.strategoxt.imp.generator.construct_textual_change_1_0;
 import org.strategoxt.imp.generator.construct_textual_change_4_0;
 import org.strategoxt.imp.runtime.EditorState;
 import org.strategoxt.imp.runtime.Environment;
@@ -264,7 +264,7 @@
 		
 		IStrategoTerm result = null;
 		try {
-			result = observer.invoke(builderRule, inputTerm, getResource());
+			result = observer.invoke(builderRule, inputTerm, getFile());
 		} catch (InterpreterErrorExit e) {
 			Environment.logException("Builder failed", e);
 			e.printStackTrace();
@@ -297,8 +297,8 @@
 		return inputTuple;
 	}
 
-	private IResource getResource() {
-		return SourceAttachment.getResource(node);
+	private File getFile() {
+		return SourceAttachment.getFile(node);
 	}
 	
 	private boolean isValidResultTerm(IStrategoTerm resultTerm) {
@@ -357,7 +357,7 @@
 			@Override
 			public IStrategoTerm invoke(Context context, IStrategoTerm current) {
 				if (sname!=null)
-					return observer.invokeSilent(sname, current, getResource());
+					return observer.invokeSilent(sname, current, getFile());
 				return null;
 			}
 		};

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -7,7 +7,7 @@
 import static org.eclipse.core.resources.IResourceDelta.MOVED_FROM;
 import static org.eclipse.core.resources.IResourceDelta.MOVED_TO;
 import static org.eclipse.core.resources.IResourceDelta.REMOVED;
-import static org.eclipse.core.resources.IResourceDelta.REPLACED;
+import static org.eclipse.core.resources.IResourceDelta.*;
 
 import java.net.URI;
 
@@ -65,13 +65,20 @@
 	}
 
 	public static boolean isSignificantChange(IResourceDelta delta) {
-		int flags = delta.getFlags();
-		return (flags & ADDED) == ADDED
-			|| (flags & REMOVED) == REMOVED
-			|| (flags & CHANGED) == CHANGED
-			|| (flags & CONTENT) == CONTENT
-			|| (flags & MOVED_TO) == MOVED_TO
-			|| (flags & MOVED_FROM) == MOVED_FROM
-			|| (flags & REPLACED) == REPLACED;
+		switch (delta.getKind()) {
+			case ADDED: case REMOVED:
+				return true;
+			case CHANGED:
+				int flags = delta.getFlags();
+				return (flags & CONTENT) == CONTENT
+						|| (flags & MOVED_TO) == MOVED_TO
+						|| (flags & MOVED_FROM) == MOVED_FROM
+						|| (flags & REPLACED) == REPLACED;
+			case NO_CHANGE:
+				return false;
+			default:
+				assert false : "Unknown state";
+				return false;
+		}
 	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceAttachment.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceAttachment.java	Thu Feb  9 12:53:47 2012	(r24282)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceAttachment.java	Thu Feb  9 12:56:51 2012	(r24283)
@@ -4,6 +4,7 @@
 import java.io.FileNotFoundException;
 
 import org.eclipse.core.resources.IResource;
+import org.eclipse.core.runtime.IPath;
 import org.eclipse.imp.parser.IParseController;
 import org.spoofax.interpreter.terms.ISimpleTerm;
 import org.spoofax.jsglr.client.imploder.ImploderAttachment;
@@ -71,6 +72,12 @@
 			return resource.resource;
 		}
 	}
+	
+	public static File getFile(ISimpleTerm term) {
+		IPath path = getResource(term).getLocation();
+		if (path == null) path = getResource(term).getFullPath();
+		return path.toFile();
+	}
 
 	public static IParseController getParseController(ISimpleTerm term) {
 		SourceAttachment resource = ParentAttachment.getRoot(term).getAttachment(TYPE);

From richard at vogelij.nl  Thu Feb  9 14:44:47 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Thu, 09 Feb 2012 13:44:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24284 - in
	spoofax-ace: . src/spoofax/ace src/spoofax/ace/generator
Message-ID: <20120209134447.64BE92B801D@mx2.tudelft.nl>

Author: rvogelij
Date: Thu Feb  9 13:44:47 2012
New Revision: 24284
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24284&sc=1

Log:
Added the building of a cli executable to allow for tests or debugging using the node js debugger

Modified:
   spoofax-ace/build.xml
   spoofax-ace/src/spoofax/ace/SpoofaxToAce.java
   spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java

Modified: spoofax-ace/build.xml
==============================================================================
--- spoofax-ace/build.xml	Thu Feb  9 12:56:51 2012	(r24283)
+++ spoofax-ace/build.xml	Thu Feb  9 13:44:47 2012	(r24284)
@@ -1,9 +1,9 @@
-<project default="compile">
+<project default="jar">
 	<property file="build.properties" />
 	<property name="spoofaxproj" value=""/>
 	<property name="strentry" value=""/>
 
-	<target name="test" depends="jar">
+	<target name="buildaceditor" depends="jar">
 		<java fork="true" classname="spoofax.ace.SpoofaxToAce" failonerror="true">
 			<jvmarg line="-Xmx1536m -ss8m -XX:MaxPermSize=256m"/>
 			<classpath>
@@ -28,11 +28,41 @@
 		</java>
 	</target>
 
+
+        <target name="build" depends="jar">
+                <java fork="true" classname="spoofax.ace.SpoofaxToAce" failonerror="true">
+                        <jvmarg line="-Xmx1536m -ss8m -XX:MaxPermSize=256m"/>
+                        <classpath>
+                                <pathelement location="s2a.jar"/>
+                                <pathelement location="${strxt}"/>
+                                <pathelement location="${s2js}/s2js.jar"/>
+                        </classpath>
+                        <arg value="--i"/>
+                                <arg value="${spoofaxproj}"/>
+                        <arg value="--jssglr"/>
+                                <arg value="${jssglr}"/>
+                        <arg value="--s2js"/>
+                                <arg value="${s2js}"/>
+                        <arg value="--strlib"/>
+                                <arg value="${strlib}"/>
+                        <arg value="--strctrees"/>
+                                <arg value="${strctrees}"/>
+                        <arg value="--testsrc"/>
+                                <arg value="${testsrc}"/>
+			<arg value="--cliexecutable"/>
+				<arg value="prog.js"/>
+                </java>
+        </target>
+
 	<target name="clean">
 		<delete dir="bin"/>
 		<delete dir="out"/>
 		<delete dir="wwwroot"/>
+		<delete dir="tmp"/>
 		<delete file="s2a.jar"/>
+		<delete>
+			<fileset dir="." includes="*.js"/>
+		</delete>
 	</target>
 
 	<target name="compile">

Modified: spoofax-ace/src/spoofax/ace/SpoofaxToAce.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/SpoofaxToAce.java	Thu Feb  9 12:56:51 2012	(r24283)
+++ spoofax-ace/src/spoofax/ace/SpoofaxToAce.java	Thu Feb  9 13:44:47 2012	(r24284)
@@ -10,6 +10,13 @@
  * 	- str2js.jar (Compiled version of the strategoxt-javascript-backend)
  *  - jssglr.generated.js (Through GWT to javascript compiled SGLR parser) 
  *  - Spoofax project which contains the required files
+ *  
+ * Alternatively it is possible to output a NodeJS executable file. (See P_CLIEXEC)
+ * 
+ * Additional info:
+ *   The ace implementation in the resource directory of this project has been extracted 
+ *   from the build directory in a freshly checked out, and built, ace project.
+ *    
  */
 public class SpoofaxToAce {
 	
@@ -21,9 +28,11 @@
 	final static String P_STRCTREE		= "--strctrees";
 	final static String P_WWWOUTPUT		= "--wwwout";
 	final static String P_TESTSRC		= "--testsrc";
+	final static String P_CLIEXEC		= "--cliexecutable";
 	
-	final static String[] reqParams = {P_SPOOFAXDIR, P_JSSGLRJSFILE, P_STR2JSDIR, P_STRLIB, P_STRCTREE, P_WWWOUTPUT};
-	final static String[] optParams = {P_TESTSRC};	
+	
+	final static String[] reqParams = {P_SPOOFAXDIR, P_JSSGLRJSFILE, P_STR2JSDIR, P_STRLIB, P_STRCTREE};
+	final static String[] optParams = {P_WWWOUTPUT, P_TESTSRC, P_CLIEXEC};	
 	
 	public static void main(String[] args) throws Exception {
 		HashMap<String, String> params = new HashMap<String, String>();
@@ -47,15 +56,18 @@
 			}
 		}
 		
-		new S2AGenerator(
+		S2AGenerator s2a = new S2AGenerator(
 				params.get(P_SPOOFAXDIR),
 				params.get(P_JSSGLRJSFILE),
 				params.get(P_STR2JSDIR),
 				params.get(P_STRLIB),
 				params.get(P_STRCTREE),
-				params.get(P_WWWOUTPUT),
 				params.get(P_TESTSRC)
-				).Go();
+				);
+		if (!params.containsKey(P_CLIEXEC))
+			s2a.BuildAceEditor(params.get(P_WWWOUTPUT));
+		else
+			s2a.BuildNodeJSExecutable(params.get(P_CLIEXEC));
 	}
 	
 	private static void showArgs()
@@ -70,9 +82,10 @@
 		System.err.println("\t"+P_STR2JSDIR+" <dir>\t\tPath to str2js");
 		System.err.println("\t"+P_STRLIB+" <dir>\t\tPath to Stratego lib");
 		System.err.println("\t"+P_STRCTREE+" <dir>\tPath to Stratego ctrees");
-		System.err.println("\t"+P_WWWOUTPUT+" <dir>\t\tTarget www root");
 		System.err.println("");
 		System.err.println("Optional:");
+		System.err.println("\t"+P_WWWOUTPUT+" <dir>\t\tTarget www root");		
 		System.err.println("\t"+P_TESTSRC+" <file>\tFull path to a source file from the target language");
+		System.err.println("\t"+P_CLIEXEC+" <file>\tOutput a (NodeJS) executable.");
 	}
 }

Modified: spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Thu Feb  9 12:56:51 2012	(r24283)
+++ spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Thu Feb  9 13:44:47 2012	(r24284)
@@ -10,6 +10,8 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.PrintStream;
+import java.nio.file.Files;
+import java.nio.file.Paths;
 import java.security.Permission;
 import org.strategoxt.strj.strj;
 import s2js.s2js; //make sure cp contains strategoxt.jar
@@ -30,43 +32,88 @@
 	private final String _strategoLib;
 	private final String _strategoCtrees;
 	
-	private final String _wwwoutput;
+	//private final String _wwwoutput;
 	private final String _mainSrcFile;
-
-	public S2AGenerator(String spoofaxProjdir, String jssglr, String str2jsPath, String strategoLib, String strategoCtrees, String wwwoutput, String mainSrcFile)
+	
+	private final String tmpDir;
+	private final String jsbin;
+	private final String wrappedJsBin;
+	private final String strategoEntry;
+	private final String esvFile;
+	private final S2AEsvParser esvParser;
+	
+	public S2AGenerator(String spoofaxProjdir, String jssglr, String str2jsPath, String strategoLib, String strategoCtrees, String mainSrcFile) throws IOException, S2ASpoofaxSetupException
 	{
 		_spoofaxProjDir = spoofaxProjdir;
 		_jssglr = jssglr;
 		_str2jsPath = str2jsPath;
 		_strategoLib = strategoLib;
 		_strategoCtrees = strategoCtrees;
-		_wwwoutput = wwwoutput;
+		//_wwwoutput = wwwoutput;
 		_mainSrcFile = mainSrcFile;
+		
+		tmpDir = "./tmp/";
+		jsbin = tmpDir+"/jsbin.js";
+		wrappedJsBin =  tmpDir+"/jsbin.wrapped.js";
+		strategoEntry = tmpDir + "spoofax2ace.str";
+		esvFile = S2ASpoofaxInfo.GetEsvSettings(_spoofaxProjDir);
+		esvParser = new S2AEsvParser(esvFile);
+		new File(tmpDir.substring(0,tmpDir.lastIndexOf(File.separator))).mkdirs();
+		S2AUtils.EmptyDir(tmpDir);
 	}
 	
-	public boolean Go() throws S2ASpoofaxSetupException, S2AWrapperException, S2ACompilerException, S2AValidatorException, IOException
+	/*
+	 * Outputs an implementation of the ACE editor 
+	 */
+	
+	public boolean BuildAceEditor(String wwwoutput) throws S2ASpoofaxSetupException, S2AWrapperException, S2ACompilerException, S2AValidatorException, IOException
 	{
-		final String tmpDir = "./tmp/";
-		final String jsbin = tmpDir+"/jsbin.js";
-		final String wrappedJsBin =  tmpDir+"/jsbin.wrapped.js";
 		final String aceWorkerBin = tmpDir+"/aceworker.js";
-		final String strategoEntry = tmpDir + "spoofax2ace.str";
-		final String esvFile = S2ASpoofaxInfo.GetEsvSettings(_spoofaxProjDir);
-		final S2AEsvParser esv = new S2AEsvParser(esvFile);
-		new File(tmpDir.substring(0,tmpDir.lastIndexOf(File.separator))).mkdirs();
-		S2AUtils.EmptyDir(tmpDir);
+		if (!new File(wwwoutput).canWrite())
+		{
+			wwwoutput = System.getProperty("java.io.tmpdir") + "/s2awwwout/";
+			System.err.println("No or invalid www output specified. Defaulting to: " + wwwoutput);
+		}
 		
-		CacheRequiredFiles(tmpDir, esv);
-		S2AEntryPoint.GenerateS2AEntry(strategoEntry, esv);
-		CompileStratego(tmpDir, strategoEntry, jsbin);
-		WrapStratego(jsbin, wrappedJsBin);
+		BuildStrProgram();
+		WrapStratego(jsbin, wrappedJsBin, true);
 		WrapAceWorker(wrappedJsBin, aceWorkerBin);
-		BuildAceBackend(aceWorkerBin, _wwwoutput);
-		BuildAceFrontEnd(_wwwoutput, _mainSrcFile);
-		System.err.println("S2A Successfully built editor into: " + new File(_wwwoutput).getAbsolutePath());
+		BuildAceBackend(aceWorkerBin, wwwoutput);
+		BuildAceFrontEnd(wwwoutput, _mainSrcFile);
+		System.err.println("S2A Successfully built editor into: " + new File(wwwoutput).getAbsolutePath());
 		return true;
 	}
+
+	
+	/*
+	 * Outputs a .js file which can be executed using NodeJS from the command line.
+	 * Useful for tests or debugging 
+	 */
+	
+	public void BuildNodeJSExecutable(String outputFile) throws S2ASpoofaxSetupException, S2AWrapperException, S2ACompilerException, S2AValidatorException, IOException
+	{
+		BuildStrProgram();
+		WrapStratego(jsbin, wrappedJsBin, false);
+		S2AUtils.WriteFileToFile(wrappedJsBin, outputFile);
+		System.err.println("S2A Successfully built NodeJS executable: " + new File(outputFile).getAbsolutePath());
+		System.err.println("Call using: node <executable.js> <language source code>");
+		System.err.println("example: ");
+		String exSrc = "/path/to/source.file";
+		if (_mainSrcFile != null)
+			exSrc = _mainSrcFile;
+		System.err.println("  node debug " + new File(outputFile).getName() + " \"$(cat "+exSrc+")\"");
+	}
 	
+	/*
+	 * Makes sure required files are available and compiles the back-end Stratego program.
+	 */
+	
+	private void BuildStrProgram() throws S2ASpoofaxSetupException, S2AWrapperException, S2ACompilerException, S2AValidatorException, IOException
+	{
+		CacheRequiredFiles(tmpDir, esvParser);
+		S2AEntryPoint.GenerateS2AEntry(strategoEntry, esvParser);
+		CompileStratego(tmpDir, strategoEntry, jsbin);
+	}
 	
 	/*
 	 * Copies the required files (ctree, tbl) to @cacheDir. 
@@ -155,11 +202,13 @@
 	
 	/*
 	 * Wraps the generated stratego program with dependencies from the stratego-javascript-backend.
-	 * Also adds an jssglr parser implementation.   
+	 * Also adds an jssglr parser implementation. 
+	 * 
+	 * Use param @wrapForAce to specify whether to wrap for Ace or a Cli executable.  
 	 */
 	
 	
-	private void WrapStratego(String strProg, String wrappedJs) throws S2AWrapperException
+	private void WrapStratego(String strProg, String wrappedJs, boolean wrapForAce) throws S2AWrapperException
 	{
 		FileOutputStream wrappedStrProg;
 		try {
@@ -172,8 +221,10 @@
 			S2AUtils.WriteFileToStream(_jssglr, wrappedStrProg);
 			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/jssglr/jssglr_append.js", wrappedStrProg);
 			S2AUtils.WriteFileToStream(strProg, wrappedStrProg);
-			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/ace-wrapper-end.js", wrappedStrProg);
-			//S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/cli-wrapper.js", wrappedStrProg);
+			if (wrapForAce)
+				S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/ace-wrapper-end.js", wrappedStrProg);
+			else
+				S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/cli-wrapper.js", wrappedStrProg);
 			wrappedStrProg.flush();
 		} catch (IOException e) {
 			System.err.println("###CRITICAL ERROR### " + e.getMessage());

From tobivollebregt at gmail.com  Thu Feb  9 15:16:21 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Thu, 09 Feb 2012 14:16:21 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24285 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.ui/src/main/java/org/spoofax/interpreter/ui
Message-ID: <20120209141621.384227F816B@mx1.tudelft.nl>

Author: tvo
Date: Thu Feb  9 14:16:20 2012
New Revision: 24285
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24285&sc=1

Log:
Fix failed assert data != null in PushbackStringIterator when Eclipse is closing.

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.ui/src/main/java/org/spoofax/interpreter/ui/SpoofaxConsole.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.ui/src/main/java/org/spoofax/interpreter/ui/SpoofaxConsole.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.ui/src/main/java/org/spoofax/interpreter/ui/SpoofaxConsole.java	Thu Feb  9 13:44:47 2012	(r24284)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.ui/src/main/java/org/spoofax/interpreter/ui/SpoofaxConsole.java	Thu Feb  9 14:16:20 2012	(r24285)
@@ -96,7 +96,7 @@
 					prompt.flush();
 					
 					String line = br.readLine();
-					if (!intp.eval(line))
+					if (line == null || !intp.eval(line))
 						break;
 				} catch (IOException e) {
 					// assume that the console has been closed

From L.C.L.Kats at tudelft.nl  Thu Feb  9 17:21:19 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 09 Feb 2012 16:21:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24286 -
	spoofax-imp/trunk/org.eclipse.imp
Message-ID: <20120209162119.84023CC36F@mx4.tudelft.nl>

Author: LennartKats
Date: Thu Feb  9 16:21:19 2012
New Revision: 24286
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24286&sc=1

Log:
be less complainy about files that have no language

Modified:
   spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch

Modified: spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch
==============================================================================
--- spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	Thu Feb  9 14:16:20 2012	(r24285)
+++ spoofax-imp/trunk/org.eclipse.imp/org.eclipse.imp.runtime.patch	Thu Feb  9 16:21:19 2012	(r24286)
@@ -53,7 +53,23 @@
  		                    return lang;
  		                }
  		            } else {
-@@ -383,7 +395,10 @@
+@@ -174,6 +186,7 @@
+ 		    }
+ 		}
+ 
++		/* LK: We can return null; let the client handle it!
+ 		if (PreferenceCache.emitMessages) {
+ 			RuntimePlugin.getInstance().writeErrorMsg("No language support for text/source file of type '" +
+ 					 extension + "'.");
+@@ -181,6 +194,7 @@
+ 			ErrorHandler.reportError("No language support for text/source file of type '" +
+ 					 extension + "'.");
+ 		}
++		*/
+ 
+ 		return null;
+ 	}
+@@ -383,7 +397,10 @@
          for (String ext : extensions) {
  	        IFileEditorMapping mapping= findMappingFor(ext, mappings);
  

From tobivollebregt at gmail.com  Thu Feb  9 17:45:59 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Thu, 09 Feb 2012 16:45:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24287 -
	strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp
Message-ID: <20120209164559.4CD1D2B8039@mx2.tudelft.nl>

Author: tvo
Date: Thu Feb  9 16:45:59 2012
New Revision: 24287
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24287&sc=1

Log:
BOX: define & try R box (outside A) only once

Modified:
   strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str

Modified: strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str
==============================================================================
--- strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str	Thu Feb  9 16:21:19 2012	(r24286)
+++ strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str	Thu Feb  9 16:45:59 2012	(r24287)
@@ -59,7 +59,6 @@
     + abox2text-S(rec | xpos, width)
     + abox2text-C(rec | xpos, width)
     + abox2text-FBOX(rec | xpos, width)
-    + abox2text-R(rec | xpos, width)
     + abox2text-ALT(rec | xpos, width)
     + abox2text-list(rec | xpos, width)
 
@@ -279,9 +278,6 @@
   abox2text-FBOX(rec : t * t -> t | xpos, width) :
     FBOX(_,b) -> <rec(|xpos)> b
 
-  abox2text-R(rec : t * t -> t | xpos, width) :
-    R(sopt, bs) -> <rec(|xpos)> HV(sopt, bs)
-
   abox2text-ALT(rec : t * t -> t | xpos, width) =
     ?ALT(a1, a2)
     ; <rec(|xpos)> a1 => r1@(s, xpos2)

From gabrielkonat at gmail.com  Fri Feb 10 12:02:41 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 10 Feb 2012 11:02:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24288 - in
	spoofax-contrib/separate-compilation-examples/entity-with-aspects:
	syntax trans
Message-ID: <20120210110241.F0E20108C04C@mx3.tudelft.nl>

Author: gkonat
Date: Fri Feb 10 11:02:40 2012
New Revision: 24288
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24288&sc=1

Log:
Added Import namespace for import definitions.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx	Thu Feb  9 16:45:59 2012	(r24287)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx	Fri Feb 10 11:02:40 2012	(r24288)
@@ -5,9 +5,9 @@
 context-free syntax
     
     %% Constructs
-    "module" Module@=ID Definition*     -> Start {"Module", scope(Entity, Module, Aspect)}
+    "module" Module@=ID Definition*     -> Start {"Module", scope(Entity, Aspect, Import)}
     "entity" Entity@=ID "{" Member* "}" -> Definition {"Entity", scope(Property, Function)}
-    "import" ImportPart                 -> Definition {"Import"}
+    "import" Import@=ImportPart         -> Definition {"Import"}
     
     Module at ID "." "*"       -> ImportPart {"WildcardImport"}
     Module at ID "." Entity at ID -> ImportPart {"EntityImport"}

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Thu Feb  9 16:45:59 2012	(r24287)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Fri Feb 10 11:02:40 2012	(r24288)
@@ -6,6 +6,7 @@
 
 signature
   constructors
+    Import   : Namespace
     Module   : Namespace
     Aspect   : Namespace
     Advice   : Namespace
@@ -15,13 +16,12 @@
     Property : Namespace
     Entity   : Namespace
 
-
 rules
 
   nam-get-scope-types :
     Module(_, _) -> [ Entity()
-                    , Module()
                     , Aspect()
+                    , Import()
                     ]
 
   nam-get-scope-types :
@@ -55,6 +55,12 @@
     Entity(x, _) -> <nam-get-def(|Entity())> x
 
   nam-get-definition-key :
+    Import(x) -> x
+
+  nam-get-definition :
+    Import(x) -> <nam-get-def(|Import())> x
+
+  nam-get-definition-key :
     Aspect(x, _) -> x
 
   nam-get-definition :
@@ -103,38 +109,38 @@
     VarDeclInit(x, _, _) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Module(z_172, a_173) -> Module(z_172{def-path}, a_173)
+    Module(s_5032, t_5032) -> Module(s_5032{def-path}, t_5032)
 
   nam-annotate-names(|def-path):
-    Entity(x_172, y_172) -> Entity(x_172{def-path}, y_172)
+    Entity(q_5032, r_5032) -> Entity(q_5032{def-path}, r_5032)
 
   nam-annotate-names(|def-path):
-    Import(w_172) -> Import(w_172)
+    Import(p_5032) -> Import(p_5032{def-path})
 
   nam-annotate-names(|def-path):
-    WildcardImport(v_172) -> WildcardImport(<nam-annotate-use(|Module())> v_172)
+    WildcardImport(o_5032) -> WildcardImport(<nam-annotate-use(|Module())> o_5032)
 
   nam-annotate-names(|def-path):
-    EntityImport(s_172, t_172) -> EntityImport(
-                                    <nam-annotate-use(|Module())> s_172
-                                  , <nam-annotate-use(|Entity())> t_172
-                                  )
+    EntityImport(m_5032, n_5032) -> EntityImport(
+                                      <nam-annotate-use(|Module())> m_5032
+                                    , <nam-annotate-use(|Entity())> n_5032
+                                    )
 
   nam-annotate-names(|def-path):
-    Aspect(o_172, p_172) -> Aspect(o_172{def-path}, p_172)
+    Aspect(k_5032, l_5032) -> Aspect(k_5032{def-path}, l_5032)
 
   nam-annotate-names(|def-path):
-    Pointcut(l_172, m_172, n_172) -> Pointcut(l_172{def-path}, m_172, n_172)
+    Pointcut(h_5032, i_5032, j_5032) -> Pointcut(h_5032{def-path}, i_5032, j_5032)
 
   nam-annotate-names(|def-path):
-    Advice(b_172, c_172, d_172, e_172, f_172, k_172) -> Advice(
-                                                          b_172{def-path}
-                                                        , c_172
-                                                        , d_172
-                                                        , <nam-annotate-use(|Pointcut())> e_172
-                                                        , f_172
-                                                        , k_172
-                                                        )
+    Advice(b_5032, c_5032, d_5032, e_5032, f_5032, g_5032) -> Advice(
+                                                                b_5032{def-path}
+                                                              , c_5032
+                                                              , d_5032
+                                                              , <nam-annotate-use(|Pointcut())> e_5032
+                                                              , f_5032
+                                                              , g_5032
+                                                              )
 
   nam-annotate-names(|def-path):
     Before() -> Before()
@@ -143,52 +149,52 @@
     After() -> After()
 
   nam-annotate-names(|def-path):
-    Assigned(a_172) -> Assigned(a_172)
+    Assigned(a_5032) -> Assigned(a_5032)
 
   nam-annotate-names(|def-path):
-    Property(y_171, z_171) -> Property(y_171{def-path}, z_171)
+    Property(y_5031, z_5031) -> Property(y_5031{def-path}, z_5031)
 
   nam-annotate-names(|def-path):
-    Function(v_171, w_171, x_171) -> Function(v_171{def-path}, w_171, x_171)
+    Function(v_5031, w_5031, x_5031) -> Function(v_5031{def-path}, w_5031, x_5031)
 
   nam-annotate-names(|def-path):
-    Param(q_171, u_171) -> Param(q_171{def-path}, u_171)
+    Param(t_5031, u_5031) -> Param(t_5031{def-path}, u_5031)
 
   nam-annotate-names(|def-path):
-    VarDecl(o_171, p_171) -> VarDecl(o_171{def-path}, p_171)
+    VarDecl(r_5031, s_5031) -> VarDecl(r_5031{def-path}, s_5031)
 
   nam-annotate-names(|def-path):
-    VarDeclInit(l_171, m_171, n_171) -> VarDeclInit(l_171{def-path}, m_171, n_171)
+    VarDeclInit(o_5031, p_5031, q_5031) -> VarDeclInit(o_5031{def-path}, p_5031, q_5031)
 
   nam-annotate-names(|def-path):
-    Assign(j_171, k_171) -> Assign(
-                              <nam-annotate-use(|Var())> j_171
-                            , k_171
-                            )
+    Assign(m_5031, n_5031) -> Assign(
+                                <nam-annotate-use(|Var())> m_5031
+                              , n_5031
+                              )
 
   nam-annotate-names(|def-path):
-    Block(i_171) -> Block(i_171)
+    Block(l_5031) -> Block(l_5031)
 
   nam-annotate-names(|def-path):
-    Print(h_171) -> Print(h_171)
+    Print(k_5031) -> Print(k_5031)
 
   nam-annotate-names(|def-path):
-    Call(z_170, a_171) -> Call(
-                            <nam-annotate-use(|Function())> z_170
-                          , a_171
-                          )
+    Call(i_5031, j_5031) -> Call(
+                              <nam-annotate-use(|Function())> i_5031
+                            , j_5031
+                            )
 
   nam-annotate-names(|def-path):
-    Var(y_170) -> Var(<nam-annotate-use(|Var())> y_170)
+    Var(h_5031) -> Var(<nam-annotate-use(|Var())> h_5031)
 
   nam-annotate-names(|def-path):
-    PropAccess(w_170, x_170) -> PropAccess(
-                                  w_170
-                                , <nam-annotate-use(|Property())> x_170
-                                )
+    PropAccess(f_5031, g_5031) -> PropAccess(
+                                    f_5031
+                                  , <nam-annotate-use(|Property())> g_5031
+                                  )
 
   nam-annotate-names(|def-path):
-    Type(v_170) -> Type(<nam-annotate-use(|Entity())> v_170)
+    Type(e_5031) -> Type(<nam-annotate-use(|Entity())> e_5031)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str	Thu Feb  9 16:45:59 2012	(r24287)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str	Fri Feb 10 11:02:40 2012	(r24288)
@@ -31,4 +31,8 @@
     where
       !namespace => Entity();
       import*  := <index-get-data(|Imports())>;
-      all-uris := <map(import-name-to-uri(|namespace))> import**/
+      all-uris := <map(import-name-to-uri(|namespace))> import*
+    */
+      
+      
+      

From L.C.L.Kats at tudelft.nl  Fri Feb 10 14:49:55 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 10 Feb 2012 13:49:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24289 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120210134955.B59B1108C009@mx3.tudelft.nl>

Author: LennartKats
Date: Fri Feb 10 13:49:55 2012
New Revision: 24289
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24289&sc=1

Log:
Spoofax/493: Path variable in editor-analyze is prefixed with partition character

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Fri Feb 10 11:02:40 2012	(r24288)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Fri Feb 10 13:49:55 2012	(r24289)
@@ -113,7 +113,7 @@
  	
 	@Override
 	public String toString() {
-		return uri.getPath();
+		return "file".equals(uri.getScheme()) ? new File(uri).getAbsolutePath() : uri.toString();
 	}
 	
 	public IStrategoTerm toTerm(ITermFactory factory) {

From L.C.L.Kats at tudelft.nl  Fri Feb 10 14:52:54 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 10 Feb 2012 13:52:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24290 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120210135254.171512B8004@mx2.tudelft.nl>

Author: LennartKats
Date: Fri Feb 10 13:52:53 2012
New Revision: 24290
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24290&sc=1

Log:
synchronization fix

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/NotificationCenter.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/NotificationCenter.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/NotificationCenter.java	Fri Feb 10 13:49:55 2012	(r24289)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/NotificationCenter.java	Fri Feb 10 13:52:53 2012	(r24290)
@@ -27,11 +27,11 @@
 		}
 	}
 
-	/*
-	private static boolean isUriPrefixOf(URI file, URI root) {
-		return !root.relativize(file).isAbsolute();
+	public synchronized static void notifyNewProject(URI project) {
+		for (INotificationService observer : asyncObservers.values()) {
+			observer.notifyNewProject(project);
+		}
 	}
-	*/
 	
 	/**
 	 * Registers an observer. Only one observer is stored at a time for a language/serviceName combination.
@@ -43,15 +43,9 @@
 		asyncObservers.put(new ObserverDescription(language, serviceName), service);
 	}
 	
-	public static boolean removeObserver(String language, String service) {
+	public synchronized static boolean removeObserver(String language, String service) {
 		return asyncObservers.remove(new ObserverDescription(language, service)) != null;
 	}
-
-	public static void notifyNewProject(URI project) {
-		for (INotificationService observer : asyncObservers.values()) {
-			observer.notifyNewProject(project);
-		}
-	}
 	
 	
 	/**

From L.C.L.Kats at tudelft.nl  Fri Feb 10 14:54:58 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 10 Feb 2012 13:54:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24291 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120210135458.87D77CC23B@mx4.tudelft.nl>

Author: LennartKats
Date: Fri Feb 10 13:54:58 2012
New Revision: 24291
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24291&sc=1

Log:
parent entries own lists of children, not sets

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryParent.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryParent.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryParent.java	Fri Feb 10 13:52:53 2012	(r24290)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryParent.java	Fri Feb 10 13:54:58 2012	(r24291)
@@ -1,8 +1,8 @@
 package org.spoofax.interpreter.library.language;
 
+import java.util.ArrayList;
 import java.util.Collections;
-import java.util.HashSet;
-import java.util.Set;
+import java.util.List;
 
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoConstructor;
@@ -19,8 +19,8 @@
 	public static final IStrategoConstructor CONSTRUCTOR =
 		new TermFactory().makeConstructor("<parent>", 1);
 
-	private final Set<SemanticIndexEntry> children =
-		new HashSet<SemanticIndexEntry>();
+	private final List<SemanticIndexEntry> children =
+		new ArrayList<SemanticIndexEntry>();
 	
 	private transient IStrategoList allDefsCached;
 	
@@ -40,15 +40,18 @@
 	
 	public void remove(SemanticIndexEntry entry) {
 		allDefsCached = null;
-		children.remove(entry);
+		for (int i = 0, max = children.size(); i < max; i++) {
+			if (children.get(i) == entry)
+				children.remove(i--);
+		}
 	}
 	
 	public boolean isEmpty() {
 		return children.isEmpty();
 	}
 	
-	public Set<SemanticIndexEntry> getChildren() {
-		return Collections.unmodifiableSet(children);
+	public List<SemanticIndexEntry> getChildren() {
+		return Collections.unmodifiableList(children);
 	}
 	
 	public IStrategoList getAllDefsCached() {

From L.C.L.Kats at tudelft.nl  Sat Feb 11 14:10:10 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 11 Feb 2012 13:10:10 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24292 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120211131010.A5A612B8005@mx2.tudelft.nl>

Author: LennartKats
Date: Sat Feb 11 13:10:09 2012
New Revision: 24292
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24292&sc=1

Log:
fixed IndexOutOfBoundsException

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryParent.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryParent.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryParent.java	Fri Feb 10 13:54:58 2012	(r24291)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntryParent.java	Sat Feb 11 13:10:09 2012	(r24292)
@@ -40,7 +40,7 @@
 	
 	public void remove(SemanticIndexEntry entry) {
 		allDefsCached = null;
-		for (int i = 0, max = children.size(); i < max; i++) {
+		for (int i = 0; i < children.size(); i++) {
 			if (children.get(i) == entry)
 				children.remove(i--);
 		}

From L.C.L.Kats at tudelft.nl  Sat Feb 11 14:12:24 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Sat, 11 Feb 2012 13:12:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24293 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20120211131224.92AFE7F8043@mx1.tudelft.nl>

Author: LennartKats
Date: Sat Feb 11 13:12:24 2012
New Revision: 24293
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24293&sc=1

Log:
Spoofax/493: Path variable in editor-analyze is prefixed with partition character

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Sat Feb 11 13:10:09 2012	(r24292)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Sat Feb 11 13:12:24 2012	(r24293)
@@ -141,7 +141,7 @@
 		String path, projectPath;
 		if (file != null && project != null) {
 			projectPath = project.toPortableString();
-			IPath fullPath = new Path(file.toString());
+			IPath fullPath = new Path(file.getAbsolutePath());
 			path = fullPath.removeFirstSegments(fullPath.matchingFirstSegments(project)).toPortableString();
 			assert !new File(path).isAbsolute();
 		} else {

From gabrielkonat at gmail.com  Sun Feb 12 13:44:53 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Sun, 12 Feb 2012 12:44:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24294 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20120212124453.6D44D108C006@mx3.tudelft.nl>

Author: gkonat
Date: Sun Feb 12 12:44:51 2012
New Revision: 24294
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24294&sc=1

Log:
Spoofax/493: Path variable in editor-analyze is prefixed with partition character

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Sat Feb 11 13:12:24 2012	(r24293)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Sun Feb 12 12:44:51 2012	(r24294)
@@ -142,7 +142,7 @@
 		if (file != null && project != null) {
 			projectPath = project.toPortableString();
 			IPath fullPath = new Path(file.getAbsolutePath());
-			path = fullPath.removeFirstSegments(fullPath.matchingFirstSegments(project)).toPortableString();
+			path = fullPath.removeFirstSegments(fullPath.matchingFirstSegments(project)).setDevice("").toPortableString();
 			assert !new File(path).isAbsolute();
 		} else {
 			projectPath = ".";

From gabrielkonat at gmail.com  Sun Feb 12 15:32:42 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Sun, 12 Feb 2012 14:32:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24295 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/lib
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-co...
Message-ID: <20120212143242.7B3B12B800C@mx2.tudelft.nl>

Author: gkonat
Date: Sun Feb 12 14:32:42 2012
New Revision: 24295
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24295&sc=1

Log:
Removed file-exists check in analyze-top-internal, the existing rule already handles it correctly.
Added originating file passing in lookup strategies.
Added imports to entity-with-aspects experiment.
Changed language extension of entity-with-aspects to .ent.

Added:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.ent
      - copied, changed from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ent
      - copied unchanged from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ent
      - copied unchanged from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.ent
      - copied unchanged from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.ent
      - copied, changed from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ent
      - copied unchanged from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.ent
      - copied unchanged from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.nam
Deleted:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/.gitignore
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.nam
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.nam
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/lib/   (props changed)
   spoofax-contrib/separate-compilation-examples/c-without-macros/lib/editor-common.generated.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/   (props changed)
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects.main.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/   (props changed)
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/editor-common.generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/editor-common.generated.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/lib/editor-common.generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/lib/editor-common.generated.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/lib/editor-common.generated.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -131,6 +131,9 @@
   origin-column    = origin-location => (_, <id>, _, _)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
   
   origin-surrounding-comments =
     prim("SSL_EXT_origin_surrounding_comments", "C-without-macros", <id>)

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -13,12 +13,12 @@
   
   // Adjust the lookup behavior for properties,
   // overriding the lookup with a list of property Defs
-  adjust-index-lookup(is-use |namespace, path, prefix):
+  adjust-index-lookup(is-use |namespace, path, prefix, files):
     Deref(e, <is-use>) -> p*
     with
 	  if TYPE(_{uri}) := <type-of> e then
 	    if structName := <get-structname-from-typedef> uri then
-	        p* := <index-lookup-children(|Field(), prefix)> structName
+	        p* := <index-lookup-children(|Field(), prefix, files)> structName
         else
             p* := []
         end
@@ -28,5 +28,5 @@
 
   // Adjust the lookup behavior for variables,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, prefix):
+  adjust-index-lookup(is-use |namespace, path, prefix, files):
     VarRef(<is-use>) -> [[Var() | path], [Field() | path]]

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -89,7 +89,7 @@
       x                 := <collect-one(?COMPLETION(_))> ast';
       COMPLETION(name)	:= x;
       (
-        proposals       := <index-lookup-all-levels(|name)> x 
+        proposals       := <index-lookup-all-levels(|name, [($[[project-path]/[path]], "")])> x 
       <+ 
         proposals 			:= []
       );

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -131,6 +131,9 @@
   origin-column    = origin-location => (_, <id>, _, _)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
   
   origin-surrounding-comments =
     prim("SSL_EXT_origin_surrounding_comments", "CSharpPartialClassses", <id>)

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -13,21 +13,21 @@
   
   // Adjust the lookup behavior for fields, overriding the lookup with a list of field Defs.
   // TODO: Also return method names here? Because both have the same kind of syntax.
-  adjust-index-lookup(is-use |namespace, path, prefix):
+  adjust-index-lookup(is-use |namespace, path, prefix, files):
     FieldAccess(e, <is-use>) -> f*
     with
 	  if TYPE(e-type) := <type-of> e then
-        f* := <index-lookup-children(|Field(), prefix)> e-type
+        f* := <index-lookup-children(|Field(), prefix, files)> e-type
       else
         f* := []
       end
       
   // Adjust the lookup behavior for method calls, overriding the lookup with a list of method Defs
-  adjust-index-lookup(is-use |namespace, path, prefix):
+  adjust-index-lookup(is-use |namespace, path, prefix, files):
     MethodCall(e, <is-use>) -> m*
     with
 	  if TYPE(e-type) := <type-of> e then
-        m* := <index-lookup-children(|Method(), prefix)> e-type
+        m* := <index-lookup-children(|Method(), prefix, files)> e-type
       else
         m* := []
       end
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -89,7 +89,7 @@
       x                 := <collect-one(?COMPLETION(_))> ast';
       COMPLETION(name)  := x;
       (
-        proposals       := <index-lookup-all-levels(|name)> x 
+        proposals       := <index-lookup-all-levels(|name, [($[[project-path]/[path]], "")])> x 
       <+ 
         proposals 			:= []
       );

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects.main.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects.main.esv	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects.main.esv	Sun Feb 12 14:32:42 2012	(r24295)
@@ -12,6 +12,6 @@
   description   : "Spoofax/IMP-generated editor for the EntityWithAspects language"
   url           : http://strategoxt.org
                   
-  extensions    : nam
+  extensions    : ent
   table         : include/EntityWithAspects.tbl
   start symbols : Start
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/editor-common.generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/editor-common.generated.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/editor-common.generated.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -131,6 +131,9 @@
   origin-column    = origin-location => (_, <id>, _, _)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
   
   origin-surrounding-comments =
     prim("SSL_EXT_origin_surrounding_comments", "EntityWithAspects", <id>)

Copied and modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.ent (from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.nam)
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.nam	Sat Feb 11 13:12:24 2012	(r24293, copy source)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.ent	Sun Feb 12 14:32:42 2012	(r24295)
@@ -5,5 +5,5 @@
 
 entity TestEntity
 {
-	mValue : Ent1 // TODO: Resolve from Test module.
-}  
\ No newline at end of file
+	mValue : Ent1
+}
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ent (from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.nam)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ent	Sun Feb 12 14:32:42 2012	(r24295, copy of r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.nam)
@@ -0,0 +1,13 @@
+module CRM
+
+entity Location {
+	mCity : String
+	mAddress : String
+	mNumber : Int
+	
+	Set(city : String, address : String, number : Int) {
+    mCity = city
+		mAddress = address
+		mNumber = number
+	}
+}
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ent (from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.nam)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ent	Sun Feb 12 14:32:42 2012	(r24295, copy of r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.nam)
@@ -0,0 +1,19 @@
+module CRM
+
+entity Person {
+	mName : String
+	mLocation : Location
+	
+	Print(location : Location) {
+		var adr : String = location.mAddress
+		var num : String = location.mNumber
+		
+		print adr
+		print num
+		print location.mCity
+	}
+	
+	Test() {
+		var test : String = Print(mLocation)
+	}
+}
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.ent (from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.nam)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.ent	Sun Feb 12 14:32:42 2012	(r24295, copy of r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.nam)
@@ -0,0 +1,12 @@
+module CRM
+
+aspect Printer {
+    pointcut StringChanged(s : String): assigned(String)
+    pointcut IntChanged(i : Int): assigned(Int)
+    
+    advice Adv1 before(s : String): StringChanged(s)
+        print s
+        
+    advice Adv2 after(i : Int): IntChanged(i)
+        print i
+}
\ No newline at end of file

Copied and modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.ent (from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.nam)
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.nam	Sat Feb 11 13:12:24 2012	(r24293, copy source)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.ent	Sun Feb 12 14:32:42 2012	(r24295)
@@ -3,4 +3,4 @@
 entity Ent1
 {
 	mValue : String
-}
\ No newline at end of file
+} 
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ent (from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.nam)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ent	Sun Feb 12 14:32:42 2012	(r24295, copy of r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.nam)
@@ -0,0 +1,12 @@
+module Test
+
+entity Ent2
+{
+	mEnt : Ent1 
+	
+	Print() {
+		var tst : String = mEnt.mValue
+
+		print tst
+	}
+}
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.ent (from r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.nam)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.ent	Sun Feb 12 14:32:42 2012	(r24295, copy of r24293, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.nam)
@@ -0,0 +1,12 @@
+module Test
+
+entity Ent3
+{
+  mEnt2 : Ent2
+  
+  Print() {
+    var tst : String = mEnt2.mEnt.mValue
+
+    print tst
+  }
+}
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -106,7 +106,7 @@
       x                 := <collect-one(?COMPLETION(_))> ast';
       COMPLETION(name)  := x;
       (
-        proposals       := <index-lookup-all-levels(|name)> x 
+        proposals       := <index-lookup-all-levels(|name, [($[[project-path]/[path]], "")])> x 
       <+ 
         proposals       := []
       );

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -2,6 +2,7 @@
 
 imports
   include/EntityWithAspects
+  lib/index-library
   lib/analysis-library
   analysis-generated
   types
@@ -14,45 +15,54 @@
   
   // Adjust the lookup behavior for properties,
   // overriding the lookup with a list of property Defs
-  adjust-index-lookup(is-use |namespace, path, prefix):
+  adjust-index-lookup(is-use |namespace, path, prefix, files):
     PropAccess(e, <is-use>) -> p*
     with
       if TYPE(e-type) := <type-of> e then
-        p* := (<index-lookup-children(|Property(), prefix)> e-type)
+        p* := (<index-lookup-children(|Property(), prefix, files)> e-type)
       else
         p* := []
       end
       
   // Adjust lookup behavior for entity imports, overriding
   // the lookup with a lookup in the parent module.
-  adjust-index-lookup(is-use |namespace, path, prefix):
+  adjust-index-lookup(is-use |namespace, path, prefix, files):
     EntityImport(mod, <is-use>) -> e
     with
-      e := <index-lookup-children(|Entity(), prefix)> mod
+      e := <index-lookup-children(|Entity(), prefix, files)> mod
 
   // Adjust the lookup behavior for variables,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, prefix):
+  adjust-index-lookup(is-use |namespace, path, prefix, files):
     Var(<is-use>) -> [[Var() | path], [Property() | path]]
     
   // Why is this needed? shouldn't the Var() adjust handle this?
   // Adjust the lookup behavior for assignments,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, prefix):
+  adjust-index-lookup(is-use |namespace, path, prefix, files):
     Assign(<is-use>, _) -> [[Var() | path], [Property() | path]]
 
   // Adjust the lookup behavior for types (TODO: Add built-in types),
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, prefix): 
-    Type(<is-use>) -> [[Entity() | path]]
+  adjust-index-lookup(is-use |namespace, path, prefix, files): 
+    Type(<is-use>) -> <conc> ([[Entity() | path]], importPaths)
+    where
+      // TODO: Don't use index-get-all-in-file.
+      importPaths := <filter(import-to-path)> <mapconcat(index-get-all-in-file)> files
+        
+  import-to-path:
+    Def([Import(), WildcardImport(mod)|_]) -> [Entity(), mod]
+    
+  import-to-path:
+    Def([Import(), EntityImport(mod, ent)|_]) -> [Entity(), ent, mod]
 
   // Adjust the lookup behavior for function calls,
   // selecting a function with matching parameter types
   // (if this fails, the normal lookup behavior is used!)
-  adjust-index-lookup(is-use |namespace, path, prefix):
+  adjust-index-lookup(is-use |namespace, path, prefix, files):
     Call(<is-use>, args) -> def
     where
       arg-types := <map(type-of)> args;
-      all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix)>;
+      all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix, files)>;
       def       := <getfirst(is-params-compatible(|arg-types))>
       
\ No newline at end of file

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -22,7 +22,7 @@
 rules // extension points
  
   // Should return list of Def(_) and/or [namespace | path]
-  adjust-index-lookup(is-use |namespace, path, prefix) = fail
+  adjust-index-lookup(is-use |namespace, path, prefix, files) = fail
  
   // adjust-index-select(|namespace, path, use) = fail // (e.g., for imports)
  
@@ -81,8 +81,6 @@
     ?(_, path, project-path); analyze-top-internal(|phase, language, $[[project-path]/[path]])
   analyze-top-internal(|phase, language, full-path):
     (ast, path, project-path) -> AnalysedResult(ast5, defs, uses, data', added, removed)
-    where
-      <file-exists> full-path
     with
       // Init
       index-setup(|language, [project-path])
@@ -108,12 +106,12 @@
         <index-add-all(|full-path)> data;
 
         // Resolve an references in DefData (using what we just stored)
-        (data', data-uses) := <analyze-uses> data;
+        (data', data-uses) := <analyze-uses(|[(full-path, "")])> data;
         <index-remove-all(|full-path)> data;
         <index-add-all(|full-path)> data';
        
         // Resolve all unresolved references in the tree
-        (ast4, uses) := <analyze-uses> ast3;
+        (ast4, uses) := <analyze-uses(|[(full-path, "")])> ast3;
         <index-add-all(|full-path)> uses;
         
         ast5 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast4;
@@ -134,16 +132,7 @@
 	    else
 	      (added, removed) := ([], [])
       end
-      
-  // If given file to analyze does not exist, remove it from the index.
-  analyze-top-internal(|phase, language, full-path):
-    (ast, path, project-path) -> None()
-    where
-      not(<file-exists> full-path)
-    with
-      index-setup(|language, [project-path]);
-      <index-clear-file> full-path
-     
+
   analyze-diff:
     (defs1, defs2) -> (added, removed)
     with
@@ -247,14 +236,14 @@
    * Analyze all uses, changing their preliminary
    * "Unresolve(_)" URI to a definite URI of their definition.
    */
-  analyze-uses = analyze-uses(|None())
-  analyze-uses(|parent):
+  analyze-uses(|files) = analyze-uses(|None(), files)
+  analyze-uses(|parent, files):
     ast -> (ast'', uses')
     with
-      analyzed     := <all(analyze-uses(|ast))> ast;
+      analyzed     := <all(analyze-uses(|ast, files))> ast;
       (ast', uses) := <unzip-analyzed> analyzed;
       if !ast' => _{unresolved@[Unresolved(namespace), x | path]} then
-        if Def(def-uri) := <index-lookup(id |namespace, path, <strip-annos> ast')> ast' then
+        if Def(def-uri) := <index-lookup(id |namespace, path, <strip-annos> ast', files)> ast' then
           ast'' := ast{def-uri};
           if key{keyUri} := <nam-get-definition-key> parent ; not(<eq>(key, ast')) then
             uses' := [Use(def-uri, keyUri) | uses]
@@ -524,13 +513,23 @@
    * Given an annotated AST node, resolves it, returning its Def.
    */
   index-lookup:
-    x{[namespace | path]} -> <index-lookup(id |<index-namespace-unwrap> namespace, path, <strip-annos> x)>
+    x{[namespace | path]} -> <index-lookup(|files)> x
+    with
+      (<index-get-files-of> Def([namespace | path])) <+ [] => files
+      
+  index-lookup(|files):
+    x{[namespace | path]} -> <index-lookup(id |<index-namespace-unwrap> namespace, path, <strip-annos> x, files)>
  
   /**
    * Given an annotated AST node, resolves it, returning all its Defs.
    */
   index-lookup-all:
-    x{[namespace | path]} -> <index-lookup-all(id |<index-namespace-unwrap> namespace, path, <strip-annos> x)>
+    x{[namespace | path]} -> <index-lookup-all(|files)> x
+    with
+      (<index-get-files-of> Def([namespace | path])) <+ [] => files
+      
+  index-lookup-all(|files):
+    x{[namespace | path]} -> <index-lookup-all(id |<index-namespace-unwrap> namespace, path, <strip-annos> x, files)>
  
   /**
    * Given an annotated AST node, resolves it, returning all its Defs.
@@ -540,21 +539,21 @@
    *
    * @internal
    */
-  index-lookup(is-adjust-lookup-enabled |namespace, path, prefix):
+  index-lookup(is-adjust-lookup-enabled |namespace, path, prefix, files):
     x -> def
     where
       index-is-unresolved(|x);
       def := <fail>
     <+
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
       def        := <index-select(|namespace, path, x)>
     <+
       // TODO: optimize: try not to call do-adjust-index-lookup from here
       [_ | path'] := path;
-      def         := <index-lookup(is-adjust-lookup-enabled |namespace, path', prefix)> x
+      def         := <index-lookup(is-adjust-lookup-enabled |namespace, path', prefix, files)> x
     <+
       [] := path;
-      <iset-add(|x)> <Index-UnresolvedSet>
+      index-add-unresolved(|x)
       
   /**
    * Given an annotated AST node, resolves it, returning all its Defs.
@@ -564,14 +563,14 @@
    *
    * @internal
    */
-  index-lookup-all(is-adjust-lookup-enabled |namespace, path, prefix):
+  index-lookup-all(is-adjust-lookup-enabled |namespace, path, prefix, files):
     x -> defs'
     where
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
       defs       := <index-select-all(|namespace, path, x)>;
       // TODO: optimize: try not to call do-adjust-index-lookup from here
       if [_ | path'] := path then
-        defs2 := <index-lookup-all(is-adjust-lookup-enabled |namespace, path', prefix)> x;
+        defs2 := <index-lookup-all(is-adjust-lookup-enabled |namespace, path', prefix, files)> x;
         defs' := <conc> (defs, defs2)
       else
         defs' := defs
@@ -583,8 +582,8 @@
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-outermost(|prefix):
-    x{[namespace | path]} -> <index-lookup-outermost(id |<index-namespace-unwrap> namespace, path, prefix)>
+  index-lookup-outermost(|prefix, files):
+    x{[namespace | path]} -> <index-lookup-outermost(id |<index-namespace-unwrap> namespace, path, prefix, files)>
  
   /**
    * Given an annotated AST node, returns the outermost Def with a corresponding URI.
@@ -594,14 +593,14 @@
    *
    * @internal
    */
-  index-lookup-outermost(is-adjust-lookup-enabled |namespace, path, prefix):
+  index-lookup-outermost(is-adjust-lookup-enabled |namespace, path, prefix, files):
     x -> def
     where
       // TODO: optimize: just like index-lookup
       [_ | path'] := path;
-      def         := <index-lookup-outermost(is-adjust-lookup-enabled |namespace, path', prefix)> x
+      def         := <index-lookup-outermost(is-adjust-lookup-enabled |namespace, path', prefix, files)> x
     <+
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
       def        := <index-select(|namespace, path, x)>
  
   /**
@@ -610,8 +609,8 @@
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-one-level(|prefix):
-    x{[namespace | path]} -> <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
+  index-lookup-one-level(|prefix, files):
+    x{[namespace | path]} -> <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix, files)>
  
   /**
    * Given an annotated AST node, returns a Def that has the same parent URI.
@@ -619,17 +618,18 @@
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-one-level(is-adjusted-lookup-enabled |namespace, path, prefix):
+  index-lookup-one-level(is-adjusted-lookup-enabled |namespace, path, prefix, files):
     x{_} -> defs
     with
       is-adjusted-lookup-enabled;
-      do-adjust-index-lookup(|namespace, path, x, prefix);
+      do-adjust-index-lookup(|namespace, path, x, prefix, files);
       mapconcat(\d at Def(p) -> [d]\
-          <+ \[namespace' | path'] -> <index-lookup-one-level(fail |namespace', path', prefix)> x\
+          <+ \[namespace' | path'] -> <index-lookup-one-level(fail |namespace', path', prefix, files)> x\
           <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a Def(_) or [namespace | path]"));
       ?defs
     <+
-      defs := <index-get-children(|namespace, prefix)> Def([namespace | path])
+      get := Def([namespace | path]);
+      defs := <concat> [<index-get-all> get, <index-get-children(|namespace, prefix)> get]
  
   /**
    * Given an annotated AST node, returns a Def with a common ancestor URI.
@@ -637,8 +637,8 @@
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-all-levels(|prefix):
-    x{[namespace | path]} -> <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, prefix)>
+  index-lookup-all-levels(|prefix, files):
+    x{[namespace | path]} -> <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, prefix, files)>
  
   /**
    * Given an annotated AST node, returns a Def with a common ancestor URI.
@@ -646,30 +646,30 @@
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-all-levels(is-adjust-lookup-enabled |namespace, path, prefix):
+  index-lookup-all-levels(is-adjust-lookup-enabled |namespace, path, prefix, files):
     x{_} -> all-defs
     with
       is-adjust-lookup-enabled;
-      do-adjust-index-lookup(|namespace, path, x, prefix);
+      do-adjust-index-lookup(|namespace, path, x, prefix, files);
       mapconcat(\d at Def(p) -> [d]\
-          <+ \[namespace' | path'] -> <index-lookup-all-levels(fail |namespace', path', prefix)> x\
+          <+ \[namespace' | path'] -> <index-lookup-all-levels(fail |namespace', path', prefix, files)> x\
           <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a Def(_) or [namespace | path]"));
       ?all-defs
     <+
       one-level := <index-get-children(|namespace, prefix)> Def([namespace | path]);
       if [_ | path'] := path then
-        all-defs := <concat> [one-level, <index-lookup-all-levels(fail |namespace, path', prefix)> x]
+        all-defs := <concat> [one-level, <index-lookup-all-levels(fail |namespace, path', prefix, files)> x]
       else
         all-defs := one-level
       end
  
   /** @Deprecated */
   index-lookup-contained(|namespace, prefix) =
-    index-lookup-children(|namespace, prefix)
+    index-lookup-children(|namespace, prefix, [])
    
   /** @Deprecated */
   index-lookup-contained-all-levels(|namespace, name) =
-    index-lookup-descendants(|namespace, name)
+    index-lookup-descendants(|namespace, name, [])
  
   /**
    * Given an annotated AST node, resolves it,
@@ -679,14 +679,14 @@
    * @param prefix    Only child Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-children(|namespace, prefix):
+  index-lookup-children(|namespace, prefix, files):
     x{[ns | path]} -> defs
     with
       if !ns => Unresolved(_) then
-        Def([_ | def-path]) := <index-lookup>;
-        defs := <index-lookup-one-level(id|namespace, def-path, prefix)> x
+        Def([_ | def-path]) := <index-lookup(|files)>;
+        defs := <index-lookup-one-level(id|namespace, def-path, prefix, files)> x
       else
-        defs := <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
+        defs := <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix, files)>
       end
     <+
       defs := []
@@ -699,14 +699,14 @@
    * @param prefix    Only child Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-descendants(|namespace, name):
+  index-lookup-descendants(|namespace, name, files):
     x{[ns | path]} -> defs
     with
       if !ns => Unresolved(_) then
-        Def([_ | def-path]) := <index-lookup>;
-        defs := <index-lookup-all-levels(id|namespace, def-path, name)> x
+        Def([_ | def-path]) := <index-lookup(|files)>;
+        defs := <index-lookup-all-levels(id|namespace, def-path, name, files)> x
       else
-        defs := <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, name)>
+        defs := <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, name, files)>
       end
     <+
       defs := []
@@ -758,18 +758,19 @@
     ReadWildcard(_, name) -> <id>
     where <is-substring(!prefix)> name
       
-  index-is-unresolved(|x) = <iset-contains(|x)> <Index-UnresolvedSet>
+  index-is-unresolved(|x) = Index-UnresolvedSet; (iset-contains(|x) <+ fail)
+  index-add-unresolved(|x) = (Index-UnresolvedSet; iset-add(|x)) <+ id
   
   index-file-dependent-construct: 
     Def(uri@[namespace | path]) -> [Read(uri), ReadWildcard([namespace | rest], firstElem), Use(uri, [])]
     where
       [firstElem | rest] := path
  
-  do-adjust-index-lookup(|namespace, path, use, prefix) =
+  do-adjust-index-lookup(|namespace, path, use, prefix, files) =
     // UNDONE: try(origin-term);
     repeat-until(
       prim("SSL_EXT_get_parent", <id>)
-    , adjust-index-lookup(origin-equal(|use) |namespace, path, prefix)
+    , adjust-index-lookup(origin-equal(|use) |namespace, path, prefix, files)
     )
  
   index-select(|namespace, path, use) =

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/editor-common.generated.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/editor-common.generated.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -131,6 +131,9 @@
   origin-column    = origin-location => (_, <id>, _, _)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
   
   origin-surrounding-comments =
     prim("SSL_EXT_origin_surrounding_comments", "NamingExperiment", <id>)

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -14,32 +14,32 @@
   
   // Adjust the lookup behavior for properties,
   // overriding the lookup with a list of property Defs
-  adjust-index-lookup(is-use |namespace, path, prefix):
+  adjust-index-lookup(is-use |namespace, path, prefix, files):
     PropAccess(e, <is-use>) -> p*
     with
       if ENTITY(e-type) := <type-of> e then
-        p* := (<index-lookup-children(|Property(), prefix)> e-type)
+        p* := (<index-lookup-children(|Property(), prefix, files)> e-type)
       else
         p* := []
       end
 
   // Adjust the lookup behavior for variables,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, name):
+  adjust-index-lookup(is-use |namespace, path, name, files):
     Var(<is-use>) -> [[Var() | path], [Property() | path]]
     
   // Why is this needed? shouldn't the Var() adjust handle this?
   // Adjust the lookup behavior for assignments,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, name):
+  adjust-index-lookup(is-use |namespace, path, name, files):
     Assign(<is-use>, _) -> [[Var() | path], [Property() | path]]
 
   // Adjust the lookup behavior for function calls,
   // selecting a function with matching parameter types
   // (if this fails, the normal lookup behavior is used!)
-  adjust-index-lookup(is-use |namespace, path, prefix):
+  adjust-index-lookup(is-use |namespace, path, prefix, files):
     Call(<is-use>, args) -> def
     where
       arg-types := <map(type-of)> args;
-      all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix)>;
+      all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix, files)>;
       def       := <getfirst(is-params-compatible(|arg-types))>

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Sun Feb 12 12:44:51 2012	(r24294)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Sun Feb 12 14:32:42 2012	(r24295)
@@ -117,7 +117,7 @@
       x                 := <collect-one(?COMPLETION(_))> ast';
       COMPLETION(name)	:= x;
       (
-        proposals       := <index-lookup-all-levels(|name)> x 
+        proposals       := <index-lookup-all-levels(|name, [($[[project-path]/[path]], "")])>
       <+ 
         proposals 			:= []
       );


From richard at vogelij.nl  Mon Feb 13 04:25:39 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Mon, 13 Feb 2012 03:25:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24296 - in
	spoofax-ace: resources/javascript/aceworker
	resources/stratego src/spoofax/ace/generator src/spoofax/ace/utils
Message-ID: <20120213032539.4F7B22B800C@mx2.tudelft.nl>

Author: rvogelij
Date: Mon Feb 13 03:25:35 2012
New Revision: 24296
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24296&sc=1

Log:
- implemented some time related primitive functions
- added more detailed statistics regarding the time it takes to:
  - loading of the parsetable
  - loading of the parser instance
  - parsing sourcecode into an ast
  - analyzing the ast (running the stratego program)
  - produce ace tokens based on the analyzed ast
- removed unused file

Added:
   spoofax-ace/resources/stratego/
   spoofax-ace/resources/stratego/S2Alib.str
Deleted:
   spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace.js.txt
Modified:
   spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java
   spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java
   spoofax-ace/src/spoofax/ace/utils/S2AUtils.java

Added: spoofax-ace/resources/stratego/S2Alib.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-ace/resources/stratego/S2Alib.str	Mon Feb 13 03:25:35 2012	(r24296)
@@ -0,0 +1,18 @@
+/**
+The contents of this file are appended to the entrypoint file which is generated by spoofax2ace. 
+*/
+
+
+print-elapsed(s|msg) =
+      where(times => starttime)
+    ; s
+    ; where(
+        <diff-times>(<times>,starttime)
+      ; <prim("SSL_loginfo")><concat-strings>[ msg
+        				, " ["
+                        , <self-children-user-time; ticks-to-seconds ; real-to-string(|3)>
+                        , "s/"
+                        , <self-children-sys-time; ticks-to-seconds ; real-to-string(|3)>
+                        , "s]"
+                        ]
+      )

Modified: spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java	Sun Feb 12 14:32:42 2012	(r24295)
+++ spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java	Mon Feb 13 03:25:35 2012	(r24296)
@@ -1,19 +1,24 @@
 package spoofax.ace.generator;
 
 import java.io.BufferedWriter;
+import java.io.FileOutputStream;
 import java.io.FileWriter;
 import java.io.IOException;
 
 import spoofax.ace.exceptions.S2ASpoofaxSetupException;
 import spoofax.ace.spoofaxinfo.S2AEsvParser;
+import spoofax.ace.utils.S2AUtils;
 
 public class S2AEntryPoint {
 	/*
 	 * Generates a stratego file which calls the original editor-analyze
 	 * Strategy results in a ace parseable JS object
 	 */
-	public static void GenerateS2AEntry(String entryFile, S2AEsvParser esvParser) throws S2ASpoofaxSetupException
+	public static void GenerateS2AEntry(Class owner, String entryFile, S2AEsvParser esvParser) throws S2ASpoofaxSetupException
 	{
+		
+		/*print-elapsed*/
+		
 		try
 		{
 			String strategoMain =
@@ -22,16 +27,21 @@
 	        "libstratego-lib\n" +
 	        esvParser.GetCtreeName() + "\n" +
 	        "  rules\n" +
-	        "    main: [sourcecode,x] -> <prim(\"JSSGLR_ACE_TOKENIZE\", parser)>(ast, [errors, warnings, notes])\n" +
-	        "      where table := <import-term("+esvParser.GetTableName()+")>\n" +
-	        "      where parser := <prim(\"JSSGLR_GET_PARSER\")>table\n" +
-	        "      where ast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode\n" +
-	        "      where (ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(ast, \"\", \"\")\n"
+	        "    main: \n" +
+	        "      [sourcecode,x] -> <print-elapsed(<real-main>sourcecode|\"Total time worked\")> \n" +
+	        "\n" +
+	        "    real-main: sourcecode -> <print-elapsed(<prim(\"JSSGLR_ACE_TOKENIZE\", parser)>(ast, [errors, warnings, notes]) | \"Tokenized\")>    \n" +
+	        "      where print-elapsed(table := <import-term("+esvParser.GetTableName()+")>|\"Loaded parsetable\") \n" +
+	        "      where print-elapsed(parser := <prim(\"JSSGLR_GET_PARSER\")>table|\"Loaded parser\") \n" +
+	        "      where print-elapsed(ast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"Parsed source\")\n" +
+	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(ast, \"\", \"\")|\"Analyzed source\") \n"
 			;
-			FileWriter fstream = new FileWriter(entryFile);
-			BufferedWriter out = new BufferedWriter(fstream);
-			out.write(strategoMain);
-			out.close();
+			FileOutputStream fstream = new FileOutputStream(entryFile);
+			//BufferedWriter out = new BufferedWriter(fstream);
+			S2AUtils.WriteStringToStream(strategoMain, fstream); //out.write(strategoMain);
+			S2AUtils.WriteResourceToStream(owner, "/stratego/S2Alib.str", fstream);
+			fstream.flush();
+			fstream.close();
 		} catch (IOException e)
 		{
 			System.err.println("###CRITICAL ERROR### " + e.getMessage());

Modified: spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Sun Feb 12 14:32:42 2012	(r24295)
+++ spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Mon Feb 13 03:25:35 2012	(r24296)
@@ -32,7 +32,6 @@
 	private final String _strategoLib;
 	private final String _strategoCtrees;
 	
-	//private final String _wwwoutput;
 	private final String _mainSrcFile;
 	
 	private final String tmpDir;
@@ -49,10 +48,9 @@
 		_str2jsPath = str2jsPath;
 		_strategoLib = strategoLib;
 		_strategoCtrees = strategoCtrees;
-		//_wwwoutput = wwwoutput;
 		_mainSrcFile = mainSrcFile;
 		
-		tmpDir = "./tmp/";
+		tmpDir = System.getProperty("java.io.tmpdir") + "/s2atmp/";
 		jsbin = tmpDir+"/jsbin.js";
 		wrappedJsBin =  tmpDir+"/jsbin.wrapped.js";
 		strategoEntry = tmpDir + "spoofax2ace.str";
@@ -111,7 +109,7 @@
 	private void BuildStrProgram() throws S2ASpoofaxSetupException, S2AWrapperException, S2ACompilerException, S2AValidatorException, IOException
 	{
 		CacheRequiredFiles(tmpDir, esvParser);
-		S2AEntryPoint.GenerateS2AEntry(strategoEntry, esvParser);
+		S2AEntryPoint.GenerateS2AEntry(getClass(), strategoEntry, esvParser);
 		CompileStratego(tmpDir, strategoEntry, jsbin);
 	}
 	
@@ -141,7 +139,7 @@
 	{
 		System.err.println("Building ace editor backend...");
 		try {
-			new File(wwwroot).delete();
+			S2AUtils.EmptyDir(wwwroot);
 			new File(wwwroot).mkdirs();
 			new File(wwwroot+"/src").mkdirs();
 			S2AUtils.WriteResourceToFile(getClass(), "/ace/require.js", wwwroot+"/require.js");
@@ -244,9 +242,14 @@
 		String arg =
         "-i " + strategoProg + " " +
         "-I " + _spoofaxProjDir + " " +
-		"-I " + _strategoLib + " " +
+		
 		"-I " + _strategoCtrees + " " +
+		"-I " + _strategoLib + "" +
 		"";
+		
+		System.err.println("Args:");
+		System.err.println(arg);
+		
 		 
 		PrintStream buOut = System.out;
 		PrintStream buErr = System.err;

Modified: spoofax-ace/src/spoofax/ace/utils/S2AUtils.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/utils/S2AUtils.java	Sun Feb 12 14:32:42 2012	(r24295)
+++ spoofax-ace/src/spoofax/ace/utils/S2AUtils.java	Mon Feb 13 03:25:35 2012	(r24296)
@@ -56,6 +56,13 @@
 		return stream;
 	}
 	
+	public static FileOutputStream WriteStringToStream(String str, FileOutputStream stream) throws IOException
+	{
+		for (int i = 0; i < str.length(); i++)
+			stream.write(str.charAt(i));
+		return stream;
+	}
+	
 	public static int FilesToDest(String srcPath, String destPath, String withSuffix) throws IOException
 	{
 		int count = 0;
@@ -73,9 +80,12 @@
 	
 	public static boolean EmptyDir(String path)
 	{
+		File p = new File(path);
+		if (!p.exists())
+			return false;
 		System.err.println("Emptying dir: " + path);
 		boolean r = true;
-		for (File f : new File(path).listFiles()) 
+		for (File f : p.listFiles()) 
 		{
 			if (f.isDirectory())
 				EmptyDir(f.getAbsolutePath());

From gabrielkonat at gmail.com  Mon Feb 13 11:07:41 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 13 Feb 2012 10:07:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24297 - in
	spoofax-contrib/separate-compilation-examples:
	c-without-macros/editor c-without-macros/trans
	csharp-partial-classses/editor csharp-partial-classses/trans
	entit...
Message-ID: <20120213100741.8F82ACC0D2@mx4.tudelft.nl>

Author: gkonat
Date: Mon Feb 13 10:07:40 2012
New Revision: 24297
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24297&sc=1

Log:
Added index commit and compile on save handlers for separate compilation examples.
Cleaned up some unused builders.

Added:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/generate.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/generate.str
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Builders.esv
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/editor/CSharpPartialClassses-Builders.esv
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Builders.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Builders.esv	Mon Feb 13 03:25:35 2012	(r24296)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Builders.esv	Mon Feb 13 10:07:40 2012	(r24297)
@@ -22,4 +22,6 @@
 
 refactorings
 
-  pretty-print : pp-c_without_macros-string
\ No newline at end of file
+  pretty-print : pp-c_without_macros-string
+  
+  on save: commit-and-compile
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Mon Feb 13 03:25:35 2012	(r24296)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Mon Feb 13 10:07:40 2012	(r24297)
@@ -97,3 +97,6 @@
 
   def-to-name:
     Def([namespace, name | _]) -> name
+
+  commit-and-compile = index-commit; index-schedule-compilation
+  
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/generate.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/generate.str	Mon Feb 13 10:07:40 2012	(r24297)
@@ -0,0 +1,19 @@
+module generate
+
+imports
+    
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/C-without-macros
+  lib/editor-common.generated
+  lib/index-library
+  lib/analysis-library
+  lib/compilation-library
+  analysis-generated
+  types
+
+rules // Incremental code generation of project
+      
+  index-compile-ast(|file, subfile, project-path) = id
+  
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/editor/CSharpPartialClassses-Builders.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/editor/CSharpPartialClassses-Builders.esv	Mon Feb 13 03:25:35 2012	(r24296)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/editor/CSharpPartialClassses-Builders.esv	Mon Feb 13 10:07:40 2012	(r24297)
@@ -24,9 +24,4 @@
 
   pretty-print : pp-csharppartialclassses-string
 
-  refactoring ID : "Rename Entity" = rename-entity (source) (cursor)
-    shortcut : "org.eclipse.jdt.ui.edit.text.java.rename.element"
-    input
-      identifier : "new name" = ""
-
-  // on save: generate-java
\ No newline at end of file
+  on save: commit-and-compile
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Mon Feb 13 03:25:35 2012	(r24296)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Mon Feb 13 10:07:40 2012	(r24297)
@@ -97,3 +97,6 @@
 
   def-to-name:
     Def([namespace, name | _]) -> name
+
+  commit-and-compile = index-commit; index-schedule-compilation
+  
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/generate.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/generate.str	Mon Feb 13 10:07:40 2012	(r24297)
@@ -0,0 +1,19 @@
+module generate
+
+imports
+    
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/CSharpPartialClassses
+  lib/editor-common.generated
+  lib/index-library
+  lib/analysis-library
+  lib/compilation-library
+  analysis-generated
+  types
+
+rules // Incremental code generation of project
+      
+  index-compile-ast(|file, subfile, project-path) = id
+  
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Mon Feb 13 03:25:35 2012	(r24296)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Mon Feb 13 10:07:40 2012	(r24297)
@@ -19,9 +19,7 @@
   builder  : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
   builder  : "Show analyzed syntax" = generate-analyzed (openeditor) (realtime) (source)
   builder  : "Show index entries for current file" = index-currentfile (openeditor) (realtime) (source)   
-  builder  : "Show index entries for all files" = index-allfiles (openeditor) (realtime) (source)                      
-  builder  : "Generate java file" = generate-java-file (openeditor) (realtime) (source)
-  builder  : "Generate java project" = generate-java-project (openeditor) (realtime) (source)                                                                                           
+  builder  : "Show index entries for all files" = index-allfiles (openeditor) (realtime) (source)                                                                                                             
 
 refactorings
                                                                                                                         
@@ -30,4 +28,4 @@
   refactoring ID            : "Rename Entity"  = rename-entity (source) (cursor)
   refactoring Property *    : "Extract Entity" = extract-entity (source)
   
-  on save: index-schedule-compilation
\ No newline at end of file
+  on save: commit-and-compile
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Mon Feb 13 03:25:35 2012	(r24296)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Mon Feb 13 10:07:40 2012	(r24297)
@@ -58,20 +58,6 @@
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
       
-  // Transforms a selection to Java
-  generate-java-file:
-    (selected, position, ast, path, project-path) -> (filename, result)
-    with
-      filename := <guarantee-extension(|"java")> path;
-      analyzed := <analyze-top> (selected, path, project-path);
-      result   := <to-java> analyzed
-      
-  // Transforms project to Java
-  generate-java-project:
-    (selected, position, ast, path, project-path) -> None()
-    with
-      index-compilation
-      
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
   editor-resolve:
     (node, position, ast, path, project-path) -> target
@@ -114,3 +100,5 @@
 
   def-to-name:
     Def([namespace, name | _]) -> name
+    
+  commit-and-compile = index-commit; index-schedule-compilation

From gabrielkonat at gmail.com  Mon Feb 13 11:21:27 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 13 Feb 2012 10:21:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24298 - in
	spoofax-contrib/separate-compilation-examples/entity-with-aspects:
	. .externalToolBuilders editor editor/java/entitywithaspects
	editor/java/entitywithaspects/st...
Message-ID: <20120213102127.59C737F8008@mx1.tudelft.nl>

Author: gkonat
Date: Mon Feb 13 10:21:27 2012
New Revision: 24298
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24298&sc=1

Log:
Cleaned up entity-with-aspects build.

Added:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/Activator.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseController.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseControllerGenerated.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsValidator.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/InteropRegisterer.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/Main.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/java_strategy_0_0.java
Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/.externalToolBuilders/NamingExperiment build.main.xml.launch
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/.externalToolBuilders/NamingExperiment build.main.xml.launch
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/.externalToolBuilders/NamingExperiment build.main.xml.launch	Mon Feb 13 10:07:40 2012	(r24297)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/.externalToolBuilders/NamingExperiment build.main.xml.launch	Mon Feb 13 10:21:27 2012	(r24298)
@@ -1,13 +1,9 @@
-?<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
 <launchConfiguration type="org.eclipse.ant.AntLaunchConfigurationType">
 <stringAttribute key="bad_container_name" value=".externalToolBuilders"/>
 <booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
-<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
-<listEntry value="/entity-with-aspects/build.main.xml"/>
-</listAttribute>
-<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
-<listEntry value="1"/>
-</listAttribute>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS"/>
+<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES"/>
 <booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
 <listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
 <listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/java-1.5.0-sun-1.5.0.18&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
@@ -18,10 +14,10 @@
 <booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value=""/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_ANT_TARGETS" value="all,"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LAUNCH_CONFIGURATION_BUILD_SCOPE" value="${none}"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/entity-with-aspects/build.main.xml}"/>
-<stringAttribute key="org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS" value="-verbose"/>
 <booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
 <stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/entity-with-aspects}"/>
 <stringAttribute key="process_factory_id" value="org.eclipse.ant.ui.remoteAntProcessFactory"/>
-</launchConfiguration>
\ No newline at end of file
+</launchConfiguration>

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml	Mon Feb 13 10:07:40 2012	(r24297)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml	Mon Feb 13 10:21:27 2012	(r24298)
@@ -1,12 +1,12 @@
 <?xml version="1.0" encoding="UTF-8" ?>
 
-<project name="EntityWithAspects" default="all">
+<project name="CSharpPartialClassses" default="all">
         
         <!-- Key input modules -->
         <property name="sdfmodule" value="EntityWithAspects"/>
-        <property name="metasdfmodule" value="EntityWithAspects"/>
+        <property name="metasdfmodule" value="Stratego-EntityWithAspects"/>
         <property name="esvmodule" value="EntityWithAspects"/>
-        <property name="strmodule" value="EntityWithAspects"/>
+        <property name="strmodule" value="entitywithaspects"/>
     
         <!-- Project directories -->
         <property name="trans" location="trans"/>
@@ -41,7 +41,7 @@
     
         <!-- Main target -->
         <target name="all" depends="copy-files, spoofaximp.default.ctree"/>
-	
+      
         <!-- Copy libraries from naming experiment -->
         <target name="copy-files">
             <copyfile dest="lib/index-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str"/>

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Mon Feb 13 10:07:40 2012	(r24297)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Mon Feb 13 10:21:27 2012	(r24298)
@@ -11,8 +11,8 @@
 
 builders
                                                                                                               
-  provider : include/EntityWithAspects.ctree                                                                   
-  provider : include/EntityWithAspects-java.jar                                                                
+  provider : include/entitywithaspects.ctree                                                                   
+  provider : include/entitywithaspects-java.jar                                                                
                                                                                                               
   observer : editor-analyze                                                                                   
                                                                                                               

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/Activator.java	Mon Feb 13 10:21:27 2012	(r24298)
@@ -0,0 +1,44 @@
+package entitywithaspects;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "EntityWithAspects";
+
+  public static final String kLanguageName = "EntityWithAspects";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseController.java	Mon Feb 13 10:21:27 2012	(r24298)
@@ -0,0 +1,4 @@
+package entitywithaspects;
+
+public class EntityWithAspectsParseController extends EntityWithAspectsParseControllerGenerated 
+{ }
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseControllerGenerated.java	Mon Feb 13 10:21:27 2012	(r24298)
@@ -0,0 +1,108 @@
+package entitywithaspects;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class EntityWithAspectsParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("EntityWithAspects");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    EntityWithAspectsParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = EntityWithAspectsParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = EntityWithAspectsParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(EntityWithAspectsParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return EntityWithAspectsParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsValidator.java	Mon Feb 13 10:21:27 2012	(r24298)
@@ -0,0 +1,12 @@
+package entitywithaspects;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class EntityWithAspectsValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return EntityWithAspectsParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/InteropRegisterer.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/InteropRegisterer.java	Mon Feb 13 10:21:27 2012	(r24298)
@@ -0,0 +1,14 @@
+package entitywithaspects.strategies;
+
+import org.strategoxt.lang.JavaInteropRegisterer;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Helper class for {@link java_strategy_0_0}.
+ */
+public class InteropRegisterer extends JavaInteropRegisterer {
+
+  public InteropRegisterer() {
+    super(new Strategy[] { java_strategy_0_0.instance });
+  }
+}

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/Main.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/Main.java	Mon Feb 13 10:21:27 2012	(r24298)
@@ -0,0 +1,11 @@
+package entitywithaspects.strategies;
+
+import org.strategoxt.lang.Context;
+
+public class Main {
+  
+  public static void init(Context context) {
+    // Called when the editor is being initialized
+  }
+
+}

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/java_strategy_0_0.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/java_strategy_0_0.java	Mon Feb 13 10:21:27 2012	(r24298)
@@ -0,0 +1,32 @@
+package entitywithaspects.strategies;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Example Java strategy implementation.
+ *
+ * This strategy can be used by editor services and can be called
+ * in Stratego modules by declaring it as an external strategy
+ * as follows:
+ *
+ * <code>
+ *  external java-strategy(|)
+ * </code>
+ *
+ * @see InteropRegisterer  This class registers java_strategy_0_0 for use.
+ */
+public class java_strategy_0_0 extends Strategy {
+  
+  public static java_strategy_0_0 instance = new java_strategy_0_0();
+
+  @Override
+  public IStrategoTerm invoke(Context context, IStrategoTerm current) {
+    context.getIOAgent().printError("Input for java-strategy: " + current);
+    ITermFactory factory = context.getFactory();
+    return factory.makeString("Regards from java-strategy");
+  }
+
+}

From richard at vogelij.nl  Mon Feb 13 12:04:15 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Mon, 13 Feb 2012 11:04:15 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24299 -
	spoofax-ace/src/spoofax/ace/generator
Message-ID: <20120213110415.5CE072B8010@mx2.tudelft.nl>

Author: rvogelij
Date: Mon Feb 13 11:04:15 2012
New Revision: 24299
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24299&sc=1

Log:
cleaned up, fixed problem with import

Modified:
   spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java
   spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java

Modified: spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java	Mon Feb 13 10:21:27 2012	(r24298)
+++ spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java	Mon Feb 13 11:04:15 2012	(r24299)
@@ -1,8 +1,6 @@
 package spoofax.ace.generator;
 
-import java.io.BufferedWriter;
 import java.io.FileOutputStream;
-import java.io.FileWriter;
 import java.io.IOException;
 
 import spoofax.ace.exceptions.S2ASpoofaxSetupException;
@@ -14,11 +12,8 @@
 	 * Generates a stratego file which calls the original editor-analyze
 	 * Strategy results in a ace parseable JS object
 	 */
-	public static void GenerateS2AEntry(Class owner, String entryFile, S2AEsvParser esvParser) throws S2ASpoofaxSetupException
+	public static void GenerateS2AEntry(@SuppressWarnings("rawtypes") Class owner, String entryFile, S2AEsvParser esvParser) throws S2ASpoofaxSetupException
 	{
-		
-		/*print-elapsed*/
-		
 		try
 		{
 			String strategoMain =

Modified: spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Mon Feb 13 10:21:27 2012	(r24298)
+++ spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Mon Feb 13 11:04:15 2012	(r24299)
@@ -1,19 +1,10 @@
 package spoofax.ace.generator;
 
-import java.io.BufferedReader;
-import java.io.BufferedWriter;
 import java.io.File;
-import java.io.FileInputStream;
 import java.io.FileOutputStream;
-import java.io.FileReader;
-import java.io.FileWriter;
 import java.io.IOException;
-import java.io.InputStream;
 import java.io.PrintStream;
-import java.nio.file.Files;
-import java.nio.file.Paths;
 import java.security.Permission;
-import org.strategoxt.strj.strj;
 import s2js.s2js; //make sure cp contains strategoxt.jar
 import spoofax.ace.exceptions.S2ACompilerException;
 import spoofax.ace.exceptions.S2ASpoofaxSetupException;
@@ -22,7 +13,6 @@
 import spoofax.ace.spoofaxinfo.S2AEsvParser;
 import spoofax.ace.spoofaxinfo.S2ASpoofaxInfo;
 import spoofax.ace.utils.S2AUtils;
-import spoofax.ace.validator.S2AValidator;
 
 public class S2AGenerator {
 	private final String _spoofaxProjDir;

From gabrielkonat at gmail.com  Mon Feb 13 12:25:25 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 13 Feb 2012 11:25:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24300 - in
	spoofax-contrib/separate-compilation-examples/entity-with-aspects:
	test trans
Message-ID: <20120213112525.B19D0108C014@mx3.tudelft.nl>

Author: gkonat
Date: Mon Feb 13 11:25:25 2012
New Revision: 24300
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24300&sc=1

Log:
Added assignment type checking.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/resolving.spt
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ent
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ent	Mon Feb 13 11:04:15 2012	(r24299)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ent	Mon Feb 13 11:25:25 2012	(r24300)
@@ -6,7 +6,7 @@
 	mNumber : Int
 	
 	Set(city : String, address : String, number : Int) {
-    mCity = city
+    mCity = city 
 		mAddress = address
 		mNumber = number
 	}

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ent
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ent	Mon Feb 13 11:04:15 2012	(r24299)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ent	Mon Feb 13 11:25:25 2012	(r24300)
@@ -6,7 +6,7 @@
 	
 	Print(location : Location) {
 		var adr : String = location.mAddress
-		var num : String = location.mNumber
+		var num : Int = location.mNumber
 		
 		print adr
 		print num

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/resolving.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/resolving.spt	Mon Feb 13 11:04:15 2012	(r24299)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/resolving.spt	Mon Feb 13 11:25:25 2012	(r24300)
@@ -31,7 +31,7 @@
   entity B {
     f() {
       var [[a]] : A
-      var b : B = [[a]]
+      var b : B = [[a]].x
     }
   }
 ]] resolve #2 to #1

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Mon Feb 13 11:04:15 2012	(r24299)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Mon Feb 13 11:25:25 2012	(r24300)
@@ -41,7 +41,21 @@
     (x, $[Unable to resolve.])
     
   constraint-error:
-    Call(f, a*) -> (f, $[Illegal argument types, expected [<strip-annos; write-to-string> param-types] not [<strip-annos; write-to-string> arg-types]])
+    e at Assign(var, exp) -> (e, $[Expected [<print-type> type1] but found [<print-type> type2].])
+    where
+    	type1 := <type-of> e;
+    	type2 := <type-of> exp;
+      not(<eq> (type1, type2))
+      
+  constraint-error:
+    e at VarDeclInit(var, type, exp) -> (e, $[Expected [<print-type> type1] but found [<print-type> type2].])
+    where
+      type1 := <type-of> type;
+      type2 := <type-of> exp;
+      not(<eq> (type1, type2))
+    
+  constraint-error:
+    Call(f, a*) -> (f, $[Illegal argument types, expected ([<print-type> param-types]) not ([<print-type> arg-types])])
     where
       arg-types    := <map(type-of)> a*;
       def at Def(uri) := <index-lookup> f;

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Mon Feb 13 11:04:15 2012	(r24299)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Mon Feb 13 11:25:25 2012	(r24300)
@@ -44,7 +44,7 @@
     PropAccess(e, p) -> <type-of> <index-lookup> p
     
   type-of:
-    Assign(_, x) -> <type-of> x
+    Assign(x, _) -> <type-of> <index-lookup> x
 
   type-of:
     Def(uri) -> <index-get-value> Type(uri, ())
@@ -64,6 +64,16 @@
     where
       <eq> (from-type, to-type)
 
+  print-type = 
+    switch ?input
+      case IntType() : !"Int"
+      case StringType() : !"String"
+      case Type(?t) : <strip-annos> t
+      case TYPE(?t) : <strip-annos> t
+      case [?type|[]] : <print-type> type
+      case [?type|?types]; not (<?[]> types) : !$[[<print-type> type], [<print-type> types]] 
+      otherwise : ?name#(_); !$[[name]]
+    end   
 
 rules // store definition and parameter types
     

From gabrielkonat at gmail.com  Mon Feb 13 12:40:29 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 13 Feb 2012 11:40:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24301 - in
	spoofax-contrib/separate-compilation-examples:
	c-without-macros/trans csharp-partial-classses/trans
	entity-with-aspects/trans
Message-ID: <20120213114029.745D4CC03B@mx4.tudelft.nl>

Author: gkonat
Date: Mon Feb 13 11:40:28 2012
New Revision: 24301
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24301&sc=1

Log:
Fixed incorrect commit-and-compile strategy.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Mon Feb 13 11:25:25 2012	(r24300)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Mon Feb 13 11:40:28 2012	(r24301)
@@ -98,5 +98,10 @@
   def-to-name:
     Def([namespace, name | _]) -> name
 
-  commit-and-compile = index-commit; index-schedule-compilation
+  commit-and-compile:
+    input -> input
+    with
+      index-commit
+    with
+      index-schedule-compilation
   
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Mon Feb 13 11:25:25 2012	(r24300)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Mon Feb 13 11:40:28 2012	(r24301)
@@ -98,5 +98,10 @@
   def-to-name:
     Def([namespace, name | _]) -> name
 
-  commit-and-compile = index-commit; index-schedule-compilation
+  commit-and-compile:
+    input -> input
+    with
+      index-commit
+    with
+      index-schedule-compilation
   
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Mon Feb 13 11:25:25 2012	(r24300)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Mon Feb 13 11:40:28 2012	(r24301)
@@ -99,6 +99,11 @@
       proposals'        := <map(def-to-name)> proposals
 
   def-to-name:
-    Def([namespace, name | _]) -> name
-    
-  commit-and-compile = index-commit; index-schedule-compilation
+    Def([namespace, name | _]) -> name  
+  
+  commit-and-compile:
+    input -> input 
+    with
+      index-commit
+    with
+      index-schedule-compilation

From gabrielkonat at gmail.com  Mon Feb 13 15:46:29 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 13 Feb 2012 14:46:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24302 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
	spoofax-imp/trunk/experimental/NamingExperiment/lib
	spoofax/trunk/spoofax/org.spoofax.inter...
Message-ID: <20120213144629.E32692B8008@mx2.tudelft.nl>

Author: gkonat
Date: Mon Feb 13 14:46:29 2012
New Revision: 24302
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24302&sc=1

Log:
Changed path strings from the index to be in (Eclipse) portable format.
Added support for changing how the diff strategy works for finding out which files to reanalyze.
Changing types of definitions now properly reanalyzes the dependent files in entity-with-aspects experiment.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Mon Feb 13 11:40:28 2012	(r24301)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Mon Feb 13 14:46:29 2012	(r24302)
@@ -9,10 +9,6 @@
 
 rules
   
-  // Adjust the URI of the Module element
-  //adjust-index-path(is-def |namespace, path):
-  //  Module(<is-def>, _) -> ["ROOT"]
-  
   // Adjust the lookup behavior for properties,
   // overriding the lookup with a list of property Defs
   adjust-index-lookup(is-use |namespace, path, prefix, files):
@@ -65,4 +61,14 @@
       arg-types := <map(type-of)> args;
       all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix, files)>;
       def       := <getfirst(is-params-compatible(|arg-types))>
+      
+  // Add Type to the constructors to check for differences.
+  index-diff-constructors = ?Type(_, _)
+  
+  // Type definitions are equal if their URI is equal and if their values are equal.
+  index-diff-compare:
+    (Type(u1, v1), Type(u2, v2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2);
+       <eq> (v1, v2)
       
\ No newline at end of file

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb 13 11:40:28 2012	(r24301)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb 13 14:46:29 2012	(r24302)
@@ -33,6 +33,29 @@
   adjust-index-path(is-def |namespace, path) = fail
  
   // adjust-index-path-from-filesystem(|project-path, path)
+  
+  /**
+   * Should define constructors to check for difference during analysis. Defaults to Def constructs.
+   *
+   * Extension example:
+   *   index-diff-constructors = ?Type(_, _)
+   */
+  index-diff-constructors = ?Def(_)
+  
+  /**
+   * Should compare two index elements and fail if they are not equal.
+   *
+   * Extension example:
+	 *   index-diff-compare:
+   *     (Type(u1, v1), Type(u2, v2)) -> <id>
+   *     where
+   *       <index-uri-eq> (u1, u2);
+   *       <eq> (v1, v2)
+   */
+  index-diff-compare:
+    (Def(u1), Def(u2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2)
  
 rules // analysis traversals
   
@@ -85,8 +108,8 @@
       // Init
       index-setup(|language, [project-path])
     with
-    	// Store copy of defs for diff and clear file
-      olddefs := <filter(?Def(_))> <index-get-all-in-file> full-path;
+    	// Store copy of elements for diff and clear file
+      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> full-path;
       <index-clear-file> full-path
     with
       {| Index-ReadSet, Index-UnresolvedSet:
@@ -125,8 +148,14 @@
       // Schedule re-analysis of dependent files (if current file is not testing language file)
       // HACK: Depends on file extension, could be other languages with .spt extension?
       if Editor() := phase; not(<is-test-file> path) then
+        newElems := <conc> (defs, <filter(index-diff-constructors)> data');
+        
 	      // Find removed and added definitions
-	      (added, removed) := <analyze-diff> (olddefs, defs);
+	      (addedElems, removedElems) := <analyze-diff> (oldElems, newElems);
+	      
+	      // Make sure all elements are defs.
+	      (added, removed) := (<map(analyze-to-def)> addedElems, <map(analyze-to-def)> removedElems);
+	      
 	      // Schedule re-analysis of files that have a Use or Read of a removed def and Read of an added def
 	      reanalyze-all(|added, removed, full-path)
 	    else
@@ -136,19 +165,11 @@
   analyze-diff:
     (defs1, defs2) -> (added, removed)
     with
-      added   := <diff(analyze-diff-eq)> (defs2, defs1);
-      removed := <diff(analyze-diff-eq)> (defs1, defs2)
- 
-  // Compensate for changing anonymous namespace names
-  analyze-diff-eq = ?(Def(u1), Def(u2)); (<eq> (u1, u2) <+ <eq> (<remove-all(?Anon(_))> u1, <remove-all(?Anon(_))> u2))
- 
-  // Tests if the current file is just a testing language input
-  is-test-file = string-ends-with(|".spt")
-  is-test-input(|language):
-    (ast, path) -> (ast, path)
-    where
-      <is-test-file> path;
-      not(!language => "Spoofax-Testing")
+      added   := <diff(index-diff-compare)> (defs2, defs1);
+      removed := <diff(index-diff-compare)> (defs1, defs2)
+      
+  analyze-to-def:
+    elem -> Def(<index-uri> elem)
      
   analyze-changed(get-all):
     defs -> filenames
@@ -160,11 +181,11 @@
   analyze-all-changed-files(|added, removed, full-path):
     _ -> changed
     with
-    changed := <make-set> <remove-all(?full-path <+ is-test-file <+ index-is-fake-file)> <concat> [
-	    <analyze-changed(index-get-uses-all)> removed,
-	    <analyze-changed(index-get-reads-all)> removed,
-	    <analyze-changed(index-get-reads-all)> added
-    ]
+	    changed := <make-set> <remove-all(?full-path <+ is-test-file <+ index-is-fake-file)> <concat> [
+		    <analyze-changed(index-get-uses-all)> removed,
+		    <analyze-changed(index-get-reads-all)> removed,
+		    <analyze-changed(index-get-reads-all)> added
+	    ]
          
   reanalyze-all(|added, removed, full-path) =
     analyze-all-changed-files(|added, removed, full-path);
@@ -747,6 +768,14 @@
        
   index-origin-language = (origin-term <+ id); prim("SSL_EXT_origin_language", <id>)
        
+  // Tests if the current file is just a testing language input
+  is-test-file = string-ends-with(|".spt")
+  is-test-input(|language):
+    (ast, path) -> (ast, path)
+    where
+      <is-test-file> path;
+      not(!language => "Spoofax-Testing")
+       
   index-is-name-substring(|name):
     template -> <id>
     with

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Mon Feb 13 11:40:28 2012	(r24301)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Mon Feb 13 14:46:29 2012	(r24302)
@@ -13,11 +13,13 @@
   
 rules // Compilation
   
-  index-schedule-compilation = 
-    queue-strategy(|"index-compilation", "Compiling!"); !None()
+  index-schedule-compilation:
+    <with(?(_, _, _, _, _) | "(selected, position, ast, path, project-path) tuple expected")> -> None()
+    with
+      queue-strategy(|"index-compilation", "Compiling!")
     
   index-compilation:
-    (ast, _, _, path, project-path) -> <index-compilation(|path, project-path)> ast
+    (_, _, ast, path, project-path) -> <index-compilation(|path, project-path)> ast
   
   index-compilation(|path, project-path):
     ast -> None()

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Mon Feb 13 11:40:28 2012	(r24301)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Mon Feb 13 14:46:29 2012	(r24302)
@@ -189,6 +189,18 @@
   index-uri = index-uri-impl <+ index-uri-generic
   
   /**
+   * Checks if given URI's are equal. Discards anonymous scopes if necessary.
+   *
+   * Example:
+   *   <index-uri-eq> ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"]) => 
+   *     ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"])
+   */
+  index-uri-eq:
+  	(u1, u2) -> <id>
+  	where
+      (<eq> (u1, u2) <+ <eq> (<remove-all(?Anon(_))> u1, <remove-all(?Anon(_))> u2))
+  
+  /**
    * Gets the value part for given term.
    */  
   index-value = index-value-impl <+ index-value-generic

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Mon Feb 13 11:40:28 2012	(r24301)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Mon Feb 13 14:46:29 2012	(r24302)
@@ -113,7 +113,7 @@
  	
 	@Override
 	public String toString() {
-		return "file".equals(uri.getScheme()) ? new File(uri).getAbsolutePath() : uri.toString();
+		return "file".equals(uri.getScheme()) ? new File(uri).getAbsolutePath().replace("\\", "/") : uri.toString();
 	}
 	
 	public IStrategoTerm toTerm(ITermFactory factory) {

From L.C.L.Kats at tudelft.nl  Mon Feb 13 17:49:07 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 13 Feb 2012 16:49:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24303 - in
	spoofax-imp/trunk:
	org.strategoxt.imp.debug.core/src/org/strategoxt/imp/debug/core/str/launching
	org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20120213164907.47F60108C03B@mx3.tudelft.nl>

Author: LennartKats
Date: Mon Feb 13 16:49:07 2012
New Revision: 24303
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24303&sc=1

Log:
Possible fix for memory leak of Spoofax/494 for observers loaded by editors and background jobs

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.debug.core/src/org/strategoxt/imp/debug/core/str/launching/DebuggableHybridInterpreter.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.debug.core/src/org/strategoxt/imp/debug/core/str/launching/DebuggableHybridInterpreter.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.debug.core/src/org/strategoxt/imp/debug/core/str/launching/DebuggableHybridInterpreter.java	Mon Feb 13 14:46:29 2012	(r24302)
+++ spoofax-imp/trunk/org.strategoxt.imp.debug.core/src/org/strategoxt/imp/debug/core/str/launching/DebuggableHybridInterpreter.java	Mon Feb 13 16:49:07 2012	(r24303)
@@ -264,7 +264,7 @@
 
 	@Override
 	public void uninit() {
-		// called by StrategoObserver.uninitialize()
 		super.uninit();
+		DebugPlugin.getDefault().getLaunchManager().removeLaunchListener(this);
 	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Mon Feb 13 14:46:29 2012	(r24302)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Mon Feb 13 16:49:07 2012	(r24303)
@@ -85,6 +85,7 @@
 			    observer.update(parseController, monitor);
 			} finally {
 				observer.getLock().unlock();
+				observer.uninitialize();
 			}
 		    
 		} catch (ModelException e) {

From L.C.L.Kats at tudelft.nl  Mon Feb 13 18:48:50 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 13 Feb 2012 17:48:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24304 - in
	spoofax-imp/branches/spoofax-imp-release:
	org.strategoxt.imp.feature org.strategoxt.imp.updatesite
Message-ID: <20120213174850.BD10A108C036@mx3.tudelft.nl>

Author: LennartKats
Date: Mon Feb 13 17:48:50 2012
New Revision: 24304
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24304&sc=1

Log:
updated update site

Modified:
   spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.updatesite/site.xml

Modified: spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.feature/feature.xml	Mon Feb 13 16:49:07 2012	(r24303)
+++ spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.feature/feature.xml	Mon Feb 13 17:48:50 2012	(r24304)
@@ -27,7 +27,7 @@
    </license>
 
    <url>
-      <update label="Spoofax/IMP updates" url="http://download.spoofax.org/update/stable/"/>
+      <update label="Spoofax/IMP updates" url="http://spoofax.org/update/stable/"/>
    </url>
 
    <requires>

Modified: spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.updatesite/site.xml
==============================================================================
--- spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.updatesite/site.xml	Mon Feb 13 16:49:07 2012	(r24303)
+++ spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.updatesite/site.xml	Mon Feb 13 17:48:50 2012	(r24304)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <site>
-   <description name="Spoofax/IMP" url="http://download.spoofax.org/update/stable/">
+   <description name="Spoofax/IMP" url="http://spoofax.org/update/stable/">
       Spoofax update site
    </description>
    <feature url="features/org.strategoxt.imp_1.0.1.0.jar" id="org.strategoxt.imp" version="1.0.1.0">

From L.C.L.Kats at tudelft.nl  Mon Feb 13 18:50:36 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 13 Feb 2012 17:50:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24305 -
	spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
Message-ID: <20120213175036.D4FF87F80C8@mx1.tudelft.nl>

Author: LennartKats
Date: Mon Feb 13 17:50:36 2012
New Revision: 24305
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24305&sc=1

Log:
Fix for memory leak of Spoofax/494 by disabling the debugger

Modified:
   spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java

Modified: spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
==============================================================================
--- spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Mon Feb 13 17:48:50 2012	(r24304)
+++ spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Mon Feb 13 17:50:36 2012	(r24305)
@@ -63,7 +63,7 @@
  */
 public final class Environment {
 	
-	public static boolean DEBUG_INTERPRETER_ENABLED = true; // set to false to disable the creation of a DebuggableHybridInterpreter
+	public static boolean DEBUG_INTERPRETER_ENABLED = false; // set to false to disable the creation of a DebuggableHybridInterpreter
 	
 	private final static ParseTableManager parseTableManager;
 	

From L.C.L.Kats at tudelft.nl  Mon Feb 13 18:57:32 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 13 Feb 2012 17:57:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24306 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	. services
Message-ID: <20120213175732.586C97F80F8@mx1.tudelft.nl>

Author: LennartKats
Date: Mon Feb 13 17:57:32 2012
New Revision: 24306
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24306&sc=1

Log:
reverted StrategoObserverBackgroundUpdateJob changes of r24303; disabled debugger to fix Spoofax/494

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Mon Feb 13 17:50:36 2012	(r24305)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Mon Feb 13 17:57:32 2012	(r24306)
@@ -65,7 +65,7 @@
  */
 public final class Environment {
 	
-	public static boolean DEBUG_INTERPRETER_ENABLED = true; // set to false to disable the creation of a DebuggableHybridInterpreter
+	public static boolean DEBUG_INTERPRETER_ENABLED = false; // set to false to disable the creation of a DebuggableHybridInterpreter
 	
 	private final static ParseTableManager parseTableManager;
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Mon Feb 13 17:50:36 2012	(r24305)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Mon Feb 13 17:57:32 2012	(r24306)
@@ -85,7 +85,6 @@
 			    observer.update(parseController, monitor);
 			} finally {
 				observer.getLock().unlock();
-				observer.uninitialize();
 			}
 		    
 		} catch (ModelException e) {

From gabrielkonat at gmail.com  Mon Feb 13 19:31:22 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 13 Feb 2012 18:31:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24307 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/editor
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses
	spoofax-contrib/separat...
Message-ID: <20120213183122.45837108C03E@mx3.tudelft.nl>

Author: gkonat
Date: Mon Feb 13 18:31:21 2012
New Revision: 24307
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24307&sc=1

Log:
Cleanup experimental projects.

Added:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.ewa
      - copied unchanged from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ewa
      - copied unchanged from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ewa
      - copied unchanged from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.ewa
      - copied unchanged from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.ewa
      - copied unchanged from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ewa
      - copied unchanged from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.ewa
      - copied unchanged from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.ent
Deleted:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.ent
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-imports.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/prettyprint.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/refactorings.str
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Completions.esv
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/.classpath
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/editor/CSharpPartialClassses-Completions.esv
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/.classpath
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects.main.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
   spoofax-imp/trunk/experimental/NamingExperiment/editor/NamingExperiment-Completions.esv
   spoofax-imp/trunk/experimental/NamingExperiment/test/example.nam
   spoofax-imp/trunk/experimental/NamingExperiment/trans/refactorings.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Completions.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Completions.esv	Mon Feb 13 17:57:32 2012	(r24306)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Completions.esv	Mon Feb 13 18:31:21 2012	(r24307)
@@ -12,17 +12,7 @@
 completions
                                              
   // Syntax completion:                      
-                                             
-  completion template Start :
-    "module " <m> (blank)  
-                                             
-  completion template Definition :
-    "entity " <e> " {" (cursor) "}" (blank)  
-                                             
-  completion template Property : "property : Type" =
-    <x> " : " <T> (blank)  
-                                             
-
+  
 completions
   // Semantic (identifier) completion:   
                                          

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/.classpath
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/.classpath	Mon Feb 13 17:57:32 2012	(r24306)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/.classpath	Mon Feb 13 18:31:21 2012	(r24307)
@@ -1,9 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry excluding="trans/**" kind="src" path="editor/java"/>
-	<classpathentry kind="src" path=".shadowdir"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
-	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
-	<classpathentry kind="output" path="bin"/>
-</classpath>
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry excluding="trans/**" kind="src" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/editor/CSharpPartialClassses-Completions.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/editor/CSharpPartialClassses-Completions.esv	Mon Feb 13 17:57:32 2012	(r24306)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/editor/CSharpPartialClassses-Completions.esv	Mon Feb 13 18:31:21 2012	(r24307)
@@ -12,16 +12,6 @@
 completions
                                              
   // Syntax completion:                      
-                                             
-  completion template Start :
-    "module " <m> (blank)  
-                                             
-  completion template Definition :
-    "entity " <e> " {" (cursor) "}" (blank)  
-                                             
-  completion template Property : "property : Type" =
-    <x> " : " <T> (blank)  
-                                             
 
 completions
   // Semantic (identifier) completion:   

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx	Mon Feb 13 17:57:32 2012	(r24306)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx	Mon Feb 13 18:31:21 2012	(r24307)
@@ -5,25 +5,25 @@
 context-free syntax
 	
 	%% Constructs
-    Definition*			 								-> Start {"Start", scope(Class, Namespace)}
-    "namespace" Namespace@=ID "{" Definition* "}"		-> Definition {"Namespace", scope(Class, Namespace)}
-    "partial" "class" Class@=ID "{" ClassBodyDecl* "}" 	-> Definition {"PartialClass", scope(Field, Method)}
-    "class" Class@=ID "{" ClassBodyDecl* "}"      		-> Definition {"Class", scope(Field, Method)}
+    Definition*                                         -> Start {"Start", scope(Class, Namespace)}
+    "namespace" Namespace@=ID "{" Definition* "}"       -> Definition {"Namespace", scope(Class, Namespace)}
+    "partial" "class" Class@=ID "{" ClassBodyDecl* "}"  -> Definition {"PartialClass", scope(Field, Method)}
+    "class" Class@=ID "{" ClassBodyDecl* "}"            -> Definition {"Class", scope(Field, Method)}
     
     %% Class members
-    Type Field@=ID ";"                                 	-> ClassBodyDecl {"Field"}
-    Type Method@=ID "(" ")" "{" Stmt* "}"    			-> ClassBodyDecl {"Method"} 
+    Type Field@=ID ";"                    -> ClassBodyDecl {"Field"}
+    Type Method@=ID "(" ")" "{" Stmt* "}" -> ClassBodyDecl {"Method"} 
     
     %% Types
-    Class at ID                                    		-> Type {"Type"}
-    "string"    										-> Type {"StringType", prefer}
-    "int"       										-> Type {"IntType", prefer}
-    "void"                                              -> Type {"VoidType", prefer}
+    Class at ID  -> Type {"Type"}
+    "string"  -> Type {"StringType", prefer}
+    "int"     -> Type {"IntType", prefer}
+    "void"    -> Type {"VoidType", prefer}
     
     %% Statements
-    "return" Expr ";"                          			-> Stmt {"Return"}
+    "return" Expr ";" -> Stmt {"Return"}
      
     %% Expressions
-    Field at ID                                         	-> Expr {"FieldRef"}
-    Expr "." Field at ID             						-> Expr {"FieldAccess"}
-    Expr "." Method at ID "(" ")"            				-> Expr {"MethodCall"}
\ No newline at end of file
+    Field at ID                    -> Expr {"FieldRef"}
+    Expr "." Field at ID           -> Expr {"FieldAccess"}
+    Expr "." Method at ID "(" ")"  -> Expr {"MethodCall"}
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/.classpath
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/.classpath	Mon Feb 13 17:57:32 2012	(r24306)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/.classpath	Mon Feb 13 18:31:21 2012	(r24307)
@@ -1,9 +1,8 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<classpath>
-	<classpathentry excluding="trans/**" kind="src" path="editor/java"/>
-	<classpathentry kind="src" path=".shadowdir/SPX"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
-	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
-	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
-	<classpathentry kind="output" path="bin"/>
-</classpath>
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry excluding="trans/**" kind="src" path="editor/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects.main.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects.main.esv	Mon Feb 13 17:57:32 2012	(r24306)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects.main.esv	Mon Feb 13 18:31:21 2012	(r24307)
@@ -12,6 +12,6 @@
   description   : "Spoofax/IMP-generated editor for the EntityWithAspects language"
   url           : http://strategoxt.org
                   
-  extensions    : ent
+  extensions    : ewa
   table         : include/EntityWithAspects.tbl
   start symbols : Start
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf	Mon Feb 13 17:57:32 2012	(r24306)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf	Mon Feb 13 18:31:21 2012	(r24307)
@@ -10,28 +10,28 @@
 
 context-free syntax
 
-    "module" ID Definition*                                                   -> Start        {cons("Module"), scope}
-    "entity" ID "{" Member* "}"                                               -> Definition   {cons("Entity"), scope}
-    "import" ImportPart                                                       -> Definition   {cons("Import")}
-    ID "." "*"                                                                -> ImportPart   {cons("WildcardImport")}
-    ID "." ID                                                                 -> ImportPart   {cons("EntityImport")}
-    "aspect" ID "{" AspectMember* "}"                                         -> Definition   {cons("Aspect"), scope}
-    "pointcut" ID "(" {Param ","}* ")" ":" {JoinPoint ","}+                   -> AspectMember {cons("Pointcut"), scope}
-    "advice" ID AdviceType "(" {Param ","}* ")" ":" ID "(" {Exp ","}* ")" Stm -> AspectMember {cons("Advice"), scope}
-    "before"                                                                  -> AdviceType   {cons("Before")}
-    "after"                                                                   -> AdviceType   {cons("After")}
-    "assigned" "(" Type ")"                                                   -> JoinPoint    {cons("Assigned")}
-    ID ":" Type                                                               -> Member       {cons("Property")}
-    ID "(" {Param ","}* ")" Stm                                               -> Member       {cons("Function"), scope}
-    ID ":" Type                                                               -> Param        {cons("Param")}
-    "var" ID ":" Type                                                         -> Stm          {cons("VarDecl")}
-    "var" ID ":" Type "=" Exp                                                 -> Stm          {cons("VarDeclInit")}
-    ID "=" Exp                                                                -> Stm          {cons("Assign")}
-    "{" Stm* "}"                                                              -> Stm          {cons("Block"), scope}
-    "print" Exp                                                               -> Stm          {cons("Print")}
-    ID "(" {Exp ","}* ")"                                                     -> Exp          {cons("Call")}
-    ID                                                                        -> Exp          {cons("Var")}
-    Exp "." ID                                                                -> Exp          {cons("PropAccess")}
-    ID                                                                        -> Type         {cons("Type")}
-    "String"                                                                  -> Type         {cons("StringType"), prefer}
-    "Int"                                                                     -> Type         {cons("IntType"), prefer}
\ No newline at end of file
+  "module" ID Definition*                                                   -> Start        {cons("Module"), scope}
+  "entity" ID "{" Member* "}"                                               -> Definition   {cons("Entity"), scope}
+  "import" ImportPart                                                       -> Definition   {cons("Import")}
+  ID "." "*"                                                                -> ImportPart   {cons("WildcardImport")}
+  ID "." ID                                                                 -> ImportPart   {cons("EntityImport")}
+  "aspect" ID "{" AspectMember* "}"                                         -> Definition   {cons("Aspect"), scope}
+  "pointcut" ID "(" {Param ","}* ")" ":" {JoinPoint ","}+                   -> AspectMember {cons("Pointcut"), scope}
+  "advice" ID AdviceType "(" {Param ","}* ")" ":" ID "(" {Exp ","}* ")" Stm -> AspectMember {cons("Advice"), scope}
+  "before"                                                                  -> AdviceType   {cons("Before")}
+  "after"                                                                   -> AdviceType   {cons("After")}
+  "assigned" "(" Type ")"                                                   -> JoinPoint    {cons("Assigned")}
+  ID ":" Type                                                               -> Member       {cons("Property")}
+  ID "(" {Param ","}* ")" Stm                                               -> Member       {cons("Function"), scope}
+  ID ":" Type                                                               -> Param        {cons("Param")}
+  "var" ID ":" Type                                                         -> Stm          {cons("VarDecl")}
+  "var" ID ":" Type "=" Exp                                                 -> Stm          {cons("VarDeclInit")}
+  ID "=" Exp                                                                -> Stm          {cons("Assign")}
+  "{" Stm* "}"                                                              -> Stm          {cons("Block"), scope}
+  "print" Exp                                                               -> Stm          {cons("Print")}
+  ID "(" {Exp ","}* ")"                                                     -> Exp          {cons("Call")}
+  ID                                                                        -> Exp          {cons("Var")}
+  Exp "." ID                                                                -> Exp          {cons("PropAccess")}
+  ID                                                                        -> Type         {cons("Type")}
+  "String"                                                                  -> Type         {cons("StringType"), prefer}
+  "Int"                                                                     -> Type         {cons("IntType"), prefer}
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.ewa (from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.ent)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.ewa	Mon Feb 13 18:31:21 2012	(r24307, copy of r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/import_test1.ent)
@@ -0,0 +1,9 @@
+module ImportTest1
+
+import Test.Ent1
+import Test.*
+
+entity TestEntity
+{
+	mValue : Ent1
+}
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ewa (from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ent)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ewa	Mon Feb 13 18:31:21 2012	(r24307, copy of r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/location.ent)
@@ -0,0 +1,13 @@
+module CRM
+
+entity Location {
+	mCity : String
+	mAddress : String
+	mNumber : Int
+	
+	Set(city : String, address : String, number : Int) {
+    mCity = city 
+		mAddress = address
+		mNumber = number
+	}
+}
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ewa (from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ent)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ewa	Mon Feb 13 18:31:21 2012	(r24307, copy of r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/person.ent)
@@ -0,0 +1,19 @@
+module CRM
+
+entity Person {
+	mName : String
+	mLocation : Location
+	
+	Print(location : Location) {
+		var adr : String = location.mAddress
+		var num : Int = location.mNumber
+		
+		print adr
+		print num
+		print location.mCity
+	}
+	
+	Test() {
+		var test : String = Print(mLocation)
+	}
+}
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.ewa (from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.ent)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.ewa	Mon Feb 13 18:31:21 2012	(r24307, copy of r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/printer.ent)
@@ -0,0 +1,12 @@
+module CRM
+
+aspect Printer {
+    pointcut StringChanged(s : String): assigned(String)
+    pointcut IntChanged(i : Int): assigned(Int)
+    
+    advice Adv1 before(s : String): StringChanged(s)
+        print s
+        
+    advice Adv2 after(i : Int): IntChanged(i)
+        print i
+}
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.ewa (from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.ent)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.ewa	Mon Feb 13 18:31:21 2012	(r24307, copy of r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test1.ent)
@@ -0,0 +1,6 @@
+module Test
+
+entity Ent1
+{
+	mValue : String
+} 
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ewa (from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ent)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ewa	Mon Feb 13 18:31:21 2012	(r24307, copy of r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test2.ent)
@@ -0,0 +1,12 @@
+module Test
+
+entity Ent2
+{
+	mEnt : Ent1 
+	
+	Print() {
+		var tst : String = mEnt.mValue
+
+		print tst
+	}
+}
\ No newline at end of file

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.ewa (from r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.ent)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.ewa	Mon Feb 13 18:31:21 2012	(r24307, copy of r24306, spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/test3.ent)
@@ -0,0 +1,12 @@
+module Test
+
+entity Ent3
+{
+  mEnt2 : Ent2
+  
+  Print() {
+    var tst : String = mEnt2.mEnt.mValue
+
+    print tst
+  }
+}
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Mon Feb 13 17:57:32 2012	(r24306)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Mon Feb 13 18:31:21 2012	(r24307)
@@ -11,8 +11,6 @@
   lib/compilation-library
   check
   generate
-  prettyprint
-  refactorings
   analysis-manual
   analysis-generated
 

Modified: spoofax-imp/trunk/experimental/NamingExperiment/editor/NamingExperiment-Completions.esv
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/editor/NamingExperiment-Completions.esv	Mon Feb 13 17:57:32 2012	(r24306)
+++ spoofax-imp/trunk/experimental/NamingExperiment/editor/NamingExperiment-Completions.esv	Mon Feb 13 18:31:21 2012	(r24307)
@@ -16,9 +16,7 @@
   completion template : Start =      "module " <m> (blank)       
                                                                  
   completion template : Definition = "entity " <e> " {}" (blank) 
-                                                                 
-  completion template : Property =   <x> " : " <T> (blank)       
-                                                                 
+
 
 completions
   // Semantic (identifier) completion:   

Modified: spoofax-imp/trunk/experimental/NamingExperiment/test/example.nam
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/test/example.nam	Mon Feb 13 17:57:32 2012	(r24306)
+++ spoofax-imp/trunk/experimental/NamingExperiment/test/example.nam	Mon Feb 13 18:31:21 2012	(r24307)
@@ -9,7 +9,7 @@
 entity B {
   y : A
   f(a : A) {
-      var v : A = a.x.y.x.x // bad: x
+      var v : A = a.x.y.x
       v = y
       v = f(v)
   }

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/refactorings.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/refactorings.str	Mon Feb 13 17:57:32 2012	(r24306)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/refactorings.str	Mon Feb 13 18:31:21 2012	(r24307)
@@ -2,10 +2,11 @@
 
 imports
   namingexperiment
-  analysis-library
-  lib/refactor-common.generated
   include/NamingExperiment
+  lib/refactor-common.generated
   lib/editor-common.generated  
+  lib/index-library
+  lib/analysis-library
 
 strategies
  

From gabrielkonat at gmail.com  Tue Feb 14 10:37:25 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 14 Feb 2012 09:37:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24308 - in
	spoofax-contrib/separate-compilation-examples/entity-with-aspects:
	editor/java trans
Message-ID: <20120214093725.95F7A108C034@mx3.tudelft.nl>

Author: gkonat
Date: Tue Feb 14 09:37:24 2012
New Revision: 24308
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24308&sc=1

Log:
Caps change part 1

Added:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects_.str
      - copied, changed from r24307, spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str
Deleted:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str

Copied and modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects_.str (from r24307, spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str)
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects.str	Mon Feb 13 18:31:21 2012	(r24307, copy source)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects_.str	Tue Feb 14 09:37:24 2012	(r24308)
@@ -1,4 +1,4 @@
-module EntityWithAspects
+module entitywithaspects
 
 imports
   libstratego-lib

From gabrielkonat at gmail.com  Tue Feb 14 10:41:02 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 14 Feb 2012 09:41:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24309 - in
	spoofax-contrib/separate-compilation-examples/entity-with-aspects:
	editor/java trans
Message-ID: <20120214094102.9AF9A2B8025@mx2.tudelft.nl>

Author: gkonat
Date: Tue Feb 14 09:41:02 2012
New Revision: 24309
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24309&sc=1

Log:
Caps change part 2

Added:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
      - copied unchanged from r24308, spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects_.str
Deleted:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects_.str

Copied: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str (from r24308, spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects_.str)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Tue Feb 14 09:41:02 2012	(r24309, copy of r24308, spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/EntityWithAspects_.str)
@@ -0,0 +1,107 @@
+module entitywithaspects
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/EntityWithAspects
+  lib/editor-common.generated
+  lib/index-library
+  lib/analysis-library
+  lib/compilation-library
+  check
+  generate
+  analysis-manual
+  analysis-generated
+
+rules // Main editor interface (defined by editor/NamingExperiment-Builders and -References.esv)
+  
+  // Analyzes the current program, returning a tuple with errors, warnings, and notes;
+  // each a list of (term, message) tuples or simply (message) terms.
+  editor-analyze:
+    (ast, path, project-path) -> (ast', errors, warnings, notes)
+    with
+      editor-init;
+      ast'      := <analyze-top>;
+      errors    := <collect-all(constraint-error, conc)> ast';
+      warnings  := <collect-all(constraint-warning, conc)> ast';
+      notes     := <collect-all(constraint-note, conc)> ast'
+  
+  // Prints the abstract syntax ATerm of a selection.
+  generate-aterm:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"aterm")> path;
+      result   := selected
+  
+  // Prints the analyzed abstract syntax ATerm of a selection.
+  generate-analyzed:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      editor-init;
+      filename := <guarantee-extension(|"analyzed.aterm")> path;
+      result   := <analyze-top> (selected, path, project-path)   
+      
+  // Prints the entries in the index of the current file.
+  index-currentfile:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"index.currentfile.aterm")> path;
+      result   := <index-get-all-in-file> path
+      
+  // Prints the entries in the index of all files.
+  index-allfiles:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"index.currentfile.aterm")> path;
+      result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
+      
+  // Resolves a reference when the user control-clicks or presses F3 in the editor.
+  editor-resolve:
+    (node, position, ast, path, project-path) -> target
+    where
+      if <is-test-file> path then
+        // HACK: Workaround for testing language selecting wrong node to resolve
+        !node => <collect-one(?subnode{[_|_]})>
+      else
+        !node => subnode
+      end;
+      def     := <index-lookup> subnode;
+      target  := def
+
+  // Returns "hover help" information for a particular node in the editor.
+  // For references, this rule is invoked using the resolved term.
+  editor-hover:
+    (target, position, ast, path, project-path) -> $[[def-path'']]
+    where
+      // FIXME: this only works for definition paths
+      def-term           := <nam-get-definition-key> target;
+      _{[ns | def-path]} := def-term;
+      def-path'  := <take-until(?Anon(_))> def-path;
+      def-path'' := <reverse; separate-by(|".")> def-path'
+
+  // Completes an identifier when the user presses control-space
+  // (the completion identifier in the AST provides additional context information)
+  editor-complete:
+    (node, position, ast, path, project-path) -> proposals'
+    where
+      editor-init;
+      ast'              := <analyze-top> (ast, path, project-path);
+      x                 := <collect-one(?COMPLETION(_))> ast';
+      COMPLETION(name)  := x;
+      (
+        proposals       := <index-lookup-all-levels(|name, [($[[project-path]/[path]], "")])> x 
+      <+ 
+        proposals       := []
+      );
+      proposals'        := <map(def-to-name)> proposals
+
+  def-to-name:
+    Def([namespace, name | _]) -> name  
+  
+  commit-and-compile:
+    input -> input 
+    with
+      index-commit
+    with
+      index-schedule-compilation

From L.C.L.Kats at tudelft.nl  Tue Feb 14 11:50:16 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Feb 2012 10:50:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24310 -
	spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.updatesite
Message-ID: <20120214105016.070A77F8085@mx1.tudelft.nl>

Author: LennartKats
Date: Tue Feb 14 10:50:15 2012
New Revision: 24310
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24310&sc=1

Log:
bump to 1.0.2

Modified:
   spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.updatesite/site.xml

Modified: spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.updatesite/site.xml
==============================================================================
--- spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.updatesite/site.xml	Tue Feb 14 09:41:02 2012	(r24309)
+++ spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.updatesite/site.xml	Tue Feb 14 10:50:15 2012	(r24310)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://spoofax.org/update/stable/">
       Spoofax update site
    </description>
-   <feature url="features/org.strategoxt.imp_1.0.1.0.jar" id="org.strategoxt.imp" version="1.0.1.0">
+   <feature url="features/org.strategoxt.imp_1.0.2.0.jar" id="org.strategoxt.imp" version="1.0.2.0">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">

From L.C.L.Kats at tudelft.nl  Tue Feb 14 11:53:46 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Feb 2012 10:53:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24311 - in
	spoofax-contrib/calculang/branches/Calculang5Tested: editor trans
Message-ID: <20120214105346.AF2F5108C03C@mx3.tudelft.nl>

Author: LennartKats
Date: Tue Feb 14 10:53:46 2012
New Revision: 24311
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24311&sc=1

Log:
new evaluate selection builder

Modified:
   spoofax-contrib/calculang/branches/Calculang5Tested/editor/Calculang-Builders.esv
   spoofax-contrib/calculang/branches/Calculang5Tested/trans/calculang.str

Modified: spoofax-contrib/calculang/branches/Calculang5Tested/editor/Calculang-Builders.esv
==============================================================================
--- spoofax-contrib/calculang/branches/Calculang5Tested/editor/Calculang-Builders.esv	Tue Feb 14 10:50:15 2012	(r24310)
+++ spoofax-contrib/calculang/branches/Calculang5Tested/editor/Calculang-Builders.esv	Tue Feb 14 10:53:46 2012	(r24311)
@@ -17,6 +17,9 @@
   builder: "Show abstract syntax (for selection)" =
   	generate-aterm (openeditor) (realtime) (meta) (source)                                                                              
                                                                                                                                
+  builder: "Evaluate (for selection)" =
+    generate-calc (openeditor) (realtime) (source)                                                                                
+                                                                                                                               
   builder: "To Java (for selection)" =
     generate-java (openeditor) (realtime) (source)                                                                              
                                                                                                                                

Modified: spoofax-contrib/calculang/branches/Calculang5Tested/trans/calculang.str
==============================================================================
--- spoofax-contrib/calculang/branches/Calculang5Tested/trans/calculang.str	Tue Feb 14 10:50:15 2012	(r24310)
+++ spoofax-contrib/calculang/branches/Calculang5Tested/trans/calculang.str	Tue Feb 14 10:53:46 2012	(r24311)
@@ -17,6 +17,12 @@
       filename := <guarantee-extension(|"aterm")> path;
       result   := selected // we just return the input term
       
+  generate-calc:
+    (selected, position, ast, path, project-path) -> (filename, result)
+    with
+      filename := <guarantee-extension(|"out")> path;
+      result   := <calc> selected
+      
   generate-java:
     (selected, position, ast, path, project-path) -> (filename, result)
     with

From gabrielkonat at gmail.com  Tue Feb 14 11:56:11 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 14 Feb 2012 10:56:11 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24312 - in
	spoofax-contrib/separate-compilation-examples:
	csharp-partial-classses/syntax csharp-partial-classses/test
	csharp-partial-classses/trans entity-with-aspects/edi...
Message-ID: <20120214105611.73A9CCC267@mx4.tudelft.nl>

Author: gkonat
Date: Tue Feb 14 10:56:11 2012
New Revision: 24312
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24312&sc=1

Log:
Added type checking to csharp-partial-classes experiment.

Added:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/Activator.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseController.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseControllerGenerated.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsValidator.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/InteropRegisterer.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/Main.java
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/java_strategy_0_0.java
Modified:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example.csh
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx	Tue Feb 14 10:53:46 2012	(r24311)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx	Tue Feb 14 10:56:11 2012	(r24312)
@@ -5,25 +5,25 @@
 context-free syntax
 	
 	%% Constructs
-    Definition*                                         -> Start {"Start", scope(Class, Namespace)}
-    "namespace" Namespace@=ID "{" Definition* "}"       -> Definition {"Namespace", scope(Class, Namespace)}
-    "partial" "class" Class@=ID "{" ClassBodyDecl* "}"  -> Definition {"PartialClass", scope(Field, Method)}
-    "class" Class@=ID "{" ClassBodyDecl* "}"            -> Definition {"Class", scope(Field, Method)}
-    
-    %% Class members
-    Type Field@=ID ";"                    -> ClassBodyDecl {"Field"}
-    Type Method@=ID "(" ")" "{" Stmt* "}" -> ClassBodyDecl {"Method"} 
-    
-    %% Types
-    Class at ID  -> Type {"Type"}
-    "string"  -> Type {"StringType", prefer}
-    "int"     -> Type {"IntType", prefer}
-    "void"    -> Type {"VoidType", prefer}
-    
-    %% Statements
-    "return" Expr ";" -> Stmt {"Return"}
-     
-    %% Expressions
-    Field at ID                    -> Expr {"FieldRef"}
-    Expr "." Field at ID           -> Expr {"FieldAccess"}
-    Expr "." Method at ID "(" ")"  -> Expr {"MethodCall"}
\ No newline at end of file
+  Definition*                                         -> Start {"Start", scope(Class, Namespace)}
+  "namespace" Namespace@=ID "{" Definition* "}"       -> Definition {"Namespace", scope(Class, Namespace)}
+  "partial" "class" Class@=ID "{" ClassBodyDecl* "}"  -> Definition {"PartialClass", scope(Field, Method)}
+  "class" Class@=ID "{" ClassBodyDecl* "}"            -> Definition {"Class", scope(Field, Method)}
+  
+  %% Class members
+  Type Field@=ID ";"                    -> ClassBodyDecl {"Field"}
+  Type Method@=ID "(" ")" "{" Stmt* "}" -> ClassBodyDecl {"Method"} 
+  
+  %% Types
+  Class at ID  -> Type {"Type"}
+  "string"  -> Type {"StringType", prefer}
+  "int"     -> Type {"IntType", prefer}
+  "void"    -> Type {"VoidType", prefer}
+  
+  %% Statements
+  "return" Expr ";" -> Stmt {"Return"}
+   
+  %% Expressions
+  Field at ID                    -> Expr {"FieldRef"}
+  Expr "." Field at ID           -> Expr {"FieldAccess"}
+  Expr "." Method at ID "(" ")"  -> Expr {"MethodCall"}
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example.csh
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example.csh	Tue Feb 14 10:53:46 2012	(r24311)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example.csh	Tue Feb 14 10:56:11 2012	(r24312)
@@ -5,7 +5,7 @@
 	}
 	
 	partial class URL {
-		void GetLocation() {
+		string GetLocation() {
 			return location;
 		}
 	}	

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt	Tue Feb 14 10:53:46 2012	(r24311)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt	Tue Feb 14 10:56:11 2012	(r24312)
@@ -74,7 +74,7 @@
   }
 ]] 1 error
 
-test Resolve type fails [[
+test Resolve type fails 1 [[
   namespace Tests {
     class B {
       Q q;
@@ -82,7 +82,7 @@
   }
 ]] 1 error
 
-test Resolve type fails [[
+test Resolve type fails 2 [[
   namespace NOTTests {
     class B {
       P p;
@@ -90,6 +90,59 @@
   }
 ]] 1 error
 
+test Unexpected return type 1 [[
+  namespace Tests {
+    class B {
+      A a;
+      
+      int getA() {
+        return a;
+      }
+    }
+  }
+]] 1 error
+
+test Unexpected return type 2 [[
+  namespace Tests {
+    class P {
+      string getA() {
+        return a;
+      }
+    }
+    class B {
+      A a;
+      
+      int getA() {
+        return a.p.getA();
+      }
+    }
+  }
+]] 1 error
+
+test Unexpected return types [[
+  namespace Tests {
+    class B {
+      A a;
+      
+      int getA() {
+        return a;
+        return a.p;
+        return a.p.a;
+      }
+    }
+  }
+]] 3 errors
+
+test No return in non-void method [[
+  namespace Tests {
+    class B {
+      int getA() {
+        
+      }
+    }
+  }
+]] 1 error
+
 test Use before def allowed [[
   namespace Tests {
     class B {
@@ -98,4 +151,4 @@
     
     partial class C {}
   }
-]]
+]]
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Tue Feb 14 10:53:46 2012	(r24311)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Tue Feb 14 10:56:11 2012	(r24312)
@@ -2,6 +2,7 @@
 
 imports
   include/CSharpPartialClassses
+  lib/index-library
   lib/analysis-library
   analysis-generated
   types
@@ -30,4 +31,14 @@
         m* := <index-lookup-children(|Method(), prefix, files)> e-type
       else
         m* := []
-      end
\ No newline at end of file
+      end
+      
+  // Add Type to the constructors to check for differences.
+  index-diff-constructors = ?Type(_, _)
+  
+  // Type definitions are equal if their URI is equal and if their values are equal.
+  index-diff-compare:
+    (Type(u1, v1), Type(u2, v2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2);
+       <eq> (v1, v2)
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str	Tue Feb 14 10:53:46 2012	(r24311)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str	Tue Feb 14 10:56:11 2012	(r24312)
@@ -7,6 +7,7 @@
   lib/index-library
   lib/analysis-library
   analysis-generated
+  types
 
 rules
 
@@ -36,8 +37,28 @@
     prim("SSL_EXT_origin_offset", <id>) => (<id>, _)*/
       
   constraint-error:
-    x{[Unresolved(t) | _]} ->
-    (x, $[Unable to resolve.])
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+  constraint-error:
+    Method(type, _, statement) -> errors
+    where
+      <collect-one(?Return(_))> statement; // At least one return statement can be found.
+    	methodType := <type-of> type;
+    	errors := <collect-all(constraint-error(|methodType), conc)> statement
+    	
+  constraint-error(|methodType):
+    e at Return(exp) -> (e, $[Expected [<print-type> methodType] but found [<print-type> type].])
+    where
+      type := <type-of> exp;
+      not(<eq> (methodType, type))
+    	
+  constraint-error:
+    Method(type, _, statement) -> (type, $[Method of type [<print-type> type1] does not return a value.])
+    where
+      type1 := <type-of> type;
+      not(<eq> (type1, TYPE("Void")));
+      not(<collect-one(?Return(_))> statement)
     
   constraint-warning = fail
-  constraint-note = fail
\ No newline at end of file
+  constraint-note = fail
+  
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Tue Feb 14 10:53:46 2012	(r24311)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Tue Feb 14 10:56:11 2012	(r24312)
@@ -7,9 +7,8 @@
 
 signature constructors
 
-  TYPE     		: STRING -> Type
-  Type       	: DefDataKind
-  ParamTypes 	: DefDataKind
+  TYPE        : STRING -> Type
+  Type        : Uri * Type -> TypeData
 
 rules // type projections
 
@@ -29,6 +28,9 @@
   	Type(x) -> TYPE(x)
   	
   type-of:
+    Return(e) -> <type-of> e	
+  
+  type-of:
   	StringType() -> TYPE("String")
   	
   type-of:
@@ -47,11 +49,25 @@
     MethodCall(e, m) -> <type-of> <index-lookup> m
 
   type-of:
-    Def(uri) -> <index-get-data(|Type())> Def(uri)
+    Def(uri) -> <index-get-value> Type(uri, ())
+    
+rules // utility
+  
+  print-type = 
+    switch ?input
+      case VoidType() : !"Void"
+      case IntType() : !"Int"
+      case StringType() : !"String"
+      case Type(?t) : <strip-annos> t
+      case TYPE(?t) : <strip-annos> t
+      case [?type|[]] : <print-type> type
+      case [?type|?types]; not (<?[]> types) : !$[[<print-type> type], [<print-type> types]] 
+      otherwise : ?name#(_); !$[[name]]
+    end 
 
 rules // store definition and parameter types
     
   adjust-index-def-data(store-results |namespace, path):
-    def -> <store-results> DefData([namespace | path], Type(), type)
+    def -> <store-results> Type([namespace | path], type)
     where
       type := <type-of> def

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/Activator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/Activator.java	Tue Feb 14 10:56:11 2012	(r24312)
@@ -0,0 +1,44 @@
+package entitywithaspects;
+
+import org.eclipse.imp.preferences.PreferencesService;
+import org.eclipse.imp.runtime.PluginBase;
+import org.osgi.framework.BundleContext;
+
+public class Activator extends PluginBase 
+{ 
+  public static final String kPluginID = "EntityWithAspects";
+
+  public static final String kLanguageName = "EntityWithAspects";
+
+  protected static Activator sPlugin;
+
+  public static Activator getInstance()
+  { 
+    if(sPlugin == null)
+      return new Activator();
+    return sPlugin;
+  }
+
+  public Activator () 
+  { 
+    super();
+    sPlugin = this;
+  }
+
+  @Override public void start(BundleContext context) throws Exception
+  { 
+    super.start(context);
+  }
+
+  @Override public String getID()
+  { 
+    return kPluginID;
+  }
+
+  @Override public String getLanguageID()
+  { 
+    return kLanguageName;
+  }
+
+  protected static PreferencesService preferencesService = null;
+}
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseController.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseController.java	Tue Feb 14 10:56:11 2012	(r24312)
@@ -0,0 +1,4 @@
+package entitywithaspects;
+
+public class EntityWithAspectsParseController extends EntityWithAspectsParseControllerGenerated 
+{ }
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseControllerGenerated.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsParseControllerGenerated.java	Tue Feb 14 10:56:11 2012	(r24312)
@@ -0,0 +1,108 @@
+package entitywithaspects;
+
+import java.io.InputStream;
+import java.io.IOException;
+import java.io.File;
+import java.io.FileInputStream;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.parser.IParseController;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DescriptorFactory;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+
+public class EntityWithAspectsParseControllerGenerated extends DynamicParseController 
+{ 
+  public static final String LANGUAGE = new String("EntityWithAspects");
+
+  private static final String TABLE = "/include/" + LANGUAGE + ".tbl";
+
+  private static final String DESCRIPTOR = "/include/" + LANGUAGE + ".packed.esv";
+
+  private static volatile Descriptor descriptor;
+
+  private static Throwable notLoadingCause;
+
+  public static synchronized Descriptor getDescriptor()
+  { 
+    if(notLoadingCause != null)
+      throw new RuntimeException(notLoadingCause);
+    if(descriptor == null)
+      createDescriptor();
+    return descriptor;
+  }
+
+  protected static synchronized void setDescriptor(Descriptor descriptor)
+  { 
+    EntityWithAspectsParseControllerGenerated.descriptor = descriptor;
+  }
+
+  protected static void createDescriptor()
+  { 
+    try
+    { 
+      InputStream descriptorStream = EntityWithAspectsParseControllerGenerated.class.getResourceAsStream(DESCRIPTOR);
+      InputStream table = EntityWithAspectsParseControllerGenerated.class.getResourceAsStream(TABLE);
+      boolean filesystem = false;
+      if(descriptorStream == null && new File("./" + DESCRIPTOR).exists())
+      { 
+        descriptorStream = new FileInputStream("./" + DESCRIPTOR);
+        filesystem = true;
+      }
+      if(table == null && new File("./" + TABLE).exists())
+      { 
+        table = new FileInputStream("./" + TABLE);
+        filesystem = true;
+      }
+      if(descriptorStream == null)
+        throw new BadDescriptorException("Could not load descriptor file from " + DESCRIPTOR + " (not found in plugin: " + getPluginLocation() + ")");
+      if(table == null)
+        throw new BadDescriptorException("Could not load parse table from " + TABLE + " (not found in plugin: " + getPluginLocation() + ")");
+      descriptor = DescriptorFactory.load(descriptorStream, table, filesystem ? Path.fromPortableString("./") : null);
+      descriptor.setAttachmentProvider(EntityWithAspectsParseControllerGenerated.class);
+    }
+    catch(BadDescriptorException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("Bad descriptor for " + LANGUAGE + " plugin", exc);
+    }
+    catch(IOException exc)
+    { 
+      notLoadingCause = exc;
+      Environment.logException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+      throw new RuntimeException("I/O problem loading descriptor for " + LANGUAGE + " plugin", exc);
+    }
+  }
+
+  private static String getPluginLocation()
+  { 
+    return EntityWithAspectsParseController.class.getProtectionDomain().getCodeSource().getLocation().getFile();
+  }
+
+  @Override public IParseController getWrapped()
+  { 
+    if(!isInitialized())
+    { 
+      if(notLoadingCause != null)
+        throw new RuntimeException(notLoadingCause);
+      try
+      { 
+        initialize(this, getDescriptor().getLanguage());
+      }
+      catch(BadDescriptorException exc)
+      { 
+        notLoadingCause = exc;
+        throw new RuntimeException(exc);
+      }
+    }
+    return super.getWrapped();
+  }
+
+  @Override protected void setNotLoadingCause(Throwable value)
+  { 
+    notLoadingCause = value;
+    super.setNotLoadingCause(value);
+  }
+}
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsValidator.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/EntityWithAspectsValidator.java	Tue Feb 14 10:56:11 2012	(r24312)
@@ -0,0 +1,12 @@
+package entitywithaspects;
+
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.services.MetaFileLanguageValidator;
+
+public class EntityWithAspectsValidator extends MetaFileLanguageValidator 
+{ 
+  @Override public Descriptor getDescriptor()
+  { 
+    return EntityWithAspectsParseController.getDescriptor();
+  }
+}
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/InteropRegisterer.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/InteropRegisterer.java	Tue Feb 14 10:56:11 2012	(r24312)
@@ -0,0 +1,14 @@
+package entitywithaspects.strategies;
+
+import org.strategoxt.lang.JavaInteropRegisterer;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Helper class for {@link java_strategy_0_0}.
+ */
+public class InteropRegisterer extends JavaInteropRegisterer {
+
+  public InteropRegisterer() {
+    super(new Strategy[] { java_strategy_0_0.instance });
+  }
+}

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/Main.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/Main.java	Tue Feb 14 10:56:11 2012	(r24312)
@@ -0,0 +1,11 @@
+package entitywithaspects.strategies;
+
+import org.strategoxt.lang.Context;
+
+public class Main {
+  
+  public static void init(Context context) {
+    // Called when the editor is being initialized
+  }
+
+}

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/java_strategy_0_0.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/java/entitywithaspects/strategies/java_strategy_0_0.java	Tue Feb 14 10:56:11 2012	(r24312)
@@ -0,0 +1,32 @@
+package entitywithaspects.strategies;
+
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Example Java strategy implementation.
+ *
+ * This strategy can be used by editor services and can be called
+ * in Stratego modules by declaring it as an external strategy
+ * as follows:
+ *
+ * <code>
+ *  external java-strategy(|)
+ * </code>
+ *
+ * @see InteropRegisterer  This class registers java_strategy_0_0 for use.
+ */
+public class java_strategy_0_0 extends Strategy {
+  
+  public static java_strategy_0_0 instance = new java_strategy_0_0();
+
+  @Override
+  public IStrategoTerm invoke(Context context, IStrategoTerm current) {
+    context.getIOAgent().printError("Input for java-strategy: " + current);
+    ITermFactory factory = context.getFactory();
+    return factory.makeString("Regards from java-strategy");
+  }
+
+}

From gabrielkonat at gmail.com  Tue Feb 14 12:02:05 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 14 Feb 2012 11:02:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24313 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/test
Message-ID: <20120214110205.68C297F80BB@mx1.tudelft.nl>

Author: gkonat
Date: Tue Feb 14 11:02:05 2012
New Revision: 24313
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24313&sc=1

Log:
Added some type checking tests for entity-with-aspects experiment.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt	Tue Feb 14 10:56:11 2012	(r24312)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt	Tue Feb 14 11:02:05 2012	(r24313)
@@ -58,6 +58,51 @@
   entity C {}
 ]]
 
+test Unexpected vardef type [[
+  entity B {
+    a : A
+    f() {
+      var v : Int = a.x
+    }
+  }
+]] 1 error
+
+test Unexpected vardef types [[
+  entity B {
+    a : A
+    f() {
+      var v1 : Int = a.x
+      var v2 : String = a.x
+      var v3 : B = a
+    }
+  }
+]] 3 errors
+
+test Unexpected assignment type [[
+  entity B {
+    a : A
+    s : String
+    
+    f() {
+      a = s
+    }
+  }
+]] 1 error
+
+test Unexpected assignment types [[
+  entity B {
+    a : A
+    s : String
+    i : Int
+    
+    f() {
+      a = a.x
+      a = s
+      a = i
+    }
+  }
+]] 3 errors
+
 test Shadowing of property allowed [[
   entity B {
     a : A

From L.C.L.Kats at tudelft.nl  Tue Feb 14 12:02:22 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Feb 2012 11:02:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24314 -
	spoofax-contrib/calculang/branches/Calculang5Tested/tests
Message-ID: <20120214110222.A3F0B2B8003@mx2.tudelft.nl>

Author: LennartKats
Date: Tue Feb 14 11:02:22 2012
New Revision: 24314
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24314&sc=1

Log:
test suite tuning for demonstration purposes

Added:
   spoofax-contrib/calculang/branches/Calculang5Tested/tests/3-variables.spt
      - copied, changed from r23515, spoofax-contrib/calculang/branches/Calculang5Tested/tests/3-variables-basic.spt
   spoofax-contrib/calculang/branches/Calculang5Tested/tests/4-editor.spt
      - copied, changed from r23515, spoofax-contrib/calculang/branches/Calculang5Tested/tests/4-variables-advanced.spt
Deleted:
   spoofax-contrib/calculang/branches/Calculang5Tested/tests/3-variables-basic.spt
   spoofax-contrib/calculang/branches/Calculang5Tested/tests/4-variables-advanced.spt
Modified:
   spoofax-contrib/calculang/branches/Calculang5Tested/tests/2-eval.spt
   spoofax-contrib/calculang/branches/Calculang5Tested/tests/5-compilation.spt
   spoofax-contrib/calculang/branches/Calculang5Tested/tests/x-shell.spt
   spoofax-contrib/calculang/branches/Calculang5Tested/tests/y-self-application.spt

Modified: spoofax-contrib/calculang/branches/Calculang5Tested/tests/2-eval.spt
==============================================================================
--- spoofax-contrib/calculang/branches/Calculang5Tested/tests/2-eval.spt	Tue Feb 14 11:02:05 2012	(r24313)
+++ spoofax-contrib/calculang/branches/Calculang5Tested/tests/2-eval.spt	Tue Feb 14 11:02:22 2012	(r24314)
@@ -8,7 +8,7 @@
 
 test Add [[
   1 + 1
-]] run calc to "2"
+]] run calc to "25"
 
 test Multiply [[
   2 * 2
@@ -20,4 +20,4 @@
 
 test Factorial [[
 	5! 
-]] run calc to "120"
\ No newline at end of file
+]] run calc to "120"

Copied and modified: spoofax-contrib/calculang/branches/Calculang5Tested/tests/3-variables.spt (from r23515, spoofax-contrib/calculang/branches/Calculang5Tested/tests/3-variables-basic.spt)
==============================================================================
--- spoofax-contrib/calculang/branches/Calculang5Tested/tests/3-variables-basic.spt	Sun Oct 23 21:25:44 2011	(r23515, copy source)
+++ spoofax-contrib/calculang/branches/Calculang5Tested/tests/3-variables.spt	Tue Feb 14 11:02:22 2012	(r24314)
@@ -6,18 +6,19 @@
   x
 ]] parse
 
+test Variable [[
+  x = 2
+  x
+]]
+
 test Assignment [[
   x = 4
 ]] parse
 
 test Multiple statements [[
-	x
-	x
-]] parse to Statements([Var("x"), Var("x")])
-
-test Eval constant [[
-  PI
-]] run calc to "3.14"
+	x = 1 
+	x = 2
+]] parse to Statements([Assign(_, _), Assign(_, _)])
 
 test Eval variable [[
   x = 4

Copied and modified: spoofax-contrib/calculang/branches/Calculang5Tested/tests/4-editor.spt (from r23515, spoofax-contrib/calculang/branches/Calculang5Tested/tests/4-variables-advanced.spt)
==============================================================================
--- spoofax-contrib/calculang/branches/Calculang5Tested/tests/4-variables-advanced.spt	Sun Oct 23 21:25:44 2011	(r23515, copy source)
+++ spoofax-contrib/calculang/branches/Calculang5Tested/tests/4-editor.spt	Tue Feb 14 11:02:22 2012	(r24314)
@@ -1,21 +1,18 @@
 module variables-basic
 
-language Calculang
+language calculang
 
 test Variable unassigned [[
-  y
-]] 1 error /unassigned/
+  var
+]] 1 error
+
+//1 error /unassigned/
 
 test Multiply assigned variable [[
   y = 1
   y = 2
   y
-]] /multiply assigned/
-
-test Eval variable [[
-  x = 4
-  x
-]] run calc to "4"
+]]  /multiply assigned/
 
 test Reference resolving (1) [[
   x = 4
@@ -29,5 +26,5 @@
 
 test Content completion [[
   avariable = 1
-  [[a]]
+  [[av]]
 ]] complete to "avariable"

Modified: spoofax-contrib/calculang/branches/Calculang5Tested/tests/5-compilation.spt
==============================================================================
--- spoofax-contrib/calculang/branches/Calculang5Tested/tests/5-compilation.spt	Tue Feb 14 11:02:05 2012	(r24313)
+++ spoofax-contrib/calculang/branches/Calculang5Tested/tests/5-compilation.spt	Tue Feb 14 11:02:22 2012	(r24314)
@@ -7,6 +7,12 @@
 ]] build generate-java 
 
 test Constant [[
-  1 + 2
-]] build generate-java 
+  42
+]] build generate-java to "
+      public class Output {
+        public static void main(String[] args) {
+          System.out.println(42);
+          System.exit(0);
+        }
+      }"
 

Modified: spoofax-contrib/calculang/branches/Calculang5Tested/tests/x-shell.spt
==============================================================================
--- spoofax-contrib/calculang/branches/Calculang5Tested/tests/x-shell.spt	Tue Feb 14 11:02:05 2012	(r24313)
+++ spoofax-contrib/calculang/branches/Calculang5Tested/tests/x-shell.spt	Tue Feb 14 11:02:22 2012	(r24314)
@@ -3,10 +3,10 @@
 language Calculang
 
 test Arithmetic API
-  <mul> (1, 3) => 6
+  <mul> (2, 3) => 6
 
 test String-based arithmetic API
-  <mulS> ("1", "3") => "6"
+  <mulS> ("2", "3") => "6"
 
 test Foo 
   let

Modified: spoofax-contrib/calculang/branches/Calculang5Tested/tests/y-self-application.spt
==============================================================================
--- spoofax-contrib/calculang/branches/Calculang5Tested/tests/y-self-application.spt	Tue Feb 14 11:02:05 2012	(r24313)
+++ spoofax-contrib/calculang/branches/Calculang5Tested/tests/y-self-application.spt	Tue Feb 14 11:02:22 2012	(r24314)
@@ -2,32 +2,21 @@
 
 language Spoofax-Testing
 
-test A test of a test [[[
-  
+setup Common headers [[[
   module testset
-  
   language Calculang
-  
-  test Add [[
-    1 + 2
-  ]] parse succeeds
-  
-  test Multiply [[
-    1 * 2
-  ]] run calc to "2"
-  
 ]]]
 
 test A test of a test [[[
   
-  module testset
-  
-  language Calculang
-  
   test Add [[
     1 + 2
   ]] parse succeeds
   
+]]]
+
+test A test of a test is a test [[[
+  
   test Multiply [[
     1 * 2
   ]] run calc to "2"

From L.C.L.Kats at tudelft.nl  Tue Feb 14 12:41:18 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Feb 2012 11:41:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24315 -
	spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.feature
Message-ID: <20120214114118.C3BE92B8024@mx2.tudelft.nl>

Author: LennartKats
Date: Tue Feb 14 11:41:18 2012
New Revision: 24315
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24315&sc=1

Log:
bump to 1.0.2

Modified:
   spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.feature/feature.xml

Modified: spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.feature/feature.xml	Tue Feb 14 11:02:22 2012	(r24314)
+++ spoofax-imp/branches/spoofax-imp-release/org.strategoxt.imp.feature/feature.xml	Tue Feb 14 11:41:18 2012	(r24315)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="1.0.1.0"
+      version="1.0.2.0"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

From L.C.L.Kats at tudelft.nl  Tue Feb 14 15:37:43 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Feb 2012 14:37:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24316 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
Message-ID: <20120214143743.20DE2108C05D@mx3.tudelft.nl>

Author: LennartKats
Date: Tue Feb 14 14:37:42 2012
New Revision: 24316
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24316&sc=1

Log:
do some STRJ precaching on initialization

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Tue Feb 14 11:41:18 2012	(r24315)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Tue Feb 14 14:37:42 2012	(r24316)
@@ -5,7 +5,6 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.PrintStream;
-import java.lang.management.ManagementFactory;
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
@@ -26,7 +25,6 @@
 import org.spoofax.interpreter.core.StackTracer;
 import org.spoofax.interpreter.library.IOAgent;
 import org.spoofax.interpreter.library.jsglr.JSGLRLibrary;
-import org.spoofax.interpreter.library.language.NotificationCenter;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
 import org.spoofax.jsglr.client.InvalidParseTableException;
@@ -50,8 +48,6 @@
 import org.strategoxt.imp.runtime.stratego.IMPLibrary;
 import org.strategoxt.imp.runtime.stratego.IMPOpenFile;
 import org.strategoxt.imp.runtime.stratego.IMPParseStringPTPrimitive;
-import org.strategoxt.imp.runtime.stratego.FileNotificationServer;
-import org.strategoxt.imp.runtime.stratego.QueueAnalysisService;
 
 /**
  * Environment class that maintains a term factories, languages, and

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java	Tue Feb 14 11:41:18 2012	(r24315)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java	Tue Feb 14 14:37:42 2012	(r24316)
@@ -7,9 +7,16 @@
 import java.net.URL;
 
 import org.eclipse.core.runtime.FileLocator;
+import org.eclipse.core.runtime.IProgressMonitor;
+import org.eclipse.core.runtime.IStatus;
 import org.eclipse.core.runtime.Path;
+import org.eclipse.core.runtime.Status;
+import org.eclipse.core.runtime.jobs.Job;
 import org.eclipse.ui.plugin.AbstractUIPlugin;
+import org.strategoxt.imp.generator.sdf2imp;
 import org.strategoxt.imp.runtime.stratego.FileNotificationServer;
+import org.strategoxt.lang.StrategoExit;
+import org.strategoxt.strj.strj;
 
 public class RuntimeActivator extends AbstractUIPlugin {
 	
@@ -22,9 +29,39 @@
 
 		FileNotificationServer.init();
 		checkJVMOptions();
-		
-		// Trigger static initialization in this safe context
-		Environment.getStrategoLock(); 
+		precacheStratego();
+	}
+
+	/**
+	 * Make sure strj and sdf2imp run at least once
+	 * to speed up first project build or project wizard.
+	 */
+	private void precacheStratego() {
+		Job job = new Job("Spoofax/Stratego initialization") {
+			@Override
+			protected IStatus run(IProgressMonitor monitor) {
+				try {
+					Debug.startTimer();
+					Environment.getStrategoLock().lock();
+					try {
+						strj.mainNoExit("--version");
+					} catch (StrategoExit e) {
+						// Success!
+					}
+					try {
+						sdf2imp.mainNoExit("--version");
+					} catch (StrategoExit e) {
+						// Success!
+					}
+					Debug.stopTimer("Pre-initialized Stratego compiler");
+				} finally {
+					Environment.getStrategoLock().unlock();
+				}
+				return Status.OK_STATUS;
+			}
+		};
+		job.setSystem(true);
+		job.schedule();
 	}
 
 	private static void checkJVMOptions() {

From L.C.L.Kats at tudelft.nl  Tue Feb 14 17:56:04 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Feb 2012 16:56:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24317 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
Message-ID: <20120214165604.43ECACC26D@mx4.tudelft.nl>

Author: LennartKats
Date: Tue Feb 14 16:56:04 2012
New Revision: 24317
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24317&sc=1

Log:
some more work on FileState; might be usable now

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/FileState.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java	Tue Feb 14 14:37:42 2012	(r24316)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/EditorState.java	Tue Feb 14 16:56:04 2012	(r24317)
@@ -1,26 +1,19 @@
 package org.strategoxt.imp.runtime;
 
-import org.eclipse.core.resources.IFile;
-import org.eclipse.core.resources.IResource;
 import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.imp.language.Language;
-import org.eclipse.imp.model.ISourceProject;
 import org.eclipse.imp.parser.IParseController;
 import org.eclipse.jface.text.IDocument;
 import org.eclipse.jface.text.Region;
 import org.eclipse.swt.graphics.Point;
-import org.eclipse.swt.widgets.Display;
 import org.eclipse.ui.IEditorPart;
 import org.eclipse.ui.IEditorReference;
 import org.eclipse.ui.IWorkbenchPage;
 import org.eclipse.ui.IWorkbenchPart;
 import org.eclipse.ui.IWorkbenchWindow;
-import org.eclipse.ui.PartInitException;
 import org.eclipse.ui.PlatformUI;
-import org.eclipse.ui.ide.IDE;
 import org.eclipse.ui.texteditor.AbstractTextEditor;
 import org.eclipse.ui.texteditor.IDocumentProvider;
-import org.eclipse.ui.texteditor.ITextEditor;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.jsglr.client.imploder.IToken;
 import org.spoofax.jsglr.client.imploder.ITokenizer;
@@ -41,6 +34,7 @@
 	private final UniversalEditor editor;
 	
 	public EditorState(UniversalEditor editor) {
+		super(getDescriptor(editor));
 		this.editor = editor;
 	}
 	
@@ -116,16 +110,6 @@
 	}
 	
 	// ACCESSORS
-	
-	public static boolean isUIThread() {
-		// return Display.getCurrent() != null; // may exist in multiple threads
-		try {
-			return PlatformUI.getWorkbench().getActiveWorkbenchWindow() != null;
-		} catch (IllegalStateException e) {
-			// Eclipse not running
-			return false;
-		}
-	}
 
 	public UniversalEditor getEditor() {
 		return editor;
@@ -133,31 +117,17 @@
 	
 	@Override
 	public SGLRParseController getParseController() {
-		DynamicParseController wrapper = (DynamicParseController) getEditor().getParseController();
+		DynamicParseController wrapper = (DynamicParseController) editor.getParseController();
 		return (SGLRParseController) wrapper.getWrapped();
 	}
 	
+	@Override
 	public Language getLanguage() {
 		return getEditor().fLanguage;
 	}
 	
-	public final Descriptor getDescriptor() {
-		return Environment.getDescriptor(getLanguage());
-	}
-
-	public final IResource getResource() {
-    	return getParseController().getResource();
-	}
-	
-	public final ISourceProject getProject() {
-		return getParseController().getProject();
-	}
-	
-	/**
-	 * @see SGLRParseController#getCurrentAst
-	 */
-	public final IStrategoTerm getCurrentAst() {
-		return getParseController().getCurrentAst();
+	private static Descriptor getDescriptor(UniversalEditor editor) {
+		return Environment.getDescriptor(editor.fLanguage);
 	}
 	
 	public void scheduleParserUpdate(long delay) {
@@ -225,67 +195,4 @@
 			|| editor.getSite() == null
 			|| (editor instanceof AbstractTextEditor && ((AbstractTextEditor) editor).getDocumentProvider() == null));
 	}
-
-	/**
-	 * Asynchronously opens or activates an editor.
-	 * 
-	 * Exceptions are swallowed and logged.
-	 */
-	public static void asyncOpenEditor(Display display, final IFile file, final boolean activate) {
-		display.asyncExec(new Runnable() {
-			public void run() {
-				openEditor(file, activate);
-			}
-		});
-	}
-
-	/**
-	 * Asynchronously opens or activates an editor and jump to specified offset.
-	 * 
-	 * Exceptions are swallowed and logged.
-	 */
-	public static void asyncOpenEditor(Display display, final IFile file, final int offset, final boolean activate) {
-		display.asyncExec(new Runnable() {
-			public void run() {
-				openEditor(file, offset, activate);
-			}
-		});
-	}
-
-	/**
-	 * Opens a new editor. Must be invoked from the UI thread.
-	 * 
-	 * PartInitExceptions are swallowed and logged.
-	 */
-	public static void openEditor(final IFile file, final boolean activate) {
-		if (!isUIThread())
-			throw new IllegalStateException("Must be called from UI thread");
-		
-		IWorkbenchPage page =
-			PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
-		try {
-			IDE.openEditor(page, file, UniversalEditor.EDITOR_ID, activate);
-		} catch (PartInitException e) {
-			Environment.logException("Cannot open an editor for " + file, e);
-		}
-	}
-	
-	/**
-	 * Opens a new editor and jump to offset. Must be invoked from the UI thread.
-	 * 
-	 * PartInitExceptions are swallowed and logged.
-	 */
-	public static void openEditor(final IFile file, final int offset, final boolean activate) {
-		if (!isUIThread())
-			throw new IllegalStateException("Must be called from UI thread");
-		
-		IWorkbenchPage page =
-			PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
-		try {
-			ITextEditor ite = (ITextEditor) IDE.openEditor(page, file, UniversalEditor.EDITOR_ID, activate);
-			ite.selectAndReveal(offset, 0);
-		} catch (PartInitException e) {
-			Environment.logException("Cannot open an editor for " + file, e);
-		}
-	}
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/FileState.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/FileState.java	Tue Feb 14 14:37:42 2012	(r24316)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/FileState.java	Tue Feb 14 16:56:04 2012	(r24317)
@@ -1,13 +1,33 @@
 package org.strategoxt.imp.runtime;
 
+import java.io.FileNotFoundException;
+
+import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IResource;
 import org.eclipse.core.runtime.IPath;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.imp.editor.UniversalEditor;
 import org.eclipse.imp.language.Language;
 import org.eclipse.imp.language.LanguageRegistry;
+import org.eclipse.imp.model.ISourceProject;
+import org.eclipse.imp.model.ModelFactory;
+import org.eclipse.imp.model.ModelFactory.ModelException;
+import org.eclipse.imp.parser.IParseController;
 import org.eclipse.jface.text.IDocument;
-import org.spoofax.NotImplementedException;
+import org.eclipse.swt.widgets.Display;
+import org.eclipse.ui.IWorkbenchPage;
+import org.eclipse.ui.PartInitException;
+import org.eclipse.ui.PlatformUI;
+import org.eclipse.ui.ide.IDE;
+import org.eclipse.ui.texteditor.ITextEditor;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
+import org.strategoxt.imp.runtime.services.StrategoObserver;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
 
 
 /**
@@ -19,27 +39,158 @@
 public class FileState {
 	
 	private final Descriptor descriptor;
+
+	private final SGLRParseController controller;
 	
 	private final IResource resource;
 	
-	protected FileState(Descriptor descriptor, IResource resource) {
+	protected FileState(Descriptor descriptor, SGLRParseController controller, IResource resource) {
 		this.descriptor = descriptor;
+		this.controller = controller;
 		this.resource = resource;
 	}
 	
-	protected FileState() {
-		this(null, null); // TODO: remove me
+	protected FileState(Descriptor descriptor) {
+		this(descriptor, null, null); // HACK: subclass don't use these
 	}
 	
-	
-	public static FileState getFile(IPath path, IDocument document) {
+	/**
+	 * @param path      The path for the file (see {@link Path}).
+	 * @param document  The document for this file, or null.
+	 */
+	public static FileState getFile(IPath path, IDocument document)
+			throws FileNotFoundException, BadDescriptorException, ModelException {
+		
 		Language language = LanguageRegistry.findLanguage(path, document);
 		Descriptor descriptor = Environment.getDescriptor(language);
+		IResource resource = EditorIOAgent.getResource(path.toFile());
 		if (descriptor == null) return null;
-		throw new NotImplementedException();
+		return new FileState(descriptor, getParseController(descriptor, resource), resource);
+	}
+	
+	private static SGLRParseController getParseController(Descriptor descriptor, IResource resource) 
+			throws BadDescriptorException, ModelException {
+		
+		IParseController controller = descriptor.createParseController();
+		if (controller instanceof DynamicParseController)
+			controller = ((DynamicParseController) controller).getWrapped();
+		if (controller instanceof SGLRParseController) {
+			ISourceProject project = ModelFactory.open(resource.getProject());
+			controller.initialize(resource.getProjectRelativePath(), project, null);
+			return (SGLRParseController) controller;
+		} else {
+			throw new BadDescriptorException("SGLRParseController expected: " + controller.getClass().getName());
+		}
+	}
+	
+	public IStrategoTerm getAnalyzedAst() throws BadDescriptorException {
+		StrategoObserver observer = getDescriptor().createService(StrategoObserver.class, getParseController());
+		observer.getLock().lock();
+		try {
+			observer.update(getParseController(), new NullProgressMonitor());
+			return observer.getResultingAst(getResource());
+		} finally {
+			observer.getLock().unlock();
+		}
+	}
+	
+	public Descriptor getDescriptor() {
+		return descriptor;
+	}
+	
+	public Language getLanguage() throws BadDescriptorException {
+		return getDescriptor().getLanguage();
 	}
 	
 	public SGLRParseController getParseController() {
-		throw new NotImplementedException();
+		return controller;
+	}
+	
+	public IResource getResource() {
+		return resource;
+	}
+	
+	public final ISourceProject getProject() {
+		return getParseController().getProject();
+	}
+	
+	/**
+	 * @see SGLRParseController#getCurrentAst
+	 */
+	public final IStrategoTerm getCurrentAst() {
+		return getParseController().getCurrentAst();
+	}
+
+	/**
+	 * Asynchronously opens or activates an editor and jump to specified offset.
+	 * 
+	 * Exceptions are swallowed and logged.
+	 */
+	public static void asyncOpenEditor(Display display, final IFile file, final int offset, final boolean activate) {
+		display.asyncExec(new Runnable() {
+			public void run() {
+				openEditor(file, offset, activate);
+			}
+		});
+	}
+
+	/**
+	 * Opens a new editor. Must be invoked from the UI thread.
+	 * 
+	 * PartInitExceptions are swallowed and logged.
+	 */
+	public static void openEditor(final IFile file, final boolean activate) {
+		if (!isUIThread())
+			throw new IllegalStateException("Must be called from UI thread");
+		
+		IWorkbenchPage page =
+			PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
+		try {
+			IDE.openEditor(page, file, UniversalEditor.EDITOR_ID, activate);
+		} catch (PartInitException e) {
+			Environment.logException("Cannot open an editor for " + file, e);
+		}
+	}
+
+	/**
+	 * Asynchronously opens or activates an editor.
+	 * 
+	 * Exceptions are swallowed and logged.
+	 */
+	public static void asyncOpenEditor(Display display, final IFile file, final boolean activate) {
+		display.asyncExec(new Runnable() {
+			public void run() {
+				openEditor(file, activate);
+			}
+		});
+	}
+	
+	/**
+	 * Opens a new editor and jump to offset. Must be invoked from the UI thread.
+	 * 
+	 * PartInitExceptions are swallowed and logged.
+	 */
+	public static void openEditor(final IFile file, final int offset, final boolean activate) {
+		if (!isUIThread())
+			throw new IllegalStateException("Must be called from UI thread");
+		
+		IWorkbenchPage page =
+			PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
+		try {
+			ITextEditor ite = (ITextEditor) IDE.openEditor(page, file, UniversalEditor.EDITOR_ID, activate);
+			ite.selectAndReveal(offset, 0);
+		} catch (PartInitException e) {
+			Environment.logException("Cannot open an editor for " + file, e);
+		}
+	}
+	
+	public static boolean isUIThread() {
+		// return Display.getCurrent() != null; // may exist in multiple threads
+		try {
+			return PlatformUI.getWorkbench().getActiveWorkbenchWindow() != null;
+		} catch (IllegalStateException e) {
+			// Eclipse not running
+			return false;
+		}
 	}
 }

From L.C.L.Kats at tudelft.nl  Tue Feb 14 17:58:46 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Feb 2012 16:58:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24318 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	dynamicloading parser/ast
Message-ID: <20120214165846.598757F80BF@mx1.tudelft.nl>

Author: LennartKats
Date: Tue Feb 14 16:58:46 2012
New Revision: 24318
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24318&sc=1

Log:
cleanup

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	Tue Feb 14 16:56:04 2012	(r24317)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/Descriptor.java	Tue Feb 14 16:58:46 2012	(r24318)
@@ -481,7 +481,7 @@
 		try {
 			attachedFiles.add(new File(getParseTableName()));
 			attachedFiles.add(new File(getPPTableName()));
-		} catch (Exception e) {
+		} catch (BadDescriptorException e) {
 			// Ignore missing language name here
 		}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java	Tue Feb 14 16:56:04 2012	(r24317)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/ast/AstNodeLocator.java	Tue Feb 14 16:58:46 2012	(r24318)
@@ -17,7 +17,6 @@
 import org.spoofax.jsglr.client.imploder.ImploderAttachment;
 import org.spoofax.jsglr.client.imploder.Tokenizer;
 import org.strategoxt.imp.runtime.Environment;
-import org.strategoxt.imp.runtime.parser.SGLRParseController;
 
 /**
  * Ast locator: mapping source positions to AST nodes,
@@ -28,17 +27,15 @@
  */
 public class AstNodeLocator implements ISourcePositionLocator {
 	
-	//private final SGLRParseController controller;
-	
-	public AstNodeLocator(SGLRParseController controller) {
-		//this.controller = controller;
+	public AstNodeLocator() {
+		// Default constructor
 	}
 
 	/**
 	 * @param endOffset  The end offset (inclusive).
 	 */
-	public ISimpleTerm findNode(Object root, int startOffset, int endOffset) {
-		ISimpleTerm ast = impObjectToAstNode(root);
+	public IStrategoTerm findNode(Object root, int startOffset, int endOffset) {
+		IStrategoTerm ast = impObjectToAstNode(root);
 		
 		if (getLeftToken(ast).getStartOffset() <= startOffset
 				&& (endOffset <= getRightToken(ast).getEndOffset()
@@ -46,7 +43,7 @@
 			Iterator<ISimpleTerm> iterator = tryGetListIterator(ast); 
 			for (int i = 0, max = ast.getSubtermCount(); i < max; i++) {
 				ISimpleTerm child = iterator == null ? ast.getSubterm(i) : iterator.next();
-		        ISimpleTerm candidate = findNode(child, startOffset, endOffset);
+				IStrategoTerm candidate = findNode(child, startOffset, endOffset);
 		        if (candidate != null) {
 		        	assert ImploderAttachment.get(candidate) != null;
 		            return candidate;

From L.C.L.Kats at tudelft.nl  Tue Feb 14 17:59:30 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Feb 2012 16:59:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24319 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser
Message-ID: <20120214165929.F386FCC28A@mx4.tudelft.nl>

Author: LennartKats
Date: Tue Feb 14 16:59:28 2012
New Revision: 24319
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24319&sc=1

Log:
simplified AstNodeLocator constructor

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Tue Feb 14 16:58:46 2012	(r24318)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/parser/SGLRParseController.java	Tue Feb 14 16:59:28 2012	(r24319)
@@ -462,7 +462,7 @@
 	}
 	
 	public AstNodeLocator getSourcePositionLocator() {
-		return new AstNodeLocator(this);
+		return new AstNodeLocator();
 	}
 	
 	public ILanguageSyntaxProperties getSyntaxProperties() {

From L.C.L.Kats at tudelft.nl  Tue Feb 14 18:00:29 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Feb 2012 17:00:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24320 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20120214170029.E3E917F8031@mx1.tudelft.nl>

Author: LennartKats
Date: Tue Feb 14 17:00:29 2012
New Revision: 24320
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24320&sc=1

Log:
Spoofax/496: Tests fail after parsing

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Tue Feb 14 16:59:28 2012	(r24319)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Tue Feb 14 17:00:29 2012	(r24320)
@@ -25,6 +25,7 @@
 import org.strategoxt.imp.runtime.Environment;
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
 import org.strategoxt.imp.runtime.stratego.SourceAttachment;
@@ -59,7 +60,7 @@
 			Descriptor descriptor = Environment.getDescriptor(lang); 
 			
 			// Get parse controller
-			parseController = descriptor.createService(SGLRParseController.class, null);
+			parseController = asSGLRParseController(descriptor.createParseController());
 			observer = descriptor.createService(StrategoObserver.class, parseController);
 			
 			observer.getLock().lock();
@@ -97,6 +98,16 @@
 		
 	}
 
+	private SGLRParseController asSGLRParseController(IParseController controller) throws BadDescriptorException {
+		if (controller instanceof DynamicParseController)
+			controller = ((DynamicParseController) controller).getWrapped();
+		if (controller instanceof SGLRParseController) {
+			return (SGLRParseController) controller;
+		} else {
+			throw new BadDescriptorException("SGLRParseController expected: " + controller.getClass().getName());
+		}
+	}
+
 	private static IStrategoTerm makeFakeAST(SGLRParseController controller, File file) {
 		// HACK: make fake resource using internal API
 		//       we really need to stop using the stupid IResource interface where possible

From L.C.L.Kats at tudelft.nl  Tue Feb 14 18:00:47 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Feb 2012 17:00:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24321 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	services stratego
Message-ID: <20120214170047.77C812B801E@mx2.tudelft.nl>

Author: LennartKats
Date: Tue Feb 14 17:00:47 2012
New Revision: 24321
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24321&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceAttachment.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Tue Feb 14 17:00:29 2012	(r24320)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/InputTermBuilder.java	Tue Feb 14 17:00:47 2012	(r24321)
@@ -201,7 +201,7 @@
 		
 		ITermFactory factory = Environment.getTermFactory();
 		String path = resource.getProjectRelativePath().toPortableString();
-		String absolutePath = resource.getProject().getLocation().toOSString();
+		String absolutePath = resource.getProject().getLocation().toPortableString();
 		
 		if (includeSubNode) {
 			node = getImplodableNode(node);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	Tue Feb 14 17:00:29 2012	(r24320)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserver.java	Tue Feb 14 17:00:47 2012	(r24321)
@@ -140,6 +140,10 @@
 		this.isPrototypeAllowed = isPrototypeAllowed;
 	}
 	
+	public IStrategoTerm getResultingAst(IResource resource) {
+		return resultingAsts.get(resource);
+	}
+	
 	/**
 	 * Returns a value indicating whether or not an analysis has
 	 * been scheduled or completed at this point.

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceAttachment.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceAttachment.java	Tue Feb 14 17:00:29 2012	(r24320)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/SourceAttachment.java	Tue Feb 14 17:00:47 2012	(r24321)
@@ -74,8 +74,10 @@
 	}
 	
 	public static File getFile(ISimpleTerm term) {
-		IPath path = getResource(term).getLocation();
-		if (path == null) path = getResource(term).getFullPath();
+		IResource resource = getResource(term);
+		if (resource == null) return null;
+		IPath path = resource.getLocation();
+		if (path == null) path = resource.getFullPath();
 		return path.toFile();
 	}
 

From L.C.L.Kats at tudelft.nl  Tue Feb 14 19:03:26 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Tue, 14 Feb 2012 18:03:26 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24322 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime
Message-ID: <20120214180326.933097F80E6@mx1.tudelft.nl>

Author: LennartKats
Date: Tue Feb 14 18:03:26 2012
New Revision: 24322
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24322&sc=1

Log:
removed platform-specific launcher options

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	Tue Feb 14 17:00:47 2012	(r24321)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/Spoofax-IMP (with assertions).launch	Tue Feb 14 18:03:26 2012	(r24322)
@@ -22,7 +22,7 @@
 <stringAttribute key="org.eclipse.jdt.launching.JRE_CONTAINER" value="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6"/>
 <stringAttribute key="org.eclipse.jdt.launching.PROGRAM_ARGUMENTS" value="-os ${target.os} -ws ${target.ws} -arch ${target.arch} -nl ${target.nl}"/>
 <stringAttribute key="org.eclipse.jdt.launching.SOURCE_PATH_PROVIDER" value="org.eclipse.pde.ui.workbenchClasspathProvider"/>
-<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-server -Xmx1024m -Xms256m -XX:MaxPermSize=256M -Xverify:none -ea:org.strategoxt.imp.runtime.Debug -ea:org.strategoxt... -ea:org.spoofax... -ea:org.sugarj... -Xss16m -Xdock:icon=../Resources/Eclipse.icns -XstartOnFirstThread -Dorg.eclipse.swt.internal.carbon.smallFonts"/>
+<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-server -Xmx1024m -Xms256m -XX:MaxPermSize=256M -Xverify:none -ea:org.strategoxt.imp.runtime.Debug -ea:org.strategoxt... -ea:org.spoofax... -ea:org.sugarj... -Xss16m"/>
 <stringAttribute key="pde.version" value="3.3"/>
 <stringAttribute key="product" value="org.eclipse.sdk.ide"/>
 <booleanAttribute key="restart" value="false"/>

From m.dejonge at tudelft.nl  Wed Feb 15 09:19:55 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 15 Feb 2012 08:19:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24323 -
	sglr-recovery/trunk/EditScenarios
Message-ID: <20120215081955.EC77DCC200@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Wed Feb 15 08:19:55 2012
New Revision: 24323
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24323&sc=1

Log:
Share project "EditScenarios" into "https://svn.strategoxt.org/repos/StrategoXT/sglr-recovery/trunk"

Added:
   sglr-recovery/trunk/EditScenarios/

From m.dejonge at tudelft.nl  Wed Feb 15 09:21:41 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Wed, 15 Feb 2012 08:21:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24324 - in
	sglr-recovery/trunk/EditScenarios: edit-data-analysis
	error-gen quality-measuring
Message-ID: <20120215082141.95439CC1F8@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Wed Feb 15 08:21:41 2012
New Revision: 24324
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24324&sc=1

Log:
- data analysis
- error-gen
- oracle measurement technique for collected edit scenarios

Added:
   sglr-recovery/trunk/EditScenarios/edit-data-analysis/
   sglr-recovery/trunk/EditScenarios/error-gen/
   sglr-recovery/trunk/EditScenarios/quality-measuring/

From gabrielkonat at gmail.com  Wed Feb 15 10:29:19 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 15 Feb 2012 09:29:19 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24325 - in
	spoofax-contrib/separate-compilation-examples/c-without-macros:
	syntax test trans
Message-ID: <20120215092919.2589B7F8102@mx1.tudelft.nl>

Author: gkonat
Date: Wed Feb 15 09:29:18 2012
New Revision: 24325
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24325&sc=1

Log:
Working on better type system for c-without-macros experiment.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp	Wed Feb 15 08:21:41 2012	(r24324)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp	Wed Feb 15 09:29:18 2012	(r24325)
@@ -16,10 +16,14 @@
    Assign                  -- _1 KW["="] _2 KW[";"],
    Return                  -- KW["return"] _1 KW[";"],
    StrLit                  -- _1,
+   IntLit                  -- _1,
    Call                    -- _1 KW["("] _2 KW[")"],
    Call.2:iter-star-sep    -- _1 KW[","],
    SizeOf                  -- KW["sizeof"] KW["("] _1 KW[")"],
-   Deref                   -- _1 KW["."] _2,
+   Access                  -- _1 KW["."] _2,
+   DerefAccess             -- _1 KW["->"] _2,
+   Deref                   -- KW["*"] _1,
+   Ref                     -- KW["&"] _1,
    VarRef                  -- _1,
    Type                    -- _1,
    Char                    -- KW["char"],

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf	Wed Feb 15 08:21:41 2012	(r24324)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf	Wed Feb 15 09:29:18 2012	(r24325)
@@ -23,9 +23,13 @@
     Expr "=" Expr ";"                          -> Stmt       {cons("Assign")}
     "return" Expr ";"                          -> Stmt       {cons("Return"), prefer}
     STRING                                     -> Expr       {cons("StrLit")}
+    INT                                        -> Expr       {cons("IntLit")}
     ID "(" {Expr ","}* ")"                     -> Expr       {cons("Call"), avoid}
     "sizeof" "(" Type ")"                      -> Expr       {cons("SizeOf")}
-    Expr "." ID                                -> Expr       {cons("Deref")}
+    Expr "." ID                                -> Expr       {cons("Access")}
+    Expr "->" ID                               -> Expr       {cons("DerefAccess")}
+    "*" Expr                                   -> Expr       {cons("Deref")}
+    "&" Expr                                   -> Expr       {cons("Ref")}
     ID                                         -> Expr       {cons("VarRef")}
     ID                                         -> Type       {cons("Type"), avoid}
     "char"                                     -> Type       {cons("Char"), prefer}

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx	Wed Feb 15 08:21:41 2012	(r24324)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx	Wed Feb 15 09:29:18 2012	(r24325)
@@ -4,34 +4,38 @@
 
 context-free syntax
     
-    Definition*                                 -> Start {"Start", scope(Function, Struct, Type)}
+  Definition*                                 -> Start {"Start", scope(Function, Struct, Type)}
 
-    Type Function@=ID "(" {Param "," }* ")" "{" Stmt* "}" -> Definition {"FunDecl", scope(Var)}
+  Type Function@=ID "(" {Param "," }* ")" "{" Stmt* "}" -> Definition {"FunDecl", scope(Var)}
 
-    Type Var@=ID                                -> Param {"Param"}
+  Type Var@=ID                                -> Param {"Param"}
 
-    TypeDecl ";"                                -> Definition {"TypeDecl"}
+  TypeDecl ";"                                -> Definition {"TypeDecl"}
 
-    "typedef" Type Type@=ID                     -> TypeDecl {"TypeDef"}
-    "typedef" TypeDecl Type@=ID                 -> TypeDecl {"TypeDef"} 
-    "struct" Struct@=ID "{" Field* "}"          -> TypeDecl {"StructDecl", scope(Field)}
-
-    Type Field@=ID ";"                          -> Field {"Field"}
-
-    Type Var@=ID ";"                            -> Stmt {"VarDecl"}
-    Expr ";"                                    -> Stmt {"Expr"}
-    Expr "=" Expr ";"                           -> Stmt {"Assign"}
-    "return" Expr ";"                           -> Stmt {"Return", prefer}
-
-    STRING                                      -> Expr {"StrLit"}
-    Function at ID "(" {Expr ","}* ")"             -> Expr {"Call", avoid}
-    "sizeof" "(" Type ")"                       -> Expr {"SizeOf"}
-    Expr "." Field at ID                           -> Expr {"Deref"}
-    Var at ID                                      -> Expr {"VarRef"}
-
-    Type at ID                                     -> Type {"Type", avoid}
-    "char"                                      -> Type {"Char", prefer} 
-    "int"                                       -> Type {"Int", prefer}
-    "void"                                      -> Type {"Void", prefer}
-    Type "*"                                    -> Type {"Pointer", left}
-    "struct" Struct at ID                          -> Type {"StructRef"}
\ No newline at end of file
+  "typedef" Type Type@=ID                     -> TypeDecl {"TypeDef"}
+  "typedef" TypeDecl Type@=ID                 -> TypeDecl {"TypeDef"} 
+  "struct" Struct@=ID "{" Field* "}"          -> TypeDecl {"StructDecl", scope(Field)}
+
+  Type Field@=ID ";"                          -> Field {"Field"}
+
+  Type Var@=ID ";"                            -> Stmt {"VarDecl"}
+  Expr ";"                                    -> Stmt {"Expr"}
+  Expr "=" Expr ";"                           -> Stmt {"Assign"}
+  "return" Expr ";"                           -> Stmt {"Return", prefer}
+
+  STRING                                      -> Expr {"StrLit"}
+  INT                                         -> Expr {"IntLit"}
+  Function at ID "(" {Expr ","}* ")"             -> Expr {"Call", avoid}
+  "sizeof" "(" Type ")"                       -> Expr {"SizeOf"}
+  Expr "." Field at ID                           -> Expr {"Access"}
+  Expr "->" Field at ID                          -> Expr {"DerefAccess"}
+  "*" Expr                                    -> Expr {"Deref"}
+  "&" Expr                                    -> Expr {"Ref"}
+  Var at ID                                      -> Expr {"VarRef"}
+
+  Type at ID                                     -> Type {"Type", avoid}
+  "char"                                      -> Type {"Char", prefer} 
+  "int"                                       -> Type {"Int", prefer}
+  "void"                                      -> Type {"Void", prefer}
+  Type "*"                                    -> Type {"Pointer", left}
+  "struct" Struct at ID                          -> Type {"StructRef"}
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi	Wed Feb 15 08:21:41 2012	(r24324)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi	Wed Feb 15 09:29:18 2012	(r24325)
@@ -1,6 +1,6 @@
 typedef struct blog {
-    char *posterName;
-    int postCount;
+  char *posterName;
+  int postCount;
 } blog_t;
 
 typedef blog_t blog_t_1;
@@ -8,9 +8,9 @@
 typedef blog_t_1 blog_t_2;
 
 char* foo(blog_t* b) { 
-    return b.postCount;
+  return b->postCount;
 }
 
 void* malloc(int size) {
-    return size;
+  return size;
 }
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi	Wed Feb 15 08:21:41 2012	(r24324)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi	Wed Feb 15 09:29:18 2012	(r24325)
@@ -1,11 +1,19 @@
 int main() {
-    struct blog* blogptr;
-    blogptr.posterName = "asd";
-    
-    blog_t_2* b2;
-    b2 = malloc(sizeof(blog_t));
-    b2.posterName = "Frodo";
-    b2.postCount = sizeof(blog_t_2);
-    foo(b2);
-    foo(blogptr);
+  struct blog* blogptr;
+  blogptr->posterName = "asd";
+  
+  blog_t_2* b2;
+  b2 = malloc(sizeof(blog_t));
+  b2->posterName = "Frodo";
+  b2->postCount = sizeof(blog_t_2);
+  foo(b2);
+  foo(blogptr);
+}
+
+void test(blog_t* blogptr) {
+  blog_t b;
+  b = *blogptr;
+  
+  blog_t* bp;
+  bp = &b;
 }
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Wed Feb 15 08:21:41 2012	(r24324)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Wed Feb 15 09:29:18 2012	(r24325)
@@ -64,64 +64,79 @@
     VarDecl(_, x) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Start(s_10207) -> Start(s_10207)
+    Start(d_60347) -> Start(d_60347)
 
   nam-annotate-names(|def-path):
-    FunDecl(o_10207, p_10207, q_10207, r_10207) -> FunDecl(o_10207, p_10207{def-path}, q_10207, r_10207)
+    FunDecl(z_60346, a_60347, b_60347, c_60347) -> FunDecl(z_60346, a_60347{def-path}, b_60347, c_60347)
 
   nam-annotate-names(|def-path):
-    Param(m_10207, n_10207) -> Param(m_10207, n_10207{def-path})
+    Param(x_60346, y_60346) -> Param(x_60346, y_60346{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDecl(l_10207) -> TypeDecl(l_10207)
+    TypeDecl(w_60346) -> TypeDecl(w_60346)
 
   nam-annotate-names(|def-path):
-    TypeDef(j_10207, k_10207) -> TypeDef(j_10207, k_10207{def-path})
+    TypeDef(u_60346, v_60346) -> TypeDef(u_60346, v_60346{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDef(h_10207, i_10207) -> TypeDef(h_10207, i_10207{def-path})
+    TypeDef(s_60346, t_60346) -> TypeDef(s_60346, t_60346{def-path})
 
   nam-annotate-names(|def-path):
-    StructDecl(f_10207, g_10207) -> StructDecl(f_10207{def-path}, g_10207)
+    StructDecl(q_60346, r_60346) -> StructDecl(q_60346{def-path}, r_60346)
 
   nam-annotate-names(|def-path):
-    Field(d_10207, e_10207) -> Field(d_10207, e_10207{def-path})
+    Field(o_60346, p_60346) -> Field(o_60346, p_60346{def-path})
 
   nam-annotate-names(|def-path):
-    VarDecl(b_10207, c_10207) -> VarDecl(b_10207, c_10207{def-path})
+    VarDecl(m_60346, n_60346) -> VarDecl(m_60346, n_60346{def-path})
 
   nam-annotate-names(|def-path):
-    Expr(a_10207) -> Expr(a_10207)
+    Expr(l_60346) -> Expr(l_60346)
 
   nam-annotate-names(|def-path):
-    Assign(y_10206, z_10206) -> Assign(y_10206, z_10206)
+    Assign(j_60346, k_60346) -> Assign(j_60346, k_60346)
 
   nam-annotate-names(|def-path):
-    Return(x_10206) -> Return(x_10206)
+    Return(i_60346) -> Return(i_60346)
 
   nam-annotate-names(|def-path):
-    StrLit(w_10206) -> StrLit(w_10206)
+    StrLit(h_60346) -> StrLit(h_60346)
 
   nam-annotate-names(|def-path):
-    Call(u_10206, v_10206) -> Call(
-                                <nam-annotate-use(|Function())> u_10206
-                              , v_10206
+    IntLit(g_60346) -> IntLit(g_60346)
+
+  nam-annotate-names(|def-path):
+    Call(e_60346, f_60346) -> Call(
+                                <nam-annotate-use(|Function())> e_60346
+                              , f_60346
                               )
 
   nam-annotate-names(|def-path):
-    SizeOf(t_10206) -> SizeOf(t_10206)
+    SizeOf(d_60346) -> SizeOf(d_60346)
+
+  nam-annotate-names(|def-path):
+    Access(b_60346, c_60346) -> Access(
+                                  b_60346
+                                , <nam-annotate-use(|Field())> c_60346
+                                )
+
+  nam-annotate-names(|def-path):
+    DerefAccess(z_60345, a_60346) -> DerefAccess(
+                                       z_60345
+                                     , <nam-annotate-use(|Field())> a_60346
+                                     )
+
+  nam-annotate-names(|def-path):
+    Deref(y_60345) -> Deref(y_60345)
 
   nam-annotate-names(|def-path):
-    Deref(r_10206, s_10206) -> Deref(
-                                 r_10206
-                               , <nam-annotate-use(|Field())> s_10206
-                               )
+    Ref(x_60345) -> Ref(x_60345)
 
   nam-annotate-names(|def-path):
-    VarRef(q_10206) -> VarRef(<nam-annotate-use(|Var())> q_10206)
+    VarRef(w_60345) -> VarRef(<nam-annotate-use(|Var())> w_60345)
 
   nam-annotate-names(|def-path):
-    Type(p_10206) -> Type(<nam-annotate-use(|Type())> p_10206)
+    Type(v_60345) -> Type(<nam-annotate-use(|Type())> v_60345)
 
   nam-annotate-names(|def-path):
     Char() -> Char()
@@ -133,7 +148,7 @@
     Void() -> Void()
 
   nam-annotate-names(|def-path):
-    Pointer(o_10206) -> Pointer(o_10206)
+    Pointer(u_60345) -> Pointer(u_60345)
 
   nam-annotate-names(|def-path):
-    StructRef(n_10206) -> StructRef(<nam-annotate-use(|Struct())> n_10206)
\ No newline at end of file
+    StructRef(t_60345) -> StructRef(<nam-annotate-use(|Struct())> t_60345)
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Wed Feb 15 08:21:41 2012	(r24324)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Wed Feb 15 09:29:18 2012	(r24325)
@@ -14,17 +14,20 @@
   // Adjust the lookup behavior for properties,
   // overriding the lookup with a list of property Defs
   adjust-index-lookup(is-use |namespace, path, prefix, files):
-    Deref(e, <is-use>) -> p*
+    Access(e, <is-use>) -> p*
     with
-	  if TYPE(_{uri}) := <type-of> e then
-	    if structName := <get-structname-from-typedef> uri then
-	        p* := <index-lookup-children(|Field(), prefix, files)> structName
-        else
-            p* := []
-        end
-      else
-        p* := []
-      end
+      type := <type-of> e;
+      p* := <lookup-struct(|prefix, files)> type
+      
+  lookup-struct(|prefix, files) =
+    switch id
+      case ?Struct(TYPE(t)) :
+        <index-lookup-children(|Field(), prefix, files)> t <+ ![]
+      case ?TYPE(_{uri}) :
+        <index-lookup-children(|Field(), prefix, files)> <get-structname-from-typedef> uri <+ ![]
+      otherwise: 
+        ![]
+    end
 
   // Adjust the lookup behavior for variables,
   // overriding the lookup with a list of URIs

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Wed Feb 15 08:21:41 2012	(r24324)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Wed Feb 15 09:29:18 2012	(r24325)
@@ -10,6 +10,7 @@
   lib/analysis-library
   lib/compilation-library
   check
+  desugar
   analysis-manual
   analysis-generated
 
@@ -18,28 +19,31 @@
   // Analyzes the current program, returning a tuple with errors, warnings, and notes;
   // each a list of (term, message) tuples or simply (message) terms.
   editor-analyze:
-    (ast, path, project-path) -> (ast', errors, warnings, notes)
+    (ast, path, project-path) -> (analysedAst, errors, warnings, notes)
     with
       editor-init;
-      ast'     := <analyze-top>;
-      errors   := <collect-all(constraint-error, conc)> ast';
-      warnings := <collect-all(constraint-warning, conc)> ast';
-      notes    := <collect-all(constraint-note, conc)> ast'
+      ast'        := <desugar-all> ast;
+      analysedAst := <analyze-top> (ast', path, project-path);
+      errors      := <collect-all(constraint-error, conc)> analysedAst;
+      warnings    := <collect-all(constraint-warning, conc)> analysedAst;
+      notes       := <collect-all(constraint-note, conc)> analysedAst
   
   // Prints the abstract syntax ATerm of a selection.
   generate-aterm:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
-      filename := <guarantee-extension(|"aterm")> path;
-      result   := selected
+      selected' := <desugar-all> selected;
+      filename  := <guarantee-extension(|"aterm")> path;
+      result    := selected'
   
   // Prints the analyzed abstract syntax ATerm of a selection.
   generate-analyzed:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       editor-init;
-      filename := <guarantee-extension(|"analyzed.aterm")> path;
-      result   := <analyze-top> (selected, path, project-path)   
+      selected' := <desugar-all> selected;
+      filename  := <guarantee-extension(|"analyzed.aterm")> path;
+      result    := <analyze-top> (selected', path, project-path)   
       
   // Prints the entries in the index of the current file.
   index-currentfile:

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Wed Feb 15 08:21:41 2012	(r24324)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Wed Feb 15 09:29:18 2012	(r24325)
@@ -7,6 +7,7 @@
   lib/index-library
   lib/analysis-library
   analysis-generated
+  types
 
 rules
 
@@ -36,8 +37,17 @@
     prim("SSL_EXT_origin_offset", <id>) => (<id>, _)*/
       
   constraint-error:
-    x{[Unresolved(t) | _]} ->
-    (x, $[Unable to resolve.])
+    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    
+    constraint-error:
+    Call(f, a*) -> (f, $[Illegal argument types, expected ([<print-type> param-types]) not ([<print-type> arg-types])])
+    where
+      arg-types    := <map(type-of)> a*;
+      def at Def(uri) := <index-lookup> f;
+      param-types  := <index-get-all-values> ParamTypes(uri, ());
+      not(
+        <is-params-compatible(|arg-types)> def
+      )
   
   constraint-warning = fail
   constraint-note = fail
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Wed Feb 15 08:21:41 2012	(r24324)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Wed Feb 15 09:29:18 2012	(r24325)
@@ -8,12 +8,13 @@
 
 signature constructors
 
-  TYPE     		: STRING -> Type
-  Type       	: DefDataKind
-  
-  TypeDef       : DefDataKind
-  
-  ParamTypes 	: DefDataKind
+  TYPE        : STRING -> Type
+  Type        : Uri * Type -> TypeData
+  TypeDef     : Uri * TypeDef -> TypeDefData
+  ParamTypes  : Uri * List(Type) -> ParamTypesData
+  Ptr         : Type -> Type
+  Struct      : Type -> Type
+  FailedDeref : Type -> NoType
 
 rules // type projections
 
@@ -25,6 +26,9 @@
   
   type-of:
     VarDecl(x, _) -> <type-of> x
+    
+  type-of:
+  	FunDecl(x, _, _, _) -> <type-of> x
   
   type-of:
     Param(x, _) -> <type-of> x
@@ -33,9 +37,24 @@
   	Type(x) -> TYPE(x)
   	
   type-of:
-    Pointer(x) -> <type-of> x
+    Pointer(x) -> Ptr(<type-of> x)
+  	
+  type-of:
+    Deref(x) -> <type-of> inner
+    where
+      ptr := <type-of> x;
+      Ptr(inner) := ptr
+  	
+  type-of:
+  	Deref(x) -> FailedDeref(x)
+  	where
+  		ptr := <type-of> x;
+  		not(Ptr(_) := ptr)
   	
   type-of:
+  	Ref(x) -> Ptr(x)
+
+  type-of:
   	Char() -> TYPE("Char")
   	
   type-of:
@@ -43,34 +62,56 @@
   	
   type-of:
     Void() -> TYPE("Void")
+    
+  type-of:
+    IntLit(_) -> <type-of> Int()
+    
+  type-of:
+    StrLit(_) -> <type-of> Pointer(Char())
+    
+  type-of:
+    SizeOf(_) -> <type-of> Int()
   
   type-of:
     VarRef(v) -> <type-of> <index-lookup> v
     
   type-of:
-    StructRef(s) -> <type-of> <index-lookup> s
+    StructRef(s) -> Struct(<type-of> <index-lookup> s)
   
   type-of:
-    Deref(e, p) -> <type-of> <index-lookup> p
+    Access(_, p) -> <type-of> <index-lookup> p
     
   type-of:
-    Assign(_, x) -> <type-of> x
+    Assign(v, _) -> <type-of> <index-lookup> v
+    
+  type-of:
+    Call(f, _) -> <type-of> <index-lookup> f
 
   type-of:
     Def(uri) -> type
     where
-        if Def([Struct(), typeName|_]) := Def(uri) then
-            type := TYPE(typeName{uri}) // Hack: no need to lookup here, just get struct name from uri.
-        else
-            type := <index-get-data(|Type())> Def(uri)
-        end
+      if Def([Struct(), typeName|_]) := Def(uri) then
+        type := TYPE(typeName{uri}) // Hack: no need to lookup here, just get struct name from uri.
+      else
+        type := <index-get-value> Type(uri, ())
+      end
+        
+  // Recursion stoppers
+  type-of:
+    TYPE(x) -> TYPE(x)
+    
+  type-of:
+    Struct(x) -> Struct(x)
+    
+  type-of:
+    Ptr(x) -> Ptr(x)
 
 rules // utility
 
   is-params-compatible(|arg-types):
     Def(uri) -> <id>
     with
-      param-types := <index-get-data(|ParamTypes())>
+      param-types := <index-get-value> ParamTypes(uri, ())
     where
       <eq> (<length> arg-types, <length> param-types);
       <zip(is-assignable-to)> (arg-types, param-types)
@@ -79,39 +120,54 @@
     (to-type, from-type) -> to-type
     where
       <eq> (from-type, to-type)
+
+  print-type = 
+    switch id
+      case Void() : !"Void"
+      case Char() : !"Char"
+      case Int() : !"Int"
+      case Type(?t) : <strip-annos> t
+      case TYPE(?t) : <strip-annos> t
+      case Struct(?t) : !$[struct [<print-type> t]]
+      case StructRef(?t) : !$[struct [<print-type> t]]
+      case Pointer(?t) : !$[[<print-type> t]*]
+      case Ptr(?t) : !$[[<print-type> t]*]
+      case [?type|[]] : <print-type> type
+      case [?type|?types]; not (<?[]> types) : !$[[<print-type> type], [<print-type> types]] 
+      otherwise : ?name#(_); !$[[name]]
+    end   
     
   get-structname-from-typedef = get-structname-from-typedef(|[])
   get-structname-from-typedef(|seen):
     uri -> struct
     where
-        if result :=  <index-get-data(|TypeDef())> Def(<remove-unresolved> uri) then
-            // There is a TypeDef for given uri, so it must be a Type.
-            TYPE(_{uri2}) := <index-get-data(|TypeDef())> Def(<remove-unresolved> uri);
-            if <fetch(?uri2)> seen then fail end; // Fail if already seen the typedeffed uri to prevent cyclic typedef.
-            struct := <get-structname-from-typedef(|<concat> [seen, [uri2]])> uri2
+      if result :=  <index-get-value> TypeDef(uri, ()) then
+        // There is a TypeDef for given uri, so it must be a Type.
+        TYPE(_{uri2}) := <index-get-value> TypeDef(uri, ());
+        
+        if <fetch(?uri2)> seen then fail end; // Fail if already seen the typedeffed uri to prevent cyclic typedef.
+        
+        struct := <get-structname-from-typedef(|<concat> [seen, [uri2]])> uri2
 		else
-		    // There is no TypeDef for given uri, so it must be a Struct.
-		    [Struct(), structName|_] := uri;
-		    struct := structName{uri} 
-	    end
-
-  remove-unresolved = try(sometd(\Unresolved(x) -> x\))
+	    // There is no TypeDef for given uri, so it must be a Struct.
+	    [Struct(), structName|_] := uri;
+	    struct := structName{uri} 
+    end
 
 rules
     
   // Store types
   adjust-index-def-data(store-results |namespace, path):
-    def -> <store-results> DefData([namespace | path], Type(), type)
+    def -> <store-results> Type([namespace | path], type)
     where
       type := <type-of> def
       
   // Store typedef relations
   adjust-index-def-data(store-results |namespace, path):
-    TypeDef(def, type) -> <store-results> DefData([namespace | path], TypeDef(), <type-of> def)
+    TypeDef(def, type) -> <store-results> TypeDef([namespace | path], <type-of> def)
 
-    
   // TODO: Function call parameter checks?
-  /*adjust-index-def-data(store-results |namespace, path):
-    FunDecl(_, _, params, _) -> <store-results> DefData([namespace | path], ParamTypes(), types)
+  adjust-index-def-data(store-results |namespace, path):
+    FunDecl(_, _, params, _) -> <store-results> ParamTypes([namespace | path], types)
     with
-      types := <map(type-of)> params*/
+      types := <map(type-of)> params

From gabrielkonat at gmail.com  Wed Feb 15 17:01:55 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 15 Feb 2012 16:01:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24326 - in
	spoofax-contrib/separate-compilation-examples/c-without-macros:
	test trans
Message-ID: <20120215160155.8127F108C00A@mx3.tudelft.nl>

Author: gkonat
Date: Wed Feb 15 16:01:54 2012
New Revision: 24326
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24326&sc=1

Log:
Finished new type system for c-without-macros experiment.

Added:
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/simple.cwi
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/unreferenced_benchmark.cwi
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi	Wed Feb 15 09:29:18 2012	(r24325)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi	Wed Feb 15 16:01:54 2012	(r24326)
@@ -13,4 +13,4 @@
 
 void* malloc(int size) {
   return size;
-}
\ No newline at end of file
+} 
\ No newline at end of file

Added: spoofax-contrib/separate-compilation-examples/c-without-macros/test/simple.cwi
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/simple.cwi	Wed Feb 15 16:01:54 2012	(r24326)
@@ -0,0 +1,51 @@
+typedef struct foo {
+    char* c;
+    char* ccc;
+    int i;
+} foo_t;
+
+typedef foo_t foo_t_1;
+
+char* bar1(foo_t* b) { 
+  return b->c;
+}
+
+char* bar1_fail(foo_t* b) { 
+  return b.c;
+}
+
+char* bar2(struct foo* b) {
+  return b->c;
+}
+
+char* bar2_fail(struct foo* b) {
+  return b.c;
+}
+
+char* bar3(foo_t_1* b) {
+  return b->c;
+} 
+
+char* bar3_fail(foo_t_1* b) {
+  return b.c;
+}
+
+char* bar4_fail1(foo_t_2* b) {
+  return b->c;
+}
+
+char* bar4_fail2(foo_t_2* b) {
+  return b.c;
+}
+
+char* call1(foo_t* b) {
+  return bar3(b);
+}
+
+char* call2(struct foo* b) {
+  return bar3(b);
+}
+
+char* call3(foo_t_2* b) {
+  return bar3(b);
+} 
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Wed Feb 15 09:29:18 2012	(r24325)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Wed Feb 15 16:01:54 2012	(r24326)
@@ -17,14 +17,14 @@
 test Resolve property access [[
   int f() {
     A_t* a;
-    return a.a.i;
+    return a->a->i;
   }
 ]]
 
-test Resolve property access fails [[
+test Resolve property access fails [[ 
   int f() {
     A_t* a;
-    return a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.a.b;
+    return a->a->a->a->a->a->a->a->a->a->a->a->a->k;
   }
 ]] 1 error
 
@@ -55,8 +55,8 @@
   char* f() {
     A_t_3* a;
     a = malloc(sizeof(A_t_3));
-    a.s="test";
-    return a.s;
+    a->s="test";
+    return a->s;
   }
 ]]
 
@@ -68,8 +68,8 @@
   char* f() {
     A_t_2* a;
     a = malloc(sizeof(A_t_2));
-    a.s="test";
-    return a.s;
+    a->s="test";
+    return a->s;
   }
 ]] 2 errors
 

Added: spoofax-contrib/separate-compilation-examples/c-without-macros/test/unreferenced_benchmark.cwi
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/unreferenced_benchmark.cwi	Wed Feb 15 16:01:54 2012	(r24326)
@@ -0,0 +1,9 @@
+typedef struct Q {
+  Q_t* q;
+} Q_t;
+
+Q_t* f() {
+  Q_t* q;
+  //return q.q.q.q.q.q.q.q.q.q.q.q.q;
+  //return q->a->b->c->d->e->f->g->h->i->j->k->l;
+}
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Wed Feb 15 09:29:18 2012	(r24325)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Wed Feb 15 16:01:54 2012	(r24326)
@@ -16,18 +16,12 @@
   adjust-index-lookup(is-use |namespace, path, prefix, files):
     Access(e, <is-use>) -> p*
     with
-      type := <type-of> e;
-      p* := <lookup-struct(|prefix, files)> type
-      
-  lookup-struct(|prefix, files) =
-    switch id
-      case ?Struct(TYPE(t)) :
-        <index-lookup-children(|Field(), prefix, files)> t <+ ![]
-      case ?TYPE(_{uri}) :
-        <index-lookup-children(|Field(), prefix, files)> <get-structname-from-typedef> uri <+ ![]
-      otherwise: 
-        ![]
-    end
+      //<debug> e;
+      if type := <type-of> e then
+	      p* := <try-get-struct-field(|prefix, files)> type
+	    else
+	      p* := []
+	    end
 
   // Adjust the lookup behavior for variables,
   // overriding the lookup with a list of URIs

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Wed Feb 15 09:29:18 2012	(r24325)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Wed Feb 15 16:01:54 2012	(r24326)
@@ -40,14 +40,16 @@
     x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
     
     constraint-error:
-    Call(f, a*) -> (f, $[Illegal argument types, expected ([<print-type> param-types]) not ([<print-type> arg-types])])
+    Call(f, a*) -> (f, $[Illegal argument types, expected ([print-param-types]) not ([print-arg-types])])
     where
       arg-types    := <map(type-of)> a*;
       def at Def(uri) := <index-lookup> f;
       param-types  := <index-get-all-values> ParamTypes(uri, ());
       not(
         <is-params-compatible(|arg-types)> def
-      )
+      );
+      print-param-types := <print-type> <try-lookup-struct> param-types;
+      print-arg-types := <print-type> <try-lookup-struct> arg-types
   
   constraint-warning = fail
   constraint-note = fail
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Wed Feb 15 09:29:18 2012	(r24325)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Wed Feb 15 16:01:54 2012	(r24326)
@@ -15,6 +15,7 @@
   Ptr         : Type -> Type
   Struct      : Type -> Type
   FailedDeref : Type -> NoType
+  NoType      : Type
 
 rules // type projections
 
@@ -40,16 +41,9 @@
     Pointer(x) -> Ptr(<type-of> x)
   	
   type-of:
-    Deref(x) -> <type-of> inner
+    Deref(x) -> type
     where
-      ptr := <type-of> x;
-      Ptr(inner) := ptr
-  	
-  type-of:
-  	Deref(x) -> FailedDeref(x)
-  	where
-  		ptr := <type-of> x;
-  		not(Ptr(_) := ptr)
+      Ptr(type) := <type-of> x
   	
   type-of:
   	Ref(x) -> Ptr(x)
@@ -76,8 +70,8 @@
     VarRef(v) -> <type-of> <index-lookup> v
     
   type-of:
-    StructRef(s) -> Struct(<type-of> <index-lookup> s)
-  
+    StructRef(s) -> <type-of> <index-lookup> s
+    
   type-of:
     Access(_, p) -> <type-of> <index-lookup> p
     
@@ -90,11 +84,11 @@
   type-of:
     Def(uri) -> type
     where
-      if Def([Struct(), typeName|_]) := Def(uri) then
-        type := TYPE(typeName{uri}) // Hack: no need to lookup here, just get struct name from uri.
-      else
-        type := <index-get-value> Type(uri, ())
-      end
+      switch id
+        case ?Def([Struct(), typeName|_]): !TYPE(typeName{uri}) // Hack: no need to lookup here, just get struct name from uri.
+        otherwise: <index-get-value> Type(uri, ())
+      end;
+      ?type
         
   // Recursion stoppers
   type-of:
@@ -105,6 +99,9 @@
     
   type-of:
     Ptr(x) -> Ptr(x)
+    
+  type-of:
+    NoType() -> NoType()
 
 rules // utility
 
@@ -119,39 +116,52 @@
   is-assignable-to:
     (to-type, from-type) -> to-type
     where
-      <eq> (from-type, to-type)
+      <eq> (<try-lookup-struct> from-type, <try-lookup-struct> to-type)
 
   print-type = 
     switch id
-      case Void() : !"Void"
-      case Char() : !"Char"
-      case Int() : !"Int"
-      case Type(?t) : <strip-annos> t
-      case TYPE(?t) : <strip-annos> t
-      case Struct(?t) : !$[struct [<print-type> t]]
-      case StructRef(?t) : !$[struct [<print-type> t]]
-      case Pointer(?t) : !$[[<print-type> t]*]
-      case Ptr(?t) : !$[[<print-type> t]*]
-      case [?type|[]] : <print-type> type
-      case [?type|?types]; not (<?[]> types) : !$[[<print-type> type], [<print-type> types]] 
+      case ?Void() : !"Void"
+      case ?Char() : !"Char"
+      case ?Int() : !"Int"
+      case ?Type(t) : <strip-annos> t
+      case ?TYPE(t) : <strip-annos> t
+      case ?Struct(t) : !$[struct [<print-type> t]]
+      case ?StructRef(t) : !$[struct [<print-type> t]]
+      case ?Pointer(t) : !$[[<print-type> t]*]
+      case ?Ptr(t) : !$[[<print-type> t]*]
+      case ?[type|[]] : <print-type> type
+      case ?[type|types]; not (<?[]> types) : !$[[<print-type> type], [<print-type> types]] 
       otherwise : ?name#(_); !$[[name]]
     end   
     
-  get-structname-from-typedef = get-structname-from-typedef(|[])
-  get-structname-from-typedef(|seen):
+  lookup-struct = lookup-struct(|[])
+  lookup-struct(|seen):
     uri -> struct
     where
-      if result :=  <index-get-value> TypeDef(uri, ()) then
+	    if result :=  <index-get-value> TypeDef(uri, ()) then
         // There is a TypeDef for given uri, so it must be a Type.
         TYPE(_{uri2}) := <index-get-value> TypeDef(uri, ());
         
         if <fetch(?uri2)> seen then fail end; // Fail if already seen the typedeffed uri to prevent cyclic typedef.
         
-        struct := <get-structname-from-typedef(|<concat> [seen, [uri2]])> uri2
-		else
-	    // There is no TypeDef for given uri, so it must be a Struct.
-	    [Struct(), structName|_] := uri;
-	    struct := structName{uri} 
+        struct := <lookup-struct(|<concat> [seen, [uri2]])> uri2
+			else
+		    // There is no TypeDef for given uri, so it must be a Struct.
+		    [Struct(), structName|_] := uri;
+		    struct := structName{uri}
+	    end
+    
+  try-lookup-struct = 
+    try(sometd(\TYPE(_{uri}) -> TYPE(<lookup-struct> uri)\))
+    
+  try-get-struct-field(|prefix, files) =
+    switch id
+      case ?Struct(TYPE(t)) :
+        (<index-lookup-children(|Field(), prefix, files)> t) <+ ![]
+      case ?TYPE(_{uri}) :
+        (<index-lookup-children(|Field(), prefix, files)> <lookup-struct> uri) <+ ![]
+      otherwise: 
+        ![]
     end
 
 rules

From L.C.L.Kats at tudelft.nl  Wed Feb 15 18:38:24 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 15 Feb 2012 17:38:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24327 - in
	spoofax-imp/trunk: org.strategoxt.imp.feature
	org.strategoxt.imp.updatesite
Message-ID: <20120215173824.97DF0CC2C7@mx4.tudelft.nl>

Author: LennartKats
Date: Wed Feb 15 17:38:24 2012
New Revision: 24327
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24327&sc=1

Log:
bumping nightly release version number

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
   spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml

Modified: spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Feb 15 16:01:54 2012	(r24326)
+++ spoofax-imp/trunk/org.strategoxt.imp.feature/feature.xml	Wed Feb 15 17:38:24 2012	(r24327)
@@ -2,7 +2,7 @@
 <feature
       id="org.strategoxt.imp"
       label="Spoofax/IMP"
-      version="1.0.2.0"
+      version="1.0.9.0"
       plugin="org.strategoxt.imp.runtime">
 
    <description url="http://strategoxt.org/Stratego/Spoofax-IMP">

Modified: spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Wed Feb 15 16:01:54 2012	(r24326)
+++ spoofax-imp/trunk/org.strategoxt.imp.updatesite/site.xml	Wed Feb 15 17:38:24 2012	(r24327)
@@ -3,7 +3,7 @@
    <description name="Spoofax/IMP" url="http://spoofax.org/update/stable/">
       Spoofax update site
    </description>
-   <feature url="features/org.strategoxt.imp_1.0.2.0.jar" id="org.strategoxt.imp" version="1.0.2.0">
+   <feature url="features/org.strategoxt.imp_1.0.9.0.jar" id="org.strategoxt.imp" version="1.0.9.0">
       <category name="Spoofax/IMP"/>
    </feature>
    <category-def name="Spoofax/IMP" label="Spoofax/IMP">

From r.t.lindeman at student.tudelft.nl  Thu Feb 16 22:09:45 2012
From: r.t.lindeman at student.tudelft.nl (Ricky Lindeman)
Date: Thu, 16 Feb 2012 21:09:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24328 -
	spoofax-imp/trunk/org.strategoxt.imp.debug.core/src/org/strategoxt/imp/debug/core/str/launching
Message-ID: <20120216210945.43D3D7F80B9@mx1.tudelft.nl>

Author: RickyLindeman
Date: Thu Feb 16 21:09:44 2012
New Revision: 24328
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24328&sc=1

Log:
Spoofax/494: Remove the memory consuming ILaunchListener interface from the DebuggableHybridInterpreter; it was not used.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.debug.core/src/org/strategoxt/imp/debug/core/str/launching/DebuggableHybridInterpreter.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.debug.core/src/org/strategoxt/imp/debug/core/str/launching/DebuggableHybridInterpreter.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.debug.core/src/org/strategoxt/imp/debug/core/str/launching/DebuggableHybridInterpreter.java	Wed Feb 15 17:38:24 2012	(r24327)
+++ spoofax-imp/trunk/org.strategoxt.imp.debug.core/src/org/strategoxt/imp/debug/core/str/launching/DebuggableHybridInterpreter.java	Thu Feb 16 21:09:44 2012	(r24328)
@@ -10,10 +10,8 @@
 import org.eclipse.core.runtime.IProgressMonitor;
 import org.eclipse.core.runtime.Path;
 import org.eclipse.debug.core.DebugPlugin;
-import org.eclipse.debug.core.ILaunch;
 import org.eclipse.debug.core.ILaunchConfiguration;
 import org.eclipse.debug.core.ILaunchConfigurationWorkingCopy;
-import org.eclipse.debug.core.ILaunchListener;
 import org.eclipse.debug.core.ILaunchManager;
 import org.spoofax.interpreter.core.InterpreterErrorExit;
 import org.spoofax.interpreter.core.InterpreterException;
@@ -40,7 +38,7 @@
  * @author rlindeman
  *
  */
-public class DebuggableHybridInterpreter extends HybridInterpreter implements ILaunchListener {
+public class DebuggableHybridInterpreter extends HybridInterpreter {
 
 	/**
 	 * If true calling invoke will launch a debug session.
@@ -51,6 +49,11 @@
 	private String projectpath = null;
 	
 	/**
+	 * What language is under execution when debugging this stratego program.
+	 */
+	private String languageName = null;
+	
+	/**
 	 * Keep track of the number of simultaneous launches.
 	 */
 	public static int counter = 0;
@@ -77,17 +80,17 @@
 	 * @param reuseRegistries	The names of operator registries that should not be re-created,
 	 *                       	but can be reused from the old instance.
 	 */
-	public DebuggableHybridInterpreter(HybridInterpreter interpreter, String... reuseRegistries) 
-	{
+	public DebuggableHybridInterpreter(HybridInterpreter interpreter,
+			String... reuseRegistries) {
 		super(interpreter, reuseRegistries);
 		initLaunchListener();
 	}
 	
-	private void initLaunchListener()
-	{
-		// connect to the eclipse launch manager and listen to launches.
-		// so we can keep track of the number of simultaneous HybridInterpreter launches.
-		DebugPlugin.getDefault().getLaunchManager().addLaunchListener(this);
+	private void initLaunchListener() {
+		// TODO: connect to the eclipse launch manager and listen to launches.
+		// so we can keep track of the number of simultaneous HybridInterpreter
+		// launches.
+		// DebugPlugin.getDefault().getLaunchManager().addLaunchListener(new StrategoLaunchListener(this));
 	}
 	
 	private List<URL> loadJars = new ArrayList<URL>();
@@ -97,8 +100,7 @@
 	throws SecurityException, NoInteropRegistererJarException, IncompatibleJarException, IOException {
 
 		// save the locations of the jar, so we can load the in the other VM
-		for(URL jarURL : jars)
-		{
+		for(URL jarURL : jars) {
 			loadJars.add(jarURL);
 		}
 
@@ -109,21 +111,21 @@
 	 * Returns a list of strings with paths to jars that are dynamically loaded by the HybridInterpreter.
 	 * @return
 	 */
-	public List<String> getLoadJarsAsStringList()
-	{
+	public List<String> getLoadJarsAsStringList() {
 		List<String> list = new ArrayList<String>();
-		for(URL jarURL : this.loadJars)
-		{
+		for (URL jarURL : this.loadJars) {
 			list.add(jarURL.getPath());
 		}
 		return list;
 	}
 	
-	public List<IPath> getLoadJarsAsIPathList()
-	{
+	/**
+	 * Returns a list of IPaths with paths to jars that are dynamically loaded by the HybridInterpreter.
+	 * @return
+	 */
+	public List<IPath> getLoadJarsAsIPathList() {
 		List<IPath> list = new ArrayList<IPath>();
-		for(URL jarURL : this.loadJars)
-		{
+		for (URL jarURL : this.loadJars) {
 			list.add(new Path(jarURL.getFile()));
 		}
 		return list;
@@ -139,8 +141,7 @@
 			throws InterpreterErrorExit, InterpreterExit, UndefinedStrategyException, InterpreterException {
 		
 		try {
-			if (this.isDebugLaunchEnabled())
-			{
+			if (this.isDebugLaunchEnabled()) {
 				// TODO: limit the number of simultaneous launches...
 				tryLaunch(name);
 			}
@@ -164,15 +165,13 @@
 	 * Tries to launch a debug HybridInterpreter session that will invoke the given strategy name.
 	 * @param name
 	 */
-	private void tryLaunch(String name)
-	{
+	private void tryLaunch(String name) {
 		// launch a JVM
 		// http://www.eclipse.org/articles/Article-Java-launch/launching-java.html
 		
 		// find HybridInterpreter launch config
 		ILaunchConfigurationWorkingCopy configWC = LaunchUtils.createHybridInterpreterLaunchConfigurationWorkingCopy();
-		if (configWC == null)
-		{
+		if (configWC == null) {
 			System.err.println("No config working copy!");
 		}
 		// set the required attributes
@@ -200,8 +199,7 @@
 
 		// set current term
 		IStrategoTerm term = this.current();
-		if (term != null)
-		{
+		if (term != null) {
 			configWC.setAttribute(IStrategoConstants.ATTR_CURRENT_TERM, term.toString());
 		}
 		
@@ -220,7 +218,7 @@
             //boolean register
 		} catch (CoreException e) {
 			// TODO Auto-generated catch block
-			e.printStackTrace();
+			//Environment.logException("Error running scheduled analysis", e);
 		}
 	}
 
@@ -234,37 +232,40 @@
 	}
 
 
+	/**
+	 * Sets the path to the project this interpreter is loaded for.
+	 * @param projectpath
+	 */
 	public void setProjectpath(String projectpath) {
 		this.projectpath = projectpath;
 	}
 	
+	/**
+	 * Set the language name.
+	 * @param languageName
+	 */
+	public void setLanguageName(String languageName) {
+		this.languageName = languageName;
+	}
+	
+	/**
+	 * Returns whether debug launching is enabled.
+	 * @return
+	 */
 	public boolean isDebugLaunchEnabled() {
 		return isDebugLaunchEnabled;
 	}
 	
+	/**
+	 * Enable or disable the debug launch
+	 * @param isDebugLaunchEnabled
+	 */
 	public void setDebugLaunchEnabled(boolean isDebugLaunchEnabled) {
 		this.isDebugLaunchEnabled = isDebugLaunchEnabled;
 	}
 
-	// ILaunchListener interface
-	public void launchRemoved(ILaunch launch) {
-		// TODO Auto-generated method stub
-		// System.out.println("Launch removed");
-	}
-	
-	public void launchAdded(ILaunch launch) {
-		// TODO Auto-generated method stub
-		// System.out.println("Launch added");
-	}
-	
-	public void launchChanged(ILaunch launch) {
-		// TODO Auto-generated method stub
-		// System.out.println("Launch changed");
-	}
-
 	@Override
 	public void uninit() {
 		super.uninit();
-		DebugPlugin.getDefault().getLaunchManager().removeLaunchListener(this);
 	}
 }

From m.dejonge at tudelft.nl  Fri Feb 17 11:00:23 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Fri, 17 Feb 2012 10:00:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24329 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util
Message-ID: <20120217100024.22606108C00E@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Fri Feb 17 10:00:22 2012
New Revision: 24329
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24329&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/construct-text.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/construct-text.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/construct-text.str	Thu Feb 16 21:09:44 2012	(r24328)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/construct-text.str	Fri Feb 17 10:00:22 2012	(r24329)
@@ -32,6 +32,16 @@
   
 rules //interface
 
+construct-text-from-source(pp, parenthesize, override-reconstruction, resugar):
+	t@(oldnode, newnode) -> newText
+	where
+		<is-tuple> t;
+		<has-origin-term> oldnode	
+	with
+		parenthesized-node := <try(parenthesize)> newnode;
+		reconstructed-text := <topdown(try(strip-annos)); construct-text-from-old(pp, override-reconstruction, resugar)> (oldnode, parenthesized-node); 
+		newText := <origin-set-relation>(parenthesized-node, reconstructed-text)
+
 /*
  * Constructs the textual change associated with 
  * the transformation that replaces a (sub)term 'oldnode' with a new (sub)term 'newnode'.
@@ -43,14 +53,9 @@
  * @type (original-node, new-node) -> (Int,Int, String)
  */	
 construct-textual-change(pp, parenthesize, override-reconstruction, resugar):
-	t@(oldnode, newnode) -> (start-offset, end-offset, newText)
+	(oldnode, newnode) -> (start-offset, end-offset, newText)
 	where
-		<is-tuple> t;
-		<has-origin-term> oldnode		
-	with
-		parenthesized-node := <try(parenthesize)> newnode;
-		reconstructed-text := <topdown(try(strip-annos)); construct-text-from-old(pp, override-reconstruction, resugar)> (oldnode, parenthesized-node); 
-		r-text := <origin-set-relation>(parenthesized-node, reconstructed-text);
+		r-text := <construct-text-from-source(pp, parenthesize, override-reconstruction, resugar)>(oldnode, newnode);
 		(start-offset, end-offset, newText) := <ast-change-to-text-change(pp, override-reconstruction, resugar)> REPLACEMENT(oldnode, r-text)
 		
 rules

From m.dejonge at tudelft.nl  Fri Feb 17 13:48:01 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Fri, 17 Feb 2012 12:48:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24330 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util
Message-ID: <20120217124801.0952B2B8013@mx2.tudelft.nl>

Author: MaartjeDeJonge
Date: Fri Feb 17 12:48:00 2012
New Revision: 24330
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24330&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/construct-text.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/construct-text.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/construct-text.str	Fri Feb 17 10:00:22 2012	(r24329)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/construct-text.str	Fri Feb 17 12:48:00 2012	(r24330)
@@ -126,7 +126,7 @@
 	node -> text
 	where 
 		text := <
-			all(alltd(construct-text-with-comments(pp, override-reconstruction, resugar|<DEFAULT-INDENT>))); 
+			all(alltd(is-string <+ construct-text-with-comments(pp, override-reconstruction, resugar|<DEFAULT-INDENT>))); 
 			topdown(try(pp-default(pp))); //handle brackets
 			pp
 		> node

From richard at vogelij.nl  Fri Feb 17 15:58:44 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Fri, 17 Feb 2012 14:58:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24331 - in
	strategoxt-javascript-backend/trunk: . src/javascript src/stratego
Message-ID: <20120217145844.B2E1F7F80EF@mx1.tudelft.nl>

Author: rvogelij
Date: Fri Feb 17 14:58:43 2012
New Revision: 24331
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24331&sc=1

Log:
- Added soms time related primitives
- Fixed a few bugs (behavior in concat_strings is now more like original stratego)
- Fixed tests

Modified:
   strategoxt-javascript-backend/trunk/Makefile
   strategoxt-javascript-backend/trunk/src/javascript/srts.js
   strategoxt-javascript-backend/trunk/src/javascript/ssl.js
   strategoxt-javascript-backend/trunk/src/javascript/strategojs.js
   strategoxt-javascript-backend/trunk/src/javascript/terms.js
   strategoxt-javascript-backend/trunk/src/stratego/s2js.str

Modified: strategoxt-javascript-backend/trunk/Makefile
==============================================================================
--- strategoxt-javascript-backend/trunk/Makefile	Fri Feb 17 12:48:00 2012	(r24330)
+++ strategoxt-javascript-backend/trunk/Makefile	Fri Feb 17 14:58:43 2012	(r24331)
@@ -3,12 +3,19 @@
 	-la strc -la stratego-aterm -la stratego-gpp -la stratego-xtc
 
 SXTJAR=org.strategoxt.strj/java/strategoxt.jar
+SXTJAR2=strategoxt.jar
+
+STRLIB=~/.nix-profile/share/stratego-lib
+CTREES=~/.nix-profile/share
+STRSDF=~/.nix-profile/share/sdf/stratego-front
+RTGSDF=~/.nix-profile/share/sdf/stratego-regular
+
 
 LIBPATH=src/stratego
 LIBPATH=.
 
 JAVAC=`if which ecj >/dev/null; then echo ecj; else echo javac -J-Xmx512m; fi`
-
+OPTSPOOFAXHOMEDIR=-I .
 
 all: s2js.jar
 
@@ -18,12 +25,23 @@
 	strj -I $(LIBPATH) -i $< -o $@ -p s2js $(SLIBS)
 
 out/s2js/s2js.class: out/s2js/s2js.java
-	$(JAVAC) -cp $(SXTJAR) -source 5 out/s2js/*.java
+	$(JAVAC) -cp $(SXTJAR):$(SXTJAR2) -source 5 out/s2js/*.java
 
 s2js.jar: out/s2js/s2js.class
-	cp $(SXTJAR) .
 	jar cfm s2js.jar src/META-INF/MANIFEST.MF -C out/ .
 
+%.js: $(prefix)%.str s2js.jar
+	java -Xmx1536m -cp $(SXTJAR):s2js.jar -ss4m s2js.s2js -O 0 -i $< -I $(STRLIB) -I . -I $(CTREES) -I $(STRSDF) -I $(RTGSDF) -I tests/testlib $(I) > $@
+
+%.lib.js: %.js
+	cat $< | scripts/wrap-libraries.sh > $@
+
+%.wrapped.js: %.js
+	cat $< | scripts/wrap-libraries.sh | scripts/add-cli-wrapper.sh > $@
+
+%.embeddable.js: %.js
+	cat $< | scripts/wrap-libraries.sh | scripts/add-ace-wrapper-end.sh > $@
+
 clean:
 	rm -rf out
 	rm -f s2js.jar

Modified: strategoxt-javascript-backend/trunk/src/javascript/srts.js
==============================================================================
--- strategoxt-javascript-backend/trunk/src/javascript/srts.js	Fri Feb 17 12:48:00 2012	(r24330)
+++ strategoxt-javascript-backend/trunk/src/javascript/srts.js	Fri Feb 17 14:58:43 2012	(r24331)
@@ -7,8 +7,8 @@
 
 StrategoJS.SRTS._loaded = function() {
 
-	//var trace = function() {};//StrategoJS.trace;
-	var trace = StrategoJS.trace;
+	var trace = function() {};//StrategoJS.trace;
+	//var trace = StrategoJS.trace;
 
 	StrategoJS.SRTS.cliArgumentsToList = function(jslist, factory) {
 		var r = factory.makeEmptyList();

Modified: strategoxt-javascript-backend/trunk/src/javascript/ssl.js
==============================================================================
--- strategoxt-javascript-backend/trunk/src/javascript/ssl.js	Fri Feb 17 12:48:00 2012	(r24330)
+++ strategoxt-javascript-backend/trunk/src/javascript/ssl.js	Fri Feb 17 14:58:43 2012	(r24331)
@@ -11,13 +11,15 @@
 StrategoJS.SSL._loaded = function() {
 
 	
-	//var trace = function() {}; //StrategoJS.trace;
-	var trace = StrategoJS.trace;//function() {}; //StrategoJS.trace;
+	var trace = function() {}; //StrategoJS.trace;
+	//var trace = StrategoJS.trace;//function() {}; //StrategoJS.trace;
 	
 	var _stdin  = StrategoJS.Term.makeCtor("stdin", 0);
 	var _stdout = StrategoJS.Term.makeCtor("stdout", 0);
 	var _stderr = StrategoJS.Term.makeCtor("stderr", 0);
-
+	
+	var _startTime = StrategoJS.DateInMiliseconds(new Date());
+	
 	StrategoJS.SSL.SSL_fail = function(ctx, currentTerm) {
 		return null;
 	}
@@ -426,7 +428,7 @@
 			return null;
 		var set = _indexedSets[setIndex];
 		var keyAsString = ctx.factory.prettify(key);
-		print("                   : " + setIndex + " " + keyAsString);
+		//print("                   : " + setIndex + " " + keyAsString);
 		if(set.containsKey(keyAsString)) {
 			var r = set.getIndex(keyAsString);
 			return strategy(ctx, r === undefined ? null : r);
@@ -587,6 +589,7 @@
 		var f = ctx.factory;
 		if(f.termType(string) !== f.STRING)
 			return null;
+		string = ctx.factory.stringValue(string);
 		var r = f.makeEmptyList();
 		for(var i = string.length - 1; i >= 0; i--) {
 			r = f.makeListCons(f.makeInt(string.charCodeAt(i)), r);
@@ -624,15 +627,26 @@
 	StrategoJS.SSL.SSL_concat_strings = function(ctx, currentTerm, s1) {
 		trace("SSL_concat_strings");
 		var f = ctx.factory;
-		if ((s1 !== null) && (f.termType(s1) === f.LIST) && (f.head(s1) !== null) && (f.termType(f.head(s1)) === f.STRING))
+		if ((s1 !== null) && (f.termType(s1) === f.LIST))
 		{
-			if (f.getSubtermCount(f.tail(s1)) === 0)
+			if ((f.head(s1) === null))
 			{
-				trace("SSL_concat_strings (recursive) end");
-				return f.head(s1);
+				return ctx.factory.makeString("");
 			}
-			else
-				return f.head(s1) + StrategoJS.SSL.SSL_concat_strings(ctx, currentTerm, f.tail(s1));
+			else if (f.termType(f.head(s1)) === f.STRING)
+			{
+				if (f.getSubtermCount(f.tail(s1)) === 0)
+				{
+					trace("SSL_concat_strings (recursive) end");
+					return ctx.factory.makeString(f.head(s1));
+				}
+				else
+				{
+					return ctx.factory.makeString(ctx.factory.stringValue(f.head(s1)) + ctx.factory.stringValue(StrategoJS.SSL.SSL_concat_strings(ctx, currentTerm, f.tail(s1))));
+				}
+			} else
+				return null;
+			
 		} else
 			return null;
 	}
@@ -689,6 +703,31 @@
 			return null;
 		return res;
 	}
+	
+	StrategoJS.SSL.SSL_times = function(ctx, currentTerm)
+	{
+		var utime = ctx.factory.makeInt(StrategoJS.DateInMiliseconds(new Date()) - _startTime);
+		var stime = ctx.factory.makeInt(0);
+		var ctime = ctx.factory.makeInt(0);
+		var arr = [
+		           utime,
+		           stime,
+		           ctime,
+		           ctime
+		           ];
+		var tuple = ctx.factory.makeTuple(arr);
+		return tuple;
+	}
+	
+	StrategoJS.SSL.SSL_TicksToSeconds = function(ctx, currentTerm)
+	{
+		if (!ctx.factory.termType(ctx.factory.INT))
+			return null;
+		if (ctx.factory.intValue(currentTerm) === 0)
+			return ctx.factory.makeReal(0);
+		return ctx.factory.makeReal(ctx.factory.intValue(currentTerm) / 1000);
+	}
+	
 
 	StrategoJS.SSL.SSL_real_to_string = function(ctx, currentTerm, realValue)
 	{
@@ -698,6 +737,17 @@
 		return realValue.toString();
 	}
 	
+	StrategoJS.SSL.SSL_real_to_string_precision = function(ctx, currentTerm, realValue)
+	{
+		trace("SSL_real_to_string_precision");
+		if(ctx.factory.termType(realValue) !== ctx.factory.REAL)
+			return null;
+		return realValue.toString();
+	}
+
+	
+
+	
 	var testStoreParser = undefined;
 	
 	StrategoJS.SSL.JSSGLR_GET_PARSER = function(ctx, parsetable)
@@ -804,6 +854,12 @@
 		return a;
 	}
 	
+	StrategoJS.SSL.SSL_loginfo = function(ctx, str)
+	{
+		StrategoJS.info(ctx.factory.stringValue(str));
+		return str;
+	}
+	
 	
 
 	//Call from stratego using <prim("NodeJSDebugger", AAA)>BBB

Modified: strategoxt-javascript-backend/trunk/src/javascript/strategojs.js
==============================================================================
--- strategoxt-javascript-backend/trunk/src/javascript/strategojs.js	Fri Feb 17 12:48:00 2012	(r24330)
+++ strategoxt-javascript-backend/trunk/src/javascript/strategojs.js	Fri Feb 17 14:58:43 2012	(r24331)
@@ -20,7 +20,8 @@
 				return lib[funName];
 			}
 		}
-		throw "function " + funName + " has not be resolved"; 
+		return function () { debugger; }
+		//throw "function " + funName + " could not be resolved"; 
 	}
 	
 	StrategoJS.log = function() {
@@ -31,6 +32,13 @@
 		}
 		return function() {}; 
 	}();
+	
+	
+	
+	StrategoJS.DateInMiliseconds = function(date)
+	{
+		return Date.parse(date)+date.getMilliseconds();
+	}	
 
     var wrap = function(value, prefix) {
         if(value === undefined) {

Modified: strategoxt-javascript-backend/trunk/src/javascript/terms.js
==============================================================================
--- strategoxt-javascript-backend/trunk/src/javascript/terms.js	Fri Feb 17 12:48:00 2012	(r24330)
+++ strategoxt-javascript-backend/trunk/src/javascript/terms.js	Fri Feb 17 14:58:43 2012	(r24331)
@@ -649,7 +649,12 @@
 					return factory.makeEmptyList();
 			},
 
-			match : function(a, b) { print("MATCH " + factory.prettify(a) + " == " + factory.prettify(b)); var r = doEquals(a,b); print(r); return r; },
+			match : function(a, b) { 
+				//print("MATCH " + factory.prettify(a) + " == " + factory.prettify(b)); 
+				var r = doEquals(a,b); 
+				//print(r); 
+				return r; 
+			},
 
 			termType : termType,
 

Modified: strategoxt-javascript-backend/trunk/src/stratego/s2js.str
==============================================================================
--- strategoxt-javascript-backend/trunk/src/stratego/s2js.str	Fri Feb 17 12:48:00 2012	(r24330)
+++ strategoxt-javascript-backend/trunk/src/stratego/s2js.str	Fri Feb 17 14:58:43 2012	(r24331)
@@ -50,12 +50,14 @@
         //; dr-scope-all-verbose(js-compile-spec)
         ; dr-scope-all(js-compile-spec)
       | "Backend transformation succeeded", 1
-      )
+      )
+      
+  
 
 
 
-rules
-	
+rules
+	
   js-compile-spec:
     Specification([Signature([Constructors(ops)]), Strategies(defs)]) ->
     $[

From richard at vogelij.nl  Fri Feb 17 16:32:56 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Fri, 17 Feb 2012 15:32:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24332 - in
	spoofax-ace: . resources/javascript/aceworker
	src/spoofax/ace/generator
Message-ID: <20120217153256.DC5DC7F8158@mx1.tudelft.nl>

Author: rvogelij
Date: Fri Feb 17 15:32:54 2012
New Revision: 24332
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24332&sc=1

Log:
minor changes

Modified:
   spoofax-ace/build.xml
   spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-prepend.js
   spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java

Modified: spoofax-ace/build.xml
==============================================================================
--- spoofax-ace/build.xml	Fri Feb 17 14:58:43 2012	(r24331)
+++ spoofax-ace/build.xml	Fri Feb 17 15:32:54 2012	(r24332)
@@ -22,7 +22,7 @@
                         <arg value="--strctrees"/>
                                 <arg value="${strctrees}"/>
 			<arg value="--wwwout"/>
-				<arg value="wwwroot"/>
+				<arg value="${wwwroot}"/>
 			<arg value="--testsrc"/>
 				<arg value="${testsrc}"/>
 		</java>

Modified: spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-prepend.js
==============================================================================
--- spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-prepend.js	Fri Feb 17 14:58:43 2012	(r24331)
+++ spoofax-ace/resources/javascript/aceworker/worker-spoofax2ace-prepend.js	Fri Feb 17 15:32:54 2012	(r24332)
@@ -1590,10 +1590,22 @@
     
         var value = this.doc.getValue();
         value = value.replace(/^#!.*\n/, "\n");
-        
-        var result = this.analyzer.main(["aap", value]);
+	var result = null;
+	try
+	{
+		result = this.analyzer.main(["aap", value]);
+	}
+	catch (exception)
+	{
+		sender.emit("log", "Error while analyzing: " + exception.message);
+		sender.emit("log", "Stack: " + exception.stack);
+		debugger;
+	}
+
+
         if (result === null)
         {
+		sender.emit("log", "Error while analyzing");
         	working = false;
         	return;
         }

Modified: spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Fri Feb 17 14:58:43 2012	(r24331)
+++ spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Fri Feb 17 15:32:54 2012	(r24332)
@@ -59,8 +59,9 @@
 		final String aceWorkerBin = tmpDir+"/aceworker.js";
 		if (!new File(wwwoutput).canWrite())
 		{
+			System.err.println("No or invalid www output specified (\""+wwwoutput+"\")");
 			wwwoutput = System.getProperty("java.io.tmpdir") + "/s2awwwout/";
-			System.err.println("No or invalid www output specified. Defaulting to: " + wwwoutput);
+			System.err.println("Defaulting to: " + wwwoutput);
 		}
 		
 		BuildStrProgram();

From gabrielkonat at gmail.com  Fri Feb 17 16:47:54 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 17 Feb 2012 15:47:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24333 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/test
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-c...
Message-ID: <20120217154754.CD53C2B802E@mx2.tudelft.nl>

Author: gkonat
Date: Fri Feb 17 15:47:54 2012
New Revision: 24333
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24333&sc=1

Log:
Fixed recursive adjust index lookup calls to not explode with high recursion.
Fixed unresolved elements caching not working.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt	Fri Feb 17 15:32:54 2012	(r24332)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt	Fri Feb 17 15:47:54 2012	(r24333)
@@ -34,7 +34,7 @@
   
   int f() {
     struct B* b;
-    return b.[[i]];
+    return b->[[i]];
   }
 ]] resolve #2 to #1
 
@@ -48,10 +48,10 @@
   typedef B_t_1 B_t_2;
   
   int f() {
-    B_t* b; 
-    return b.[[i]]; 
+    B_t_2* b; 
+    return b->[[i]]; 
   } 
-]] resolve #2 to #1
+]] resolve #2 to #1 
 
 test Resolve local variable [[
   int f() {

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Fri Feb 17 15:32:54 2012	(r24332)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Fri Feb 17 15:47:54 2012	(r24333)
@@ -4,6 +4,7 @@
   include/C-without-macros
   lib/analysis-library
   analysis-generated
+  c_without_macros
   types
 
 rules
@@ -16,11 +17,10 @@
   adjust-index-lookup(is-use |namespace, path, prefix, files):
     Access(e, <is-use>) -> p*
     with
-      //<debug> e;
       if type := <type-of> e then
 	      p* := <try-get-struct-field(|prefix, files)> type
 	    else
-	      p* := []
+	      p* := StopLookup()
 	    end
 
   // Adjust the lookup behavior for variables,

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt	Fri Feb 17 15:32:54 2012	(r24332)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt	Fri Feb 17 15:47:54 2012	(r24333)
@@ -19,14 +19,22 @@
   }
 ]]
 
-test Resolve property access fails [[
+test Resolve property access fails 1 [[
   entity B {
     y : A
     f(a : A) {
-      var v : A = a.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.x
+      var v : A = a.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.y.x.x
     }
   }
-]] 1 error 
+]] 1 error
+
+test Resolve property access fails 2 [[
+  entity B {
+    f(a : A) {
+      var v : A = a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z
+    }
+  }
+]] 25 errors
 
 test Resolve function call [[
   entity B {

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Fri Feb 17 15:32:54 2012	(r24332)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Fri Feb 17 15:47:54 2012	(r24333)
@@ -15,9 +15,9 @@
     PropAccess(e, <is-use>) -> p*
     with
       if TYPE(e-type) := <type-of> e then
-        p* := (<index-lookup-children(|Property(), prefix, files)> e-type)
+        p* := <index-lookup-children(|Property(), prefix, files)> e-type
       else
-        p* := []
+        p* := StopLookup()
       end
       
   // Adjust lookup behavior for entity imports, overriding

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 17 15:32:54 2012	(r24332)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 17 15:47:54 2012	(r24333)
@@ -18,10 +18,12 @@
   BadUse       : List(UriPart) -> Summary
   Read         : List(UriPart) -> Summary
   ReadWildcard : List(UriPart) * String -> Summary
- 
+  
+  StopLookup   : LookupAction
+  
 rules // extension points
  
-  // Should return list of Def(_) and/or [namespace | path]
+  // Should return list of Def(_) and/or [namespace | path] or StopLookup() to stop the lookup
   adjust-index-lookup(is-use |namespace, path, prefix, files) = fail
  
   // adjust-index-select(|namespace, path, use) = fail // (e.g., for imports)
@@ -471,7 +473,7 @@
    * Example:
    *   <index-file-references(?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _))> "fullpath/file.ext" => 
    *     [("fullpath/otherfile.ext", "subfile"), ...]
-   *   <index-file-references(?Use(_, _)> ("fullpath/file.ext", "subfile") => 
+   *   <index-file-references(?Use(_, _))> ("fullpath/file.ext", "subfile") => 
    *     [("fullpath/otherfile.ext", "othersubfile"), ...]
    */
   index-get-file-references(entryFilter):
@@ -563,19 +565,26 @@
   index-lookup(is-adjust-lookup-enabled |namespace, path, prefix, files):
     x -> def
     where
-      index-is-unresolved(|x);
-      def := <fail>
-    <+
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
-      def        := <index-select(|namespace, path, x)>
-    <+
-      // TODO: optimize: try not to call do-adjust-index-lookup from here
-      [_ | path'] := path;
-      def         := <index-lookup(is-adjust-lookup-enabled |namespace, path', prefix, files)> x
-    <+
-      [] := path;
-      index-add-unresolved(|x)
-      
+      if index-is-unresolved(|x, [namespace|path]) then
+        fail
+      else
+	      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
+	      
+	      if <?StopLookup()> candidates then
+	        fail
+	      else
+	        def        := <index-select(|namespace, path, x)>
+	      <+
+		      // TODO: optimize: try not to call do-adjust-index-lookup from here
+		      [_ | path'] := path;
+		      def         := <index-lookup(is-adjust-lookup-enabled |namespace, path', prefix, files)> x
+		    <+
+		      [] := path;
+		      index-add-unresolved(|x, [namespace|path]);
+		      fail
+	      end
+      end
+
   /**
    * Given an annotated AST node, resolves it, returning all its Defs.
    *
@@ -587,15 +596,23 @@
   index-lookup-all(is-adjust-lookup-enabled |namespace, path, prefix, files):
     x -> defs'
     where
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
-      defs       := <index-select-all(|namespace, path, x)>;
-      // TODO: optimize: try not to call do-adjust-index-lookup from here
-      if [_ | path'] := path then
-        defs2 := <index-lookup-all(is-adjust-lookup-enabled |namespace, path', prefix, files)> x;
-        defs' := <conc> (defs, defs2)
+      if index-is-unresolved(|x, [namespace|path]) then
+        fail
       else
-        defs' := defs
-      end
+	      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
+	      defs       := <index-select-all(|namespace, path, x)>;
+	      // TODO: optimize: try not to call do-adjust-index-lookup from here
+	      if [_ | path'] := path then
+	        defs2 := <index-lookup-all(is-adjust-lookup-enabled |namespace, path', prefix, files)> x;
+	        defs' := <conc> (defs, defs2)
+	      else
+	        defs' := defs
+	      end
+	    <+
+	      [] := path;
+	      index-add-unresolved(|x, [namespace|path]);
+	      fail
+    end
  
   /**
    * Given an annotated AST node, returns the outermost Def with a corresponding URI.
@@ -644,14 +661,18 @@
     with
       is-adjusted-lookup-enabled;
       do-adjust-index-lookup(|namespace, path, x, prefix, files);
-      mapconcat(\d at Def(p) -> [d]\
+      if ?StopLookup() then
+        defs := StopLookup()
+      else
+        mapconcat(\d at Def(p) -> [d]\
           <+ \[namespace' | path'] -> <index-lookup-one-level(fail |namespace', path', prefix, files)> x\
-          <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a Def(_) or [namespace | path]"));
-      ?defs
+          <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
+        ?defs
+      end
     <+
       get := Def([namespace | path]);
       defs := <concat> [<index-get-all> get, <index-get-children(|namespace, prefix)> get]
- 
+      
   /**
    * Given an annotated AST node, returns a Def with a common ancestor URI.
    *
@@ -674,7 +695,7 @@
       do-adjust-index-lookup(|namespace, path, x, prefix, files);
       mapconcat(\d at Def(p) -> [d]\
           <+ \[namespace' | path'] -> <index-lookup-all-levels(fail |namespace', path', prefix, files)> x\
-          <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a Def(_) or [namespace | path]"));
+          <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
       ?all-defs
     <+
       one-level := <index-get-children(|namespace, prefix)> Def([namespace | path]);
@@ -787,8 +808,8 @@
     ReadWildcard(_, name) -> <id>
     where <is-substring(!prefix)> name
       
-  index-is-unresolved(|x) = Index-UnresolvedSet; (iset-contains(|x) <+ fail)
-  index-add-unresolved(|x) = (Index-UnresolvedSet; iset-add(|x)) <+ id
+  index-is-unresolved(|x, uri) = Index-UnresolvedSet; (iset-contains(|(x, uri)) <+ fail)
+  index-add-unresolved(|x, uri) = (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
   
   index-file-dependent-construct: 
     Def(uri@[namespace | path]) -> [Read(uri), ReadWildcard([namespace | rest], firstElem), Use(uri, [])]
@@ -799,7 +820,7 @@
     // UNDONE: try(origin-term);
     repeat-until(
       prim("SSL_EXT_get_parent", <id>)
-    , adjust-index-lookup(origin-equal(|use) |namespace, path, prefix, files)
+    , adjust-index-lookup(origin-equal(|use) |namespace, path, prefix, files) 
     )
  
   index-select(|namespace, path, use) =

From gabrielkonat at gmail.com  Fri Feb 17 16:50:01 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 17 Feb 2012 15:50:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24334 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120217155001.188092B8021@mx2.tudelft.nl>

Author: gkonat
Date: Fri Feb 17 15:50:00 2012
New Revision: 24334
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24334&sc=1

Log:
Disable unreferenced element cache for now, some problems with c-without-macros experiment.

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 17 15:47:54 2012	(r24333)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 17 15:50:00 2012	(r24334)
@@ -565,24 +565,15 @@
   index-lookup(is-adjust-lookup-enabled |namespace, path, prefix, files):
     x -> def
     where
-      if index-is-unresolved(|x, [namespace|path]) then
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
+      if <?StopLookup()> candidates then
         fail
       else
-	      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
-	      
-	      if <?StopLookup()> candidates then
-	        fail
-	      else
-	        def        := <index-select(|namespace, path, x)>
-	      <+
-		      // TODO: optimize: try not to call do-adjust-index-lookup from here
-		      [_ | path'] := path;
-		      def         := <index-lookup(is-adjust-lookup-enabled |namespace, path', prefix, files)> x
-		    <+
-		      [] := path;
-		      index-add-unresolved(|x, [namespace|path]);
-		      fail
-	      end
+        def        := <index-select(|namespace, path, x)>
+      <+
+	      // TODO: optimize: try not to call do-adjust-index-lookup from here
+	      [_ | path'] := path;
+	      def         := <index-lookup(is-adjust-lookup-enabled |namespace, path', prefix, files)> x
       end
 
   /**
@@ -596,23 +587,15 @@
   index-lookup-all(is-adjust-lookup-enabled |namespace, path, prefix, files):
     x -> defs'
     where
-      if index-is-unresolved(|x, [namespace|path]) then
-        fail
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
+      defs       := <index-select-all(|namespace, path, x)>;
+      // TODO: optimize: try not to call do-adjust-index-lookup from here
+      if [_ | path'] := path then
+        defs2 := <index-lookup-all(is-adjust-lookup-enabled |namespace, path', prefix, files)> x;
+        defs' := <conc> (defs, defs2)
       else
-	      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
-	      defs       := <index-select-all(|namespace, path, x)>;
-	      // TODO: optimize: try not to call do-adjust-index-lookup from here
-	      if [_ | path'] := path then
-	        defs2 := <index-lookup-all(is-adjust-lookup-enabled |namespace, path', prefix, files)> x;
-	        defs' := <conc> (defs, defs2)
-	      else
-	        defs' := defs
-	      end
-	    <+
-	      [] := path;
-	      index-add-unresolved(|x, [namespace|path]);
-	      fail
-    end
+        defs' := defs
+      end
  
   /**
    * Given an annotated AST node, returns the outermost Def with a corresponding URI.

From gabrielkonat at gmail.com  Fri Feb 17 17:02:44 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 17 Feb 2012 16:02:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24335 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/test
Message-ID: <20120217160244.0FDB5108C040@mx3.tudelft.nl>

Author: gkonat
Date: Fri Feb 17 16:02:43 2012
New Revision: 24335
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24335&sc=1

Log:
Added extra tests for c-without-macros experiment.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Fri Feb 17 15:50:00 2012	(r24334)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Fri Feb 17 16:02:43 2012	(r24335)
@@ -14,20 +14,84 @@
   }
 ]]
 
-test Resolve property access [[
-  int f() {
-    A_t* a;
-    return a->a->i;
+test Resolve var 1 [[
+	char* b(A_t* a) { 
+	  return a->s;
+	}
+]]
+
+test Resolve var 2 fails [[
+	char* b(A_t* a) { 
+	  return a.s;
+	}
+]] 1 error
+
+test Resolve var 3 [[
+	char* b(struct A* a) {
+	  return a->s;
+	}
+]]
+
+test Resolve var 4 fails [[
+	char* b(struct A* a) {
+	  return a.s;
+	}
+]] 1 error
+
+test Resolve var 5 [[
+	char* b(A_t_1* a) {
+	  return a->s;
+	}
+]]
+
+test Resolve var 6 fails [[
+	char* b(A_t_1* a) {
+	  return a.s;
+	}
+]] 1 error
+
+test Resolve var and type 1 fails [[
+	char* b(foo_t_2* a) {
+	  return a->s;
+	}
+]] 2 errors
+
+test Resolve var and type 2 fails [[
+	char* b(foo_t_2* a) {
+	  return a.s;
+	}
+]] 2 errors
+
+test Resolve function call 1 [[
+	int c(A_t* a) {
+	  return malloc(a->i);
+	}
+]]
+
+test Resolve function call 2 fails [[
+  int c(A_t* a) {
+    return malloc();
   }
+]] 1 error
+
+test Resolve function call 3 [[
+	int c(struct A* a) {
+	  return malloc(a->i);
+	}
 ]]
 
-test Resolve property access fails [[ 
-  int f() {
-    A_t* a;
-    return a->a->a->a->a->a->a->a->a->a->a->a->a->k;
+test Resolve function call 4 fails [[
+  int c(struct A* a) {
+    return malloc(a->i, a->i);
   }
 ]] 1 error
 
+test Resolve function call and type fails [[
+	int c(foo_t_2* a) {
+	  return malloc(a);
+	} 
+]] 2 errors
+
 test Resolve function call [[
   A_t* f() {
     A_t* a;

From M.A.Akhter at student.tudelft.nl  Fri Feb 17 17:15:59 2012
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Fri, 17 Feb 2012 16:15:59 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24336 - in
	spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax:
	. editor/java/org/strategoxt/imp/editors/spoofax/ui/handlers
Message-ID: <20120217161559.0EB807F816B@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Fri Feb 17 16:15:58 2012
New Revision: 24336
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24336&sc=1

Log:
disabling the delete menu in Spoofaxlang Explorer

Modified:
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/handlers/SpoofaxlangDeleteHandler.java
   spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/plugin.xml

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/handlers/SpoofaxlangDeleteHandler.java
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/handlers/SpoofaxlangDeleteHandler.java	Fri Feb 17 16:02:43 2012	(r24335)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/editor/java/org/strategoxt/imp/editors/spoofax/ui/handlers/SpoofaxlangDeleteHandler.java	Fri Feb 17 16:15:58 2012	(r24336)
@@ -12,7 +12,7 @@
 		ISelection currentSelection = HandlerUtil.getCurrentSelection(event);
 
 		//TODO  IMPLEMENT : SPOOFAXLANG SPECIFIC DELETE  
-		System.out.println("Delete " + currentSelection);
+		System.out.println("TODO : Delete " + currentSelection + ". currently it is not implemetned. ");
 		
 		return null;
 	}

Modified: spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/plugin.xml
==============================================================================
--- spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/plugin.xml	Fri Feb 17 16:02:43 2012	(r24335)
+++ spoofax-imp/branches/adil-thesis-demo/org.strategoxt.imp.editors.spoofax/plugin.xml	Fri Feb 17 16:15:58 2012	(r24336)
@@ -143,11 +143,6 @@
                   definitionId="org.strategoxt.imp.editors.spoofax.ui.handlers.SpoofaxlangDeleteHandler.elementSelected.module">
             </reference>
          </activeWhen>
-         <enabledWhen>
-            <reference
-                  definitionId="org.strategoxt.imp.editors.spoofax.ui.handlers.SpoofaxlangDeleteHandler.elementSelected.module">
-            </reference>
-         </enabledWhen>
       </handler>
       
       <!-- Refresh handlers -->  

From L.C.L.Kats at tudelft.nl  Fri Feb 17 17:39:53 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Feb 2012 16:39:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24337 -
	spoofax-imp/branches/spoofax-testing-automation
Message-ID: <20120217163953.DD232CC27B@mx4.tudelft.nl>

Author: LennartKats
Date: Fri Feb 17 16:39:53 2012
New Revision: 24337
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24337&sc=1

Log:
new branch for automated testing project

Added:
   spoofax-imp/branches/spoofax-testing-automation/
      - copied from r24336, spoofax-imp/trunk/org.strategoxt.imp.testing/

From L.C.L.Kats at tudelft.nl  Fri Feb 17 18:25:54 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Feb 2012 17:25:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24338 - in
	spoofax-imp/trunk/org.strategoxt.imp.testing:
	editor/java/org/strategoxt/imp/testing trans
Message-ID: <20120217172554.5E0DA108C033@mx3.tudelft.nl>

Author: LennartKats
Date: Fri Feb 17 17:25:53 2012
New Revision: 24338
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24338&sc=1

Log:
possible fix for content completion inconsistency with regular editors

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/FragmentParser.java
   spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/SelectionFetcher.java
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/FragmentParser.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/FragmentParser.java	Fri Feb 17 16:39:53 2012	(r24337)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/FragmentParser.java	Fri Feb 17 17:25:53 2012	(r24338)
@@ -126,7 +126,8 @@
 				result.setUseRecovery(true);
 				return result;
 			} else {
-				throw new IllegalStateException("SGLRParseController expected: " + controller.getClass().getName());
+				throw new IllegalStateException(
+					new BadDescriptorException("SGLRParseController expected: " + controller.getClass().getName()));
 			}
 		} catch (BadDescriptorException e) {
 			Environment.logWarning("Could not load parser for testing language");

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/SelectionFetcher.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/SelectionFetcher.java	Fri Feb 17 16:39:53 2012	(r24337)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/SelectionFetcher.java	Fri Feb 17 17:25:53 2012	(r24338)
@@ -1,5 +1,6 @@
 package org.strategoxt.imp.testing;
 
+import static org.spoofax.interpreter.core.Tools.termAt;
 import static org.spoofax.jsglr.client.imploder.AbstractTokenizer.getTokenAfter;
 import static org.spoofax.jsglr.client.imploder.AbstractTokenizer.getTokenBefore;
 import static org.spoofax.jsglr.client.imploder.IToken.TK_ESCAPE_OPERATOR;
@@ -27,6 +28,27 @@
 	
 	public IStrategoList fetch(IStrategoTerm parsedFragment) {
 		final List<IStrategoTerm> results = new ArrayList<IStrategoTerm>();
+		/*
+		if (getTokenizer(parsedFragment) == null && "Error".equals(Term.tryGetName(parsedFragment))) {
+			parsedFragment = termAt(parsedFragment, 0);
+		}
+		AstNodeLocator locator = new AstNodeLocator();
+		IToken left = getLeftToken(parsedFragment);
+		IToken right = getRightToken(parsedFragment);
+		IToken quoteOpenToken = null;
+		if (left == null) // parse error
+			return Environment.getTermFactory().makeList();
+		for (IToken token = left; token != right; token = getTokenAfter(token)) {
+			if (isOpenQuote(token)) {
+				quoteOpenToken = token;
+			} else if (isCloseQuote(token)) {
+				IStrategoTerm result = locator.findNode(parsedFragment, quoteOpenToken.getEndOffset() + 1, token.getStartOffset() - 1);
+				results.add(result == null ? parsedFragment : result);
+			}
+		}
+		return Environment.getTermFactory().makeList(results);
+		*/
+
 		new TermVisitor() {
 			IStrategoTerm unclosedChild;
 			IToken unclosedLeft;
@@ -39,7 +61,7 @@
 					if (isCloseQuote(right) && isNoQuoteBetween(left, right)) {
 						if (right != lastCloseQuote) {
 							lastCloseQuote = right;
-							results.add(term);
+							results.add(getMatchingDescendant(term));
 						}
 					} else if (unclosedChild == null) {
 						unclosedChild = term;
@@ -60,6 +82,17 @@
 		}.visit(parsedFragment);
 		return Environment.getTermFactory().makeList(results);
 	}
+	
+	private static IStrategoTerm getMatchingDescendant(IStrategoTerm term) {
+		IToken left = getLeftToken(term);
+		IToken right = getRightToken(term);
+		for (int i = 0; i < term.getSubtermCount(); i++) {
+			IStrategoTerm child = termAt(term, i);
+			if (getLeftToken(child) == left && getRightToken(child) == right)
+				return getMatchingDescendant(child);
+		}
+		return term;
+	}
 
 	protected boolean isOpenQuote(IToken left) {
 		return left != null && left.getKind() == TK_ESCAPE_OPERATOR && isQuoteOpenText(left.toString());

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str	Fri Feb 17 16:39:53 2012	(r24337)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/spoofax_testing.str	Fri Feb 17 17:25:53 2012	(r24338)
@@ -245,9 +245,11 @@
     get-service-input-term(|<LastAnalyzedAst>)
 
   get-service-input-term-without-ancestor:
-    term -> (term, position, ast, path, project-path)
+    term -> (term', position, ast, path, project-path)
     where
-      (_, position, ast, path, project-path) := <get-service-input-term>
+      (term-with-ancestor, position, ast, path, project-path) := <get-service-input-term>;
+      (term' := <collect-one(origin-equal(|term))> term-with-ancestor
+       <+ term' := term-with-ancestor)
 
   get-service-input-term-refactoring =
     get-service-input-term-refactoring(|<LastAnalyzedAst>)

From L.C.L.Kats at tudelft.nl  Fri Feb 17 18:34:53 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Feb 2012 17:34:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24339 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder
Message-ID: <20120217173453.BB53A7F80B4@mx1.tudelft.nl>

Author: LennartKats
Date: Fri Feb 17 17:34:53 2012
New Revision: 24339
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24339&sc=1

Log:
disabled Tokenizer.getTokenAt assertion since it doesn't always hold for testing language streams

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/Tokenizer.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/Tokenizer.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/Tokenizer.java	Fri Feb 17 17:25:53 2012	(r24338)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/imploder/Tokenizer.java	Fri Feb 17 17:34:53 2012	(r24339)
@@ -79,7 +79,9 @@
 	
 	public Token getTokenAt(int i) {
 		Token result = tokens.get(i);
-		assert i == 0 || result.getIndex() == i;
+		// Disabled: might fail for testing language token sequences
+		//           (e.g., self-application.spt)
+		// assert i == 0 || result.getIndex() == i;
 		return result;
 	}
 	

From L.C.L.Kats at tudelft.nl  Fri Feb 17 18:36:25 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Feb 2012 17:36:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24340 -
	spoofax-imp/trunk/experimental/NamingExperiment/trans
Message-ID: <20120217173625.01D532B8008@mx2.tudelft.nl>

Author: LennartKats
Date: Fri Feb 17 17:36:24 2012
New Revision: 24340
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24340&sc=1

Log:
disabled silly reference resolving hack

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Fri Feb 17 17:34:53 2012	(r24339)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Fri Feb 17 17:36:24 2012	(r24340)
@@ -15,6 +15,7 @@
   refactorings
   analysis-manual
   analysis-generated
+  libstratego-xtc
 
 rules // Main editor interface (defined by editor/NamingExperiment-Builders and -References.esv)
   
@@ -87,13 +88,9 @@
   editor-resolve:
     (node, position, ast, path, project-path) -> target
     where
-      if <is-test-file> path then
-        // HACK: Workaround for testing language selecting wrong node to resolve
-        !node => <collect-one(?subnode{[_|_]})>
-      else
-        !node => subnode
-      end;
-      def     := <index-lookup> subnode;
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path]);
+      def     := <index-lookup> node;
       target  := def
 
   // Returns "hover help" information for a particular node in the editor.
@@ -102,6 +99,8 @@
     (target, position, ast, path, project-path) -> $[[def-path'']]
     where
       // FIXME: this only works for definition paths
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path]);
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
       def-path'  := <take-until(?Anon(_))> def-path;

From L.C.L.Kats at tudelft.nl  Fri Feb 17 18:38:03 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 17 Feb 2012 17:38:03 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24341 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
	spoofax-imp/trunk/experimental/NamingExperiment/test
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.lang...
Message-ID: <20120217173803.1326F7F8009@mx1.tudelft.nl>

Author: LennartKats
Date: Fri Feb 17 17:38:02 2012
New Revision: 24341
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24341&sc=1

Log:
added a current-file argument to index-setup, which can be retrieved using index-get-current-file

Added:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_current_file.java
Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/test/index-serialization.spt
   spoofax-imp/trunk/experimental/NamingExperiment/test/test2.spt
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_setup.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LanguageLibrary.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 17 17:36:24 2012	(r24340)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 17 17:38:02 2012	(r24341)
@@ -634,10 +634,12 @@
     x{[namespace | path]} -> <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix, files)>
  
   /**
-   * Given an annotated AST node, returns a Def that has the same parent URI.
+   * Given an annotated AST node, resolves it, and
+   * returns all possibly matching Defs with a common ancestor URI. 
    *
-   * @param prefix    Only Defs with a name that starts with this
-   *                  string are returned.
+   * @param namespace Only Defs with this namespace are returned.
+   * @param prefix    Indicates that only Defs with a name that starts with this
+   *                  string are demanded.
    */
   index-lookup-one-level(is-adjusted-lookup-enabled |namespace, path, prefix, files):
     x{_} -> defs
@@ -657,19 +659,22 @@
       defs := <concat> [<index-get-all> get, <index-get-children(|namespace, prefix)> get]
       
   /**
-   * Given an annotated AST node, returns a Def with a common ancestor URI.
+   * Given an annotated AST node, resolves it, and
+   * returns all possibly matching Defs with a common ancestor URI. 
    *
-   * @param prefix    Only Defs with a name that starts with this
-   *                  string are returned.
+   * @param namespace Only Defs with this namespace are returned.
+   * @param prefix    Indicates that only Defs with a name that starts with this
+   *                  string are demanded.
    */
   index-lookup-all-levels(|prefix, files):
     x{[namespace | path]} -> <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, prefix, files)>
  
   /**
-   * Given an annotated AST node, returns a Def with a common ancestor URI.
+   * Given an annotated AST node, resolves it, and
+   * returns all possibly matching Defs with a common ancestor URI. 
    *
-   * @param prefix    Only Defs with a name that starts with this
-   *                  string are returned.
+   * @param prefix    Indicates that only Defs with a name that starts with this
+   *                  string are demanded.
    */
   index-lookup-all-levels(is-adjust-lookup-enabled |namespace, path, prefix, files):
     x{_} -> all-defs
@@ -690,10 +695,12 @@
  
   /** @Deprecated */
   index-lookup-contained(|namespace, prefix) =
+    obsolete(!"index-lookup-contained; use index-lookup-children");
     index-lookup-children(|namespace, prefix, [])
    
   /** @Deprecated */
   index-lookup-contained-all-levels(|namespace, name) =
+    obsolete(!"index-lookup-contained-all-levels; use index-lookup-descendants");
     index-lookup-descendants(|namespace, name, [])
  
   /**
@@ -704,7 +711,7 @@
    * @param prefix    Only child Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-children(|namespace, prefix, files):
+  index-lookup-children(|namespace, prefix, files): // TODO: how does this compare w/ index-lookup-one-level?
     x{[ns | path]} -> defs
     with
       if !ns => Unresolved(_) then

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Fri Feb 17 17:36:24 2012	(r24340)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Fri Feb 17 17:38:02 2012	(r24341)
@@ -24,13 +24,17 @@
   
 rules // Index management
    
+  index-setup(|language, project-paths) =
+    obsolete(!"index-setup(|language, project-paths); use index-setup(|language, project-paths, current-file)");
+    index-setup(|language, project-paths, ".")
+    
   /**
    * Sets up the index library for given language and project paths.
    * Must be called once before doing anything with the library.
    */
-  index-setup(|language, project-paths) =
+  index-setup(|language, project-paths, current-file) =
     project-path;
-    prim("LANG_index_setup", language, project-paths)
+    prim("LANG_index_setup", language, project-paths, current-file)
 
   /**
    * Adds all given elements to the index with given file path and optionally subfile.
@@ -88,6 +92,9 @@
   index-get-all-files =
     prim("LANG_index_all_files")
   
+  index-get-current-file =
+    prim("LANG_index_current_file")
+  
   /**
    * Gets all index entries for the given file path and optionally subfile.
    *

Modified: spoofax-imp/trunk/experimental/NamingExperiment/test/index-serialization.spt
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/test/index-serialization.spt	Fri Feb 17 17:36:24 2012	(r24340)
+++ spoofax-imp/trunk/experimental/NamingExperiment/test/index-serialization.spt	Fri Feb 17 17:38:02 2012	(r24341)
@@ -17,15 +17,14 @@
   <index-add-all(|"/foo")> [Def([Def(), "newdef"])];
   index-commit;
   
-  prim("LANG_index_setup", "NamingExperiment", ["/tmp/test-serialization2"]);
+  index-setup(|"NamingExperiment", ["/tmp/test-serialization2"]);
   <index-get-all> Def([Def(), "newdef"]) => [];
     
-  prim("LANG_index_setup", "NamingExperiment", ["/tmp/test-serialization"]);
+  index-setup(|"NamingExperiment", ["/tmp/test-serialization"]);
   <index-get-all> Def([Def(), "newdef"]) => [_]
 
 test Load, copy, load from disk (bypass in-memory cache)
-  <call> ("cp", ["-r", "/tmp/test-serialization", "/tmp/test-serialization-copy"]);
-  prim("LANG_index_setup", "NamingExperiment", ["/tmp/test-serialization-copy"]); 
-  
+  <call> ("cp", ["-r", "/tmp/test-serialization/.cache", "/tmp/test-serialization-copy"]);
+  index-setup(|"NamingExperiment", ["/tmp/test-serialization-copy"]); 
   <index-get-all> Def([Def(), "newdef"]) => [_]
   
\ No newline at end of file

Modified: spoofax-imp/trunk/experimental/NamingExperiment/test/test2.spt
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/test/test2.spt	Fri Feb 17 17:36:24 2012	(r24340)
+++ spoofax-imp/trunk/experimental/NamingExperiment/test/test2.spt	Fri Feb 17 17:38:02 2012	(r24341)
@@ -2,9 +2,13 @@
 
 language NamingExperiment
 
-test Resolve local variable [[
-  module M2t
+
+setup [[
   
+  module M
+]]
+
+test Resolve local variable [[
   entity B {
     f() {
       var [[a]] : B

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_current_file.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_current_file.java	Fri Feb 17 17:38:02 2012	(r24341)
@@ -0,0 +1,24 @@
+package org.spoofax.interpreter.library.language;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.AbstractPrimitive;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+
+public class LANG_index_get_current_file extends AbstractPrimitive {
+
+	private static String NAME = "LANG_index_all_files";
+	
+	private final SemanticIndexManager index;
+	
+	public LANG_index_get_current_file(SemanticIndexManager index) {
+		super(NAME, 0, 0);
+		this.index = index;
+	}
+
+	@Override
+	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+		env.setCurrent(index.getCurrentFile().toTerm(env.getFactory()));
+		return true;
+	}
+}

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_setup.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_setup.java	Fri Feb 17 17:36:24 2012	(r24340)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_setup.java	Fri Feb 17 17:38:02 2012	(r24341)
@@ -22,7 +22,7 @@
 	private final SemanticIndexManager index;
 	
 	public LANG_index_setup(SemanticIndexManager index) {
-		super(NAME, 0, 2);
+		super(NAME, 0, 3);
 		this.index = index;
 	}
 
@@ -30,12 +30,15 @@
 	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
 		IStrategoString language = (IStrategoString) tvars[0];
 		IStrategoList projectPaths = (IStrategoList) tvars[1];
+		IStrategoTerm fileTerm = tvars[2];
 		if (projectPaths.size() != 1) {
 			throw new NotImplementedException("Multiple project paths");
 		}
 		IOAgent agent = SSLLibrary.instance(env).getIOAgent();
 		SemanticIndexFile project = SemanticIndexFile.fromTerm(agent, projectPaths.head());
-		index.loadIndex(asJavaString(language), project.getURI(), env.getFactory(), agent); 
+		SemanticIndexFile file = SemanticIndexFile.fromTerm(agent, fileTerm);
+		index.loadIndex(asJavaString(language), project.getURI(), env.getFactory(), agent);
+		index.setCurrentFile(file);
 		index.getCurrent().initialize(env.getFactory(), agent);
 		return true;
 	}

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LanguageLibrary.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LanguageLibrary.java	Fri Feb 17 17:36:24 2012	(r24340)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LanguageLibrary.java	Fri Feb 17 17:38:02 2012	(r24341)
@@ -27,6 +27,7 @@
 		add(new LANG_index_setup(index));
 		add(new LANG_index_commit(index));
 		add(new LANG_index_get_files_newer_than(index));
+		add(new LANG_index_get_current_file(index));
 		
 		addSpxIndexPrimitives();
 	}

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Fri Feb 17 17:36:24 2012	(r24340)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexFile.java	Fri Feb 17 17:38:02 2012	(r24341)
@@ -22,9 +22,6 @@
  */
 public class SemanticIndexFile {
 	
-	@Deprecated
-	public static final String DEFAULT_DESCRIPTOR = null;
-	
 	private final List<SemanticIndexEntry> entries = new ArrayList<SemanticIndexEntry>();
 
 	private final URI uri;

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java	Fri Feb 17 17:36:24 2012	(r24340)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexManager.java	Fri Feb 17 17:38:02 2012	(r24341)
@@ -26,6 +26,8 @@
 	
 	private String currentLanguage;
 	
+	private SemanticIndexFile currentFile;
+	
 	/**
 	 * Indices by language and project. Access requires a lock on {@link #getSyncRoot}
 	 */
@@ -39,6 +41,17 @@
 		return current;
 	}
 	
+	public SemanticIndexFile getCurrentFile() {
+		if (!isInitialized())
+			throw new IllegalStateException("No semantic index has been set-up, use index-setup(|language, project-paths) to set up the index before use.");
+		
+		return currentFile;
+	}
+	
+	public void setCurrentFile(SemanticIndexFile currentFile) {
+		this.currentFile = currentFile;
+	}
+	
 	private static Object getSyncRoot() {
 		return SemanticIndexManager.class;
 	}

From m.dejonge at tudelft.nl  Sun Feb 19 22:31:13 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Sun, 19 Feb 2012 21:31:13 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24342 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client
Message-ID: <20120219213113.20AA0108C006@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Sun Feb 19 21:31:12 2012
New Revision: 24342
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24342&sc=1

Log:
bugfix

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/NewStructureSkipper.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/NewStructureSkipper.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/NewStructureSkipper.java	Fri Feb 17 17:38:02 2012	(r24341)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/NewStructureSkipper.java	Sun Feb 19 21:31:12 2012	(r24342)
@@ -241,9 +241,9 @@
             }
             indexEnd++;
         }         
-        IndentInfo endSkip=IndentInfo.cloneIndentInfo(getHistory().getLine(indexEnd));
-        if(indexStart<0)
+        if(indexStart<0 || indexEnd > getHistory().getIndexLastLine())
             return prevRegions;
+        IndentInfo endSkip=IndentInfo.cloneIndentInfo(getHistory().getLine(indexEnd));
         IndentInfo startSkip=IndentInfo.cloneIndentInfo(getHistory().getLine(indexStart));
         StructureSkipSuggestion previousRegion=new StructureSkipSuggestion();
         previousRegion.setSkipLocations(startSkip, endSkip, indexStart, indexEnd);

From m.dejonge at tudelft.nl  Sun Feb 19 23:32:56 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Sun, 19 Feb 2012 22:32:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24343 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util
Message-ID: <20120219223256.89357CC05A@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Sun Feb 19 22:32:55 2012
New Revision: 24343
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24343&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/layout-adaption.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/layout-adaption.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/layout-adaption.str	Sun Feb 19 21:31:12 2012	(r24342)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/layout-adaption.str	Sun Feb 19 22:32:55 2012	(r24343)
@@ -33,10 +33,10 @@
 		end-offset   := <origin-deletion-end-offset> origin-elems
 		
 create-textchange-replace(pp, override-reconstruction, resugar):
-	(origin-node, new-node) -> (start-offset, end, indented-text)
+	(origin-node, new-node) -> (start-offset, end-offset, indented-text)
 	where  
 		start-offset := <origin-start-offset> origin-node;
-		end   := <origin-end-offset> origin-node;
+		end-offset   := <origin-end-offset> origin-node;
 		text  := <construct-text(pp, override-reconstruction, resugar)> new-node;
 		indented-text := <adapt-indentation(|origin-node)> text
 

From richard at vogelij.nl  Mon Feb 20 04:00:41 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Mon, 20 Feb 2012 03:00:41 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24344 -
	strategoxt-javascript-backend/trunk/src/javascript
Message-ID: <20120220030041.301B72B8009@mx2.tudelft.nl>

Author: rvogelij
Date: Mon Feb 20 03:00:40 2012
New Revision: 24344
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24344&sc=1

Log:
-Improved sglr token -> stratego terms storage
-Fixed bug in strjs which rose in mobl testcase

Modified:
   strategoxt-javascript-backend/trunk/src/javascript/ssl.js
   strategoxt-javascript-backend/trunk/src/javascript/terms.js

Modified: strategoxt-javascript-backend/trunk/src/javascript/ssl.js
==============================================================================
--- strategoxt-javascript-backend/trunk/src/javascript/ssl.js	Sun Feb 19 22:32:55 2012	(r24343)
+++ strategoxt-javascript-backend/trunk/src/javascript/ssl.js	Mon Feb 20 03:00:40 2012	(r24344)
@@ -809,7 +809,17 @@
 					{
 						editortoken = errterm.editortoken;
 						if (editortoken === undefined)
-							errterm = errterm.getSubterm(0);
+						{
+							if (errterm.annoType)
+								errterm = errterm.term;
+							else if (errterm.getSubterm !== undefined)
+								errterm = errterm.getSubterm(0);
+							else
+							{
+								trace("tokenizer error: '" + error.head[1] + "' could not be bound to a term.");
+								break;
+							}
+						}
 					}
 					
 					

Modified: strategoxt-javascript-backend/trunk/src/javascript/terms.js
==============================================================================
--- strategoxt-javascript-backend/trunk/src/javascript/terms.js	Sun Feb 19 22:32:55 2012	(r24343)
+++ strategoxt-javascript-backend/trunk/src/javascript/terms.js	Mon Feb 20 03:00:40 2012	(r24344)
@@ -689,13 +689,6 @@
 			
 			setEditorToken : function(term, token)
 			{
-				
-				if (typeof(term) === "string")
-				{
-					term = new String(term);
-					term.termType = STRING;
-				}
-				
 				term.editortoken = token;
 				return term;
 			}

From gabrielkonat at gmail.com  Mon Feb 20 10:53:04 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 20 Feb 2012 09:53:04 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24345 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
Message-ID: <20120220095304.BE6AF7F8064@mx1.tudelft.nl>

Author: gkonat
Date: Mon Feb 20 09:53:03 2012
New Revision: 24345
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24345&sc=1

Log:
Added missing file..

Added:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/desugar.str

Added: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/desugar.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/desugar.str	Mon Feb 20 09:53:03 2012	(r24345)
@@ -0,0 +1,16 @@
+module desugar
+
+imports
+  include/C-without-macros
+  lib/index-library
+  lib/analysis-library
+  analysis-generated
+
+strategies
+        
+  desugar-all = innermost(desugar)
+
+rules
+  
+  desugar:
+    DerefAccess(e, p) -> Access(Deref(e), p)
\ No newline at end of file

From gabrielkonat at gmail.com  Mon Feb 20 12:01:39 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 20 Feb 2012 11:01:39 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24346 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/test
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-c...
Message-ID: <20120220110139.557687F8098@mx1.tudelft.nl>

Author: gkonat
Date: Mon Feb 20 11:01:39 2012
New Revision: 24346
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24346&sc=1

Log:
Fixed incorrect name of LANG_index_get_current_file primitive.
Removed files passing in lookup rules.
Updated everything to use new index-setup.
Removed the resolving hack.

Deleted:
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/simple.cwi
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/unreferenced_benchmark.cwi
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_current_file.java

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Mon Feb 20 11:01:39 2012	(r24346)
@@ -39,12 +39,16 @@
 ]] 1 error
 
 test Resolve var 5 [[
+  typedef A_t A_t_1;
+  
 	char* b(A_t_1* a) {
 	  return a->s;
 	}
 ]]
 
 test Resolve var 6 fails [[
+  typedef A_t A_t_1;
+  
 	char* b(A_t_1* a) {
 	  return a.s;
 	}

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -14,16 +14,16 @@
   
   // Adjust the lookup behavior for properties,
   // overriding the lookup with a list of property Defs
-  adjust-index-lookup(is-use |namespace, path, prefix, files):
+  adjust-index-lookup(is-use |namespace, path, prefix):
     Access(e, <is-use>) -> p*
     with
       if type := <type-of> e then
-	      p* := <try-get-struct-field(|prefix, files)> type
+	      p* := <try-get-struct-field(|prefix)> type
 	    else
 	      p* := StopLookup()
 	    end
 
   // Adjust the lookup behavior for variables,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, prefix, files):
+  adjust-index-lookup(is-use |namespace, path, prefix):
     VarRef(<is-use>) -> [[Var() | path], [Field() | path]]

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -56,6 +56,8 @@
   index-allfiles:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
       
@@ -63,13 +65,9 @@
   editor-resolve:
     (node, position, ast, path, project-path) -> target
     where
-      if <is-test-file> path then
-      	// HACK: Workaround for testing language selecting wrong node to resolve
-        !node => <collect-one(?subnode{[_|_]})>
-      else
-      	!node => subnode
-      end;
-      def     := <index-lookup> subnode;
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      def     := <index-lookup> node;
       target  := def
 
   // Returns "hover help" information for a particular node in the editor.
@@ -78,6 +76,8 @@
     (target, position, ast, path, project-path) -> $[[def-path'']]
     where
       // FIXME: this only works for definition paths
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
       def-path'  := <take-until(?Anon(_))> def-path;
@@ -93,7 +93,7 @@
       x                 := <collect-one(?COMPLETION(_))> ast';
       COMPLETION(name)	:= x;
       (
-        proposals       := <index-lookup-all-levels(|name, [($[[project-path]/[path]], "")])> x 
+        proposals       := <index-lookup-all-levels(|name)> x 
       <+ 
         proposals 			:= []
       );

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -154,12 +154,12 @@
   try-lookup-struct = 
     try(sometd(\TYPE(_{uri}) -> TYPE(<lookup-struct> uri)\))
     
-  try-get-struct-field(|prefix, files) =
+  try-get-struct-field(|prefix) =
     switch id
       case ?Struct(TYPE(t)) :
-        (<index-lookup-children(|Field(), prefix, files)> t) <+ ![]
+        (<index-lookup-children(|Field(), prefix)> t) <+ ![]
       case ?TYPE(_{uri}) :
-        (<index-lookup-children(|Field(), prefix, files)> <lookup-struct> uri) <+ ![]
+        (<index-lookup-children(|Field(), prefix)> <lookup-struct> uri) <+ ![]
       otherwise: 
         ![]
     end

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -14,21 +14,21 @@
   
   // Adjust the lookup behavior for fields, overriding the lookup with a list of field Defs.
   // TODO: Also return method names here? Because both have the same kind of syntax.
-  adjust-index-lookup(is-use |namespace, path, prefix, files):
+  adjust-index-lookup(is-use |namespace, path, prefix):
     FieldAccess(e, <is-use>) -> f*
     with
 	  if TYPE(e-type) := <type-of> e then
-        f* := <index-lookup-children(|Field(), prefix, files)> e-type
+        f* := <index-lookup-children(|Field(), prefix)> e-type
       else
         f* := []
       end
       
   // Adjust the lookup behavior for method calls, overriding the lookup with a list of method Defs
-  adjust-index-lookup(is-use |namespace, path, prefix, files):
+  adjust-index-lookup(is-use |namespace, path, prefix):
     MethodCall(e, <is-use>) -> m*
     with
 	  if TYPE(e-type) := <type-of> e then
-        m* := <index-lookup-children(|Method(), prefix, files)> e-type
+        m* := <index-lookup-children(|Method(), prefix)> e-type
       else
         m* := []
       end

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -52,6 +52,8 @@
   index-allfiles:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
   
@@ -59,13 +61,9 @@
   editor-resolve:
     (node, position, ast, path, project-path) -> target
     where
-      if <is-test-file> path then
-        // HACK: Workaround for testing language selecting wrong node to resolve
-        !node => <collect-one(?subnode{[_|_]})>
-      else
-        !node => subnode
-      end;
-      def     := <index-lookup> subnode;
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      def     := <index-lookup> node;
       target  := def
 
   // Returns "hover help" information for a particular node in the editor.
@@ -74,6 +72,8 @@
     (target, position, ast, path, project-path) -> $[[def-path'']]
     where
       // FIXME: this only works for definition paths
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
       def-path'  := <take-until(?Anon(_))> def-path;
@@ -89,7 +89,7 @@
       x                 := <collect-one(?COMPLETION(_))> ast';
       COMPLETION(name)  := x;
       (
-        proposals       := <index-lookup-all-levels(|name, [($[[project-path]/[path]], "")])> x 
+        proposals       := <index-lookup-all-levels(|name)> x
       <+ 
         proposals 			:= []
       );

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -11,40 +11,40 @@
   
   // Adjust the lookup behavior for properties,
   // overriding the lookup with a list of property Defs
-  adjust-index-lookup(is-use |namespace, path, prefix, files):
+  adjust-index-lookup(is-use |namespace, path, prefix):
     PropAccess(e, <is-use>) -> p*
     with
       if TYPE(e-type) := <type-of> e then
-        p* := <index-lookup-children(|Property(), prefix, files)> e-type
+        p* := <index-lookup-children(|Property(), prefix)> e-type
       else
         p* := StopLookup()
       end
       
   // Adjust lookup behavior for entity imports, overriding
   // the lookup with a lookup in the parent module.
-  adjust-index-lookup(is-use |namespace, path, prefix, files):
+  adjust-index-lookup(is-use |namespace, path, prefix):
     EntityImport(mod, <is-use>) -> e
     with
-      e := <index-lookup-children(|Entity(), prefix, files)> mod
+      e := <index-lookup-children(|Entity(), prefix)> mod
 
   // Adjust the lookup behavior for variables,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, prefix, files):
+  adjust-index-lookup(is-use |namespace, path, prefix):
     Var(<is-use>) -> [[Var() | path], [Property() | path]]
     
   // Why is this needed? shouldn't the Var() adjust handle this?
   // Adjust the lookup behavior for assignments,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, prefix, files):
+  adjust-index-lookup(is-use |namespace, path, prefix):
     Assign(<is-use>, _) -> [[Var() | path], [Property() | path]]
 
   // Adjust the lookup behavior for types (TODO: Add built-in types),
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, prefix, files): 
+  adjust-index-lookup(is-use |namespace, path, prefix): 
     Type(<is-use>) -> <conc> ([[Entity() | path]], importPaths)
-    where
+    with
       // TODO: Don't use index-get-all-in-file.
-      importPaths := <filter(import-to-path)> <mapconcat(index-get-all-in-file)> files
+      importPaths := <filter(import-to-path)> <index-get-all-in-file> <index-get-current-file>
         
   import-to-path:
     Def([Import(), WildcardImport(mod)|_]) -> [Entity(), mod]
@@ -55,11 +55,11 @@
   // Adjust the lookup behavior for function calls,
   // selecting a function with matching parameter types
   // (if this fails, the normal lookup behavior is used!)
-  adjust-index-lookup(is-use |namespace, path, prefix, files):
+  adjust-index-lookup(is-use |namespace, path, prefix):
     Call(<is-use>, args) -> def
     where
       arg-types := <map(type-of)> args;
-      all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix, files)>;
+      all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix)>;
       def       := <getfirst(is-params-compatible(|arg-types))>
       
   // Add Type to the constructors to check for differences.

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -53,6 +53,8 @@
   index-allfiles:
     (selected, position, ast, path, project-path) -> (filename, result)
     with
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
       
@@ -60,13 +62,9 @@
   editor-resolve:
     (node, position, ast, path, project-path) -> target
     where
-      if <is-test-file> path then
-        // HACK: Workaround for testing language selecting wrong node to resolve
-        !node => <collect-one(?subnode{[_|_]})>
-      else
-        !node => subnode
-      end;
-      def     := <index-lookup> subnode;
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      def     := <index-lookup> node;
       target  := def
 
   // Returns "hover help" information for a particular node in the editor.
@@ -75,6 +73,8 @@
     (target, position, ast, path, project-path) -> $[[def-path'']]
     where
       // FIXME: this only works for definition paths
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
       def-path'  := <take-until(?Anon(_))> def-path;
@@ -90,7 +90,7 @@
       x                 := <collect-one(?COMPLETION(_))> ast';
       COMPLETION(name)  := x;
       (
-        proposals       := <index-lookup-all-levels(|name, [($[[project-path]/[path]], "")])> x 
+        proposals       := <index-lookup-all-levels(|name)> x
       <+ 
         proposals       := []
       );

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -24,7 +24,7 @@
 rules // extension points
  
   // Should return list of Def(_) and/or [namespace | path] or StopLookup() to stop the lookup
-  adjust-index-lookup(is-use |namespace, path, prefix, files) = fail
+  adjust-index-lookup(is-use |namespace, path, prefix) = fail
  
   // adjust-index-select(|namespace, path, use) = fail // (e.g., for imports)
  
@@ -108,7 +108,7 @@
     (ast, path, project-path) -> AnalysedResult(ast5, defs, uses, data', added, removed)
     with
       // Init
-      index-setup(|language, [project-path])
+      index-setup(|language, [project-path], full-path)
     with
     	// Store copy of elements for diff and clear file
       oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> full-path;
@@ -131,12 +131,12 @@
         <index-add-all(|full-path)> data;
 
         // Resolve an references in DefData (using what we just stored)
-        (data', data-uses) := <analyze-uses(|[(full-path, "")])> data;
+        (data', data-uses) := <analyze-uses> data;
         <index-remove-all(|full-path)> data;
         <index-add-all(|full-path)> data';
        
         // Resolve all unresolved references in the tree
-        (ast4, uses) := <analyze-uses(|[(full-path, "")])> ast3;
+        (ast4, uses) := <analyze-uses> ast3;
         <index-add-all(|full-path)> uses;
         
         ast5 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast4;
@@ -259,14 +259,14 @@
    * Analyze all uses, changing their preliminary
    * "Unresolve(_)" URI to a definite URI of their definition.
    */
-  analyze-uses(|files) = analyze-uses(|None(), files)
-  analyze-uses(|parent, files):
+  analyze-uses = analyze-uses(|None())
+  analyze-uses(|parent):
     ast -> (ast'', uses')
     with
-      analyzed     := <all(analyze-uses(|ast, files))> ast;
+      analyzed     := <all(analyze-uses(|ast))> ast;
       (ast', uses) := <unzip-analyzed> analyzed;
       if !ast' => _{unresolved@[Unresolved(namespace), x | path]} then
-        if Def(def-uri) := <index-lookup(id |namespace, path, <strip-annos> ast', files)> ast' then
+        if Def(def-uri) := <index-lookup(id |namespace, path, <strip-annos> ast')> ast' then
           ast'' := ast{def-uri};
           if key{keyUri} := <nam-get-definition-key> parent ; not(<eq>(key, ast')) then
             uses' := [Use(def-uri, keyUri) | uses]
@@ -536,23 +536,13 @@
    * Given an annotated AST node, resolves it, returning its Def.
    */
   index-lookup:
-    x{[namespace | path]} -> <index-lookup(|files)> x
-    with
-      (<index-get-files-of> Def([namespace | path])) <+ [] => files
-      
-  index-lookup(|files):
-    x{[namespace | path]} -> <index-lookup(id |<index-namespace-unwrap> namespace, path, <strip-annos> x, files)>
+    x{[namespace | path]} -> <index-lookup(id |<index-namespace-unwrap> namespace, path, <strip-annos> x)>
  
   /**
    * Given an annotated AST node, resolves it, returning all its Defs.
    */
   index-lookup-all:
-    x{[namespace | path]} -> <index-lookup-all(|files)> x
-    with
-      (<index-get-files-of> Def([namespace | path])) <+ [] => files
-      
-  index-lookup-all(|files):
-    x{[namespace | path]} -> <index-lookup-all(id |<index-namespace-unwrap> namespace, path, <strip-annos> x, files)>
+    x{[namespace | path]} -> <index-lookup-all(id |<index-namespace-unwrap> namespace, path, <strip-annos> x)>
  
   /**
    * Given an annotated AST node, resolves it, returning all its Defs.
@@ -562,10 +552,10 @@
    *
    * @internal
    */
-  index-lookup(is-adjust-lookup-enabled |namespace, path, prefix, files):
+  index-lookup(is-adjust-lookup-enabled |namespace, path, prefix):
     x -> def
     where
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
       if <?StopLookup()> candidates then
         fail
       else
@@ -573,7 +563,7 @@
       <+
 	      // TODO: optimize: try not to call do-adjust-index-lookup from here
 	      [_ | path'] := path;
-	      def         := <index-lookup(is-adjust-lookup-enabled |namespace, path', prefix, files)> x
+	      def         := <index-lookup(is-adjust-lookup-enabled |namespace, path', prefix)> x
       end
 
   /**
@@ -584,14 +574,14 @@
    *
    * @internal
    */
-  index-lookup-all(is-adjust-lookup-enabled |namespace, path, prefix, files):
+  index-lookup-all(is-adjust-lookup-enabled |namespace, path, prefix):
     x -> defs'
     where
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
       defs       := <index-select-all(|namespace, path, x)>;
       // TODO: optimize: try not to call do-adjust-index-lookup from here
       if [_ | path'] := path then
-        defs2 := <index-lookup-all(is-adjust-lookup-enabled |namespace, path', prefix, files)> x;
+        defs2 := <index-lookup-all(is-adjust-lookup-enabled |namespace, path', prefix)> x;
         defs' := <conc> (defs, defs2)
       else
         defs' := defs
@@ -603,8 +593,8 @@
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-outermost(|prefix, files):
-    x{[namespace | path]} -> <index-lookup-outermost(id |<index-namespace-unwrap> namespace, path, prefix, files)>
+  index-lookup-outermost(|prefix):
+    x{[namespace | path]} -> <index-lookup-outermost(id |<index-namespace-unwrap> namespace, path, prefix)>
  
   /**
    * Given an annotated AST node, returns the outermost Def with a corresponding URI.
@@ -614,14 +604,14 @@
    *
    * @internal
    */
-  index-lookup-outermost(is-adjust-lookup-enabled |namespace, path, prefix, files):
+  index-lookup-outermost(is-adjust-lookup-enabled |namespace, path, prefix):
     x -> def
     where
       // TODO: optimize: just like index-lookup
       [_ | path'] := path;
-      def         := <index-lookup-outermost(is-adjust-lookup-enabled |namespace, path', prefix, files)> x
+      def         := <index-lookup-outermost(is-adjust-lookup-enabled |namespace, path', prefix)> x
     <+
-      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix, files)>;
+      candidates := <index-lookup-one-level(is-adjust-lookup-enabled|namespace, path, prefix)>;
       def        := <index-select(|namespace, path, x)>
  
   /**
@@ -630,8 +620,8 @@
    * @param prefix    Only Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-one-level(|prefix, files):
-    x{[namespace | path]} -> <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix, files)>
+  index-lookup-one-level(|prefix):
+    x{[namespace | path]} -> <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
  
   /**
    * Given an annotated AST node, resolves it, and
@@ -641,16 +631,16 @@
    * @param prefix    Indicates that only Defs with a name that starts with this
    *                  string are demanded.
    */
-  index-lookup-one-level(is-adjusted-lookup-enabled |namespace, path, prefix, files):
+  index-lookup-one-level(is-adjusted-lookup-enabled |namespace, path, prefix):
     x{_} -> defs
     with
       is-adjusted-lookup-enabled;
-      do-adjust-index-lookup(|namespace, path, x, prefix, files);
+      do-adjust-index-lookup(|namespace, path, x, prefix);
       if ?StopLookup() then
         defs := StopLookup()
       else
         mapconcat(\d at Def(p) -> [d]\
-          <+ \[namespace' | path'] -> <index-lookup-one-level(fail |namespace', path', prefix, files)> x\
+          <+ \[namespace' | path'] -> <index-lookup-one-level(fail |namespace', path', prefix)> x\
           <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
         ?defs
       end
@@ -666,8 +656,8 @@
    * @param prefix    Indicates that only Defs with a name that starts with this
    *                  string are demanded.
    */
-  index-lookup-all-levels(|prefix, files):
-    x{[namespace | path]} -> <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, prefix, files)>
+  index-lookup-all-levels(|prefix):
+    x{[namespace | path]} -> <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, prefix)>
  
   /**
    * Given an annotated AST node, resolves it, and
@@ -676,19 +666,19 @@
    * @param prefix    Indicates that only Defs with a name that starts with this
    *                  string are demanded.
    */
-  index-lookup-all-levels(is-adjust-lookup-enabled |namespace, path, prefix, files):
+  index-lookup-all-levels(is-adjust-lookup-enabled |namespace, path, prefix):
     x{_} -> all-defs
     with
       is-adjust-lookup-enabled;
-      do-adjust-index-lookup(|namespace, path, x, prefix, files);
+      do-adjust-index-lookup(|namespace, path, x, prefix);
       mapconcat(\d at Def(p) -> [d]\
-          <+ \[namespace' | path'] -> <index-lookup-all-levels(fail |namespace', path', prefix, files)> x\
+          <+ \[namespace' | path'] -> <index-lookup-all-levels(fail |namespace', path', prefix)> x\
           <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
       ?all-defs
     <+
       one-level := <index-get-children(|namespace, prefix)> Def([namespace | path]);
       if [_ | path'] := path then
-        all-defs := <concat> [one-level, <index-lookup-all-levels(fail |namespace, path', prefix, files)> x]
+        all-defs := <concat> [one-level, <index-lookup-all-levels(fail |namespace, path', prefix)> x]
       else
         all-defs := one-level
       end
@@ -696,12 +686,12 @@
   /** @Deprecated */
   index-lookup-contained(|namespace, prefix) =
     obsolete(!"index-lookup-contained; use index-lookup-children");
-    index-lookup-children(|namespace, prefix, [])
+    index-lookup-children(|namespace, prefix)
    
   /** @Deprecated */
   index-lookup-contained-all-levels(|namespace, name) =
     obsolete(!"index-lookup-contained-all-levels; use index-lookup-descendants");
-    index-lookup-descendants(|namespace, name, [])
+    index-lookup-descendants(|namespace, name)
  
   /**
    * Given an annotated AST node, resolves it,
@@ -711,14 +701,14 @@
    * @param prefix    Only child Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-children(|namespace, prefix, files): // TODO: how does this compare w/ index-lookup-one-level?
+  index-lookup-children(|namespace, prefix): // TODO: how does this compare w/ index-lookup-one-level?
     x{[ns | path]} -> defs
     with
       if !ns => Unresolved(_) then
-        Def([_ | def-path]) := <index-lookup(|files)>;
-        defs := <index-lookup-one-level(id|namespace, def-path, prefix, files)> x
+        Def([_ | def-path]) := <index-lookup>;
+        defs := <index-lookup-one-level(id|namespace, def-path, prefix)> x
       else
-        defs := <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix, files)>
+        defs := <index-lookup-one-level(id|<index-namespace-unwrap> namespace, path, prefix)>
       end
     <+
       defs := []
@@ -731,14 +721,14 @@
    * @param prefix    Only child Defs with a name that starts with this
    *                  string are returned.
    */
-  index-lookup-descendants(|namespace, name, files):
+  index-lookup-descendants(|namespace, name):
     x{[ns | path]} -> defs
     with
       if !ns => Unresolved(_) then
-        Def([_ | def-path]) := <index-lookup(|files)>;
-        defs := <index-lookup-all-levels(id|namespace, def-path, name, files)> x
+        Def([_ | def-path]) := <index-lookup>;
+        defs := <index-lookup-all-levels(id|namespace, def-path, name)> x
       else
-        defs := <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, name, files)>
+        defs := <index-lookup-all-levels(id|<index-namespace-unwrap> namespace, path, name)>
       end
     <+
       defs := []
@@ -806,11 +796,11 @@
     where
       [firstElem | rest] := path
  
-  do-adjust-index-lookup(|namespace, path, use, prefix, files) =
+  do-adjust-index-lookup(|namespace, path, use, prefix) =
     // UNDONE: try(origin-term);
     repeat-until(
       prim("SSL_EXT_get_parent", <id>)
-    , adjust-index-lookup(origin-equal(|use) |namespace, path, prefix, files) 
+    , adjust-index-lookup(origin-equal(|use) |namespace, path, prefix) 
     )
  
   index-select(|namespace, path, use) =

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -27,7 +27,7 @@
       // Init
       full-path := $[[project-path]/[path]];
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path])
+      index-setup(|language, [project-path], full-path)
     with
       // Get all changes files by looking at the timestamps.
       changedFiles      := <index-timestamp-get-updates(|"compile")>;

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -84,6 +84,12 @@
 rules // Index API
   
   /**
+   * Gets the file that the analysis is currently in.
+   */
+  index-get-current-file =
+    prim("LANG_index_get_current_file")
+  
+  /**
    * Gets a list of all files and subfile for current project.
    *
    * Example:
@@ -92,9 +98,6 @@
   index-get-all-files =
     prim("LANG_index_all_files")
   
-  index-get-current-file =
-    prim("LANG_index_current_file")
-  
   /**
    * Gets all index entries for the given file path and optionally subfile.
    *

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -14,32 +14,32 @@
   
   // Adjust the lookup behavior for properties,
   // overriding the lookup with a list of property Defs
-  adjust-index-lookup(is-use |namespace, path, prefix, files):
+  adjust-index-lookup(is-use |namespace, path, prefix):
     PropAccess(e, <is-use>) -> p*
     with
       if ENTITY(e-type) := <type-of> e then
-        p* := (<index-lookup-children(|Property(), prefix, files)> e-type)
+        p* := (<index-lookup-children(|Property(), prefix)> e-type)
       else
         p* := []
       end
 
   // Adjust the lookup behavior for variables,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, name, files):
+  adjust-index-lookup(is-use |namespace, path, name):
     Var(<is-use>) -> [[Var() | path], [Property() | path]]
     
   // Why is this needed? shouldn't the Var() adjust handle this?
   // Adjust the lookup behavior for assignments,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, name, files):
+  adjust-index-lookup(is-use |namespace, path, name):
     Assign(<is-use>, _) -> [[Var() | path], [Property() | path]]
 
   // Adjust the lookup behavior for function calls,
   // selecting a function with matching parameter types
   // (if this fails, the normal lookup behavior is used!)
-  adjust-index-lookup(is-use |namespace, path, prefix, files):
+  adjust-index-lookup(is-use |namespace, path, prefix):
     Call(<is-use>, args) -> def
     where
       arg-types := <map(type-of)> args;
-      all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix, files)>;
+      all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix)>;
       def       := <getfirst(is-params-compatible(|arg-types))>

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Mon Feb 20 11:01:39 2012	(r24346)
@@ -80,7 +80,7 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path]);
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
       result   := <map(\filename -> FileEntries(filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
   
@@ -89,7 +89,7 @@
     (node, position, ast, path, project-path) -> target
     where
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path]);
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
       def     := <index-lookup> node;
       target  := def
 
@@ -100,7 +100,7 @@
     where
       // FIXME: this only works for definition paths
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path]);
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
       def-path'  := <take-until(?Anon(_))> def-path;
@@ -116,7 +116,7 @@
       x                 := <collect-one(?COMPLETION(_))> ast';
       COMPLETION(name)	:= x;
       (
-        proposals       := <index-lookup-all-levels(|name, [($[[project-path]/[path]], "")])>
+        proposals       := <index-lookup-all-levels(|name)> x
       <+ 
         proposals 			:= []
       );

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_current_file.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_current_file.java	Mon Feb 20 09:53:03 2012	(r24345)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_current_file.java	Mon Feb 20 11:01:39 2012	(r24346)
@@ -7,7 +7,7 @@
 
 public class LANG_index_get_current_file extends AbstractPrimitive {
 
-	private static String NAME = "LANG_index_all_files";
+	private static String NAME = "LANG_index_get_current_file";
 	
 	private final SemanticIndexManager index;
 	

From gabrielkonat at gmail.com  Mon Feb 20 13:50:24 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 20 Feb 2012 12:50:24 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24347 - in
	spoofax-contrib/separate-compilation-examples:
	c-without-macros/syntax c-without-macros/test
	c-without-macros/trans csharp-partial-classses/test
	csharp-partial-...
Message-ID: <20120220125024.0AF237F8037@mx1.tudelft.nl>

Author: gkonat
Date: Mon Feb 20 12:50:23 2012
New Revision: 24347
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24347&sc=1

Log:
Added type checks and tests to c-without-macros experiment.
Cleaned up type checks and tests in other experiments.
Fixed index-compile-ast not being called in c-without-macros and csharp-partial classes.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp	Mon Feb 20 12:50:23 2012	(r24347)
@@ -25,6 +25,7 @@
    Deref                   -- KW["*"] _1,
    Ref                     -- KW["&"] _1,
    VarRef                  -- _1,
+   Cast                    -- KW["("] _1 KW[")"] _2,
    Type                    -- _1,
    Char                    -- KW["char"],
    Int                     -- KW["int"],

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf	Mon Feb 20 12:50:23 2012	(r24347)
@@ -31,6 +31,7 @@
     "*" Expr                                   -> Expr       {cons("Deref")}
     "&" Expr                                   -> Expr       {cons("Ref")}
     ID                                         -> Expr       {cons("VarRef")}
+    "(" Type ")" Expr                          -> Expr       {cons("Cast")}
     ID                                         -> Type       {cons("Type"), avoid}
     "char"                                     -> Type       {cons("Char"), prefer}
     "int"                                      -> Type       {cons("Int"), prefer}

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx	Mon Feb 20 12:50:23 2012	(r24347)
@@ -32,6 +32,7 @@
   "*" Expr                                    -> Expr {"Deref"}
   "&" Expr                                    -> Expr {"Ref"}
   Var at ID                                      -> Expr {"VarRef"}
+  "(" Type ")" Expr                           -> Expr {"Cast"}
 
   Type at ID                                     -> Type {"Type", avoid}
   "char"                                      -> Type {"Char", prefer} 

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi	Mon Feb 20 12:50:23 2012	(r24347)
@@ -8,9 +8,11 @@
 typedef blog_t_1 blog_t_2;
 
 char* foo(blog_t* b) { 
-  return b->postCount;
+  return b->posterName;
 }
 
 void* malloc(int size) {
-  return size;
-} 
\ No newline at end of file
+  void* ptr;
+  // TODO: allocate memory
+  return ptr;
+}
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi	Mon Feb 20 12:50:23 2012	(r24347)
@@ -3,11 +3,13 @@
   blogptr->posterName = "asd";
   
   blog_t_2* b2;
-  b2 = malloc(sizeof(blog_t));
+  b2 = (blog_t*)malloc(sizeof(blog_t));
   b2->posterName = "Frodo";
   b2->postCount = sizeof(blog_t_2);
   foo(b2);
   foo(blogptr);
+  
+  return 0;
 }
 
 void test(blog_t* blogptr) {

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Mon Feb 20 12:50:23 2012	(r24347)
@@ -9,9 +9,11 @@
     A_t* a;
   } A_t;
   
-  void* malloc(int size) {
-    return size;
-  }
+	void* malloc(int size) {
+	  void* ptr;
+	  // TODO: allocate memory
+	  return ptr;
+	}
 ]]
 
 test Resolve var 1 [[
@@ -67,31 +69,31 @@
 ]] 2 errors
 
 test Resolve function call 1 [[
-	int c(A_t* a) {
+	void* c(A_t* a) {
 	  return malloc(a->i);
 	}
 ]]
 
 test Resolve function call 2 fails [[
-  int c(A_t* a) {
+  void* c(A_t* a) {
     return malloc();
   }
 ]] 1 error
 
 test Resolve function call 3 [[
-	int c(struct A* a) {
+	void* c(struct A* a) {
 	  return malloc(a->i);
 	}
 ]]
 
 test Resolve function call 4 fails [[
-  int c(struct A* a) {
+  void* c(struct A* a) {
     return malloc(a->i, a->i);
   }
 ]] 1 error
 
 test Resolve function call and type fails [[
-	int c(foo_t_2* a) {
+	void* c(foo_t_2* a) {
 	  return malloc(a);
 	} 
 ]] 2 errors
@@ -99,7 +101,7 @@
 test Resolve function call [[
   A_t* f() {
     A_t* a;
-    a = malloc(sizeof(A_t));
+    a = (A_t*)malloc(sizeof(A_t));
     return a;
   }
 ]]
@@ -112,8 +114,8 @@
 ]] 1 error
 
 test Resolve type fails [[
-  B f() {}
-]] 1 error
+  B f() { }
+]] 2 errors
 
 test Resolve typedeffed type [[
   typedef A_t A_t_1;
@@ -122,7 +124,7 @@
   
   char* f() {
     A_t_3* a;
-    a = malloc(sizeof(A_t_3));
+    a = (A_t_3*)malloc(sizeof(A_t_3));
     a->s="test";
     return a->s;
   }
@@ -135,13 +137,86 @@
   
   char* f() {
     A_t_2* a;
-    a = malloc(sizeof(A_t_2));
+    a = (A_t_2*)malloc(sizeof(A_t_2));
     a->s="test";
     return a->s;
   }
 ]] 2 errors
 
+test Assignment [[
+  void f() {
+    int i;
+    i = 0;
+  }
+]]
+
+test Unexpected assignment type [[
+  void f() {
+    int i;
+    i = "fail";
+  }
+]] 1 error
+
+test Assignments [[
+  void f() {
+    int i;
+    char* s;
+    A_t* a;
+    
+    i = 0;
+    s = "ok";
+    a = (A_t*)malloc(sizeof(A_t));
+  }
+]]
+
+test Unexpected assignment types [[
+  void f() {
+    int i;
+    char* s;
+    A_t* a;
+    
+    i = "fail";
+    s = 1;
+    a = (void*)0;
+  }
+]] 3 errors
+
+test Return [[
+  int f() {
+  	int i;
+  	i = 1;
+  	return i;
+  }
+]]
+
+test Unexpected return type [[
+  char* f() {
+    int i;
+    i = 1;
+    return i;
+  }
+]] 1 error
+
+test Unexpected return types [[
+  A_t* f() {
+    A_t* a;
+    return 1;
+    return a->i;
+    return a->s;
+  }
+]] 3 errors
+
+test No return in void method [[
+  void sideEffect() {}
+]]
+
+test No return in non-void method fails [[
+  A_t* f() {
+
+  }
+]] 1 error
+
 test Use before def allowed [[
-  struct B f() {}
+  struct B {};
   struct B {};
 ]]

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Mon Feb 20 12:50:23 2012	(r24347)
@@ -64,79 +64,82 @@
     VarDecl(_, x) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Start(d_60347) -> Start(d_60347)
+    Start(u_8689) -> Start(u_8689)
 
   nam-annotate-names(|def-path):
-    FunDecl(z_60346, a_60347, b_60347, c_60347) -> FunDecl(z_60346, a_60347{def-path}, b_60347, c_60347)
+    FunDecl(q_8689, r_8689, s_8689, t_8689) -> FunDecl(q_8689, r_8689{def-path}, s_8689, t_8689)
 
   nam-annotate-names(|def-path):
-    Param(x_60346, y_60346) -> Param(x_60346, y_60346{def-path})
+    Param(o_8689, p_8689) -> Param(o_8689, p_8689{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDecl(w_60346) -> TypeDecl(w_60346)
+    TypeDecl(n_8689) -> TypeDecl(n_8689)
 
   nam-annotate-names(|def-path):
-    TypeDef(u_60346, v_60346) -> TypeDef(u_60346, v_60346{def-path})
+    TypeDef(l_8689, m_8689) -> TypeDef(l_8689, m_8689{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDef(s_60346, t_60346) -> TypeDef(s_60346, t_60346{def-path})
+    TypeDef(j_8689, k_8689) -> TypeDef(j_8689, k_8689{def-path})
 
   nam-annotate-names(|def-path):
-    StructDecl(q_60346, r_60346) -> StructDecl(q_60346{def-path}, r_60346)
+    StructDecl(h_8689, i_8689) -> StructDecl(h_8689{def-path}, i_8689)
 
   nam-annotate-names(|def-path):
-    Field(o_60346, p_60346) -> Field(o_60346, p_60346{def-path})
+    Field(f_8689, g_8689) -> Field(f_8689, g_8689{def-path})
 
   nam-annotate-names(|def-path):
-    VarDecl(m_60346, n_60346) -> VarDecl(m_60346, n_60346{def-path})
+    VarDecl(d_8689, e_8689) -> VarDecl(d_8689, e_8689{def-path})
 
   nam-annotate-names(|def-path):
-    Expr(l_60346) -> Expr(l_60346)
+    Expr(c_8689) -> Expr(c_8689)
 
   nam-annotate-names(|def-path):
-    Assign(j_60346, k_60346) -> Assign(j_60346, k_60346)
+    Assign(a_8689, b_8689) -> Assign(a_8689, b_8689)
 
   nam-annotate-names(|def-path):
-    Return(i_60346) -> Return(i_60346)
+    Return(z_8688) -> Return(z_8688)
 
   nam-annotate-names(|def-path):
-    StrLit(h_60346) -> StrLit(h_60346)
+    StrLit(y_8688) -> StrLit(y_8688)
 
   nam-annotate-names(|def-path):
-    IntLit(g_60346) -> IntLit(g_60346)
+    IntLit(x_8688) -> IntLit(x_8688)
 
   nam-annotate-names(|def-path):
-    Call(e_60346, f_60346) -> Call(
-                                <nam-annotate-use(|Function())> e_60346
-                              , f_60346
-                              )
+    Call(v_8688, w_8688) -> Call(
+                              <nam-annotate-use(|Function())> v_8688
+                            , w_8688
+                            )
+
+  nam-annotate-names(|def-path):
+    SizeOf(u_8688) -> SizeOf(u_8688)
 
   nam-annotate-names(|def-path):
-    SizeOf(d_60346) -> SizeOf(d_60346)
+    Access(s_8688, t_8688) -> Access(
+                                s_8688
+                              , <nam-annotate-use(|Field())> t_8688
+                              )
 
   nam-annotate-names(|def-path):
-    Access(b_60346, c_60346) -> Access(
-                                  b_60346
-                                , <nam-annotate-use(|Field())> c_60346
-                                )
+    DerefAccess(q_8688, r_8688) -> DerefAccess(
+                                     q_8688
+                                   , <nam-annotate-use(|Field())> r_8688
+                                   )
 
   nam-annotate-names(|def-path):
-    DerefAccess(z_60345, a_60346) -> DerefAccess(
-                                       z_60345
-                                     , <nam-annotate-use(|Field())> a_60346
-                                     )
+    Deref(p_8688) -> Deref(p_8688)
 
   nam-annotate-names(|def-path):
-    Deref(y_60345) -> Deref(y_60345)
+    Ref(o_8688) -> Ref(o_8688)
 
   nam-annotate-names(|def-path):
-    Ref(x_60345) -> Ref(x_60345)
+    VarRef(n_8688) -> VarRef(<nam-annotate-use(|Var())> n_8688)
 
   nam-annotate-names(|def-path):
-    VarRef(w_60345) -> VarRef(<nam-annotate-use(|Var())> w_60345)
+    Cast(l_8688, m_8688) -> Cast(l_8688, m_8688)
 
   nam-annotate-names(|def-path):
-    Type(v_60345) -> Type(<nam-annotate-use(|Type())> v_60345)
+    Type(k_8688) -> Type(<nam-annotate-use(|Type())> k_8688)
 
   nam-annotate-names(|def-path):
     Char() -> Char()
@@ -148,7 +151,7 @@
     Void() -> Void()
 
   nam-annotate-names(|def-path):
-    Pointer(u_60345) -> Pointer(u_60345)
+    Pointer(j_8688) -> Pointer(j_8688)
 
   nam-annotate-names(|def-path):
-    StructRef(t_60345) -> StructRef(<nam-annotate-use(|Struct())> t_60345)
\ No newline at end of file
+    StructRef(i_8688) -> StructRef(<nam-annotate-use(|Struct())> i_8688)
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Mon Feb 20 12:50:23 2012	(r24347)
@@ -2,6 +2,7 @@
 
 imports
   include/C-without-macros
+  lib/index-library
   lib/analysis-library
   analysis-generated
   c_without_macros
@@ -27,3 +28,13 @@
   // overriding the lookup with a list of URIs
   adjust-index-lookup(is-use |namespace, path, prefix):
     VarRef(<is-use>) -> [[Var() | path], [Field() | path]]
+
+  // Add Type to the constructors to check for differences.
+  index-diff-constructors = ?Type(_, _)
+  
+  // Type definitions are equal if their URI is equal and if their values are equal.
+  index-diff-compare:
+    (Type(u1, v1), Type(u2, v2)) -> <id>
+    where
+       <index-uri-eq> (u1, u2);
+       <eq> (v1, v2)

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Mon Feb 20 12:50:23 2012	(r24347)
@@ -11,6 +11,7 @@
   lib/compilation-library
   check
   desugar
+  generate
   analysis-manual
   analysis-generated
 

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Mon Feb 20 12:50:23 2012	(r24347)
@@ -39,7 +39,34 @@
   constraint-error:
     x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
     
-    constraint-error:
+  constraint-error:
+    e at Assign(lhs, rhs) -> (e, $[Expected [<print-type> type1] but found [<print-type> type2].])
+    where
+      type1 := <type-of> lhs;
+      type2 := <type-of> rhs;
+      not(<is-assignable-to> (type1, type2))
+      
+  constraint-error:
+    FunDecl(type, _, _, statements) -> errors
+    where
+      <collect-one(?Return(_))> statements; // At least one return statement can be found.
+      methodType := <type-of> type;
+      errors := <collect-all(constraint-error(|methodType), conc)> statements
+      
+  constraint-error(|methodType):
+    e at Return(exp) -> (e, $[Expected [<print-type> methodType] but found [<print-type> type].])
+    where
+      type := <type-of> exp;
+      not(<is-assignable-to> (methodType, type))
+      
+  constraint-error:
+    FunDecl(type, _, _,  statements) -> (type, $[Function of type [<print-type> type1] does not return a value.])
+    where
+      type1 := <type-of> type;
+      not(<is-assignable-to> (type1, <type-of> Void()));
+      not(<collect-one(?Return(_))> statements)
+    
+  constraint-error:
     Call(f, a*) -> (f, $[Illegal argument types, expected ([print-param-types]) not ([print-arg-types])])
     where
       arg-types    := <map(type-of)> a*;

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Mon Feb 20 12:50:23 2012	(r24347)
@@ -14,8 +14,6 @@
   ParamTypes  : Uri * List(Type) -> ParamTypesData
   Ptr         : Type -> Type
   Struct      : Type -> Type
-  FailedDeref : Type -> NoType
-  NoType      : Type
 
 rules // type projections
 
@@ -46,16 +44,16 @@
       Ptr(type) := <type-of> x
   	
   type-of:
-  	Ref(x) -> Ptr(x)
+  	Ref(x) -> Ptr(<type-of> x)
 
   type-of:
-  	Char() -> TYPE("Char")
-  	
+    Void() -> TYPE("void")
+
   type-of:
-  	Int() -> TYPE("Int")
+  	Char() -> TYPE("char")
   	
   type-of:
-    Void() -> TYPE("Void")
+  	Int() -> TYPE("int")
     
   type-of:
     IntLit(_) -> <type-of> Int()
@@ -65,6 +63,9 @@
     
   type-of:
     SizeOf(_) -> <type-of> Int()
+   
+  type-of:
+    Cast(to, from) -> <type-of> to
   
   type-of:
     VarRef(v) -> <type-of> <index-lookup> v
@@ -99,9 +100,6 @@
     
   type-of:
     Ptr(x) -> Ptr(x)
-    
-  type-of:
-    NoType() -> NoType()
 
 rules // utility
 
@@ -120,9 +118,9 @@
 
   print-type = 
     switch id
-      case ?Void() : !"Void"
-      case ?Char() : !"Char"
-      case ?Int() : !"Int"
+      case ?Void() : !"void"
+      case ?Char() : !"char"
+      case ?Int() : !"int"
       case ?Type(t) : <strip-annos> t
       case ?TYPE(t) : <strip-annos> t
       case ?Struct(t) : !$[struct [<print-type> t]]

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt	Mon Feb 20 12:50:23 2012	(r24347)
@@ -10,6 +10,7 @@
     
     partial class P {
       string a;
+      int i;
     }
 	}
 ]]
@@ -74,6 +75,14 @@
   }
 ]] 1 error
 
+test Resolve type [[
+  namespace Tests {
+    class B {
+      A a;
+    }
+  }
+]]
+
 test Resolve type fails 1 [[
   namespace Tests {
     class B {
@@ -90,6 +99,18 @@
   }
 ]] 1 error
 
+test Return [[
+  namespace Tests {
+    class B {
+      A a;
+      
+      int getA() {
+        return a.p.i;
+      }
+    }
+  }
+]]
+
 test Unexpected return type 1 [[
   namespace Tests {
     class B {
@@ -133,7 +154,15 @@
   }
 ]] 3 errors
 
-test No return in non-void method [[
+test No return in void method [[
+  namespace Tests {
+    class B {
+      void sideEffect() {}
+    }
+  }
+]]
+
+test No return in non-void method fails [[
   namespace Tests {
     class B {
       int getA() {

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str	Mon Feb 20 12:50:23 2012	(r24347)
@@ -50,13 +50,13 @@
     e at Return(exp) -> (e, $[Expected [<print-type> methodType] but found [<print-type> type].])
     where
       type := <type-of> exp;
-      not(<eq> (methodType, type))
+      not(<is-assignable-to> (methodType, type))
     	
   constraint-error:
     Method(type, _, statement) -> (type, $[Method of type [<print-type> type1] does not return a value.])
     where
       type1 := <type-of> type;
-      not(<eq> (type1, TYPE("Void")));
+      not(<is-assignable-to> (type1, <type-of> VoidType()));
       not(<collect-one(?Return(_))> statement)
     
   constraint-warning = fail

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Mon Feb 20 12:50:23 2012	(r24347)
@@ -10,6 +10,7 @@
   lib/analysis-library
   lib/compilation-library
   check
+  generate
   analysis-manual
   analysis-generated
 

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Mon Feb 20 12:50:23 2012	(r24347)
@@ -53,6 +53,11 @@
     
 rules // utility
   
+  is-assignable-to:
+    (to-type, from-type) -> to-type
+    where
+      <eq> (from-type, to-type)
+  
   print-type = 
     switch ?input
       case VoidType() : !"Void"

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt	Mon Feb 20 12:50:23 2012	(r24347)
@@ -59,13 +59,6 @@
   }
 ]] 1 error
 
-test Use before def allowed [[
-  entity B {
-    c : C
-  }
-  entity C {}
-]]
-
 test Unexpected vardef type [[
   entity B {
     a : A
@@ -119,3 +112,10 @@
     }
   }
 ]]
+
+test Use before def allowed [[
+  entity B {
+    c : C
+  }
+  entity C {}
+]]

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Mon Feb 20 11:01:39 2012	(r24346)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Mon Feb 20 12:50:23 2012	(r24347)
@@ -45,14 +45,14 @@
     where
     	type1 := <type-of> e;
     	type2 := <type-of> exp;
-      not(<eq> (type1, type2))
+      not(<is-assignable-to> (type1, type2))
       
   constraint-error:
     e at VarDeclInit(var, type, exp) -> (e, $[Expected [<print-type> type1] but found [<print-type> type2].])
     where
       type1 := <type-of> type;
       type2 := <type-of> exp;
-      not(<eq> (type1, type2))
+      not(<is-assignable-to> (type1, type2))
     
   constraint-error:
     Call(f, a*) -> (f, $[Illegal argument types, expected ([<print-type> param-types]) not ([<print-type> arg-types])])

From gabrielkonat at gmail.com  Mon Feb 20 14:57:05 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 20 Feb 2012 13:57:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24348 - in
	spoofax-contrib/separate-compilation-examples:
	c-without-macros c-without-macros/syntax
	c-without-macros/test c-without-macros/tpl
	c-without-macros/trans csharp...
Message-ID: <20120220135705.C5006CC19F@mx4.tudelft.nl>

Author: gkonat
Date: Mon Feb 20 13:57:05 2012
New Revision: 24348
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24348&sc=1

Log:
Added copying of SPX output to project to build scripts.

Added:
   spoofax-contrib/separate-compilation-examples/c-without-macros/tpl/
   spoofax-contrib/separate-compilation-examples/c-without-macros/tpl/gen.tpl
   spoofax-contrib/separate-compilation-examples/c-without-macros/tpl/syntax.tpl
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/tpl/
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/tpl/gen.tpl
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/tpl/syntax.tpl
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/tpl/
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/tpl/gen.tpl
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/tpl/syntax.tpl
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/build.main.xml	Mon Feb 20 13:57:05 2012	(r24348)
@@ -40,12 +40,33 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="copy-files, spoofaximp.default.ctree"/>
+        <target name="all" depends="copy-lib-files, create-analysis-files, spoofaximp.default.ctree"/>
       
         <!-- Copy libraries from naming experiment -->
-        <target name="copy-files">
-            <copyfile dest="lib/index-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str"/>
-            <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
-        	  <copyfile dest="lib/compilation-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str"/>
+        <target name="copy-lib-files">
+            <copy file="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str" tofile="lib/index-library.str"/>
+            <copy file="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str" tofile="lib/analysis-library.str"/>
+        	<copy file="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str" tofile="lib/compilation-library.str"/>
+        </target>
+	
+        <!-- Create syntax and analysis-generated from SPX files -->
+        <target name="create-analysis-files">
+      	  <!-- Syntax -->
+          <loadfile property="syntax-tpl" srcFile="tpl/syntax.tpl"/>
+          <loadfile property="syntax-spx" srcFile=".shadowdir/SPX/SPX.sdf">
+            <filterchain>
+              <headfilter lines ="-1" skip="4"/>
+            </filterchain>
+          </loadfile>
+          <concat destfile="syntax/C-without-macros.sdf">${syntax-tpl}${syntax-spx}</concat>
+        	
+          <!-- analysis-generated.str -->
+          <loadfile property="gen-tpl" srcFile="tpl/gen.tpl"/>
+          <loadfile property="gen-spx" srcFile=".shadowdir/SPX/SPX.str">
+            <filterchain>
+              <headfilter lines ="-1" skip="6"/>
+            </filterchain>
+          </loadfile>
+          <concat destfile="trans/analysis-generated.str">${gen-tpl}${gen-spx}</concat>
         </target>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf	Mon Feb 20 13:57:05 2012	(r24348)
@@ -1,15 +1,15 @@
-module C-without-macros
-
-imports Common
-
-exports
-
-  context-free start-symbols
-  
-    Start
-
-  context-free syntax
-
+module C-without-macros
+
+imports Common
+
+exports
+
+  context-free start-symbols
+  
+    Start
+
+  context-free syntax
+
     Definition*                                -> Start      {cons("Start"), scope}
     Type ID "(" {Param ","}* ")" "{" Stmt* "}" -> Definition {cons("FunDecl"), scope}
     Type ID                                    -> Param      {cons("Param")}

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx	Mon Feb 20 13:57:05 2012	(r24348)
@@ -1,6 +1,6 @@
 package SPX
 
-module C-without-macros
+module SPX
 
 context-free syntax
     

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt	Mon Feb 20 13:57:05 2012	(r24348)
@@ -24,7 +24,10 @@
   
   typedef B_t [[B_t_1]];
   
-  [[B_t_1]] f() {}
+  [[B_t_1]] f() { 
+    B_t_1 b;
+    return b;
+  }
 ]] resolve #2 to #1
 
 test Resolve property access [[

Added: spoofax-contrib/separate-compilation-examples/c-without-macros/tpl/gen.tpl
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/tpl/gen.tpl	Mon Feb 20 13:57:05 2012	(r24348)
@@ -0,0 +1,6 @@
+module analysis-generated
+
+imports
+  include/C-without-macros
+  lib/analysis-library
+

Added: spoofax-contrib/separate-compilation-examples/c-without-macros/tpl/syntax.tpl
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/tpl/syntax.tpl	Mon Feb 20 13:57:05 2012	(r24348)
@@ -0,0 +1,12 @@
+module C-without-macros
+
+imports Common
+
+exports
+
+  context-free start-symbols
+  
+    Start
+
+  context-free syntax
+

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Mon Feb 20 13:57:05 2012	(r24348)
@@ -1,9 +1,9 @@
-module analysis-generated
+module analysis-generated
+
+imports
+  include/C-without-macros
+  lib/analysis-library
 
-imports
-  include/C-without-macros
-  lib/analysis-library
-  
 signature
   constructors
     Function : Namespace
@@ -64,82 +64,82 @@
     VarDecl(_, x) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Start(u_8689) -> Start(u_8689)
+    Start(u_24352) -> Start(u_24352)
 
   nam-annotate-names(|def-path):
-    FunDecl(q_8689, r_8689, s_8689, t_8689) -> FunDecl(q_8689, r_8689{def-path}, s_8689, t_8689)
+    FunDecl(q_24352, r_24352, s_24352, t_24352) -> FunDecl(q_24352, r_24352{def-path}, s_24352, t_24352)
 
   nam-annotate-names(|def-path):
-    Param(o_8689, p_8689) -> Param(o_8689, p_8689{def-path})
+    Param(o_24352, p_24352) -> Param(o_24352, p_24352{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDecl(n_8689) -> TypeDecl(n_8689)
+    TypeDecl(n_24352) -> TypeDecl(n_24352)
 
   nam-annotate-names(|def-path):
-    TypeDef(l_8689, m_8689) -> TypeDef(l_8689, m_8689{def-path})
+    TypeDef(l_24352, m_24352) -> TypeDef(l_24352, m_24352{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDef(j_8689, k_8689) -> TypeDef(j_8689, k_8689{def-path})
+    TypeDef(j_24352, k_24352) -> TypeDef(j_24352, k_24352{def-path})
 
   nam-annotate-names(|def-path):
-    StructDecl(h_8689, i_8689) -> StructDecl(h_8689{def-path}, i_8689)
+    StructDecl(h_24352, i_24352) -> StructDecl(h_24352{def-path}, i_24352)
 
   nam-annotate-names(|def-path):
-    Field(f_8689, g_8689) -> Field(f_8689, g_8689{def-path})
+    Field(f_24352, g_24352) -> Field(f_24352, g_24352{def-path})
 
   nam-annotate-names(|def-path):
-    VarDecl(d_8689, e_8689) -> VarDecl(d_8689, e_8689{def-path})
+    VarDecl(d_24352, e_24352) -> VarDecl(d_24352, e_24352{def-path})
 
   nam-annotate-names(|def-path):
-    Expr(c_8689) -> Expr(c_8689)
+    Expr(c_24352) -> Expr(c_24352)
 
   nam-annotate-names(|def-path):
-    Assign(a_8689, b_8689) -> Assign(a_8689, b_8689)
+    Assign(a_24352, b_24352) -> Assign(a_24352, b_24352)
 
   nam-annotate-names(|def-path):
-    Return(z_8688) -> Return(z_8688)
+    Return(z_24351) -> Return(z_24351)
 
   nam-annotate-names(|def-path):
-    StrLit(y_8688) -> StrLit(y_8688)
+    StrLit(y_24351) -> StrLit(y_24351)
 
   nam-annotate-names(|def-path):
-    IntLit(x_8688) -> IntLit(x_8688)
+    IntLit(x_24351) -> IntLit(x_24351)
 
   nam-annotate-names(|def-path):
-    Call(v_8688, w_8688) -> Call(
-                              <nam-annotate-use(|Function())> v_8688
-                            , w_8688
-                            )
+    Call(v_24351, w_24351) -> Call(
+                                <nam-annotate-use(|Function())> v_24351
+                              , w_24351
+                              )
 
   nam-annotate-names(|def-path):
-    SizeOf(u_8688) -> SizeOf(u_8688)
+    SizeOf(u_24351) -> SizeOf(u_24351)
 
   nam-annotate-names(|def-path):
-    Access(s_8688, t_8688) -> Access(
-                                s_8688
-                              , <nam-annotate-use(|Field())> t_8688
-                              )
+    Access(s_24351, t_24351) -> Access(
+                                  s_24351
+                                , <nam-annotate-use(|Field())> t_24351
+                                )
 
   nam-annotate-names(|def-path):
-    DerefAccess(q_8688, r_8688) -> DerefAccess(
-                                     q_8688
-                                   , <nam-annotate-use(|Field())> r_8688
-                                   )
+    DerefAccess(q_24351, r_24351) -> DerefAccess(
+                                       q_24351
+                                     , <nam-annotate-use(|Field())> r_24351
+                                     )
 
   nam-annotate-names(|def-path):
-    Deref(p_8688) -> Deref(p_8688)
+    Deref(p_24351) -> Deref(p_24351)
 
   nam-annotate-names(|def-path):
-    Ref(o_8688) -> Ref(o_8688)
+    Ref(o_24351) -> Ref(o_24351)
 
   nam-annotate-names(|def-path):
-    VarRef(n_8688) -> VarRef(<nam-annotate-use(|Var())> n_8688)
+    VarRef(n_24351) -> VarRef(<nam-annotate-use(|Var())> n_24351)
 
   nam-annotate-names(|def-path):
-    Cast(l_8688, m_8688) -> Cast(l_8688, m_8688)
+    Cast(l_24351, m_24351) -> Cast(l_24351, m_24351)
 
   nam-annotate-names(|def-path):
-    Type(k_8688) -> Type(<nam-annotate-use(|Type())> k_8688)
+    Type(k_24351) -> Type(<nam-annotate-use(|Type())> k_24351)
 
   nam-annotate-names(|def-path):
     Char() -> Char()
@@ -151,7 +151,7 @@
     Void() -> Void()
 
   nam-annotate-names(|def-path):
-    Pointer(j_8688) -> Pointer(j_8688)
+    Pointer(j_24351) -> Pointer(j_24351)
 
   nam-annotate-names(|def-path):
-    StructRef(i_8688) -> StructRef(<nam-annotate-use(|Struct())> i_8688)
\ No newline at end of file
+    StructRef(i_24351) -> StructRef(<nam-annotate-use(|Struct())> i_24351)
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml	Mon Feb 20 13:57:05 2012	(r24348)
@@ -40,12 +40,33 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="copy-files, spoofaximp.default.ctree"/>
+        <target name="all" depends="copy-lib-files, create-analysis-files, spoofaximp.default.ctree"/>
       
         <!-- Copy libraries from naming experiment -->
-        <target name="copy-files">
-            <copyfile dest="lib/index-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str"/>
-            <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
-            <copyfile dest="lib/compilation-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str"/>
+        <target name="copy-lib-files">
+            <copy file="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str" tofile="lib/index-library.str"/>
+            <copy file="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str" tofile="lib/analysis-library.str"/>
+            <copy file="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str" tofile="lib/compilation-library.str"/>
+        </target>
+    
+        <!-- Create syntax and analysis-generated from SPX files -->
+        <target name="create-analysis-files">
+          <!-- Syntax -->
+          <loadfile property="syntax-tpl" srcFile="tpl/syntax.tpl"/>
+          <loadfile property="syntax-spx" srcFile=".shadowdir/SPX/SPX.sdf">
+            <filterchain>
+              <headfilter lines ="-1" skip="4"/>
+            </filterchain>
+          </loadfile>
+          <concat destfile="syntax/CSharpPartialClassses.sdf">${syntax-tpl}${syntax-spx}</concat>
+            
+          <!-- analysis-generated.str -->
+          <loadfile property="gen-tpl" srcFile="tpl/gen.tpl"/>
+          <loadfile property="gen-spx" srcFile=".shadowdir/SPX/SPX.str">
+            <filterchain>
+              <headfilter lines ="-1" skip="6"/>
+            </filterchain>
+          </loadfile>
+          <concat destfile="trans/analysis-generated.str">${gen-tpl}${gen-spx}</concat>
         </target>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf	Mon Feb 20 13:57:05 2012	(r24348)
@@ -1,15 +1,15 @@
-module CSharpPartialClassses
-
-imports Common
-
-exports
-
-  context-free start-symbols
-  
-    Start
-
-  context-free syntax
-      
+module CSharpPartialClassses
+
+imports Common
+
+exports
+
+  context-free start-symbols
+  
+    Start
+
+  context-free syntax
+
     Definition*                                 -> Start         {cons("Start"), scope}
     "namespace" ID "{" Definition* "}"          -> Definition    {cons("Namespace"), scope}
     "partial" "class" ID "{" ClassBodyDecl* "}" -> Definition    {cons("PartialClass"), scope}

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx	Mon Feb 20 13:57:05 2012	(r24348)
@@ -1,6 +1,6 @@
 package SPX
 
-module CSharpPartialClasses
+module SPX
 
 context-free syntax
 	

Added: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/tpl/gen.tpl
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/tpl/gen.tpl	Mon Feb 20 13:57:05 2012	(r24348)
@@ -0,0 +1,5 @@
+module analysis-generated
+
+imports
+  include/CSharpPartialClassses
+  lib/analysis-library

Added: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/tpl/syntax.tpl
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/tpl/syntax.tpl	Mon Feb 20 13:57:05 2012	(r24348)
@@ -0,0 +1,12 @@
+module CSharpPartialClassses
+
+imports Common
+
+exports
+
+  context-free start-symbols
+  
+    Start
+
+  context-free syntax
+

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Mon Feb 20 13:57:05 2012	(r24348)
@@ -1,9 +1,8 @@
-module analysis-generated
-
-imports
-  include/CSharpPartialClassses
+module analysis-generated
+
+imports
+  include/CSharpPartialClassses
   lib/analysis-library
-
 signature
   constructors
     Namespace : Namespace
@@ -57,25 +56,25 @@
     Method(_, x, _) -> <nam-get-def(|Method())> x
 
   nam-annotate-names(|def-path):
-    Start(n_3035) -> Start(n_3035)
+    Start(b_13904) -> Start(b_13904)
 
   nam-annotate-names(|def-path):
-    Namespace(l_3035, m_3035) -> Namespace(l_3035{def-path}, m_3035)
+    Namespace(z_13903, a_13904) -> Namespace(z_13903{def-path}, a_13904)
 
   nam-annotate-names(|def-path):
-    PartialClass(j_3035, k_3035) -> PartialClass(j_3035{def-path}, k_3035)
+    PartialClass(x_13903, y_13903) -> PartialClass(x_13903{def-path}, y_13903)
 
   nam-annotate-names(|def-path):
-    Class(h_3035, i_3035) -> Class(h_3035{def-path}, i_3035)
+    Class(v_13903, w_13903) -> Class(v_13903{def-path}, w_13903)
 
   nam-annotate-names(|def-path):
-    Field(f_3035, g_3035) -> Field(f_3035, g_3035{def-path})
+    Field(t_13903, u_13903) -> Field(t_13903, u_13903{def-path})
 
   nam-annotate-names(|def-path):
-    Method(c_3035, d_3035, e_3035) -> Method(c_3035, d_3035{def-path}, e_3035)
+    Method(q_13903, r_13903, s_13903) -> Method(q_13903, r_13903{def-path}, s_13903)
 
   nam-annotate-names(|def-path):
-    Type(b_3035) -> Type(<nam-annotate-use(|Class())> b_3035)
+    Type(p_13903) -> Type(<nam-annotate-use(|Class())> p_13903)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()
@@ -87,19 +86,19 @@
     VoidType() -> VoidType()
 
   nam-annotate-names(|def-path):
-    Return(a_3035) -> Return(a_3035)
+    Return(o_13903) -> Return(o_13903)
 
   nam-annotate-names(|def-path):
-    FieldRef(z_3034) -> FieldRef(<nam-annotate-use(|Field())> z_3034)
+    FieldRef(n_13903) -> FieldRef(<nam-annotate-use(|Field())> n_13903)
 
   nam-annotate-names(|def-path):
-    FieldAccess(x_3034, y_3034) -> FieldAccess(
-                                     x_3034
-                                   , <nam-annotate-use(|Field())> y_3034
-                                   )
+    FieldAccess(l_13903, m_13903) -> FieldAccess(
+                                       l_13903
+                                     , <nam-annotate-use(|Field())> m_13903
+                                     )
 
   nam-annotate-names(|def-path):
-    MethodCall(v_3034, w_3034) -> MethodCall(
-                                    v_3034
-                                  , <nam-annotate-use(|Method())> w_3034
-                                  )
\ No newline at end of file
+    MethodCall(j_13903, k_13903) -> MethodCall(
+                                      j_13903
+                                    , <nam-annotate-use(|Method())> k_13903
+                                    )
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/build.main.xml	Mon Feb 20 13:57:05 2012	(r24348)
@@ -40,12 +40,33 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="copy-files, spoofaximp.default.ctree"/>
+        <target name="all" depends="copy-lib-files, create-analysis-files, spoofaximp.default.ctree"/>
       
         <!-- Copy libraries from naming experiment -->
-        <target name="copy-files">
-            <copyfile dest="lib/index-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str"/>
-            <copyfile dest="lib/analysis-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str"/>
-            <copyfile dest="lib/compilation-library.str" src="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str"/>
+        <target name="copy-lib-files">
+            <copy file="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str" tofile="lib/index-library.str"/>
+            <copy file="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str" tofile="lib/analysis-library.str"/>
+            <copy file="../../../spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str" tofile="lib/compilation-library.str"/>
+        </target>
+    
+        <!-- Create syntax and analysis-generated from SPX files -->
+        <target name="create-analysis-files">
+          <!-- Syntax -->
+          <loadfile property="syntax-tpl" srcFile="tpl/syntax.tpl"/>
+          <loadfile property="syntax-spx" srcFile=".shadowdir/SPX/SPX.sdf">
+            <filterchain>
+              <headfilter lines ="-1" skip="4"/>
+            </filterchain>
+          </loadfile>
+          <concat destfile="syntax/EntityWithAspects.sdf">${syntax-tpl}${syntax-spx}</concat>
+            
+          <!-- analysis-generated.str -->
+          <loadfile property="gen-tpl" srcFile="tpl/gen.tpl"/>
+          <loadfile property="gen-spx" srcFile=".shadowdir/SPX/SPX.str">
+            <filterchain>
+              <headfilter lines ="-1" skip="6"/>
+            </filterchain>
+          </loadfile>
+          <concat destfile="trans/analysis-generated.str">${gen-tpl}${gen-spx}</concat>
         </target>
     </project>
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf	Mon Feb 20 13:57:05 2012	(r24348)
@@ -1,37 +1,37 @@
-module EntityWithAspects
-
-imports Common 
-
-exports
-    
-context-free start-symbols
-
-  Start
-
-context-free syntax
-
-  "module" ID Definition*                                                   -> Start        {cons("Module"), scope}
-  "entity" ID "{" Member* "}"                                               -> Definition   {cons("Entity"), scope}
-  "import" ImportPart                                                       -> Definition   {cons("Import")}
-  ID "." "*"                                                                -> ImportPart   {cons("WildcardImport")}
-  ID "." ID                                                                 -> ImportPart   {cons("EntityImport")}
-  "aspect" ID "{" AspectMember* "}"                                         -> Definition   {cons("Aspect"), scope}
-  "pointcut" ID "(" {Param ","}* ")" ":" {JoinPoint ","}+                   -> AspectMember {cons("Pointcut"), scope}
-  "advice" ID AdviceType "(" {Param ","}* ")" ":" ID "(" {Exp ","}* ")" Stm -> AspectMember {cons("Advice"), scope}
-  "before"                                                                  -> AdviceType   {cons("Before")}
-  "after"                                                                   -> AdviceType   {cons("After")}
-  "assigned" "(" Type ")"                                                   -> JoinPoint    {cons("Assigned")}
-  ID ":" Type                                                               -> Member       {cons("Property")}
-  ID "(" {Param ","}* ")" Stm                                               -> Member       {cons("Function"), scope}
-  ID ":" Type                                                               -> Param        {cons("Param")}
-  "var" ID ":" Type                                                         -> Stm          {cons("VarDecl")}
-  "var" ID ":" Type "=" Exp                                                 -> Stm          {cons("VarDeclInit")}
-  ID "=" Exp                                                                -> Stm          {cons("Assign")}
-  "{" Stm* "}"                                                              -> Stm          {cons("Block"), scope}
-  "print" Exp                                                               -> Stm          {cons("Print")}
-  ID "(" {Exp ","}* ")"                                                     -> Exp          {cons("Call")}
-  ID                                                                        -> Exp          {cons("Var")}
-  Exp "." ID                                                                -> Exp          {cons("PropAccess")}
-  ID                                                                        -> Type         {cons("Type")}
-  "String"                                                                  -> Type         {cons("StringType"), prefer}
-  "Int"                                                                     -> Type         {cons("IntType"), prefer}
\ No newline at end of file
+module EntityWithAspects
+
+imports Common
+
+exports
+
+  context-free start-symbols
+  
+    Start
+
+  context-free syntax
+
+    "module" ID Definition*                                                   -> Start        {cons("Module"), scope}
+    "entity" ID "{" Member* "}"                                               -> Definition   {cons("Entity"), scope}
+    "import" ImportPart                                                       -> Definition   {cons("Import")}
+    ID "." "*"                                                                -> ImportPart   {cons("WildcardImport")}
+    ID "." ID                                                                 -> ImportPart   {cons("EntityImport")}
+    "aspect" ID "{" AspectMember* "}"                                         -> Definition   {cons("Aspect"), scope}
+    "pointcut" ID "(" {Param ","}* ")" ":" {JoinPoint ","}+                   -> AspectMember {cons("Pointcut"), scope}
+    "advice" ID AdviceType "(" {Param ","}* ")" ":" ID "(" {Exp ","}* ")" Stm -> AspectMember {cons("Advice"), scope}
+    "before"                                                                  -> AdviceType   {cons("Before")}
+    "after"                                                                   -> AdviceType   {cons("After")}
+    "assigned" "(" Type ")"                                                   -> JoinPoint    {cons("Assigned")}
+    ID ":" Type                                                               -> Member       {cons("Property")}
+    ID "(" {Param ","}* ")" Stm                                               -> Member       {cons("Function"), scope}
+    ID ":" Type                                                               -> Param        {cons("Param")}
+    "var" ID ":" Type                                                         -> Stm          {cons("VarDecl")}
+    "var" ID ":" Type "=" Exp                                                 -> Stm          {cons("VarDeclInit")}
+    ID "=" Exp                                                                -> Stm          {cons("Assign")}
+    "{" Stm* "}"                                                              -> Stm          {cons("Block"), scope}
+    "print" Exp                                                               -> Stm          {cons("Print")}
+    ID "(" {Exp ","}* ")"                                                     -> Exp          {cons("Call")}
+    ID                                                                        -> Exp          {cons("Var")}
+    Exp "." ID                                                                -> Exp          {cons("PropAccess")}
+    ID                                                                        -> Type         {cons("Type")}
+    "String"                                                                  -> Type         {cons("StringType"), prefer}
+    "Int"                                                                     -> Type         {cons("IntType"), prefer}
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx	Mon Feb 20 13:57:05 2012	(r24348)
@@ -1,6 +1,6 @@
 package SPX
 
-module example2
+module SPX
 
 context-free syntax
     

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/tpl/gen.tpl
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/tpl/gen.tpl	Mon Feb 20 13:57:05 2012	(r24348)
@@ -0,0 +1,6 @@
+module analysis-generated
+
+imports
+  include/EntityWithAspects
+  lib/analysis-library
+

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/tpl/syntax.tpl
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/tpl/syntax.tpl	Mon Feb 20 13:57:05 2012	(r24348)
@@ -0,0 +1,12 @@
+module EntityWithAspects
+
+imports Common
+
+exports
+
+  context-free start-symbols
+  
+    Start
+
+  context-free syntax
+

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Mon Feb 20 12:50:23 2012	(r24347)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Mon Feb 20 13:57:05 2012	(r24348)
@@ -1,8 +1,8 @@
-module analysis-generated
-
-imports
-  include/EntityWithAspects
-  lib/analysis-library
+module analysis-generated
+
+imports
+  include/EntityWithAspects
+  lib/analysis-library
 
 signature
   constructors
@@ -16,6 +16,7 @@
     Property : Namespace
     Entity   : Namespace
 
+
 rules
 
   nam-get-scope-types :
@@ -109,38 +110,38 @@
     VarDeclInit(x, _, _) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Module(s_5032, t_5032) -> Module(s_5032{def-path}, t_5032)
+    Module(v_14540, w_14540) -> Module(v_14540{def-path}, w_14540)
 
   nam-annotate-names(|def-path):
-    Entity(q_5032, r_5032) -> Entity(q_5032{def-path}, r_5032)
+    Entity(t_14540, u_14540) -> Entity(t_14540{def-path}, u_14540)
 
   nam-annotate-names(|def-path):
-    Import(p_5032) -> Import(p_5032{def-path})
+    Import(s_14540) -> Import(s_14540{def-path})
 
   nam-annotate-names(|def-path):
-    WildcardImport(o_5032) -> WildcardImport(<nam-annotate-use(|Module())> o_5032)
+    WildcardImport(r_14540) -> WildcardImport(<nam-annotate-use(|Module())> r_14540)
 
   nam-annotate-names(|def-path):
-    EntityImport(m_5032, n_5032) -> EntityImport(
-                                      <nam-annotate-use(|Module())> m_5032
-                                    , <nam-annotate-use(|Entity())> n_5032
-                                    )
+    EntityImport(p_14540, q_14540) -> EntityImport(
+                                        <nam-annotate-use(|Module())> p_14540
+                                      , <nam-annotate-use(|Entity())> q_14540
+                                      )
 
   nam-annotate-names(|def-path):
-    Aspect(k_5032, l_5032) -> Aspect(k_5032{def-path}, l_5032)
+    Aspect(n_14540, o_14540) -> Aspect(n_14540{def-path}, o_14540)
 
   nam-annotate-names(|def-path):
-    Pointcut(h_5032, i_5032, j_5032) -> Pointcut(h_5032{def-path}, i_5032, j_5032)
+    Pointcut(k_14540, l_14540, m_14540) -> Pointcut(k_14540{def-path}, l_14540, m_14540)
 
   nam-annotate-names(|def-path):
-    Advice(b_5032, c_5032, d_5032, e_5032, f_5032, g_5032) -> Advice(
-                                                                b_5032{def-path}
-                                                              , c_5032
-                                                              , d_5032
-                                                              , <nam-annotate-use(|Pointcut())> e_5032
-                                                              , f_5032
-                                                              , g_5032
-                                                              )
+    Advice(e_14540, f_14540, g_14540, h_14540, i_14540, j_14540) -> Advice(
+                                                                      e_14540{def-path}
+                                                                    , f_14540
+                                                                    , g_14540
+                                                                    , <nam-annotate-use(|Pointcut())> h_14540
+                                                                    , i_14540
+                                                                    , j_14540
+                                                                    )
 
   nam-annotate-names(|def-path):
     Before() -> Before()
@@ -149,52 +150,52 @@
     After() -> After()
 
   nam-annotate-names(|def-path):
-    Assigned(a_5032) -> Assigned(a_5032)
+    Assigned(d_14540) -> Assigned(d_14540)
 
   nam-annotate-names(|def-path):
-    Property(y_5031, z_5031) -> Property(y_5031{def-path}, z_5031)
+    Property(b_14540, c_14540) -> Property(b_14540{def-path}, c_14540)
 
   nam-annotate-names(|def-path):
-    Function(v_5031, w_5031, x_5031) -> Function(v_5031{def-path}, w_5031, x_5031)
+    Function(y_14539, z_14539, a_14540) -> Function(y_14539{def-path}, z_14539, a_14540)
 
   nam-annotate-names(|def-path):
-    Param(t_5031, u_5031) -> Param(t_5031{def-path}, u_5031)
+    Param(w_14539, x_14539) -> Param(w_14539{def-path}, x_14539)
 
   nam-annotate-names(|def-path):
-    VarDecl(r_5031, s_5031) -> VarDecl(r_5031{def-path}, s_5031)
+    VarDecl(u_14539, v_14539) -> VarDecl(u_14539{def-path}, v_14539)
 
   nam-annotate-names(|def-path):
-    VarDeclInit(o_5031, p_5031, q_5031) -> VarDeclInit(o_5031{def-path}, p_5031, q_5031)
+    VarDeclInit(r_14539, s_14539, t_14539) -> VarDeclInit(r_14539{def-path}, s_14539, t_14539)
 
   nam-annotate-names(|def-path):
-    Assign(m_5031, n_5031) -> Assign(
-                                <nam-annotate-use(|Var())> m_5031
-                              , n_5031
-                              )
+    Assign(p_14539, q_14539) -> Assign(
+                                  <nam-annotate-use(|Var())> p_14539
+                                , q_14539
+                                )
 
   nam-annotate-names(|def-path):
-    Block(l_5031) -> Block(l_5031)
+    Block(o_14539) -> Block(o_14539)
 
   nam-annotate-names(|def-path):
-    Print(k_5031) -> Print(k_5031)
+    Print(n_14539) -> Print(n_14539)
 
   nam-annotate-names(|def-path):
-    Call(i_5031, j_5031) -> Call(
-                              <nam-annotate-use(|Function())> i_5031
-                            , j_5031
-                            )
+    Call(l_14539, m_14539) -> Call(
+                                <nam-annotate-use(|Function())> l_14539
+                              , m_14539
+                              )
 
   nam-annotate-names(|def-path):
-    Var(h_5031) -> Var(<nam-annotate-use(|Var())> h_5031)
+    Var(k_14539) -> Var(<nam-annotate-use(|Var())> k_14539)
 
   nam-annotate-names(|def-path):
-    PropAccess(f_5031, g_5031) -> PropAccess(
-                                    f_5031
-                                  , <nam-annotate-use(|Property())> g_5031
-                                  )
+    PropAccess(i_14539, j_14539) -> PropAccess(
+                                      i_14539
+                                    , <nam-annotate-use(|Property())> j_14539
+                                    )
 
   nam-annotate-names(|def-path):
-    Type(e_5031) -> Type(<nam-annotate-use(|Entity())> e_5031)
+    Type(h_14539) -> Type(<nam-annotate-use(|Entity())> h_14539)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()


From gabrielkonat at gmail.com  Mon Feb 20 16:01:45 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 20 Feb 2012 15:01:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24349 - in
	spoofax-contrib/separate-compilation-examples/c-without-macros:
	syntax test trans
Message-ID: <20120220150147.890DB2B8010@mx2.tudelft.nl>

Author: gkonat
Date: Mon Feb 20 15:01:44 2012
New Revision: 24349
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24349&sc=1

Log:
Added includes to c-without-macros experiment.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/Common.sdf
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp	Mon Feb 20 13:57:05 2012	(r24348)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp	Mon Feb 20 15:01:44 2012	(r24349)
@@ -1,6 +1,8 @@
 [
    Start                   -- _1,
    Start.1:iter-star       -- _1,
+   Include                 -- KW["include"] KW["\""] _1 KW["\""],
+   Include                 -- KW["include"] KW["<"] _1 KW[">"],
    FunDecl                 -- _1 _2 KW["("] _3 KW[")"] KW["{"] _4 KW["}"],
    FunDecl.3:iter-star-sep -- _1 KW[","],
    FunDecl.4:iter-star     -- _1,
@@ -12,7 +14,7 @@
    StructDecl.2:iter-star  -- _1,
    Field                   -- _1 _2 KW[";"],
    VarDecl                 -- _1 _2 KW[";"],
-   Expr                    -- _1 KW[";"],
+   Stmt                    -- _1 KW[";"],
    Assign                  -- _1 KW["="] _2 KW[";"],
    Return                  -- KW["return"] _1 KW[";"],
    StrLit                  -- _1,

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf	Mon Feb 20 13:57:05 2012	(r24348)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf	Mon Feb 20 15:01:44 2012	(r24349)
@@ -11,6 +11,8 @@
   context-free syntax
 
     Definition*                                -> Start      {cons("Start"), scope}
+    "include" "\"" UQSTRING "\""               -> Definition {cons("Include")}
+    "include" "<" UQSTRING ">"                 -> Definition {cons("Include")}
     Type ID "(" {Param ","}* ")" "{" Stmt* "}" -> Definition {cons("FunDecl"), scope}
     Type ID                                    -> Param      {cons("Param")}
     TypeDecl ";"                               -> Definition {cons("TypeDecl")}
@@ -19,7 +21,7 @@
     "struct" ID "{" Field* "}"                 -> TypeDecl   {cons("StructDecl"), scope}
     Type ID ";"                                -> Field      {cons("Field")}
     Type ID ";"                                -> Stmt       {cons("VarDecl")}
-    Expr ";"                                   -> Stmt       {cons("Expr")}
+    Expr ";"                                   -> Stmt       {cons("Stmt")}
     Expr "=" Expr ";"                          -> Stmt       {cons("Assign")}
     "return" Expr ";"                          -> Stmt       {cons("Return"), prefer}
     STRING                                     -> Expr       {cons("StrLit")}

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/Common.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/Common.sdf	Mon Feb 20 13:57:05 2012	(r24348)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/Common.sdf	Mon Feb 20 15:01:44 2012	(r24349)
@@ -7,6 +7,7 @@
     [a-zA-Z][a-zA-Z0-9\_]* -> ID
     "-"? [0-9]+          -> INT
 
+    StringChar*           -> UQSTRING
     "\"" StringChar* "\"" -> STRING
     ~[\"\n]               -> StringChar
     "\\\""                -> StringChar

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx	Mon Feb 20 13:57:05 2012	(r24348)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/SPX.spx	Mon Feb 20 15:01:44 2012	(r24349)
@@ -4,39 +4,42 @@
 
 context-free syntax
     
-  Definition*                                 -> Start {"Start", scope(Function, Struct, Type)}
+  Definition* -> Start {"Start", scope(Function, Struct, Type, Include)}
+  
+  "include" "\"" Include@=UQSTRING "\"" -> Definition {"Include"}
+  "include" "<" Include@=UQSTRING ">"   -> Definition {"Include"}
 
   Type Function@=ID "(" {Param "," }* ")" "{" Stmt* "}" -> Definition {"FunDecl", scope(Var)}
 
-  Type Var@=ID                                -> Param {"Param"}
+  Type Var@=ID  -> Param {"Param"}
 
-  TypeDecl ";"                                -> Definition {"TypeDecl"}
+  TypeDecl ";"  -> Definition {"TypeDecl"}
 
-  "typedef" Type Type@=ID                     -> TypeDecl {"TypeDef"}
-  "typedef" TypeDecl Type@=ID                 -> TypeDecl {"TypeDef"} 
-  "struct" Struct@=ID "{" Field* "}"          -> TypeDecl {"StructDecl", scope(Field)}
-
-  Type Field@=ID ";"                          -> Field {"Field"}
-
-  Type Var@=ID ";"                            -> Stmt {"VarDecl"}
-  Expr ";"                                    -> Stmt {"Expr"}
-  Expr "=" Expr ";"                           -> Stmt {"Assign"}
-  "return" Expr ";"                           -> Stmt {"Return", prefer}
-
-  STRING                                      -> Expr {"StrLit"}
-  INT                                         -> Expr {"IntLit"}
-  Function at ID "(" {Expr ","}* ")"             -> Expr {"Call", avoid}
-  "sizeof" "(" Type ")"                       -> Expr {"SizeOf"}
-  Expr "." Field at ID                           -> Expr {"Access"}
-  Expr "->" Field at ID                          -> Expr {"DerefAccess"}
-  "*" Expr                                    -> Expr {"Deref"}
-  "&" Expr                                    -> Expr {"Ref"}
-  Var at ID                                      -> Expr {"VarRef"}
-  "(" Type ")" Expr                           -> Expr {"Cast"}
-
-  Type at ID                                     -> Type {"Type", avoid}
-  "char"                                      -> Type {"Char", prefer} 
-  "int"                                       -> Type {"Int", prefer}
-  "void"                                      -> Type {"Void", prefer}
-  Type "*"                                    -> Type {"Pointer", left}
-  "struct" Struct at ID                          -> Type {"StructRef"}
\ No newline at end of file
+  "typedef" Type Type@=ID             -> TypeDecl {"TypeDef"}
+  "typedef" TypeDecl Type@=ID         -> TypeDecl {"TypeDef"} 
+  "struct" Struct@=ID "{" Field* "}"  -> TypeDecl {"StructDecl", scope(Field)}
+
+  Type Field@=ID ";"  -> Field {"Field"}
+
+  Type Var@=ID ";"  -> Stmt {"VarDecl"}
+  Expr ";"          -> Stmt {"Stmt"}
+  Expr "=" Expr ";" -> Stmt {"Assign"}
+  "return" Expr ";" -> Stmt {"Return", prefer}
+
+  STRING                          -> Expr {"StrLit"}
+  INT                             -> Expr {"IntLit"}
+  Function at ID "(" {Expr ","}* ")" -> Expr {"Call", avoid}
+  "sizeof" "(" Type ")"           -> Expr {"SizeOf"}
+  Expr "." Field at ID               -> Expr {"Access"}
+  Expr "->" Field at ID              -> Expr {"DerefAccess"}
+  "*" Expr                        -> Expr {"Deref"}
+  "&" Expr                        -> Expr {"Ref"}
+  Var at ID                          -> Expr {"VarRef"}
+  "(" Type ")" Expr               -> Expr {"Cast"}
+
+  Type at ID             -> Type {"Type", avoid}
+  "char"              -> Type {"Char", prefer} 
+  "int"               -> Type {"Int", prefer}
+  "void"              -> Type {"Void", prefer}
+  Type "*"            -> Type {"Pointer", left}
+  "struct" Struct at ID  -> Type {"StructRef"}
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi	Mon Feb 20 13:57:05 2012	(r24348)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/main.cwi	Mon Feb 20 15:01:44 2012	(r24349)
@@ -1,3 +1,5 @@
+include "/test/blog.cwi"
+
 int main() {
   struct blog* blogptr;
   blogptr->posterName = "asd";

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Mon Feb 20 13:57:05 2012	(r24348)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Mon Feb 20 15:01:44 2012	(r24349)
@@ -6,6 +6,7 @@
 
 signature
   constructors
+    Include  : Namespace
     Function : Namespace
     Field    : Namespace
     Var      : Namespace
@@ -19,6 +20,7 @@
     Start(_) -> [ Function()
                 , Struct()
                 , Type()
+                , Include()
                 ]
 
   nam-get-scope-types :
@@ -28,6 +30,12 @@
     StructDecl(_, _) -> [Field()]
 
   nam-get-definition-key :
+    Include(x) -> x
+
+  nam-get-definition :
+    Include(x) -> <nam-get-def(|Include())> x
+
+  nam-get-definition-key :
     FunDecl(_, x, _, _) -> x
 
   nam-get-definition :
@@ -64,82 +72,88 @@
     VarDecl(_, x) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Start(u_24352) -> Start(u_24352)
+    Start(s_45962) -> Start(s_45962)
+
+  nam-annotate-names(|def-path):
+    Include(r_45962) -> Include(r_45962{def-path})
+
+  nam-annotate-names(|def-path):
+    Include(q_45962) -> Include(q_45962{def-path})
 
   nam-annotate-names(|def-path):
-    FunDecl(q_24352, r_24352, s_24352, t_24352) -> FunDecl(q_24352, r_24352{def-path}, s_24352, t_24352)
+    FunDecl(m_45962, n_45962, o_45962, p_45962) -> FunDecl(m_45962, n_45962{def-path}, o_45962, p_45962)
 
   nam-annotate-names(|def-path):
-    Param(o_24352, p_24352) -> Param(o_24352, p_24352{def-path})
+    Param(k_45962, l_45962) -> Param(k_45962, l_45962{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDecl(n_24352) -> TypeDecl(n_24352)
+    TypeDecl(j_45962) -> TypeDecl(j_45962)
 
   nam-annotate-names(|def-path):
-    TypeDef(l_24352, m_24352) -> TypeDef(l_24352, m_24352{def-path})
+    TypeDef(h_45962, i_45962) -> TypeDef(h_45962, i_45962{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDef(j_24352, k_24352) -> TypeDef(j_24352, k_24352{def-path})
+    TypeDef(f_45962, g_45962) -> TypeDef(f_45962, g_45962{def-path})
 
   nam-annotate-names(|def-path):
-    StructDecl(h_24352, i_24352) -> StructDecl(h_24352{def-path}, i_24352)
+    StructDecl(d_45962, e_45962) -> StructDecl(d_45962{def-path}, e_45962)
 
   nam-annotate-names(|def-path):
-    Field(f_24352, g_24352) -> Field(f_24352, g_24352{def-path})
+    Field(b_45962, c_45962) -> Field(b_45962, c_45962{def-path})
 
   nam-annotate-names(|def-path):
-    VarDecl(d_24352, e_24352) -> VarDecl(d_24352, e_24352{def-path})
+    VarDecl(z_45961, a_45962) -> VarDecl(z_45961, a_45962{def-path})
 
   nam-annotate-names(|def-path):
-    Expr(c_24352) -> Expr(c_24352)
+    Stmt(y_45961) -> Stmt(y_45961)
 
   nam-annotate-names(|def-path):
-    Assign(a_24352, b_24352) -> Assign(a_24352, b_24352)
+    Assign(w_45961, x_45961) -> Assign(w_45961, x_45961)
 
   nam-annotate-names(|def-path):
-    Return(z_24351) -> Return(z_24351)
+    Return(v_45961) -> Return(v_45961)
 
   nam-annotate-names(|def-path):
-    StrLit(y_24351) -> StrLit(y_24351)
+    StrLit(u_45961) -> StrLit(u_45961)
 
   nam-annotate-names(|def-path):
-    IntLit(x_24351) -> IntLit(x_24351)
+    IntLit(t_45961) -> IntLit(t_45961)
 
   nam-annotate-names(|def-path):
-    Call(v_24351, w_24351) -> Call(
-                                <nam-annotate-use(|Function())> v_24351
-                              , w_24351
+    Call(r_45961, s_45961) -> Call(
+                                <nam-annotate-use(|Function())> r_45961
+                              , s_45961
                               )
 
   nam-annotate-names(|def-path):
-    SizeOf(u_24351) -> SizeOf(u_24351)
+    SizeOf(q_45961) -> SizeOf(q_45961)
 
   nam-annotate-names(|def-path):
-    Access(s_24351, t_24351) -> Access(
-                                  s_24351
-                                , <nam-annotate-use(|Field())> t_24351
+    Access(o_45961, p_45961) -> Access(
+                                  o_45961
+                                , <nam-annotate-use(|Field())> p_45961
                                 )
 
   nam-annotate-names(|def-path):
-    DerefAccess(q_24351, r_24351) -> DerefAccess(
-                                       q_24351
-                                     , <nam-annotate-use(|Field())> r_24351
+    DerefAccess(m_45961, n_45961) -> DerefAccess(
+                                       m_45961
+                                     , <nam-annotate-use(|Field())> n_45961
                                      )
 
   nam-annotate-names(|def-path):
-    Deref(p_24351) -> Deref(p_24351)
+    Deref(l_45961) -> Deref(l_45961)
 
   nam-annotate-names(|def-path):
-    Ref(o_24351) -> Ref(o_24351)
+    Ref(k_45961) -> Ref(k_45961)
 
   nam-annotate-names(|def-path):
-    VarRef(n_24351) -> VarRef(<nam-annotate-use(|Var())> n_24351)
+    VarRef(j_45961) -> VarRef(<nam-annotate-use(|Var())> j_45961)
 
   nam-annotate-names(|def-path):
-    Cast(l_24351, m_24351) -> Cast(l_24351, m_24351)
+    Cast(h_45961, i_45961) -> Cast(h_45961, i_45961)
 
   nam-annotate-names(|def-path):
-    Type(k_24351) -> Type(<nam-annotate-use(|Type())> k_24351)
+    Type(g_45961) -> Type(<nam-annotate-use(|Type())> g_45961)
 
   nam-annotate-names(|def-path):
     Char() -> Char()
@@ -151,7 +165,7 @@
     Void() -> Void()
 
   nam-annotate-names(|def-path):
-    Pointer(j_24351) -> Pointer(j_24351)
+    Pointer(f_45961) -> Pointer(f_45961)
 
   nam-annotate-names(|def-path):
-    StructRef(i_24351) -> StructRef(<nam-annotate-use(|Struct())> i_24351)
\ No newline at end of file
+    StructRef(e_45961) -> StructRef(<nam-annotate-use(|Struct())> e_45961)
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Mon Feb 20 13:57:05 2012	(r24348)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Mon Feb 20 15:01:44 2012	(r24349)
@@ -1,20 +1,24 @@
 module analysis-manual
 
 imports
+  libstratego-lib
   include/C-without-macros
+  lib/editor-common.generated
   lib/index-library
   lib/analysis-library
   analysis-generated
   c_without_macros
   types
 
-rules
+rules // Adjust path
   
+  // Set root URI part to the file path.
   adjust-index-path(is-def |namespace, path):
-    Start(_) -> ["Global"]
+    Start(_) -> [<string-replace(|<project-path>, "")> <Fst> <index-get-current-file>]
   
-  // Adjust the lookup behavior for properties,
-  // overriding the lookup with a list of property Defs
+rules // Adjust lookup
+  
+  // Return a list of fields in the struct of the left hand side.
   adjust-index-lookup(is-use |namespace, path, prefix):
     Access(e, <is-use>) -> p*
     with
@@ -24,10 +28,35 @@
 	      p* := StopLookup()
 	    end
 
-  // Adjust the lookup behavior for variables,
-  // overriding the lookup with a list of URIs
+  // Return both local variables and fields.
   adjust-index-lookup(is-use |namespace, path, prefix):
     VarRef(<is-use>) -> [[Var() | path], [Field() | path]]
+    
+  // Add typedefs from included files.
+  adjust-index-lookup(is-use |namespace, path, prefix): 
+    Type(<is-use>) -> <conc> ([[Type() | path]], includePaths)
+    with
+      // TODO: Don't use index-get-all-in-file.
+      includePaths := <filter(include-to-path(|Type()))> <index-get-all-in-file> <index-get-current-file>
+      
+  // Add structs from included files.      
+  adjust-index-lookup(is-use |namespace, path, prefix): 
+    StructRef(<is-use>) -> <conc> ([[Struct() | path]], includePaths)
+    with
+      // TODO: Don't use index-get-all-in-file.
+      includePaths := <filter(include-to-path(|Struct()))> <index-get-all-in-file> <index-get-current-file>
+
+  // Add functions from included files.
+  adjust-index-lookup(is-use |namespace, path, prefix): 
+    Call(<is-use>, _) -> <conc> ([[Function() | path]], includePaths)
+    with
+      // TODO: Don't use index-get-all-in-file.
+      includePaths := <filter(include-to-path(|Function()))> <index-get-all-in-file> <index-get-current-file>
+        
+  include-to-path(|kind):
+    Def([Include(), file|_]) -> [kind, file]
+
+rules // Diff adjust
 
   // Add Type to the constructors to check for differences.
   index-diff-constructors = ?Type(_, _)

From gabrielkonat at gmail.com  Mon Feb 20 19:20:07 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 20 Feb 2012 18:20:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24350 - in
	spoofax-contrib/separate-compilation-examples:
	c-without-macros/trans csharp-partial-classses
	csharp-partial-classses/syntax csharp-partial-classses/test
	csharp...
Message-ID: <20120220182007.D377D108C00F@mx3.tudelft.nl>

Author: gkonat
Date: Mon Feb 20 18:20:06 2012
New Revision: 24350
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24350&sc=1

Log:
Added imports to csharp-partial-classes experiment.
Cleaned up analysis-manual files.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.generated.pp
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example.csh
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Mon Feb 20 15:01:44 2012	(r24349)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Mon Feb 20 18:20:06 2012	(r24350)
@@ -72,88 +72,88 @@
     VarDecl(_, x) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Start(s_45962) -> Start(s_45962)
+    Start(d_4358) -> Start(d_4358)
 
   nam-annotate-names(|def-path):
-    Include(r_45962) -> Include(r_45962{def-path})
+    Include(c_4358) -> Include(c_4358{def-path})
 
   nam-annotate-names(|def-path):
-    Include(q_45962) -> Include(q_45962{def-path})
+    Include(b_4358) -> Include(b_4358{def-path})
 
   nam-annotate-names(|def-path):
-    FunDecl(m_45962, n_45962, o_45962, p_45962) -> FunDecl(m_45962, n_45962{def-path}, o_45962, p_45962)
+    FunDecl(x_4357, y_4357, z_4357, a_4358) -> FunDecl(x_4357, y_4357{def-path}, z_4357, a_4358)
 
   nam-annotate-names(|def-path):
-    Param(k_45962, l_45962) -> Param(k_45962, l_45962{def-path})
+    Param(v_4357, w_4357) -> Param(v_4357, w_4357{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDecl(j_45962) -> TypeDecl(j_45962)
+    TypeDecl(u_4357) -> TypeDecl(u_4357)
 
   nam-annotate-names(|def-path):
-    TypeDef(h_45962, i_45962) -> TypeDef(h_45962, i_45962{def-path})
+    TypeDef(s_4357, t_4357) -> TypeDef(s_4357, t_4357{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDef(f_45962, g_45962) -> TypeDef(f_45962, g_45962{def-path})
+    TypeDef(q_4357, r_4357) -> TypeDef(q_4357, r_4357{def-path})
 
   nam-annotate-names(|def-path):
-    StructDecl(d_45962, e_45962) -> StructDecl(d_45962{def-path}, e_45962)
+    StructDecl(o_4357, p_4357) -> StructDecl(o_4357{def-path}, p_4357)
 
   nam-annotate-names(|def-path):
-    Field(b_45962, c_45962) -> Field(b_45962, c_45962{def-path})
+    Field(m_4357, n_4357) -> Field(m_4357, n_4357{def-path})
 
   nam-annotate-names(|def-path):
-    VarDecl(z_45961, a_45962) -> VarDecl(z_45961, a_45962{def-path})
+    VarDecl(k_4357, l_4357) -> VarDecl(k_4357, l_4357{def-path})
 
   nam-annotate-names(|def-path):
-    Stmt(y_45961) -> Stmt(y_45961)
+    Stmt(j_4357) -> Stmt(j_4357)
 
   nam-annotate-names(|def-path):
-    Assign(w_45961, x_45961) -> Assign(w_45961, x_45961)
+    Assign(h_4357, i_4357) -> Assign(h_4357, i_4357)
 
   nam-annotate-names(|def-path):
-    Return(v_45961) -> Return(v_45961)
+    Return(g_4357) -> Return(g_4357)
 
   nam-annotate-names(|def-path):
-    StrLit(u_45961) -> StrLit(u_45961)
+    StrLit(f_4357) -> StrLit(f_4357)
 
   nam-annotate-names(|def-path):
-    IntLit(t_45961) -> IntLit(t_45961)
+    IntLit(e_4357) -> IntLit(e_4357)
 
   nam-annotate-names(|def-path):
-    Call(r_45961, s_45961) -> Call(
-                                <nam-annotate-use(|Function())> r_45961
-                              , s_45961
-                              )
+    Call(c_4357, d_4357) -> Call(
+                              <nam-annotate-use(|Function())> c_4357
+                            , d_4357
+                            )
 
   nam-annotate-names(|def-path):
-    SizeOf(q_45961) -> SizeOf(q_45961)
+    SizeOf(b_4357) -> SizeOf(b_4357)
 
   nam-annotate-names(|def-path):
-    Access(o_45961, p_45961) -> Access(
-                                  o_45961
-                                , <nam-annotate-use(|Field())> p_45961
-                                )
+    Access(z_4356, a_4357) -> Access(
+                                z_4356
+                              , <nam-annotate-use(|Field())> a_4357
+                              )
 
   nam-annotate-names(|def-path):
-    DerefAccess(m_45961, n_45961) -> DerefAccess(
-                                       m_45961
-                                     , <nam-annotate-use(|Field())> n_45961
-                                     )
+    DerefAccess(x_4356, y_4356) -> DerefAccess(
+                                     x_4356
+                                   , <nam-annotate-use(|Field())> y_4356
+                                   )
 
   nam-annotate-names(|def-path):
-    Deref(l_45961) -> Deref(l_45961)
+    Deref(w_4356) -> Deref(w_4356)
 
   nam-annotate-names(|def-path):
-    Ref(k_45961) -> Ref(k_45961)
+    Ref(v_4356) -> Ref(v_4356)
 
   nam-annotate-names(|def-path):
-    VarRef(j_45961) -> VarRef(<nam-annotate-use(|Var())> j_45961)
+    VarRef(u_4356) -> VarRef(<nam-annotate-use(|Var())> u_4356)
 
   nam-annotate-names(|def-path):
-    Cast(h_45961, i_45961) -> Cast(h_45961, i_45961)
+    Cast(s_4356, t_4356) -> Cast(s_4356, t_4356)
 
   nam-annotate-names(|def-path):
-    Type(g_45961) -> Type(<nam-annotate-use(|Type())> g_45961)
+    Type(r_4356) -> Type(<nam-annotate-use(|Type())> r_4356)
 
   nam-annotate-names(|def-path):
     Char() -> Char()
@@ -165,7 +165,7 @@
     Void() -> Void()
 
   nam-annotate-names(|def-path):
-    Pointer(f_45961) -> Pointer(f_45961)
+    Pointer(q_4356) -> Pointer(q_4356)
 
   nam-annotate-names(|def-path):
-    StructRef(e_45961) -> StructRef(<nam-annotate-use(|Struct())> e_45961)
\ No newline at end of file
+    StructRef(p_4356) -> StructRef(<nam-annotate-use(|Struct())> p_4356)
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Mon Feb 20 15:01:44 2012	(r24349)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Mon Feb 20 18:20:06 2012	(r24350)
@@ -18,7 +18,7 @@
   
 rules // Adjust lookup
   
-  // Return a list of fields in the struct of the left hand side.
+  // Return a list of fields in the struct on the left hand side.
   adjust-index-lookup(is-use |namespace, path, prefix):
     Access(e, <is-use>) -> p*
     with
@@ -56,7 +56,7 @@
   include-to-path(|kind):
     Def([Include(), file|_]) -> [kind, file]
 
-rules // Diff adjust
+rules // Adjust diff
 
   // Add Type to the constructors to check for differences.
   index-diff-constructors = ?Type(_, _)

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml	Mon Feb 20 15:01:44 2012	(r24349)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/build.main.xml	Mon Feb 20 18:20:06 2012	(r24350)
@@ -59,7 +59,7 @@
             </filterchain>
           </loadfile>
           <concat destfile="syntax/CSharpPartialClassses.sdf">${syntax-tpl}${syntax-spx}</concat>
-            
+           
           <!-- analysis-generated.str -->
           <loadfile property="gen-tpl" srcFile="tpl/gen.tpl"/>
           <loadfile property="gen-spx" srcFile=".shadowdir/SPX/SPX.str">

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.generated.pp
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.generated.pp	Mon Feb 20 15:01:44 2012	(r24349)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.generated.pp	Mon Feb 20 18:20:06 2012	(r24350)
@@ -1,12 +1,16 @@
 [
-   Start                    -- _1,
+   Start                    -- _1 _2,
    Start.1:iter-star        -- _1,
+   Start.2:iter-star        -- _1,
    Namespace                -- KW["namespace"] _1 KW["{"] _2 KW["}"],
    Namespace.2:iter-star    -- _1,
    PartialClass             -- KW["partial"] KW["class"] _1 KW["{"] _2 KW["}"],
    PartialClass.2:iter-star -- _1,
    Class                    -- KW["class"] _1 KW["{"] _2 KW["}"],
    Class.2:iter-star        -- _1,
+   Using                    -- KW["using"] _1 KW[";"],
+   UsingPart                -- _1,
+   UsingPart                -- _1 KW["."] _2,
    Field                    -- _1 _2 KW[";"],
    Method                   -- _1 _2 KW["("] KW[")"] KW["{"] _3 KW["}"],
    Method.3:iter-star       -- _1,

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf	Mon Feb 20 15:01:44 2012	(r24349)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf	Mon Feb 20 18:20:06 2012	(r24350)
@@ -10,10 +10,13 @@
 
   context-free syntax
 
-    Definition*                                 -> Start         {cons("Start"), scope}
+    Using* Definition*                          -> Start         {cons("Start"), scope}
     "namespace" ID "{" Definition* "}"          -> Definition    {cons("Namespace"), scope}
     "partial" "class" ID "{" ClassBodyDecl* "}" -> Definition    {cons("PartialClass"), scope}
     "class" ID "{" ClassBodyDecl* "}"           -> Definition    {cons("Class"), scope}
+    "using" UsingPart ";"                       -> Using         {cons("Using")}
+    ID                                          -> UsingPart     {cons("UsingPart")}
+    UsingPart "." ID                            -> UsingPart     {cons("UsingPart")}
     Type ID ";"                                 -> ClassBodyDecl {cons("Field")}
     Type ID "(" ")" "{" Stmt* "}"               -> ClassBodyDecl {cons("Method")}
     ID                                          -> Type          {cons("Type")}

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx	Mon Feb 20 15:01:44 2012	(r24349)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx	Mon Feb 20 18:20:06 2012	(r24350)
@@ -5,11 +5,15 @@
 context-free syntax
 	
 	%% Constructs
-  Definition*                                         -> Start {"Start", scope(Class, Namespace)}
+  Using* Definition*                                  -> Start {"Start", scope(Class, Namespace, Using)}
   "namespace" Namespace@=ID "{" Definition* "}"       -> Definition {"Namespace", scope(Class, Namespace)}
   "partial" "class" Class@=ID "{" ClassBodyDecl* "}"  -> Definition {"PartialClass", scope(Field, Method)}
   "class" Class@=ID "{" ClassBodyDecl* "}"            -> Definition {"Class", scope(Field, Method)}
   
+  "using" Using@=UsingPart ";"  -> Using {"Using"}
+  Namespace at ID                  -> UsingPart {"UsingPart"}
+  UsingPart "." Namespace at ID    -> UsingPart {"UsingPart"}
+  
   %% Class members
   Type Field@=ID ";"                    -> ClassBodyDecl {"Field"}
   Type Method@=ID "(" ")" "{" Stmt* "}" -> ClassBodyDecl {"Method"} 

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example.csh
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example.csh	Mon Feb 20 15:01:44 2012	(r24349)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example.csh	Mon Feb 20 18:20:06 2012	(r24350)
@@ -1,5 +1,11 @@
 namespace Blogger
 {
+  namespace Util {
+    class URLUtil {
+      URL url;
+    }
+  }
+  
 	partial class URL {
 		string location;
 	}

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh	Mon Feb 20 15:01:44 2012	(r24349)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/example2.csh	Mon Feb 20 18:20:06 2012	(r24350)
@@ -1,3 +1,5 @@
+using Blogger.Util;
+
 namespace Blogger
 {
 	class User {
@@ -9,6 +11,7 @@
 	class BlogPosting {
 		User poster; 
 		string body; 
+		URLUtil util;
   
 		string GetPosterHomepageLocation() {
 			return poster.homepage.location;
@@ -17,5 +20,9 @@
 		string GetPosterHomepageLocationProper() {
 			return poster.homepage.GetLocation();
 		}
+		
+		URLUtil Util() { 
+		  return util;
+		}
 	}
 }
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Mon Feb 20 15:01:44 2012	(r24349)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Mon Feb 20 18:20:06 2012	(r24350)
@@ -5,6 +5,7 @@
   lib/analysis-library
 signature
   constructors
+    Using     : Namespace
     Namespace : Namespace
     Class     : Namespace
     Field     : Namespace
@@ -14,7 +15,10 @@
 rules
 
   nam-get-scope-types :
-    Start(_) -> [Class(), Namespace()]
+    Start(_, _) -> [ Class()
+                   , Namespace()
+                   , Using()
+                   ]
 
   nam-get-scope-types :
     Namespace(_, _) -> [Class(), Namespace()]
@@ -44,6 +48,12 @@
     Class(x, _) -> <nam-get-def(|Class())> x
 
   nam-get-definition-key :
+    Using(x) -> x
+
+  nam-get-definition :
+    Using(x) -> <nam-get-def(|Using())> x
+
+  nam-get-definition-key :
     Field(_, x) -> x
 
   nam-get-definition :
@@ -56,25 +66,37 @@
     Method(_, x, _) -> <nam-get-def(|Method())> x
 
   nam-annotate-names(|def-path):
-    Start(b_13904) -> Start(b_13904)
+    Start(u_32256, v_32256) -> Start(u_32256, v_32256)
+
+  nam-annotate-names(|def-path):
+    Namespace(s_32256, t_32256) -> Namespace(s_32256{def-path}, t_32256)
+
+  nam-annotate-names(|def-path):
+    PartialClass(q_32256, r_32256) -> PartialClass(q_32256{def-path}, r_32256)
+
+  nam-annotate-names(|def-path):
+    Class(o_32256, p_32256) -> Class(o_32256{def-path}, p_32256)
 
   nam-annotate-names(|def-path):
-    Namespace(z_13903, a_13904) -> Namespace(z_13903{def-path}, a_13904)
+    Using(n_32256) -> Using(n_32256{def-path})
 
   nam-annotate-names(|def-path):
-    PartialClass(x_13903, y_13903) -> PartialClass(x_13903{def-path}, y_13903)
+    UsingPart(m_32256) -> UsingPart(<nam-annotate-use(|Namespace())> m_32256)
 
   nam-annotate-names(|def-path):
-    Class(v_13903, w_13903) -> Class(v_13903{def-path}, w_13903)
+    UsingPart(k_32256, l_32256) -> UsingPart(
+                                     k_32256
+                                   , <nam-annotate-use(|Namespace())> l_32256
+                                   )
 
   nam-annotate-names(|def-path):
-    Field(t_13903, u_13903) -> Field(t_13903, u_13903{def-path})
+    Field(i_32256, j_32256) -> Field(i_32256, j_32256{def-path})
 
   nam-annotate-names(|def-path):
-    Method(q_13903, r_13903, s_13903) -> Method(q_13903, r_13903{def-path}, s_13903)
+    Method(f_32256, g_32256, h_32256) -> Method(f_32256, g_32256{def-path}, h_32256)
 
   nam-annotate-names(|def-path):
-    Type(p_13903) -> Type(<nam-annotate-use(|Class())> p_13903)
+    Type(e_32256) -> Type(<nam-annotate-use(|Class())> e_32256)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()
@@ -86,19 +108,19 @@
     VoidType() -> VoidType()
 
   nam-annotate-names(|def-path):
-    Return(o_13903) -> Return(o_13903)
+    Return(d_32256) -> Return(d_32256)
 
   nam-annotate-names(|def-path):
-    FieldRef(n_13903) -> FieldRef(<nam-annotate-use(|Field())> n_13903)
+    FieldRef(c_32256) -> FieldRef(<nam-annotate-use(|Field())> c_32256)
 
   nam-annotate-names(|def-path):
-    FieldAccess(l_13903, m_13903) -> FieldAccess(
-                                       l_13903
-                                     , <nam-annotate-use(|Field())> m_13903
+    FieldAccess(a_32256, b_32256) -> FieldAccess(
+                                       a_32256
+                                     , <nam-annotate-use(|Field())> b_32256
                                      )
 
   nam-annotate-names(|def-path):
-    MethodCall(j_13903, k_13903) -> MethodCall(
-                                      j_13903
-                                    , <nam-annotate-use(|Method())> k_13903
+    MethodCall(y_32255, z_32255) -> MethodCall(
+                                      y_32255
+                                    , <nam-annotate-use(|Method())> z_32255
                                     )
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Mon Feb 20 15:01:44 2012	(r24349)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Mon Feb 20 18:20:06 2012	(r24350)
@@ -7,32 +7,66 @@
   analysis-generated
   types
 
-rules
+rules // Adjust path
 
   adjust-index-path(is-def |namespace, path):
-    Start(_) -> ["Global"]
+    Start(_, _) -> ["Global"]
   
-  // Adjust the lookup behavior for fields, overriding the lookup with a list of field Defs.
-  // TODO: Also return method names here? Because both have the same kind of syntax.
+rules // Adjust lookup
+  
+  // Return a list of fields in the class on the left hand side.
   adjust-index-lookup(is-use |namespace, path, prefix):
     FieldAccess(e, <is-use>) -> f*
     with
-	  if TYPE(e-type) := <type-of> e then
+	    if TYPE(e-type) := <type-of> e then
         f* := <index-lookup-children(|Field(), prefix)> e-type
       else
         f* := []
       end
       
-  // Adjust the lookup behavior for method calls, overriding the lookup with a list of method Defs
+  // Return a list of methods in the class on the left hand side.
   adjust-index-lookup(is-use |namespace, path, prefix):
     MethodCall(e, <is-use>) -> m*
     with
-	  if TYPE(e-type) := <type-of> e then
+	    if TYPE(e-type) := <type-of> e then
         m* := <index-lookup-children(|Method(), prefix)> e-type
       else
         m* := []
       end
       
+  // Return a list of namespaces in the namespace on the left hand side.
+  adjust-index-lookup(is-use |namespace, path, prefix):
+    UsingPart(ns, <is-use>) -> ns*
+      with
+      if name := <ns-to-name> ns then
+        ns* := <index-lookup-children(|Namespace(), prefix)> name
+      else
+        ns* := []
+      end
+        
+  ns-to-name:
+    UsingPart(ns) -> ns
+  ns-to-name:
+    UsingPart(ns, _) -> ns
+    
+  // Add classes from included namespaces.
+  // TODO: Add built in types?
+  adjust-index-lookup(is-use |namespace, path, prefix): 
+    Type(<is-use>) -> <conc> ([[Class() | path]], importPaths)
+    with
+      // TODO: Don't use index-get-all-in-file.
+      importPaths :=  <filter(using-to-path)> <index-get-all-in-file> <index-get-current-file>
+        
+  using-to-path:
+    Def([Using(), ns|rest]) -> <concat> [[Class()], <flatten-using> ns, rest]
+    
+  flatten-using:
+    UsingPart(ns, other) -> <conc> ([other], <flatten-using> ns)
+  flatten-using:
+    UsingPart(ns) -> [ns]
+    
+rules // Adjust diff
+    
   // Add Type to the constructors to check for differences.
   index-diff-constructors = ?Type(_, _)
   
@@ -41,4 +75,4 @@
     (Type(u1, v1), Type(u2, v2)) -> <id>
     where
        <index-uri-eq> (u1, u2);
-       <eq> (v1, v2)
\ No newline at end of file
+       <eq> (v1, v2)

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Mon Feb 20 15:01:44 2012	(r24349)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Mon Feb 20 18:20:06 2012	(r24350)
@@ -7,10 +7,9 @@
   analysis-generated
   types
 
-rules
+rules // Adjust lookup
   
-  // Adjust the lookup behavior for properties,
-  // overriding the lookup with a list of property Defs
+  // Return a list of properties in the entity on the left hand side.
   adjust-index-lookup(is-use |namespace, path, prefix):
     PropAccess(e, <is-use>) -> p*
     with
@@ -20,26 +19,31 @@
         p* := StopLookup()
       end
       
-  // Adjust lookup behavior for entity imports, overriding
-  // the lookup with a lookup in the parent module.
+  // Return a list of entities in the module on the left hand side.
   adjust-index-lookup(is-use |namespace, path, prefix):
     EntityImport(mod, <is-use>) -> e
     with
       e := <index-lookup-children(|Entity(), prefix)> mod
 
-  // Adjust the lookup behavior for variables,
-  // overriding the lookup with a list of URIs
+  // Return both local variables and properties.
   adjust-index-lookup(is-use |namespace, path, prefix):
     Var(<is-use>) -> [[Var() | path], [Property() | path]]
     
-  // Why is this needed? shouldn't the Var() adjust handle this?
-  // Adjust the lookup behavior for assignments,
-  // overriding the lookup with a list of URIs
+  // Return both local variables and properties.
+  // TODO: Make assign use Var on left hand side.
   adjust-index-lookup(is-use |namespace, path, prefix):
     Assign(<is-use>, _) -> [[Var() | path], [Property() | path]]
+    
+  // Select function with matching parameter types (if this fails, the normal lookup behavior is used!).
+  adjust-index-lookup(is-use |namespace, path, prefix):
+    Call(<is-use>, args) -> def
+    where
+      arg-types := <map(type-of)> args;
+      all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix)>;
+      def       := <getfirst(is-params-compatible(|arg-types))>
 
-  // Adjust the lookup behavior for types (TODO: Add built-in types),
-  // overriding the lookup with a list of URIs
+  // Add entities from included modules.
+  // TODO: Add built in types?
   adjust-index-lookup(is-use |namespace, path, prefix): 
     Type(<is-use>) -> <conc> ([[Entity() | path]], importPaths)
     with
@@ -51,16 +55,8 @@
     
   import-to-path:
     Def([Import(), EntityImport(mod, ent)|_]) -> [Entity(), ent, mod]
-
-  // Adjust the lookup behavior for function calls,
-  // selecting a function with matching parameter types
-  // (if this fails, the normal lookup behavior is used!)
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    Call(<is-use>, args) -> def
-    where
-      arg-types := <map(type-of)> args;
-      all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix)>;
-      def       := <getfirst(is-params-compatible(|arg-types))>
+      
+rules // Adjust diff
       
   // Add Type to the constructors to check for differences.
   index-diff-constructors = ?Type(_, _)

From gabrielkonat at gmail.com  Mon Feb 20 19:26:44 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 20 Feb 2012 18:26:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24351 -
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans
Message-ID: <20120220182644.8E997108C009@mx3.tudelft.nl>

Author: gkonat
Date: Mon Feb 20 18:26:44 2012
New Revision: 24351
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24351&sc=1

Log:
Use StopLookup() in recursive lookup adjusts.

Modified:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Mon Feb 20 18:20:06 2012	(r24350)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Mon Feb 20 18:26:44 2012	(r24351)
@@ -21,7 +21,7 @@
 	    if TYPE(e-type) := <type-of> e then
         f* := <index-lookup-children(|Field(), prefix)> e-type
       else
-        f* := []
+        f* := StopLookup()
       end
       
   // Return a list of methods in the class on the left hand side.
@@ -31,7 +31,7 @@
 	    if TYPE(e-type) := <type-of> e then
         m* := <index-lookup-children(|Method(), prefix)> e-type
       else
-        m* := []
+        m* := StopLookup()
       end
       
   // Return a list of namespaces in the namespace on the left hand side.
@@ -41,7 +41,7 @@
       if name := <ns-to-name> ns then
         ns* := <index-lookup-children(|Namespace(), prefix)> name
       else
-        ns* := []
+        ns* := StopLookup()
       end
         
   ns-to-name:

From gabrielkonat at gmail.com  Mon Feb 20 20:24:27 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 20 Feb 2012 19:24:27 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24352 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans
	spoofax-contrib/se...
Message-ID: <20120220192427.AAEFF2B802F@mx2.tudelft.nl>

Author: gkonat
Date: Mon Feb 20 19:24:27 2012
New Revision: 24352
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24352&sc=1

Log:
Fixed incorrect lookup in index-lookup-one-level.
Added primitive types to type lookup adjusts.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Mon Feb 20 18:26:44 2012	(r24351)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Mon Feb 20 19:24:27 2012	(r24352)
@@ -34,10 +34,11 @@
     
   // Add typedefs from included files.
   adjust-index-lookup(is-use |namespace, path, prefix): 
-    Type(<is-use>) -> <conc> ([[Type() | path]], includePaths)
+    Type(<is-use>) -> <concat> [primitives, [[Type() | path]], includePaths]
     with
       // TODO: Don't use index-get-all-in-file.
-      includePaths := <filter(include-to-path(|Type()))> <index-get-all-in-file> <index-get-current-file>
+      includePaths := <filter(include-to-path(|Type()))> <index-get-all-in-file> <index-get-current-file>;
+      primitives := <map(type-of; type-to-def)> <primitive-types>
       
   // Add structs from included files.      
   adjust-index-lookup(is-use |namespace, path, prefix): 

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Mon Feb 20 18:26:44 2012	(r24351)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/types.str	Mon Feb 20 19:24:27 2012	(r24352)
@@ -115,6 +115,12 @@
     (to-type, from-type) -> to-type
     where
       <eq> (<try-lookup-struct> from-type, <try-lookup-struct> to-type)
+      
+  primitive-types = 
+    ![Void(), Char(), Int()]
+      
+  type-to-def:
+    TYPE(t) -> Def([Type(), t])
 
   print-type = 
     switch id

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Mon Feb 20 18:26:44 2012	(r24351)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Mon Feb 20 19:24:27 2012	(r24352)
@@ -50,12 +50,12 @@
     UsingPart(ns, _) -> ns
     
   // Add classes from included namespaces.
-  // TODO: Add built in types?
   adjust-index-lookup(is-use |namespace, path, prefix): 
-    Type(<is-use>) -> <conc> ([[Class() | path]], importPaths)
+    Type(<is-use>) -> <concat> [primitives, [[Class() | path]], importPaths]
     with
       // TODO: Don't use index-get-all-in-file.
-      importPaths :=  <filter(using-to-path)> <index-get-all-in-file> <index-get-current-file>
+      importPaths :=  <filter(using-to-path)> <index-get-all-in-file> <index-get-current-file>;
+      primitives := <map(type-of; type-to-def)> <primitive-types>
         
   using-to-path:
     Def([Using(), ns|rest]) -> <concat> [[Class()], <flatten-using> ns, rest]

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Mon Feb 20 18:26:44 2012	(r24351)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Mon Feb 20 19:24:27 2012	(r24352)
@@ -4,7 +4,8 @@
   include/CSharpPartialClassses
   lib/index-library
   lib/analysis-library
-
+  analysis-generated
+  
 signature constructors
 
   TYPE        : STRING -> Type
@@ -31,13 +32,13 @@
     Return(e) -> <type-of> e	
   
   type-of:
-  	StringType() -> TYPE("String")
+  	StringType() -> TYPE("string")
   	
   type-of:
-  	IntType() -> TYPE("Int")
+  	IntType() -> TYPE("int")
   	
   type-of:
-  	VoidType() -> TYPE("Void")
+  	VoidType() -> TYPE("void")
   
   type-of:
     FieldRef(f) -> <type-of> <index-lookup> f
@@ -57,12 +58,18 @@
     (to-type, from-type) -> to-type
     where
       <eq> (from-type, to-type)
+      
+  primitive-types = 
+    ![VoidType(), IntType(), StringType()]
+      
+  type-to-def:
+    TYPE(t) -> Def([Class(), t])
   
   print-type = 
     switch ?input
-      case VoidType() : !"Void"
-      case IntType() : !"Int"
-      case StringType() : !"String"
+      case VoidType() : !"void"
+      case IntType() : !"int"
+      case StringType() : !"string"
       case Type(?t) : <strip-annos> t
       case TYPE(?t) : <strip-annos> t
       case [?type|[]] : <print-type> type

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Mon Feb 20 18:26:44 2012	(r24351)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Mon Feb 20 19:24:27 2012	(r24352)
@@ -43,18 +43,18 @@
       def       := <getfirst(is-params-compatible(|arg-types))>
 
   // Add entities from included modules.
-  // TODO: Add built in types?
   adjust-index-lookup(is-use |namespace, path, prefix): 
-    Type(<is-use>) -> <conc> ([[Entity() | path]], importPaths)
+    Type(<is-use>) -> <concat> [primitives, [[Entity() | path]], importPaths]
     with
       // TODO: Don't use index-get-all-in-file.
-      importPaths := <filter(import-to-path)> <index-get-all-in-file> <index-get-current-file>
+      importPaths := <filter(import-to-path)> <index-get-all-in-file> <index-get-current-file>;
+      primitives := <map(type-of; type-to-def)> <primitive-types>
         
   import-to-path:
     Def([Import(), WildcardImport(mod)|_]) -> [Entity(), mod]
     
   import-to-path:
-    Def([Import(), EntityImport(mod, ent)|_]) -> [Entity(), ent, mod]
+    Def([Import(), EntityImport(mod, ent)|_]) -> Def([Entity(), ent, mod])
       
 rules // Adjust diff
       

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Mon Feb 20 18:26:44 2012	(r24351)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Mon Feb 20 19:24:27 2012	(r24352)
@@ -4,6 +4,7 @@
   include/EntityWithAspects
   lib/index-library
   lib/analysis-library
+  analysis-generated
 
 signature constructors
 
@@ -11,7 +12,7 @@
   Type       	: Uri * Type -> TypeData
   ParamTypes 	: Uri * List(Type) -> ParamTypesData
 
-rules // type projections
+rules // Type projections
 
   type-of:
     Property(_, x) -> <type-of> x
@@ -49,7 +50,7 @@
   type-of:
     Def(uri) -> <index-get-value> Type(uri, ())
 
-rules // utility
+rules // Utility
 
   is-params-compatible(|arg-types):
     Def(uri) -> <id>
@@ -63,6 +64,12 @@
     (to-type, from-type) -> to-type
     where
       <eq> (from-type, to-type)
+      
+  primitive-types = 
+    ![IntType(), StringType()]
+      
+  type-to-def:
+    TYPE(t) -> Def([Entity(), t])
 
   print-type = 
     switch ?input
@@ -75,7 +82,7 @@
       otherwise : ?name#(_); !$[[name]]
     end   
 
-rules // store definition and parameter types
+rules // Store definition and parameter types
     
   adjust-index-def-data(store-results |namespace, path):
     def -> <store-results> Type([namespace | path], type)

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb 20 18:26:44 2012	(r24351)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb 20 19:24:27 2012	(r24352)
@@ -645,8 +645,7 @@
         ?defs
       end
     <+
-      get := Def([namespace | path]);
-      defs := <concat> [<index-get-all> get, <index-get-children(|namespace, prefix)> get]
+      defs := <index-get-children(|namespace, prefix)> Def([namespace | path])
       
   /**
    * Given an annotated AST node, resolves it, and

From gabrielkonat at gmail.com  Tue Feb 21 11:02:32 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 21 Feb 2012 10:02:32 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24353 -
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
	spoofax-imp/tru...
Message-ID: <20120221100232.3678DCC033@mx4.tudelft.nl>

Author: gkonat
Date: Tue Feb 21 10:02:31 2012
New Revision: 24353
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24353&sc=1

Log:
Fixed lookup failure on primitive types.

Modified:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Mon Feb 20 19:24:27 2012	(r24352)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Tue Feb 21 10:02:31 2012	(r24353)
@@ -18,7 +18,7 @@
   adjust-index-lookup(is-use |namespace, path, prefix):
     FieldAccess(e, <is-use>) -> f*
     with
-	    if TYPE(e-type) := <type-of> e then
+	    if TYPE(e-type{_}) := <type-of> e then
         f* := <index-lookup-children(|Field(), prefix)> e-type
       else
         f* := StopLookup()
@@ -28,7 +28,7 @@
   adjust-index-lookup(is-use |namespace, path, prefix):
     MethodCall(e, <is-use>) -> m*
     with
-	    if TYPE(e-type) := <type-of> e then
+	    if TYPE(e-type{_}) := <type-of> e then
         m* := <index-lookup-children(|Method(), prefix)> e-type
       else
         m* := StopLookup()

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Mon Feb 20 19:24:27 2012	(r24352)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Tue Feb 21 10:02:31 2012	(r24353)
@@ -13,7 +13,7 @@
   adjust-index-lookup(is-use |namespace, path, prefix):
     PropAccess(e, <is-use>) -> p*
     with
-      if TYPE(e-type) := <type-of> e then
+      if TYPE(e-type{_}) := <type-of> e then
         p* := <index-lookup-children(|Property(), prefix)> e-type
       else
         p* := StopLookup()

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Mon Feb 20 19:24:27 2012	(r24352)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Tue Feb 21 10:02:31 2012	(r24353)
@@ -670,10 +670,14 @@
     with
       is-adjust-lookup-enabled;
       do-adjust-index-lookup(|namespace, path, x, prefix);
-      mapconcat(\d at Def(p) -> [d]\
-          <+ \[namespace' | path'] -> <index-lookup-all-levels(fail |namespace', path', prefix)> x\
-          <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
-      ?all-defs
+      if ?StopLookup() then
+        all-defs := []
+      else
+	      mapconcat(\d at Def(p) -> [d]\
+	          <+ \[namespace' | path'] -> <index-lookup-all-levels(fail |namespace', path', prefix)> x\
+	          <+ fatal-err(|"Unexpected result from adjust-index-lookup, should be a list Def(_) or [namespace | path] or StopLookup() to stop the lookup"));
+	      ?all-defs
+      end
     <+
       one-level := <index-get-children(|namespace, prefix)> Def([namespace | path]);
       if [_ | path'] := path then

From gabrielkonat at gmail.com  Tue Feb 21 11:11:00 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 21 Feb 2012 10:11:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24354 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans
	spoofax-contrib/se...
Message-ID: <20120221101100.CEDBC2B8018@mx2.tudelft.nl>

Author: gkonat
Date: Tue Feb 21 10:10:58 2012
New Revision: 24354
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24354&sc=1

Log:
Renamed is-use to target.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Tue Feb 21 10:02:31 2012	(r24353)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Tue Feb 21 10:10:58 2012	(r24354)
@@ -72,88 +72,88 @@
     VarDecl(_, x) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Start(d_4358) -> Start(d_4358)
+    Start(c_1632) -> Start(c_1632)
 
   nam-annotate-names(|def-path):
-    Include(c_4358) -> Include(c_4358{def-path})
+    Include(b_1632) -> Include(b_1632{def-path})
 
   nam-annotate-names(|def-path):
-    Include(b_4358) -> Include(b_4358{def-path})
+    Include(a_1632) -> Include(a_1632{def-path})
 
   nam-annotate-names(|def-path):
-    FunDecl(x_4357, y_4357, z_4357, a_4358) -> FunDecl(x_4357, y_4357{def-path}, z_4357, a_4358)
+    FunDecl(w_1631, x_1631, y_1631, z_1631) -> FunDecl(w_1631, x_1631{def-path}, y_1631, z_1631)
 
   nam-annotate-names(|def-path):
-    Param(v_4357, w_4357) -> Param(v_4357, w_4357{def-path})
+    Param(u_1631, v_1631) -> Param(u_1631, v_1631{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDecl(u_4357) -> TypeDecl(u_4357)
+    TypeDecl(t_1631) -> TypeDecl(t_1631)
 
   nam-annotate-names(|def-path):
-    TypeDef(s_4357, t_4357) -> TypeDef(s_4357, t_4357{def-path})
+    TypeDef(r_1631, s_1631) -> TypeDef(r_1631, s_1631{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDef(q_4357, r_4357) -> TypeDef(q_4357, r_4357{def-path})
+    TypeDef(p_1631, q_1631) -> TypeDef(p_1631, q_1631{def-path})
 
   nam-annotate-names(|def-path):
-    StructDecl(o_4357, p_4357) -> StructDecl(o_4357{def-path}, p_4357)
+    StructDecl(n_1631, o_1631) -> StructDecl(n_1631{def-path}, o_1631)
 
   nam-annotate-names(|def-path):
-    Field(m_4357, n_4357) -> Field(m_4357, n_4357{def-path})
+    Field(l_1631, m_1631) -> Field(l_1631, m_1631{def-path})
 
   nam-annotate-names(|def-path):
-    VarDecl(k_4357, l_4357) -> VarDecl(k_4357, l_4357{def-path})
+    VarDecl(j_1631, k_1631) -> VarDecl(j_1631, k_1631{def-path})
 
   nam-annotate-names(|def-path):
-    Stmt(j_4357) -> Stmt(j_4357)
+    Stmt(i_1631) -> Stmt(i_1631)
 
   nam-annotate-names(|def-path):
-    Assign(h_4357, i_4357) -> Assign(h_4357, i_4357)
+    Assign(g_1631, h_1631) -> Assign(g_1631, h_1631)
 
   nam-annotate-names(|def-path):
-    Return(g_4357) -> Return(g_4357)
+    Return(f_1631) -> Return(f_1631)
 
   nam-annotate-names(|def-path):
-    StrLit(f_4357) -> StrLit(f_4357)
+    StrLit(e_1631) -> StrLit(e_1631)
 
   nam-annotate-names(|def-path):
-    IntLit(e_4357) -> IntLit(e_4357)
+    IntLit(d_1631) -> IntLit(d_1631)
 
   nam-annotate-names(|def-path):
-    Call(c_4357, d_4357) -> Call(
-                              <nam-annotate-use(|Function())> c_4357
-                            , d_4357
+    Call(b_1631, c_1631) -> Call(
+                              <nam-annotate-use(|Function())> b_1631
+                            , c_1631
                             )
 
   nam-annotate-names(|def-path):
-    SizeOf(b_4357) -> SizeOf(b_4357)
+    SizeOf(a_1631) -> SizeOf(a_1631)
 
   nam-annotate-names(|def-path):
-    Access(z_4356, a_4357) -> Access(
-                                z_4356
-                              , <nam-annotate-use(|Field())> a_4357
+    Access(y_1630, z_1630) -> Access(
+                                y_1630
+                              , <nam-annotate-use(|Field())> z_1630
                               )
 
   nam-annotate-names(|def-path):
-    DerefAccess(x_4356, y_4356) -> DerefAccess(
-                                     x_4356
-                                   , <nam-annotate-use(|Field())> y_4356
+    DerefAccess(w_1630, x_1630) -> DerefAccess(
+                                     w_1630
+                                   , <nam-annotate-use(|Field())> x_1630
                                    )
 
   nam-annotate-names(|def-path):
-    Deref(w_4356) -> Deref(w_4356)
+    Deref(v_1630) -> Deref(v_1630)
 
   nam-annotate-names(|def-path):
-    Ref(v_4356) -> Ref(v_4356)
+    Ref(u_1630) -> Ref(u_1630)
 
   nam-annotate-names(|def-path):
-    VarRef(u_4356) -> VarRef(<nam-annotate-use(|Var())> u_4356)
+    VarRef(t_1630) -> VarRef(<nam-annotate-use(|Var())> t_1630)
 
   nam-annotate-names(|def-path):
-    Cast(s_4356, t_4356) -> Cast(s_4356, t_4356)
+    Cast(r_1630, s_1630) -> Cast(r_1630, s_1630)
 
   nam-annotate-names(|def-path):
-    Type(r_4356) -> Type(<nam-annotate-use(|Type())> r_4356)
+    Type(q_1630) -> Type(<nam-annotate-use(|Type())> q_1630)
 
   nam-annotate-names(|def-path):
     Char() -> Char()
@@ -165,7 +165,7 @@
     Void() -> Void()
 
   nam-annotate-names(|def-path):
-    Pointer(q_4356) -> Pointer(q_4356)
+    Pointer(p_1630) -> Pointer(p_1630)
 
   nam-annotate-names(|def-path):
-    StructRef(p_4356) -> StructRef(<nam-annotate-use(|Struct())> p_4356)
\ No newline at end of file
+    StructRef(o_1630) -> StructRef(<nam-annotate-use(|Struct())> o_1630)
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Tue Feb 21 10:02:31 2012	(r24353)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Tue Feb 21 10:10:58 2012	(r24354)
@@ -19,8 +19,8 @@
 rules // Adjust lookup
   
   // Return a list of fields in the struct on the left hand side.
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    Access(e, <is-use>) -> p*
+  adjust-index-lookup(target |namespace, path, prefix):
+    Access(e, <target>) -> p*
     with
       if type := <type-of> e then
 	      p* := <try-get-struct-field(|prefix)> type
@@ -29,27 +29,27 @@
 	    end
 
   // Return both local variables and fields.
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    VarRef(<is-use>) -> [[Var() | path], [Field() | path]]
+  adjust-index-lookup(target |namespace, path, prefix):
+    VarRef(<target>) -> [[Var() | path], [Field() | path]]
     
   // Add typedefs from included files.
-  adjust-index-lookup(is-use |namespace, path, prefix): 
-    Type(<is-use>) -> <concat> [primitives, [[Type() | path]], includePaths]
+  adjust-index-lookup(target |namespace, path, prefix): 
+    Type(<target>) -> <concat> [primitives, [[Type() | path]], includePaths]
     with
       // TODO: Don't use index-get-all-in-file.
       includePaths := <filter(include-to-path(|Type()))> <index-get-all-in-file> <index-get-current-file>;
       primitives := <map(type-of; type-to-def)> <primitive-types>
       
   // Add structs from included files.      
-  adjust-index-lookup(is-use |namespace, path, prefix): 
-    StructRef(<is-use>) -> <conc> ([[Struct() | path]], includePaths)
+  adjust-index-lookup(target |namespace, path, prefix): 
+    StructRef(<target>) -> <conc> ([[Struct() | path]], includePaths)
     with
       // TODO: Don't use index-get-all-in-file.
       includePaths := <filter(include-to-path(|Struct()))> <index-get-all-in-file> <index-get-current-file>
 
   // Add functions from included files.
-  adjust-index-lookup(is-use |namespace, path, prefix): 
-    Call(<is-use>, _) -> <conc> ([[Function() | path]], includePaths)
+  adjust-index-lookup(target |namespace, path, prefix): 
+    Call(<target>, _) -> <conc> ([[Function() | path]], includePaths)
     with
       // TODO: Don't use index-get-all-in-file.
       includePaths := <filter(include-to-path(|Function()))> <index-get-all-in-file> <index-get-current-file>

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Tue Feb 21 10:02:31 2012	(r24353)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Tue Feb 21 10:10:58 2012	(r24354)
@@ -66,37 +66,37 @@
     Method(_, x, _) -> <nam-get-def(|Method())> x
 
   nam-annotate-names(|def-path):
-    Start(u_32256, v_32256) -> Start(u_32256, v_32256)
+    Start(i_1277, j_1277) -> Start(i_1277, j_1277)
 
   nam-annotate-names(|def-path):
-    Namespace(s_32256, t_32256) -> Namespace(s_32256{def-path}, t_32256)
+    Namespace(g_1277, h_1277) -> Namespace(g_1277{def-path}, h_1277)
 
   nam-annotate-names(|def-path):
-    PartialClass(q_32256, r_32256) -> PartialClass(q_32256{def-path}, r_32256)
+    PartialClass(e_1277, f_1277) -> PartialClass(e_1277{def-path}, f_1277)
 
   nam-annotate-names(|def-path):
-    Class(o_32256, p_32256) -> Class(o_32256{def-path}, p_32256)
+    Class(c_1277, d_1277) -> Class(c_1277{def-path}, d_1277)
 
   nam-annotate-names(|def-path):
-    Using(n_32256) -> Using(n_32256{def-path})
+    Using(b_1277) -> Using(b_1277{def-path})
 
   nam-annotate-names(|def-path):
-    UsingPart(m_32256) -> UsingPart(<nam-annotate-use(|Namespace())> m_32256)
+    UsingPart(a_1277) -> UsingPart(<nam-annotate-use(|Namespace())> a_1277)
 
   nam-annotate-names(|def-path):
-    UsingPart(k_32256, l_32256) -> UsingPart(
-                                     k_32256
-                                   , <nam-annotate-use(|Namespace())> l_32256
-                                   )
+    UsingPart(y_1276, z_1276) -> UsingPart(
+                                   y_1276
+                                 , <nam-annotate-use(|Namespace())> z_1276
+                                 )
 
   nam-annotate-names(|def-path):
-    Field(i_32256, j_32256) -> Field(i_32256, j_32256{def-path})
+    Field(w_1276, x_1276) -> Field(w_1276, x_1276{def-path})
 
   nam-annotate-names(|def-path):
-    Method(f_32256, g_32256, h_32256) -> Method(f_32256, g_32256{def-path}, h_32256)
+    Method(t_1276, u_1276, v_1276) -> Method(t_1276, u_1276{def-path}, v_1276)
 
   nam-annotate-names(|def-path):
-    Type(e_32256) -> Type(<nam-annotate-use(|Class())> e_32256)
+    Type(s_1276) -> Type(<nam-annotate-use(|Class())> s_1276)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()
@@ -108,19 +108,19 @@
     VoidType() -> VoidType()
 
   nam-annotate-names(|def-path):
-    Return(d_32256) -> Return(d_32256)
+    Return(r_1276) -> Return(r_1276)
 
   nam-annotate-names(|def-path):
-    FieldRef(c_32256) -> FieldRef(<nam-annotate-use(|Field())> c_32256)
+    FieldRef(q_1276) -> FieldRef(<nam-annotate-use(|Field())> q_1276)
 
   nam-annotate-names(|def-path):
-    FieldAccess(a_32256, b_32256) -> FieldAccess(
-                                       a_32256
-                                     , <nam-annotate-use(|Field())> b_32256
-                                     )
+    FieldAccess(o_1276, p_1276) -> FieldAccess(
+                                     o_1276
+                                   , <nam-annotate-use(|Field())> p_1276
+                                   )
 
   nam-annotate-names(|def-path):
-    MethodCall(y_32255, z_32255) -> MethodCall(
-                                      y_32255
-                                    , <nam-annotate-use(|Method())> z_32255
-                                    )
\ No newline at end of file
+    MethodCall(m_1276, n_1276) -> MethodCall(
+                                    m_1276
+                                  , <nam-annotate-use(|Method())> n_1276
+                                  )
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Tue Feb 21 10:02:31 2012	(r24353)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Tue Feb 21 10:10:58 2012	(r24354)
@@ -15,8 +15,8 @@
 rules // Adjust lookup
   
   // Return a list of fields in the class on the left hand side.
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    FieldAccess(e, <is-use>) -> f*
+  adjust-index-lookup(target |namespace, path, prefix):
+    FieldAccess(e, <target>) -> f*
     with
 	    if TYPE(e-type{_}) := <type-of> e then
         f* := <index-lookup-children(|Field(), prefix)> e-type
@@ -25,8 +25,8 @@
       end
       
   // Return a list of methods in the class on the left hand side.
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    MethodCall(e, <is-use>) -> m*
+  adjust-index-lookup(target |namespace, path, prefix):
+    MethodCall(e, <target>) -> m*
     with
 	    if TYPE(e-type{_}) := <type-of> e then
         m* := <index-lookup-children(|Method(), prefix)> e-type
@@ -35,8 +35,8 @@
       end
       
   // Return a list of namespaces in the namespace on the left hand side.
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    UsingPart(ns, <is-use>) -> ns*
+  adjust-index-lookup(target |namespace, path, prefix):
+    UsingPart(ns, <target>) -> ns*
       with
       if name := <ns-to-name> ns then
         ns* := <index-lookup-children(|Namespace(), prefix)> name
@@ -50,8 +50,8 @@
     UsingPart(ns, _) -> ns
     
   // Add classes from included namespaces.
-  adjust-index-lookup(is-use |namespace, path, prefix): 
-    Type(<is-use>) -> <concat> [primitives, [[Class() | path]], importPaths]
+  adjust-index-lookup(target |namespace, path, prefix): 
+    Type(<target>) -> <concat> [primitives, [[Class() | path]], importPaths]
     with
       // TODO: Don't use index-get-all-in-file.
       importPaths :=  <filter(using-to-path)> <index-get-all-in-file> <index-get-current-file>;

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Tue Feb 21 10:02:31 2012	(r24353)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Tue Feb 21 10:10:58 2012	(r24354)
@@ -110,38 +110,38 @@
     VarDeclInit(x, _, _) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Module(v_14540, w_14540) -> Module(v_14540{def-path}, w_14540)
+    Module(n_1988, o_1988) -> Module(n_1988{def-path}, o_1988)
 
   nam-annotate-names(|def-path):
-    Entity(t_14540, u_14540) -> Entity(t_14540{def-path}, u_14540)
+    Entity(l_1988, m_1988) -> Entity(l_1988{def-path}, m_1988)
 
   nam-annotate-names(|def-path):
-    Import(s_14540) -> Import(s_14540{def-path})
+    Import(k_1988) -> Import(k_1988{def-path})
 
   nam-annotate-names(|def-path):
-    WildcardImport(r_14540) -> WildcardImport(<nam-annotate-use(|Module())> r_14540)
+    WildcardImport(j_1988) -> WildcardImport(<nam-annotate-use(|Module())> j_1988)
 
   nam-annotate-names(|def-path):
-    EntityImport(p_14540, q_14540) -> EntityImport(
-                                        <nam-annotate-use(|Module())> p_14540
-                                      , <nam-annotate-use(|Entity())> q_14540
-                                      )
+    EntityImport(h_1988, i_1988) -> EntityImport(
+                                      <nam-annotate-use(|Module())> h_1988
+                                    , <nam-annotate-use(|Entity())> i_1988
+                                    )
 
   nam-annotate-names(|def-path):
-    Aspect(n_14540, o_14540) -> Aspect(n_14540{def-path}, o_14540)
+    Aspect(f_1988, g_1988) -> Aspect(f_1988{def-path}, g_1988)
 
   nam-annotate-names(|def-path):
-    Pointcut(k_14540, l_14540, m_14540) -> Pointcut(k_14540{def-path}, l_14540, m_14540)
+    Pointcut(c_1988, d_1988, e_1988) -> Pointcut(c_1988{def-path}, d_1988, e_1988)
 
   nam-annotate-names(|def-path):
-    Advice(e_14540, f_14540, g_14540, h_14540, i_14540, j_14540) -> Advice(
-                                                                      e_14540{def-path}
-                                                                    , f_14540
-                                                                    , g_14540
-                                                                    , <nam-annotate-use(|Pointcut())> h_14540
-                                                                    , i_14540
-                                                                    , j_14540
-                                                                    )
+    Advice(w_1987, x_1987, y_1987, z_1987, a_1988, b_1988) -> Advice(
+                                                                w_1987{def-path}
+                                                              , x_1987
+                                                              , y_1987
+                                                              , <nam-annotate-use(|Pointcut())> z_1987
+                                                              , a_1988
+                                                              , b_1988
+                                                              )
 
   nam-annotate-names(|def-path):
     Before() -> Before()
@@ -150,52 +150,52 @@
     After() -> After()
 
   nam-annotate-names(|def-path):
-    Assigned(d_14540) -> Assigned(d_14540)
+    Assigned(v_1987) -> Assigned(v_1987)
 
   nam-annotate-names(|def-path):
-    Property(b_14540, c_14540) -> Property(b_14540{def-path}, c_14540)
+    Property(t_1987, u_1987) -> Property(t_1987{def-path}, u_1987)
 
   nam-annotate-names(|def-path):
-    Function(y_14539, z_14539, a_14540) -> Function(y_14539{def-path}, z_14539, a_14540)
+    Function(q_1987, r_1987, s_1987) -> Function(q_1987{def-path}, r_1987, s_1987)
 
   nam-annotate-names(|def-path):
-    Param(w_14539, x_14539) -> Param(w_14539{def-path}, x_14539)
+    Param(o_1987, p_1987) -> Param(o_1987{def-path}, p_1987)
 
   nam-annotate-names(|def-path):
-    VarDecl(u_14539, v_14539) -> VarDecl(u_14539{def-path}, v_14539)
+    VarDecl(m_1987, n_1987) -> VarDecl(m_1987{def-path}, n_1987)
 
   nam-annotate-names(|def-path):
-    VarDeclInit(r_14539, s_14539, t_14539) -> VarDeclInit(r_14539{def-path}, s_14539, t_14539)
+    VarDeclInit(j_1987, k_1987, l_1987) -> VarDeclInit(j_1987{def-path}, k_1987, l_1987)
 
   nam-annotate-names(|def-path):
-    Assign(p_14539, q_14539) -> Assign(
-                                  <nam-annotate-use(|Var())> p_14539
-                                , q_14539
-                                )
+    Assign(h_1987, i_1987) -> Assign(
+                                <nam-annotate-use(|Var())> h_1987
+                              , i_1987
+                              )
 
   nam-annotate-names(|def-path):
-    Block(o_14539) -> Block(o_14539)
+    Block(g_1987) -> Block(g_1987)
 
   nam-annotate-names(|def-path):
-    Print(n_14539) -> Print(n_14539)
+    Print(f_1987) -> Print(f_1987)
 
   nam-annotate-names(|def-path):
-    Call(l_14539, m_14539) -> Call(
-                                <nam-annotate-use(|Function())> l_14539
-                              , m_14539
-                              )
+    Call(d_1987, e_1987) -> Call(
+                              <nam-annotate-use(|Function())> d_1987
+                            , e_1987
+                            )
 
   nam-annotate-names(|def-path):
-    Var(k_14539) -> Var(<nam-annotate-use(|Var())> k_14539)
+    Var(c_1987) -> Var(<nam-annotate-use(|Var())> c_1987)
 
   nam-annotate-names(|def-path):
-    PropAccess(i_14539, j_14539) -> PropAccess(
-                                      i_14539
-                                    , <nam-annotate-use(|Property())> j_14539
-                                    )
+    PropAccess(a_1987, b_1987) -> PropAccess(
+                                    a_1987
+                                  , <nam-annotate-use(|Property())> b_1987
+                                  )
 
   nam-annotate-names(|def-path):
-    Type(h_14539) -> Type(<nam-annotate-use(|Entity())> h_14539)
+    Type(z_1986) -> Type(<nam-annotate-use(|Entity())> z_1986)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Tue Feb 21 10:02:31 2012	(r24353)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Tue Feb 21 10:10:58 2012	(r24354)
@@ -10,8 +10,8 @@
 rules // Adjust lookup
   
   // Return a list of properties in the entity on the left hand side.
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    PropAccess(e, <is-use>) -> p*
+  adjust-index-lookup(target |namespace, path, prefix):
+    PropAccess(e, <target>) -> p*
     with
       if TYPE(e-type{_}) := <type-of> e then
         p* := <index-lookup-children(|Property(), prefix)> e-type
@@ -20,31 +20,31 @@
       end
       
   // Return a list of entities in the module on the left hand side.
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    EntityImport(mod, <is-use>) -> e
+  adjust-index-lookup(target |namespace, path, prefix):
+    EntityImport(mod, <target>) -> e
     with
       e := <index-lookup-children(|Entity(), prefix)> mod
 
   // Return both local variables and properties.
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    Var(<is-use>) -> [[Var() | path], [Property() | path]]
+  adjust-index-lookup(target |namespace, path, prefix):
+    Var(<target>) -> [[Var() | path], [Property() | path]]
     
   // Return both local variables and properties.
   // TODO: Make assign use Var on left hand side.
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    Assign(<is-use>, _) -> [[Var() | path], [Property() | path]]
+  adjust-index-lookup(target |namespace, path, prefix):
+    Assign(<target>, _) -> [[Var() | path], [Property() | path]]
     
   // Select function with matching parameter types (if this fails, the normal lookup behavior is used!).
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    Call(<is-use>, args) -> def
+  adjust-index-lookup(target |namespace, path, prefix):
+    Call(<target>, args) -> def
     where
       arg-types := <map(type-of)> args;
       all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix)>;
       def       := <getfirst(is-params-compatible(|arg-types))>
 
   // Add entities from included modules.
-  adjust-index-lookup(is-use |namespace, path, prefix): 
-    Type(<is-use>) -> <concat> [primitives, [[Entity() | path]], importPaths]
+  adjust-index-lookup(target |namespace, path, prefix): 
+    Type(<target>) -> <concat> [primitives, [[Entity() | path]], importPaths]
     with
       // TODO: Don't use index-get-all-in-file.
       importPaths := <filter(import-to-path)> <index-get-all-in-file> <index-get-current-file>;

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str	Tue Feb 21 10:02:31 2012	(r24353)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/analysis-manual.str	Tue Feb 21 10:10:58 2012	(r24354)
@@ -14,8 +14,8 @@
   
   // Adjust the lookup behavior for properties,
   // overriding the lookup with a list of property Defs
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    PropAccess(e, <is-use>) -> p*
+  adjust-index-lookup(target |namespace, path, prefix):
+    PropAccess(e, <target>) -> p*
     with
       if ENTITY(e-type) := <type-of> e then
         p* := (<index-lookup-children(|Property(), prefix)> e-type)
@@ -25,20 +25,20 @@
 
   // Adjust the lookup behavior for variables,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, name):
-    Var(<is-use>) -> [[Var() | path], [Property() | path]]
+  adjust-index-lookup(target |namespace, path, name):
+    Var(<target>) -> [[Var() | path], [Property() | path]]
     
   // Why is this needed? shouldn't the Var() adjust handle this?
   // Adjust the lookup behavior for assignments,
   // overriding the lookup with a list of URIs
-  adjust-index-lookup(is-use |namespace, path, name):
-    Assign(<is-use>, _) -> [[Var() | path], [Property() | path]]
+  adjust-index-lookup(target |namespace, path, name):
+    Assign(<target>, _) -> [[Var() | path], [Property() | path]]
 
   // Adjust the lookup behavior for function calls,
   // selecting a function with matching parameter types
   // (if this fails, the normal lookup behavior is used!)
-  adjust-index-lookup(is-use |namespace, path, prefix):
-    Call(<is-use>, args) -> def
+  adjust-index-lookup(target |namespace, path, prefix):
+    Call(<target>, args) -> def
     where
       arg-types := <map(type-of)> args;
       all-defs  := <index-lookup-all-levels(fail |namespace, path, prefix)>;

From gabrielkonat at gmail.com  Tue Feb 21 11:56:49 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 21 Feb 2012 10:56:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24355 - in
	spoofax-contrib/separate-compilation-examples/entity-with-aspects:
	syntax trans
Message-ID: <20120221105649.4082E7F80EC@mx1.tudelft.nl>

Author: gkonat
Date: Tue Feb 21 10:56:48 2012
New Revision: 24355
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24355&sc=1

Log:
Renamed Entity namespace to Type.
Can assign to expressions.
Added duplicate definition check.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf	Tue Feb 21 10:10:58 2012	(r24354)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf	Tue Feb 21 10:56:48 2012	(r24355)
@@ -26,7 +26,7 @@
     ID ":" Type                                                               -> Param        {cons("Param")}
     "var" ID ":" Type                                                         -> Stm          {cons("VarDecl")}
     "var" ID ":" Type "=" Exp                                                 -> Stm          {cons("VarDeclInit")}
-    ID "=" Exp                                                                -> Stm          {cons("Assign")}
+    Exp "=" Exp                                                               -> Stm          {cons("Assign")}
     "{" Stm* "}"                                                              -> Stm          {cons("Block"), scope}
     "print" Exp                                                               -> Stm          {cons("Print")}
     ID "(" {Exp ","}* ")"                                                     -> Exp          {cons("Call")}

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx	Tue Feb 21 10:10:58 2012	(r24354)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx	Tue Feb 21 10:56:48 2012	(r24355)
@@ -5,44 +5,44 @@
 context-free syntax
     
     %% Constructs
-    "module" Module@=ID Definition*     -> Start {"Module", scope(Entity, Aspect, Import)}
-    "entity" Entity@=ID "{" Member* "}" -> Definition {"Entity", scope(Property, Function)}
-    "import" Import@=ImportPart         -> Definition {"Import"}
+    "module" Module@=ID Definition*   -> Start {"Module", scope(Type, Aspect, Import)}
+    "entity" Type@=ID "{" Member* "}" -> Definition {"Entity", scope(Property, Function)}
+    "import" Import@=ImportPart       -> Definition {"Import"}
     
-    Module at ID "." "*"       -> ImportPart {"WildcardImport"}
-    Module at ID "." Entity at ID -> ImportPart {"EntityImport"}
+    Module at ID "." "*"     -> ImportPart {"WildcardImport"}
+    Module at ID "." Type at ID -> ImportPart {"EntityImport"}
     
     %% Aspect weaving
-    "aspect" Aspect@=ID "{" AspectMember* "}"                                               		-> Definition {"Aspect", scope(Pointcut, Advice)}
-    "pointcut" Pointcut@=ID "(" { Param "," }* ")" ":" { JoinPoint "," }+                   		-> AspectMember {"Pointcut", scope(Var)}
-    "advice" Advice@=ID AdviceType "(" { Param "," }* ")" ":" Pointcut at ID "(" {Exp ","}* ")" Stm  	-> AspectMember {"Advice", scope(Var)}
+    "aspect" Aspect@=ID "{" AspectMember* "}"                                               		 -> Definition {"Aspect", scope(Pointcut, Advice)}
+    "pointcut" Pointcut@=ID "(" { Param "," }* ")" ":" { JoinPoint "," }+                   		 -> AspectMember {"Pointcut", scope(Var)}
+    "advice" Advice@=ID AdviceType "(" { Param "," }* ")" ":" Pointcut at ID "(" {Exp ","}* ")" Stm -> AspectMember {"Advice", scope(Var)}
     
-    "before"    -> AdviceType {"Before"}
-    "after"     -> AdviceType {"After"}
+    "before"  -> AdviceType {"Before"}
+    "after"   -> AdviceType {"After"}
     
-    "assigned" "(" Type ")"     -> JoinPoint {"Assigned"}
+    "assigned" "(" Type ")" -> JoinPoint {"Assigned"}
     
     %% Properties
-    Property@=ID ":" Type       -> Member {"Property"}
+    Property@=ID ":" Type -> Member {"Property"}
     
     %% Functions
-    Function@=ID "(" { Param "," }* ")" Stm     -> Member {"Function", scope(Var)}
-    Var@=ID ":" Type                            -> Param {"Param"}
+    Function@=ID "(" { Param "," }* ")" Stm -> Member {"Function", scope(Var)}
+    Var@=ID ":" Type                        -> Param {"Param"}
     
     %% Statements
-    "var" Var@=ID ":" Type              -> Stm {"VarDecl"}
-    "var" Var@=ID ":" Type "=" Exp      -> Stm {"VarDeclInit"}
-    Var at ID "=" Exp                      -> Stm {"Assign"}
-    "{" Stm* "}"                        -> Stm {"Block", scope(Var)}
-    "print" Exp                         -> Stm {"Print"}
+    "var" Var@=ID ":" Type          -> Stm {"VarDecl"}
+    "var" Var@=ID ":" Type "=" Exp  -> Stm {"VarDeclInit"}
+    Exp "=" Exp                     -> Stm {"Assign"}
+    "{" Stm* "}"                    -> Stm {"Block", scope(Var)}
+    "print" Exp                     -> Stm {"Print"}
     
     %% Expressions
-    Function at ID "(" {Exp ","}* ")"  -> Exp {"Call"}        %% or, could be an Entity 
-    Var at ID                          -> Exp {"Var"}         %% or, could be a Property!
+    Function at ID "(" {Exp ","}* ")"  -> Exp {"Call"}
+    Var at ID                          -> Exp {"Var"}
     Exp "." Property at ID             -> Exp {"PropAccess"}
     
     %% Types
-    Entity at ID   -> Type {"Type"}
-    "String"    -> Type {"StringType", prefer}
-    "Int"       -> Type {"IntType", prefer}
+    Type at ID   -> Type {"Type"}
+    "String"  -> Type {"StringType", prefer}
+    "Int"     -> Type {"IntType", prefer}
     
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Tue Feb 21 10:10:58 2012	(r24354)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Tue Feb 21 10:56:48 2012	(r24355)
@@ -14,13 +14,13 @@
     Function : Namespace
     Var      : Namespace
     Property : Namespace
-    Entity   : Namespace
+    Type     : Namespace
 
 
 rules
 
   nam-get-scope-types :
-    Module(_, _) -> [ Entity()
+    Module(_, _) -> [ Type()
                     , Aspect()
                     , Import()
                     ]
@@ -53,7 +53,7 @@
     Entity(x, _) -> x
 
   nam-get-definition :
-    Entity(x, _) -> <nam-get-def(|Entity())> x
+    Entity(x, _) -> <nam-get-def(|Type())> x
 
   nam-get-definition-key :
     Import(x) -> x
@@ -110,37 +110,37 @@
     VarDeclInit(x, _, _) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Module(n_1988, o_1988) -> Module(n_1988{def-path}, o_1988)
+    Module(h_3859, i_3859) -> Module(h_3859{def-path}, i_3859)
 
   nam-annotate-names(|def-path):
-    Entity(l_1988, m_1988) -> Entity(l_1988{def-path}, m_1988)
+    Entity(f_3859, g_3859) -> Entity(f_3859{def-path}, g_3859)
 
   nam-annotate-names(|def-path):
-    Import(k_1988) -> Import(k_1988{def-path})
+    Import(e_3859) -> Import(e_3859{def-path})
 
   nam-annotate-names(|def-path):
-    WildcardImport(j_1988) -> WildcardImport(<nam-annotate-use(|Module())> j_1988)
+    WildcardImport(d_3859) -> WildcardImport(<nam-annotate-use(|Module())> d_3859)
 
   nam-annotate-names(|def-path):
-    EntityImport(h_1988, i_1988) -> EntityImport(
-                                      <nam-annotate-use(|Module())> h_1988
-                                    , <nam-annotate-use(|Entity())> i_1988
+    EntityImport(b_3859, c_3859) -> EntityImport(
+                                      <nam-annotate-use(|Module())> b_3859
+                                    , <nam-annotate-use(|Type())> c_3859
                                     )
 
   nam-annotate-names(|def-path):
-    Aspect(f_1988, g_1988) -> Aspect(f_1988{def-path}, g_1988)
+    Aspect(z_3858, a_3859) -> Aspect(z_3858{def-path}, a_3859)
 
   nam-annotate-names(|def-path):
-    Pointcut(c_1988, d_1988, e_1988) -> Pointcut(c_1988{def-path}, d_1988, e_1988)
+    Pointcut(w_3858, x_3858, y_3858) -> Pointcut(w_3858{def-path}, x_3858, y_3858)
 
   nam-annotate-names(|def-path):
-    Advice(w_1987, x_1987, y_1987, z_1987, a_1988, b_1988) -> Advice(
-                                                                w_1987{def-path}
-                                                              , x_1987
-                                                              , y_1987
-                                                              , <nam-annotate-use(|Pointcut())> z_1987
-                                                              , a_1988
-                                                              , b_1988
+    Advice(q_3858, r_3858, s_3858, t_3858, u_3858, v_3858) -> Advice(
+                                                                q_3858{def-path}
+                                                              , r_3858
+                                                              , s_3858
+                                                              , <nam-annotate-use(|Pointcut())> t_3858
+                                                              , u_3858
+                                                              , v_3858
                                                               )
 
   nam-annotate-names(|def-path):
@@ -150,52 +150,49 @@
     After() -> After()
 
   nam-annotate-names(|def-path):
-    Assigned(v_1987) -> Assigned(v_1987)
+    Assigned(p_3858) -> Assigned(p_3858)
 
   nam-annotate-names(|def-path):
-    Property(t_1987, u_1987) -> Property(t_1987{def-path}, u_1987)
+    Property(n_3858, o_3858) -> Property(n_3858{def-path}, o_3858)
 
   nam-annotate-names(|def-path):
-    Function(q_1987, r_1987, s_1987) -> Function(q_1987{def-path}, r_1987, s_1987)
+    Function(k_3858, l_3858, m_3858) -> Function(k_3858{def-path}, l_3858, m_3858)
 
   nam-annotate-names(|def-path):
-    Param(o_1987, p_1987) -> Param(o_1987{def-path}, p_1987)
+    Param(i_3858, j_3858) -> Param(i_3858{def-path}, j_3858)
 
   nam-annotate-names(|def-path):
-    VarDecl(m_1987, n_1987) -> VarDecl(m_1987{def-path}, n_1987)
+    VarDecl(g_3858, h_3858) -> VarDecl(g_3858{def-path}, h_3858)
 
   nam-annotate-names(|def-path):
-    VarDeclInit(j_1987, k_1987, l_1987) -> VarDeclInit(j_1987{def-path}, k_1987, l_1987)
+    VarDeclInit(d_3858, e_3858, f_3858) -> VarDeclInit(d_3858{def-path}, e_3858, f_3858)
 
   nam-annotate-names(|def-path):
-    Assign(h_1987, i_1987) -> Assign(
-                                <nam-annotate-use(|Var())> h_1987
-                              , i_1987
-                              )
+    Assign(b_3858, c_3858) -> Assign(b_3858, c_3858)
 
   nam-annotate-names(|def-path):
-    Block(g_1987) -> Block(g_1987)
+    Block(a_3858) -> Block(a_3858)
 
   nam-annotate-names(|def-path):
-    Print(f_1987) -> Print(f_1987)
+    Print(z_3857) -> Print(z_3857)
 
   nam-annotate-names(|def-path):
-    Call(d_1987, e_1987) -> Call(
-                              <nam-annotate-use(|Function())> d_1987
-                            , e_1987
+    Call(x_3857, y_3857) -> Call(
+                              <nam-annotate-use(|Function())> x_3857
+                            , y_3857
                             )
 
   nam-annotate-names(|def-path):
-    Var(c_1987) -> Var(<nam-annotate-use(|Var())> c_1987)
+    Var(w_3857) -> Var(<nam-annotate-use(|Var())> w_3857)
 
   nam-annotate-names(|def-path):
-    PropAccess(a_1987, b_1987) -> PropAccess(
-                                    a_1987
-                                  , <nam-annotate-use(|Property())> b_1987
+    PropAccess(u_3857, v_3857) -> PropAccess(
+                                    u_3857
+                                  , <nam-annotate-use(|Property())> v_3857
                                   )
 
   nam-annotate-names(|def-path):
-    Type(z_1986) -> Type(<nam-annotate-use(|Entity())> z_1986)
+    Type(t_3857) -> Type(<nam-annotate-use(|Type())> t_3857)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Tue Feb 21 10:10:58 2012	(r24354)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Tue Feb 21 10:56:48 2012	(r24355)
@@ -23,17 +23,12 @@
   adjust-index-lookup(target |namespace, path, prefix):
     EntityImport(mod, <target>) -> e
     with
-      e := <index-lookup-children(|Entity(), prefix)> mod
+      e := <index-lookup-children(|Type(), prefix)> mod
 
   // Return both local variables and properties.
   adjust-index-lookup(target |namespace, path, prefix):
     Var(<target>) -> [[Var() | path], [Property() | path]]
     
-  // Return both local variables and properties.
-  // TODO: Make assign use Var on left hand side.
-  adjust-index-lookup(target |namespace, path, prefix):
-    Assign(<target>, _) -> [[Var() | path], [Property() | path]]
-    
   // Select function with matching parameter types (if this fails, the normal lookup behavior is used!).
   adjust-index-lookup(target |namespace, path, prefix):
     Call(<target>, args) -> def
@@ -44,17 +39,17 @@
 
   // Add entities from included modules.
   adjust-index-lookup(target |namespace, path, prefix): 
-    Type(<target>) -> <concat> [primitives, [[Entity() | path]], importPaths]
+    Type(<target>) -> <concat> [primitives, [[Type() | path]], importPaths]
     with
       // TODO: Don't use index-get-all-in-file.
       importPaths := <filter(import-to-path)> <index-get-all-in-file> <index-get-current-file>;
       primitives := <map(type-of; type-to-def)> <primitive-types>
         
   import-to-path:
-    Def([Import(), WildcardImport(mod)|_]) -> [Entity(), mod]
+    Def([Import(), WildcardImport(mod)|_]) -> [Type(), mod]
     
   import-to-path:
-    Def([Import(), EntityImport(mod, ent)|_]) -> Def([Entity(), ent, mod])
+    Def([Import(), EntityImport(mod, ent)|_]) -> Def([Type(), ent, mod])
       
 rules // Adjust diff
       

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Tue Feb 21 10:10:58 2012	(r24354)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Tue Feb 21 10:56:48 2012	(r24355)
@@ -9,42 +9,33 @@
   analysis-generated
   types
 
-rules
-
-  // TODO: index-get-term was removed, store offsets in the index
-  /*constraint-error:
-    x -> (x, $[Use before definition])
-    where
-      namespace := <index-namespace> x;
-      <is-ordered-namespace> namespace
-    where
-      def  := <index-lookup> x;
-      def' := <index-get-term> def
-    where
-      <gt> (<origin-offset> def', <origin-offset> x)
+rules // Resolving
+	
+  constraint-error:
+    x{[Unresolved(t) | _]} ->
+    (x, $[Unable to resolve.])
+    
+rules // Duplicates
+    
+  is-unique-namespace = ?Type()
+  is-unique-namespace = ?Var()
+  is-unique-namespace = ?Property()
       
-  is-ordered-namespace:
-    Var() -> Var()
-  
   constraint-error:
     def -> (def, $[Duplicate definition])
     where
-      def-child  := <nam-get-definition-key> def;
-      def'       := <index-get-term> <index-lookup-outermost> def-child;
-      not(<origin-equal(|def)> def')
-      
-  origin-offset =
-    prim("SSL_EXT_origin_offset", <id>) => (<id>, _)*/
-      
-  constraint-error:
-    x{[Unresolved(t) | _]} ->
-    (x, $[Unable to resolve.])
+      key{[ns|_]} := <nam-get-definition-key> def;
+      <is-unique-namespace> ns;
+      defs := <index-lookup-all> key;
+      <gt> (<length> defs, 1)
+    
+rules // Types
     
   constraint-error:
-    e at Assign(var, exp) -> (e, $[Expected [<print-type> type1] but found [<print-type> type2].])
+    e at Assign(lhs, rhs) -> (e, $[Expected [<print-type> type1] but found [<print-type> type2].])
     where
-    	type1 := <type-of> e;
-    	type2 := <type-of> exp;
+    	type1 := <type-of> lhs;
+    	type2 := <type-of> rhs;
       not(<is-assignable-to> (type1, type2))
       
   constraint-error:
@@ -64,5 +55,7 @@
         <is-params-compatible(|arg-types)> def
       )
   
+rules // Other
+  
   constraint-warning = fail
   constraint-note = fail
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Tue Feb 21 10:10:58 2012	(r24354)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Tue Feb 21 10:56:48 2012	(r24355)
@@ -43,9 +43,6 @@
   
   type-of:
     PropAccess(e, p) -> <type-of> <index-lookup> p
-    
-  type-of:
-    Assign(x, _) -> <type-of> <index-lookup> x
 
   type-of:
     Def(uri) -> <index-get-value> Type(uri, ())
@@ -69,7 +66,7 @@
     ![IntType(), StringType()]
       
   type-to-def:
-    TYPE(t) -> Def([Entity(), t])
+    TYPE(t) -> Def([Type(), t])
 
   print-type = 
     switch ?input

From gabrielkonat at gmail.com  Tue Feb 21 14:18:28 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 21 Feb 2012 13:18:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24356 - in
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses:
	syntax test trans
Message-ID: <20120221131828.28129108C009@mx3.tudelft.nl>

Author: gkonat
Date: Tue Feb 21 13:18:27 2012
New Revision: 24356
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24356&sc=1

Log:
Renamed Class namespace to Type/PartialType.
Added duplicate definition check.

Modified:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx	Tue Feb 21 10:56:48 2012	(r24355)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/SPX.spx	Tue Feb 21 13:18:27 2012	(r24356)
@@ -5,10 +5,10 @@
 context-free syntax
 	
 	%% Constructs
-  Using* Definition*                                  -> Start {"Start", scope(Class, Namespace, Using)}
-  "namespace" Namespace@=ID "{" Definition* "}"       -> Definition {"Namespace", scope(Class, Namespace)}
-  "partial" "class" Class@=ID "{" ClassBodyDecl* "}"  -> Definition {"PartialClass", scope(Field, Method)}
-  "class" Class@=ID "{" ClassBodyDecl* "}"            -> Definition {"Class", scope(Field, Method)}
+  Using* Definition*                                        -> Start {"Start", scope(Type, PartialType, Namespace, Using)}
+  "namespace" Namespace@=ID "{" Definition* "}"             -> Definition {"Namespace", scope(Type, PartialType, Namespace)}
+  "partial" "class" PartialType@=ID "{" ClassBodyDecl* "}"  -> Definition {"PartialClass", scope(Field, Method)}
+  "class" Type@=ID "{" ClassBodyDecl* "}"                   -> Definition {"Class", scope(Field, Method)}
   
   "using" Using@=UsingPart ";"  -> Using {"Using"}
   Namespace at ID                  -> UsingPart {"UsingPart"}
@@ -19,7 +19,7 @@
   Type Method@=ID "(" ")" "{" Stmt* "}" -> ClassBodyDecl {"Method"} 
   
   %% Types
-  Class at ID  -> Type {"Type"}
+  Type at ID   -> Type {"Type"}
   "string"  -> Type {"StringType", prefer}
   "int"     -> Type {"IntType", prefer}
   "void"    -> Type {"VoidType", prefer}

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt	Tue Feb 21 10:56:48 2012	(r24355)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt	Tue Feb 21 13:18:27 2012	(r24356)
@@ -125,7 +125,7 @@
 
 test Unexpected return type 2 [[
   namespace Tests {
-    class P {
+    partial class P {
       string getA() {
         return a;
       }

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Tue Feb 21 10:56:48 2012	(r24355)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Tue Feb 21 13:18:27 2012	(r24356)
@@ -5,23 +5,28 @@
   lib/analysis-library
 signature
   constructors
-    Using     : Namespace
-    Namespace : Namespace
-    Class     : Namespace
-    Field     : Namespace
-    Method    : Namespace
+    PartialType : Namespace
+    Using       : Namespace
+    Namespace   : Namespace
+    Type        : Namespace
+    Field       : Namespace
+    Method      : Namespace
 
 
 rules
 
   nam-get-scope-types :
-    Start(_, _) -> [ Class()
+    Start(_, _) -> [ Type()
+                   , PartialType()
                    , Namespace()
                    , Using()
                    ]
 
   nam-get-scope-types :
-    Namespace(_, _) -> [Class(), Namespace()]
+    Namespace(_, _) -> [ Type()
+                       , PartialType()
+                       , Namespace()
+                       ]
 
   nam-get-scope-types :
     PartialClass(_, _) -> [Field(), Method()]
@@ -39,13 +44,13 @@
     PartialClass(x, _) -> x
 
   nam-get-definition :
-    PartialClass(x, _) -> <nam-get-def(|Class())> x
+    PartialClass(x, _) -> <nam-get-def(|PartialType())> x
 
   nam-get-definition-key :
     Class(x, _) -> x
 
   nam-get-definition :
-    Class(x, _) -> <nam-get-def(|Class())> x
+    Class(x, _) -> <nam-get-def(|Type())> x
 
   nam-get-definition-key :
     Using(x) -> x
@@ -66,37 +71,37 @@
     Method(_, x, _) -> <nam-get-def(|Method())> x
 
   nam-annotate-names(|def-path):
-    Start(i_1277, j_1277) -> Start(i_1277, j_1277)
+    Start(r_7535, s_7535) -> Start(r_7535, s_7535)
 
   nam-annotate-names(|def-path):
-    Namespace(g_1277, h_1277) -> Namespace(g_1277{def-path}, h_1277)
+    Namespace(p_7535, q_7535) -> Namespace(p_7535{def-path}, q_7535)
 
   nam-annotate-names(|def-path):
-    PartialClass(e_1277, f_1277) -> PartialClass(e_1277{def-path}, f_1277)
+    PartialClass(n_7535, o_7535) -> PartialClass(n_7535{def-path}, o_7535)
 
   nam-annotate-names(|def-path):
-    Class(c_1277, d_1277) -> Class(c_1277{def-path}, d_1277)
+    Class(l_7535, m_7535) -> Class(l_7535{def-path}, m_7535)
 
   nam-annotate-names(|def-path):
-    Using(b_1277) -> Using(b_1277{def-path})
+    Using(k_7535) -> Using(k_7535{def-path})
 
   nam-annotate-names(|def-path):
-    UsingPart(a_1277) -> UsingPart(<nam-annotate-use(|Namespace())> a_1277)
+    UsingPart(j_7535) -> UsingPart(<nam-annotate-use(|Namespace())> j_7535)
 
   nam-annotate-names(|def-path):
-    UsingPart(y_1276, z_1276) -> UsingPart(
-                                   y_1276
-                                 , <nam-annotate-use(|Namespace())> z_1276
+    UsingPart(h_7535, i_7535) -> UsingPart(
+                                   h_7535
+                                 , <nam-annotate-use(|Namespace())> i_7535
                                  )
 
   nam-annotate-names(|def-path):
-    Field(w_1276, x_1276) -> Field(w_1276, x_1276{def-path})
+    Field(f_7535, g_7535) -> Field(f_7535, g_7535{def-path})
 
   nam-annotate-names(|def-path):
-    Method(t_1276, u_1276, v_1276) -> Method(t_1276, u_1276{def-path}, v_1276)
+    Method(c_7535, d_7535, e_7535) -> Method(c_7535, d_7535{def-path}, e_7535)
 
   nam-annotate-names(|def-path):
-    Type(s_1276) -> Type(<nam-annotate-use(|Class())> s_1276)
+    Type(b_7535) -> Type(<nam-annotate-use(|Type())> b_7535)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()
@@ -108,19 +113,19 @@
     VoidType() -> VoidType()
 
   nam-annotate-names(|def-path):
-    Return(r_1276) -> Return(r_1276)
+    Return(a_7535) -> Return(a_7535)
 
   nam-annotate-names(|def-path):
-    FieldRef(q_1276) -> FieldRef(<nam-annotate-use(|Field())> q_1276)
+    FieldRef(z_7534) -> FieldRef(<nam-annotate-use(|Field())> z_7534)
 
   nam-annotate-names(|def-path):
-    FieldAccess(o_1276, p_1276) -> FieldAccess(
-                                     o_1276
-                                   , <nam-annotate-use(|Field())> p_1276
+    FieldAccess(x_7534, y_7534) -> FieldAccess(
+                                     x_7534
+                                   , <nam-annotate-use(|Field())> y_7534
                                    )
 
   nam-annotate-names(|def-path):
-    MethodCall(m_1276, n_1276) -> MethodCall(
-                                    m_1276
-                                  , <nam-annotate-use(|Method())> n_1276
+    MethodCall(v_7534, w_7534) -> MethodCall(
+                                    v_7534
+                                  , <nam-annotate-use(|Method())> w_7534
                                   )
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Tue Feb 21 10:56:48 2012	(r24355)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Tue Feb 21 13:18:27 2012	(r24356)
@@ -49,16 +49,16 @@
   ns-to-name:
     UsingPart(ns, _) -> ns
     
-  // Add classes from included namespaces.
+  // Return primitives, classes, partial classes and classes from included namespaces.
   adjust-index-lookup(target |namespace, path, prefix): 
-    Type(<target>) -> <concat> [primitives, [[Class() | path]], importPaths]
+    Type(<target>) -> <concat> [primitives, [[Type() | path]], [[PartialType() | path]], importPaths]
     with
       // TODO: Don't use index-get-all-in-file.
       importPaths :=  <filter(using-to-path)> <index-get-all-in-file> <index-get-current-file>;
       primitives := <map(type-of; type-to-def)> <primitive-types>
         
   using-to-path:
-    Def([Using(), ns|rest]) -> <concat> [[Class()], <flatten-using> ns, rest]
+    Def([Using(), ns|rest]) -> <concat> [[Type()], <flatten-using> ns, rest]
     
   flatten-using:
     UsingPart(ns, other) -> <conc> ([other], <flatten-using> ns)

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str	Tue Feb 21 10:56:48 2012	(r24355)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str	Tue Feb 21 13:18:27 2012	(r24356)
@@ -11,34 +11,27 @@
 
 rules
 
-  // TODO: index-get-term was removed, store offsets in the index
-  /*constraint-error:
-    x -> (x, $[Use before definition])
-    where
-      namespace := <index-namespace> x;
-      <is-ordered-namespace> namespace
-    where
-      def  := <index-lookup> x;
-      def' := <index-get-term> def
-    where
-      <gt> (<origin-offset> def', <origin-offset> x)
-      
-  is-ordered-namespace:
-    Var() -> Var()
+rules // Resolving
   
   constraint-error:
+    x{[Unresolved(t) | _]} ->
+    (x, $[Unable to resolve.])
+    
+rules // Duplicates
+    
+  is-unique-namespace = ?Type()
+  is-unique-namespace = ?Field()
+      
+  constraint-error:
     def -> (def, $[Duplicate definition])
     where
-      def-child  := <nam-get-definition-key> def;
-      def'       := <index-get-term> <index-lookup-outermost> def-child;
-      not(<origin-equal(|def)> def')
-      
-  origin-offset =
-    prim("SSL_EXT_origin_offset", <id>) => (<id>, _)*/
+      key{[ns|_]} := <nam-get-definition-key> def;
+      <is-unique-namespace> ns;
+      defs := <index-lookup-all> key;
+      <gt> (<length> defs, 1)
       
-  constraint-error:
-    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
-    
+rules // Types
+  
   constraint-error:
     Method(type, _, statement) -> errors
     where
@@ -59,6 +52,8 @@
       not(<is-assignable-to> (type1, <type-of> VoidType()));
       not(<collect-one(?Return(_))> statement)
     
+rules // Other
+    
   constraint-warning = fail
   constraint-note = fail
   
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Tue Feb 21 10:56:48 2012	(r24355)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/types.str	Tue Feb 21 13:18:27 2012	(r24356)
@@ -63,7 +63,7 @@
     ![VoidType(), IntType(), StringType()]
       
   type-to-def:
-    TYPE(t) -> Def([Class(), t])
+    TYPE(t) -> Def([Type(), t])
   
   print-type = 
     switch ?input

From M.A.Akhter at student.tudelft.nl  Tue Feb 21 15:21:28 2012
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Tue, 21 Feb 2012 14:21:28 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24357 -
	spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/data
Message-ID: <20120221142128.142BBCC119@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Tue Feb 21 14:21:27 2012
New Revision: 24357
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24357&sc=1

Log:


Modified:
   spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/data/SpxBaseSymbol.java

Modified: spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/data/SpxBaseSymbol.java
==============================================================================
--- spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/data/SpxBaseSymbol.java	Tue Feb 21 13:18:27 2012	(r24356)
+++ spoofax/branches/adil-thesis-demo/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/data/SpxBaseSymbol.java	Tue Feb 21 14:21:27 2012	(r24357)
@@ -125,7 +125,7 @@
 	}
 	
 	
-	// TODO FIX : bring the singature to the base class 
+	// TODO FIX : bring the signature to the base class 
 	public boolean equalSignature (IStrategoConstructor term) { 
 		return _signatureString.equals(term.getName()); 
 	}

From gabrielkonat at gmail.com  Tue Feb 21 16:46:48 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 21 Feb 2012 15:46:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24358 - in
	spoofax-contrib/separate-compilation-examples/c-without-macros:
	test trans
Message-ID: <20120221154648.95C9FCC29A@mx4.tudelft.nl>

Author: gkonat
Date: Tue Feb 21 15:46:48 2012
New Revision: 24358
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24358&sc=1

Log:
Added duplicate definition and use before definition check.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt	Tue Feb 21 14:21:27 2012	(r24357)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt	Tue Feb 21 15:46:48 2012	(r24358)
@@ -14,9 +14,13 @@
 
 test Resolve typedeffed struct reference [[
   typedef struct B {
-    [[B_t]] b;
   } [[B_t]];
-]] resolve #1 to #2
+  
+  [[B_t]]* f() {
+    B_t* b;
+    return b;
+  }
+]] resolve #2 to #1
 
 test Resolve typedeffed struct reference [[
   typedef struct B {

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Tue Feb 21 14:21:27 2012	(r24357)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Tue Feb 21 15:46:48 2012	(r24358)
@@ -6,7 +6,7 @@
   typedef struct A {
     char* s;
     int i;
-    A_t* a;
+    struct A* a;
   } A_t;
   
 	void* malloc(int size) {
@@ -141,7 +141,7 @@
     a->s="test";
     return a->s;
   }
-]] 2 errors
+]] 6 errors
 
 test Assignment [[
   void f() {
@@ -215,8 +215,3 @@
 
   }
 ]] 1 error
-
-test Use before def allowed [[
-  struct B {};
-  struct B {};
-]]

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Tue Feb 21 14:21:27 2012	(r24357)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Tue Feb 21 15:46:48 2012	(r24358)
@@ -72,88 +72,88 @@
     VarDecl(_, x) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Start(c_1632) -> Start(c_1632)
+    Start(w_14315) -> Start(w_14315)
 
   nam-annotate-names(|def-path):
-    Include(b_1632) -> Include(b_1632{def-path})
+    Include(v_14315) -> Include(v_14315{def-path})
 
   nam-annotate-names(|def-path):
-    Include(a_1632) -> Include(a_1632{def-path})
+    Include(u_14315) -> Include(u_14315{def-path})
 
   nam-annotate-names(|def-path):
-    FunDecl(w_1631, x_1631, y_1631, z_1631) -> FunDecl(w_1631, x_1631{def-path}, y_1631, z_1631)
+    FunDecl(q_14315, r_14315, s_14315, t_14315) -> FunDecl(q_14315, r_14315{def-path}, s_14315, t_14315)
 
   nam-annotate-names(|def-path):
-    Param(u_1631, v_1631) -> Param(u_1631, v_1631{def-path})
+    Param(o_14315, p_14315) -> Param(o_14315, p_14315{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDecl(t_1631) -> TypeDecl(t_1631)
+    TypeDecl(n_14315) -> TypeDecl(n_14315)
 
   nam-annotate-names(|def-path):
-    TypeDef(r_1631, s_1631) -> TypeDef(r_1631, s_1631{def-path})
+    TypeDef(l_14315, m_14315) -> TypeDef(l_14315, m_14315{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDef(p_1631, q_1631) -> TypeDef(p_1631, q_1631{def-path})
+    TypeDef(j_14315, k_14315) -> TypeDef(j_14315, k_14315{def-path})
 
   nam-annotate-names(|def-path):
-    StructDecl(n_1631, o_1631) -> StructDecl(n_1631{def-path}, o_1631)
+    StructDecl(h_14315, i_14315) -> StructDecl(h_14315{def-path}, i_14315)
 
   nam-annotate-names(|def-path):
-    Field(l_1631, m_1631) -> Field(l_1631, m_1631{def-path})
+    Field(f_14315, g_14315) -> Field(f_14315, g_14315{def-path})
 
   nam-annotate-names(|def-path):
-    VarDecl(j_1631, k_1631) -> VarDecl(j_1631, k_1631{def-path})
+    VarDecl(d_14315, e_14315) -> VarDecl(d_14315, e_14315{def-path})
 
   nam-annotate-names(|def-path):
-    Stmt(i_1631) -> Stmt(i_1631)
+    Stmt(c_14315) -> Stmt(c_14315)
 
   nam-annotate-names(|def-path):
-    Assign(g_1631, h_1631) -> Assign(g_1631, h_1631)
+    Assign(a_14315, b_14315) -> Assign(a_14315, b_14315)
 
   nam-annotate-names(|def-path):
-    Return(f_1631) -> Return(f_1631)
+    Return(z_14314) -> Return(z_14314)
 
   nam-annotate-names(|def-path):
-    StrLit(e_1631) -> StrLit(e_1631)
+    StrLit(y_14314) -> StrLit(y_14314)
 
   nam-annotate-names(|def-path):
-    IntLit(d_1631) -> IntLit(d_1631)
+    IntLit(x_14314) -> IntLit(x_14314)
 
   nam-annotate-names(|def-path):
-    Call(b_1631, c_1631) -> Call(
-                              <nam-annotate-use(|Function())> b_1631
-                            , c_1631
-                            )
+    Call(v_14314, w_14314) -> Call(
+                                <nam-annotate-use(|Function())> v_14314
+                              , w_14314
+                              )
 
   nam-annotate-names(|def-path):
-    SizeOf(a_1631) -> SizeOf(a_1631)
+    SizeOf(u_14314) -> SizeOf(u_14314)
 
   nam-annotate-names(|def-path):
-    Access(y_1630, z_1630) -> Access(
-                                y_1630
-                              , <nam-annotate-use(|Field())> z_1630
-                              )
+    Access(s_14314, t_14314) -> Access(
+                                  s_14314
+                                , <nam-annotate-use(|Field())> t_14314
+                                )
 
   nam-annotate-names(|def-path):
-    DerefAccess(w_1630, x_1630) -> DerefAccess(
-                                     w_1630
-                                   , <nam-annotate-use(|Field())> x_1630
-                                   )
+    DerefAccess(q_14314, r_14314) -> DerefAccess(
+                                       q_14314
+                                     , <nam-annotate-use(|Field())> r_14314
+                                     )
 
   nam-annotate-names(|def-path):
-    Deref(v_1630) -> Deref(v_1630)
+    Deref(p_14314) -> Deref(p_14314)
 
   nam-annotate-names(|def-path):
-    Ref(u_1630) -> Ref(u_1630)
+    Ref(o_14314) -> Ref(o_14314)
 
   nam-annotate-names(|def-path):
-    VarRef(t_1630) -> VarRef(<nam-annotate-use(|Var())> t_1630)
+    VarRef(n_14314) -> VarRef(<nam-annotate-use(|Var())> n_14314)
 
   nam-annotate-names(|def-path):
-    Cast(r_1630, s_1630) -> Cast(r_1630, s_1630)
+    Cast(l_14314, m_14314) -> Cast(l_14314, m_14314)
 
   nam-annotate-names(|def-path):
-    Type(q_1630) -> Type(<nam-annotate-use(|Type())> q_1630)
+    Type(k_14314) -> Type(<nam-annotate-use(|Type())> k_14314)
 
   nam-annotate-names(|def-path):
     Char() -> Char()
@@ -165,7 +165,7 @@
     Void() -> Void()
 
   nam-annotate-names(|def-path):
-    Pointer(p_1630) -> Pointer(p_1630)
+    Pointer(j_14314) -> Pointer(j_14314)
 
   nam-annotate-names(|def-path):
-    StructRef(o_1630) -> StructRef(<nam-annotate-use(|Struct())> o_1630)
\ No newline at end of file
+    StructRef(i_14314) -> StructRef(<nam-annotate-use(|Struct())> i_14314)
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Tue Feb 21 14:21:27 2012	(r24357)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Tue Feb 21 15:46:48 2012	(r24358)
@@ -9,36 +9,48 @@
   analysis-generated
   types
 
-rules
+rules // Resolving
+  
+  constraint-error:
+    x{[Unresolved(t) | _]} ->
+    (x, $[Unable to resolve.])
 
-  // TODO: index-get-term was removed, store offsets in the index
-  /*constraint-error:
-    x -> (x, $[Use before definition])
-    where
-      namespace := <index-namespace> x;
-      <is-ordered-namespace> namespace
-    where
-      def  := <index-lookup> x;
-      def' := <index-get-term> def
-    where
-      <gt> (<origin-offset> def', <origin-offset> x)
-      
-  is-ordered-namespace:
-    Var() -> Var()
   
+rules // Duplicates
+  
+  is-unique-namespace = ?Type()
+  is-unique-namespace = ?Struct()
+  is-unique-namespace = ?Field()
+  is-unique-namespace = ?Function()
+      
   constraint-error:
     def -> (def, $[Duplicate definition])
     where
-      def-child  := <nam-get-definition-key> def;
-      def'       := <index-get-term> <index-lookup-outermost> def-child;
-      not(<origin-equal(|def)> def')
-      
-  origin-offset =
-    prim("SSL_EXT_origin_offset", <id>) => (<id>, _)*/
-      
+      key{[ns|_]} := <nam-get-definition-key> def;
+      <is-unique-namespace> ns;
+      defs := <index-lookup-all> key;
+      <gt> (<length> defs, 1)  
+  
+rules // Use before def
+
+  is-ordered-namespace = ?Type()
+  is-ordered-namespace = ?Struct()
+  is-ordered-namespace = ?Var()
+  is-ordered-namespace = ?Function()
+
   constraint-error:
-    x{[Unresolved(t) | _]} -> (x, $[Unable to resolve.])
+    x -> (x, $[Use before definition])
+    where
+      namespace := <index-namespace> x;
+      <is-ordered-namespace> namespace;
+      def := <index-lookup> x;
+      <gt> (<Fst> <origin-offset> def, <Fst> <origin-offset> x);
+      currentFile := <index-get-current-file>; // TODO: Can we use index-get-current-file here?
+      [otherFile|_] := <index-get-files-of> def;
+      <eq> (currentFile, otherFile)
     
+rules // Types
+  
   constraint-error:
     e at Assign(lhs, rhs) -> (e, $[Expected [<print-type> type1] but found [<print-type> type2].])
     where
@@ -78,5 +90,7 @@
       print-param-types := <print-type> <try-lookup-struct> param-types;
       print-arg-types := <print-type> <try-lookup-struct> arg-types
   
+rules // Other
+  
   constraint-warning = fail
-  constraint-note = fail
\ No newline at end of file
+  constraint-note = fail

From L.C.L.Kats at tudelft.nl  Wed Feb 22 09:59:58 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 22 Feb 2012 08:59:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24359 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax...
Message-ID: <20120222085959.065DA2B800C@mx2.tudelft.nl>

Author: LennartKats
Date: Wed Feb 22 08:59:57 2012
New Revision: 24359
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24359&sc=1

Log:
minor notification API tuning and documentation

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/INotificationService.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/NotificationCenter.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Tue Feb 21 15:46:48 2012	(r24358)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Wed Feb 22 08:59:57 2012	(r24359)
@@ -54,7 +54,7 @@
 					IResource resource = delta.getResource();
 					if (isSignificantChange(delta) && LanguageRegistry.findLanguage(resource.getLocation(), null) != null) {
 						URI uri = resource.getLocationURI();
-						NotificationCenter.notifyChanges(uri, null);
+						NotificationCenter.notifyFileChanges(uri, null);
 					}
 					return true;
 				}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java	Tue Feb 21 15:46:48 2012	(r24358)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java	Wed Feb 22 08:59:57 2012	(r24359)
@@ -43,15 +43,15 @@
 		}
 	}
 
+	/**
+	 * Notify changes of all files in a project,
+	 * as long as they are known to have an index associated with them.
+	 */
 	public void notifyNewProject(URI project) {
 		Debug.log("Loading uninitialized project ", project);
 		notifyNewProjectFiles(new File(project));
 	}
 
-	/**
-	 * Notify changes of all files in the project,
-	 * as long as they are known to have an index associated with them.
-	 */
 	private void notifyNewProjectFiles(File file) {
 		if (file.isFile()) {
 			if (isIndexedFile(new Path(file.getAbsolutePath())))

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/INotificationService.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/INotificationService.java	Tue Feb 21 15:46:48 2012	(r24358)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/INotificationService.java	Wed Feb 22 08:59:57 2012	(r24359)
@@ -2,14 +2,20 @@
 
 import java.net.URI;
 
-import org.spoofax.interpreter.terms.IStrategoTerm;
-
 /**
  * @author Lennart Kats <lennart add lclnet.nl>
  */
 public interface INotificationService {
 	
+	/**
+	 * Notify listener of a added/removed/changed file.
+	 */
 	void notifyFileChanges(URI file, String subfile);
 
+	/**
+	 * Notify listener of a new project.
+	 * All files in it should be compared to the
+	 * timestamps or other metadata stored about them.
+	 */
 	void notifyNewProject(URI project);
 }

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/NotificationCenter.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/NotificationCenter.java	Tue Feb 21 15:46:48 2012	(r24358)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/NotificationCenter.java	Wed Feb 22 08:59:57 2012	(r24359)
@@ -17,16 +17,23 @@
 			new HashMap<ObserverDescription, INotificationService>();
 	
 	/**
+	 * Notify listeners of a added/removed/changed file.
+	 *
 	 * @param file      The URI of the file
 	 * @param subfile   The subfilename, or null if not applicable
 	 */
-	public synchronized static void notifyChanges(URI file, String subfile) {
+	public synchronized static void notifyFileChanges(URI file, String subfile) {
 		assert file.isAbsolute();
 		for (INotificationService observer : asyncObservers.values()) {
 			observer.notifyFileChanges(file, subfile);
 		}
 	}
 
+	/**
+	 * Notify listener of a new project.
+	 * All files in it should be compared to the
+	 * timestamps or other metadata stored about them.
+	 */
 	public synchronized static void notifyNewProject(URI project) {
 		for (INotificationService observer : asyncObservers.values()) {
 			observer.notifyNewProject(project);

From L.C.L.Kats at tudelft.nl  Wed Feb 22 10:46:51 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 22 Feb 2012 09:46:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24360 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <20120222094651.7069B7F806C@mx1.tudelft.nl>

Author: LennartKats
Date: Wed Feb 22 09:46:50 2012
New Revision: 24360
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24360&sc=1

Log:
ignore file system changes in bin and .cache directories and so on

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Wed Feb 22 08:59:57 2012	(r24359)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Wed Feb 22 09:46:50 2012	(r24360)
@@ -6,8 +6,9 @@
 import static org.eclipse.core.resources.IResourceDelta.CONTENT;
 import static org.eclipse.core.resources.IResourceDelta.MOVED_FROM;
 import static org.eclipse.core.resources.IResourceDelta.MOVED_TO;
+import static org.eclipse.core.resources.IResourceDelta.NO_CHANGE;
 import static org.eclipse.core.resources.IResourceDelta.REMOVED;
-import static org.eclipse.core.resources.IResourceDelta.*;
+import static org.eclipse.core.resources.IResourceDelta.REPLACED;
 
 import java.net.URI;
 
@@ -18,6 +19,7 @@
 import org.eclipse.core.resources.IResourceDeltaVisitor;
 import org.eclipse.core.resources.ResourcesPlugin;
 import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IPath;
 import org.eclipse.imp.language.LanguageRegistry;
 import org.spoofax.interpreter.library.language.NotificationCenter;
 import org.strategoxt.imp.runtime.Environment;
@@ -52,7 +54,9 @@
 			delta.accept(new IResourceDeltaVisitor() {
 				public boolean visit(IResourceDelta delta) throws CoreException {
 					IResource resource = delta.getResource();
-					if (isSignificantChange(delta) && LanguageRegistry.findLanguage(resource.getLocation(), null) != null) {
+					if (isSignificantChange(delta)
+							&& !isIgnoredChange(resource)
+							&& LanguageRegistry.findLanguage(resource.getLocation(), null) != null) {
 						URI uri = resource.getLocationURI();
 						NotificationCenter.notifyFileChanges(uri, null);
 					}
@@ -81,4 +85,15 @@
 				return false;
 		}
 	}
+	
+	private static boolean isIgnoredChange(IResource resource) {
+		IPath path = resource.getProjectRelativePath();
+		if (path.segmentCount() > 1) {
+			String base = path.segment(0);
+			if (".cache".equals(base) || ".shadowdir".equals(base)
+					|| "include".equals(base) || "bin".equals(base))
+				return true;
+		}
+		return false;
+	}
 }

From L.C.L.Kats at tudelft.nl  Wed Feb 22 11:03:46 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 22 Feb 2012 10:03:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24361 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego
Message-ID: <20120222100346.4A0D17F802B@mx1.tudelft.nl>

Author: LennartKats
Date: Wed Feb 22 10:03:45 2012
New Revision: 24361
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24361&sc=1

Log:
null check

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Wed Feb 22 09:46:50 2012	(r24360)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Wed Feb 22 10:03:45 2012	(r24361)
@@ -56,6 +56,7 @@
 					IResource resource = delta.getResource();
 					if (isSignificantChange(delta)
 							&& !isIgnoredChange(resource)
+							&& resource.getLocation() != null
 							&& LanguageRegistry.findLanguage(resource.getLocation(), null) != null) {
 						URI uri = resource.getLocationURI();
 						NotificationCenter.notifyFileChanges(uri, null);

From L.C.L.Kats at tudelft.nl  Wed Feb 22 11:32:02 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 22 Feb 2012 10:32:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24362 -
	spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/strategies
Message-ID: <20120222103202.206E27F8063@mx1.tudelft.nl>

Author: LennartKats
Date: Wed Feb 22 10:32:01 2012
New Revision: 24362
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24362&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/strategies/plugin_strategy_invoke_0_2.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/strategies/plugin_strategy_invoke_0_2.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/strategies/plugin_strategy_invoke_0_2.java	Wed Feb 22 10:03:45 2012	(r24361)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/strategies/plugin_strategy_invoke_0_2.java	Wed Feb 22 10:32:01 2012	(r24362)
@@ -6,6 +6,7 @@
 
 import org.eclipse.core.resources.IProject;
 import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.core.UndefinedStrategyException;
 import org.spoofax.interpreter.terms.IStrategoAppl;
 import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.spoofax.interpreter.terms.ITermFactory;
@@ -51,7 +52,7 @@
 				observer.getRuntime().getIOAgent().printError(trace);
 				return factory.makeAppl(factory.makeConstructor("Fail", 1), factory.makeString(trace));
 			}
-		} catch (MissingStrategyException e) {
+		} catch (UndefinedStrategyException e) {
 			return factory.makeAppl(factory.makeConstructor("Error", 1),
 					factory.makeString("Problem loading descriptor for testing: " + e.getLocalizedMessage()));
 		} catch (BadDescriptorException e) {

From R.B.Vermaas at tudelft.nl  Wed Feb 22 11:46:34 2012
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 22 Feb 2012 10:46:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24363 - hydra
Message-ID: <20120222104634.5E6A87F8087@mx1.tudelft.nl>

Author: rob
Date: Wed Feb 22 10:46:33 2012
New Revision: 24363
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24363&sc=1

Log:
spoofax might have multiple jar like aster.jar, strategoxt.jar, pick from explicit location

Modified:
   hydra/spoofax-fun.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Wed Feb 22 10:32:01 2012	(r24362)
+++ hydra/spoofax-fun.nix	Wed Feb 22 10:46:33 2012	(r24363)
@@ -43,10 +43,10 @@
 
       cd `dirname $d`
       mkdir -p utils 
-      cp -Rv `find ${eclipse} -name strategoxt.jar` utils/
-      cp -Rv `find ${eclipse} -name aster.jar` utils/
-      cp -Rv `find ${eclipse} -name sdf2imp.jar` utils/
-      cp -Rv `find ${eclipse} -name make_permissive.jar` utils/
+      cp -v $eclipse/eclipse/plugins/org.strategoxt.strj_*/java/strategoxt.jar utils/
+      cp -v $eclipse/eclipse/plugins/org.strategoxt.imp.generator_*/lib/aster.jar utils/
+      cp -v $eclipse/eclipse/plugins/org.strategoxt.imp.generator_*/lib/sdf2imp.jar utils/
+      cp -v $eclipse/eclipse/plugins/org.strategoxt.imp.generator_*/lib/make_permissive.jar utils/
 
       if [[ -f pom.xml ]] ; then
         sed -i 's|</project>||' pom.xml

From L.C.L.Kats at tudelft.nl  Wed Feb 22 11:52:47 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 22 Feb 2012 10:52:47 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24364 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans
Message-ID: <20120222105247.1606B108C010@mx3.tudelft.nl>

Author: LennartKats
Date: Wed Feb 22 10:52:46 2012
New Revision: 24364
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24364&sc=1

Log:
warning for programs that use 'def' as an identifier

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Wed Feb 22 10:46:33 2012	(r24363)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/trans/analysis.str	Wed Feb 22 10:52:46 2012	(r24364)
@@ -773,6 +773,9 @@
   constraint-warning:
     Import("Java-15") -> (<id>, "Use 'import libjava-front' instead")
 
+  constraint-warning:
+    "def" -> (<id>, "The name def is reserved for future use; use 'def or a different name")
+
   /*
   constraint-warning:
     Module(x, _) -> (x, $[Module name should be qualified with a path relative to the import path])

From L.C.L.Kats at tudelft.nl  Wed Feb 22 11:53:07 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 22 Feb 2012 10:53:07 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24365 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor
Message-ID: <20120222105307.BD1E27F807C@mx1.tudelft.nl>

Author: LennartKats
Date: Wed Feb 22 10:53:07 2012
New Revision: 24365
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24365&sc=1

Log:
restored (openeditor) annotations

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv	Wed Feb 22 10:52:46 2012	(r24364)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.stratego/editor/Stratego-Sugar-Builders.esv	Wed Feb 22 10:53:07 2012	(r24365)
@@ -14,29 +14,25 @@
 
   observer : editor-analyze
 
-  builder : "Rename" = rename-builder (meta)
+  builder : "Rename" = rename-builder (meta) (openeditor)
   
-  builder: "Inline strategy" = inline-builder (meta)
+  builder: "Inline strategy" = inline-builder (meta) (openeditor)
 
-  builder: "Extract strategy" = extract-builder (meta)
+  builder: "Extract strategy" = extract-builder (meta) (openeditor)
 
-  builder: "Remove debug calls" = remove-debug-builder (meta)
+  builder: "Remove debug calls" = remove-debug-builder (meta) (openeditor)
 
   builder : "Show analysed AST" =
-    generate-aterm (meta)
+    generate-aterm (meta) (openeditor)
 
   builder : "Show desugared AST (selection)" =
     generate-desugared-aterm (realtime) (openeditor) (source) (meta)
 
   builder : "Show AST (selection)" =
-    generate-aterm (source) (meta) 
+    generate-aterm (source) (openeditor) (meta) 
 
   builder : "PP Stratego String" =
-    pp-builder (source) (meta) 
-
-  //builder : "Test" =
-    //test-builder //(meta) 
-
+    pp-builder (source) (openeditor) (meta) 
     
 refactorings 
    

From L.C.L.Kats at tudelft.nl  Wed Feb 22 11:55:51 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 22 Feb 2012 10:55:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24366 -
	spoofax-imp/trunk/experimental/NamingExperiment/test
Message-ID: <20120222105551.D5506CC265@mx4.tudelft.nl>

Author: LennartKats
Date: Wed Feb 22 10:55:51 2012
New Revision: 24366
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24366&sc=1

Log:
fixed index-setup calls

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/test/test-timestamps.spt

Modified: spoofax-imp/trunk/experimental/NamingExperiment/test/test-timestamps.spt
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/test/test-timestamps.spt	Wed Feb 22 10:53:07 2012	(r24365)
+++ spoofax-imp/trunk/experimental/NamingExperiment/test/test-timestamps.spt	Wed Feb 22 10:55:51 2012	(r24366)
@@ -3,7 +3,7 @@
 language NamingExperiment
 
 test No changes after update
-  prim("LANG_index_setup", "NamingExperiment", ["/tmp/test-timestamps"]);
+  index-setup(|"NamingExperiment", ["/tmp/test-timestamps"], ".");
   
   <index-add-all(|"/foo")> [Def([Def(), "spanish enquisition"])];
   with(<call> ("sleep", ["1"]) | "System must provide sleep command");
@@ -12,7 +12,7 @@
   index-timestamp-get-updates(|"ServiceA") => [] // don't expect spanish enquisition
 
 test Changes after add
-  prim("LANG_index_setup", "NamingExperiment", ["/tmp/test-timestamps"]);
+  index-setup(|"NamingExperiment", ["/tmp/test-timestamps"], ".");
   <index-get-all-in-file> "/foo";
   index-remove-all(|"/foo");
   

From gabrielkonat at gmail.com  Wed Feb 22 13:11:42 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 22 Feb 2012 12:11:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24367 - in
	spoofax-contrib/separate-compilation-examples:
	c-without-macros/editor c-without-macros/test
	c-without-macros/trans csharp-partial-classses/test
	csharp-partial-...
Message-ID: <20120222121142.CBFB42B802D@mx2.tudelft.nl>

Author: gkonat
Date: Wed Feb 22 12:11:41 2012
New Revision: 24367
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24367&sc=1

Log:
Improved test coverage.

Added:
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/completion.spt
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/completion.spt
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Completions.esv
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
   spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/resolving.spt
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/completion.spt
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/resolving.spt
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Completions.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Completions.esv	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/editor/C-without-macros-Completions.esv	Wed Feb 22 12:11:41 2012	(r24367)
@@ -18,4 +18,5 @@
                                          
   completion proposer                  : editor-complete
                                          
-  completion trigger                   : ":"
\ No newline at end of file
+  completion trigger                   : "\."
+  completion trigger                   : "->"
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/blog.cwi	Wed Feb 22 12:11:41 2012	(r24367)
@@ -1,5 +1,5 @@
 typedef struct blog {
-  char *posterName;
+  char* posterName;
   int postCount;
 } blog_t;
 

Added: spoofax-contrib/separate-compilation-examples/c-without-macros/test/completion.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/completion.spt	Wed Feb 22 12:11:41 2012	(r24367)
@@ -0,0 +1,73 @@
+module Tests-Completion
+
+language C-without-macros
+
+setup Header [[ 
+  typedef struct BBBBB {
+    int integer;
+    char* string;
+  } BBBBB_t;
+]]
+
+test Complete property access 1 [[
+  int f() {
+    BBBBB_t b;
+    return b.[[i]];
+  }
+]] complete to "integer"
+
+test Complete property access 2 [[
+  int f() {
+    BBBBB_t* b;
+    return b->[[i]];
+  }
+]] complete to "integer"
+
+test Complete parameter [[
+  int f(B_t* test) {
+    return [[t]]->integer;
+  }
+]] complete to "test"
+
+test Complete local variable [[
+  int f() {
+    B_t* test;
+    return [[t]]->integer;
+  }
+]] complete to "test"
+
+test Complete function call [[
+  int die() {
+  	return [[d]]();
+	}
+]] complete to "die"
+
+test Complete primitive type 1 [[
+  [[v]] f() {}
+]] complete to "void"
+
+test Complete primitive type 2 [[
+  void f() {
+  	[[i]] a;
+  }
+]] complete to "int"
+
+test Complete struct type 1 [[
+  struct [[B]] f() {} 
+]] complete to "BBBBB"
+
+test Complete struct type 2 [[
+  void f() {
+    struct [[B]] b;
+  }
+]] complete to "BBBBB"
+
+test Complete typedef 1 [[
+  [[B]] f() {} 
+]] complete to "BBBBB_t"
+
+test Complete typedef 2 [[
+  void f() {
+    [[B]] b;
+  }
+]] complete to "BBBBB_t"
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/resolving.spt	Wed Feb 22 12:11:41 2012	(r24367)
@@ -6,12 +6,21 @@
 
 ]]
 
-test Resolve struct reference [[
+test Resolve struct reference 1 [[
   struct [[B]] {
     struct [[B]] b;
   };
 ]] resolve #2 to #1
 
+test Resolve struct reference 2 [[
+  struct [[B]] {
+  };
+  
+  struct B* f() {
+    return (struct [[B]]*)0;
+  }
+]] resolve #2 to #1
+
 test Resolve typedeffed struct reference [[
   typedef struct B {
   } [[B_t]];
@@ -34,7 +43,7 @@
   }
 ]] resolve #2 to #1
 
-test Resolve property access [[
+test Resolve property access 1 [[
   struct B {
     int [[i]];
   };
@@ -45,6 +54,17 @@
   }
 ]] resolve #2 to #1
 
+test Resolve property access 2 [[
+  struct B {
+    int [[i]];
+  };
+  
+  int f() {
+    struct B b;
+    return b.[[i]];
+  }
+]] resolve #2 to #1
+
 test Resolve typedeffed property access [[
   struct B {
     int [[i]];
@@ -60,15 +80,27 @@
   } 
 ]] resolve #2 to #1 
 
-test Resolve local variable [[
+test Resolve local variable reference [[
   int f() {
     int [[i]];
     return [[i]];
   }
 ]] resolve #2 to #1
 
-test Resolve local variable (parameter) [[
+test Resolve parameter reference [[
   char* f(char* [[s]]) {
     return [[s]];
   }
+]] resolve #2 to #1
+
+test Resolve function call [[
+  void* [[malloc]](int size) {
+    void* ptr;
+    // TODO: allocate memory
+    return ptr;
+  }
+  
+  char* f() {
+    return (char*)[[malloc]](0);
+  }
 ]] resolve #2 to #1
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/test/tests.spt	Wed Feb 22 12:11:41 2012	(r24367)
@@ -215,3 +215,64 @@
 
   }
 ]] 1 error
+
+// TODO: Should only have 2 errors.
+test Duplicate struct fails [[
+  struct B {};
+  struct B {};
+]] 3 errors
+
+// TODO: Should only have 2 errors.
+test Duplicate type fails [[
+  typedef struct B {} D_t;
+  typedef struct C {} D_t;
+]] 3 errors
+
+test Duplicate field fails [[
+  struct B {
+    int a;
+    int a;
+  };
+]] 2 errors
+
+// TODO: Should only have 2 errors.
+test Duplicate local variable fails [[
+  void f() {
+    int a;
+    int a;
+  }
+]] 3 errors
+
+// TODO: Should only have 2 errors.
+test Duplicate function fails [[
+  void f() {}
+  void f() {}
+]] 3 errors
+
+test Use struct before def fails [[
+  struct C {
+    struct B* b;
+  };
+  struct B {};
+]] 1 error
+
+test Use type before def fails [[
+  struct C {
+    B_t* b;
+  };
+  typedef struct B {} B_t;
+]] 1 error
+
+test Use local variable before def fails [[
+  void f() {
+    a = 1;
+    int a;
+  }
+]] 1 error
+
+test Use function before def fails [[
+  void test() {
+    f();
+  }
+  void f() {}
+]] 1 error
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Wed Feb 22 12:11:41 2012	(r24367)
@@ -72,88 +72,88 @@
     VarDecl(_, x) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Start(w_14315) -> Start(w_14315)
+    Start(a_16276) -> Start(a_16276)
 
   nam-annotate-names(|def-path):
-    Include(v_14315) -> Include(v_14315{def-path})
+    Include(z_16275) -> Include(z_16275{def-path})
 
   nam-annotate-names(|def-path):
-    Include(u_14315) -> Include(u_14315{def-path})
+    Include(y_16275) -> Include(y_16275{def-path})
 
   nam-annotate-names(|def-path):
-    FunDecl(q_14315, r_14315, s_14315, t_14315) -> FunDecl(q_14315, r_14315{def-path}, s_14315, t_14315)
+    FunDecl(u_16275, v_16275, w_16275, x_16275) -> FunDecl(u_16275, v_16275{def-path}, w_16275, x_16275)
 
   nam-annotate-names(|def-path):
-    Param(o_14315, p_14315) -> Param(o_14315, p_14315{def-path})
+    Param(s_16275, t_16275) -> Param(s_16275, t_16275{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDecl(n_14315) -> TypeDecl(n_14315)
+    TypeDecl(r_16275) -> TypeDecl(r_16275)
 
   nam-annotate-names(|def-path):
-    TypeDef(l_14315, m_14315) -> TypeDef(l_14315, m_14315{def-path})
+    TypeDef(p_16275, q_16275) -> TypeDef(p_16275, q_16275{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDef(j_14315, k_14315) -> TypeDef(j_14315, k_14315{def-path})
+    TypeDef(n_16275, o_16275) -> TypeDef(n_16275, o_16275{def-path})
 
   nam-annotate-names(|def-path):
-    StructDecl(h_14315, i_14315) -> StructDecl(h_14315{def-path}, i_14315)
+    StructDecl(l_16275, m_16275) -> StructDecl(l_16275{def-path}, m_16275)
 
   nam-annotate-names(|def-path):
-    Field(f_14315, g_14315) -> Field(f_14315, g_14315{def-path})
+    Field(j_16275, k_16275) -> Field(j_16275, k_16275{def-path})
 
   nam-annotate-names(|def-path):
-    VarDecl(d_14315, e_14315) -> VarDecl(d_14315, e_14315{def-path})
+    VarDecl(h_16275, i_16275) -> VarDecl(h_16275, i_16275{def-path})
 
   nam-annotate-names(|def-path):
-    Stmt(c_14315) -> Stmt(c_14315)
+    Stmt(g_16275) -> Stmt(g_16275)
 
   nam-annotate-names(|def-path):
-    Assign(a_14315, b_14315) -> Assign(a_14315, b_14315)
+    Assign(e_16275, f_16275) -> Assign(e_16275, f_16275)
 
   nam-annotate-names(|def-path):
-    Return(z_14314) -> Return(z_14314)
+    Return(d_16275) -> Return(d_16275)
 
   nam-annotate-names(|def-path):
-    StrLit(y_14314) -> StrLit(y_14314)
+    StrLit(c_16275) -> StrLit(c_16275)
 
   nam-annotate-names(|def-path):
-    IntLit(x_14314) -> IntLit(x_14314)
+    IntLit(b_16275) -> IntLit(b_16275)
 
   nam-annotate-names(|def-path):
-    Call(v_14314, w_14314) -> Call(
-                                <nam-annotate-use(|Function())> v_14314
-                              , w_14314
+    Call(z_16274, a_16275) -> Call(
+                                <nam-annotate-use(|Function())> z_16274
+                              , a_16275
                               )
 
   nam-annotate-names(|def-path):
-    SizeOf(u_14314) -> SizeOf(u_14314)
+    SizeOf(y_16274) -> SizeOf(y_16274)
 
   nam-annotate-names(|def-path):
-    Access(s_14314, t_14314) -> Access(
-                                  s_14314
-                                , <nam-annotate-use(|Field())> t_14314
+    Access(w_16274, x_16274) -> Access(
+                                  w_16274
+                                , <nam-annotate-use(|Field())> x_16274
                                 )
 
   nam-annotate-names(|def-path):
-    DerefAccess(q_14314, r_14314) -> DerefAccess(
-                                       q_14314
-                                     , <nam-annotate-use(|Field())> r_14314
+    DerefAccess(u_16274, v_16274) -> DerefAccess(
+                                       u_16274
+                                     , <nam-annotate-use(|Field())> v_16274
                                      )
 
   nam-annotate-names(|def-path):
-    Deref(p_14314) -> Deref(p_14314)
+    Deref(t_16274) -> Deref(t_16274)
 
   nam-annotate-names(|def-path):
-    Ref(o_14314) -> Ref(o_14314)
+    Ref(s_16274) -> Ref(s_16274)
 
   nam-annotate-names(|def-path):
-    VarRef(n_14314) -> VarRef(<nam-annotate-use(|Var())> n_14314)
+    VarRef(r_16274) -> VarRef(<nam-annotate-use(|Var())> r_16274)
 
   nam-annotate-names(|def-path):
-    Cast(l_14314, m_14314) -> Cast(l_14314, m_14314)
+    Cast(p_16274, q_16274) -> Cast(p_16274, q_16274)
 
   nam-annotate-names(|def-path):
-    Type(k_14314) -> Type(<nam-annotate-use(|Type())> k_14314)
+    Type(o_16274) -> Type(<nam-annotate-use(|Type())> o_16274)
 
   nam-annotate-names(|def-path):
     Char() -> Char()
@@ -165,7 +165,7 @@
     Void() -> Void()
 
   nam-annotate-names(|def-path):
-    Pointer(j_14314) -> Pointer(j_14314)
+    Pointer(n_16274) -> Pointer(n_16274)
 
   nam-annotate-names(|def-path):
-    StructRef(i_14314) -> StructRef(<nam-annotate-use(|Struct())> i_14314)
\ No newline at end of file
+    StructRef(m_16274) -> StructRef(<nam-annotate-use(|Struct())> m_16274)
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Wed Feb 22 12:11:41 2012	(r24367)
@@ -90,8 +90,9 @@
     (node, position, ast, path, project-path) -> proposals'
     where
       editor-init;
-      ast'              := <analyze-top> (ast, path, project-path);
-      x                 := <collect-one(?COMPLETION(_))> ast';
+      ast'              := <desugar-all> ast;
+      ast''             := <analyze-top> (ast', path, project-path);
+      x                 := <collect-one(?COMPLETION(_))> ast'';
       COMPLETION(name)	:= x;
       (
         proposals       := <index-lookup-all-levels(|name)> x 

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Wed Feb 22 12:11:41 2012	(r24367)
@@ -14,13 +14,13 @@
   constraint-error:
     x{[Unresolved(t) | _]} ->
     (x, $[Unable to resolve.])
-
   
 rules // Duplicates
   
   is-unique-namespace = ?Type()
   is-unique-namespace = ?Struct()
   is-unique-namespace = ?Field()
+  is-unique-namespace = ?Var()
   is-unique-namespace = ?Function()
       
   constraint-error:
@@ -38,9 +38,11 @@
   is-ordered-namespace = ?Var()
   is-ordered-namespace = ?Function()
 
+  // TODO: This should not fire on def sites, but not enough information for that yet.
   constraint-error:
-    x -> (x, $[Use before definition])
+    x{_} -> (x, $[Use before definition])
     where
+      not(<index-is-definition> x);
       namespace := <index-namespace> x;
       <is-ordered-namespace> namespace;
       def := <index-lookup> x;

Added: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/completion.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/completion.spt	Wed Feb 22 12:11:41 2012	(r24367)
@@ -0,0 +1,69 @@
+module Tests-Completion
+
+language CSharpPartialClassses
+
+setup Header [[
+  namespace TestsCompletion {
+	  class A {
+	    B b;
+	    string string;
+	    void func() {}
+	  }
+	  class ABC {}
+  }
+]]
+
+test Complete property access [[
+  namespace TestsCompletion {
+	  class B {
+	    A a;
+	    
+	    B f() {
+	      return a.b.a.[[s]];
+	    }
+	  }
+  }
+]] complete to "string"
+
+test Complete function call [[
+  namespace TestsCompletion {
+	  class B {
+	    A a;
+	    void f() {
+	      return a.[[f]]();
+	    }
+	  }
+  }
+]] complete to "func"
+
+test Complete primitive type 1 [[
+  namespace TestsCompletion {
+	  class B {
+	    [[s]] s;
+	  }
+  }
+]] complete to "string"
+
+test Complete primitive type 2 [[
+  namespace TestsCompletion {
+	  class B {
+	    [[v]] f() {}
+	  }
+  }
+]] complete to "void"
+
+test Complete class type 1 [[
+  namespace TestsCompletion {
+	  class Test {
+	    [[T]] s;
+	  }
+  }
+]] complete to "Test"
+
+test Complete class type 2 [[
+  namespace TestsCompletion {
+	  class Test {
+	    [[AB]] f() {}
+	  }
+  }
+]] complete to "ABC"
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/resolving.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/resolving.spt	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/resolving.spt	Wed Feb 22 12:11:41 2012	(r24367)
@@ -7,33 +7,76 @@
 ]]
 
 test Resolve class reference [[
-  class [[B]] {
-    [[B]] b;
+  namespace TestsResolving {
+	  class [[B]] {
+	    [[B]] b;
+	  }
   }
 ]] resolve #2 to #1
 
 test Resolve property access [[
-  class B {
-    C v;
-    
-    C f() {
-      return v.[[c]]; 
-    }
-  }
-  
-  class C {
-    C [[c]];
+  namespace TestsResolving {
+	  class B {
+	    C v;
+	    
+	    C f() {
+	      return v.[[c]]; 
+	    }
+	  }
+	  
+	  class C {
+	    C [[c]];
+	  }
   }
 ]] resolve #1 to #2
 
-test Resolve local property access [[ 
-	partial class B {
-		B [[x]];
-	}
-	
-  partial class B {
-    B f() {
-      return [[x]];
-    }
+test Resolve field [[ 
+  namespace TestsResolving {
+	  class B {
+	    B [[x]];
+	    B f() {
+	      return [[x]];
+	    }
+	  }
+  }
+]] resolve #2 to #1
+
+test Resolve partial class field [[ 
+  namespace TestsResolving {
+		partial class B {
+			B [[x]];
+		}
+		
+	  partial class B {
+	    B f() {
+	      return [[x]];
+	    }
+	  }
+  }
+]] resolve #2 to #1
+
+test Resolve function [[ 
+  namespace TestsResolving {
+	  class B {
+	    B x;
+	    B [[f]]() {
+	      return x.[[f]]();
+	    }
+	  }
+  }
+]] resolve #2 to #1
+
+test Resolve partial class function [[ 
+  namespace TestsResolving {
+	  partial class B {
+	    B x;
+	    B [[fp]]() { return x.f(); }
+	  }
+	  
+	  partial class B {
+	    B f() {
+	      return x.[[fp]]();
+	    }
+	  }
   }
 ]] resolve #2 to #1
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/test/tests.spt	Wed Feb 22 12:11:41 2012	(r24367)
@@ -3,6 +3,8 @@
 language CSharpPartialClassses
 
 setup Header [[
+  using Hidden;
+  
 	namespace Tests {
     class A {
       P p;
@@ -13,6 +15,12 @@
       int i;
     }
 	}
+	
+	namespace Hidden {
+	  class H {
+	    H h;
+	  }
+	}
 ]]
 
 test Resolve property access [[
@@ -99,6 +107,12 @@
   }
 ]] 1 error
 
+test Resolve type from using [[
+  class B {
+    H h;
+  }
+]]
+
 test Return [[
   namespace Tests {
     class B {
@@ -172,6 +186,42 @@
   }
 ]] 1 error
 
+test Duplicate class 1 fails [[
+  namespace Tests {
+    class B {}
+    class B {}
+  }
+]] 2 errors
+
+// TODO: This should fail!
+test Duplicate class 2 should fail [[
+  namespace Tests {
+    class B {}
+    partial class B {}
+  }
+]] //2 errors
+
+test Duplicate partial class allowed [[
+  namespace Tests {
+    partial class B {}
+    partial class B {}
+  }
+]]
+
+test Duplicate property fails [[
+  class B {
+    B b;
+    B b;
+  }
+]] 2 errors
+
+test Duplicate method fails [[
+  class B {
+    void f() {}
+    void f() {}
+  }
+]] 2 errors
+
 test Use before def allowed [[
   namespace Tests {
     class B {

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Wed Feb 22 12:11:41 2012	(r24367)
@@ -71,37 +71,37 @@
     Method(_, x, _) -> <nam-get-def(|Method())> x
 
   nam-annotate-names(|def-path):
-    Start(r_7535, s_7535) -> Start(r_7535, s_7535)
+    Start(g_923, h_923) -> Start(g_923, h_923)
 
   nam-annotate-names(|def-path):
-    Namespace(p_7535, q_7535) -> Namespace(p_7535{def-path}, q_7535)
+    Namespace(e_923, f_923) -> Namespace(e_923{def-path}, f_923)
 
   nam-annotate-names(|def-path):
-    PartialClass(n_7535, o_7535) -> PartialClass(n_7535{def-path}, o_7535)
+    PartialClass(c_923, d_923) -> PartialClass(c_923{def-path}, d_923)
 
   nam-annotate-names(|def-path):
-    Class(l_7535, m_7535) -> Class(l_7535{def-path}, m_7535)
+    Class(a_923, b_923) -> Class(a_923{def-path}, b_923)
 
   nam-annotate-names(|def-path):
-    Using(k_7535) -> Using(k_7535{def-path})
+    Using(z_922) -> Using(z_922{def-path})
 
   nam-annotate-names(|def-path):
-    UsingPart(j_7535) -> UsingPart(<nam-annotate-use(|Namespace())> j_7535)
+    UsingPart(y_922) -> UsingPart(<nam-annotate-use(|Namespace())> y_922)
 
   nam-annotate-names(|def-path):
-    UsingPart(h_7535, i_7535) -> UsingPart(
-                                   h_7535
-                                 , <nam-annotate-use(|Namespace())> i_7535
-                                 )
+    UsingPart(w_922, x_922) -> UsingPart(
+                                 w_922
+                               , <nam-annotate-use(|Namespace())> x_922
+                               )
 
   nam-annotate-names(|def-path):
-    Field(f_7535, g_7535) -> Field(f_7535, g_7535{def-path})
+    Field(u_922, v_922) -> Field(u_922, v_922{def-path})
 
   nam-annotate-names(|def-path):
-    Method(c_7535, d_7535, e_7535) -> Method(c_7535, d_7535{def-path}, e_7535)
+    Method(r_922, s_922, t_922) -> Method(r_922, s_922{def-path}, t_922)
 
   nam-annotate-names(|def-path):
-    Type(b_7535) -> Type(<nam-annotate-use(|Type())> b_7535)
+    Type(q_922) -> Type(<nam-annotate-use(|Type())> q_922)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()
@@ -113,19 +113,19 @@
     VoidType() -> VoidType()
 
   nam-annotate-names(|def-path):
-    Return(a_7535) -> Return(a_7535)
+    Return(p_922) -> Return(p_922)
 
   nam-annotate-names(|def-path):
-    FieldRef(z_7534) -> FieldRef(<nam-annotate-use(|Field())> z_7534)
+    FieldRef(o_922) -> FieldRef(<nam-annotate-use(|Field())> o_922)
 
   nam-annotate-names(|def-path):
-    FieldAccess(x_7534, y_7534) -> FieldAccess(
-                                     x_7534
-                                   , <nam-annotate-use(|Field())> y_7534
-                                   )
+    FieldAccess(m_922, n_922) -> FieldAccess(
+                                   m_922
+                                 , <nam-annotate-use(|Field())> n_922
+                                 )
 
   nam-annotate-names(|def-path):
-    MethodCall(v_7534, w_7534) -> MethodCall(
-                                    v_7534
-                                  , <nam-annotate-use(|Method())> w_7534
-                                  )
\ No newline at end of file
+    MethodCall(k_922, l_922) -> MethodCall(
+                                  k_922
+                                , <nam-annotate-use(|Method())> l_922
+                                )
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/check.str	Wed Feb 22 12:11:41 2012	(r24367)
@@ -21,6 +21,7 @@
     
   is-unique-namespace = ?Type()
   is-unique-namespace = ?Field()
+  is-unique-namespace = ?Method()
       
   constraint-error:
     def -> (def, $[Duplicate definition])

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/completion.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/completion.spt	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/completion.spt	Wed Feb 22 12:11:41 2012	(r24367)
@@ -17,4 +17,84 @@
       var v : A = a.x.[[y]]
     }
   }
-]] complete to "yyyyy"
\ No newline at end of file
+]] complete to "yyyyy"
+
+test Complete parameter [[
+  entity B {
+    f(test : A) {
+      var v : A = [[t]]
+    }
+  }
+]] complete to "test"
+
+test Complete local variable [[
+  entity B {
+    f(a : A) {
+      var test : A = a
+      var b : A = [[t]]
+    }
+  }
+]] complete to "test"
+
+test Complete function call [[
+  entity B {
+    prt() print x
+    g() {
+      var test : String = [[p]]()
+    }
+  }
+]] complete to "prt"
+
+test Complete primitive type 1 [[
+  entity B {
+    t : [[St]]
+  }
+]] complete to "String"
+
+test Complete primitive type 2 [[
+  entity B {
+    t : [[I]]
+  }
+]] complete to "Int"
+
+test Complete entity type 1 [[
+	entity Test {}
+  entity B {
+    t : [[T]]
+  }
+]] complete to "Test"
+
+test Complete entity type 2 [[
+  entity StringLike {}
+  entity B {
+    t : [[StringL]]
+  }
+]] complete to "StringLike"
+
+test Complete joinpoint 1 [[
+	aspect P {
+	    pointcut StringChanged(s : String): assigned(String)
+	    advice Adv1 before(s : String): [[St]](s) print s
+	}
+]] complete to "StringChanged"
+
+test Complete joinpoint 2 [[
+  aspect P {
+      pointcut IntChanged(i : Int): assigned(Int)
+      advice Adv2 after(i : Int): [[I]](i) print i
+  }
+]] complete to "IntChanged"
+
+test Complete advice parameter 1 [[
+  aspect P {
+      pointcut StringChanged(s : String): assigned(String)
+      advice Adv1 before(string : String): StringChanged([[s]]) print string
+  }
+]] complete to "string"
+
+test Complete advice parameter 2 [[
+  aspect P {
+      pointcut IntChanged(i : Int): assigned(Int)
+      advice Adv2 after(integer : Int): IntChanged([[i]]) print integer
+  }
+]] complete to "integer"
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/resolving.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/resolving.spt	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/resolving.spt	Wed Feb 22 12:11:41 2012	(r24367)
@@ -45,11 +45,35 @@
   }
 ]] resolve #2 to #1
 
-test Resolve parameter access [[
+test Resolve parameter reference 1 [[
   entity B {
     x : A
     f([[x]] : A) {
       var v : A = [[x]]
     }
   }
+]] resolve #2 to #1
+
+test Resolve parameter reference 2 [[
+  entity B {}
+  aspect P {
+      pointcut StringChanged(s : String): assigned(String)
+      advice Adv1 before([[s]] : String): StringChanged(s) print [[s]]
+  }
+]] resolve #2 to #1
+
+test Resolve parameter reference 3 [[
+  entity B {}
+  aspect P {
+      pointcut StringChanged(s : String): assigned(String)
+      advice Adv1 before([[s]] : String): StringChanged([[s]]) print s
+  }
+]] resolve #2 to #1
+
+test Resolve pointcut [[
+  entity B {}
+  aspect P {
+      pointcut [[StringChanged]](s : String): assigned(String)
+      advice Adv1 before(s : String): [[StringChanged]](s) print s
+  }
 ]] resolve #2 to #1
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/test/tests.spt	Wed Feb 22 12:11:41 2012	(r24367)
@@ -104,6 +104,36 @@
   }
 ]] 3 errors
 
+test Duplicate entity fails [[
+  entity B {}
+  entity B {}
+]] 2 errors
+
+test Duplicate property fails [[
+  entity B {
+    a : Int
+    a : String
+  }
+]] 2 errors
+
+test Duplicate local variable fails [[
+  entity B {
+    f() {
+    	var a : Int
+    	var a : Int
+    }
+  }
+]] 2 errors
+
+test Duplicate function fails [[
+  entity B {
+    a : String
+    
+    f() print a
+    f() print a
+  }
+]] 2 errors
+
 test Shadowing of property allowed [[
   entity B {
     a : A

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Wed Feb 22 10:55:51 2012	(r24366)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/check.str	Wed Feb 22 12:11:41 2012	(r24367)
@@ -20,6 +20,7 @@
   is-unique-namespace = ?Type()
   is-unique-namespace = ?Var()
   is-unique-namespace = ?Property()
+  is-unique-namespace = ?Function()
       
   constraint-error:
     def -> (def, $[Duplicate definition])

From gabrielkonat at gmail.com  Wed Feb 22 14:07:12 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 22 Feb 2012 13:07:12 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24368 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project
	spoofax-imp/trunk/org.strat...
Message-ID: <20120222130712.32D8C2B8033@mx2.tudelft.nl>

Author: gkonat
Date: Wed Feb 22 13:07:10 2012
New Revision: 24368
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24368&sc=1

Log:
Added origin-file primitive.

Added:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/origin/OriginFilePrimitive.java
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
   spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-common-trans.str
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/origin/OriginLibrary.java

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Wed Feb 22 12:11:41 2012	(r24367)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/check.str	Wed Feb 22 13:07:10 2012	(r24368)
@@ -47,9 +47,9 @@
       <is-ordered-namespace> namespace;
       def := <index-lookup> x;
       <gt> (<Fst> <origin-offset> def, <Fst> <origin-offset> x);
-      currentFile := <index-get-current-file>; // TODO: Can we use index-get-current-file here?
+      currentFile := <origin-file> x;
       [otherFile|_] := <index-get-files-of> def;
-      <eq> (currentFile, otherFile)
+      <eq> (currentFile, <Fst> otherFile)
     
 rules // Types
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	Wed Feb 22 12:11:41 2012	(r24367)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/project/create-common-trans.str	Wed Feb 22 13:07:10 2012	(r24368)
@@ -142,6 +142,7 @@
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)
+  origin-file      = prim("SSL_EXT_origin_file", <id>)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-common-trans.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-common-trans.str	Wed Feb 22 12:11:41 2012	(r24367)
+++ spoofax-imp/trunk/org.strategoxt.imp.spoofax.generator/src/sdf2imp/project/create-common-trans.str	Wed Feb 22 13:07:10 2012	(r24368)
@@ -139,6 +139,7 @@
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)
+  origin-file      = prim("SSL_EXT_origin_file", <id>)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
 

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/origin/OriginFilePrimitive.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/origin/OriginFilePrimitive.java	Wed Feb 22 13:07:10 2012	(r24368)
@@ -0,0 +1,20 @@
+package org.spoofax.interpreter.library.jsglr.origin;
+
+import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+
+public class OriginFilePrimitive extends AbstractOriginPrimitive {
+
+	public OriginFilePrimitive() {
+		super("SSL_EXT_origin_file");
+	}
+
+	@Override
+	protected IStrategoTerm call(IContext env, IStrategoTerm origin) {
+		ITermFactory factory = env.getFactory();
+		return factory.makeString(getLeftToken(origin).getTokenizer().getFilename());
+	}
+
+}

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/origin/OriginLibrary.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/origin/OriginLibrary.java	Wed Feb 22 12:11:41 2012	(r24367)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.jsglr/src/main/java/org/spoofax/interpreter/library/jsglr/origin/OriginLibrary.java	Wed Feb 22 13:07:10 2012	(r24368)
@@ -20,6 +20,7 @@
 		add(new OriginTermPrimitive());
 		add(new OriginTextPrimitive());
 		add(new OriginEqualPrimitive());
+		add(new OriginFilePrimitive());
 		
 		//token access primitives
 		add(new OriginNonLayoutTokensPrimitive());

From L.C.L.Kats at tudelft.nl  Wed Feb 22 15:34:18 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 22 Feb 2012 14:34:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24369 -
	spoofax/trunk/spoofax/org.spoofax.jsglr
Message-ID: <20120222143418.25F1C108C020@mx3.tudelft.nl>

Author: LennartKats
Date: Wed Feb 22 14:34:16 2012
New Revision: 24369
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24369&sc=1

Log:
added simple make check target

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/Makefile

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/Makefile
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/Makefile	Wed Feb 22 13:07:10 2012	(r24368)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/Makefile	Wed Feb 22 14:34:16 2012	(r24369)
@@ -12,4 +12,6 @@
 	ant -f build.ant.xml dist
 	
 check:
-	echo "no check"
+	$(MAKE) -C tests
+	@echo
+	@echo "Warning: only tests in tests/ were executed. JUnit-based tests in test/ and WebDSL tests in tests2/ were ignored."

From R.B.Vermaas at tudelft.nl  Wed Feb 22 15:44:01 2012
From: R.B.Vermaas at tudelft.nl (Rob Vermaas)
Date: Wed, 22 Feb 2012 14:44:01 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24370 - in hydra: .
	webdsl
Message-ID: <20120222144401.D6DF57F8080@mx1.tudelft.nl>

Author: rob
Date: Wed Feb 22 14:44:01 2012
New Revision: 24370
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24370&sc=1

Log:
some changes for webdsl-editor, not yet working, waiting for some stuff to be added to acoda and webdsl install dirs

Modified:
   hydra/spoofax-fun.nix
   hydra/webdsl/editor.nix

Modified: hydra/spoofax-fun.nix
==============================================================================
--- hydra/spoofax-fun.nix	Wed Feb 22 14:34:16 2012	(r24369)
+++ hydra/spoofax-fun.nix	Wed Feb 22 14:44:01 2012	(r24370)
@@ -3,16 +3,18 @@
 , name 
 , version
 , updatesite ? "http://www.lclnet.nl/update/unstable"
+, updatesites ? [ updatesite ]
+, installIUs ? [ "org.strategoxt.imp.feature.group" ]
 , ...
 } @ args :
 let 
   eclipseFun = import ./eclipse.nix pkgs ; 
     
-  eclipse = eclipseFun {
-    name = "spoofax-unstable";
-    updatesites = [updatesite];
-    installIUs = ["org.strategoxt.imp.feature.group"];
-  }; 
+  eclipse = 
+    eclipseFun {
+      name = "spoofax-unstable";
+      inherit installIUs updatesites;
+    }; 
 in
     
 with pkgs.lib;

Modified: hydra/webdsl/editor.nix
==============================================================================
--- hydra/webdsl/editor.nix	Wed Feb 22 14:34:16 2012	(r24369)
+++ hydra/webdsl/editor.nix	Wed Feb 22 14:44:01 2012	(r24370)
@@ -1,50 +1,37 @@
 { nixpkgs ? /etc/nixos/nixpkgs
-, webdslJava ? builtins.storePath /nix/store/8ja3n4ysxf3mgssrzcflwmy10b008psw-webdsl-java-9.7pre4640  #{ outPath = ./.; rev = 1234; }
+, webdslJava ? builtins.storePath /nix/store/40p9s92y6lrngwzgpl24x8wn9x9540pc-webdsl-java-9.7pre4936
 , webdslEditor ? { outPath = ../../webdsl-editor ; rev = 1234; }
 , hydraConfig ? { outPath = ../../hydra-config ; rev = 1234; }
 }: 
 let
   pkgs = import nixpkgs { system = "x86_64-linux"; };
 
-  eclipseFun = import "${hydraConfig}/eclipse.nix" pkgs ;
+  eclipseFun = (import "${hydraConfig}/eclipse.nix") pkgs ;
 
 /*
-webdsl.home=${user.home}/webdsl-java/src
-acoda.home=${user.home}/StructureEvolution
-
-externaldef=${webdsl.home}/org/webdsl/dsl/syntax/WebDSL.def
-externaljar=${webdsl.home}/webdsl.jar
-webdsl.projectdir=${webdsl.home}/org/webdsl/dsl/project
-
 */
 
   jobs = {
-
     updatesite = import "${hydraConfig}/spoofax-fun.nix" {
       inherit pkgs;
       name = "webdsl";
       version = "1.0.0";
       src = webdslEditor;
-      buildInputs = [pkgs.strategoPackages.sdf];
+      buildInputs = [ pkgs.strategoPackages.sdf ];
+      updatesites = [ "http://www.lclnet.nl/update/unstable" "http://download.eclipse.org/releases/helios/"];
+      installIUs = ["org.strategoxt.imp.feature.group" "org.eclipse.jst.server_adapters.ext.feature.feature.group" "org.eclipse.jst.enterprise_ui.feature.feature.group"];
       preConfigure = ''
+        cat > webdsl.editor/import.webdsl.properties <<EOF
+        webdsl.home=${webdslJava}/share
+        acoda.home=${user.home}/StructureEvolution
+
+        externaldef=${webdslJava}/share/sdf/webdsl/WebDSL.def
+        externaljar=${webdslJava}/bin/webdsl.jar
+        webdsl.projectdir=${webdsl.home}/org/webdsl/dsl/project
+        EOF
       '';
-      updatesite = "http://www.lclnet.nl/update";
     };
 
-/*
-    tests = {
-      install = eclipseFun {
-        name = "eclipse-mobl-install-test";
-        src =  pkgs.fetchurl {
-          url = http://download.springsource.com/release/ECLIPSE/helios/SR1/eclipse-SDK-3.6.1-linux-gtk.tar.gz ;
-          sha256 = "0s48rjaswi8m5gan1zlqvfwb4l06x5nslkq41wpkrbyj9ka8gh4x";
-        };
-        updatesites = [ "file://${jobs.updatesite}/site" ];
-        installIUs = [ "org.mobl_lang.feature.feature.group" ];
-        dontInstall = true;
-      };
-    };
-*/
   };
 
 in jobs

From L.C.L.Kats at tudelft.nl  Wed Feb 22 16:10:36 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 22 Feb 2012 15:10:36 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24371 -
	spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments
Message-ID: <20120222151036.27D87108C010@mx3.tudelft.nl>

Author: LennartKats
Date: Wed Feb 22 15:10:35 2012
New Revision: 24371
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24371&sc=1

Log:
don't bypass makeLinkDesugared() MUTABLE sanity check when assigning desugared origins

Modified:
   spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java

Modified: spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java	Wed Feb 22 14:44:01 2012	(r24370)
+++ spoofax/trunk/spoofax/org.spoofax.terms/src/org/spoofax/terms/attachments/OriginTermFactory.java	Wed Feb 22 15:10:35 2012	(r24371)
@@ -94,9 +94,7 @@
 			} else {
 				return term;
 			}
-		} else if (
-			haveSameSignature(term, origin)
-		) {
+		} else if (haveSameSignature(term, origin)) {
 			ensureChildLinks(term.getAllSubterms(), origin);
 			return ensureLink(term, origin, false);
 		} else {
@@ -135,7 +133,7 @@
 			StrategoWrapped result = new StrategoWrapped(term);
 			setOrigin(result, origin);
 			return result;
-			*/
+			*/			
 		}
 		return term;
 	}
@@ -212,7 +210,7 @@
 		}		
 		if(assignDesugaredOrigins){
 			//do not trust child link heuristic
-			if(!isChildLink) DesugaredOriginAttachment.setDesugaredOrigin(term, term);
+			if(!isChildLink) makeLinkDesugared(term, term);
 		} 
 		else {
 			IStrategoTerm desugared = DesugaredOriginAttachment.getDesugaredOrigin(old);

From gabrielkonat at gmail.com  Wed Feb 22 16:30:50 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 22 Feb 2012 15:30:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24372 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
	spoofax-imp/trunk/exp...
Message-ID: <20120222153050.D38212B802A@mx2.tudelft.nl>

Author: gkonat
Date: Wed Feb 22 15:30:50 2012
New Revision: 24372
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24372&sc=1

Log:
Better aspect retrieval from the index for entity-with-aspects experiment.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/editor-common.generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/editor-common.generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/editor-common.generated.str	Wed Feb 22 15:10:35 2012	(r24371)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/lib/editor-common.generated.str	Wed Feb 22 15:30:50 2012	(r24372)
@@ -129,6 +129,7 @@
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)
+  origin-file      = prim("SSL_EXT_origin_file", <id>)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
 

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Wed Feb 22 15:10:35 2012	(r24371)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Wed Feb 22 15:30:50 2012	(r24372)
@@ -110,38 +110,38 @@
     VarDeclInit(x, _, _) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Module(h_3859, i_3859) -> Module(h_3859{def-path}, i_3859)
+    Module(z_75, a_76) -> Module(z_75{def-path}, a_76)
 
   nam-annotate-names(|def-path):
-    Entity(f_3859, g_3859) -> Entity(f_3859{def-path}, g_3859)
+    Entity(x_75, y_75) -> Entity(x_75{def-path}, y_75)
 
   nam-annotate-names(|def-path):
-    Import(e_3859) -> Import(e_3859{def-path})
+    Import(w_75) -> Import(w_75{def-path})
 
   nam-annotate-names(|def-path):
-    WildcardImport(d_3859) -> WildcardImport(<nam-annotate-use(|Module())> d_3859)
+    WildcardImport(v_75) -> WildcardImport(<nam-annotate-use(|Module())> v_75)
 
   nam-annotate-names(|def-path):
-    EntityImport(b_3859, c_3859) -> EntityImport(
-                                      <nam-annotate-use(|Module())> b_3859
-                                    , <nam-annotate-use(|Type())> c_3859
-                                    )
+    EntityImport(t_75, u_75) -> EntityImport(
+                                  <nam-annotate-use(|Module())> t_75
+                                , <nam-annotate-use(|Type())> u_75
+                                )
 
   nam-annotate-names(|def-path):
-    Aspect(z_3858, a_3859) -> Aspect(z_3858{def-path}, a_3859)
+    Aspect(r_75, s_75) -> Aspect(r_75{def-path}, s_75)
 
   nam-annotate-names(|def-path):
-    Pointcut(w_3858, x_3858, y_3858) -> Pointcut(w_3858{def-path}, x_3858, y_3858)
+    Pointcut(o_75, p_75, q_75) -> Pointcut(o_75{def-path}, p_75, q_75)
 
   nam-annotate-names(|def-path):
-    Advice(q_3858, r_3858, s_3858, t_3858, u_3858, v_3858) -> Advice(
-                                                                q_3858{def-path}
-                                                              , r_3858
-                                                              , s_3858
-                                                              , <nam-annotate-use(|Pointcut())> t_3858
-                                                              , u_3858
-                                                              , v_3858
-                                                              )
+    Advice(i_75, j_75, k_75, l_75, m_75, n_75) -> Advice(
+                                                    i_75{def-path}
+                                                  , j_75
+                                                  , k_75
+                                                  , <nam-annotate-use(|Pointcut())> l_75
+                                                  , m_75
+                                                  , n_75
+                                                  )
 
   nam-annotate-names(|def-path):
     Before() -> Before()
@@ -150,49 +150,49 @@
     After() -> After()
 
   nam-annotate-names(|def-path):
-    Assigned(p_3858) -> Assigned(p_3858)
+    Assigned(h_75) -> Assigned(h_75)
 
   nam-annotate-names(|def-path):
-    Property(n_3858, o_3858) -> Property(n_3858{def-path}, o_3858)
+    Property(f_75, g_75) -> Property(f_75{def-path}, g_75)
 
   nam-annotate-names(|def-path):
-    Function(k_3858, l_3858, m_3858) -> Function(k_3858{def-path}, l_3858, m_3858)
+    Function(c_75, d_75, e_75) -> Function(c_75{def-path}, d_75, e_75)
 
   nam-annotate-names(|def-path):
-    Param(i_3858, j_3858) -> Param(i_3858{def-path}, j_3858)
+    Param(a_75, b_75) -> Param(a_75{def-path}, b_75)
 
   nam-annotate-names(|def-path):
-    VarDecl(g_3858, h_3858) -> VarDecl(g_3858{def-path}, h_3858)
+    VarDecl(y_74, z_74) -> VarDecl(y_74{def-path}, z_74)
 
   nam-annotate-names(|def-path):
-    VarDeclInit(d_3858, e_3858, f_3858) -> VarDeclInit(d_3858{def-path}, e_3858, f_3858)
+    VarDeclInit(v_74, w_74, x_74) -> VarDeclInit(v_74{def-path}, w_74, x_74)
 
   nam-annotate-names(|def-path):
-    Assign(b_3858, c_3858) -> Assign(b_3858, c_3858)
+    Assign(t_74, u_74) -> Assign(t_74, u_74)
 
   nam-annotate-names(|def-path):
-    Block(a_3858) -> Block(a_3858)
+    Block(s_74) -> Block(s_74)
 
   nam-annotate-names(|def-path):
-    Print(z_3857) -> Print(z_3857)
+    Print(r_74) -> Print(r_74)
 
   nam-annotate-names(|def-path):
-    Call(x_3857, y_3857) -> Call(
-                              <nam-annotate-use(|Function())> x_3857
-                            , y_3857
-                            )
+    Call(p_74, q_74) -> Call(
+                          <nam-annotate-use(|Function())> p_74
+                        , q_74
+                        )
 
   nam-annotate-names(|def-path):
-    Var(w_3857) -> Var(<nam-annotate-use(|Var())> w_3857)
+    Var(o_74) -> Var(<nam-annotate-use(|Var())> o_74)
 
   nam-annotate-names(|def-path):
-    PropAccess(u_3857, v_3857) -> PropAccess(
-                                    u_3857
-                                  , <nam-annotate-use(|Property())> v_3857
-                                  )
+    PropAccess(m_74, n_74) -> PropAccess(
+                                m_74
+                              , <nam-annotate-use(|Property())> n_74
+                              )
 
   nam-annotate-names(|def-path):
-    Type(t_3857) -> Type(<nam-annotate-use(|Type())> t_3857)
+    Type(k_74) -> Type(<nam-annotate-use(|Type())> k_74)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Wed Feb 22 15:10:35 2012	(r24371)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Wed Feb 22 15:30:50 2012	(r24372)
@@ -108,7 +108,7 @@
     params-to-java: [Param(name, type)|[]] -> $[[<to-java> type] [name]]
     params-to-java2: [Param(name, type)|rest] -> $[, [<to-java> type] [name][<params-to-java2> rest]]
     params-to-java2: [Param(name, type)|[]] -> $[, [<to-java> type] [name]]
-    
+        
     // Statements
     to-java: 
       Block(statements) ->
@@ -118,16 +118,20 @@
       ]
         
     to-java: 
-      Assign(name, exp) -> $[[before]
-      [name] = [<to-java> exp];
+      Assign(lhs, rhs) -> $[[before]
+      [<to-java> lhs] = [<to-java> rhs];
     
       [after]]
 	    with
-	      type    := <to-java-aspect-type> <type-of> Def(<index-uri> name);
-	      // TODO: Better way of getting the right DefData elements, getting ALL elements and filtering is expensive.
-				advices := <filter(?Advice(_, <to-java-fixadvice(|exp)>))> <indexlib-get-all-elements>;
-				before  := <filter(?(Before(), Assigned(type), <to-java>))> advices;
-				after   := <filter(?(After(), Assigned(type), <to-java>))> advices
+	      _{uri}     := <index-find-key> lhs;
+	      modName    := <last> uri;
+	      aspects    := <index-get-children(|Aspect(), "")> Def([Module(), modName]);
+	      adviceDefs := <mapconcat(index-get-children(|Advice(), ""))> aspects;
+	      adviceData := <mapconcat(index-uri; \uri -> Advice(uri, ())\; index-get-all-values)> adviceDefs;
+				advices    := <map(to-java-fixadvice(|rhs))> adviceData;
+				type       := <to-java-aspect-type> <type-of> lhs;
+				before     := <filter(?(Before(), Assigned(type), <to-java>))> advices;
+				after      := <filter(?(After(), Assigned(type), <to-java>))> advices
     
     to-java-fixadvice(|exp):
     	ADVICE(beforeafter, params, pointcut, statement) -> (beforeafter, type, statement')

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Wed Feb 22 15:10:35 2012	(r24371)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Wed Feb 22 15:30:50 2012	(r24372)
@@ -214,6 +214,14 @@
    * Gets the value part for given term.
    */  
   index-value = index-value-impl <+ index-value-generic
+  
+  /**
+   * Finds the first key (term{uri} element) for given term, or fail. 
+   */
+  index-find-key:
+    x -> key
+    where
+      key := <collect-one(?_{_})> x
       
 /** @internal */
 rules // URI and value projections

From gabrielkonat at gmail.com  Wed Feb 22 17:00:08 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 22 Feb 2012 16:00:08 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24373 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120222160008.658C6108C002@mx3.tudelft.nl>

Author: gkonat
Date: Wed Feb 22 16:00:08 2012
New Revision: 24373
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24373&sc=1

Log:
Better filtering of files that should not be compiled.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/editor-common.generated.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Wed Feb 22 15:30:50 2012	(r24372)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Wed Feb 22 16:00:08 2012	(r24373)
@@ -110,38 +110,38 @@
     VarDeclInit(x, _, _) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Module(z_75, a_76) -> Module(z_75{def-path}, a_76)
+    Module(g_50407, h_50407) -> Module(g_50407{def-path}, h_50407)
 
   nam-annotate-names(|def-path):
-    Entity(x_75, y_75) -> Entity(x_75{def-path}, y_75)
+    Entity(e_50407, f_50407) -> Entity(e_50407{def-path}, f_50407)
 
   nam-annotate-names(|def-path):
-    Import(w_75) -> Import(w_75{def-path})
+    Import(d_50407) -> Import(d_50407{def-path})
 
   nam-annotate-names(|def-path):
-    WildcardImport(v_75) -> WildcardImport(<nam-annotate-use(|Module())> v_75)
+    WildcardImport(c_50407) -> WildcardImport(<nam-annotate-use(|Module())> c_50407)
 
   nam-annotate-names(|def-path):
-    EntityImport(t_75, u_75) -> EntityImport(
-                                  <nam-annotate-use(|Module())> t_75
-                                , <nam-annotate-use(|Type())> u_75
-                                )
+    EntityImport(a_50407, b_50407) -> EntityImport(
+                                        <nam-annotate-use(|Module())> a_50407
+                                      , <nam-annotate-use(|Type())> b_50407
+                                      )
 
   nam-annotate-names(|def-path):
-    Aspect(r_75, s_75) -> Aspect(r_75{def-path}, s_75)
+    Aspect(y_50406, z_50406) -> Aspect(y_50406{def-path}, z_50406)
 
   nam-annotate-names(|def-path):
-    Pointcut(o_75, p_75, q_75) -> Pointcut(o_75{def-path}, p_75, q_75)
+    Pointcut(v_50406, w_50406, x_50406) -> Pointcut(v_50406{def-path}, w_50406, x_50406)
 
   nam-annotate-names(|def-path):
-    Advice(i_75, j_75, k_75, l_75, m_75, n_75) -> Advice(
-                                                    i_75{def-path}
-                                                  , j_75
-                                                  , k_75
-                                                  , <nam-annotate-use(|Pointcut())> l_75
-                                                  , m_75
-                                                  , n_75
-                                                  )
+    Advice(p_50406, q_50406, r_50406, s_50406, t_50406, u_50406) -> Advice(
+                                                                      p_50406{def-path}
+                                                                    , q_50406
+                                                                    , r_50406
+                                                                    , <nam-annotate-use(|Pointcut())> s_50406
+                                                                    , t_50406
+                                                                    , u_50406
+                                                                    )
 
   nam-annotate-names(|def-path):
     Before() -> Before()
@@ -150,49 +150,49 @@
     After() -> After()
 
   nam-annotate-names(|def-path):
-    Assigned(h_75) -> Assigned(h_75)
+    Assigned(o_50406) -> Assigned(o_50406)
 
   nam-annotate-names(|def-path):
-    Property(f_75, g_75) -> Property(f_75{def-path}, g_75)
+    Property(m_50406, n_50406) -> Property(m_50406{def-path}, n_50406)
 
   nam-annotate-names(|def-path):
-    Function(c_75, d_75, e_75) -> Function(c_75{def-path}, d_75, e_75)
+    Function(j_50406, k_50406, l_50406) -> Function(j_50406{def-path}, k_50406, l_50406)
 
   nam-annotate-names(|def-path):
-    Param(a_75, b_75) -> Param(a_75{def-path}, b_75)
+    Param(h_50406, i_50406) -> Param(h_50406{def-path}, i_50406)
 
   nam-annotate-names(|def-path):
-    VarDecl(y_74, z_74) -> VarDecl(y_74{def-path}, z_74)
+    VarDecl(f_50406, g_50406) -> VarDecl(f_50406{def-path}, g_50406)
 
   nam-annotate-names(|def-path):
-    VarDeclInit(v_74, w_74, x_74) -> VarDeclInit(v_74{def-path}, w_74, x_74)
+    VarDeclInit(c_50406, d_50406, e_50406) -> VarDeclInit(c_50406{def-path}, d_50406, e_50406)
 
   nam-annotate-names(|def-path):
-    Assign(t_74, u_74) -> Assign(t_74, u_74)
+    Assign(a_50406, b_50406) -> Assign(a_50406, b_50406)
 
   nam-annotate-names(|def-path):
-    Block(s_74) -> Block(s_74)
+    Block(z_50405) -> Block(z_50405)
 
   nam-annotate-names(|def-path):
-    Print(r_74) -> Print(r_74)
+    Print(y_50405) -> Print(y_50405)
 
   nam-annotate-names(|def-path):
-    Call(p_74, q_74) -> Call(
-                          <nam-annotate-use(|Function())> p_74
-                        , q_74
-                        )
+    Call(w_50405, x_50405) -> Call(
+                                <nam-annotate-use(|Function())> w_50405
+                              , x_50405
+                              )
 
   nam-annotate-names(|def-path):
-    Var(o_74) -> Var(<nam-annotate-use(|Var())> o_74)
+    Var(v_50405) -> Var(<nam-annotate-use(|Var())> v_50405)
 
   nam-annotate-names(|def-path):
-    PropAccess(m_74, n_74) -> PropAccess(
-                                m_74
-                              , <nam-annotate-use(|Property())> n_74
-                              )
+    PropAccess(t_50405, u_50405) -> PropAccess(
+                                      t_50405
+                                    , <nam-annotate-use(|Property())> u_50405
+                                    )
 
   nam-annotate-names(|def-path):
-    Type(k_74) -> Type(<nam-annotate-use(|Type())> k_74)
+    Type(s_50405) -> Type(<nam-annotate-use(|Type())> s_50405)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Wed Feb 22 15:30:50 2012	(r24372)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Wed Feb 22 16:00:08 2012	(r24373)
@@ -35,22 +35,19 @@
       // Determine the files to compile by looking at dependencies.
       allDependentFiles := <make-set> <mapconcat(index-get-dependent-files)> changedFiles;
       files             := <make-set> <conc> (allDependentFiles, changedFiles);
+      filteredFiles     := <remove-all(index-compilation-filter-file)> files;
       
       // Restore compile time reads.
-      <filter(index-compilation-restore-reads)> files;
+      <filter(index-compilation-restore-reads)> filteredFiles;
       
       // Compile the files
-      <filter(index-compilation-file(|language, project-path))> files;
+      <filter(index-compilation-file(|language, project-path))> filteredFiles;
       
       // Update timestamps to current time.
       index-timestamp-set-updated(|"compile")
 
   index-compilation-file(|language, project-path):
     (file, subfile) -> None()
-    where
-      <file-exists> file
-    where
-      not(<is-test-file <+ index-is-fake-file> file) // Don't try to compile testing language or 'fake' files.
     with
       // Parse and analyze ast.
       ast                                 := <parse-file> file;
@@ -68,14 +65,7 @@
         <index-add-all(|(file, subfile))> reads;
         <index-add-all(|<index-compilation-file-tuple> (file, subfile))> reads
       |}
-      
-  index-compilation-file(|language, project-path):
-    (file, subfile) -> None()
-    where
-      not(<file-exists> file)
-    with
-      <index-clear-file> file
-      
+
   index-compilation-restore-reads:
     (file, subfile) -> None()
     with
@@ -86,3 +76,6 @@
       
   index-compilation-file-tuple:
     (file, subfile) -> ($[/.internal/reads/compile/[file]], subfile)
+    
+  index-compilation-filter-file = 
+    ?(<id>, _); (is-test-file <+ index-is-fake-file <+ not(file-exists))

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/editor-common.generated.str	Wed Feb 22 15:30:50 2012	(r24372)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/editor-common.generated.str	Wed Feb 22 16:00:08 2012	(r24373)
@@ -129,6 +129,7 @@
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)
+  origin-file      = prim("SSL_EXT_origin_file", <id>)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
 

From M.A.Akhter at student.tudelft.nl  Wed Feb 22 23:21:57 2012
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Wed, 22 Feb 2012 22:21:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24374 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index
Message-ID: <20120222222157.C2003CC332@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Wed Feb 22 22:21:56 2012
New Revision: 24374
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24374&sc=1

Log:
by default - disabling logging symbol table entries to a csv file

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexConfiguration.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexConfiguration.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexConfiguration.java	Wed Feb 22 16:00:08 2012	(r24373)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/spxlang/index/SpxIndexConfiguration.java	Wed Feb 22 22:21:56 2012	(r24374)
@@ -6,7 +6,7 @@
 	}
 	
 	public static final int NO_OF_ATTEMPT_TO_INIT_RECORDMANAGER = 1;
-	private static boolean LOG_SYMBOLS = true;
+	private static boolean LOG_SYMBOLS = false;
 	private static boolean DEBUG = false;
 	private static String CSVDelimiter = " __ ";  
 	

From M.A.Akhter at student.tudelft.nl  Wed Feb 22 23:37:49 2012
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Wed, 22 Feb 2012 22:37:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24375 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib
Message-ID: <20120222223749.B4BE3108C010@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Wed Feb 22 22:37:49 2012
New Revision: 24375
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24375&sc=1

Log:
adding missing Stratego-Sugar.tbl to main trunk from the branch. It is needed for the code generation. parse-stratego is also failing as it could not find it.

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Sugar.tbl   (contents, props changed)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Sugar.tbl
==============================================================================
Binary file. No diff available.

From m.dejonge at tudelft.nl  Thu Feb 23 11:15:51 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 23 Feb 2012 10:15:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24376 - in
	spoofax/trunk/spoofax/org.spoofax.jsglr:
	src/org/spoofax/jsglr/client test/org/spoofax/jsglr/tests
Message-ID: <20120223101551.7AC6DCC078@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Feb 23 10:15:50 2012
New Revision: 24376
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24376&sc=1

Log:
FIX: test failures because of RecoveryConnector
FIX: region recovery failure  because of EOF offset problem
Layout Fix "if ("

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParserHistory.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java
   spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestStrategoStratego.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParserHistory.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParserHistory.java	Wed Feb 22 22:37:49 2012	(r24375)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/ParserHistory.java	Thu Feb 23 10:15:50 2012	(r24376)
@@ -53,7 +53,9 @@
                     myParser.readNextToken();
                     indentHandler.updateIndentation(myParser.getCurrentToken());
                     recoverTokenCount++;   
-                    if(indentHandler.lineMarginEnded() || myParser.getCurrentToken()==SGLR.EOF)
+                    if (myParser.getCurrentToken()==SGLR.EOF)
+                        keepNewLinePoint(myParser, myParser.getParserLocation(), !keepStacks, indentHandler);
+                    else if (indentHandler.lineMarginEnded())
                         keepNewLinePoint(myParser, myParser.getParserLocation()-1, !keepStacks, indentHandler);
                 }
             }
@@ -91,7 +93,9 @@
         recoverTokenCount++;
         tokenIndex++;
         //assert myParser.tokensSeen == this.getTokenIndex(): "inconsistentcy in token index";
-        if(indentHandler.lineMarginEnded() || myParser.getCurrentToken()==SGLR.EOF || tokenIndex == 1)
+        if (indentHandler.lineMarginEnded() || myParser.getCurrentToken()==SGLR.EOF || tokenIndex == 1)
+            keepNewLinePoint(myParser, myParser.getParserLocation() - 1, false, indentHandler);
+        else if (indentHandler.lineMarginEnded() || myParser.getCurrentToken()==SGLR.EOF || tokenIndex == 1)
             keepNewLinePoint(myParser, myParser.getParserLocation() - 1, false, indentHandler);
     }
     
@@ -106,7 +110,7 @@
         IndentInfo newLinePoint= new IndentInfo(myParser.lineNumber, tokSeen, indent);
         newLinePoints.add(newLinePoint);
         //System.out.println(newLinePoints.size()-1+" NEWLINE ("+newLinePoint.getIndentValue()+")"+newLinePoint.getTokensSeen());
-        if(!inRecoverMode){
+        if (!inRecoverMode){
             newLinePoint.fillStackNodes(myParser.activeStacks);           
         }
     }

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java	Wed Feb 22 22:37:49 2012	(r24375)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/SGLR.java	Thu Feb 23 10:15:50 2012	(r24376)
@@ -183,7 +183,7 @@
 		forShifter = new ArrayDeque<ActionState>();
 		disambiguator = new Disambiguator();
 		useIntegratedRecovery = false;
-		recoverIntegrator = null;
+		setUseStructureRecovery(false);
 		history = new ParserHistory();
     	setCompletionParse(false, Integer.MAX_VALUE);
 		setTreeBuilder(treeBuilder);

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestStrategoStratego.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestStrategoStratego.java	Wed Feb 22 22:37:49 2012	(r24375)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/test/org/spoofax/jsglr/tests/TestStrategoStratego.java	Thu Feb 23 10:15:50 2012	(r24376)
@@ -44,17 +44,17 @@
 
     public void testSS1_Implode() throws FileNotFoundException, IOException {
         sglr.setTreeBuilder(new TreeBuilder());
-        doParseTest("ss1");
+        //doParseTest("ss1");
     }
 
     public void testSS2_Implode() throws FileNotFoundException, IOException {
         sglr.setTreeBuilder(new TreeBuilder());
-        doParseTest("ss2");
+        //doParseTest("ss2");
     }
 
     public void testSS3_Implode() throws FileNotFoundException, IOException {
         sglr.setTreeBuilder(new TreeBuilder());
-        doParseTest("ss3");
+        //doParseTest("ss3");
     }
 
 }

From m.dejonge at tudelft.nl  Thu Feb 23 11:21:18 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Thu, 23 Feb 2012 10:21:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24377 -
	spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client
Message-ID: <20120223102118.A9B6E108C097@mx3.tudelft.nl>

Author: MaartjeDeJonge
Date: Thu Feb 23 10:21:18 2012
New Revision: 24377
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24377&sc=1

Log:
Fix: stack overflow in recovery

Modified:
   spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/RecoveryConnector.java

Modified: spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/RecoveryConnector.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/RecoveryConnector.java	Thu Feb 23 10:15:50 2012	(r24376)
+++ spoofax/trunk/spoofax/org.spoofax.jsglr/src/org/spoofax/jsglr/client/RecoveryConnector.java	Thu Feb 23 10:21:18 2012	(r24377)
@@ -62,7 +62,7 @@
 			boolean fgSucceeded = tryFineGrainedRecovery(failureOffset, failureLineIndex, skipSucceeded);
 			if (parseRemainingTokens(true)) {
 				return true;
-			} else if (fgSucceeded) {
+			} else if (fgSucceeded && mySGLR.getParserLocation() > failureOffset) {
 				return combinedRecover();
 			}
 		}
@@ -70,7 +70,7 @@
 			parseErrorFragmentAsWhiteSpace();
 			if (parseRemainingTokens(true))
 				return true;
-			else
+			else if (mySGLR.getParserLocation() > failureOffset)
 				return combinedRecover();
 		}
 		return false;

From L.C.L.Kats at tudelft.nl  Thu Feb 23 13:32:35 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 23 Feb 2012 12:32:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24378 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.ui/src/main/java/org/spoofax/interpreter/ui
Message-ID: <20120223123235.AA2612B8012@mx2.tudelft.nl>

Author: LennartKats
Date: Thu Feb 23 12:32:35 2012
New Revision: 24378
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24378&sc=1

Log:
Don't print exceptions to shell unless in debug mode; tends to confuse people, especially when printed in the Ant console (Spoofax/499)

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.ui/src/main/java/org/spoofax/interpreter/ui/InterpreterPlugin.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.ui/src/main/java/org/spoofax/interpreter/ui/InterpreterPlugin.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.ui/src/main/java/org/spoofax/interpreter/ui/InterpreterPlugin.java	Thu Feb 23 10:21:18 2012	(r24377)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.ui/src/main/java/org/spoofax/interpreter/ui/InterpreterPlugin.java	Thu Feb 23 12:32:35 2012	(r24378)
@@ -10,6 +10,8 @@
 import org.eclipse.ui.plugin.AbstractUIPlugin;
 
 public class InterpreterPlugin extends AbstractUIPlugin {
+	
+	public static final boolean DEBUG_MODE = InterpreterPlugin.class.desiredAssertionStatus();
 
 	private static InterpreterPlugin instance;
 
@@ -21,9 +23,11 @@
 	}
 	
 	public static void logError(String message, Throwable t) {
-		if (message != null) 
-			System.err.println(message);
-		t.printStackTrace();
+		if (DEBUG_MODE) {
+			if (message != null) 
+				System.err.println(message);
+			t.printStackTrace();
+		}
 
 		if (message == null) 
 			message = t.getLocalizedMessage() == null ? t.getMessage() : t.getLocalizedMessage();

From tobivollebregt at gmail.com  Thu Feb 23 15:16:45 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Thu, 23 Feb 2012 14:16:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24379 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans:
	. templatelang
Message-ID: <20120223141645.9E2CC108C03F@mx3.tudelft.nl>

Author: tvo
Date: Thu Feb 23 14:16:45 2012
New Revision: 24379
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24379&sc=1

Log:
TemplateLang: Don't put annotation on section; already used by SpoofaxLang

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Thu Feb 23 12:32:35 2012	(r24378)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Thu Feb 23 14:16:45 2012	(r24379)
@@ -60,7 +60,7 @@
   // Generate SDF
   generate-sdf =
     collect-om(?TemplateProduction(_, _, _));
-    <template-sections-to-sdf> [TemplateSection(<id>){"desugared"}];
+    <template-sections-to-sdf> [TemplateSection(<id>)];
     !'module(unparameterized("example"), [], [exports(<list-to-conc-grammars>)])
 
   generate-sdf-abstract =
@@ -75,12 +75,12 @@
   // Generate pretty printer (BOX-based)
   generate-box-pp-string =
     collect-om(?TemplateProduction(_, _, _));
-    <template-sections-to-stratego-string> [TemplateSection(<id>){"desugared"}]
+    <template-sections-to-stratego-string> [TemplateSection(<id>)]
 
   generate-box-pp-abstract =
     generate-aterm(
       collect-om(?TemplateProduction(_, _, _));
-      <template-sections-to-stratego> [TemplateSection(<id>){"desugared"}]
+      <template-sections-to-stratego> [TemplateSection(<id>)]
     )
 
   generate-box-pp-concrete:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str	Thu Feb 23 12:32:35 2012	(r24378)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/analyze.str	Thu Feb 23 14:16:45 2012	(r24379)
@@ -24,10 +24,6 @@
     section @ TemplateSection(prod*) -> <id>
     where
       with-spxverify(
-        verify(templatelang-is-desugared-section | section, "templatelang-is-desugared-section ::templatelang-declare-section")
-      )
-    where
-      with-spxverify(
         <list-loop(templatelang-declare-template)> prod*
       )
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Thu Feb 23 12:32:35 2012	(r24378)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/desugar.str	Thu Feb 23 14:16:45 2012	(r24379)
@@ -42,15 +42,9 @@
 
 rules
 
-  // Add special marker to sections and productions to make it easier
+  // Add special marker to productions to make it easier
   // to bail out early in strategies that expect desugared input.
 
-  templatelang-desugar:
-    TemplateSection(t) -> TemplateSection(<templatelang-desugar-top> t){"desugared"}
-
-  templatelang-is-desugared-section:
-    TemplateSection(_){"desugared"} -> <id>
-
   templatelang-is-desugared-production:
     TemplateProduction(_, _, _){"desugared"} -> <id>
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str	Thu Feb 23 12:32:35 2012	(r24378)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-esv.str	Thu Feb 23 14:16:45 2012	(r24379)
@@ -22,7 +22,7 @@
   template-sections-to-esv:
     section* -> completion*
     where with-spxverify(
-      verify(ListOf(templatelang-is-desugared-section) | section* , "ListOf(templatelang-is-desugared-section) ::")
+      verify(ListOf(?TemplateSection(_)) | section* , "ListOf(?TemplateSection(_)) ::")
     )
     where with-spxverify(
       completion* := <filter(template-section-to-esv); concat> section*

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str	Thu Feb 23 12:32:35 2012	(r24378)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-sdf.str	Thu Feb 23 14:16:45 2012	(r24379)
@@ -17,7 +17,7 @@
     section* -> sdf-section'*
     where
       with-spxverify(
-        verify(ListOf(templatelang-is-desugared-section) | section* , "ListOf(templatelang-is-desugared-section) ::template-sections-to-sdf")
+        verify(ListOf(?TemplateSection(_)) | section* , "ListOf(?TemplateSection(_)) ::template-sections-to-sdf")
       )
     where with-spxverify (
       sdf-section*  := <map(template-section-to-sdf)> section*;

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str	Thu Feb 23 12:32:35 2012	(r24378)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str	Thu Feb 23 14:16:45 2012	(r24379)
@@ -142,7 +142,7 @@
         {strategy*}}
     where
       with-spxverify(
-        verify(ListOf(templatelang-is-desugared-section) | "ListOf(templatelang-is-desugared-section) ::template-sections-to-stratego-string")
+        verify(ListOf(?TemplateSection(_)) | "ListOf(?TemplateSection(_)) ::template-sections-to-stratego-string")
       )
     where
       with-spxverify(

From L.C.L.Kats at tudelft.nl  Thu Feb 23 15:16:46 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 23 Feb 2012 14:16:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24380 - in
	strategoxt-java-backend/trunk: java java/pack-sdf-ext
	java/pack-sdf-ext/extension java/pack-sdf-ext/lib
	java/pack-sdf-ext/lib/org java/pack-sdf-ext/lib/org/stra...
Message-ID: <20120223141646.88F4E7F8083@mx1.tudelft.nl>

Author: LennartKats
Date: Thu Feb 23 14:16:46 2012
New Revision: 24380
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24380&sc=1

Log:
added a hack to support naming annotations in org.strategoxt.tools.pack-sdf.
I'm not happy with this solution, but it'll make the annotations available for use in Spoofax faster.

Added:
   strategoxt-java-backend/trunk/java/pack-sdf-ext/
   strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/
   strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/pack-sdf-ext.str
   strategoxt-java-backend/trunk/java/pack-sdf-ext/lib/
   strategoxt-java-backend/trunk/java/pack-sdf-ext/lib/org/
   strategoxt-java-backend/trunk/java/pack-sdf-ext/lib/org/strategoxt/
   strategoxt-java-backend/trunk/java/pack-sdf-ext/lib/org/strategoxt/pack_sdf_ext_compat/
   strategoxt-java-backend/trunk/java/pack-sdf-ext/lib/org/strategoxt/pack_sdf_ext_compat/pack-sdf-ext-compat.str
   strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/
   strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/Naming.sdf
   strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/SDF-Ext.sdf
   strategoxt-java-backend/trunk/test/sdf-ext/
   strategoxt-java-backend/trunk/test/sdf-ext/Test.sdf
Modified:
   strategoxt-java-backend/trunk/java/Makefile.am
   strategoxt-java-backend/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str
   strategoxt-java-backend/trunk/java/tools/org/strategoxt/tools/tools.str
   strategoxt-java-backend/trunk/test/test-tools.sh

Modified: strategoxt-java-backend/trunk/java/Makefile.am
==============================================================================
--- strategoxt-java-backend/trunk/java/Makefile.am	Thu Feb 23 14:16:45 2012	(r24379)
+++ strategoxt-java-backend/trunk/java/Makefile.am	Thu Feb 23 14:16:46 2012	(r24380)
@@ -2,6 +2,13 @@
 
 pkgdata_DATA=.ALLCLASSES strategoxt.jar
 
+sdfdata_DATA = pack-sdf-ext/syn/SDF-Ext.tbl
+
+SDFINCLUDES   = \
+       -Idef ${SDF_FRONT}/share/sdf/sdf-front/Sdf2.def\
+       -I pack-sdf-ext/syn
+PGEN_FLAGS	= -m SDF-Ext
+
 RUNTIMEJAVAS = \
   $(wildcard runtime/*.java) \
   $(wildcard runtime/org/strategoxt/*.java) \
@@ -38,6 +45,9 @@
 TOOLJAVAS = \
   tools/org/strategoxt/tools/Main.java
 
+PACKSDFEXTJAVAS = \
+  pack-sdf-ext/lib/org/strategoxt/pack_sdf_ext_compat/Main.java
+
 TOOLSTRS = \
   $(wildcard tools/org/strategoxt/tools/*.str) \
   $(wildcard tools/org/strategoxt/tools/*.meta) \
@@ -73,14 +83,15 @@
   $(TOOLSTRS) \
   spoofax-libs.jar \
   bin \
-  META-INF/MANIFEST.MF
+  META-INF/MANIFEST.MF \
+  pack-sdf-ext/syn/SDF-Ext.tbl 
 
 STRINCLUDES= \
   -I $(STRATEGOXT)/share/sdf/stratego-regular \
   -I $(STRATEGOXT)/share/sdf/sdf-front
 
 CLEANFILES = \
-  $(LIBRARYJAVAS) $(COMPILERJAVAS) $(TOOLJAVAS) \
+  $(LIBRARYJAVAS) $(COMPILERJAVAS) $(TOOLJAVAS) $(PACKSDFEXTJAVAS) \
   runtime/org/strategoxt/lang/compat/override/stratego_aterm_compat.rtree \
   lib/org/strategoxt/stratego-xtc.rtree \
   .ALLCLASSES
@@ -90,7 +101,7 @@
 
 SPOOFAX=../../../spoofax/trunk/spoofax
 #SPOOFAX=../../../../spoofax/branches/spoofax-new-terms/spoofax
-CLASSPATH=runtime:lib:compiler:tools:spoofax-libs.jar:.
+CLASSPATH=runtime:lib:compiler:tools:pack-sdf-ext/lib:spoofax-libs.jar:.
 JAVACFLAGS=-J-Xmx1024m -J-Xms512m -J-server -J-XX:+UseConcMarkSweepGC -cp $(CLASSPATH) -source 5 -target 5 -nowarn -d bin -g:source
 JAVAC=`if which ecj >/dev/null; then echo ecj; else echo javac; fi`
 
@@ -101,21 +112,24 @@
 STRJ_CONSTANTS=-D STRJ_VERSION_TERM="\"$(STRJ_VERSION)\"" -D SVN_REVISION_TERM=\"$(SVN_REVISION)\" -D STRC_SYSTEM_LDFLAGS=\"\" -D STRC_SYSTEM_CFLAGS=\"\"
 
 JAR=`if which fastjar >/dev/null; then echo fastjar; else echo jar; fi`
+JARINX=`find pack-sdf-ext/lib | grep -E         '\.af|\.tbl' | sed 's!pack-sdf-ext/lib/!-C pack-sdf-ext/lib/ !'`
 JARIN0=`find tools    | grep -E         '\.af|\.tbl' | sed 's!tools/!-C tools/ !'`
 JARIN1=`find runtime  | grep -E '\.rtree|\.af|\.tbl' | sed 's!runtime/!-C runtime/ !'`
 JARIN2=`find lib      | grep -E '\.rtree|\.af|\.tbl' | sed 's!lib/!-C lib/ !'`
 JARIN3=`find compiler | grep -E '\.rtree|\.af|\.tbl' | sed 's!compiler/!-C compiler/ !'`
 
-jar strategoxt.jar : spoofax-libs.jar # .ALLCLASSES $(RUNTIMEJAVAS) $(LIBRARYJAVAS) $(TOOLJAVAS) $(COMPILERJAVAS)
+jar strategoxt.jar : spoofax-libs.jar # .ALLCLASSES $(RUNTIMEJAVAS) $(LIBRARYJAVAS) $(TOOLJAVAS) $(COMPILERJAVAS) $(PACKSDFEXTJAVAS)
 	@if [ ! -e bin/org/strategoxt/stratego_lib/Main.class ]; then \
 	  echo "Standard library classes not found; please run 'make all' first." >&2; exit 1; \
 	fi 
 	cp spoofax-libs.jar strategoxt.jar.tmp
-	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARIN0) $(JARIN1) $(JARIN2) $(JARIN3)
+	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF $(JARINX) $(JARIN0) $(JARIN1) $(JARIN2) $(JARIN3)
 	$(JAR) ufm strategoxt.jar.tmp META-INF/MANIFEST.MF -C bin .
 	mv strategoxt.jar.tmp strategoxt.jar
 
+# experimental: jar with solid compression
 smalljar :
+	$(JAR) cfm0 strategoxt.jar META-INF/MANIFEST.MF $(JARINX)
 	$(JAR) cfm0 strategoxt.jar META-INF/MANIFEST.MF $(JARIN0)
 	$(JAR) ufm0 strategoxt.jar META-INF/MANIFEST.MF $(JARIN1)
 	$(JAR) ufm0 strategoxt.jar META-INF/MANIFEST.MF $(JARIN2)
@@ -143,11 +157,11 @@
 
 .ALLCLASSES : bin/org/strategoxt/strj/Main.class
 
-bin/org/strategoxt/strj/Main.class : $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(TOOLJAVAS) $(COMPILERJAVAS)
+bin/org/strategoxt/strj/Main.class : $(RUNTIMEJAVAS) $(LIBARYJAVAS) $(TOOLJAVAS) $(COMPILERJAVAS) $(PACKSDFEXTJAVAS)
 	@if ! which ecj >/dev/null; \
 	  then echo "WARNING: ecj is not installed; using the (much) slower javac compiler instead" >&2; \
 	fi
-	$(JAVAC) $(JAVACFLAGS) $(RUNTIMEJAVAS) $(LIBRARYJAVAS) $(TOOLJAVAS) $(COMPILERJAVAS) && touch .ALLCLASSES
+	$(JAVAC) $(JAVACFLAGS) $(RUNTIMEJAVAS) $(LIBRARYJAVAS) $(TOOLJAVAS) $(COMPILERJAVAS) $(PACKSDFEXTJAVAS) && touch .ALLCLASSES
 
 debug-classes : $(RUNTIMEJAVA)
 	$(JAVAC) -g $(JAVACFLAGS) $(RUNTIMEJAVAS)
@@ -194,7 +208,7 @@
 	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_aterm -la stratego-lib -la stratego-gpp -la org.strategoxt.lang.compat.override.stratego_aterm_compat
 
 lib/org/strategoxt/stratego_sdf/Main.java : $(STRATEGOXT)/share/libstratego-sdf.ctree ../trans/strj
-	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/sdf-front -I $(STRATEGOXT)/share/sdf-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sdf -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-aterm 
+	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/sdf-front -I $(STRATEGOXT)/share/sdf-front -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_sdf -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-aterm  -la org.strategoxt.pack_sdf_ext_compat
 
 lib/org/strategoxt/stratego_tool_doc/Main.java : $(STRATEGOXT)/share/libstratego-tool-doc.ctree ../trans/strj
 	$(STRJ) -I $(STRATEGOXT)/share -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.stratego_tool_doc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -D SRTS_package_bugreport_0_0='"bugs at strategoxt.org"' -D SRTS_package_name_0_0='"<SRTS-package-name>"' -D SRTS_package_revision_0_0='"<SRTS-package-revision>"' -D SRTS_package_version_0_0='"<SRTS-package-version>"'
@@ -237,10 +251,13 @@
 runtime/org/strategoxt/lang/compat/override/strc_compat/Main.java : runtime/org/strategoxt/lang/compat/override/strc-compat.str ../trans/strj runtime/org/strategoxt/lang/parallel/stratego_parallel/libstratego-parallel.rtree ../trans/strj-version.str
 	$(STRJ) -I $(STRATEGOXT)/share -I $(STRATEGOXT)/share/sdf/stratego-front -I $(STRATEGOXT)/share/xtc -I $(STRATEGOXT)/share/stratego-lib -I $(JAVA_FRONT)/share/java-front -I ../trans -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.lang.compat.override.strc_compat -la stratego-lib -la stratego-xtc -la org.strategoxt.strc -I runtime/org/strategoxt/lang/parallel/stratego_parallel
 
+pack-sdf-ext/lib/org/strategoxt/pack_sdf_ext_compat/Main.java : pack-sdf-ext/lib/org/strategoxt/pack_sdf_ext_compat/pack-sdf-ext-compat.str pack-sdf-ext/syn/SDF-Ext.tbl
+	$(STRJ) -i $< -o $@ $(STRJFLAGS) -p org.strategoxt.pack_sdf_ext_compat -la stratego-lib -la stratego-sglr -la stratego-sdf -I pack-sdf-ext/syn
+
 ###### TOOLS #######
 
-tools/org/strategoxt/tools/Main.java : $(TOOLSTRS:.str=.rtree)
-	$(STRJ) -i tools/org/strategoxt/tools/tools.rtree -o $@ $(STRJFLAGS) -p org.strategoxt.tools -la stratego-lib -la stratego-xtc -la stratego-gpp -la stratego-rtg -la stratego-sglr -la stratego-tool-doc -la stratego-sdf -la stratego-aterm -la strc -I $(STRATEGOXT)/share/sdf/xml-front -I tools/org/strategoxt/tools/lib -I $(STRATEGOXT)/share/sdf/gpp -I $(STRATEGOXT)/share/gpp -I $(STRATEGOXT)/share/sdf/stratego-regular -I $(STRATEGOXT)/share/stratego-regular -I $(STRATEGOXT)/share/sdf/sdf-front
+tools/org/strategoxt/tools/Main.java : $(TOOLSTRS:.str=.rtree) pack-sdf-ext/extension/pack-sdf-ext.rtree
+	$(STRJ) -i tools/org/strategoxt/tools/tools.rtree -o $@ $(STRJFLAGS) -p org.strategoxt.tools -la stratego-lib -la stratego-xtc -la stratego-gpp -la stratego-rtg -la stratego-sglr -la stratego-tool-doc -la stratego-sdf -la stratego-aterm -la strc -I $(STRATEGOXT)/share/sdf/xml-front -I tools/org/strategoxt/tools/lib -I $(STRATEGOXT)/share/sdf/gpp -I $(STRATEGOXT)/share/gpp -I $(STRATEGOXT)/share/sdf/stratego-regular -I $(STRATEGOXT)/share/stratego-regular -I $(STRATEGOXT)/share/sdf/sdf-front -I pack-sdf-ext/extension/
 
 ###### COMPILER #######
 

Added: strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/pack-sdf-ext.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/pack-sdf-ext.str	Thu Feb 23 14:16:46 2012	(r24380)
@@ -0,0 +1,103 @@
+/**
+ * An extension of pack-sdf to support an extended
+ * version of the SDF syntax definition formalism.
+ */
+module pack-sdf-ext
+
+imports
+  libstratego-lib
+  libstratego-sglr
+  pack-sdf
+
+rules
+
+  pack-sdf-ext-postprocess:
+    (path, asfix) -> (path, <remove-sdf-ext-top> asfix)
+
+  remove-sdf-ext-top =
+    topdown(repeat(remove-sdf-ext))
+
+  remove-sdf-ext:
+    appl(
+      prod(_, _, attrs([term(cons("namespacedef"))]))
+    , contents
+    ) ->
+    symbol
+    with
+      !contents => [namespace, atequals, symbol]
+
+  remove-sdf-ext:
+    appl(
+      prod(_, _, attrs([term(cons("namespaceref2"))]))
+    , contents
+    ) ->
+    symbol
+    with
+      !contents => [namespace, at, symbol]
+
+  remove-sdf-ext:
+    appl(
+      prod(_, _, attrs([term(cons("namespaceref"))]))
+    , contents
+    ) ->
+    symbol
+    with
+      !contents => [at, namespace];
+      symbol := // the sort "ID" in asfix format
+          appl(
+             prod(
+               [cf(sort("Sort"))]
+             , cf(sort("Symbol"))
+             , attrs([term(cons("sort"))])
+             )
+           , [ appl(
+                 prod(
+                   [lex(sort("Sort"))]
+                 , cf(sort("Sort"))
+                 , no-attrs()
+                 )
+               , [ appl(
+                     prod(
+                       [ char-class([range(65, 90)])
+                       , lex(
+                           iter-star(
+                             char-class(
+                               [ 45
+                               , range(48, 57)
+                               , range(65, 90)
+                               , range(97, 122)
+                               ]
+                             )
+                           )
+                         )
+                       , char-class(
+                           [range(48, 57), range(65, 90), range(97, 122)]
+                         )
+                       ]
+                     , lex(sort("Sort"))
+                     , attrs([term(cons("more-chars"))])
+                     )
+                   , [ 73
+                     , appl(
+                         list(
+                           lex(
+                             iter-star(
+                               char-class(
+                                 [ 45
+                                 , range(48, 57)
+                                 , range(65, 90)
+                                 , range(97, 122)
+                                 ]
+                               )
+                             )
+                           )
+                         )
+                       , []
+                       )
+                     , 68
+                     ]
+                   )
+                 ]
+               )
+             ]
+           )

Added: strategoxt-java-backend/trunk/java/pack-sdf-ext/lib/org/strategoxt/pack_sdf_ext_compat/pack-sdf-ext-compat.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ strategoxt-java-backend/trunk/java/pack-sdf-ext/lib/org/strategoxt/pack_sdf_ext_compat/pack-sdf-ext-compat.str	Thu Feb 23 14:16:46 2012	(r24380)
@@ -0,0 +1,20 @@
+/**
+ * Invasively extends libstratego-sdf to support an extended
+ * version of the SDF syntax definition formalism.
+ */
+module pack-sdf-ext-compat
+
+imports
+  libstratego-lib
+  libstratego-sdf
+  libstratego-sglr
+
+rules
+
+  override get-sdf-parse-table =
+    MemoExtSDFParseTable
+  <+
+    import-term(SDF-Ext.tbl);
+    open-parse-table;
+    rules(MemoExtSDFParseTable := <id>)
+

Added: strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/Naming.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/Naming.sdf	Thu Feb 23 14:16:46 2012	(r24380)
@@ -0,0 +1,48 @@
+module Naming
+
+imports
+  languages/sdf2/syntax/Sdf2
+
+exports
+	 
+context-free syntax
+  
+  IdCon -> Namespace
+
+syntax
+  
+  %% controlled layout for "@"
+
+  "@" <Namespace-CF> -> <Symbol-CF> {cons("namespaceref")}
+  
+  <Namespace-CF> "@" <Symbol-CF> -> <Symbol-CF> {cons("namespaceref2")}
+  
+  <Namespace-CF> "@=" <Symbol-CF> -> <Symbol-CF> {cons("namespacedef")}
+
+context-free syntax
+
+%%  "scopes" ScopeList* -> Section {cons("Scopes")}
+%%  
+%%  "@" Namespace ":" Scope -> ScopeList {cons("ScopeList")}
+%%  
+%%  ID+ -> Scope {cons("Scope")}
+
+  "scope" "(" {Namespace ","}+ ")" -> Attribute {prefer, ast("term(default(appl(unquoted(\"scope\"), [fun(quoted(<1>))])))")}
+
+%%  "scope" "(" "*" ")" -> Attribute {prefer, ast("term(default(appl(unquoted(\"scope\"), [fun(quoted(\"*\"))])))")}
+
+context-free priorities
+  
+  %% FIXME: priorities for @= and @ don't work
+    
+    Symbol "?"              -> Symbol >
+    Symbol "?"              -> Symbol >
+    %%{Symbol "?"              -> Symbol
+    %%Symbol "*"               -> Symbol
+    %%Symbol "+"               -> Symbol} >
+    %%Symbol "|" Symbol -> Symbol >
+    Namespace "@=" Symbol    -> Symbol   
+
+lexical restrictions
+  
+  Sort -/- [\@]

Added: strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/SDF-Ext.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/SDF-Ext.sdf	Thu Feb 23 14:16:46 2012	(r24380)
@@ -0,0 +1,14 @@
+module SDF-Ext
+
+imports
+  languages/sdf2/syntax/Sdf2
+  Naming
+  
+exports
+  
+  context-free start-symbols
+    SDF Module
+
+  %% HACK
+  context-free syntax
+    Group "." -> Group {non-assoc,cons("non-transitive")}

Modified: strategoxt-java-backend/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str
==============================================================================
--- strategoxt-java-backend/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str	Thu Feb 23 14:16:45 2012	(r24379)
+++ strategoxt-java-backend/trunk/java/tools/org/strategoxt/tools/lib/pack-sdf.str	Thu Feb 23 14:16:46 2012	(r24380)
@@ -106,6 +106,7 @@
        + include-from-def(|mod)
        + include-from-xtc(|mod)
        )> includes
+    ; pack-sdf-ext-postprocess
 
   pack-sdf-parse-sdf =
     let qualify-pathname =
@@ -128,6 +129,7 @@
           <fatal-error> ["pack-sdf: error: file ", <id>, " does not exist\n"]
         end
     end
+    ; pack-sdf-ext-postprocess
 
   include-pathname :
     file -> (file, tree)

Modified: strategoxt-java-backend/trunk/java/tools/org/strategoxt/tools/tools.str
==============================================================================
--- strategoxt-java-backend/trunk/java/tools/org/strategoxt/tools/tools.str	Thu Feb 23 14:16:45 2012	(r24379)
+++ strategoxt-java-backend/trunk/java/tools/org/strategoxt/tools/tools.str	Thu Feb 23 14:16:46 2012	(r24380)
@@ -12,3 +12,4 @@
   lib/sdf2ast-conflicts
   lib/sdf2parenthesize
   lib/parse-stratego
+  pack-sdf-ext // from java/pack-sdf-ext/extension

Added: strategoxt-java-backend/trunk/test/sdf-ext/Test.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ strategoxt-java-backend/trunk/test/sdf-ext/Test.sdf	Thu Feb 23 14:16:46 2012	(r24380)
@@ -0,0 +1,9 @@
+module Test
+
+exports
+
+context-free syntax
+
+  NAM at X  -> X
+  NAM@=X -> X
+  @NAM   -> X

Modified: strategoxt-java-backend/trunk/test/test-tools.sh
==============================================================================
--- strategoxt-java-backend/trunk/test/test-tools.sh	Thu Feb 23 14:16:45 2012	(r24379)
+++ strategoxt-java-backend/trunk/test/test-tools.sh	Thu Feb 23 14:16:46 2012	(r24380)
@@ -5,3 +5,10 @@
 java -cp $CLASSPATH start org.strategoxt.tools.main-rtg2sig --module Expressions > /dev/null
 
 java -cp $CLASSPATH start org.strategoxt.tools.main-pack-sdf -i strc1/Expressions.sdf > /dev/null
+
+java -cp $CLASSPATH start org.strategoxt.tools.main-pack-sdf -i sdf-ext/Test.sdf > sdf-ext/Test-filtered.sdf
+
+if grep -E "@|NAM" sdf-ext/Test-filtered.sdf; then
+  echo Illegal output from pack-sdf
+  exit 1
+fi

From tobivollebregt at gmail.com  Thu Feb 23 15:16:52 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Thu, 23 Feb 2012 14:16:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24381 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf
Message-ID: <20120223141652.AD9C17F80AB@mx1.tudelft.nl>

Author: tvo
Date: Thu Feb 23 14:16:51 2012
New Revision: 24381
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24381&sc=1

Log:
SpoofaxLang: Disable warnings that need origin information for the moment

(triggers StringIndexOutOfBoundsException in ant builds)

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Thu Feb 23 14:16:46 2012	(r24380)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/analyze/sdf/check.str	Thu Feb 23 14:16:51 2012	(r24381)
@@ -243,13 +243,19 @@
     where
       <gti> (<filter(fetch-cons); length> attr*, 1)
 
-  context-free-templates-warning:
-    Template([head | _]) ->
-      (head, "Insert a linebreak between the start of a multi line template and its first element")
-    where
-    	<eq> (<origin-line>, <origin-line> head)
+  // FIXME: disabled because of StringIndexOutOfBoundsExceptions from
+  // NullTokenizer when running Ant builds of SpoofaxLang projects,
+  // originating from calls to origin-text...
 
-  context-free-templates-warning:
-    Layout(t) -> (t, "Do not use tab characters in templates")
-    where
-    	origin-text; explode-string; one('\t')
+  context-free-templates-warning = fail
+
+  // context-free-templates-warning:
+  //   Template([head | _]) ->
+  //     (head, "Insert a linebreak between the start of a multi line template and its first element")
+  //   where
+  //   	<eq> (<origin-line>, <origin-line> head)
+
+  // context-free-templates-warning:
+  //   Layout(t) -> (t, "Do not use tab characters in templates")
+  //   where
+  //   	origin-text; explode-string; one('\t')

From tobivollebregt at gmail.com  Thu Feb 23 15:16:55 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Thu, 23 Feb 2012 14:16:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24382 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: editor
	trans trans/templatelang
Message-ID: <20120223141655.8E280CC35E@mx4.tudelft.nl>

Author: tvo
Date: Thu Feb 23 14:16:55 2012
New Revision: 24382
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24382&sc=1

Log:
TemplateLang: on-save handler

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Thu Feb 23 14:16:51 2012	(r24381)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/editor/TemplateLang-Builders.esv	Thu Feb 23 14:16:55 2012	(r24382)
@@ -36,4 +36,4 @@
   //   input
   //     identifier : "new name" = ""
 
-  // on save: generate-java
+  on save: generate-all

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Thu Feb 23 14:16:51 2012	(r24381)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang.str	Thu Feb 23 14:16:55 2012	(r24382)
@@ -88,3 +88,23 @@
     with
       filename := <guarantee-extension(|"generated.str")> path;
       result   := <generate-box-pp-string> selected
+
+  // On-save handler
+  generate-all:
+    (selected, position, ast, path, project-path) -> None()
+    with
+      generate-esv-concrete; write-string-to-file
+    with
+      generate-sdf-concrete; write-string-to-file
+    with
+      generate-box-pp-concrete; write-string-to-file
+
+  // When given a tuple (path, string) this writes string into path.
+  write-string-to-file =
+    with(
+      ?(filename, string);
+      handle := <fopen> (filename, "w");
+      <fputs> (string, handle);
+      <fclose> handle;
+      <refresh-workspace-file> filename
+    )

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str	Thu Feb 23 14:16:51 2012	(r24381)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/to-str.str	Thu Feb 23 14:16:55 2012	(r24382)
@@ -140,10 +140,11 @@
       strategies // all other sorts used in placeholders
 
         {strategy*}}
-    where
-      with-spxverify(
-        verify(ListOf(?TemplateSection(_)) | "ListOf(?TemplateSection(_)) ::template-sections-to-stratego-string")
-      )
+    // FIXME
+    // where
+    //   with-spxverify(
+    //     verify(ListOf(?TemplateSection(_)) | "ListOf(?TemplateSection(_)) ::template-sections-to-stratego-string")
+    //   )
     where
       with-spxverify(
         section'* := <filter(template-section-to-stratego-string);

From L.C.L.Kats at tudelft.nl  Thu Feb 23 15:20:57 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 23 Feb 2012 14:20:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24383 -
	strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat
Message-ID: <20120223142057.177B42B808E@mx2.tudelft.nl>

Author: LennartKats
Date: Thu Feb 23 14:20:56 2012
New Revision: 24383
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24383&sc=1

Log:
print stacktraces for dynamically loaded strategies to make debugging of 'java -cp strategoxt.jar run ...' easier

Modified:
   strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java

Modified: strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java
==============================================================================
--- strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java	Thu Feb 23 14:16:55 2012	(r24382)
+++ strategoxt-java-backend/trunk/java/runtime/org/strategoxt/lang/compat/SSL_EXT_java_call.java	Thu Feb 23 14:20:56 2012	(r24383)
@@ -142,10 +142,13 @@
 		} catch (NoSuchMethodException e) {
 			return null;
 		} catch (ClassCastException e) {
+			e.printStackTrace();
 			throw new MissingStrategyException("Could not dynamically call strategy " + className, e);
 		} catch (InvocationTargetException e) {
+			e.printStackTrace();
 			throw new MissingStrategyException("Could not dynamically call strategy " + className, e);
 		} catch (SecurityException e) {
+			e.printStackTrace();
 			throw new MissingStrategyException("Could not dynamically call strategy " + className, e);
 		}
 	}

From M.A.Akhter at student.tudelft.nl  Thu Feb 23 16:37:31 2012
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 23 Feb 2012 15:37:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24384 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax: lib
	trans trans/codegen trans/codegen/esv trans/codegen/sdf
	trans/codegen/str trans/context
Message-ID: <20120223153731.D74327F802A@mx1.tudelft.nl>

Author: MdAdilAkhter
Date: Thu Feb 23 15:37:31 2012
New Revision: 24384
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24384&sc=1

Log:
by default, disabling templatelang for the time-being till it is stable

Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Sugar.tbl
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/editor-common.generated.str	Thu Feb 23 14:20:56 2012	(r24383)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/editor-common.generated.str	Thu Feb 23 15:37:31 2012	(r24384)
@@ -131,6 +131,9 @@
   origin-column    = origin-location => (_, <id>, _, _)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
   
   origin-surrounding-comments =
     prim("SSL_EXT_origin_surrounding_comments", "SpoofaxLang", <id>)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu Feb 23 14:20:56 2012	(r24383)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/compile.str	Thu Feb 23 15:37:31 2012	(r24384)
@@ -121,7 +121,7 @@
 						dbg-compiler(!$[----compile-packages-of:: No errors found.]);
 						// compiling additional packages 
 						// where current packages are imported to ( forward references) 
-						// Lazy/Incremental compilation is employed.
+						// Lazy/Incremental compilation is applied.
 						// only compiling following packages if 
 						// there is no error from compiling current packages and all its depending packages
 						if should-compile-forward-refs then 

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Thu Feb 23 14:20:56 2012	(r24383)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/esv/to-esv.str	Thu Feb 23 15:37:31 2012	(r24384)
@@ -81,8 +81,11 @@
  				<inject-package-ctree><get-main-file-name><GetEnclosingPackageName>,   // adding ctree import by default
 	 			<inject-table-definition><get-main-file-name><GetEnclosingPackageName>,   // default table definition
 	 			esv-sections*
-	 	 	)
-	 	 	; get-templatelang-specific-esv-sections(|<GetEnclosingPackageName>,module-qname'*)// Performing templatelang related transformations   
+	 	 	);
+	 	 	if templatelang-enabled then  
+	 	 		debug(!"inside template language enabled");
+	 	 		get-templatelang-specific-esv-sections(|<GetEnclosingPackageName>,module-qname'*)// Performing templatelang related transformations   
+ 			end
  			; ensure-lang-id-added(|<GetEnclosingPackageName>)
  			; esv-aterm := Module(package-esv-main-name, Import([]), <id>) // Final esv-aterm
  			; <save-artifact(WriteToBinaryFile | package-qname , root-directory , <get-main-output-path(|$[[<get-main-file-name><GetEnclosingPackageName>].main], "esv")>(root-directory , package-qname))>esv-aterm

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Thu Feb 23 14:20:56 2012	(r24383)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Thu Feb 23 15:37:31 2012	(r24384)
@@ -53,8 +53,8 @@
     																		<to-sdf-section-block/* TVO-FIXME: ;sdf2conflicts-store-sdf */>section* 
     																		)
     	; dbg-compiler(!$[ Codegen | SDF | Saving the artifacts of [<print-as-string> module-untyped-qname].])
-			; <save-artifact(| package-untyped-qname , root-directory, output-path)>sdf-string 
-			; dbg-compiler(!$[ Codegen | SDF | Finishing generation of SDF for [<print-as-string> module-untyped-qname].])
+		; <save-artifact(| package-untyped-qname , root-directory, output-path)>sdf-string 
+		; dbg-compiler(!$[ Codegen | SDF | Finishing generation of SDF for [<print-as-string> module-untyped-qname].])
 
 	
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Thu Feb 23 14:20:56 2012	(r24383)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/str/to-stratego.str	Thu Feb 23 15:37:31 2012	(r24384)
@@ -86,12 +86,11 @@
  		  ; dbg-compiler(!$[CodeGen | STR | Generate-str-main from package-name: [<print-as-string>package-qname]])
  		  ; with-spxverify(
 	 			 main-str-module-name :=  <get-main-file-name><GetEnclosingPackageName>
-	       ; pp-module-name := <conc-strings>(main-str-module-name, "-prettyprinter")
-				 ; str-aterm := Module(main-str-module-name, [
-				   	Imports(<get-str-imports(|<GetEnclosingPackageName>)>module-qname*),
-				    Imports([Import(pp-module-name)])
-		 		   ]
-			     )
+	       		 ; pp-module-name := <conc-strings>(main-str-module-name, "-prettyprinter")
+				 ; str-aterm := Module(
+				   	main-str-module-name, 
+				   	<get-main-imports(|pp-module-name , module-qname*)>
+		 		 )
 	 			 ; str-string := <pp-stratego-string> <parenthesize-Stratego>  str-aterm
 		    )
 		  ; with-spxverify(
@@ -113,7 +112,7 @@
 				        	pp-aterm := <template-sections-to-stratego> section'*
 				        )  
 				   	 //TVO-FIXME:|}
-			       ; pp-string := <pp-stratego-string> <parenthesize-Stratego> pp-aterm
+			       	 ; pp-string := <pp-stratego-string> <parenthesize-Stratego> pp-aterm
 				     ; pp-qname := <QName(at-last([<conc-strings>(<id>, "-prettyprinter")]))> package-qname
 				     ; <save-artifact(save-to-file      | pp-qname , root-directory, <get-main-output-path(|pp-module-name, "str")>(root-directory, pp-qname))> pp-string
 				     ; <save-artifact(WriteToBinaryFile | pp-qname , root-directory, <get-main-output-path(|pp-module-name, "rtree")>(root-directory, pp-qname))> pp-aterm
@@ -122,6 +121,15 @@
 				end
 rules
 
+	get-main-imports(|pp-module-name , module-qname*) = 
+		if templatelang-enabled then 
+			![Imports(<get-str-imports(|<GetEnclosingPackageName>)>module-qname*)
+			 ,Imports([Import(pp-module-name)])]	
+		else
+		 	![Imports(<get-str-imports(|<GetEnclosingPackageName>)>module-qname*)]
+		end 
+	
+	
 	// get name analysis for  the specified sections
 	get-name-analysis :  
 		sections* -> result

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Thu Feb 23 14:20:56 2012	(r24383)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/config.str	Thu Feb 23 15:37:31 2012	(r24384)
@@ -58,7 +58,7 @@
 		  , CodeGeneration([OutputDirectory(<default_output_directory>),STROutputMode(<default_stroutput_strategy>)])
 		  , Debug([DebugNone()])  
 		  , SpxProjects([])
-		  , TemplateLang(TemplatelangEnabled())    
+		  , TemplateLang(TemplatelangDisabled())    
 		  ]
 		)	
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str	Thu Feb 23 14:20:56 2012	(r24383)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/context/parse-adapter.str	Thu Feb 23 15:37:31 2012	(r24384)
@@ -1,8 +1,9 @@
 module context/parse-adapter
 
 imports
+	libstrc
 	include/SpoofaxLang
-  include/libtemplatelang
+  	include/libtemplatelang
 	context/signatures
 	normalize/signatures
 	lib/Configuration/SpoofaxConfiguration
@@ -84,7 +85,7 @@
 		where
 			has-extension(|"str")
 		where
-			parsed-string:= <parse-stratego>resolved-path
+			parsed-string:= <parse-stratego-file>resolved-path
 
 
 	parse-legacy-artifact:

From L.C.L.Kats at tudelft.nl  Thu Feb 23 16:37:52 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 23 Feb 2012 15:37:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24385 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf: . editor
	lib syntax test trans
Message-ID: <20120223153752.C00452B8004@mx2.tudelft.nl>

Author: LennartKats
Date: Thu Feb 23 15:37:52 2012
New Revision: 24385
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24385&sc=1

Log:
- added syntactic support for naming annotations
- added keyword syntax (highlighthing) for annotations like cons and deprecated

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/SDF.def
      - copied unchanged from r24336, spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.def
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/attributes.str
      - copied, changed from r24336, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Keywords.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Naming.sdf
      - copied, changed from r24336, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str
      - copied, changed from r24336, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str
Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.def
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Colorer.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Folding.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml	Thu Feb 23 15:37:31 2012	(r24384)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/build.main.xml	Thu Feb 23 15:37:52 2012	(r24385)
@@ -17,14 +17,14 @@
         <property name="dist" location="bin/dist"/>
         
         <!-- Imports -->
-        <property name="build.sdf.imports" value=""/>
+        <property name="build.sdf.imports" value="-Idef &quot;${basedir}/lib/SDF.def&quot;"/>
         <property name="build.stratego.args" value="--library
                         -I &quot;${trans}&quot; -I &quot;${basedir}&quot;
                         -la strc -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
                         -la stratego-sdf"/>
         
-        <property name="externaldef" location="syntax/SDF.def"/>
-        <!-- External .def and .jar locations
+	      <!-- External .def and .jar locations
+	      <property name="externaldef" location="syntax/SDF.def"/>
         <property name="externaljar" value="../lib.jar"/>
         <property name="externaljarflags" value="-la org.lib"/>
         -->
@@ -38,5 +38,5 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="sdf2table,stratego.jar,sdf2imp,refresh"/>
+        <target name="all" depends="spoofaximp.default.jar"/>
     </project>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv	Thu Feb 23 15:37:31 2012	(r24384)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv	Thu Feb 23 15:37:52 2012	(r24385)
@@ -23,3 +23,6 @@
 
   builder : "Show syntax templates (for selection)" =
     generate-syntax-templates (realtime) (openeditor)
+
+  builder : "Generate name analysis (for selection)" =
+    generate-name-analysis (realtime) (openeditor)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Colorer.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Colorer.esv	Thu Feb 23 15:37:31 2012	(r24384)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Colorer.esv	Thu Feb 23 15:37:52 2012	(r24385)
@@ -4,12 +4,13 @@
   SDF-Colorer.generated
 
 colorer
-  
-
-
 
-// This file can be used for custom colorer rules.
-
-// See the imported file for a brief introduction and examples.
-
-  Label : gray
\ No newline at end of file
+  Label : gray
+    
+  _.Constructor : 64 64 255 bold
+  Namespace     : darkgreen 
+  Label         : gray
+  
+  _.namespaceref  : 0   96  96 italic
+  _.namespaceref2 : 0   96  96 italic
+  _.namespacedef  : 0   96  96 italic
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Folding.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Folding.esv	Thu Feb 23 15:37:31 2012	(r24384)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Folding.esv	Thu Feb 23 15:37:52 2012	(r24385)
@@ -1,17 +1,17 @@
 module SDF-Folding
 
-imports
-  SDF-Folding.generated
+// imports
+//  SDF-Folding.generated
 
 folding
 
-  context-free-syntax
+  _.context-free-syntax
   
-  lexical-syntax
+  _.lexical-syntax
   
-  kernel-syntax
+  _.kernel-syntax
   
-  sorts
+  _.sorts
 
 // This file can be used for custom folding rules.
 

Copied: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/SDF.def (from r24336, spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.def)
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/SDF.def	Thu Feb 23 15:37:52 2012	(r24385, copy of r24336, spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.def)
@@ -0,0 +1,615 @@
+definition
+module languages/sdf2/syntax/Aliases
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  %% HACK: incremental parsing annotation
+  context-free syntax
+    
+    Symbols "->" result:Symbol Attributes -> Production  {cons("prod"), incremental}
+
+  sorts Alias Aliases
+  context-free syntax 
+    "aliases" Aliases              -> Grammar  {cons("aliases")}
+    Symbol arrow:"->" alias:Symbol -> Alias    {cons("alias")}
+    list:Alias*                    -> Aliases
+
+
+
+module languages/sdf2/syntax/Restrictions
+
+imports languages/sdf2/syntax/CC
+
+exports
+  sorts Lookahead Lookaheads Restriction Restrictions
+
+  context-free syntax
+    CharClass                          -> Lookahead  {cons("char-class")}
+    head:CharClass "." tail:Lookaheads -> Lookahead  {cons("seq")}
+
+    Lookahead                                -> Lookaheads  {cons("single")}
+    "left":Lookaheads "|" "right":Lookaheads -> Lookaheads  {cons("alt"),right}
+    "(" Lookaheads ")"                       -> Lookaheads  {bracket}
+    "[[" list:{Lookahead ","}* "]]"          -> Lookaheads  {cons("list")}
+
+    Symbols "-/-" Lookaheads -> Restriction  {cons("follow")}
+
+    list:Restriction* -> Restrictions
+
+    "restrictions" Restrictions -> Grammar  {cons("restrictions")}
+
+    "reject" -> Attribute  {cons("reject")}
+    "prefer" -> Attribute  {cons("prefer")}
+    "avoid"  -> Attribute  {cons("avoid")}
+
+  context-free priorities    
+    CharClass "." Lookaheads    -> Lookahead >
+    Lookaheads "|" Lookaheads   -> Lookaheads
+
+
+module languages/sdf2/syntax/Labels
+
+imports languages/sdf2/syntax/Kernel 
+        basic/StrCon
+
+exports 
+  sorts Label
+
+  context-free syntax
+    StrCon -> Label {cons("quoted")}
+    IdCon  -> Label {cons("unquoted")}
+
+    Label ":" Symbol -> Symbol  {cons("label")}
+
+module languages/sdf2/syntax/Literals
+
+imports languages/sdf2/syntax/Kernel 
+imports basic/StrCon
+imports basic/IdentifierCon
+
+exports
+  sorts FunctionName SingleQuotedStrCon SingleQuotedStrChar
+  lexical syntax
+
+    "\\n"                      -> SingleQuotedStrChar {cons("newline")}
+    "\\t"                      -> SingleQuotedStrChar {cons("tab")}
+    "\\'"                      -> SingleQuotedStrChar {cons("quote")}
+    "\\\\"                     -> SingleQuotedStrChar {cons("backslash")}
+    "\\" a:[0-9]b:[0-9]c:[0-9] -> SingleQuotedStrChar {cons("decimal")}
+    ~[\0-\31\n\t\'\\]          -> SingleQuotedStrChar {cons("normal")}
+
+    [\'] chars:SingleQuotedStrChar* [\']   -> SingleQuotedStrCon  {cons("default")}
+
+  context-free syntax
+    IdCon  -> FunctionName {cons("unquoted-fun")}
+    StrCon -> FunctionName {cons("quoted-fun")}
+
+  context-free syntax
+    string:StrCon                -> Symbol {cons("lit")}
+    ci-string:SingleQuotedStrCon -> Symbol {cons("ci-lit")}
+
+    fun:FunctionName "(" arguments:{Symbol ","}* ")" "->" result:Symbol Attributes 
+	-> Production  {avoid, cons("prefix-fun")}
+
+module languages/sdf2/syntax/Start-Symbols
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+  
+    "start-symbols" Symbols                -> Grammar {cons("kernel-start-symbols")} 
+    "lexical" "start-symbols" Symbols      -> Grammar {cons("lexical-start-symbols")}
+    "context-free" "start-symbols" Symbols -> Grammar {cons("context-free-start-symbols")}
+
+module languages/sdf2/syntax/Sorts
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Sort
+  lexical syntax
+    head:[A-Z]                          -> Sort {cons("one-char")}
+    head:[A-Z] middle:[A-Za-z0-9\-]* last:[A-Za-z0-9] -> Sort 
+	{cons("more-chars")}
+
+  context-free syntax
+    Sort                                    -> Symbol  {cons("sort")}
+    Sort "[[" parameters:{Symbol ","}+ "]]" -> Symbol  {cons("parameterized-sort")}
+
+    "sorts" Symbols -> Grammar {cons("sorts")}
+
+  lexical restrictions
+    Sort -/- [A-Za-z0-9]
+
+module languages/sdf2/syntax/Character
+
+
+
+exports
+  sorts Character NumChar ShortChar
+  lexical syntax
+    [\\] number:[0-9]+                     -> NumChar   {cons("digits")}
+    character:[a-zA-Z0-9]                  -> ShortChar {cons("regular")}
+    [\\] escape:~[\0-\31A-Za-mo-qsu-z0-9]  -> ShortChar {cons("escaped")}
+
+  context-free syntax
+    NumChar   -> Character {cons("numeric")}
+    ShortChar -> Character {cons("short")}
+    "\\TOP"   -> Character {cons("top")}
+    "\\EOF"   -> Character {cons("eof")}
+    "\\BOT"   -> Character {cons("bot")}
+    "\\LABEL_START" -> Character {cons("label_start")}
+
+module languages/sdf2/syntax/Character-Class
+
+imports languages/sdf2/syntax/Character
+
+exports
+  sorts CharClass CharRange CharRanges OptCharRanges 
+  context-free syntax 
+    Character                           -> CharRange
+    start:Character "-" end:Character   -> CharRange            {cons("range")}
+
+    CharRange                                   -> CharRanges
+    "left":CharRanges "right":CharRanges        -> CharRanges   {cons("conc"),right,memo}
+    "(" CharRanges ")"                          -> CharRanges   {bracket}
+
+                              -> OptCharRanges  {cons("absent")}
+    CharRanges                -> OptCharRanges  {cons("present")}
+
+    "[" OptCharRanges "]"                    -> CharClass  {cons("simple-charclass")}
+    "~" CharClass                            -> CharClass  {cons("comp")}
+    "left":CharClass "/" "right":CharClass   -> CharClass  {cons("diff"),left,memo}
+    "left":CharClass "/\\" "right":CharClass -> CharClass  {cons("isect"),left,memo}
+    "left":CharClass "\\/" "right":CharClass -> CharClass  {cons("union"),left}
+    "(" CharClass ")"                        -> CharClass  {bracket, avoid}
+
+  context-free priorities
+    "~" CharClass             -> CharClass >
+    CharClass "/" CharClass   -> CharClass >
+    CharClass "/\\" CharClass -> CharClass >
+    CharClass "\\/" CharClass -> CharClass           
+
+
+module languages/sdf2/syntax/CC
+
+imports languages/sdf2/syntax/Character-Class 
+        languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    CharClass -> Symbol {cons("char-class")}
+
+module languages/sdf2/syntax/Priority
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Associativity ArgumentIndicator Group Priority Priorities
+
+  context-free syntax
+    "left"      -> Associativity  {cons("left")}
+    "right"     -> Associativity  {cons("right")}
+    "non-assoc" -> Associativity  {cons("non-assoc")}
+    "assoc"     -> Associativity  {cons("assoc")}
+
+    "bracket"     -> Attribute  {cons("bracket")}
+    Associativity -> Attribute  {cons("assoc")}
+
+    "<" arguments:{NatCon ","}+ ">" -> ArgumentIndicator {cons("default")}
+
+    Group ArgumentIndicator               -> Group {non-assoc,cons("with-arguments")}
+    Group "."                             -> Group {non-assoc,cons("non-transitive")}
+
+    Production                            -> Group  {cons("simple-group")}
+    "{" Productions "}"                   -> Group  {cons("prods-group")}
+    "{" Associativity ":" Productions "}" -> Group  {cons("assoc-group")}
+
+    list:{Group ">"}+                                    -> Priority  {cons("chain")}
+    "left":Group Associativity "right":Group             -> Priority  {cons("assoc")}
+%%    Production "<" arguments:{NatCon ","}+ ">" ">" Group -> Priority  {cons("argument")}
+
+    list:{Priority  ","}* -> Priorities
+
+    "priorities" Priorities  -> Grammar  {cons("priorities")}
+
+module languages/sdf2/syntax/Lifting
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    left-quote:"`" Symbol right-quote:"`" -> Symbol  {cons("lifting")}
+
+module languages/sdf2/syntax/Regular
+
+imports languages/sdf2/syntax/Kernel 
+imports languages/aterm/syntax/IntCon
+
+exports
+  context-free syntax
+    "(" ")"                                       -> Symbol {cons("empty")}
+    "(" head:Symbol tail:Symbol+ ")"              -> Symbol {cons("seq")}
+    Symbol "?"                                    -> Symbol {cons("opt")}
+    Symbol "+"                                    -> Symbol {cons("iter")}
+    Symbol "*"                                    -> Symbol {cons("iter-star")}
+    "{" Symbol sep:Symbol "}" "+"                 -> Symbol {cons("iter-sep")}
+    "{" Symbol sep:Symbol "}" "*"                 -> Symbol {cons("iter-star-sep")}
+    "<" head:Symbol "," rest:{Symbol ","}+ ">"    -> Symbol {cons("tuple")}
+    "(" arguments:Symbols "=>" results:Symbol ")" -> Symbol {cons("func")}
+    "left":Symbol "|" "right":Symbol              -> Symbol {right,cons("alt")}
+    "(" "left":Symbol "->" "right":Symbol ")"     -> Symbol {cons("strategy")}
+
+  context-free priorities
+    {Symbol "?"               -> Symbol
+    Symbol "*"                -> Symbol
+    Symbol "+"                -> Symbol} >
+    Symbol "|" Symbol         -> Symbol       
+
+
+module languages/sdf2/syntax/Renaming
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  sorts Renaming Renamings
+  context-free syntax 
+    "[" list:Renaming* "]" -> Renamings  {cons("renamings")}
+
+    from:Symbol "=>" to:Symbol                   -> Renaming  {cons("symbol")}
+    from-prod:Production "=>" to-prod:Production -> Renaming  {cons("production")}
+
+module languages/sdf2/syntax/Modules
+
+imports languages/sdf2/syntax/Kernel 
+        languages/sdf2/syntax/Renaming
+
+hiddens
+  sorts ModuleWord
+exports
+  context-free start-symbols Module
+
+  sorts ModuleId ModuleName Import Imports
+        Section Sections Module Definition ImpSection
+
+  lexical syntax    
+    letters:[A-Za-z0-9\_\-]+ -> ModuleWord  {cons("word")}
+
+    ModuleWord              -> ModuleId  {cons("leaf")}
+    sep:"/" basename:ModuleId            -> ModuleId  {cons("root")}
+    dirname:ModuleWord sep:"/" basename:ModuleId -> ModuleId  {cons("path")}
+         
+  context-free syntax
+    list:Module* -> Definition
+
+    "module" ModuleName list:ImpSection* Sections -> Module  {cons("module")}
+
+    "exports" Grammar            -> Section  {cons("exports")}
+    "hiddens" Grammar            -> Section  {cons("hiddens")}
+
+    list:Section*                -> Sections
+
+    ModuleId                        -> ModuleName  {cons("unparameterized")}
+    ModuleId "[" params:Symbols "]" -> ModuleName  {cons("parameterized")}
+
+    "id" "(" ModuleName ")" -> Attribute  {cons("id")}
+
+    "imports" list:Imports -> ImpSection  {cons("imports")}
+
+    ImpSection -> Grammar  {cons("imp-section")}
+
+    list:Import* -> Imports
+
+    ModuleName            -> Import  {cons("module")}
+    ModuleName Renamings  -> Import  {cons("renamed-module")}
+    "(" Import ")"        -> Import  {bracket}
+
+  lexical restrictions
+    ModuleWord -/- [A-Za-z0-9\_\-]
+    ModuleId -/- [\/]
+
+module languages/sdf2/syntax/Basic
+
+imports languages/sdf2/syntax/Kernel
+
+exports
+  context-free syntax
+    "lexical" "syntax"      Productions -> Grammar  {cons("lexical-syntax")}
+    "context-free" "syntax" Productions -> Grammar  {cons("context-free-syntax")}
+    "variables"             Productions -> Grammar  {cons("variables")}
+    "lexical" "variables"   Productions -> Grammar  {cons("lexical-variables")}
+
+    "<" Symbol "-CF"  ">"               -> Symbol  {cons("cf")}
+    "<" Symbol "-LEX" ">"               -> Symbol  {cons("lex")}
+    "<" Symbol "-VAR" ">"               -> Symbol  {cons("varsym")}
+
+    "LAYOUT"                            -> Symbol  {cons("layout")}
+
+module languages/sdf2/syntax/Grammars
+
+imports basic/Comments
+
+exports
+  sorts Grammar
+  context-free syntax    
+    "(/)"                          -> Grammar  {cons("empty-grammar")}
+    "left":Grammar "right":Grammar -> Grammar  {assoc,cons("conc-grammars")}
+    "(" Grammar ")"                -> Grammar  {bracket}
+
+module basic/Comments
+
+imports
+  basic/Whitespace
+
+exports
+  lexical syntax
+    "%%" line:~[\n]* "\n"	-> LAYOUT {cons("line"),category("Comment")}
+    "%" content:~[\%\n]+ "%"	-> LAYOUT {cons("nested"),category("Comment")}
+  context-free restrictions
+    LAYOUT? -/- [\%]
+
+module languages/sdf2/syntax/Symbols
+
+imports basic/Comments
+
+exports
+  sorts Symbol Symbols
+
+  context-free syntax
+    "(" Symbol ")" -> Symbol {bracket}
+
+    list:Symbol* -> Symbols
+
+
+
+module basic/IdentifierCon
+
+exports
+
+sorts IdCon
+
+lexical syntax
+
+head:[A-Za-z] tail:[A-Za-z\-0-9]* -> IdCon {cons("default")}
+
+lexical restrictions
+
+IdCon -/- [A-Za-z\-0-9]
+
+module basic/StrCon
+
+exports
+
+sorts StrCon StrChar
+
+lexical syntax
+    "\\n"                      -> StrChar {cons("newline")}
+    "\\t"                      -> StrChar {cons("tab")}
+    "\\\""                     -> StrChar {cons("quote")}
+    "\\\\"                     -> StrChar {cons("backslash")}
+    "\\" a:[0-9]b:[0-9]c:[0-9] -> StrChar {cons("decimal")}
+    ~[\0-\31\n\t\"\\]          -> StrChar {cons("normal")}
+
+    [\"] chars:StrChar* [\"]   -> StrCon  {cons("default")}
+
+module languages/aterm/syntax/RealCon
+
+imports languages/aterm/syntax/IntCon
+
+hiddens
+  context-free start-symbols 
+    RealCon
+
+exports
+  sorts OptExp RealCon
+
+  context-free syntax
+    "e" IntCon -> OptExp {cons("present")}
+               -> OptExp {cons("absent")}
+
+    base:IntCon "." decimal:NatCon exp:OptExp  -> RealCon {cons("real-con")}
+
+module basic/NatCon
+
+exports
+
+sorts NatCon
+
+lexical syntax
+  
+ [0-9]+ -> NatCon {cons("digits")}
+
+lexical restrictions
+
+ NatCon -/- [0-9]
+
+module basic/Whitespace
+
+exports
+  lexical syntax
+    [\ \t\n\r]	-> LAYOUT {cons("whitespace")}
+
+  context-free restrictions
+    LAYOUT? -/- [\ \t\n\r]
+
+module languages/aterm/syntax/IntCon
+
+imports basic/Whitespace
+	basic/NatCon
+
+hiddens
+  context-free start-symbols 
+    IntCon
+
+exports
+  sorts IntCon
+  context-free syntax
+    NatCon         -> IntCon {cons("natural")}
+    pos:"+" NatCon -> IntCon {cons("positive")}
+    neg:"-" NatCon -> IntCon {cons("negative")}
+
+module languages/aterm/syntax/ATerms
+
+imports languages/aterm/syntax/IntCon 
+        languages/aterm/syntax/RealCon
+	basic/StrCon
+	basic/IdentifierCon
+
+exports
+  sorts AFun ATerm Annotation
+
+  context-free syntax
+	StrCon 	-> AFun {cons("quoted")}
+	IdCon 	-> AFun {cons("unquoted")}
+
+  context-free syntax
+	IntCon 					-> ATerm {cons("int")}
+	RealCon					-> ATerm {cons("real")}
+	fun:AFun 				-> ATerm {cons("fun")}
+	fun:AFun "(" args:{ATerm ","}+ ")" 	-> ATerm {cons("appl")}
+	"<" type:ATerm ">" 			-> ATerm {cons("placeholder")}
+	"[" elems:{ATerm ","}* "]" 		-> ATerm {cons("list")}
+	trm:ATerm Annotation 			-> ATerm {cons("annotated")}
+
+  context-free syntax
+	"{" annos:{ ATerm ","}+ "}" 		-> Annotation {cons("default")}
+
+hiddens
+  context-free start-symbols 
+    ATerm
+
+module languages/sdf2/syntax/Kernel
+
+imports languages/aterm/syntax/ATerms 
+        languages/sdf2/syntax/Symbols 
+        languages/sdf2/syntax/Grammars
+
+exports
+  sorts Attribute ATermAttribute Attributes Production Productions
+  context-free syntax
+    aterm:ATerm    -> ATermAttribute  {cons("default")}
+    ATermAttribute -> Attribute       {cons("term")}
+
+    "{" list:{Attribute ","}* "}" -> Attributes  {cons("attrs")}
+                                  -> Attributes  {cons("no-attrs")}
+
+    Symbols "->" result:Symbol Attributes -> Production  {cons("prod")}
+
+    list:Production* -> Productions
+
+    "syntax" Productions -> Grammar {cons("syntax")}
+
+module languages/sdf2/syntax/Sdf2-Syntax
+
+imports languages/sdf2/syntax/Kernel
+        languages/sdf2/syntax/Basic
+        languages/sdf2/syntax/Modules
+        languages/sdf2/syntax/Regular
+        languages/sdf2/syntax/Lifting
+        languages/sdf2/syntax/Priority
+        languages/sdf2/syntax/CC
+        languages/sdf2/syntax/Sorts
+        languages/sdf2/syntax/Start-Symbols
+        languages/sdf2/syntax/Literals
+        languages/sdf2/syntax/Labels
+        languages/sdf2/syntax/Restrictions
+        languages/sdf2/syntax/Aliases
+
+exports
+  sorts SDF
+
+  context-free syntax
+    "<START>" -> Symbol {cons("start")}
+    "<Start>" -> Symbol {cons("file-start")}
+
+    "lexical"      "priorities" Priorities      -> Grammar {cons("lexical-priorities")}
+    "context-free" "priorities" Priorities      -> Grammar {cons("context-free-priorities")}
+    "lexical"      "restrictions" Restrictions  -> Grammar {cons("lexical-restrictions")}
+    "context-free" "restrictions" Restrictions  -> Grammar {cons("context-free-restrictions")}
+
+    "definition" Definition -> SDF {cons("definition")}
+
+  context-free priorities
+    Symbol "|" Symbol  -> Symbol >
+    Label ":" Symbol -> Symbol                  
+
+
+module languages/sdf2/syntax/Sdf2
+
+imports languages/sdf2/syntax/Sdf2-Syntax
+
+exports
+  lexical syntax
+    "LAYOUT"            -> Sort    {reject}
+
+  context-free syntax
+    "aliases"           -> ModuleName {reject}
+    "lexical"           -> ModuleName {reject}
+    "priorities"        -> ModuleName {reject}
+    "context-free"      -> ModuleName {reject}
+    "definition"        -> ModuleName {reject}
+    "syntax"            -> ModuleName {reject}
+    "variables"         -> ModuleName {reject}
+    "module"            -> ModuleName {reject}
+    "imports"           -> ModuleName {reject}
+    "exports"           -> ModuleName {reject}
+    "hiddens"           -> ModuleName {reject}
+    "left"              -> ModuleName {reject}
+    "right"             -> ModuleName {reject}
+    "assoc"             -> ModuleName {reject}
+    "non-assoc"         -> ModuleName {reject}
+    "bracket"           -> ModuleName {reject}
+    "sorts"             -> ModuleName {reject}
+    "bracket"           -> ModuleName {reject}
+    "sorts"             -> ModuleName {reject}
+    "restrictions"      -> ModuleName {reject}
+
+     StrCon "(" arguments:{Symbol ","}* ")" -> Symbols {reject}
+
+     Associativity -> Label   {reject}
+     Associativity -> ATermAttribute {reject}
+     "reject"      -> ATermAttribute {reject}
+     "prefer"      -> ATermAttribute {reject}
+     "avoid"       -> ATermAttribute {reject}
+     "bracket"     -> ATermAttribute {reject}
+     "id" "(" ModuleName ")" -> ATermAttribute {reject}
+
+  restrictions
+    <Sort -CF>
+    "aliases"
+    "lexical"
+    "priorities"
+    "context-free"
+    "definition"
+    "syntax"
+    "variables"
+    "module"
+    "imports"
+    "exports"
+    "hiddens"
+    "left"
+    "right"
+    "assoc"
+    "non-assoc"
+    "bracket"
+    "sorts"             -/- [A-Za-z0-9]
+    <NatCon -CF>        -/- [0-9]
+    <LAYOUT?-CF>        -/- [\ \t\n\%]
+    <NumChar -CF>       -/- [0-9]
+    <ModuleName -CF>    -/- [A-Za-z0-9\_\-]
+
+exports
+  context-free start-symbols
+    SDF Module
+
+module SDF
+imports languages/sdf2/syntax/Sdf2
+hiddens
+  context-free start-symbols
+    SDF Module
+
+  %% HACK
+  context-free syntax
+    Group "." -> Group {non-assoc,cons("non-transitive")}

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/attributes.str (from r24336, spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/attributes.str	Fri Feb 17 16:15:58 2012	(r24336, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/attributes.str	Thu Feb 23 15:37:52 2012	(r24385)
@@ -2,12 +2,12 @@
 imports
 	libstratego-lib
 	libstratego-sglr
-	include/TemplateLang
 
 signature
   constructors
     deprecated : String -> Term
     deprecated : Term
+    Constructor : Term -> Term
 
 overlays
   sdf-cons(x) = term(default(appl(unquoted("cons"), [fun(quoted(x))])))

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	Thu Feb 23 15:37:31 2012	(r24384)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/editor-common.generated.str	Thu Feb 23 15:37:52 2012	(r24385)
@@ -131,6 +131,9 @@
   origin-column    = origin-location => (_, <id>, _, _)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
   
   origin-surrounding-comments =
     prim("SSL_EXT_origin_surrounding_comments", "SDF", <id>)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Keywords.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Keywords.sdf	Thu Feb 23 15:37:52 2012	(r24385)
@@ -0,0 +1,19 @@
+module Keywords
+
+%% adds keyword-like syntax (and highlighting) for supported annotations
+%% and different abstract syntax for constructors without cons: {"Simple"} 
+
+imports
+  languages/sdf2/syntax/Sdf2
+
+exports
+
+  context-free syntax
+    Constructor                 -> Attribute {prefer, cons("Constructor")}
+    "recover"                   -> Attribute {prefer, ast("term(default(fun(unquoted(\"recover\"))))")}
+    "incremental"               -> Attribute {prefer, ast("term(default(fun(unquoted(\"incremental\"))))")}
+    "deprecated"                -> Attribute {prefer, ast("term(default(fun(unquoted(\"deprecated\"))))")}
+    "deprecated" "(" StrCon ")" -> Attribute {prefer, ast("term(default(appl(unquoted(\"deprecated\"), [fun(quoted(<1>))])))")}
+    "ast" "(" StrCon ")"        -> Attribute {prefer, ast("term(default(appl(unquoted(\"ast\"), [fun(quoted(<1>))])))")}
+    "cons" "(" Constructor ")"  -> Attribute {prefer, ast("term(default(appl(unquoted(\"cons\"), [fun(quoted(<1>))])))")}
+    StrCon                      -> Constructor
\ No newline at end of file

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Naming.sdf (from r24336, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf	Fri Feb 17 16:15:58 2012	(r24336, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Naming.sdf	Thu Feb 23 15:37:52 2012	(r24385)
@@ -1,24 +1,23 @@
 module Naming
 
-imports SPXCommon
+imports
+  languages/sdf2/syntax/Sdf2
 
 exports
-
-	
 	 
 context-free syntax
   
-  Namespace "@=" Symbol[[SDF]] -> Symbol[[SDF]] {cons("namespacedef")}
+  IdCon -> Namespace
   
-  IdCon[[SDF]] -> Namespace
+  Namespace "@=" Symbol -> Symbol {cons("namespacedef")}
 
 syntax
   
   %% controlled layout for "@"
 
-  "@" <Namespace-CF> -> <Symbol[[SDF]]-CF> {cons("namespaceref")}
+  "@" <Namespace-CF> -> <Symbol-CF> {cons("namespaceref")}
   
-  <Namespace-CF> "@" <Symbol[[SDF]]-CF> -> <Symbol[[SDF]]-CF> {cons("namespaceref2")}
+  <Namespace-CF> "@" <Symbol-CF> -> <Symbol-CF> {cons("namespaceref2")}
 
 context-free syntax
 
@@ -28,22 +27,22 @@
 %%  
 %%  ID+ -> Scope {cons("Scope")}
 
-  "scope" "(" {Namespace ","}+ ")" -> Attribute[[SDF]] {prefer, ast("term(default(appl(unquoted(\"scope\"), [fun(quoted(<1>))])))")}
+  "scope" "(" {Namespace ","}+ ")" -> Attribute {prefer, ast("term(default(appl(unquoted(\"scope\"), [fun(quoted(<1>))])))")}
 
-%%  "scope" "(" "*" ")" -> Attribute[[SDF]] {prefer, ast("term(default(appl(unquoted(\"scope\"), [fun(quoted(\"*\"))])))")}
+%%  "scope" "(" "*" ")" -> Attribute {prefer, ast("term(default(appl(unquoted(\"scope\"), [fun(quoted(\"*\"))])))")}
 
 context-free priorities
   
   %% FIXME: priorities for @= and @ don't work
     
-    Symbol[[SDF]] "?"              -> Symbol[[SDF]] >
     Symbol "?"              -> Symbol >
-    %%{Symbol[[SDF]] "?"              -> Symbol[[SDF]]
-    %%Symbol[[SDF]] "*"               -> Symbol[[SDF]]
-    %%Symbol[[SDF]] "+"               -> Symbol[[SDF]]} >
-    %%Symbol[[SDF]] "|" Symbol[[SDF]] -> Symbol[[SDF]] >
-    Namespace "@=" Symbol[[SDF]]    -> Symbol[[SDF]]   
+    Symbol "?"              -> Symbol >
+    %%{Symbol "?"              -> Symbol
+    %%Symbol "*"               -> Symbol
+    %%Symbol "+"               -> Symbol} >
+    %%Symbol "|" Symbol -> Symbol >
+    Namespace "@=" Symbol    -> Symbol   
 
 lexical restrictions
   
-  Sort[[SDF]] -/- [\@]
+  Sort -/- [\@]

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/SDF.sdf	Thu Feb 23 15:37:52 2012	(r24385)
@@ -0,0 +1,15 @@
+module SDF
+
+imports
+  languages/sdf2/syntax/Sdf2
+  Naming
+  Keywords
+  
+exports
+  
+  context-free start-symbols
+    SDF Module
+
+  %% HACK
+  context-free syntax
+    Group "." -> Group {non-assoc,cons("non-transitive")}
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt	Thu Feb 23 15:37:52 2012	(r24385)
@@ -0,0 +1,32 @@
+module sdf-naming 
+
+language SDF
+
+setup [[
+  module SDF-with-naming
+  
+  exports
+  
+  context-free start-symbols Start
+  
+  exports context-free syntax
+]]
+
+test Namespace definition annotation [[
+    StartSpace@=Start -> Start
+]] 
+
+test Namespace reference annotation 1 [[
+  
+    StartSpace at Start -> Start
+]] 
+
+test Namespace definition annotation 2 [[
+  
+    @StartSpace -> Start {cons("Start")}
+]] 
+
+test Namespace definition annotation 2 warning [[
+  
+    @StartSpace -> Start 
+]] 1 warning /missing/ /abstract syntax/
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Thu Feb 23 15:37:31 2012	(r24384)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Thu Feb 23 15:37:52 2012	(r24385)
@@ -7,6 +7,7 @@
   libstrc
   analysis
   generate-syntax-templates
+  to-name-analysis
   lib/editor-common.generated
 
 rules

Copied and modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str (from r24336, spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str)
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str	Fri Feb 17 16:15:58 2012	(r24336, copy source)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str	Thu Feb 23 15:37:52 2012	(r24385)
@@ -2,12 +2,10 @@
 imports
   libstrc
   lib/editor-common.generated
-  context/sdf/declare-signature
-  context/sdf/declare
-  include/SpoofaxLang
-  include/libtemplatelang
-  analyze/sdf/check
-  common
+  include/SDF
+  sdf
+  analysis
+  lib/attributes
 
 rules
 
@@ -27,14 +25,12 @@
       , annotate-names-rules
       ])
     ])
-    where with-spxverify(
+    with
       namespaces           := <collect-all(fetch-namespace); flatten-list> sdf
       ; namespace-sigs       := <map(namespace-to-signature)> namespaces
       ; scope-rules          := <collect-all(fetch-scope-rule)> sdf
       ; get-def-rules        := <collect-all(fetch-get-def-rules)> sdf
       ; annotate-names-rules := <collect-all(fetch-annotate-names-rule)> sdf
-      , ! "failed @ generate-name-analysis" 
-    )
 
 rules
 
@@ -65,11 +61,10 @@
       scopes := <collect-all(fetch-scope-names)> a*;
       not(!scopes => []);
       cons := <getfirst(fetch-cons-name)> a*
-    	; with-spxverify(
+    with
 		      scopes'     := <make-set> <flatten-list> scopes;
 		      p'*         := <filter(non-terminal-to-wld)> p*;
 		      scope-terms := <map(![NoAnnoList(Op(<id>, []))])> scopes'
-      )
 
   fetch-get-def-rules:
     prod(p*, _, attrs(a*)) ->
@@ -109,11 +104,10 @@
     )
     where
       cons := <getfirst(fetch-cons-name)> a*
-    	; with-spxverify(
+    with
 	      p'*            := <filter(is-non-terminal)> p*;
 	      vars           := <map(non-terminal-to-new-var)> p'*;
 	      annotated-vars := <zip(add-namespace-anno-1 <+ add-namespace-anno-2)> (p'*, vars)
-      )
 
 rules
 

From M.A.Akhter at student.tudelft.nl  Thu Feb 23 16:38:48 2012
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 23 Feb 2012 15:38:48 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24386 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.template: .
	trans/templatelang/utils
Message-ID: <20120223153848.BB4BCCC09B@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Thu Feb 23 15:38:48 2012
New Revision: 24386
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24386&sc=1

Log:
changing parse strategies to use libstrc and lib-strategosdf

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-str.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Thu Feb 23 15:37:52 2012	(r24385)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/build.main.xml	Thu Feb 23 15:38:48 2012	(r24386)
@@ -23,8 +23,8 @@
       --library
       -I &quot;${basedir}&quot;
       -I &quot;${trans}&quot;
-      -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm
-      -la stratego-sdf -la org.strategoxt.imp.editors.template.generated" />
+      -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm   
+      -la stratego-sdf -la strc -la org.strategoxt.imp.editors.template.generated" />
 
   <!-- Optional: external .def and .jar locations
   <property name="externaldef" location="syntax/${sdfmodule}.def"/>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-sdf.str	Thu Feb 23 15:37:52 2012	(r24385)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-sdf.str	Thu Feb 23 15:38:48 2012	(r24386)
@@ -4,26 +4,11 @@
   libstratego-lib
   libstratego-sglr
   libstratego-gpp
+  libstratego-sdf
 
 strategies
-
-
   parse-sdf-file =
     parse-file(
       strsglr-perror, strsglr-report-parse-error
-    | <import-term(lib/SDF.tbl)>
-    )
-
-
-  parse-sdf-string =
-    parse-string(
-      strsglr-report-parse-error
-    | <import-term(lib/SDF.tbl)>
-    )
-
-
-  parse-sdf-stream =
-    parse-stream(
-      strsglr-report-parse-error
-    | <import-term(lib/SDF.tbl)>
+    | <get-sdf-parse-table>
     )

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-str.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-str.str	Thu Feb 23 15:37:52 2012	(r24385)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.template/trans/templatelang/utils/parse-str.str	Thu Feb 23 15:38:48 2012	(r24386)
@@ -6,23 +6,14 @@
   libstratego-lib
   libstratego-sglr
   libstratego-gpp
+  libstrc
 
 strategies
 
-  parse-stratego =
-    parse-file(
-      strsglr-perror, strsglr-report-parse-error
-    | <import-term(lib/Stratego-Sugar.tbl)>
-    )
-
   parse-stratego-string =
     parse-string(
       strsglr-report-parse-error
-    | <import-term(lib/Stratego-Sugar.tbl)>
+    | <get-parse-table-from-ast> 
     )
 
-  parse-stratego-stream =
-    parse-stream(
-      strsglr-report-parse-error
-    | <import-term(lib/Stratego-Sugar.tbl)>
-    )
+  get-parse-table-from-ast = <ps-get-parse-table>"Stratego"

From M.A.Akhter at student.tudelft.nl  Thu Feb 23 16:39:54 2012
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 23 Feb 2012 15:39:54 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24387 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib
Message-ID: <20120223153954.A9E87CC354@mx4.tudelft.nl>

Author: MdAdilAkhter
Date: Thu Feb 23 15:39:54 2012
New Revision: 24387
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24387&sc=1

Log:
removing SDF and Stratego-Sugar tbl since they are no longer needed

Deleted:
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/SDF.tbl
   spoofax-imp/trunk/org.strategoxt.imp.editors.template/lib/Stratego-Sugar.tbl

From L.C.L.Kats at tudelft.nl  Thu Feb 23 16:51:40 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 23 Feb 2012 15:51:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24388 - in
	strategoxt-java-backend/trunk/java: . pack-sdf-ext/extension
	pack-sdf-ext/syn
Message-ID: <20120223155140.E93FCCC357@mx4.tudelft.nl>

Author: LennartKats
Date: Thu Feb 23 15:51:40 2012
New Revision: 24388
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24388&sc=1

Log:
SDF-Ext fixes

Modified:
   strategoxt-java-backend/trunk/java/Makefile.am
   strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/pack-sdf-ext.str
   strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/Naming.sdf

Modified: strategoxt-java-backend/trunk/java/Makefile.am
==============================================================================
--- strategoxt-java-backend/trunk/java/Makefile.am	Thu Feb 23 15:39:54 2012	(r24387)
+++ strategoxt-java-backend/trunk/java/Makefile.am	Thu Feb 23 15:51:40 2012	(r24388)
@@ -2,7 +2,7 @@
 
 pkgdata_DATA=.ALLCLASSES strategoxt.jar
 
-sdfdata_DATA = pack-sdf-ext/syn/SDF-Ext.tbl
+sdfdata_DATA = pack-sdf-ext/syn/SDF-Ext.tbl $(wildcard pack-sdf-ext/syn/*.sdf)
 
 SDFINCLUDES   = \
        -Idef ${SDF_FRONT}/share/sdf/sdf-front/Sdf2.def\
@@ -259,6 +259,10 @@
 tools/org/strategoxt/tools/Main.java : $(TOOLSTRS:.str=.rtree) pack-sdf-ext/extension/pack-sdf-ext.rtree
 	$(STRJ) -i tools/org/strategoxt/tools/tools.rtree -o $@ $(STRJFLAGS) -p org.strategoxt.tools -la stratego-lib -la stratego-xtc -la stratego-gpp -la stratego-rtg -la stratego-sglr -la stratego-tool-doc -la stratego-sdf -la stratego-aterm -la strc -I $(STRATEGOXT)/share/sdf/xml-front -I tools/org/strategoxt/tools/lib -I $(STRATEGOXT)/share/sdf/gpp -I $(STRATEGOXT)/share/gpp -I $(STRATEGOXT)/share/sdf/stratego-regular -I $(STRATEGOXT)/share/stratego-regular -I $(STRATEGOXT)/share/sdf/sdf-front -I pack-sdf-ext/extension/
 
+###### PACK-SDF-EXT #######
+
+pack-sdf-ext/syn/SDF-Ext.tbl : $(wildcard pack-sdf-ext/syn/*.sdf)
+
 ###### COMPILER #######
 
 compiler/org/strategoxt/strj/Main.java : ../trans/strj.ctree ../trans/strj

Modified: strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/pack-sdf-ext.str
==============================================================================
--- strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/pack-sdf-ext.str	Thu Feb 23 15:39:54 2012	(r24387)
+++ strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/pack-sdf-ext.str	Thu Feb 23 15:51:40 2012	(r24388)
@@ -19,16 +19,16 @@
 
   remove-sdf-ext:
     appl(
-      prod(_, _, attrs([term(cons("namespacedef"))]))
+      prod(_, _, attrs([term(cons("namespacedef")) | _]))
     , contents
     ) ->
     symbol
     with
-      !contents => [namespace, atequals, symbol]
+      !contents => [namespace, layout1, atequals, layout2, symbol]
 
   remove-sdf-ext:
     appl(
-      prod(_, _, attrs([term(cons("namespaceref2"))]))
+      prod(_, _, attrs([term(cons("namespaceref2")) | _]))
     , contents
     ) ->
     symbol
@@ -37,7 +37,7 @@
 
   remove-sdf-ext:
     appl(
-      prod(_, _, attrs([term(cons("namespaceref"))]))
+      prod(_, _, attrs([term(cons("namespaceref")) | _]))
     , contents
     ) ->
     symbol

Modified: strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/Naming.sdf
==============================================================================
--- strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/Naming.sdf	Thu Feb 23 15:39:54 2012	(r24387)
+++ strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/Naming.sdf	Thu Feb 23 15:51:40 2012	(r24388)
@@ -4,10 +4,12 @@
   languages/sdf2/syntax/Sdf2
 
 exports
-	 
+
 context-free syntax
   
   IdCon -> Namespace
+  
+  Namespace "@=" Symbol -> Symbol {cons("namespacedef")}
 
 syntax
   
@@ -17,8 +19,6 @@
   
   <Namespace-CF> "@" <Symbol-CF> -> <Symbol-CF> {cons("namespaceref2")}
   
-  <Namespace-CF> "@=" <Symbol-CF> -> <Symbol-CF> {cons("namespacedef")}
-
 context-free syntax
 
 %%  "scopes" ScopeList* -> Section {cons("Scopes")}
@@ -31,17 +31,20 @@
 
 %%  "scope" "(" "*" ")" -> Attribute {prefer, ast("term(default(appl(unquoted(\"scope\"), [fun(quoted(\"*\"))])))")}
 
-context-free priorities
-  
-  %% FIXME: priorities for @= and @ don't work
-    
-    Symbol "?"              -> Symbol >
-    Symbol "?"              -> Symbol >
-    %%{Symbol "?"              -> Symbol
-    %%Symbol "*"               -> Symbol
-    %%Symbol "+"               -> Symbol} >
-    %%Symbol "|" Symbol -> Symbol >
-    Namespace "@=" Symbol    -> Symbol   
+priorities
+
+    {
+    <Symbol-CF> <LAYOUT?-CF> "?"            -> <Symbol-CF>
+    <Symbol-CF> <LAYOUT?-CF> "*"             -> <Symbol-CF>
+    <Symbol-CF> <LAYOUT?-CF> "+"             -> <Symbol-CF>
+    }
+    >
+    <Symbol-CF> <LAYOUT?-CF> "|" <Symbol-CF> -> <Symbol-CF>
+    >
+    {
+     <Namespace-CF> <LAYOUT?-CF> "@=" <LAYOUT?-CF> <Symbol-CF> -> <Symbol-CF>
+     <Namespace-CF>              "@"               <Symbol-CF> -> <Symbol-CF> 
+    }
 
 lexical restrictions
   

From L.C.L.Kats at tudelft.nl  Thu Feb 23 16:52:30 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 23 Feb 2012 15:52:30 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24389 - in
	spoofax-imp/trunk: org.strategoxt.imp.editors.sdf/syntax
	org.strategoxt.imp.editors.sdf/test
	org.strategoxt.imp.editors.spoofax/syntax
Message-ID: <20120223155230.3EEBA108C067@mx3.tudelft.nl>

Author: LennartKats
Date: Thu Feb 23 15:52:30 2012
New Revision: 24389
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24389&sc=1

Log:
proper priorities for Naming.sdf

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Naming.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Naming.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Naming.sdf	Thu Feb 23 15:51:40 2012	(r24388)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Naming.sdf	Thu Feb 23 15:52:30 2012	(r24389)
@@ -31,17 +31,20 @@
 
 %%  "scope" "(" "*" ")" -> Attribute {prefer, ast("term(default(appl(unquoted(\"scope\"), [fun(quoted(\"*\"))])))")}
 
-context-free priorities
-  
-  %% FIXME: priorities for @= and @ don't work
-    
-    Symbol "?"              -> Symbol >
-    Symbol "?"              -> Symbol >
-    %%{Symbol "?"              -> Symbol
-    %%Symbol "*"               -> Symbol
-    %%Symbol "+"               -> Symbol} >
-    %%Symbol "|" Symbol -> Symbol >
-    Namespace "@=" Symbol    -> Symbol   
+priorities
+
+    {
+    <Symbol-CF> <LAYOUT?-CF> "?"            -> <Symbol-CF>
+    <Symbol-CF> <LAYOUT?-CF> "*"             -> <Symbol-CF>
+    <Symbol-CF> <LAYOUT?-CF> "+"             -> <Symbol-CF>
+    }
+    >
+    <Symbol-CF> <LAYOUT?-CF> "|" <Symbol-CF> -> <Symbol-CF>
+    >
+    {
+     <Namespace-CF> <LAYOUT?-CF> "@=" <LAYOUT?-CF> <Symbol-CF> -> <Symbol-CF>
+     <Namespace-CF>              "@"               <Symbol-CF> -> <Symbol-CF> 
+    }   
 
 lexical restrictions
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt	Thu Feb 23 15:51:40 2012	(r24388)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt	Thu Feb 23 15:52:30 2012	(r24389)
@@ -29,4 +29,8 @@
 test Namespace definition annotation 2 warning [[
   
     @StartSpace -> Start 
-]] 1 warning /missing/ /abstract syntax/
\ No newline at end of file
+]] 1 warning /missing/ /abstract syntax/
+
+test Nested namespace [[
+  Foo at Bar@Start -> Start
+]]
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf	Thu Feb 23 15:51:40 2012	(r24388)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf	Thu Feb 23 15:52:30 2012	(r24389)
@@ -32,17 +32,20 @@
 
 %%  "scope" "(" "*" ")" -> Attribute[[SDF]] {prefer, ast("term(default(appl(unquoted(\"scope\"), [fun(quoted(\"*\"))])))")}
 
-context-free priorities
-  
-  %% FIXME: priorities for @= and @ don't work
-    
-    Symbol[[SDF]] "?"              -> Symbol[[SDF]] >
-    Symbol "?"              -> Symbol >
-    %%{Symbol[[SDF]] "?"              -> Symbol[[SDF]]
-    %%Symbol[[SDF]] "*"               -> Symbol[[SDF]]
-    %%Symbol[[SDF]] "+"               -> Symbol[[SDF]]} >
-    %%Symbol[[SDF]] "|" Symbol[[SDF]] -> Symbol[[SDF]] >
-    Namespace "@=" Symbol[[SDF]]    -> Symbol[[SDF]]   
+priorities
+
+    {
+    <Symbol-CF> <LAYOUT?-CF> "?"            -> <Symbol-CF>
+    <Symbol-CF> <LAYOUT?-CF> "*"             -> <Symbol-CF>
+    <Symbol-CF> <LAYOUT?-CF> "+"             -> <Symbol-CF>
+    }
+    >
+    <Symbol-CF> <LAYOUT?-CF> "|" <Symbol-CF> -> <Symbol-CF>
+    >
+    {
+     <Namespace-CF> <LAYOUT?-CF> "@=" <LAYOUT?-CF> <Symbol-CF> -> <Symbol-CF>
+     <Namespace-CF>              "@"               <Symbol-CF> -> <Symbol-CF> 
+    } 
 
 lexical restrictions
   

From L.C.L.Kats at tudelft.nl  Thu Feb 23 16:59:05 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Thu, 23 Feb 2012 15:59:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24390 -
	strategoxt-java-backend/trunk/java
Message-ID: <20120223155905.83EFACC07F@mx4.tudelft.nl>

Author: LennartKats
Date: Thu Feb 23 15:59:05 2012
New Revision: 24390
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24390&sc=1

Log:
added some distribution files

Modified:
   strategoxt-java-backend/trunk/java/Makefile.am

Modified: strategoxt-java-backend/trunk/java/Makefile.am
==============================================================================
--- strategoxt-java-backend/trunk/java/Makefile.am	Thu Feb 23 15:52:30 2012	(r24389)
+++ strategoxt-java-backend/trunk/java/Makefile.am	Thu Feb 23 15:59:05 2012	(r24390)
@@ -80,11 +80,14 @@
   $(wildcard runtime/org/strategoxt/*/*/*/*.str) \
   $(wildcard runtime/org/strategoxt/*/*/*/*/*.str) \
   $(wildcard runtime/org/strategoxt/*/*/*/*/*/*.str) \
+  $(wildcard pack-sdf-ext/extension/*.str) \
+  $(wildcard pack-sdf-ext/lib/org/strategoxt/pack_sdf_ext_compat/*.str) \
   $(TOOLSTRS) \
   spoofax-libs.jar \
   bin \
   META-INF/MANIFEST.MF \
-  pack-sdf-ext/syn/SDF-Ext.tbl 
+  $(wildcard pack-sdf-ext/syn/*.sdf) \
+  pack-sdf-ext/syn/SDF-Ext.tbl
 
 STRINCLUDES= \
   -I $(STRATEGOXT)/share/sdf/stratego-regular \

From M.A.Akhter at student.tudelft.nl  Thu Feb 23 19:45:50 2012
From: M.A.Akhter at student.tudelft.nl (Md Adil Akhter)
Date: Thu, 23 Feb 2012 18:45:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24391 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf
Message-ID: <20120223184550.3D480108C023@mx3.tudelft.nl>

Author: MdAdilAkhter
Date: Thu Feb 23 18:45:49 2012
New Revision: 24391
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24391&sc=1

Log:


Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Thu Feb 23 15:59:05 2012	(r24390)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-sdf.str	Thu Feb 23 18:45:49 2012	(r24391)
@@ -27,39 +27,38 @@
 	utils/contract
 
 rules
-
-	 emit-sdf:
-	 	m at Module(attrb* , modname , section*) -> m
+  // transforming a module definition to an entity definition 
+	emit-sdf:
+		m at Module(attrb* , modname , section*) -> m
  		where
  			with-spxverify(
- 				project-path := <ProjectPath>
+ 				  project-path := <ProjectPath>
  				; package-typed-qname := <GetEnclosingPackageName>
 				; module-typed-qname  := <GetEnclosingModuleName>
-				, !"Failed to create current scope @emit-sdf"
+				, !"Failed to create current scope at emit-sdf"
 			)	
 		where
 			 !module-typed-qname  => Module(module-untyped-qname)
 			 ; !package-typed-qname => Package(package-untyped-qname)
-			 ;  Module(_, _ , section') := <get-desugared-module-ast>module-typed-qname
+			 ;  Module(_, _, section') := <get-desugared-module-ast>module-typed-qname
 		where
-			root-directory := $[[project-path]/[<get-autogenerated-artifacts-dir>]]
+		  root-directory := $[[project-path]/[<get-autogenerated-artifacts-dir>]]
    		; output-path   := <get-output-path(|"sdf")>(root-directory , module-untyped-qname)
     	; dbg-compiler(!$[ Codegen | SDF | Found Section + Imports for the following module [<print-as-string> module-untyped-qname]])
-    where
-      // sdf2conflicts here collects information for the parenthesation in the prettyprinter
-    	sdf-string := <pp-sdf-to-string> 'module(
-    																		<qname-to-path>module-untyped-qname, 
-    																		<to-sdf-imports-block>section* , 
-    																		<to-sdf-section-block/* TVO-FIXME: ;sdf2conflicts-store-sdf */>section* 
-    																		)
-    	; dbg-compiler(!$[ Codegen | SDF | Saving the artifacts of [<print-as-string> module-untyped-qname].])
-		; <save-artifact(| package-untyped-qname , root-directory, output-path)>sdf-string 
-		; dbg-compiler(!$[ Codegen | SDF | Finishing generation of SDF for [<print-as-string> module-untyped-qname].])
+  	where
+  		// sdf2conflicts here collects information for the parenthesation in the prettyprinter
+			sdf-string := <pp-sdf-to-string> 'module(
+				<qname-to-path>module-untyped-qname, 
+    			<to-sdf-imports-block>section* , 
+    			<to-sdf-section-block/* TVO-FIXME: ;sdf2conflicts-store-sdf */>section* 
+			)
+    	; <save-artifact(| package-untyped-qname , root-directory, output-path)>sdf-string 
+			; dbg-compiler(!$[ Codegen | SDF | Finishing generation of SDF for [<print-as-string> module-untyped-qname].])
 
-	
-	
 rules	
 	
+	// Creating a main SDF file that imports all the generated SDF
+	// definitions from SpoofaxLang module definitions
 	generate-sdf-main:  module-qname* -> <id>
 		where 
 			Package(package-qname)   := <GetEnclosingPackageName>
@@ -73,16 +72,16 @@
 			 		; main-sdf-module-name :=<get-main-file-name><GetEnclosingPackageName> 
 			 		; output-path := <get-main-output-path(|main-sdf-module-name, "sdf")>(root-directory, package-qname) 
 			 		, ! $[ Codegen | SDF | Generating main failed for the following package : [<print-as-string> package-qname].]
-			 )  
- 			; with-spxverify(
-	 				resultant-sorts := <get-sdf-start-symbols-to-sync ; is-not-empty-list <+ ![]>;
-	 				if not(!resultant-sorts => []) then
-		 				start-symbol-syntax := [exports(context-free-start-symbols(resultant-sorts))]
-	 				else
-	 					start-symbol-syntax := []
-	 				end
-	 				, !"getting & syncing start symbols failed"
-			)
+		   ); 
+			 with-spxverify(
+	       resultant-sorts := <get-sdf-start-symbols-to-sync ; is-not-empty-list <+ ![]>;
+	 			 if not(!resultant-sorts => []) then
+		 		   start-symbol-syntax := [exports(context-free-start-symbols(resultant-sorts))]
+ 				 else
+			     start-symbol-syntax := []
+	 			 end
+	 			 , !"getting & syncing start symbols failed"
+			 )
  		where
  			sdf-string :=
 				<pp-sdf-to-string>
@@ -90,21 +89,21 @@
   				unparameterized(main-sdf-module-name)
 					, [imports(<map(pp-sdf-import;!'module(unparameterized(<id>)))>module-qname*)]
 					, start-symbol-syntax
-					)
-	  	; with-spxverify(
+					); 
+				with-spxverify(
 					<save-artifact(| package-qname , root-directory, output-path)>sdf-string
 					, ! $[Save failed for Main SDF Module of package : [<print-as-string> package-qname]]
 				)	
-			
+
 rules
 
-	to-sdf-section-block : 
-		sections* -> sdf-section-block
+  to-sdf-section-block : 
+    sections* -> sdf-section-block
 		where with-spxverify(
 			verify( List |sections* , "List expected")
 		)
 		where
-			sdf-section* := <conc> (
+		  sdf-section* := <conc> (
 			  <collect-om(?SDFSection(<id>) + ?SDFSectionEH(_, <id>), conc)> sections*,
 			  <collect-om(?TemplateSection(_)); template-sections-to-sdf> sections*
 			);
@@ -114,26 +113,26 @@
 				sdf-section-block := []
 			end
 
-	to-sdf-imports-block : 
-		sections*  -> sdf-import-block
+	to-sdf-imports-block:
+    sections*  -> sdf-import-block
 		where with-spxverify(
 			verify( List |sections* , "List expected")
 		)
 		where
-			spx-import-stmt* := <collect-om(?Imports(<id>) , conc);flatten-list;make-set> sections*;
+		  spx-import-stmt* := <collect-om(?Imports(<id>) , conc);flatten-list;make-set> sections*;
 			if <ensure-list-is-not-empty>spx-import-stmt*  then
 				sdf-import-block := <to-generated-artifact-block(to-generated-artifacts-import-declarations(sdf-import-adapter), \s -> ['imports(s)]\)>spx-import-stmt*
 			else
 				sdf-import-block := []
 			end
 
- 	// Resolved Imports are alraedy filtered out in the previous step.
+  // Resolved Imports are alraedy filtered out in the previous step.
  	// Hence, native spx imports are added without any further
  	// verifications.
- 	sdf-import-adapter : 
- 		name  -> 	'module(unparameterized(name))
- 		where
- 			<is-string>name
+  sdf-import-adapter : 
+ 	  name  -> 	'module(unparameterized(name)) 
+ 	  where 
+      <is-string>name
 
 	// Additional verification is done during importing legacy artifacts.
 	// Here, both Unresolved libraries and Stratego Libs are Ignored.

From richard at vogelij.nl  Fri Feb 24 03:42:56 2012
From: richard at vogelij.nl (Richard Vogelij)
Date: Fri, 24 Feb 2012 02:42:56 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24392 - in
	spoofax-ace: . resources/ace/src resources/javascript
	src/spoofax/ace src/spoofax/ace/generator
Message-ID: <20120224024256.F2A31CC2B2@mx4.tudelft.nl>

Author: rvogelij
Date: Fri Feb 24 02:42:56 2012
New Revision: 24392
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24392&sc=1

Log:
Added functionality to measure performance
	-Keeps track of elapsed time and sends the data to a statistics collecting db (and which js engine the program ran on)
	-Current metrics: #chars of code + Term count in AST (x axis)
	-Keeps track of elapsed miliseconds for jssglr parser and stratego program to run (y-axis)

Added:
   spoofax-ace/XMLHttpRequest.js
   spoofax-ace/resources/javascript/measurements.js
Modified:
   spoofax-ace/build.xml
   spoofax-ace/resources/ace/src/mode-spoofax2ace.js
   spoofax-ace/src/spoofax/ace/SpoofaxToAce.java
   spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java
   spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java

Added: spoofax-ace/XMLHttpRequest.js
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-ace/XMLHttpRequest.js	Fri Feb 24 02:42:56 2012	(r24392)
@@ -0,0 +1,364 @@
+/**
+ * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.
+ *
+ * This can be used with JS designed for browsers to improve reuse of code and
+ * allow the use of existing libraries.
+ *
+ * Usage: include("XMLHttpRequest.js") and use XMLHttpRequest per W3C specs.
+ *
+ * @todo SSL Support
+ * @author Dan DeFelippi <dan at driverdan.com>
+ * @contributor David Ellis <d.f.ellis at ieee.org>
+ * @license MIT
+ */
+
+var Url = require("url"),
+  spawn = require("child_process").spawn,
+  fs = require('fs');
+
+exports.XMLHttpRequest = function() {
+  /**
+   * Private variables
+   */
+  var self = this;
+  var http = require('http');
+  var https = require('https');
+
+  // Holds http.js objects
+  var client;
+  var request;
+  var response;
+
+  // Request settings
+  var settings = {};
+
+  // Set some default headers
+  var defaultHeaders = {
+    "User-Agent": "node.js",
+    "Accept": "*/*",
+  };
+
+  // Send flag
+  var sendFlag = false;
+  // Error flag, used when errors occur or abort is called
+  var errorFlag = false;
+
+  var headers = defaultHeaders;
+
+  /**
+   * Constants
+   */
+  this.UNSENT = 0;
+  this.OPENED = 1;
+  this.HEADERS_RECEIVED = 2;
+  this.LOADING = 3;
+  this.DONE = 4;
+
+  /**
+   * Public vars
+   */
+  // Current state
+  this.readyState = this.UNSENT;
+
+  // default ready state change handler in case one is not set or is set late
+  this.onreadystatechange = null;
+
+  // Result & response
+  this.responseText = "";
+  this.responseXML = "";
+  this.status = null;
+  this.statusText = null;
+
+  /**
+   * Open the connection. Currently supports local server requests.
+   *
+   * @param string method Connection method (eg GET, POST)
+   * @param string url URL for the connection.
+   * @param boolean async Asynchronous connection. Default is true.
+   * @param string user Username for basic authentication (optional)
+   * @param string password Password for basic authentication (optional)
+   */
+  this.open = function(method, url, async, user, password) {
+    settings = {
+      "method": method,
+      "url": url.toString(),
+      "async": (typeof async !== "boolean" ? true : async),
+      "user": user || null,
+      "password": password || null
+    };
+
+    this.abort();
+
+    setState(this.OPENED);
+  };
+
+  /**
+   * Sets a header for the request.
+   *
+   * @param string header Header name
+   * @param string value Header value
+   */
+  this.setRequestHeader = function(header, value) {
+    if (this.readyState != this.OPENED) {
+      throw "INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN";
+    }
+    if (sendFlag) {
+      throw "INVALID_STATE_ERR: send flag is true";
+    }
+    headers[header] = value;
+  };
+
+  /**
+   * Gets a header from the server response.
+   *
+   * @param string header Name of header to get.
+   * @return string Text of the header or null if it doesn't exist.
+   */
+  this.getResponseHeader = function(header) {
+    if (this.readyState > this.OPENED
+      && response.headers[header]
+      && !errorFlag
+    ) {
+      return response.headers[header];
+    }
+
+    return null;
+  };
+
+  /**
+   * Gets all the response headers.
+   *
+   * @return string 
+   */
+  this.getAllResponseHeaders = function() {
+    if (this.readyState < this.HEADERS_RECEIVED || errorFlag) {
+      return "";
+    }
+    var result = "";
+
+    for (var i in response.headers) {
+      result += i + ": " + response.headers[i] + "\r\n";
+    }
+    return result.substr(0, result.length - 2);
+  };
+
+  /**
+   * Sends the request to the server.
+   *
+   * @param string data Optional data to send as request body.
+   */
+  this.send = function(data) {
+    if (this.readyState != this.OPENED) {
+      throw "INVALID_STATE_ERR: connection must be opened before send() is called";
+    }
+
+    if (sendFlag) {
+      throw "INVALID_STATE_ERR: send has already been called";
+    }
+
+    var ssl = false;
+    var url = Url.parse(settings.url);
+
+    // Determine the server
+    switch (url.protocol) {
+      case 'https:':
+        ssl = true;
+        // SSL & non-SSL both need host, no break here.
+      case 'http:':
+        var host = url.hostname;
+        break;
+
+      case undefined:
+      case '':
+        var host = "localhost";
+        break;
+
+      default:
+        throw "Protocol not supported.";
+    }
+
+    // Default to port 80. If accessing localhost on another port be sure
+    // to use http://localhost:port/path
+    var port = url.port || (ssl ? 443 : 80);
+    // Add query string if one is used
+    var uri = url.pathname + (url.search ? url.search : '');
+
+    // Set the Host header or the server may reject the request
+    this.setRequestHeader("Host", host);
+
+    // Set Basic Auth if necessary
+    if (settings.user) {
+      if (typeof settings.password == "undefined") {
+        settings.password = "";
+      }
+      var authBuf = new Buffer(settings.user + ":" + settings.password);
+      headers["Authorization"] = "Basic " + authBuf.toString("base64");
+    }
+
+    // Set content length header
+    if (settings.method == "GET" || settings.method == "HEAD") {
+      data = null;
+    } else if (data) {
+      this.setRequestHeader("Content-Length", Buffer.byteLength(data));
+
+      if (!headers["Content-Type"]) {
+        this.setRequestHeader("Content-Type", "text/plain;charset=UTF-8");
+      }
+    }
+
+    var options = {
+      host: host,
+      port: port,
+      path: uri,
+      method: settings.method,
+      headers: headers
+    };
+
+    // Reset error flag
+    errorFlag = false;
+
+    // Handle async requests
+    if(!settings.hasOwnProperty("async") || settings.async) {
+      // Use the proper protocol
+      var doRequest = ssl ? https.request : http.request;
+
+      // Request is being sent, set send flag
+      sendFlag = true;
+
+      // As per spec, this is called here for historical reasons.
+      if (typeof self.onreadystatechange === "function") {
+        self.onreadystatechange();
+      }
+
+      // Create the request
+      request = doRequest(options, function(resp) {
+        response = resp;
+        response.setEncoding("utf8");
+
+        setState(self.HEADERS_RECEIVED);
+        self.status = response.statusCode;
+
+        response.on('data', function(chunk) {
+          // Make sure there's some data
+          if (chunk) {
+            self.responseText += chunk;
+          }
+          // Don't emit state changes if the connection has been aborted.
+          if (sendFlag) {
+            setState(self.LOADING);
+          }
+        });
+
+        response.on('end', function() {
+          if (sendFlag) {
+            // Discard the 'end' event if the connection has been aborted
+            setState(self.DONE);
+            sendFlag = false;
+          }
+        });
+
+        response.on('error', function(error) {
+          self.handleError(error);
+        });
+      }).on('error', function(error) {
+        self.handleError(error);
+      });
+
+      // Node 0.4 and later won't accept empty data. Make sure it's needed.
+      if (data) {
+        request.write(data);
+      }
+
+      request.end();
+    } else { // Synchronous
+      // Create a temporary file for communication with the other Node process
+      var syncFile = ".node-xmlhttprequest-sync-" + process.pid;
+      fs.writeFileSync(syncFile, "", "utf8");
+      // The async request the other Node process executes
+      var execString = "var http = require('http'), https = require('https'), fs = require('fs');"
+        + "var doRequest = http" + (ssl?"s":"") + ".request;"
+        + "var options = " + JSON.stringify(options) + ";"
+        + "var responseText = '';"
+        + "var req = doRequest(options, function(response) {"
+        + "response.setEncoding('utf8');"
+        + "response.on('data', function(chunk) {"
+        + "responseText += chunk;"
+        + "});"
+        + "response.on('end', function() {"
+        + "fs.writeFileSync('" + syncFile + "', 'NODE-XMLHTTPREQUEST-STATUS:' + response.statusCode + ',' + responseText, 'utf8');"
+        + "});"
+        + "response.on('error', function(error) {"
+        + "fs.writeFileSync('" + syncFile + "', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');"
+        + "});"
+        + "}).on('error', function(error) {"
+        + "fs.writeFileSync('" + syncFile + "', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');"
+        + "});"
+        + (data ? "req.write('" + data.replace(/'/g, "\\'") + "');":"")
+        + "req.end();";
+      // Start the other Node Process, executing this string
+      syncProc = spawn(process.argv[0], ["-e", execString]);
+      while((self.responseText = fs.readFileSync(syncFile, 'utf8')) == "") {
+        // Wait while the file is empty
+      }
+      // Kill the child process once the file has data
+      syncProc.stdin.end();
+      // Remove the temporary file
+      fs.unlinkSync(syncFile);
+      if(self.responseText.match(/^NODE-XMLHTTPREQUEST-ERROR:/)) {
+        // If the file returned an error, handle it
+        var errorObj = self.responseText.replace(/^NODE-XMLHTTPREQUEST-ERROR:/, "");
+        self.handleError(errorObj);
+      } else {
+        // If the file returned okay, parse its data and move to the DONE state
+        self.status = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:([0-9]*),.*/, "$1");
+        self.responseText = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:[0-9]*,(.*)/, "$1");
+        setState(self.DONE);
+      }
+    }
+  };
+
+  this.handleError = function(error) {
+    this.status = 503;
+    this.statusText = error;
+    this.responseText = error.stack;
+    errorFlag = true;
+    setState(this.DONE);
+  };
+
+  /**
+   * Aborts a request.
+   */
+  this.abort = function() {
+    if (request) {
+      request.abort();
+      request = null;
+    }
+
+    headers = defaultHeaders;
+    this.responseText = "";
+    this.responseXML = "";
+
+    errorFlag = true;
+
+    if (this.readyState !== this.UNSENT
+        && (this.readyState !== this.OPENED || sendFlag)
+        && this.readyState !== this.DONE) {
+      sendFlag = false;
+      setState(this.DONE);
+    }
+    this.readyState = this.UNSENT;
+  };
+
+  /**
+   * Changes readyState and calls onreadystatechange.
+   *
+   * @param int state New state
+   */
+  var setState = function(state) {
+    self.readyState = state;
+    if (typeof self.onreadystatechange === "function") {
+      self.onreadystatechange();
+    }
+  };
+};
+

Modified: spoofax-ace/build.xml
==============================================================================
--- spoofax-ace/build.xml	Thu Feb 23 18:45:49 2012	(r24391)
+++ spoofax-ace/build.xml	Fri Feb 24 02:42:56 2012	(r24392)
@@ -61,7 +61,7 @@
 		<delete dir="tmp"/>
 		<delete file="s2a.jar"/>
 		<delete>
-			<fileset dir="." includes="*.js"/>
+			<fileset dir="." includes="*.js" excludes="XMLHttpRequest.js"/>
 		</delete>
 	</target>
 

Modified: spoofax-ace/resources/ace/src/mode-spoofax2ace.js
==============================================================================
--- spoofax-ace/resources/ace/src/mode-spoofax2ace.js	Thu Feb 23 18:45:49 2012	(r24391)
+++ spoofax-ace/resources/ace/src/mode-spoofax2ace.js	Fri Feb 24 02:42:56 2012	(r24392)
@@ -1 +1,192 @@
-define("ace/mode/spoofax2ace",["require","exports","module","ace/lib/oop","ace/mode/text","ace/mode/spoofax2ace_tokenizer","ace/mode/matching_brace_outdent","ace/range","ace/worker/worker_client"],function(a,b,c){var d=a("ace/lib/oop"),e=a("ace/mode/text").Mode,f=a("ace/mode/spoofax2ace_tokenizer").SpoofaxToAceTokenizer,g=a("ace/mode/matching_brace_outdent").MatchingBraceOutdent,h=a("ace/range").Range,i=a("ace/worker/worker_client").WorkerClient,j=function(){this.$tokenizer=new f,this.$outdent=new g,this.$worker=null,this.debugWorker=!0};d.inherits(j,e);var k,l;((function(){this.createWorker=function(a){console.log("Creating worker"),k=(new Date).getTime();var b=this.$tokenizer,c=a.getDocument();console.log("Creating worker 1");var d=new i(["ace","pilot"],"worker-spoofax2ace.js","ace/mode/spoofax2ace_worker","SpoofaxToAceWorker");console.log("Creating worker 2"),d.call("setValue",[c.getValue()]),console.log("Creating worker 3");var e=function(a){var c=a.data,e=a.data.range;c
 .action==="insertText"&&c.text==="\n"&&b.shiftTokens(e.start.row,1),c.action==="insertLines"&&b.shiftTokens(e.start.row,c.lines.length),c.action==="removeText"&&c.text==="\n"&&b.unshiftTokens(e.start.row,1),c.action==="removeLines"&&b.unshiftTokens(e.start.row,c.lines.length),d.emit("change",a)};return c.on("change",e),this.debugWorker&&(d.on("log",function(a){console.log("worker:"+a.data)}),d.on("debug",function(a){console.log(a.data)})),d.on("loaded",function(a){l=(new Date).getTime(),console.log("Loading completed in "+(l-k)+" ms."),d.call("setValue",[c.getValue()])}),d.on("jsglr",function(c){b.setTokens(c.data.parsed),a.setAnnotations(c.data.errors)}),d.on("terminate",function(){c.removeListener("change",e),a.clearAnnotations()}),this.$worker=d,d}})).call(j.prototype),b.Mode=j}),define("ace/mode/spoofax2ace_tokenizer",["require","exports","module","ace/lib/oop","ace/lib/event_emitter"],function(a,b,c){var d=a("ace/lib/oop"),e=a("ace/lib/event_emitter").EventEmitter,f=fun
 ction(){this.parsed=[]};((function(){d.implement(this,e),this.fireUpd ent=function(a,b){var c=a.getLine(b),e=c.match(/^(\s*\})/);if(!e)return 0;var f=e[1].length,g=a.findMatchingBracket({row:b,column:f});if(!g||g.row==b)return 0;var h=this.$getIndent(a.getLine(g.row));a.replace(new d(b,0,b,f-1),h)},this.$getIndent=function(a){var b=a.match(/^(\s+)/);return b?b[1]:""}})).call(e.prototype),b.MatchingBraceOutdent=e}),define("ace/worker/worker_client",["require","exports","module","ace/lib/oop","ace/lib/event_emitter"],function(a,b,c){var d=a("../lib/oop"),e=a("../lib/event_emitter").EventEmitter,f=function(b,c,d,e){this.changeListener=this.changeListener.bind(this);if(window.require.packaged)var f=this.$guessBasePath(),g=this.$worker=new Worker(f+c);else{var h=this.$normalizePath(a.nameToUrl("ace/worker/worker",null,"_")),g=this.$worker=new Worker(h),i={};for(var j=0;j<b.length;j++){var k=b[j],l=this.$normalizePath(a.nameToUrl(k,null,"_").replace(/.js$/,""));i[k]=l}}this.$worker.postMessage({init:!0,tlns:i,module:d,classname:e}),this.callbackId=1
 ,this.callbacks={};var m=this;this.$worker.onerror=function(a){throw window.console&&console.log&&console.log(a),a},this.$worker.onmessage=f nate=function(){this._dispatchEvent("terminate",{}),this.$worker.terminate(),this.$worker=null,this.$doc.removeEventListener("change",this.changeListener),this.$doc=null},this.send=function(a,b){this.$worker.postMessage({command:a,args:b})},this.call=function(a,b,c){if(c){var d=this.callbackId++;this.callbacks[d]=c,b.push(d)}this.send(a,b)},this.emit=function(a,b){try{this.$worker.postMessage({event:a,data:{data:b.data}})}catch(c){}},this.attachToDocument=function(a){this.$doc&&this.terminate(),this.$doc=a,this.call("setValue",[a.getValue()]),a.on("change",this.changeListener)},this.changeListener=function(a){a.range={start:a.data.range.start,end:a.data.range.end},this.emit("change",a)}})).call(f.prototype),b.WorkerClient=f})
+define("ace/mode/spoofax2ace", ["require", "exports", "module", "ace/lib/oop", "ace/mode/text", "ace/mode/spoofax2ace_tokenizer", "ace/mode/matching_brace_outdent", "ace/range", "ace/worker/worker_client"], function (a, b, c) {
+    var d = a("ace/lib/oop"),
+        e = a("ace/mode/text").Mode,
+        f = a("ace/mode/spoofax2ace_tokenizer").SpoofaxToAceTokenizer,
+        g = a("ace/mode/matching_brace_outdent").MatchingBraceOutdent,
+        h = a("ace/range").Range,
+        i = a("ace/worker/worker_client").WorkerClient,
+        j = function () {
+            this.$tokenizer = new f, this.$outdent = new g, this.$worker = null, this.debugWorker = !0
+        };
+    d.inherits(j, e);
+    var k, l;
+    ((function () {
+        this.createWorker = function (a) {
+            console.log("Creating worker"), k = (new Date).getTime();
+            var b = this.$tokenizer,
+                c = a.getDocument();
+            console.log("Creating worker 1");
+            var d = new i(["ace", "pilot"], "worker-spoofax2ace.js", "ace/mode/spoofax2ace_worker", "SpoofaxToAceWorker");
+            console.log("Creating worker 2"), d.call("setValue", [c.getValue()]), console.log("Creating worker 3");
+            var e = function (a) {
+                    var c = a.data,
+                        e = a.data.range;
+                    c.action === "insertText" && c.text === "\n" && b.shiftTokens(e.start.row, 1), c.action === "insertLines" && b.shiftTokens(e.start.row, c.lines.length), c.action === "removeText" && c.text === "\n" && b.unshiftTokens(e.start.row, 1), c.action === "removeLines" && b.unshiftTokens(e.start.row, c.lines.length), d.emit("change", a)
+                };
+            return c.on("change", e), this.debugWorker && (d.on("log", function (a) {
+                console.log("worker:" + a.data)
+            }), d.on("debug", function (a) {
+                console.log(a.data)
+            })), d.on("loaded", function (a) {
+                l = (new Date).getTime(), console.log("Loading completed in " + (l - k) + " ms."), d.call("setValue", [c.getValue()])
+            }), d.on("jsglr", function (c) {
+                b.setTokens(c.data.parsed), a.setAnnotations(c.data.errors)
+            }), d.on("terminate", function () {
+                c.removeListener("change", e), a.clearAnnotations()
+            }), this.$worker = d, d
+        }
+    })).call(j.prototype), b.Mode = j
+}), define("ace/mode/spoofax2ace_tokenizer", ["require", "exports", "module", "ace/lib/oop", "ace/lib/event_emitter"], function (a, b, c) {
+    var d = a("ace/lib/oop"),
+        e = a("ace/lib/event_emitter").EventEmitter,
+        f = function () {
+            this.parsed = []
+        };
+    ((function () {
+        d.implement(this, e), this.fireUpdateEvent = function (a, b) {
+            var c = {
+                first: a,
+                last: b
+            };
+            this._dispatchEvent("update", {
+                data: c
+            })
+        }, this.setTokens = function (a) {
+            this.parsed = a, this.fireUpdateEvent(0, undefined)
+        }, this.shiftTokens = function (a, b) {
+            var c = [a, 0];
+            for (var d = 0; d < b; d++) c.push({});
+            Array.prototype.splice.apply(this.parsed, c)
+        }, this.unshiftTokens = function (a, b) {
+            this.parsed.splice(a, b)
+        }, this.unknownLine = function (a) {
+            tokens = [];
+            var b = {
+                type: "plain",
+                value: a
+            };
+            return tokens.push(b), tokens
+        }, this.getLineTokens = function (a, b) {
+            var c = [];
+            b === "start" && (b = 0);
+            var d = this.parsed[b];
+            return d === undefined || d.text !== a || d.tokens.length === 0 ? c = this.unknownLine(a) : c = d.tokens, {
+                tokens: c,
+                state: b + 1
+            }
+        }
+    })).call(f.prototype), b.SpoofaxToAceTokenizer = f
+}), define("ace/mode/matching_brace_outdent", ["require", "exports", "module", "ace/range"], function (a, b, c) {
+    var d = a("../range").Range,
+        e = function () {};
+    ((function () {
+        this.checkOutdent = function (a, b) {
+            return /^\s+$/.test(a) ? /^\s*\}/.test(b) : !1
+        }, this.autoOutdent = function (a, b) {
+            var c = a.getLine(b),
+                e = c.match(/^(\s*\})/);
+            if (!e) return 0;
+            var f = e[1].length,
+                g = a.findMatchingBracket({
+                    row: b,
+                    column: f
+                });
+            if (!g || g.row == b) return 0;
+            var h = this.$getIndent(a.getLine(g.row));
+            a.replace(new d(b, 0, b, f - 1), h)
+        }, this.$getIndent = function (a) {
+            var b = a.match(/^(\s+)/);
+            return b ? b[1] : ""
+        }
+    })).call(e.prototype), b.MatchingBraceOutdent = e
+}), define("ace/worker/worker_client", ["require", "exports", "module", "ace/lib/oop", "ace/lib/event_emitter"], function (a, b, c) {
+    var d = a("../lib/oop"),
+        e = a("../lib/event_emitter").EventEmitter,
+        f = function (b, c, d, e) {
+            this.changeListener = this.changeListener.bind(this);
+            if (window.require.packaged) var f = this.$guessBasePath(),
+                g = this.$worker = new Worker(f + c);
+            else {
+                var h = this.$normalizePath(a.nameToUrl("ace/worker/worker", null, "_")),
+                    g = this.$worker = new Worker(h),
+                    i = {};
+                for (var j = 0; j < b.length; j++) {
+                    var k = b[j],
+                        l = this.$normalizePath(a.nameToUrl(k, null, "_").replace(/.js$/, ""));
+                    i[k] = l
+                }
+            }
+            this.$worker.postMessage({
+                init: !0,
+                tlns: i,
+                module: d,
+                classname: e
+            }), this.callbackId = 1, this.callbacks = {};
+            var m = this;
+            this.$worker.onerror = function (a) {
+                throw window.console && console.log && console.log(a), a
+            }, this.$worker.onmessage = function (a) {
+                var b = a.data;
+                switch (b.type) {
+                case "log":
+                    window.console && console.log && console.log(b.data);
+                    break;
+                case "event":
+                    m._dispatchEvent(b.name, {
+                        data: b.data
+                    });
+                    break;
+                case "call":
+                    var c = m.callbacks[b.id];
+                    c && (c(b.data), delete m.callbacks[b.id])
+                }
+            }
+        };
+    ((function () {
+        d.implement(this, e), this.$normalizePath = function (a) {
+            return a.match(/^\w+:/) || (a = location.protocol + "//" + location.host + (a.charAt(0) == "/" ? "" : location.pathname.replace(/\/[^\/]*$/, "")) + "/" + a.replace(/^[\/]+/, "")), a
+        }, this.$guessBasePath = function () {
+            if (a.aceBaseUrl) return a.aceBaseUrl;
+            var b = document.getElementsByTagName("script");
+            for (var c = 0; c < b.length; c++) {
+                var d = b[c],
+                    e = d.getAttribute("data-ace-base");
+                if (e) return e.replace(/\/*$/, "/");
+                var f = d.src || d.getAttribute("src");
+                if (!f) continue;
+                var g = f.match(/^(?:(.*\/)ace\.js|(.*\/)ace-uncompressed\.js)(?:\?|$)/);
+                if (g) return g[1] || g[2]
+            }
+            return ""
+        }, this.terminate = function () {
+            this._dispatchEvent("terminate", {}), this.$worker.terminate(), this.$worker = null, this.$doc.removeEventListener("change", this.changeListener), this.$doc = null
+        }, this.send = function (a, b) {
+            this.$worker.postMessage({
+                command: a,
+                args: b
+            })
+        }, this.call = function (a, b, c) {
+            if (c) {
+                var d = this.callbackId++;
+                this.callbacks[d] = c, b.push(d)
+            }
+            this.send(a, b)
+        }, this.emit = function (a, b) {
+            try {
+                this.$worker.postMessage({
+                    event: a,
+                    data: {
+                        data: b.data
+                    }
+                })
+            } catch (c) {}
+        }, this.attachToDocument = function (a) {
+            this.$doc && this.terminate(), this.$doc = a, this.call("setValue", [a.getValue()]), a.on("change", this.changeListener)
+        }, this.changeListener = function (a) {
+            a.range = {
+                start: a.data.range.start,
+                end: a.data.range.end
+            }, this.emit("change", a)
+        }
+    })).call(f.prototype), b.WorkerClient = f
+})

Added: spoofax-ace/resources/javascript/measurements.js
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-ace/resources/javascript/measurements.js	Fri Feb 24 02:42:56 2012	(r24392)
@@ -0,0 +1,105 @@
+/**
+ * @author Richard Vogelij
+ * Functions meant to provide a hook into gathering runtime statistics and 
+ * automatically posting these to a stats collecting database.
+ * 
+ * Data can be used to perform analysis work.
+ * 
+ * This is currently a static information container. Resets after each use.
+ */
+
+var DATACOLLECTINGSERVERURL = "http://192.168.1.125:1337";
+StrategoJSDataCollect = {};
+var StrategoJSDataCollectors = new Array();
+
+
+/*
+ * @name: name of the language
+ * @extrainfo: arbitrary extra info regarding the type of work (analyze/parse/etc)
+ */
+StrategoJSDataCollect.StartWork = function(taskName)
+{
+	var r = {
+			startTime : new Date(),
+			stopTime : null
+	};
+	StrategoJSDataCollectors[taskName] = r;
+}
+
+
+/*
+ * Posts the gathered data to a simple tcp socket using a hacky xmlhttprequest.
+ *  @xaxis: Horizontal metric of the data. E.g. #Lines of code processed/# of errors produced/avg or max Depth of tree
+ */
+
+StrategoJSDataCollect.FinishedWork = function(taskName)
+{
+	if (StrategoJSDataCollectors[taskName] !== undefined)
+	{
+		if (StrategoJSDataCollectors[taskName].stopTime !== null)
+			throw "Datacollector for "+taskName+" was already stopped";
+		StrategoJSDataCollectors[taskName].stopTime = new Date();
+		StrategoJSDataCollectors[taskName].elapsed = StrategoJSDataCollectors[taskName].stopTime - StrategoJSDataCollectors[taskName].startTime; 
+	}
+}
+
+/*
+ * Sends the recorded elapsed time to the datacollector.
+ */
+
+StrategoJSDataCollect.RecordData = function(taskName, langName, metricName, metricValue)
+{
+
+	if (StrategoJSDataCollectors[taskName] !== undefined)
+	{
+		var collected = StrategoJSDataCollectors[taskName];
+		if (collected.elapsed !== undefined)
+			postStats(langName, getJsEngineString() + "_" + metricName + "_" + taskName, metricValue, collected.elapsed);
+	}
+
+	function postStats(langstr, idstr, xaxis, yaxis) {
+		var post = "#"+idstr+"#"+langstr+"#"+xaxis+"#"+yaxis+"#";
+		logger(post);
+		return;
+	}
+	
+	function logger(str) {
+		var xmlhttpreq;
+		try
+		{
+			//Required when running from CLI (on V8)
+			xmlhttpreq  = require("./XMLHttpRequest.js").XMLHttpRequest;
+		} catch (err) {
+			xmlhttpreq = XMLHttpRequest;
+		}
+		try
+		{
+			xmlhttp=new xmlhttpreq();
+			xmlhttp.open("POST", DATACOLLECTINGSERVERURL, false);
+			xmlhttp.setRequestHeader(str, 'hack');//chrome Access-Control-Allow-Origin hack. Just want to send a string over. Let server handle retrieval
+			xmlhttp.send("x", false);
+		} catch (err)
+		{
+			//console.log("Error while posting statistics: " + err.message);
+		}
+		return;
+	}
+	
+	function getJsEngineString()
+	{
+		try
+		{
+			var usragent = navigator.userAgent.toLowerCase();
+			if (usragent.indexOf("chrome") > -1) return "chrome";
+			if (usragent.indexOf("netscape") > -1) return "firefox";
+			if (usragent.indexOf("firefox") > -1) return "firefox";
+			if (usragent.indexOf("node-js") > -1) return "nodejs";
+			
+			return "unknown";
+		}
+		catch (err)
+		{
+			return "cli";
+		}
+	}
+}
\ No newline at end of file

Modified: spoofax-ace/src/spoofax/ace/SpoofaxToAce.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/SpoofaxToAce.java	Thu Feb 23 18:45:49 2012	(r24391)
+++ spoofax-ace/src/spoofax/ace/SpoofaxToAce.java	Fri Feb 24 02:42:56 2012	(r24392)
@@ -20,7 +20,7 @@
  */
 public class SpoofaxToAce {
 	
-	final static String _version 		= "0.2";
+	final static String _version 		= "0.21";
 	final static String P_SPOOFAXDIR 	= "--i";
 	final static String P_JSSGLRJSFILE 	= "--jssglr";
 	final static String P_STR2JSDIR 	= "--s2js";

Modified: spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java	Thu Feb 23 18:45:49 2012	(r24391)
+++ spoofax-ace/src/spoofax/ace/generator/S2AEntryPoint.java	Fri Feb 24 02:42:56 2012	(r24392)
@@ -28,11 +28,22 @@
 	        "    real-main: sourcecode -> <print-elapsed(<prim(\"JSSGLR_ACE_TOKENIZE\", parser)>(ast, [errors, warnings, notes]) | \"Tokenized\")>    \n" +
 	        "      where print-elapsed(table := <import-term("+esvParser.GetTableName()+")>|\"Loaded parsetable\") \n" +
 	        "      where print-elapsed(parser := <prim(\"JSSGLR_GET_PARSER\")>table|\"Loaded parser\") \n" +
+	        //StrategoJSDataCollect.RecordData = function(taskName, langName, metricName, metricValue)
+	        
+	        "      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.StartWork('parse'); ] \n" +
 	        "      where print-elapsed(ast := <prim(\"JSSGLR_PARSE_STRING\",parser)>sourcecode|\"Parsed source\")\n" +
-	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(ast, \"\", \"\")|\"Analyzed source\") \n"
+	        "      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.FinishedWork('parse'); ] \n" +
+	        "      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.RecordData('parse', '"+esvParser.GetCtreeName()+"', 'CharsOfCode', [ <strlen>sourcecode ]); ] \n" +
+	        "      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.RecordData('parse', '"+esvParser.GetCtreeName()+"', 'TermSize', [ <term-size>ast ]); ] \n" +
+	        
+			"      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.StartWork('analyze'); ] \n" +
+	        "      where print-elapsed((ast2,errors,warnings,notes) := <"+esvParser.GetSemanticObserverStrategy()+">(ast, \"\", \"\")|\"Analyzed source\") \n" +
+	        "      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.FinishedWork('analyze'); ] \n" +
+	        "      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.RecordData('analyze', '"+esvParser.GetCtreeName()+"', 'CharsOfCode', [ <strlen>sourcecode ]); ] \n" +
+	        "      where <prim(\"SSL_eval_js\")>$[ StrategoJSDataCollect.RecordData('analyze', '"+esvParser.GetCtreeName()+"', 'TermSize', [ <term-size>ast ]); ] \n" +
+	        ""
 			;
 			FileOutputStream fstream = new FileOutputStream(entryFile);
-			//BufferedWriter out = new BufferedWriter(fstream);
 			S2AUtils.WriteStringToStream(strategoMain, fstream); //out.write(strategoMain);
 			S2AUtils.WriteResourceToStream(owner, "/stratego/S2Alib.str", fstream);
 			fstream.flush();
@@ -43,4 +54,6 @@
 			throw new S2ASpoofaxSetupException();			
 		}
 	}
+	
+
 }

Modified: spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java
==============================================================================
--- spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Thu Feb 23 18:45:49 2012	(r24391)
+++ spoofax-ace/src/spoofax/ace/generator/S2AGenerator.java	Fri Feb 24 02:42:56 2012	(r24392)
@@ -50,10 +50,15 @@
 		S2AUtils.EmptyDir(tmpDir);
 	}
 	
+	public boolean SetupCloud9Plugin(String cloud9Path) throws S2ASpoofaxSetupException, S2AWrapperException, S2ACompilerException, S2AValidatorException, IOException
+	{
+		
+		return true;
+	}
+	
 	/*
 	 * Outputs an implementation of the ACE editor 
 	 */
-	
 	public boolean BuildAceEditor(String wwwoutput) throws S2ASpoofaxSetupException, S2AWrapperException, S2ACompilerException, S2AValidatorException, IOException
 	{
 		final String aceWorkerBin = tmpDir+"/aceworker.js";
@@ -70,6 +75,7 @@
 		BuildAceBackend(aceWorkerBin, wwwoutput);
 		BuildAceFrontEnd(wwwoutput, _mainSrcFile);
 		System.err.println("S2A Successfully built editor into: " + new File(wwwoutput).getAbsolutePath());
+		System.err.println("  Run with:  (cd "+new File(wwwoutput).getAbsolutePath()+"; ./static.py)");
 		return true;
 	}
 
@@ -101,7 +107,7 @@
 	{
 		CacheRequiredFiles(tmpDir, esvParser);
 		S2AEntryPoint.GenerateS2AEntry(getClass(), strategoEntry, esvParser);
-		CompileStratego(tmpDir, strategoEntry, jsbin);
+		CompileStratego2JS(tmpDir, strategoEntry, jsbin);
 	}
 	
 	/*
@@ -202,6 +208,9 @@
 		FileOutputStream wrappedStrProg;
 		try {
 			wrappedStrProg = new FileOutputStream(wrappedJs, true);
+			
+			S2AUtils.WriteResourceToStream(getClass(), "/javascript/measurements.js", wrappedStrProg);
+			
 			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/strategojs.js", wrappedStrProg);
 			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/terms.js", wrappedStrProg);
 			S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/srts.js", wrappedStrProg);
@@ -213,27 +222,29 @@
 			if (wrapForAce)
 				S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/ace-wrapper-end.js", wrappedStrProg);
 			else
+			{
+				S2AUtils.WriteStringToStream("var navigator = { userAgent: \"node-js\" }; \n", wrappedStrProg);//Nodejs gwt'd jssglr workaround
 				S2AUtils.WriteFileToStream(_str2jsPath + "/src/javascript/cli-wrapper.js", wrappedStrProg);
+			}
 			wrappedStrProg.flush();
 		} catch (IOException e) {
 			System.err.println("###CRITICAL ERROR### " + e.getMessage());
 			throw new S2AWrapperException();
 		}
-	}	
+	}
 	
 	/*
 	 * Actually compiles the stratego associated with the project's semantic check. 
 	 * Expects the file at @strategoProg to contain a `main` strategy    
 	 */
 	
-
-	private void CompileStratego(String tmpDir, String strategoProg, String jsOutput) throws S2ACompilerException
+	private void CompileStratego2JS(String tmpDir, String strategoProg, String jsOutput) throws S2ACompilerException
 	{
 		System.err.println("Compiling the stratego program...");
 		String arg =
         "-i " + strategoProg + " " +
+		"-la stratego-lib -la stratego-gpp -la stratego-rtg " +
         "-I " + _spoofaxProjDir + " " +
-		
 		"-I " + _strategoCtrees + " " +
 		"-I " + _strategoLib + "" +
 		"";

From gabrielkonat at gmail.com  Fri Feb 24 10:25:33 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 24 Feb 2012 09:25:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24393 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120224092533.7B8CB7F8012@mx1.tudelft.nl>

Author: gkonat
Date: Fri Feb 24 09:25:33 2012
New Revision: 24393
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24393&sc=1

Log:
Fixed returning duplicate terms in LANG_index_get_all_in_file primitive.

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_all_in_file.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_all_in_file.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_all_in_file.java	Fri Feb 24 02:42:56 2012	(r24392)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/LANG_index_get_all_in_file.java	Fri Feb 24 09:25:33 2012	(r24393)
@@ -29,7 +29,7 @@
 		if (isTermTuple(tvars[0]) || isTermString(tvars[0])) {
 			SemanticIndex idn = index.getCurrent();
 			List<SemanticIndexEntry> results = idn.getFile(tvars[0]).getEntries();
-			env.setCurrent(SemanticIndexEntry.toTerms(env.getFactory(), results));
+			env.setCurrent(SemanticIndexEntry.toTerms(env.getFactory(), results, false));
 			return true;
 		} else {
 			return false;

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Fri Feb 24 02:42:56 2012	(r24392)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Fri Feb 24 09:25:33 2012	(r24393)
@@ -255,7 +255,7 @@
 		ITermFactory terms = factory.getTermFactory();
 		IStrategoList results = terms.makeList();
 		for (SemanticIndexFile file : files.keySet()) {
-			IStrategoList fileResults = SemanticIndexEntry.toTerms(terms, file.getEntries());
+			IStrategoList fileResults = SemanticIndexEntry.toTerms(terms, file.getEntries(), false);
 			// TODO: include time stamp for file
 			IStrategoTerm result = terms.makeAppl(FILE_ENTRIES_CON, file.toTerm(terms), fileResults);
 			results = terms.makeListCons(result, results);

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java	Fri Feb 24 02:42:56 2012	(r24392)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java	Fri Feb 24 09:25:33 2012	(r24393)
@@ -136,14 +136,17 @@
 	 */
 	public final IStrategoList toTerms(ITermFactory factory) {
 		IStrategoList results = factory.makeList();
-		return toTerms(factory, results);
+		return toTerms(factory, results, true);
 	}
 
-	protected IStrategoList toTerms(ITermFactory factory, IStrategoList results) {
+	protected IStrategoList toTerms(ITermFactory factory, IStrategoList results, boolean lookAtNext) {
 		for (SemanticIndexEntry entry = this; entry != null; entry = entry.getNext()) {
 			IStrategoAppl result = entry.toTerm(factory);
 			if (result != null)
 				results = factory.makeListCons(result, results);
+			
+			if(!lookAtNext)
+				break;
 		}
 		
 		return results;
@@ -153,10 +156,10 @@
 	 * Returns a term representation of given entries and their tails as a list.
 	 * (Null for {@link SemanticIndexEntryParent} terms.)
 	 */
-	public static IStrategoList toTerms(ITermFactory factory, Iterable<SemanticIndexEntry> entries) {
+	public static IStrategoList toTerms(ITermFactory factory, Iterable<SemanticIndexEntry> entries, boolean lookAtNext) {
 		IStrategoList results = factory.makeList();
 		for (SemanticIndexEntry entry : entries) {
-			results = entry.toTerms(factory, results);
+			results = entry.toTerms(factory, results, lookAtNext);
 		}
 		return results;
 	}

From gabrielkonat at gmail.com  Fri Feb 24 13:21:33 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 24 Feb 2012 12:21:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24394 -
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor
	spoofax-contrib/...
Message-ID: <20120224122133.CB4447F8047@mx1.tudelft.nl>

Author: gkonat
Date: Fri Feb 24 12:21:32 2012
New Revision: 24394
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24394&sc=1

Log:
Added compilation based on differences from the last compilation.

Modified:
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str	Fri Feb 24 09:25:33 2012	(r24393)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str	Fri Feb 24 12:21:32 2012	(r24394)
@@ -129,6 +129,7 @@
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)
+  origin-file      = prim("SSL_EXT_origin_file", <id>)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
 

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Fri Feb 24 09:25:33 2012	(r24393)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Fri Feb 24 12:21:32 2012	(r24394)
@@ -17,9 +17,10 @@
   observer : editor-analyze                                                                                   
                                                                                                               
   builder  : "Show abstract syntax" = generate-aterm (openeditor) (realtime) (meta) (source)  
-  builder  : "Show analyzed syntax" = generate-analyzed (openeditor) (realtime) (source)
-  builder  : "Show index entries for current file" = index-currentfile (openeditor) (realtime) (source)   
-  builder  : "Show index entries for all files" = index-allfiles (openeditor) (realtime) (source)                                                                                                             
+  builder  : "Show analyzed syntax" = generate-analyzed (openeditor) (realtime) (meta) (source)
+  builder  : "Show index entries for current file" = index-currentfile (openeditor) (realtime) (meta) (source)   
+  builder  : "Show index entries for all files" = index-allfiles (openeditor) (realtime) (meta) (source)
+  builder  : "Clear index" = index-cleanall (meta) (source)                                                                                                       
 
 refactorings
                                                                                                                         

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Fri Feb 24 09:25:33 2012	(r24393)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Fri Feb 24 12:21:32 2012	(r24394)
@@ -58,6 +58,13 @@
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
       
+  index-cleanall:
+    (selected, position, ast, path, project-path)  -> None()
+    with
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-clear
+      
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
   editor-resolve:
     (node, position, ast, path, project-path) -> target

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 24 09:25:33 2012	(r24393)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 24 12:21:32 2012	(r24394)
@@ -18,7 +18,12 @@
   BadUse       : List(UriPart) -> Summary
   Read         : List(UriPart) -> Summary
   ReadWildcard : List(UriPart) * String -> Summary
+  Diff         : List(UriPart) * List(Summary) -> Summary
   
+  // Namespaces
+  Diff         : Namespace
+  
+  // Adjust lookup actions
   StopLookup   : LookupAction
   
 rules // extension points
@@ -110,9 +115,10 @@
       // Init
       index-setup(|language, [project-path], full-path)
     with
+      file := (full-path, ""); // TODO: Get subfile or add subfile param.
     	// Store copy of elements for diff and clear file
-      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> full-path;
-      <index-clear-file> full-path
+      oldElems := <filter(index-diff-constructors)> <index-get-all-in-file> file;
+      <index-clear-file> file
     with
       {| Index-ReadSet, Index-UnresolvedSet:
         readSet := <new-iset>;
@@ -123,27 +129,27 @@
        
         // Add Unresolved annotations, record globals
         (Some(ast2), defs) := <analyze-defs(|Anon(), Anon())> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
-        <index-add-all(|full-path)> defs;
+        <index-add-all(|file)> defs;
 
         // Find DefData
         ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2;
         data := <origin-track-forced(analyze-tree-data)> ast3;
-        <index-add-all(|full-path)> data;
+        <index-add-all(|file)> data;
 
         // Resolve an references in DefData (using what we just stored)
         (data', data-uses) := <analyze-uses> data;
-        <index-remove-all(|full-path)> data;
-        <index-add-all(|full-path)> data';
+        <index-remove-all(|file)> data;
+        <index-add-all(|file)> data';
        
         // Resolve all unresolved references in the tree
         (ast4, uses) := <analyze-uses> ast3;
-        <index-add-all(|full-path)> uses;
+        <index-add-all(|file)> uses;
         
         ast5 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast4;
        
         // Store reads into the index (if current language is not testing language)
         if not(<is-test-input(|language)> (ast, path)) then
-          <index-add-all(|full-path)> <iset-elements> readSet
+          <index-add-all(|file)> <iset-elements> readSet
         end
       |}
     with
@@ -159,7 +165,10 @@
 	      (added, removed) := (<map(analyze-to-def)> addedElems, <map(analyze-to-def)> removedElems);
 	      
 	      // Schedule re-analysis of files that have a Use or Read of a removed def and Read of an added def
-	      reanalyze-all(|added, removed, full-path)
+	      reanalyze-all(|added, removed, full-path); // TODO: Change this to file (with subfile)
+	      
+	      // Store added and removed elements in the index.
+	      analyze-store-diff(|added, removed, file)
 	    else
 	      (added, removed) := ([], [])
       end
@@ -192,6 +201,38 @@
   reanalyze-all(|added, removed, full-path) =
     analyze-all-changed-files(|added, removed, full-path);
     map(debug(!"Re-analyzing "); prim("SSL_EXT_queue_analysis"))
+    
+  analyze-store-diff(|added, removed, file): 
+    _ -> <id>
+    with
+      // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
+      changedEntries  := <conc> (added, removed);
+      changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
+      dependentFiles  := <index-get-dependent-files> changedEntries;
+      // Always add current file to diff because we cannot detect non definition changes like
+      // commenting out 'print x'.
+      files := <make-set> [file|<conc> (changedFiles, dependentFiles)];
+      
+      if not([] := files) then
+        storePath := <analyze-diff-path>;
+        <map(analyze-add-diff(|storePath))> files
+      end
+      
+  analyze-add-diff(|storePath):
+    file -> <id>
+    with
+      <index-add-all(|storePath)> [Diff([Diff(), ".internal"], file)]
+      
+  analyze-get-diffs:
+  	_ -> diffs
+  	with
+  		diffs := <make-set> <index-get-all-values> Diff([Diff(), ".internal"], ())
+      
+  analyze-clean-diff = 
+    analyze-diff-path; index-clear-file
+  		
+  analyze-diff-path = 
+    !"/.internal/diff"
  
   /**
    * Identifies all definitions in the tree
@@ -463,72 +504,35 @@
       if set := <Index-ReadSet> then
         <iset-add(|ReadWildcard([namespace | path], prefix'))> set
       end
-      
-  /**
-   * Gets a set of all references to other files the given file (and subfile) has, including the file itself.
-   *
-   * @param entryFilter Filter strategy that is applied to all entries of given file to only look
-   *                    at dependency constructs such as Use(_, _) or Read(_)
-   *
-   * Example:
-   *   <index-file-references(?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _))> "fullpath/file.ext" => 
-   *     [("fullpath/otherfile.ext", "subfile"), ...]
-   *   <index-file-references(?Use(_, _))> ("fullpath/file.ext", "subfile") => 
-   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
-   */
-  index-get-file-references(entryFilter):
-    file -> files
-    where
-      entries     := <index-get-all-in-file> file;
-      references  := <filter(entryFilter)> entries;
-      uris        := <filter(index-uri)> references;
-      defs        := <map(\uri -> Def(uri)\)> uris;
-      files       := <make-set> <mapconcat(index-get-files-of)> defs
-      
-  /**
-   * Convenience function for finding Read and Use dependencies to other files of given file and subfile.
-   *
-   * @see index-file-references(entryFilter)
-   *
-   * Example:
-   *   <index-file-dependencies> "fullpath/file.ext" => [("fullpath/otherfile.ext", "subfile"), ...]
-   *   <index-file-dependencies> ("fullpath/file.ext", "subfile") => 
-   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
-   */
-  index-get-file-dependencies = index-get-file-references(?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _))
-  
+
   /**
-   * Gets a set of all files that have a reference to the given file and subfile.
+   * Gets a set of all files that have a reference to the given definitions.
    *
-   * @param createFromDef Construction strategy that creates a list of reference constructs from all 
-   *                      defs of the given file, such as Def(uri) -> [Read(uri), Use(uri, [])]
+   * @param construct-from-def  Construction strategy that creates a list of reference constructs from all 
+   *                            given defs, such as Def(uri) -> [Read(uri), Use(uri, [])]
    *
    * Example:
-   *   <index-file-referenced(\Def(uri) -> [Read(uri), Use(uri, [])]\)> "fullpath/file.ext" => 
+   *   <index-get-referenced-files(\Def(uri) -> [Read(uri), Use(uri, [])]\)> [Def([Entity(), "Bar"]), ...] => 
    *     [("fullpath/otherfile.ext", "subfile"), ...]
-   *   <index-file-referenced(\Def(uri) -> [Read(uri), Use(uri, [])]\)> ("fullpath/file.ext", "subfile") => 
-   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
    */
-  index-get-referenced-files(constructFromDef):
-    file -> files
+  index-get-referenced-files(construct-from-def):
+    entries -> files
     where
-      entries     := <index-get-all-in-file> file;
       defs        := <filter(?Def(_))> entries;
-      referenced  := <concat> <filter(constructFromDef)> defs;
+      referenced  := <concat> <filter(construct-from-def)> defs;
       files       := <make-set> <mapconcat(index-get-files-of)> referenced
  
   /**
-   * Convenience function for finding files with Read and Use dependencies to the given file and subfile.
+   * Convenience function for finding files with Read and Use dependencies to the given definitions.
    *
-   * @see index-file-referenced(entryFilter)
+   * @see index-get-referenced-files(construct-from-def)
    * @see index-file-dependent-construct
    *
    * Example:
-   *   <index-file-dependent> "fullpath/file.ext" => [("fullpath/otherfile.ext", "subfile"), ...]
-   *   <index-file-dependent> ("fullpath/file.ext", "subfile") => 
-   *     [("fullpath/otherfile.ext", "othersubfile"), ...]
+   *   <index-get-dependent-files> [Def([Entity(), "Bar"]), ...] => [("fullpath/otherfile.ext", "subfile"), ...]
    */
-  index-get-dependent-files = index-get-referenced-files(index-file-dependent-construct)
+  index-get-dependent-files = 
+    index-get-referenced-files(index-file-dependent-construct)
      
 rules // index lookup rules (take into account adjust-index-lookup)
  
@@ -798,6 +802,8 @@
     Def(uri@[namespace | path]) -> [Read(uri), ReadWildcard([namespace | rest], firstElem), Use(uri, [])]
     where
       [firstElem | rest] := path
+      
+  index-file-dependency-filter = ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _)
  
   do-adjust-index-lookup(|namespace, path, use, prefix) =
     // UNDONE: try(origin-term);

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Fri Feb 24 09:25:33 2012	(r24393)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Fri Feb 24 12:21:32 2012	(r24394)
@@ -16,7 +16,7 @@
   index-schedule-compilation:
     <with(?(_, _, _, _, _) | "(selected, position, ast, path, project-path) tuple expected")> -> None()
     with
-      queue-strategy(|"index-compilation", "Compiling!")
+      queue-strategy(|"index-compilation", "Compiling! ???")
     
   index-compilation:
     (_, _, ast, path, project-path) -> <index-compilation(|path, project-path)> ast
@@ -29,22 +29,19 @@
       language  := <index-origin-language> ast;
       index-setup(|language, [project-path], full-path)
     with
-      // Get all changes files by looking at the timestamps.
-      changedFiles      := <index-timestamp-get-updates(|"compile")>;
+      // Determine the files to compile by looking at changed files.
+      diffs         := <analyze-get-diffs>;
+      files         := <map(index-compilation-restore-read-file)> diffs;
+      filteredFiles := <make-set> <remove-all(index-compilation-filter-file)> files;
       
-      // Determine the files to compile by looking at dependencies.
-      allDependentFiles := <make-set> <mapconcat(index-get-dependent-files)> changedFiles;
-      files             := <make-set> <conc> (allDependentFiles, changedFiles);
-      filteredFiles     := <remove-all(index-compilation-filter-file)> files;
-      
-      // Restore compile time reads.
-      <filter(index-compilation-restore-reads)> filteredFiles;
+      // Clean compile time reads.
+      <filter(index-compilation-clean-reads)> filteredFiles;
       
       // Compile the files
       <filter(index-compilation-file(|language, project-path))> filteredFiles;
       
-      // Update timestamps to current time.
-      index-timestamp-set-updated(|"compile")
+      // Clean diffs
+      analyze-clean-diff
 
   index-compilation-file(|language, project-path):
     (file, subfile) -> None()
@@ -66,16 +63,22 @@
         <index-add-all(|<index-compilation-file-tuple> (file, subfile))> reads
       |}
 
-  index-compilation-restore-reads:
-    (file, subfile) -> None()
+  index-compilation-filter-file = 
+    ?(<id>, _); (is-test-file <+ index-is-fake-file <+ not(file-exists))
+
+rules // Compile time reads
+
+  index-compilation-restore-read-file:
+    (file, subfile) -> (file', subfile)
     with
-      compilationFiles := <index-compilation-file-tuple> (file, subfile);
-      reads := <index-get-all-in-file> compilationFiles;
-      <index-add-all(|(file, subfile))> reads;
-      <index-clear-file> compilationFiles
+      file' := <string-replace(|<index-compilation-read-path>, "")> file
+      
+  index-compilation-clean-reads = 
+    ?(file, subfile); index-compilation-file-tuple; index-clear-file
       
   index-compilation-file-tuple:
-    (file, subfile) -> ($[/.internal/reads/compile/[file]], subfile)
+    (file, subfile) -> ($[[<index-compilation-read-path>]/[file]], subfile)
     
-  index-compilation-filter-file = 
-    ?(<id>, _); (is-test-file <+ index-is-fake-file <+ not(file-exists))
+  index-compilation-read-path =
+    !"/.internal/reads/compile"
+    
\ No newline at end of file

From m.dejonge at tudelft.nl  Fri Feb 24 13:31:05 2012
From: m.dejonge at tudelft.nl (Maartje de Jonge)
Date: Fri, 24 Feb 2012 12:31:05 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24395 -
	spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util
Message-ID: <20120224123105.20659CC18B@mx4.tudelft.nl>

Author: MaartjeDeJonge
Date: Fri Feb 24 12:31:04 2012
New Revision: 24395
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24395&sc=1

Log:
sorting the textual changes

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/layout-adaption.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/layout-adaption.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/layout-adaption.str	Fri Feb 24 12:21:32 2012	(r24394)
+++ spoofax-imp/trunk/org.strategoxt.imp.generator/src/sdf2imp/util/layout-adaption.str	Fri Feb 24 12:31:04 2012	(r24395)
@@ -207,7 +207,7 @@
 apply-text-changes:
 	(text-changes, text, start-offset) -> changed-text
 	where 
-		ordered-text-changes := <make-set; filter(is-modification); sort-list(LSort(compare-text-change))> text-changes;
+		ordered-text-changes := <make-set; filter(is-modification); qsort(compare-text-change)> text-changes;
 		<assert-valid-textual-changes> ordered-text-changes;
 		changed-text := <foldr(!(start-offset, text), apply-textual-change); Snd> ordered-text-changes
 
@@ -230,7 +230,7 @@
 		result-text := <conc-strings> (<implode-string> prefix, text-change, <implode-string> suffix) 
 		
 compare-text-change = 
-		?(((start-x, end-x),x), ((start-y, end-y),y));
+		?((start-x, end-x, x), (start-y, end-y, y));
 		not(
 			<lt> (start-x, start-y) <+ 
 			<eq> (start-x, start-y); <lt> (end-x, end-y)

From gabrielkonat at gmail.com  Fri Feb 24 14:07:33 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 24 Feb 2012 13:07:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24396 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120224130733.3EDA57F8038@mx1.tudelft.nl>

Author: gkonat
Date: Fri Feb 24 13:07:32 2012
New Revision: 24396
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24396&sc=1

Log:
Only trigger compilation for current file if AST changes.

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 24 12:31:04 2012	(r24395)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 24 13:07:32 2012	(r24396)
@@ -22,6 +22,7 @@
   
   // Namespaces
   Diff         : Namespace
+  ASTDiff      : Namespace
   
   // Adjust lookup actions
   StopLookup   : LookupAction
@@ -168,7 +169,7 @@
 	      reanalyze-all(|added, removed, full-path); // TODO: Change this to file (with subfile)
 	      
 	      // Store added and removed elements in the index.
-	      analyze-store-diff(|added, removed, file)
+	      analyze-store-diff(|added, removed, file, ast)
 	    else
 	      (added, removed) := ([], [])
       end
@@ -202,20 +203,26 @@
     analyze-all-changed-files(|added, removed, full-path);
     map(debug(!"Re-analyzing "); prim("SSL_EXT_queue_analysis"))
     
-  analyze-store-diff(|added, removed, file): 
+  analyze-store-diff(|added, removed, file, ast): 
     _ -> <id>
     with
       // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
       changedEntries  := <conc> (added, removed);
       changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
       dependentFiles  := <index-get-dependent-files> changedEntries;
-      // Always add current file to diff because we cannot detect non definition changes like
-      // commenting out 'print x'.
-      files := <make-set> [file|<conc> (changedFiles, dependentFiles)];
+      files := <conc> (changedFiles, dependentFiles);
       
-      if not([] := files) then
+      if not(<analyze-astdiff(|ast)> file) then
+      	// Add current file if the AST has changed. Cannot use dependency tracking here because
+      	// the originating file of a removed definition is not in the index any more.
+      	files' := <make-set> [file|files] 
+    	else
+    		files' := <make-set> files
+  		end;
+      
+      if not([] := files') then
         storePath := <analyze-diff-path>;
-        <map(analyze-add-diff(|storePath))> files
+        <map(analyze-add-diff(|storePath))> files'
       end
       
   analyze-add-diff(|storePath):
@@ -227,9 +234,27 @@
   	_ -> diffs
   	with
   		diffs := <make-set> <index-get-all-values> Diff([Diff(), ".internal"], ())
+  		
+  // Fails if old ASTDiff is not found or if ASTDiff is different.
+  analyze-astdiff(|ast):
+    (file, subfile) -> <id>
+    where
+      storePath := <analyze-diff-path>;
+    	newChecksum := <checksum> ast;
+      if oldChecksum := <index-get-value> Diff([ASTDiff(), file, ".internal"], ()) then
+        <index-remove-all(|storePath)> [Diff([ASTDiff(), file, ".internal"], ())];
+	      <index-add-all(|storePath)> [Diff([ASTDiff(), file, ".internal"], newChecksum)];
+        <eq> (oldChecksum, newChecksum)
+    	else
+    		<index-add-all(|storePath)> [Diff([ASTDiff(), file, ".internal"], newChecksum)];
+    		fail
+  		end
       
-  analyze-clean-diff = 
-    analyze-diff-path; index-clear-file
+  analyze-clean-diff:
+  	_ -> <id>
+  	with
+  		storePath := <analyze-diff-path>; 
+      <index-remove-all(|storePath)> [Diff([Diff(), ".internal"], ())]
   		
   analyze-diff-path = 
     !"/.internal/diff"

From gabrielkonat at gmail.com  Fri Feb 24 15:18:22 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 24 Feb 2012 14:18:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24397 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120224141822.D89CD2B802B@mx2.tudelft.nl>

Author: gkonat
Date: Fri Feb 24 14:18:22 2012
New Revision: 24397
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24397&sc=1

Log:
Don't store compile time reads in the regular file index.

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Fri Feb 24 13:07:32 2012	(r24396)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/compilation-library.str	Fri Feb 24 14:18:22 2012	(r24397)
@@ -59,7 +59,6 @@
         
         // Store compile-time reads.
         reads := <iset-elements> readSet;
-        <index-add-all(|(file, subfile))> reads;
         <index-add-all(|<index-compilation-file-tuple> (file, subfile))> reads
       |}
 

From gabrielkonat at gmail.com  Fri Feb 24 15:34:14 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 24 Feb 2012 14:34:14 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24398 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120224143414.827E42B800B@mx2.tudelft.nl>

Author: gkonat
Date: Fri Feb 24 14:34:14 2012
New Revision: 24398
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24398&sc=1

Log:
Use URI's in index-get-referenced-files, not Defs.

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 24 14:18:22 2012	(r24397)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Fri Feb 24 14:34:14 2012	(r24398)
@@ -531,26 +531,26 @@
       end
 
   /**
-   * Gets a set of all files that have a reference to the given definitions.
+   * Gets a set of all files that have a reference to the given index entries.
    *
-   * @param construct-from-def  Construction strategy that creates a list of reference constructs from all 
-   *                            given defs, such as Def(uri) -> [Read(uri), Use(uri, [])]
+   * @param construct-from-uri  Construction strategy that creates a list of reference constructs from all 
+   *                            given entries, such as \uri -> [Read(uri), Use(uri, [])]\
    *
    * Example:
-   *   <index-get-referenced-files(\Def(uri) -> [Read(uri), Use(uri, [])]\)> [Def([Entity(), "Bar"]), ...] => 
+   *   <index-get-referenced-files(\uri -> [Read(uri), Use(uri, [])]\)> [Def([Entity(), "Bar"]), ...] => 
    *     [("fullpath/otherfile.ext", "subfile"), ...]
    */
-  index-get-referenced-files(construct-from-def):
+  index-get-referenced-files(construct-from-uri):
     entries -> files
     where
-      defs        := <filter(?Def(_))> entries;
-      referenced  := <concat> <filter(construct-from-def)> defs;
+      defs        := <filter(index-uri)> entries;
+      referenced  := <concat> <filter(construct-from-uri)> defs;
       files       := <make-set> <mapconcat(index-get-files-of)> referenced
  
   /**
    * Convenience function for finding files with Read and Use dependencies to the given definitions.
    *
-   * @see index-get-referenced-files(construct-from-def)
+   * @see index-get-referenced-files(construct-from-uri)
    * @see index-file-dependent-construct
    *
    * Example:
@@ -824,7 +824,7 @@
   index-add-unresolved(|x, uri) = (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
   
   index-file-dependent-construct: 
-    Def(uri@[namespace | path]) -> [Read(uri), ReadWildcard([namespace | rest], firstElem), Use(uri, [])]
+    uri@[namespace | path] -> [Read(uri), ReadWildcard([namespace | rest], firstElem), Use(uri, [])]
     where
       [firstElem | rest] := path
       

From andre.s.d.vieira at gmail.com  Fri Feb 24 15:49:09 2012
From: andre.s.d.vieira at gmail.com (Andre Vieira)
Date: Fri, 24 Feb 2012 14:49:09 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24399 - in
	spoofax-imp/branches/spoofax-testing-automation: . META-INF
	editor editor/java/org/strategoxt/imp/testing/strategies lib
	syntax test trans trans/coverage trans/...
Message-ID: <20120224144909.774C47F8015@mx1.tudelft.nl>

Author: AndreVieira
Date: Fri Feb 24 14:49:09 2012
New Revision: 24399
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24399&sc=1

Log:
Integrated Automated testing in a branch project and removed some inline recursion code!

Added:
   spoofax-imp/branches/spoofax-testing-automation/editor/Spoofax-Testing-Outliner.generated.esv
   spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/apply_inline_coverage_0_2.java
   spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/build_0_3.java
   spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/change_files_0_2.java
   spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/finish_coverage_0_2.java
   spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/generate_string_from_reg_0_1.java
   spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/get_compiler_def_0_2.java
   spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/get_language_def_0_1.java
   spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/run_0_2.java
   spoofax-imp/branches/spoofax-testing-automation/syntax/Spoofax-AutomatedTesting.sdf
   spoofax-imp/branches/spoofax-testing-automation/syntax/Spoofax-Testing.generated.pp
   spoofax-imp/branches/spoofax-testing-automation/test/
   spoofax-imp/branches/spoofax-testing-automation/test/randomtesting.aterm
   spoofax-imp/branches/spoofax-testing-automation/test/randomtesting.spt
   spoofax-imp/branches/spoofax-testing-automation/trans/coverage/
   spoofax-imp/branches/spoofax-testing-automation/trans/coverage/construct-text.str
   spoofax-imp/branches/spoofax-testing-automation/trans/coverage/coverage.str
   spoofax-imp/branches/spoofax-testing-automation/trans/coverage/layout-adaption.str
   spoofax-imp/branches/spoofax-testing-automation/trans/coverage/origin-tracking.str
   spoofax-imp/branches/spoofax-testing-automation/trans/random/
   spoofax-imp/branches/spoofax-testing-automation/trans/random/fix-errors.str
   spoofax-imp/branches/spoofax-testing-automation/trans/random/generate-program.str
   spoofax-imp/branches/spoofax-testing-automation/trans/random/random_test.str
   spoofax-imp/branches/spoofax-testing-automation/trans/random/read-sdf.str
   spoofax-imp/branches/spoofax-testing-automation/trans/random/xeger.str
Modified:
   spoofax-imp/branches/spoofax-testing-automation/.classpath
   spoofax-imp/branches/spoofax-testing-automation/META-INF/MANIFEST.MF
   spoofax-imp/branches/spoofax-testing-automation/build.main.xml
   spoofax-imp/branches/spoofax-testing-automation/editor/   (props changed)
   spoofax-imp/branches/spoofax-testing-automation/editor/Spoofax-Testing-Builders.esv
   spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/InteropRegisterer.java
   spoofax-imp/branches/spoofax-testing-automation/lib/editor-common.generated.str
   spoofax-imp/branches/spoofax-testing-automation/syntax/Spoofax-Testing.sdf
   spoofax-imp/branches/spoofax-testing-automation/trans/spoofax_testing.str

Modified: spoofax-imp/branches/spoofax-testing-automation/.classpath
==============================================================================
--- spoofax-imp/branches/spoofax-testing-automation/.classpath	Fri Feb 24 14:34:14 2012	(r24398)
+++ spoofax-imp/branches/spoofax-testing-automation/.classpath	Fri Feb 24 14:49:09 2012	(r24399)
@@ -4,5 +4,7 @@
 	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
 	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
 	<classpathentry kind="con" path="org.eclipse.jdt.junit.JUNIT_CONTAINER/4"/>
+	<classpathentry kind="lib" path="include/automaton.jar"/>
+	<classpathentry kind="lib" path="include/xeger-1.0-SNAPSHOT.jar"/>
 	<classpathentry kind="output" path="bin"/>
 </classpath>

Modified: spoofax-imp/branches/spoofax-testing-automation/META-INF/MANIFEST.MF
==============================================================================
--- spoofax-imp/branches/spoofax-testing-automation/META-INF/MANIFEST.MF	Fri Feb 24 14:34:14 2012	(r24398)
+++ spoofax-imp/branches/spoofax-testing-automation/META-INF/MANIFEST.MF	Fri Feb 24 14:49:09 2012	(r24399)
@@ -4,7 +4,8 @@
 Bundle-SymbolicName: org.strategoxt.imp.testing; singleton:=true
 Bundle-Version: 1.0.1.qualifier
 Bundle-Activator: org.strategoxt.imp.testing.Activator
-Import-Package: org.osgi.framework
+Import-Package: org.eclipse.ltk.core.refactoring,
+ org.osgi.framework
 Require-Bundle: org.strategoxt.imp.runtime,
  org.eclipse.core.runtime,
  org.eclipse.imp.runtime,

Modified: spoofax-imp/branches/spoofax-testing-automation/build.main.xml
==============================================================================
--- spoofax-imp/branches/spoofax-testing-automation/build.main.xml	Fri Feb 24 14:34:14 2012	(r24398)
+++ spoofax-imp/branches/spoofax-testing-automation/build.main.xml	Fri Feb 24 14:49:09 2012	(r24399)
@@ -27,7 +27,11 @@
                         -I &quot;${basedir}&quot;
                         -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -la stratego-sdf"/>
         
-        <!-- Optional: external .def and .jar locations
+        <!-- Optional: external .def and .jar locations -->
+		<property name="externaljar" value="include/xeger-1.0-SNAPSHOT.jar"/>
+		<property name="externaljar2" value="include/automaton.jar"/>
+		
+        <!--
         <property name="externaldef" location="syntax/${sdfmodule}.def"/>
         <property name="externaljar" value="../lib.jar"/>
         <property name="externaljarflags" value="-la org.lib"/>
@@ -47,5 +51,5 @@
         <import file="build.generated.xml"/>
     
         <!-- Main target -->
-        <target name="all" depends="spoofaximp.default.jar"/>
+        <target name="all" depends="spoofaximp.default.ctree"/>
     </project>

Modified: spoofax-imp/branches/spoofax-testing-automation/editor/Spoofax-Testing-Builders.esv
==============================================================================
--- spoofax-imp/branches/spoofax-testing-automation/editor/Spoofax-Testing-Builders.esv	Fri Feb 24 14:34:14 2012	(r24398)
+++ spoofax-imp/branches/spoofax-testing-automation/editor/Spoofax-Testing-Builders.esv	Fri Feb 24 14:49:09 2012	(r24399)
@@ -11,8 +11,10 @@
 
 builders
   // on save  : generate-artifacts                                                                                                                             
-  provider : include/spoofax_testing.jar                                                                    
+  provider : include/spoofax_testing.ctree                                                                   
   provider : include/spoofax_testing-java.jar                                                                 
+  provider : include/xeger-1.0-SNAPSHOT.jar
+  provider : include/automaton.jar    
                                                                                                                                
   observer : editor-analyze                                                                                   
                                                                                                                                
@@ -20,5 +22,7 @@
   builder  : "Generate missing output file with current AST" = generate-ast-file (cursor)              
   builder  : "Run testsuites" = test-runner
   builder  : "Run testsuite (current file)" = test-runner-file
+  builder  : "Generate Random Tests" = generate-random-tests (openeditor) (meta)
+
                                                                                                                                
   //on save : generate-java                                                                                                    
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/editor/Spoofax-Testing-Outliner.generated.esv
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/editor/Spoofax-Testing-Outliner.generated.esv	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,17 @@
+module Spoofax-Testing-Outliner.generated
+
+outliner Default outliner        
+  
+  
+  // Outliner rules indicate which syntactic constructs should be shown in the outline
+  // and quick outline views, and take one of the following forms:
+  //
+  //   <sort>.<constructor>
+  //
+  //   <sort>._
+  //
+  //   _.<constructor>
+  
+  ErrorMatch.ErrMatchCons
+  Fix.Node
+  DestinationMatch.DestMatchCons
\ No newline at end of file

Modified: spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/InteropRegisterer.java
==============================================================================
--- spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/InteropRegisterer.java	Fri Feb 24 14:34:14 2012	(r24398)
+++ spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/InteropRegisterer.java	Fri Feb 24 14:49:09 2012	(r24399)
@@ -24,6 +24,14 @@
         		   testlistener_start_testcase_0_2.instance,
         		   testlistener_finish_testcase_0_3.instance,
         		   parse_spt_file_0_0.instance,
-        		   get_completion_input_term_0_1.instance });
+        		   get_completion_input_term_0_1.instance,
+        		   apply_inline_coverage_0_2.instance,
+        		   build_0_3.instance,
+        		   change_files_0_2.instance,
+        		   finish_coverage_0_2.instance,
+        		   generate_string_from_reg_0_1.instance,
+        		   get_compiler_def_0_2.instance,
+        		   get_language_def_0_1.instance,
+        		   run_0_2.instance});
          }
        }

Added: spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/apply_inline_coverage_0_2.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/apply_inline_coverage_0_2.java	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,289 @@
+package org.strategoxt.imp.testing.strategies;
+
+import static org.spoofax.interpreter.core.Tools.asJavaString;
+import static org.spoofax.interpreter.core.Tools.isTermList;
+import static org.spoofax.interpreter.core.Tools.isTermTuple;
+import static org.spoofax.interpreter.core.Tools.termAt;
+import static org.spoofax.jsglr.client.imploder.ImploderAttachment.getLeftToken;
+import static org.spoofax.jsglr.client.imploder.ImploderAttachment.hasImploderOrigin;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashSet;
+
+
+
+import org.eclipse.core.resources.IFolder;
+
+import org.eclipse.core.resources.IProject;
+
+import org.eclipse.core.resources.IResource;
+
+import org.eclipse.core.resources.IWorkspaceRoot;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.IPath;
+
+import org.eclipse.core.runtime.OperationCanceledException;
+import org.eclipse.core.runtime.Path;
+
+
+import org.eclipse.ltk.core.refactoring.Change;
+import org.eclipse.ltk.core.refactoring.CompositeChange;
+import org.eclipse.ltk.core.refactoring.RefactoringStatus;
+import org.eclipse.ltk.core.refactoring.TextFileChange;
+import org.spoofax.interpreter.core.InterpreterErrorExit;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.core.InterpreterExit;
+import org.spoofax.interpreter.core.Tools;
+import org.spoofax.interpreter.core.UndefinedStrategyException;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+
+import org.spoofax.terms.StrategoString;
+import org.spoofax.terms.attachments.OriginAttachment;
+
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.services.StrategoObserver;
+
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+import org.strategoxt.imp.runtime.stratego.SourceAttachment;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * Java strategy to apply coverage rules!
+ */
+public class apply_inline_coverage_0_2 extends Strategy {
+
+	public static apply_inline_coverage_0_2 instance = new apply_inline_coverage_0_2();
+
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm newProjectName, IStrategoTerm ast) {
+			ITermFactory factory = context.getFactory();
+			try {
+			
+			String projectPath = ((EditorIOAgent) context.getIOAgent()).getProjectPath();
+			IProject project = ((EditorIOAgent) context.getIOAgent()).getProject();
+			StrategoObserver observer = ObserverCache.getInstance().getObserver("Spoofax-Testing", project, projectPath);
+			
+			IProject hostProject = observer.getProject();
+			IWorkspaceRoot workspace = hostProject.getWorkspace().getRoot();
+			IPath newPath = new Path(asJavaString(newProjectName));
+			IProject coverageProject = workspace.getProject(newPath.lastSegment());
+			
+			Collection<TextFileChange> fileChanges = new HashSet<TextFileChange>();
+			
+//			IResource[] ir = coverageProject.members();
+//			for(int i=0;i<ir.length;i++)
+//				res+=ir[i].getName()+",";
+			
+			IResource file = ((IFolder)coverageProject.findMember("trans")).findMember("analysis.str");
+		
+			return this.Step1(observer,ast,file,fileChanges,factory);
+//			this.Step2(fileChanges);
+//			return factory.makeString("Done!");
+			
+			
+			
+			// apply inline coverage
+
+		} catch (BadDescriptorException e) {
+			return factory.makeString(e.getMessage());
+		} catch (OperationCanceledException e) {
+			return factory.makeString(e.getMessage());
+		} catch (CoreException e) {
+			return factory.makeString(e.getMessage());
+		} catch (Exception e) {
+			return factory.makeString(e.getMessage());
+		}
+	}
+	
+	public Change Step2(Collection<TextFileChange> fileChanges) throws CoreException, OperationCanceledException {
+			
+		CompositeChange change= new CompositeChange(getName(), fileChanges.toArray(new Change[fileChanges.size()])); 			
+		return change;
+	}
+
+	public IStrategoTerm Step1(StrategoObserver observer, IStrategoTerm ast, IResource file, Collection<TextFileChange> fileChanges, ITermFactory factory)
+	throws Exception {
+		final RefactoringStatus status = new RefactoringStatus();
+		observer.getLock().lock();		
+//		pm.beginTask("Checking postconditions...", 2);
+		ArrayList<IPath> affectedFilePaths = new ArrayList<IPath>();
+		String targetLanguage = "mobl";
+		IStrategoTerm builderResult = null;
+		IStrategoTerm astChanges = null;
+		IStrategoTerm fatalErrors = null;
+		IStrategoTerm errors = null;
+		IStrategoTerm warnings = null;
+		try {
+			builderResult = getBuilderResult(observer, ast, file, factory);
+//			return builderResult;
+			if(builderResult == null){
+
+				observer.reportRewritingFailed();
+				
+				String errorMessage = "Inline Coverage failed 1";
+				Environment.logException(errorMessage);
+				return factory.makeString(errorMessage);// RefactoringStatus.createFatalErrorStatus(errorMessage);					
+			}	
+			if (!isValidResultTerm(builderResult)) {
+				String errorMessage = "Illegal refactoring result. Expected: '([(original-node, newnode), ... ], fatal-errors, errors, warnings)'";
+				Environment.logException(errorMessage);
+				return factory.makeString(errorMessage);// RefactoringStatus.createFatalErrorStatus(errorMessage);
+			}
+			astChanges = builderResult.getSubterm(0);
+			fillAffectedFilePaths(observer.getProject().getWorkspace().getRoot().getProject(targetLanguage+"-CoverageTest"),astChanges,affectedFilePaths);
+			//if(1<2) return RefactoringStatus.createFatalErrorStatus("TEST");
+			fatalErrors = builderResult.getSubterm(1);
+			errors = builderResult.getSubterm(2);
+			warnings = builderResult.getSubterm(3);
+			updateStatus(status, fatalErrors, RefactoringStatus.FATAL);
+			updateStatus(status, errors, RefactoringStatus.ERROR);
+			updateStatus(status, warnings, RefactoringStatus.WARNING);
+			if(status.hasFatalError())
+				return factory.makeString("fatal error");; //no need to calculate text changes
+			
+				return astChanges;
+//			textReplaceTerm = getTextReplacement(observer,astChanges);
+//			if (textReplaceTerm == null) {
+//				observer.reportRewritingFailed();
+//				String errorMessage = "Text-reconstruction unexpectedly fails, did you specify a suitable pretty-print strategy?: \n"+ observer.getLog();
+//				Environment.logException(errorMessage);
+//				return factory.makeString(errorMessage);
+//			}
+//			assert(textReplaceTerm.getSubtermCount() == astChanges.getSubtermCount());
+//			for (int i = 0; i < astChanges.getSubtermCount(); i++) {
+//				TextFileChange fChange = createTextChange(termAt(astChanges.getSubterm(i),0), textReplaceTerm.getSubterm(i));	
+//				fileChanges.add(fChange);
+//			}
+		} finally { 
+			observer.getLock().unlock();
+//			pm.done();
+		}
+		
+//		return factory.makeString("Done!");
+	}
+	
+		
+	private void fillAffectedFilePaths(IProject newProject, IStrategoTerm astChanges, ArrayList<IPath> affectedFilePaths) {
+		affectedFilePaths.clear();
+		for (int i = 0; i < astChanges.getSubtermCount(); i++) {
+			//IStrategoTerm affectedTerm = termAt(astChanges.getSubterm(i),0);
+//			IStrategoTerm affectedOrigin = OriginAttachment.tryGetOrigin(affectedTerm);
+			IResource file = newProject.findMember("trans/analyze.str");
+//			IResource file = SourceAttachment.getResource(affectedOrigin);
+			assert(file != null) : "File of affected term is unknown";
+			IPath path = file.getProjectRelativePath();
+			affectedFilePaths.add(path);
+		}
+	}
+		
+	private void updateStatus(RefactoringStatus status, IStrategoTerm errors, int severity) {
+		for (int i = 0; i < errors.getSubtermCount(); i++) {
+			IStrategoTerm error = errors.getSubterm(i);
+			String message = formatErrorMessage(error);
+			switch (severity) {
+				case RefactoringStatus.WARNING:
+					status.merge(RefactoringStatus.createWarningStatus(message));		
+					break;
+				case RefactoringStatus.ERROR:
+					status.merge(RefactoringStatus.createErrorStatus(message));		
+					break;
+				case RefactoringStatus.FATAL:
+					status.merge(RefactoringStatus.createFatalErrorStatus(message));		
+					break;
+				default:
+					assert(false);
+					break;
+			}			
+		}
+	}
+
+	private String formatErrorMessage(IStrategoTerm error) {
+		if(Tools.isTermString(error))
+			return Tools.asJavaString(error);
+		String message = Tools.asJavaString(error.getSubterm(1));
+		if(hasImploderOrigin(error.getSubterm(0))){
+			IStrategoTerm origin = OriginAttachment.getOrigin(error.getSubterm(0));
+			int line = getLeftToken(origin).getLine();
+			int column = getLeftToken(origin).getColumn();
+			String fileName = SourceAttachment.getResource(origin).getName(); //project-relative-path?
+			return fileName +" ("+ line +"," + column +"): "+ message;
+		}
+		return message;
+	}
+
+	private IStrategoTerm getBuilderResult(StrategoObserver observer, IStrategoTerm ast, IResource file, ITermFactory factory) {
+		
+		
+		StrategoString s = new StrategoString("", null, 0);
+//		IStrategoTerm userInputTerm = TermFactory.EMPTY_LIST;
+		IStrategoTerm inputTerm = observer.getInputBuilder().makeInputTermRefactoring(s, ast, true, true);
+
+		//DesugaredOriginAttachment.setAllTermsAsDesugaredOrigins(inputTerm.getSubterm(3));
+
+		IStrategoTerm result = null;
+		try {
+			observer.getRuntime().setCurrent(inputTerm);
+			observer.getRuntime().invoke("inlineCoverage");
+			result = observer.getRuntime().current();
+//			result = observer.invoke("inlineCoverage", inputTerm);
+//			result = observer.getRuntime().invoke("inlineCoverage", inputTerm);
+		} catch (InterpreterErrorExit e) {
+			Environment.logException("Builder failed", e);
+			return factory.makeString(e.toString());
+		} catch (UndefinedStrategyException e) {
+			Environment.logException("Builder failed", e);
+			return factory.makeString(e.toString());
+		} catch (InterpreterExit e) {
+			Environment.logException("Builder failed", e);
+			return factory.makeString(e.toString());
+		} catch (InterpreterException e) {
+			Environment.logException("Builder failed", e);
+			return factory.makeString(e.toString());
+		}
+		return result;
+		
+	}
+
+	private boolean isValidResultTerm(IStrategoTerm resultTerm) {
+		for (int i = 1; i < resultTerm.getSubtermCount(); i++) {
+			if(!isErrorTermList(resultTerm.getSubterm(i)))
+				return false;
+		}
+		return isTermTuple(resultTerm) 
+			&& resultTerm.getSubtermCount() == 4 
+			&& isValidAstChangeList(resultTerm.getSubterm(0));
+	}
+
+	private boolean isErrorTermList(IStrategoTerm errorMessages) {
+		for (int i = 0; i < errorMessages.getSubtermCount(); i++) {
+			if(!isErrorTerm(errorMessages.getSubterm(i)))
+				return false;
+		}
+		return Tools.isTermList(errorMessages);
+	}
+
+	private boolean isErrorTerm(IStrategoTerm errorMessage) {
+		return Tools.isTermString(errorMessage) 
+		|| (isTermTuple(errorMessage) && errorMessage.getSubtermCount() == 2);
+	}
+
+	private boolean isValidAstChangeList(IStrategoTerm astChanges) {
+		for (int i = 0; i < astChanges.getSubtermCount(); i++) {
+			if(!isTupleWithOrigin(astChanges.getSubterm(i))){
+				return false;
+			}
+		}
+		return isTermList(astChanges);
+	}
+
+	private boolean isTupleWithOrigin(IStrategoTerm resultTerm) {
+		return 
+			isTermTuple(resultTerm) && 
+			resultTerm.getSubtermCount()==2 &&
+			hasImploderOrigin(termAt(resultTerm, 0));
+	}
+}

Added: spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/build_0_3.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/build_0_3.java	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,97 @@
+package org.strategoxt.imp.testing.strategies;
+
+import static org.spoofax.interpreter.core.Tools.asJavaString;
+import java.io.BufferedReader;
+import java.io.FileReader;
+import java.io.FileWriter;
+import java.io.IOException;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IncrementalProjectBuilder;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Path;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.services.StrategoObserver;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ *	Build project rule.
+ */
+public class build_0_3 extends Strategy {
+
+	public static build_0_3 instance = new build_0_3();
+
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm current,IStrategoTerm coverProjectName, IStrategoTerm oldProjectPath, IStrategoTerm builderXMLPath) {
+
+		ITermFactory factory = context.getFactory();	
+		
+		
+		StrategoObserver observer;
+		try {
+			// Get Observer
+			String projectPath = ((EditorIOAgent) context.getIOAgent()).getProjectPath();
+	        IProject project = ((EditorIOAgent) context.getIOAgent()).getProject();
+			observer = ObserverCache.getInstance().getObserver("Spoofax-Testing", project, projectPath);
+			
+			String builder = "";
+			try {
+				// Obtain observer lock
+				observer.getLock().lock();
+				
+				// Get the project to build
+				IProject coverProject = (IProject)observer.getProject().getWorkspace().getRoot().findMember(new Path(asJavaString(coverProjectName)));
+				String replacePath = coverProject.getLocation().toOSString()+asJavaString(builderXMLPath); 
+				
+				// Close to force reload of builder later on
+				coverProject.close(new NullProgressMonitor());
+
+				// Read builder xml file
+				BufferedReader br = new BufferedReader(new FileReader(replacePath));
+				while(br.ready())
+					builder+= br.readLine() + '\n';
+				br.close();
+				
+				// Replace the src folder name in the builder file
+				builder = builder.replaceAll(asJavaString(oldProjectPath), asJavaString(coverProjectName));
+
+				// Write the new builder file
+				FileWriter wr = new FileWriter(replacePath);
+				wr.write(builder);
+				wr.flush();
+				wr.close();
+
+				
+				// Reopen project
+				coverProject = (IProject)observer.getProject().getWorkspace().getRoot().findMember(new Path(asJavaString(coverProjectName)));
+				coverProject.open(new NullProgressMonitor());
+				
+				// Build project
+				coverProject.build(IncrementalProjectBuilder.FULL_BUILD, new NullProgressMonitor());
+			} catch (IOException e) {
+				String error = "build:"+e.getMessage();
+				return factory.makeString(error);
+			}
+			catch (CoreException e) {
+				String error = "build:"+e.getMessage();
+				return factory.makeString(error);
+			}
+			finally
+			{
+				// Release Lock
+				observer.getLock().unlock();
+			}
+
+		} catch (BadDescriptorException e) {
+			String error = "build:"+e.getMessage();
+			return factory.makeString(error);
+		}
+			
+		return factory.makeString("Finished Building CoverProject.");
+}
+
+}

Added: spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/change_files_0_2.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/change_files_0_2.java	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,128 @@
+package org.strategoxt.imp.testing.strategies;
+
+import static org.spoofax.interpreter.core.Tools.asJavaString;
+import static org.spoofax.interpreter.core.Tools.termAt;
+import java.util.Collection;
+import java.util.HashSet;
+import org.eclipse.core.resources.IFile;
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.OperationCanceledException;
+import org.eclipse.core.runtime.Path;
+import org.eclipse.ltk.core.refactoring.Change;
+import org.eclipse.ltk.core.refactoring.CompositeChange;
+import org.eclipse.ltk.core.refactoring.TextFileChange;
+import org.eclipse.text.edits.MultiTextEdit;
+import org.eclipse.text.edits.ReplaceEdit;
+import org.spoofax.interpreter.core.Tools;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.services.StrategoObserver;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * change-files strategy. Used by the coverage project.
+ */
+public class change_files_0_2 extends Strategy {
+
+	public static change_files_0_2 instance = new change_files_0_2();
+
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm astChanges, IStrategoTerm textReplaceTerm) {
+		ITermFactory factory = context.getFactory();
+		 
+		String projectPath = ((EditorIOAgent) context.getIOAgent()).getProjectPath();
+        IProject project = ((EditorIOAgent) context.getIOAgent()).getProject();
+
+		StrategoObserver observer;
+		try {
+			observer = ObserverCache.getInstance().getObserver("Spoofax-Testing", project, projectPath);
+		} catch (BadDescriptorException e1) {
+			String error = "A: "+ e1.toString();
+			return factory.makeString(error); 
+		}
+		
+
+
+		try {
+			observer.getLock().lock();
+			Collection<TextFileChange> fileChanges = new HashSet<TextFileChange>();
+			if (textReplaceTerm == null) {
+				observer.reportRewritingFailed();
+				String errorMessage = "Text-reconstruction unexpectedly fails, did you specify a suitable pretty-print strategy?: \n"+ observer.getLog();
+				Environment.logException(errorMessage);
+				return factory.makeString(errorMessage);
+			}
+			assert(textReplaceTerm.getSubtermCount() == astChanges.getSubtermCount());
+			for (int i = 0; i < astChanges.getSubtermCount(); i++) {
+				TextFileChange fChange = createTextChange(observer,asJavaString(current),termAt(astChanges.getSubterm(i),0), textReplaceTerm.getSubterm(i));
+				fChange.setSaveMode(TextFileChange.FORCE_SAVE);
+				fileChanges.add(fChange);
+			}
+			Change fChange = this.Step2(fileChanges);
+			
+			fChange.initializeValidationData(new NullProgressMonitor());
+			
+			fChange.perform(new NullProgressMonitor());
+			
+
+		} catch (Exception e) {
+			String error = "";
+			for( StackTraceElement ste : e.getStackTrace() )
+			{
+				error += ste.toString()+"\n";
+			}
+			return factory.makeString(error);		
+		}
+		finally{
+			observer.getLock().unlock();
+		}
+		return factory.makeString("Done!");
+	}
+
+	public Change Step2(Collection<TextFileChange> fileChanges) throws CoreException, OperationCanceledException {
+
+		CompositeChange change= new CompositeChange(getName(), fileChanges.toArray(new Change[fileChanges.size()])); 			
+		return change;
+	}
+
+	
+	private TextFileChange createTextChange(StrategoObserver observer, String filePath, IStrategoTerm originalTerm, IStrategoTerm textReplaceTerm) {
+		final int startLocation=Tools.asJavaInt(termAt(textReplaceTerm, 0));
+		final int endLocation=Tools.asJavaInt(termAt(textReplaceTerm, 1));
+		final String resultText = Tools.asJavaString(termAt(textReplaceTerm, 2));
+//		final IStrategoTerm originTerm = OriginAttachment.tryGetOrigin(originalTerm);
+//		final IFile file = (IFile)((IProject)SourceAttachment.getResource(originTerm)).findMember("trans/analysis.str");
+		final IFile file = (IFile) observer.getProject().getWorkspace().getRoot().findMember(new Path(filePath));
+		TextFileChange textChange = new TextFileChange("", file); 
+		textChange.setTextType(file.getFileExtension());
+		MultiTextEdit edit= new MultiTextEdit();
+		edit.addChild(new ReplaceEdit(startLocation, endLocation - startLocation, resultText));
+		textChange.setEdit(edit);
+		return textChange;
+	}
+	
+
+//	private TextFileChange createTextChange(StrategoObserver observer, String filePath, IStrategoTerm originalTerm, IStrategoTerm textReplaceTerm) 
+//	throws Exception {
+//		final int startLocation=Tools.asJavaInt(termAt(textReplaceTerm, 0));
+//		final int endLocation=Tools.asJavaInt(termAt(textReplaceTerm, 1));
+//		final String resultText = Tools.asJavaString(termAt(textReplaceTerm, 2));
+////		final IStrategoTerm originTerm = OriginAttachment.tryGetOrigin(originalTerm);
+////		final IFile file = (IFile)((IProject)SourceAttachment.getResource(originTerm)).findMember(new Path("trans/analysis.str"));
+//		final IFile file = (IFile) observer.getProject().getWorkspace().getRoot().findMember(new Path("PL-CoverageTest/trans/analysis.str"));
+//
+//		TextFileChange textChange = new TextFileChange("", file); 
+//		textChange.setTextType(file.getFileExtension());
+//		MultiTextEdit edit= new MultiTextEdit();
+//		edit.addChild(new ReplaceEdit(startLocation, endLocation - startLocation, resultText));
+//		textChange.setEdit(edit);
+//		return textChange;
+//	}
+
+}

Added: spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/finish_coverage_0_2.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/finish_coverage_0_2.java	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,67 @@
+package org.strategoxt.imp.testing.strategies;
+
+import static org.spoofax.interpreter.core.Tools.asJavaString;      
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.resources.IWorkspaceRoot;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Path;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.services.StrategoObserver;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * finish-coverage strategy. Used by coverage project to finalize the coverage measurement.
+ */
+public class finish_coverage_0_2 extends Strategy {
+
+	public static finish_coverage_0_2 instance = new finish_coverage_0_2();
+
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm coverProjectPath, IStrategoTerm oldProjectPath) {
+		ITermFactory factory = context.getFactory();
+		
+		String projectPath = ((EditorIOAgent) context.getIOAgent()).getProjectPath();
+        IProject project = ((EditorIOAgent) context.getIOAgent()).getProject();
+        StrategoObserver observer;
+
+		try {
+			// Get observer
+			observer = ObserverCache.getInstance().getObserver("Spoofax-Testing", project, projectPath);
+			
+			try {
+				// Obtain lock
+				observer.getLock().lock();
+				
+				// Get workspace root
+				IWorkspaceRoot root = observer.getProject().getWorkspace().getRoot();
+				
+				// Delete cover project
+				IProject coverProject = (IProject) root.findMember(new Path(asJavaString(coverProjectPath)));
+				coverProject.delete(true, new NullProgressMonitor());
+
+				// Open original project
+				IProject oldProject = (IProject) root.findMember(new Path(asJavaString(oldProjectPath)));
+				oldProject.open(new NullProgressMonitor());
+
+			} catch (CoreException e) {
+				String error = "finish_coverage_0_2: "+e.getMessage();
+				return factory.makeString(error);
+			}
+			finally{
+				observer.getLock().unlock();
+			}
+		} catch (BadDescriptorException e) {
+			String error = "finish_coverage_0_2: "+e.getMessage();
+			return factory.makeString(error);
+		}
+
+		return factory.makeString("Coverage measured!");
+	}
+
+}

Added: spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/generate_string_from_reg_0_1.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/generate_string_from_reg_0_1.java	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,28 @@
+package org.strategoxt.imp.testing.strategies;
+
+import static org.spoofax.interpreter.core.Tools.asJavaString;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+import nl.flotsam.xeger.Xeger;
+/**
+ * generate-string-from-reg strategy. Used for random generation of Terminals using
+ * the Xeger library.
+ *
+ */
+public class generate_string_from_reg_0_1 extends Strategy {
+
+	public static generate_string_from_reg_0_1 instance = new generate_string_from_reg_0_1();
+
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm regFormat) {
+		String regex = asJavaString(regFormat);
+		System.out.println(regex);
+		Xeger generator = new Xeger(regex);
+		String result = generator.generate(); 
+		ITermFactory factory = context.getFactory();
+		return factory.makeString(result);
+	}
+
+}

Added: spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/get_compiler_def_0_2.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/get_compiler_def_0_2.java	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,63 @@
+package org.strategoxt.imp.testing.strategies;
+
+import static org.spoofax.interpreter.core.Tools.asJavaString;
+
+import java.io.BufferedReader;
+import java.io.FileNotFoundException;
+import java.io.FileReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+
+import org.eclipse.imp.language.Language;
+import org.eclipse.imp.language.LanguageRegistry;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.TermReader;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * get-compiler-def strategy. Used by the random test generation project to read .def files.
+ */
+public class get_compiler_def_0_2 extends Strategy {
+
+	public static get_compiler_def_0_2 instance = new get_compiler_def_0_2();
+
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm l, IStrategoTerm c) {
+		Language language = LanguageRegistry.findLanguage(asJavaString(l));
+		Descriptor d = Environment.getDescriptor(language);
+		ITermFactory factory = context.getFactory();
+		//System.out.println(language.getDescription());
+		String file = "trans/"+asJavaString(c)+".str";
+		try {
+			
+			BufferedReader reader = new BufferedReader( new InputStreamReader(d.openAttachment(file)));
+			String result = "";
+			try{
+				while(reader.ready())
+				{
+					result+=reader.readLine()+" ";
+				}
+			} catch (IOException e) {
+				return factory.makeString(e.getMessage());
+			}
+			finally{
+				reader.close();
+			}
+			
+			return factory.makeString(result);
+
+		} catch (FileNotFoundException e) {
+			return factory.makeString(e.getMessage());
+		}
+		catch (IOException e) {
+			return factory.makeString(e.getMessage());
+		}
+	}
+
+}

Added: spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/get_language_def_0_1.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/get_language_def_0_1.java	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,60 @@
+package org.strategoxt.imp.testing.strategies;
+
+import static org.spoofax.interpreter.core.Tools.asJavaString;
+
+import java.io.BufferedReader;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+
+import org.eclipse.imp.language.Language;
+import org.eclipse.imp.language.LanguageRegistry;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.imp.runtime.Environment;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
+import org.strategoxt.imp.runtime.dynamicloading.TermReader;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+
+/**
+ * get-language-def. 
+ */
+public class get_language_def_0_1 extends Strategy {
+
+	public static get_language_def_0_1 instance = new get_language_def_0_1();
+
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm l) {
+		Language language = LanguageRegistry.findLanguage(asJavaString(l));
+		Descriptor d = Environment.getDescriptor(language);
+		ITermFactory factory = context.getFactory();
+		//System.out.println(language.getDescription());
+		try {
+			BufferedReader reader = new BufferedReader( new InputStreamReader(d.openAttachment("include/"+asJavaString(l)+"/"+asJavaString(l)+".def")));
+			String result = "";
+			
+			try
+			{
+				while(reader.ready())
+				{
+					result+=reader.readLine()+" ";
+				}
+			} catch (IOException e) {
+				return factory.makeString(e.getMessage());
+			} finally{
+				reader.close();
+			}
+			
+			return factory.makeString(result);
+
+		} catch (FileNotFoundException e) {
+			return factory.makeString(e.getMessage());
+		} catch (IOException e) {
+			return factory.makeString(e.getMessage());
+		}
+	}
+
+}

Added: spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/run_0_2.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/editor/java/org/strategoxt/imp/testing/strategies/run_0_2.java	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,65 @@
+package org.strategoxt.imp.testing.strategies;
+
+import org.eclipse.core.resources.IProject;
+import org.eclipse.core.runtime.CoreException;
+import org.eclipse.core.runtime.NullProgressMonitor;
+import org.eclipse.core.runtime.Path;
+import org.spoofax.interpreter.core.InterpreterErrorExit;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.core.InterpreterExit;
+import org.spoofax.interpreter.core.UndefinedStrategyException;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
+import org.strategoxt.imp.runtime.services.StrategoObserver;
+import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
+import org.strategoxt.lang.Context;
+import org.strategoxt.lang.Strategy;
+import static org.spoofax.interpreter.core.Tools.asJavaString;
+
+
+/**
+ * run strategy. Used to invoke strategies to be tested by the automated testing project.
+ */
+public class run_0_2 extends Strategy {
+
+	public static run_0_2 instance = new run_0_2();
+
+	@Override
+	public IStrategoTerm invoke(Context context, IStrategoTerm current, IStrategoTerm languageName, IStrategoTerm strategy) {
+		ITermFactory factory = context.getFactory();
+
+		try {
+			String projectPath = ((EditorIOAgent) context.getIOAgent()).getProjectPath();
+            IProject project = ((EditorIOAgent) context.getIOAgent()).getProject();
+			StrategoObserver observer = ObserverCache.getInstance().getObserver(asJavaString(languageName), project, projectPath);
+			// Make sure the original language project is closed, so there are no conflicts!
+			try{
+				observer.getLock().lock();
+				observer.getRuntime().setCurrent(current);
+				observer.getRuntime().invoke(asJavaString(strategy));
+				return observer.getRuntime().current();
+				
+				
+			}catch (InterpreterErrorExit e) {
+				String error = "run_0_2:"+e.getMessage();
+				return factory.makeString(error);
+			} catch (InterpreterExit e) {
+				String error = "run_0_2:"+e.getMessage();
+				return factory.makeString(error);
+			} catch (UndefinedStrategyException e) {
+				String error = "run_0_2:"+e.getMessage();
+				return factory.makeString(error);
+			} catch (InterpreterException e) {
+				String error = "run_0_2:"+e.getMessage();
+				return factory.makeString(error);
+			} finally {
+				//observer.uninitialize(); this breaks it!
+				observer.getLock().unlock();
+			}
+		} catch (BadDescriptorException e) {
+			String error = "run_0_2:"+e.getMessage();
+			return factory.makeString(error);
+		}
+	}
+}

Modified: spoofax-imp/branches/spoofax-testing-automation/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/branches/spoofax-testing-automation/lib/editor-common.generated.str	Fri Feb 24 14:34:14 2012	(r24398)
+++ spoofax-imp/branches/spoofax-testing-automation/lib/editor-common.generated.str	Fri Feb 24 14:49:09 2012	(r24399)
@@ -131,6 +131,9 @@
   origin-column    = origin-location => (_, <id>, _, _)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
+
+  origin-language =
+    prim("SSL_EXT_origin_language", <id>)
   
   origin-surrounding-comments =
     prim("SSL_EXT_origin_surrounding_comments", "Spoofax-Testing", <id>)

Added: spoofax-imp/branches/spoofax-testing-automation/syntax/Spoofax-AutomatedTesting.sdf
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/syntax/Spoofax-AutomatedTesting.sdf	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,61 @@
+module Spoofax-AutomatedTesting
+
+imports Common
+
+exports
+	sorts TestSuite
+	
+context-free   syntax
+
+	"automatic" "test" AT -> TestSuite {cons("AutoTest")}
+	"automatic" "test" AT COV 	-> TestSuite{cons("AutoTest")}
+	"automatic" "test" AT COV ERR	-> TestSuite{cons("AutoTest")}
+	
+	"error" "correction" ERRC*	-> ERR{cons("ErrorCorrections")}
+	ID ":" STRING "," ErrorMatch "->"	Action		-> ERRC{cons("ErrorCorrection")}
+	
+	Operation Fix "@" DestinationMatch 	-> Action{cons("AddCorrection")}
+	Operation Fix "first@" DestinationMatch  -> Action{cons("AddCorrectionFirst")}
+	
+	"insert" -> Operation{cons("Insert")}
+	"insert" "once" -> Operation{cons("InsertOnce")}
+	
+	ID "(" {Param ","}* ")"  -> Fix{cons("Node")}
+	
+	ID				-> Param
+	STRING			-> Param{cons("Params_String")}
+	"[" "]" 		-> Param{cons("Params_EmptyArray")}
+	"[" Param+ "]"	-> Param{cons("Params_Array")}
+	"$_"INT			-> Param{cons("Params_Var")}
+	
+	
+	ID "(" { ErrorMatch ","}* ")"		-> ErrorMatch{cons("ErrMatchCons")}
+	"$_"INT								-> ErrorMatch{cons("ErrMatchParam")}
+	STRING								-> ErrorMatch{cons("ErrMatchString")}
+	INT									-> ErrorMatch{cons("ErrMatchINT")}
+	"_"									-> ErrorMatch{cons("ErrMatchWildCard")}
+	
+	"_"									-> DestinationMatch{cons("DestMatchWildCard")}
+	"$here"								-> DestinationMatch{cons("TargetNode")}
+	ID "(" {DestinationMatch ","}* ")" 	-> DestinationMatch{cons("DestMatchCons")}
+	STRING								-> DestinationMatch{cons("DestMatchString")}
+	INT									-> DestinationMatch{cons("DestMatchInt")}
+
+	STRING ":" ACTION			-> ERRC{cons("ErrorCorrection")}
+	
+	"ADDNode(" ")"					-> ACTION{cons("AddNodeAction")} 
+	%% Auto Testing Settings
+	ATSetting*				-> AT {cons("ATSettings")}	
+	"target language:" ID			-> ATSetting{cons("TargetLanguage")}
+	"target strategy:" ID			-> ATSetting{cons("TargetStrategy")}
+	"number of runs:" INT			-> ATSetting{cons("NumberOfRuns")}
+	"Ignore Cons:" {STRING ","}*	-> ATSetting{cons("IgnoreCons")}
+	"Max Term Count:" INT			-> ATSetting{cons("MaxCount")}
+	"Max Recursion:" INT			-> ATSetting{cons("MaxRec")}
+
+	
+	
+	%% Coverage Settings
+	"coverage settings" COVSetting*	-> COV{cons("COVSettings")}
+	"covered folder:" STRING		-> COVSetting{cons("CoveredFolder")}
+	
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/syntax/Spoofax-Testing.generated.pp
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/syntax/Spoofax-Testing.generated.pp	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,466 @@
+[
+   AutoTest                            -- KW["automatic"] KW["test"] _1,
+   AutoTest                            -- KW["automatic"] KW["test"] _1 _2,
+   AutoTest                            -- KW["automatic"] KW["test"] _1 _2 _3,
+   ErrorCorrections                    -- V  [H  [KW["error"] KW["correction"]] _1],
+   ErrorCorrections.1:iter-star        -- _1,
+   ErrorCorrection                     -- _1 KW[":"] _2 KW[","] _3 KW["->"] _4,
+   AddCorrection                       -- _1 _2 KW["@"] _3,
+   AddCorrectionFirst                  -- _1 _2 KW["first@"] _3,
+   Insert                              -- KW["insert"],
+   InsertOnce                          -- KW["insert"] KW["once"],
+   Node                                -- _1 KW["("] _2 KW[")"],
+   Node.2:iter-star-sep                -- _1 KW[","],
+   Params_String                       -- _1,
+   Params_EmptyArray                   -- KW["["] KW["]"],
+   Params_Array                        -- V  [V vs=2 [KW["["] _1] KW["]"]],
+   Params_Array.1:iter                 -- _1,
+   Params_Var                          -- KW["$_"] _1,
+   ErrMatchCons                        -- _1 KW["("] _2 KW[")"],
+   ErrMatchCons.2:iter-star-sep        -- _1 KW[","],
+   ErrMatchParam                       -- KW["$_"] _1,
+   ErrMatchString                      -- _1,
+   ErrMatchINT                         -- _1,
+   ErrMatchWildCard                    -- KW["_"],
+   DestMatchWildCard                   -- KW["_"],
+   TargetNode                          -- KW["$here"],
+   DestMatchCons                       -- _1 KW["("] _2 KW[")"],
+   DestMatchCons.2:iter-star-sep       -- _1 KW[","],
+   DestMatchString                     -- _1,
+   DestMatchInt                        -- _1,
+   ErrorCorrection                     -- _1 KW[":"] _2,
+   AddNodeAction                       -- KW["ADDNode("] KW[")"],
+   ATSettings                          -- _1,
+   ATSettings.1:iter-star              -- _1,
+   TargetLanguage                      -- KW["target language:"] _1,
+   TargetStrategy                      -- KW["target strategy:"] _1,
+   NumberOfRuns                        -- KW["number of runs:"] _1,
+   IgnoreCons                          -- V  [H  [KW["Ignore Cons:"]] _1],
+   IgnoreCons.1:iter-star-sep          -- _1 KW[","],
+   MaxCount                            -- KW["Max Term Count:"] _1,
+   MaxRec                              -- KW["Max Recursion:"] _1,
+   COVSettings                         -- V  [H  [KW["coverage settings"]] _1],
+   COVSettings.1:iter-star             -- _1,
+   CoveredFolder                       -- KW["covered folder:"] _1,
+   OverlayNoArgs                       -- _1 KW["="] _2,
+   Overlay                             -- _1 KW["("] _2 KW[")"] KW["="] _3,
+   Overlay.2:iter-star-sep             -- _1 KW[","],
+   DynRuleScope                        -- KW["{|"] _1 KW[":"] _2 KW["|}"],
+   ScopeLabels                         -- KW["~"] _1,
+   GenDynRules                         -- KW["rules"] KW["("] _1 KW[")"],
+   GenDynRules.1:iter-star             -- _1,
+   AddScopeLabel                       -- _1 KW["+"] _2,
+   UndefineDynRule                     -- _1 KW[":-"] _2,
+   SetDynRule                          -- _1 KW[":"] _2,
+   AddDynRule                          -- _1 KW[":+"] _2,
+   SetDynRuleMatch                     -- _1 KW[":"] _2,
+   DynRuleAssign                       -- _1 KW[":="] _2,
+   DynRuleAssignAdd                    -- _1 KW[":+="] _2,
+   SetDynRuleDepends                   -- _1 KW[":"] _2 KW["depends"] KW["on"] _3,
+   LabeledDynRuleId                    -- _1 KW["."] _2,
+   AddLabelDynRuleId                   -- _1 KW["+"] _2,
+   DynRuleId                           -- _1,
+   LabeledDynRuleScopeId               -- _1 KW["."] _2,
+   DynRuleScopeId                      -- _1,
+   RDecNoArgs                          -- _1,
+   RDec                                -- _1 KW["("] _2 KW[")"],
+   RDec.2:iter-star-sep                -- _1 KW[","],
+   RDecT                               -- _1 KW["("] _2 KW["|"] _3 KW[")"],
+   RDecT.2:iter-star-sep               -- _1 KW[","],
+   RDecT.3:iter-star-sep               -- _1 KW[","],
+   RuleNames                           -- KW["~"] _1,
+   DynRuleIntersectFix                 -- KW["/"] _1 KW["\\*"] _2,
+   DynRuleIntersect                    -- _1 KW["/"] _2 KW["\\"] _3,
+   DynRuleUnion                        -- _1 KW["\\"] _2 KW["/"] _3,
+   DynRuleIntersectUnion               -- _1 KW["/"] _2 KW["\\"] _3 KW["/"] _4,
+   RDefNoArgs                          -- _1 KW[":"] _2,
+   AnnoDef                             -- _1 _2,
+   AnnoDef.1:iter                      -- _1,
+   RDef                                -- _1 KW["("] _2 KW[")"] KW[":"] _3,
+   RDef.2:iter-star-sep                -- _1 KW[","],
+   RDefT                               -- _1 KW["("] _2 KW["|"] _3 KW[")"] KW[":"] _4,
+   RDefT.2:iter-star-sep               -- _1 KW[","],
+   RDefT.3:iter-star-sep               -- _1 KW[","],
+   RuleNoCond                          -- _1 KW["->"] _2,
+   Rule                                -- _1 KW["->"] _2 KW["where"] _3,
+   Rule                                -- _1 KW["->"] _2 _3,
+   Rule.3:iter                         -- _1,
+   WhereClause                         -- KW["where"] _1,
+   WithClause                          -- KW["with"] _1,
+   SDefNoArgs                          -- _1 KW["="] _2,
+   SDef                                -- _1 KW["("] _2 KW[")"] KW["="] _3,
+   SDef.2:iter-star-sep                -- _1 KW[","],
+   DefaultVarDec                       -- _1,
+   Call                                -- _1 KW["("] _2 KW[")"],
+   Call.2:iter-star-sep                -- _1 KW[","],
+   ScopeDefault                        -- KW["{"] _1 KW["}"],
+   BA                                  -- _1 _2,
+   LChoice                             -- _1 KW["<+"] _2,
+   Rec                                 -- KW["rec"] _1 KW["("] _2 KW[")"],
+   Not                                 -- KW["not"] KW["("] _1 KW[")"],
+   Where                               -- KW["where"] KW["("] _1 KW[")"],
+   With                                -- KW["with"] KW["("] _1 KW[")"],
+   Test                                -- KW["test"] KW["("] _1 KW[")"],
+   PrimNoArgs                          -- KW["prim"] KW["("] _1 KW[")"],
+   Prim                                -- KW["prim"] KW["("] _1 KW[","] _2 KW[")"],
+   Prim.2:iter-star-sep                -- _1 KW[","],
+   StrCong                             -- _1,
+   IntCong                             -- _1,
+   RealCong                            -- _1,
+   CharCong                            -- _1,
+   CongQ                               -- _1 KW["("] _2 KW[")"],
+   CongQ.2:iter-star-sep               -- _1 KW[","],
+   AnnoCong                            -- _1 _2,
+   StrategyCurly                       -- KW["{"] _1 KW["}"],
+   EmptyTupleCong                      -- KW["("] KW[")"],
+   TupleCong                           -- KW["("] _1 KW[","] _2 KW[")"],
+   TupleCong.2:iter-sep                -- _1 KW[","],
+   ListCongNoTail                      -- KW["["] _1 KW["]"],
+   ListCongNoTail.1:iter-star-sep      -- _1 KW[","],
+   ListCong                            -- KW["["] _1 KW["|"] _2 KW["]"],
+   ListCong.1:iter-star-sep            -- _1 KW[","],
+   ExplodeCong                         -- _1 KW["#"] _2,
+   CallNoArgs                          -- _1,
+   LRule                               -- KW["\\"] _1 KW["\\"],
+   SRule                               -- KW["("] _1 KW[")"],
+   Choice                              -- _1 KW["+"] _2,
+   RChoice                             -- _1 KW["+>"] _2,
+   Proceed                             -- KW["proceed"] KW["("] _1 KW[")"],
+   Proceed.1:iter-sep                  -- _1 KW[","],
+   CondChoice                          -- KW["if"] _1 KW["then"] _2 KW["else"] _3 KW["end"],
+   IfThen                              -- KW["if"] _1 KW["then"] _2 KW["end"],
+   SwitchChoiceNoOtherwise             -- KW["switch"] _1 _2 KW["end"],
+   SwitchChoiceNoOtherwise.2:iter-star -- _1,
+   SwitchChoice                        -- KW["switch"] _1 _2 KW["otherwise"] KW[":"] _3 KW["end"],
+   SwitchChoice.2:iter-star            -- _1,
+   SwitchCase                          -- KW["case"] _1 KW[":"] _2,
+   AM                                  -- _1 KW["=>"] _2,
+   Assign                              -- _1 KW[":="] _2,
+   ListVar                             -- _1,
+   Var                                 -- _1,
+   BuildDefaultPT                      -- KW["_"] _1,
+   BuildDefault                        -- KW["_"] _1,
+   Char                                -- _1,
+   AnnoList                            -- _1 KW["{"] _2 KW["}"],
+   AnnoList.2:iter-star-sep            -- _1 KW[","],
+   NoAnnoList                          -- _1,
+   App                                 -- KW["<"] _1 KW[">"] _2,
+   App                                 -- KW["<"] _1 KW[">"] _2,
+   RootApp                             -- _1,
+   RootApp                             -- _1,
+   Tuple                               -- KW["("] _1 KW[")"],
+   Tuple.1:iter-star-sep               -- _1 KW[","],
+   List                                -- KW["["] _1 KW["]"],
+   List.1:iter-star-sep                -- _1 KW[","],
+   ListTail                            -- KW["["] _1 KW["|"] _2 KW["]"],
+   ListTail.1:iter-star-sep            -- _1 KW[","],
+   SortList                            -- KW["["] _1 KW["]"],
+   SortList.1:iter-star-sep            -- _1 KW[","],
+   SortListTl                          -- KW["["] _1 KW["|"] _2 KW["]"],
+   SortListTl.1:iter-star-sep          -- _1 KW[","],
+   SortTuple                           -- KW["("] _1 KW[")"],
+   SortTuple.1:iter-star-sep           -- _1 KW[","],
+   Star                                -- KW["*"],
+   StarStar                            -- KW["**"],
+   Sorts                               -- V  [H  [KW["sorts"]] _1],
+   Sorts.1:iter-star                   -- _1,
+   Constructors                        -- V  [H  [KW["constructors"]] _1],
+   Constructors.1:iter-star            -- _1,
+   SortVar                             -- _1,
+   SortNoArgs                          -- _1,
+   Sort                                -- _1 KW["("] _2 KW[")"],
+   Sort.2:iter-star-sep                -- _1 KW[","],
+   OpDecl                              -- _1 KW[":"] _2,
+   OpDeclQ                             -- _1 KW[":"] _2,
+   OpDeclInj                           -- KW[":"] _1,
+   ExtOpDecl                           -- KW["external"] _1 KW[":"] _2,
+   ExtOpDeclQ                          -- KW["external"] _1 KW[":"] _2,
+   ExtOpDeclInj                        -- KW["external"] KW[":"] _1,
+   ConstType                           -- _1,
+   FunType                             -- _1 KW["->"] _2,
+   FunType.1:iter-sep                  -- _1 KW["*"],
+   Var                                 -- _1,
+   Wld                                 -- KW["_"],
+   Int                                 -- _1,
+   Real                                -- _1,
+   Str                                 -- _1,
+   Op                                  -- _1 KW["("] _2 KW[")"],
+   Op.2:iter-star-sep                  -- _1 KW[","],
+   OpQ                                 -- _1 KW["("] _2 KW[")"],
+   OpQ.2:iter-star-sep                 -- _1 KW[","],
+   Explode                             -- _1 KW["#"] KW["("] _2 KW[")"],
+   Anno                                -- _1 KW["{^"] _2 KW["}"],
+   As                                  -- _1 KW["@"] _2,
+   As                                  -- _1 KW["@"] _2,
+   SVar                                -- _1,
+   Let                                 -- KW["let"] _1 KW["in"] _2 KW["end"],
+   Let.1:iter-star                     -- _1,
+   CallT                               -- _1 KW["("] _2 KW["|"] _3 KW[")"],
+   CallT.2:iter-star-sep               -- _1 KW[","],
+   CallT.3:iter-star-sep               -- _1 KW[","],
+   CallDynamic                         -- KW["call"] KW["("] _1 KW["|"] _2 KW["|"] _3 KW[")"],
+   CallDynamic.2:iter-star-sep         -- _1 KW[","],
+   CallDynamic.3:iter-star-sep         -- _1 KW[","],
+   SDefT                               -- _1 KW["("] _2 KW["|"] _3 KW[")"] KW["="] _4,
+   SDefT.2:iter-star-sep               -- _1 KW[","],
+   SDefT.3:iter-star-sep               -- _1 KW[","],
+   AnnoDef                             -- _1 _2,
+   AnnoDef.1:iter                      -- _1,
+   ExtSDefInl                          -- KW["external"] _1 KW["("] _2 KW["|"] _3 KW[")"] KW["="] _4,
+   ExtSDefInl.2:iter-star-sep          -- _1 KW[","],
+   ExtSDefInl.3:iter-star-sep          -- _1 KW[","],
+   ExtSDef                             -- KW["external"] _1 KW["("] _2 KW["|"] _3 KW[")"],
+   ExtSDef.2:iter-star-sep             -- _1 KW[","],
+   ExtSDef.3:iter-star-sep             -- _1 KW[","],
+   ExtSDef                             -- KW["external"] _1 KW["("] _2 KW["|"] _3 KW[")"],
+   ExtSDef.2:iter-star-sep             -- _1 KW[","],
+   ExtSDef.3:iter-star-sep             -- _1 KW[","],
+   Extend                              -- KW["extend"],
+   Override                            -- KW["override"],
+   Internal                            -- KW["internal"],
+   VarDec                              -- _1 KW[":"] _2,
+   ParenStrat                          -- KW["("] _1 KW[")"],
+   Fail                                -- KW["fail"],
+   Id                                  -- KW["id"],
+   ProceedT                            -- KW["proceed"] KW["("] _1 KW["|"] _2 KW[")"],
+   ProceedT.1:iter-star-sep            -- _1 KW[","],
+   ProceedT.2:iter-star-sep            -- _1 KW[","],
+   ProceedNoArgs                       -- KW["proceed"],
+   Match                               -- KW["?"] _1,
+   Build                               -- KW["!"] _1,
+   Scope                               -- KW["{"] _1 KW[":"] _2 KW["}"],
+   Scope.1:iter-star-sep               -- _1 KW[","],
+   Seq                                 -- _1 KW[";"] _2,
+   GuardedLChoice                      -- _1 KW["<"] _2 KW["+"] _3,
+   PrimT                               -- KW["prim"] KW["("] _1 KW[","] _2 KW["|"] _3 KW[")"],
+   PrimT.2:iter-star-sep               -- _1 KW[","],
+   PrimT.3:iter-star-sep               -- _1 KW[","],
+   Some                                -- KW["some"] KW["("] _1 KW[")"],
+   One                                 -- KW["one"] KW["("] _1 KW[")"],
+   All                                 -- KW["all"] KW["("] _1 KW[")"],
+   ImportTerm                          -- KW["import-term"] KW["("] _1 KW[")"],
+   Module                              -- KW["module"] _1 _2,
+   Module.2:iter-star                  -- _1,
+   Specification                       -- V  [H  [KW["specification"]] _1],
+   Specification.1:iter-star           -- _1,
+   Imports                             -- V  [H  [KW["imports"]] _1],
+   Imports.1:iter-star                 -- _1,
+   Strategies                          -- V  [H  [KW["strategies"]] _1],
+   Strategies.1:iter-star              -- _1,
+   Signature                           -- V  [H  [KW["signature"]] _1],
+   Signature.1:iter-star               -- _1,
+   Import                              -- _1,
+   Rules                               -- V  [H  [KW["rules"]] _1],
+   Rules.1:iter-star                   -- _1,
+   Overlays                            -- V  [H  [KW["overlays"]] _1],
+   Overlays.1:iter-star                -- _1,
+   RegexPattern                        -- KW["/"] _1 KW["/"],
+   SingleBranch                        -- _1,
+   TupleBranch                         -- _1 KW["|"] _2,
+   Pieces                              -- _1,
+   Pieces.1:iter                       -- _1,
+   SingleAtom                          -- _1,
+   QuantifiedAtom                      -- _1 _2,
+   GreedyExactBound                    -- KW["{"] _1 KW["}"],
+   GreedyLowerBound                    -- KW["{"] _1 KW[","] KW["}"],
+   GreedyLowerUpperBound               -- KW["{"] _1 KW[","] _2 KW["}"],
+   GreedyOnceOrNot                     -- KW["?"],
+   GreedyZeroOrMore                    -- KW["*"],
+   GreedyOneOrMore                     -- KW["+"],
+   ReluctantExactBound                 -- KW["{"] _1 KW["}?"],
+   ReluctantLowerBound                 -- KW["{"] _1 KW[","] KW["}?"],
+   ReluctantLowerUpperBound            -- KW["{"] _1 KW[","] _2 KW["}?"],
+   ReluctantOnceOrNot                  -- KW["??"],
+   ReluctantZeroOrMore                 -- KW["*?"],
+   ReluctantOneOrMore                  -- KW["+?"],
+   PossessiveExactBound                -- KW["{"] _1 KW["}+"],
+   PossessiveLowerBound                -- KW["{"] _1 KW[","] KW["}+"],
+   PossessiveLowerUpperBound           -- KW["{"] _1 KW[","] _2 KW["}+"],
+   PossessiveOnceOrNot                 -- KW["?+"],
+   PossessiveZeroOrMore                -- KW["*+"],
+   PossessiveOneOrMore                 -- KW["++"],
+   Capture                             -- KW["("] _1 KW[")"],
+   NonCapture                          -- KW["(?:"] _1 KW[")"],
+   PositiveLookahead                   -- KW["(?="] _1 KW[")"],
+   NegativeLookahead                   -- KW["(?!"] _1 KW[")"],
+   PositiveLookbehind                  -- KW["(?<="] _1 KW[")"],
+   NegativeLookbehind                  -- KW["(?<!"] _1 KW[")"],
+   PythonCapture                       -- KW["(?P<"] _1 KW[">"] _2 KW[")"],
+   RegexCapture                        -- KW["("] _1 KW[")@{"] _2 KW["}"],
+   Empty                               -- KW["()"],
+   SingleCharacter                     -- KW["."],
+   LineStart                           -- KW["^"],
+   LineEnd                             -- KW["$"],
+   CharacterClass                      -- _1,
+   AtomLiteral                         -- _1,
+   AtomCharacter                       -- _1,
+   QuotedAtom                          -- KW["\\Q"] _1 KW["\\E"],
+   BracketList                         -- V  [V vs=2 [KW["["] _1] KW["]"]],
+   BracketList.1:iter                  -- _1,
+   NegatedBracketList                  -- V  [V vs=2 [KW["[^"] _1] KW["]"]],
+   NegatedBracketList.1:iter           -- _1,
+   Range                               -- _1 KW["-"] _2,
+   Range.1:alt                         -- _1 _2,
+   Range.2:alt                         -- _1 _2,
+   Union                               -- _1,
+   BracketLiteral                      -- _1,
+   BracketCharacter                    -- _1,
+   LowerClass                          -- KW["Lower"],
+   UpperClass                          -- KW["Upper"],
+   ASCIIClass                          -- KW["ASCII"],
+   AlphaClass                          -- KW["Alpha"],
+   DigitClass                          -- KW["Digit"],
+   AlnumClass                          -- KW["Alnum"],
+   PunctClass                          -- KW["Punct"],
+   GraphClass                          -- KW["Graph"],
+   PrintClass                          -- KW["Print"],
+   BlankClass                          -- KW["Blank"],
+   CntrlClass                          -- KW["Cntrl"],
+   XDigitClass                         -- KW["XDigit"],
+   WhiteSpace                          -- KW["Space"],
+   JavaIsLowerCase                     -- KW["javaLowerCase"],
+   JavaIsLowerCase                     -- KW["javaUpperCase"],
+   JavaIsWhitespace                    -- KW["javaWhitespace"],
+   JavaIsMirrored                      -- KW["javaMirrored"],
+   GreekBlock                          -- KW["InGreek"],
+   UppercaseLetter                     -- KW["Lu"],
+   CurrencySymbol                      -- KW["Sc"],
+   DoubleQuote                         -- KW["\""],
+   DoubleQuote                         -- KW["\""],
+   OctalChar                           -- KW["\\0"] _1,
+   HexHexChar                          -- KW["\\x"] _1,
+   DecHexChar                          -- KW["\\u"] _1,
+   Tab                                 -- KW["\\t"],
+   Newline                             -- KW["\\n"],
+   Return                              -- KW["\\r"],
+   Formfeed                            -- KW["\\f"],
+   Alarm                               -- KW["\\a"],
+   Escape                              -- KW["\\e"],
+   WordChar                            -- KW["\\w"],
+   NonWordChar                         -- KW["\\W"],
+   WhiteSpaceChar                      -- KW["\\s"],
+   NonWhiteSpaceChar                   -- KW["\\S"],
+   DigitChar                           -- KW["\\d"],
+   NonDigitChar                        -- KW["\\D"],
+   ControlCharacter                    -- KW["\\c"] _1,
+   WordBoundry                         -- KW["\\b"],
+   NonWordBoundry                      -- KW["\\B"],
+   InputBeginBoundry                   -- KW["\\A"],
+   PrevMatchEndBoundry                 -- KW["\\G"],
+   EndInputBoundry                     -- KW["\\Z"],
+   EndInputFinalBoundry                -- KW["\\z"],
+   BackReference                       -- KW["\\"] _1,
+   Space                               -- KW["\\ "],
+   Tab                                 -- KW["\\\t"],
+   Newline                             -- KW["\\\n"],
+   OctalChar                           -- KW["\\0"] _1,
+   HexHexChar                          -- KW["\\x"] _1,
+   DecHexChar                          -- KW["\\u"] _1,
+   Tab                                 -- KW["\\t"],
+   Newline                             -- KW["\\n"],
+   Return                              -- KW["\\r"],
+   Formfeed                            -- KW["\\f"],
+   Alarm                               -- KW["\\a"],
+   Escape                              -- KW["\\e"],
+   WordChar                            -- KW["\\w"],
+   NonWordChar                         -- KW["\\W"],
+   WhiteSpaceChar                      -- KW["\\s"],
+   NonWhiteSpaceChar                   -- KW["\\S"],
+   DigitChar                           -- KW["\\d"],
+   NonDigitChar                        -- KW["\\D"],
+   ControlCharacter                    -- KW["\\c"] _1,
+   WordBoundry                         -- KW["\\b"],
+   NonWordBoundry                      -- KW["\\B"],
+   InputBeginBoundry                   -- KW["\\A"],
+   PrevMatchEndBoundry                 -- KW["\\G"],
+   EndInputBoundry                     -- KW["\\Z"],
+   EndInputFinalBoundry                -- KW["\\z"],
+   BackReference                       -- KW["\\"] _1,
+   Space                               -- KW["\\ "],
+   Tab                                 -- KW["\\\t"],
+   Newline                             -- KW["\\\n"],
+   Quoted                              -- KW["\\"] _1,
+   Quoted                              -- KW["\\"] _1,
+   DoubleQuote                         -- KW["\""],
+   DoubleQuote                         -- KW["\""],
+   RegexId                             -- _1,
+   present                             -- KW["e"] _1,
+   absent                              -- ,
+   real-con                            -- _1 KW["."] _2 _3,
+   natural                             -- _1,
+   positive                            -- KW["+"] _1,
+   negative                            -- KW["-"] _1,
+   quoted                              -- _1,
+   unquoted                            -- _1,
+   int                                 -- _1,
+   real                                -- _1,
+   fun                                 -- _1,
+   appl                                -- _1 KW["("] _2 KW[")"],
+   appl.2:iter-star-sep                -- _1 KW[","],
+   appl                                -- _1 KW["("] _2 KW[")"],
+   appl.2:iter-star-sep                -- _1 KW[","],
+   placeholder                         -- KW["<"] _1 KW[">"],
+   list                                -- KW["["] _1 KW["]"],
+   list.1:iter-star-sep                -- _1 KW[","],
+   annotated                           -- _1 _2,
+   default                             -- KW["{"] _1 KW["}"],
+   default.1:iter-sep                  -- _1 KW[","],
+   testsuite                           -- _1 _2,
+   testsuite.1:iter-star               -- _1,
+   testsuite.2:iter-star               -- _1,
+   CompletionHelper                    -- KW["COMPLETION"] _1,
+   Name                                -- KW["testsuite"] _1,
+   Name                                -- KW["module"] _1,
+   Package                             -- KW["package"] _1,
+   Options                             -- KW["options"],
+   TopSort                             -- KW["topsort"] _1,
+   TopSort                             -- KW["start"] KW["symbol"] _1,
+   Language                            -- KW["language"] _1,
+   TargetTopSort                       -- KW["target"] KW["start"] KW["symbol"] _1,
+   TargetLanguage                      -- KW["target"] KW["language"] _1,
+   VarDecl                             -- _1 KW["="] _2,
+   StrategoSuccess                     -- ,
+   StrategoSuccess                     -- KW["succeeds"],
+   StrategoFails                       -- KW["fails"],
+   StrategoEquals                      -- KW["=>"] _1,
+   StrategoEquals                      -- KW["->"] _1,
+   file                                -- KW["parse"] KW["to"] KW["file"] _1,
+   pattern                             -- KW["parse"] KW["to"] _1,
+   ParseOutput                         -- KW["parse"] KW["to"] _1,
+   FailsParsing                        -- KW["fails"] KW["parsing"],
+   SuccessParsing                      -- KW["succeeds"] KW["parsing"],
+   FailsParsing                        -- KW["parse"] KW["fails"],
+   Success                             -- KW["succeeds"],
+   SuccessParsing                      -- KW["parse"] KW["succeeds"],
+   SuccessParsing                      -- KW["parse"],
+   file                                -- KW["file"] _1,
+   Error                               -- _1 KW["error"],
+   Errors                              -- _1 KW["errors"],
+   Warning                             -- _1 KW["warning"],
+   Warnings                            -- _1 KW["warnings"],
+   Note                                -- _1 KW["note"],
+   Notes                               -- _1 KW["notes"],
+   Fatal                               -- _1 KW["fatal"] KW["error"],
+   Fatals                              -- _1 KW["fatal"] KW["errors"],
+   Resolve                             -- KW["resolve"] _1,
+   ResolveTo                           -- KW["resolve"] _1 KW["to"] _2,
+   Complete                            -- KW["complete"] _1,
+   CompleteTo                          -- KW["complete"] _1 KW["to"] _2,
+   Stratego                            -- _1,
+   Build                               -- KW["build"] _1 _2 _3,
+   Run                                 -- KW["run"] _1 _2 _3,
+   Refactor                            -- KW["refactor"] _1 _2 _3,
+   None                                -- ,
+   Argument                            -- KW["("] _1 KW[")"],
+   wildcard                            -- ,
+   File                                -- KW["to"] KW["file"] _1,
+   Fragment                            -- KW["to"] _1,
+   ATerm                               -- KW["to"] _1,
+   Fails                               -- KW["fails"],
+   Numbered                            -- KW["#"] _1,
+   Unnumbered                          -- ,
+   CompletionHelper                    -- KW["COMPLETION"] _1,
+   wildcard                            -- KW["_"],
+   wildcardvar                         -- KW["..."],
+   description                         -- _1
+]
\ No newline at end of file

Modified: spoofax-imp/branches/spoofax-testing-automation/syntax/Spoofax-Testing.sdf
==============================================================================
--- spoofax-imp/branches/spoofax-testing-automation/syntax/Spoofax-Testing.sdf	Fri Feb 24 14:34:14 2012	(r24398)
+++ spoofax-imp/branches/spoofax-testing-automation/syntax/Spoofax-Testing.sdf	Fri Feb 24 14:49:09 2012	(r24399)
@@ -7,6 +7,7 @@
 imports languages/aterm/syntax/ATerms
 imports RegExp
 imports Stratego-Sugar [ Ws -> LAYOUT => IGNORE -> IGNORE ]
+imports Spoofax-AutomatedTesting
 
 exports
   context-free start-symbols TestSuite

Added: spoofax-imp/branches/spoofax-testing-automation/test/randomtesting.aterm
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/test/randomtesting.aterm	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,45 @@
+AutoTest(
+  ATSettings(
+    [ TargetLanguage("mobl")
+    , TargetStrategy("editor-analyze")
+    , NumberOfRuns("1")
+    , IgnoreCons(["\"Mixin\"", "\"Module\"", "\"Configuration\""])
+    , MaxCount("100")
+    , MaxRec("4")
+    ]
+  )
+, COVSettings([CoveredFolder("\"/trans/analyze.str\"")])
+, ErrorCorrections(
+    [ ErrorCorrection(
+        "noRoot"
+      , "\"no 'root' screen\""
+      , ErrMatchWildCard()
+      , AddCorrection(
+          Insert()
+        , Node("ScreenNoReturnType", [Params_EmptyArray(), Params_String("\"root\""), Params_EmptyArray(), Params_EmptyArray()])
+        , DestMatchCons("Application", [DestMatchWildCard(), TargetNode()])
+        )
+      )
+    , ErrorCorrection(
+        "simpleTypeNotDef"
+      , "\"Type is not defined:\""
+      , ErrMatchCons("SimpleType", [ErrMatchParam("1")])
+      , AddCorrectionFirst(
+          InsertOnce()
+        , Node("EntityNoSuper", [Params_EmptyArray(), Params_Var("1"), Params_EmptyArray()])
+        , DestMatchCons("Application", [DestMatchWildCard(), TargetNode()])
+        )
+      )
+    , ErrorCorrection(
+        "tuple0"
+      , "\"Type is not defined: mobl::Tuple0<>\""
+      , ErrMatchParam("1")
+      , AddCorrectionFirst(
+          InsertOnce()
+        , Node("ExternalTypeNoSuper", [Params_EmptyArray(), Params_Var("1"), Params_EmptyArray()])
+        , DestMatchCons("Application", [DestMatchWildCard(), TargetNode()])
+        )
+      )
+    ]
+  )
+)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/test/randomtesting.spt
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/test/randomtesting.spt	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,41 @@
+automatic test
+	target language: mobl
+	target strategy: editor-analyze
+	number of runs: 1
+	Ignore Cons: "Mixin" , "Module" , "Configuration"
+	Max Term Count: 10
+	Max Recursion: 2
+
+coverage settings
+	covered folder: "/trans/analyze.str"
+
+error correction
+
+noRoot:
+	 "no 'root' screen" , _ -> 
+	 insert ScreenNoReturnType([],"root",[],[]) @ Application(_,$here)
+
+simpleTypeNotDef : 
+	"Type is not defined:" , SimpleType($_1)  -> 
+	insert once EntityNoSuper([], $_1, []) first@ Application(_,$here)       
+
+tuple0 : 
+	"Type is not defined: mobl::Tuple0<>" , $_1 -> 
+	insert once ExternalTypeNoSuper([],$_1,[]) first@ Application(_,$here)
+
+// Generation of test cases by both random generation and mutation of existing hand written code
+// Depth and count extrapolation from existing code.
+
+// // Exp : type-of-is-good
+// // 
+// // isExp 
+// // 
+// // 
+// // foo =
+// // 	?t;
+// // 	sort := <origin-sort> t;
+// // 	!sort => "Exp"
+// 
+// for all JSEXP( a,b) 
+// 
+//   e: Exp => <type-of>e + <constraint-error>e
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/trans/coverage/construct-text.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/trans/coverage/construct-text.str	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,417 @@
+module construct-text
+
+imports
+	libstratego-lib 
+	libstratego-gpp
+	coverage/layout-adaption
+	coverage/origin-tracking
+
+signature constructors
+  Parenthetical : Unknown -> Unknown
+
+rules //Parenthetical
+
+  origin-indent = ?Parenthetical(<origin-indent>)
+
+rules //pp rules for default nodes 
+	  
+  pp-default(pp):
+  	Parenthetical(node) -> <concat-strings> ["(", <pp> node, ")"]
+  
+  pp-default(pp):
+  	None() -> ""
+
+  pp-default(pp):
+  	Some(x) -> <pp> x
+
+  //pp-default(pp): amb([h|tail])
+
+  pp-default(pp) = is-string
+
+  pp-default(pp) = int-to-string
+  
+rules //interface
+
+/*
+ * Constructs the textual change associated with 
+ * the transformation that replaces a (sub)term 'oldnode' with a new (sub)term 'newnode'.
+ * @param custom pp strategy used to construct the text fragment for nodes that miss origin information T -> String
+ * pp strategy is assumed to be homomorphic (except for lists separators that require parent node information)
+ * @parenthesize strategy to resolve parse ambiguities that possible invalidate homomorpism T -> T
+ * @prevents application of homomorphism assumption (or-node, node) -> _ 
+ * @resugars when desugaring is non local or 1:n, thereby preventing incorrect reconstruction 
+ * @type (original-node, new-node) -> (Int,Int, String)
+ */	
+construct-textual-change(pp, parenthesize, override-reconstruction, resugar):
+	t@(oldnode, newnode) -> (start-offset, end-offset, newText)
+	where
+		<is-tuple> t;
+		<has-origin-term> oldnode		
+	with
+		parenthesized-node := <try(parenthesize)> newnode;
+		reconstructed-text := <topdown(try(strip-annos)); construct-text-from-old(pp, override-reconstruction, resugar)> (oldnode, parenthesized-node); 
+		r-text := <origin-set-relation>(parenthesized-node, reconstructed-text);
+		(start-offset, end-offset, newText) := <ast-change-to-text-change(pp, override-reconstruction, resugar)> REPLACEMENT(oldnode, r-text)
+		
+rules
+	
+construct-textual-change(pp, parenthesize, override-reconstruction, resugar):
+	t@(oldnode, newnode) -> (0, 0, "")
+	where
+		<is-tuple> t;
+		<equal> (oldnode, newnode)
+
+construct-textual-change(pp, parenthesize, override-reconstruction, resugar)=
+	map(construct-textual-change(pp, parenthesize, override-reconstruction, resugar))
+
+//treat olnode as a candidate origin term to protect against loss of origin (and to preserve sugar in first diff)
+construct-text-from-old(pp, override-reconstruction, resugar):
+	(oldnode, newnode) -> reconstructed-text
+	where
+		reconstructed-text := <construct-text-from-origin(pp, override-reconstruction, resugar)> (oldnode, newnode) <+ //possible desugared
+		reconstructed-text := <construct-text-from-origin(pp, override-reconstruction, resugar)> (<where(not(is-origin-term)); origin-term> oldnode, newnode) <+
+		reconstructed-text := <construct-text(pp, override-reconstruction, resugar)> newnode
+
+rules // backwards compatibility
+
+construct-textual-change(pp) = construct-textual-change(pp, id, fail, fail)
+
+construct-textual-change(pp|pp-table)=
+	construct-textual-change(pp <+ (ast2abox(|[pp-table]); box2text-string(|100)))
+
+rules //text-reconstruction
+
+construct-text(pp, override-reconstruction, resugar) = 
+	pp-default(construct-text(pp, override-reconstruction, resugar)) <+ //Parenthesis, None, ...
+	construct-text-from-origin-desugared(pp, override-reconstruction, resugar) <+ 
+	construct-text-from-origin(pp, override-reconstruction, resugar) <+
+	construct-text-by-pp(pp, override-reconstruction, resugar) <+
+	pp
+
+construct-text-from-origin-desugared(pp, override-reconstruction, resugar):
+	node -> <construct-text-from-origin(pp, override-reconstruction, resugar)> (origin-desugared-node, node)
+	where 
+		origin-desugared-node := <origin-term-desugared; topdown(try(strip-annos))> node
+
+construct-text-from-origin(pp, override-reconstruction, resugar):
+	node -> <construct-text-from-origin(pp, override-reconstruction, resugar)> (origin-node, node)
+	where
+		origin-node := <origin-term> node
+ 
+//list must be constructed with comments that preceed the first element or succeed the last element
+//(otherwise insert-at-end gives problems)
+construct-text-from-origin(pp, override-reconstruction, resugar):
+	lst -> <construct-text-with-comments(pp, override-reconstruction, resugar|"")> (origin-lst, lst)
+	where
+		origin-lst := <find-origin-sublist> lst
+
+construct-text-from-origin(pp, override-reconstruction, resugar):
+	t@(origin-node, node) -> <correct-indentation(|origin-node)> text
+	where //guarantees that node can be formatted from the origin node, preventing non-termination
+		<is-tuple> t; //debug(!"ast-changes?: ");
+		<has-origin-term> origin-node;
+		ast-changes := <collect-ast-changes(override-reconstruction, resugar)> (origin-node, node); 
+		<is-terminating-diff(|node)> ast-changes //prevent non termination
+		//; debug(!"ast-changes!: ")
+	with
+		text-changes := <map(ast-change-to-text-change(pp, override-reconstruction, resugar))> ast-changes; //debug(!"txt-changes: ");
+		text := <apply-text-changes>(text-changes, <origin-text> origin-node, <origin-start-offset> origin-node)
+
+construct-text-by-pp(pp, override-reconstruction, resugar):
+	node -> text
+	where 
+		text := <
+			all(alltd(construct-text-with-comments(pp, override-reconstruction, resugar|<DEFAULT-INDENT>))); 
+			topdown(try(pp-default(pp))); //handle brackets
+			pp
+		> node
+
+construct-text-with-comments(pp, override-reconstruction, resugar|default-indent) = 
+	construct-text-with-comments-desugared(pp, override-reconstruction, resugar|default-indent) <+
+	construct-text-with-comments-origin(pp, override-reconstruction, resugar|default-indent)
+
+construct-text-with-comments-desugared(pp, override-reconstruction, resugar|default-indent):
+	node -> <construct-text-with-comments(pp, override-reconstruction, resugar|default-indent)> (origin-desugared-node, node)
+	where 
+		origin-desugared-node := <origin-term-desugared; topdown(try(strip-annos))> node; 
+		<same-signature> (origin-desugared-node, node)
+
+construct-text-with-comments-origin(pp, override-reconstruction, resugar|default-indent):
+	node -> <construct-text-with-comments(pp, override-reconstruction, resugar|default-indent)> (origin-node, node)
+	where
+		origin-node := <origin-term <+ find-origin-sublist> node
+
+//construct-text-with-comments(pp|default-indent): Parentetical(node) -> ...
+// on this moment the parenthesis will be placed on the layouted text, 
+// which is awful. It should be: {indent + comments before}{(}{node-text}{)}{comments after} 
+
+construct-text-with-comments(pp, override-reconstruction, resugar|default-indent):
+	t@(origin-node, node) -> node-text
+	where 
+		<is-tuple> t;
+		<has-origin-term> origin-node
+	with //termination check is not needed (we need to Replace to keep comments), since it is called on a subterm in construct-text-by-pp
+		ast-changes := <collect-ast-changes(override-reconstruction, resugar)> (origin-node, node); //debug(!"--ast-changes: ");
+		text-changes := <map(ast-change-to-text-change(pp, override-reconstruction, resugar))> ast-changes; //debug(!"--txt-changes: ");
+		full-text := <origin-text-with-layout> origin-node; 
+		full-text-start-offset := <origin-layout-prefix-start-offset> origin-node; 
+		modified-full-text := <apply-text-changes>(text-changes, full-text, full-text-start-offset); 
+		node-text := <replace-indentation(|default-indent, <origin-indent <+ !""> origin-node)> modified-full-text
+
+signature constructors //signatures for AST changes
+	DELETION      : OldList -> AST_CHANGE
+	REPLACEMENT   : OldNode * NewNode -> AST_CHANGE //TODO: REPLACEMENT_IN_LIST, REPLACEMENT + bracket insertion for REPLACEMENT
+	INSERT_BEFORE : OldNode * NewList -> AST_CHANGE
+	INSERT_AT_END : OldNode * NewList -> AST_CHANGE
+
+rules //ast-diff
+
+collect-ast-changes(override-reconstruction, resugar) = 
+	where(is-tuple); 
+	try(remove-superfluous-parentethical);
+	(collect-ast-changes-eq <+
+	collect-ast-changes-not-homomorphic(override-reconstruction) <+
+	collect-ast-changes-resugared(override-reconstruction, resugar) <+
+	collect-ast-changes-rec-node(override-reconstruction, resugar) <+
+	collect-ast-changes-rec-list(override-reconstruction, resugar) <+
+	collect-ast-changes-sugared(override-reconstruction, resugar) <+
+	collect-ast-changes-replace)
+
+//1: helps to keep syntactic sugar
+//2: prevent incorrect reconstruction in case local and global information gets mixed
+collect-ast-changes-resugared(override-reconstruction, resugar):
+	(origin-node, node) -> ast-changes
+	where 
+		<not(is-origin-term)> origin-node; //otherwise resugaring does not make sense
+		origin-resugared := <origin-track-forced(resugar)> origin-node;
+		<not(equal)>(origin-node, origin-resugared);
+		ast-changes := <collect-ast-changes(override-reconstruction, resugar)> (origin-resugared, <try(resugar)> node)
+
+collect-ast-changes-not-homomorphic(override-reconstruction):
+	(origin-node, node) -> [REPLACEMENT(origin-node, <origin-set-relation>(node, custom-node))]
+	where
+		custom-node := <override-reconstruction> (origin-node, node); //typical the node itself or a textual representation
+		<check-change-origin> REPLACEMENT(origin-node, node)
+
+remove-superfluous-parentethical:
+	(origin-node, Parenthetical(node)) -> (origin-node, node)
+	where //apparently, parenthesis already in source
+		<same-signature> (origin-node, node)
+
+collect-ast-changes-eq:
+	(origin-node, node) -> []
+	where
+		<equal> (origin-node, node)
+
+collect-ast-changes-rec-node(override-reconstruction, resugar):
+	(origin-node, node) -> ast-changes
+	where
+		<same-signature <+ ?([_],[_])> (origin-node, node); //TODO: not injection?
+		<is-related-to(|origin-node) <+ (is-related-to-fuzzy(|origin-node))> node;
+		arg-tuples := <zip>(<get-arguments> origin-node, <get-arguments> node); 
+		ast-changes := <map(collect-ast-changes(override-reconstruction, resugar)); flatten-list> arg-tuples 
+ 
+collect-ast-changes-rec-list(override-reconstruction, resugar):
+	(origin-lst, lst) -> ast-changes
+	where 
+		<is-list; not(?[])> lst;
+		<is-list; not(?[])> origin-lst;
+		<not(violates-homomorphism-list)> (origin-lst, lst)
+	where
+		ast-changes := <
+			list-diff(override-reconstruction, resugar|origin-lst); 
+			filter(not(?INSERT_BEFORE(_, [])));
+			filter(not(?INSERT_AT_END(_, [])))
+		> (origin-lst, lst); 
+		<map(check-change-origin)> ast-changes 
+
+check-change-origin:
+	r at REPLACEMENT(or, _) -> r
+	where
+		<has-origin-term> or
+
+check-change-origin:
+	d at DELETION(or) -> d
+	where
+		<has-origin-term> or
+
+check-change-origin:
+	ins at INSERT_AT_END(or, trm) -> ins
+	where
+		<has-origin-term; origin-separation> or <+ <?[]> trm
+
+check-change-origin:
+	ins at INSERT_BEFORE(or, trm) -> ins
+	where
+		<has-origin-term; origin-separation> or <+ <?[]> trm
+		
+collect-ast-changes-sugared(override-reconstruction, resugar):
+	(origin-node, node) -> ast-changes
+	where
+		<is-origin-term-desugared> node;
+		<not(is-origin-term)> node
+	where
+		ast-changes := <collect-ast-changes-rec-node(override-reconstruction, resugar)> (<origin-term> origin-node, <origin-term> node)
+		  
+collect-ast-changes-replace:
+	(origin-node, node) -> [REPLACEMENT(origin-node, node)]
+	where
+		<check-change-origin> REPLACEMENT(origin-node, node);
+		<not(is-list) <+ ?[] <+ ?[_] <+ has-origin-sublist> node 
+		//list-text with more then one element can only be constructed in a context 
+		// or from origin 
+
+rules //validity
+
+/*
+//desugaring: changes must fall inside region of original text
+//issue: is it correct if we simply filter context sensitive changes?
+in-parent-context(|origin-parent):
+	ast-change -> ast-change
+	where 
+		start-offset-node := <origin-deletion-start-offset> origin-parent; 
+		end-offset-node := <origin-deletion-end-offset> origin-parent; 
+		start-offset-change := <get-arguments; Hd; origin-start-offset> ast-change; 
+		end-offset-change := <get-arguments; Hd; origin-end-offset> ast-change
+	where 
+		<leq> (start-offset-node, start-offset-change); 
+		<leq> (end-offset-change, end-offset-node) 
+*/
+	
+rules //list diff
+
+list-diff(override-reconstruction, resugar|origin-lst) = 
+	(list-diff-fuzzy(override-reconstruction, resugar|origin-lst) <+
+	list-diff-origin-related(override-reconstruction, resugar|origin-lst)) 
+	
+list-diff-fuzzy(override-reconstruction, resugar|origin-lst):
+	([origin-elem|origin-rest], [new-elem|new-rest]) -> ast-changes
+	where
+		<is-deletion(|new-rest)> origin-elem;
+		<is-insertion(|origin-rest)> new-elem;
+		//<is-related-to-fuzzy(|origin-elem)> new-elem //fuzzy to prevent deletion + insertion
+		ast-changes := <flatten-list>[
+			<collect-ast-changes(override-reconstruction, resugar)>(origin-elem, new-elem)|
+			<list-diff(override-reconstruction, resugar|origin-lst)> (origin-rest, new-rest)
+		]
+
+list-diff-origin-related(override-reconstruction, resugar|origin-lst): 
+	(origin-elems, new-elems) -> ast-changes
+	where 
+		deleted-elems := <take-while(is-deletion(|new-elems))> origin-elems;  
+		origin-rest := <drop-while(is-deletion(|new-elems))> origin-elems;
+		<not(?[])> deleted-elems;
+		<check-change-origin> DELETION(deleted-elems);
+		ast-changes := <flatten-list>[DELETION(deleted-elems)|<list-diff(override-reconstruction, resugar|origin-lst)> (origin-rest, new-elems)]
+
+list-diff-origin-related(override-reconstruction, resugar|origin-lst):
+	([origin-elem|origin-rest], new-elems) -> ast-changes
+	where
+		(inserted, elem, rest) := <split-fetch-keep(is-related-to(|origin-elem))> new-elems;
+		<check-change-origin> INSERT_BEFORE(origin-elem, inserted);
+		ast-changes := <flatten-list>[
+			INSERT_BEFORE(origin-elem, inserted), 
+			<collect-ast-changes(override-reconstruction, resugar)>(origin-elem, elem)|
+			<list-diff(override-reconstruction, resugar|origin-lst)> (origin-rest, rest)
+		]
+
+list-diff-origin-related(override-reconstruction, resugar|origin-lst):
+	([], new-elems) -> [INSERT_AT_END(origin-lst, new-elems)]
+	where
+		<check-change-origin> INSERT_AT_END(origin-lst, new-elems)
+		
+list-diff-origin-related(override-reconstruction, resugar|origin-lst):
+	([], new-elems) -> [INSERT_AT_END(<last> origin-lst, new-elems)]
+	where
+		<check-change-origin> INSERT_AT_END(<last> origin-lst, new-elems)
+
+
+rules //helper rules text construction
+
+find-origin-sublist:
+	lst -> sublst
+	where
+		at-suffix(sublst := <origin-sublist-term; ?[_,_|_]>) <+
+		sublst := <init; find-origin-sublist> lst
+
+has-origin-sublist =
+	where(find-origin-sublist)
+
+is-terminating-diff(|newnode):
+	ast-changes -> ast-changes
+	where
+		<not(fetch(?REPLACEMENT(_, newnode)))> ast-changes 
+		//lists are constructed from their elements, so non-termination is not a problem for insertion
+
+rules //helper rules diff
+	
+same-signature:
+	t@(trm1, trm2) -> (trm1, trm2)
+	where(
+		<is-tuple> t;
+		<eq>(<get-constructor> trm1, <get-constructor> trm2);
+		<eq>(<get-arguments; length> trm1, <get-arguments; length> trm2);
+		<not(is-list)> trm1
+	)
+
+same-signature(|t1):
+	t -> t
+	where
+		<same-signature> (t1,t)
+
+violates-homomorphism-list =
+	?([],[_,_|_]) <+ 
+	?([_],[_,_|_]) <+
+	(?([ortrm],[newtrm]); where(not(<is-related-to-fuzzy(|ortrm)> newtrm)))  //insertion constructs list with 2 elements from list with one element 
+
+is-insertion(|origin-elems):
+	new-elem -> new-elem
+	where
+		<?[or-elem|tail]> origin-elems;
+		<not(is-related-to(|or-elem))> new-elem;
+		<is-insertion(|tail)> new-elem
+
+is-insertion(|origin-elems) =
+	<?[]> origin-elems
+
+is-deletion(|new-elems) = 
+	?origin-elem;
+	<not(fetch(is-related-to(|origin-elem)))> new-elems
+
+is-related-to(|origin-node):
+	node -> node
+	where
+		<equal> (origin-node, node) <+
+		<equal> (<origin-term> origin-node, node) <+
+		<equal>(<origin-term> origin-node, <origin-term> node)
+
+is-related-to:
+	(origin-node, node) -> (origin-node, node)
+	where
+		<is-related-to(|origin-node)> node
+
+//related via subterms
+is-related-to-fuzzy(|origin-node):
+	node -> node
+	where 
+		<oncetd(origin-subfragment(|origin-node)) <+ topdown(not(has-origin-term))> node
+
+origin-subfragment(|origin-node):
+	node -> node
+	where
+		start-offset := <origin-start-offset> node;
+		end-offset := <origin-end-offset> node;
+		<leq> (<origin-leftmost-offset> origin-node, start-offset);
+		<leq> (end-offset, <origin-rightmost-offset> origin-node)
+
+origin-leftmost-offset = 
+	origin-start-offset <+
+	get-arguments; 
+	fetch-elem(origin-leftmost-offset)
+	
+
+origin-rightmost-offset = 
+	origin-end-offset <+
+	get-arguments;
+	reverse; 
+	fetch-elem(origin-rightmost-offset)
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/trans/coverage/coverage.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/trans/coverage/coverage.str	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,226 @@
+module coverage
+
+imports
+	coverage/construct-text
+	coverage/layout-adaption
+	coverage/origin-tracking
+	random/random_test
+	include/SpoofaxLang
+	libstrc
+	
+rules
+	
+	external parse-str-file(|)
+	external apply-inline-coverage(|newProjectName, ast)
+	external change-files(|astChanges, textChanges)
+	external build(|coverProject,oldProjectPath,builderPath)
+	external run(|coverProject,strategy)
+	external finish-coverage(|coverProjectPath, oldProjectPath)
+	
+	ready-project-for-coverage(|filename,language,oldProjectPath,builderPath)=
+		file:= <parse-str-file> filename
+	;	coverageProjectName := <conc-strings> (language,"-CoverageTest")
+	;	astChanges := <apply-inline-coverage(|coverageProjectName, file)>
+	; 	textReplaceTerm:= <construct-textual-change(pp-dynRules)> astChanges
+	;	<write-to-string;debug> astChanges
+	; 	<write-to-string;debug> textReplaceTerm
+	;	<conc-strings;change-files(|astChanges,textReplaceTerm)> (coverageProjectName, <CoveredFolder>)
+	 	;debug(!"e")
+	//;	build(|coverageProjectName,oldProjectPath,builderPath ); debug
+		
+	
+	pp-dynRules =
+    	pp-stratego-string
+	
+    inlineCoverage:
+		(_,ast2,_,ast,path,project-path) -> ([(ast,new-ast')], fatal-errors, errors, warnings)
+		with
+			rules(MainStrategy := "analyze")
+		;   new-ast := <topdown(try(inlineCoverageRules))> ast
+		;	fatal-errors:= []
+		;	errors := []
+		; 	warnings := []
+		;	MainStrategy;debug
+		;	new-ast' := <topdown(try(write-feedback))> new-ast
+		
+			
+	write-feedback:
+		SDefNoArgs(name,strategy) -> SDefNoArgs(name,strategy')
+		where
+			<eq> (name, <MainStrategy>)		
+		with
+			listOfIfs := <map(add-feedback)> <all-keys-CoverageRules>
+		;	strategy' := <surroundStrategy-ListOfIfs(|strategy)> listOfIfs
+		 	
+	write-feedback:
+		SDef(name,args,strategy) -> SDef(name,args,strategy')
+		where
+			<eq> (name, <MainStrategy>)
+		with
+			listOfIfs := <map(add-feedback)> <bagof-CoverageRules>
+		;	strategy' := <surroundStrategy-ListOfIfs(|strategy)> listOfIfs
+		 	
+	write-feedback:
+		SDefT(name,args1,args2,strategy) -> SDefT(name,args1,args2,strategy')
+		where
+			<eq> (name, <MainStrategy>)
+		with
+			listOfIfs := <map(add-feedback)> <bagof-CoverageRules>
+		;	strategy' := <surroundStrategy-ListOfIfs(|strategy)> listOfIfs
+	
+	
+	write-feedback:
+		RDefNoArgs(name,rule) -> RDefNoArgs(name,rule')
+		where
+			<eq> (name, <MainStrategy>)
+		with
+			listOfIfs := <map(add-feedback)> <bagof-CoverageRules>
+		;	rule' := <surroundRule-ListOfIfs(|listOfIfs)> rule
+	
+			
+	write-feedback:
+		RDef(name,args,rule) -> RDef(name,args,rule')
+		where
+			<eq> (name, <MainStrategy>)
+		with
+			listOfIfs := <map(add-feedback)> <bagof-CoverageRules>
+		;	rule' := <surroundRule-ListOfIfs(|listOfIfs)> rule
+			
+	write-feedback: 
+		RDefT(name,args1,args2,rule) -> RDefT(name,args1,args2,rule')
+		where
+			<eq> (name, <MainStrategy>)
+		with
+			listOfIfs := <map(add-feedback)> <bagof-CoverageRules>
+		;	rule' := <surroundRule-ListOfIfs(|listOfIfs)> rule
+		
+	concat-listOfIfs:
+		[] -> result
+		with
+			result := Seq(Seq(Seq(
+	                          Assign(Var("CoveredRules"), RootApp(CallNoArgs(SVar("all-keys-Covered"))))
+	                        , BA(
+	                            CallNoArgs(SVar("WriteToTextFile"))
+	                          , NoAnnoList(Tuple([NoAnnoList(Str("\"results\"")), Var("CoveredRules")])))	                  
+	                      ),BA(
+                          CallNoArgs(SVar("debug")), NoAnnoList(Tuple([NoAnnoList(Str("\"Running Coverage...\""))])))),
+                           CallNoArgs(SVar("all-keys-Covered"))
+                        )
+	
+	concat-listOfIfs:
+		[x | xs] -> result
+		with
+			result := Seq(x,<concat-listOfIfs> xs)
+	
+	surroundStrategy-ListOfIfs(|strategy)=
+		?listOfIfs
+	;	r' := <concat-listOfIfs> listOfIfs
+	; 	!Seq(strategy, r')
+	  	
+	surroundRule-ListOfIfs(|listOfIfs):
+		RuleNoCond(a,b) -> Rule(a,b,WithClause(r'))
+		with
+			r' := <concat-listOfIfs> listOfIfs
+
+	surroundRule-ListOfIfs(|listOfIfs):
+		Rule(a,b,strategy) -> Rule(a,b,listOfClauses)
+		where
+			not(!strategy => [x|xs])
+		with
+			r' := <concat-listOfIfs> listOfIfs
+		;	listOfClauses := [WhereClause(strategy), WithClause(r')]
+	
+	surroundRule-ListOfIfs(|listOfIfs):
+		Rule(a,b, listOfClauses) -> Rule(a,b,listOfClauses')
+		with
+			r' := <concat-listOfIfs> listOfIfs
+		;	listOfClauses' := <concat> [listOfClauses, [WithClause(r')]]
+				
+	add-feedback=
+		?ruleName
+	;	dr1 := <conc-strings> (ruleName, "_1")
+	;	dr2 := <conc-strings> (ruleName, "_2")
+	;	!Seq(IfThen(BA(CallNoArgs(SVar(dr1)), NoAnnoList(Int("1"))), GenDynRules([SetDynRuleMatch(DynRuleId(RDecNoArgs("Covered")), NoAnnoList(Str(<double-quote> dr1)))])),
+	 	IfThen(BA(CallNoArgs(SVar(dr2)), NoAnnoList(Int("1"))), GenDynRules([SetDynRuleMatch(DynRuleId(RDecNoArgs("Covered")), NoAnnoList(Str(<double-quote> dr2)))])))
+			
+	inlineCoverageRules:
+		SDefNoArgs(name,strategy) -> SDefNoArgs(name,strategy')
+		with
+			strategy' := <try(surroundStrategy(|name))> strategy
+	
+	inlineCoverageRules:
+		SDef(name,args,strategy) -> SDef(name,args,strategy')
+		with
+			strategy' := <try(surroundStrategy(|name))> strategy
+			
+	inlineCoverageRules:
+		SDefT(name,args1,args2,strategy) -> SDefT(name,args1,args2,strategy')
+		with
+			strategy' := <try(surroundStrategy(|name))> strategy
+			
+	inlineCoverageRules:
+		RDefNoArgs(name,rule) -> RDefNoArgs(name,rule')
+		with
+			rule' := <surroundRule(|name)> rule
+		
+	inlineCoverageRules:
+		RDef(name,args,rule) -> RDef(name,args,rule')
+		with
+			rule' := <surroundRule(|name)> rule
+	
+	inlineCoverageRules: 
+		RDefT(name,args1,args2,rule) -> RDefT(name,args1,args2,rule')
+		with
+			rule' := <surroundRule(|name)> rule
+	
+	surroundRule(|name):
+		RuleNoCond(a,b) -> result
+		with
+			if not(<eq> (name,<MainStrategy>)) then
+				mainName := <newname> name
+			;	rules(CoverageRules : mainName)
+			;	dr1_name := <concat-strings> [mainName, "_1"]
+			;	dr1 := GenDynRules([SetDynRuleMatch(DynRuleId(RDecNoArgs(dr1_name)), NoAnnoList(Int("1")))])
+			;	dr2_name := <concat-strings> [mainName, "_2"]
+			;	dr2 := GenDynRules([SetDynRuleMatch(DynRuleId(RDecNoArgs(dr2_name)), NoAnnoList(Int("1")))])
+			; 	result := Rule(a,b,WithClause(Seq(dr1,dr2)))
+			else
+				result := RuleNoCond(a,b)
+			end
+			 	
+	
+	surroundRule(|name):
+		Rule(a,b,strategy) -> Rule(a,b,strategy')
+		where
+			not(!strategy => [x|xs])
+		with
+			strategy' := <try(surroundStrategy(|name))> strategy
+			
+	surroundRule(|name):
+		Rule(a,b, listOfClauses) -> Rule(a,b,listOfClauses')
+		with
+			if not(<eq> (name,<MainStrategy>)) then
+				mainName := <newname> name
+			;	rules(CoverageRules : mainName)
+			;	dr1_name := <concat-strings> [mainName, "_1"]
+			;	dr1 := GenDynRules([SetDynRuleMatch(DynRuleId(RDecNoArgs(dr1_name)), NoAnnoList(Int("1")))])
+			;	dr2_name := <concat-strings> [mainName, "_2"]
+			;	dr2 := GenDynRules([SetDynRuleMatch(DynRuleId(RDecNoArgs(dr2_name)), NoAnnoList(Int("1")))])
+			;	listOfClauses' := <concat>[[WithClause(dr1)],listOfClauses,[WithClause(dr2)]]
+			else
+				listOfClauses' := listOfClauses
+			end
+	
+	
+	surroundStrategy(|name)=
+		?strategy
+	;	if not(<eq> (name,<MainStrategy>)) then
+			mainName := <newname> name
+		;	rules(CoverageRules : mainName)
+		;	dr1_name := <concat-strings> [mainName, "_1"]
+		;	dr1 := GenDynRules([SetDynRuleMatch(DynRuleId(RDecNoArgs(dr1_name)), NoAnnoList(Int("1")))])
+		;	dr2_name := <concat-strings> [mainName, "_2"]
+		;	dr2 := GenDynRules([SetDynRuleMatch(DynRuleId(RDecNoArgs(dr2_name)), NoAnnoList(Int("1")))])
+		;	!Seq(dr1,Seq(strategy,dr2))
+		end
+				
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/trans/coverage/layout-adaption.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/trans/coverage/layout-adaption.str	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,263 @@
+module layout-adaption
+
+imports
+	coverage/construct-text
+	coverage/origin-tracking
+		
+rules //rules that translate AST-changes to Textual changes
+
+ast-change-to-text-change(pp, override-reconstruction, resugar):
+	DELETION(origin-lst) -> tc-deletion
+	with 
+		tc-deletion := <create-textchange-delete> origin-lst
+
+ast-change-to-text-change(pp, override-reconstruction, resugar):
+	REPLACEMENT(origin-node, new-node) ->  tc-replacement 
+	with 
+		tc-replacement := <create-textchange-replace(pp, override-reconstruction, resugar)> (origin-node, new-node) 
+
+ast-change-to-text-change(pp, override-reconstruction, resugar):
+	INSERT_BEFORE(origin-elem, new-elems) -> tc-insert-before
+	with
+		tc-insert-before := <create-textchange-insert-before(pp, override-reconstruction, resugar)> (origin-elem, new-elems)
+
+ast-change-to-text-change(pp, override-reconstruction, resugar):
+	INSERT_AT_END(origin-elem, new-elems) -> tc-insert-at-end
+	with
+		tc-insert-at-end := <create-textchange-insert-at-end(pp, override-reconstruction, resugar)> (origin-elem, new-elems)
+	
+create-textchange-delete:
+	origin-elems -> (start-offset, end-offset, "")
+	where
+		start-offset := <origin-deletion-start-offset> origin-elems; 
+		end-offset   := <origin-deletion-end-offset> origin-elems
+		
+create-textchange-replace(pp, override-reconstruction, resugar):
+	(origin-node, new-node) -> (start-offset, end, indented-text)
+	where  
+		start-offset := <origin-start-offset> origin-node;
+		end   := <origin-end-offset> origin-node;
+		text  := <construct-text(pp, override-reconstruction, resugar)> new-node;
+		indented-text := <adapt-indentation(|origin-node)> text
+
+create-textchange-insert-before(pp, override-reconstruction, resugar):
+	(origin-node, new-elems) -> (offset, offset, insert-text)
+	where 
+		offset := <origin-insert-before-offset> origin-node;
+		new-elems-text := <map(construct-text-list-element(pp, override-reconstruction, resugar|origin-node))> new-elems;
+		insert-text := <concat-strings> new-elems-text
+
+create-textchange-insert-at-end(pp, override-reconstruction, resugar):
+	(origin-node, new-elems) -> (offset, offset, insert-text)
+	where 
+		offset := <origin-insert-at-end-offset> origin-node;
+		new-elems-text := <at-init(
+			construct-text-list-element(pp, override-reconstruction, resugar|origin-node), 
+			construct-text-list-element-last(pp, override-reconstruction, resugar|origin-node))
+		> new-elems;
+		insert-text := <add-separation-before> (origin-node, <concat-strings> new-elems-text)
+
+rules //helper rules layout
+
+construct-text-list-element(pp, override-reconstruction, resugar|origin-node):
+	elem -> elem-text
+	where
+		text := <construct-text(pp, override-reconstruction, resugar)> elem; 
+		layout-before := <layout-prefix; correct-indentation(|elem)> elem;
+		indented-prefix-text := <conc-strings; adapt-indentation(|origin-node)> (layout-before, text); 
+		comments-after := <comments-after; correct-indentation(|elem); adapt-indentation(|origin-node)> elem;
+		separation := <origin-separation> origin-node;
+		layout-after := <create-separation-after> (separation, comments-after);
+		elem-text := <conc-strings> (indented-prefix-text, layout-after)
+
+construct-text-list-element-last(pp, override-reconstruction, resugar|origin-node):
+	elem -> elem-text
+	where
+		text := <construct-text(pp, override-reconstruction, resugar)> elem;
+		layout-before := <layout-prefix; correct-indentation(|elem)> elem;
+		indented-prefix-text := <conc-strings; adapt-indentation(|origin-node)> (layout-before, text);
+		comments-after := <comments-after; correct-indentation(|elem); adapt-indentation(|origin-node)> elem;
+		elem-text := <concat-strings; trim-trailing-whitespace> [indented-prefix-text, " ", comments-after]
+
+
+rules //helper rules indentation
+
+/*
+ * replaces indent of the new constructed text (retrieved from new-node)
+ * with indent appropriate for insertion position (retrieved from origin-node) 
+ */
+adapt-indentation(|origin-node):
+	text -> indented-text
+	where
+		indent-string-new := <origin-indent> origin-node; 
+		indented-text := <replace-indentation(|indent-string-new, "")> text
+
+correct-indentation(|origin-node):
+	txt -> indent-corrected-text
+	where
+		indent-string := <origin-indent <+ !""> origin-node;
+		indent-corrected-text := <replace-indentation(|"", indent-string)> txt
+
+		
+replace-indentation(|new-indent, old-indent):
+	text -> indented-text
+	where
+		indent-value-old := <indent-value> old-indent;
+		indented-text := <
+			remove-indentation(|indent-value-old); 
+			prefix-lines(|new-indent);
+			ltrim-chars(?' ' <+ ?'\t' <+ ?'\n') //first line is not indented
+		> text
+
+/**
+ * Returns the value of the indentation of the startline 
+ * @type ATerm -> Int
+ */
+indent-value:
+	indent-string -> indent-value
+	where
+		indent-value := <explode-string;
+		take-while(?' '<+?'\t');
+		foldr(!0, add, (?' ';!1) <+ (?'\t'; TABSIZE))> indent-string
+	
+remove-indentation(|n):
+	txt -> dedented-txt
+	where
+		dedented-txt := <all-lines(string-as-chars(dedent-line-chars(|n)))> txt
+		
+dedent-line-chars(|n):
+	chars -> dedented-chars
+	where
+		(
+			<lt> (n,0); 
+			indent := <copy-char; explode-string> (<abs>n, ' '); 
+			dedented-chars := <conc>(indent,chars)
+		)<+
+		(
+			<gt> (n,0);
+			<?[' '|tail]> chars;
+			dedented-chars := <dedent-line-chars(|<dec> n)> tail
+		)<+
+		(
+			<gt> (n,0);
+			<?['\t'|tail]> chars; 
+			dedented-chars := <dedent-line-chars(|<subt> (n, <TABSIZE>))> tail				
+		)<+
+		dedented-chars := chars
+
+
+rules // helper rules separation	
+
+add-separation-before =
+	add-separation-before-1 <+ //correct line comment
+	add-separation-before-2
+	
+add-separation-before-1: //corrects for newline in case the text is inserted after a line comment
+	(origin-node, text-inserted-after) -> txt-with-separation
+	where
+		<origin-text-with-layout; string-ends-with(|"\n")> origin-node;
+		(start-separation, end-separation) := <split-before>(<origin-separation> origin-node, "\n");
+		<string-as-chars(map(is-whitespace))> start-separation;
+		txt-with-separation := <concat-strings> [<string-as-chars(Tl)> end-separation, text-inserted-after, "\n"]
+
+add-separation-before-2:
+	(origin-node, text-inserted-after) -> txt-with-separation
+	where
+		txt-with-separation := <conc-strings> (<origin-separation> origin-node, text-inserted-after)
+
+//("/n  ,  ", "//bla /n") -> " //bla /n  ,  "
+//(",/n  ", "//bla /n") -> " , //bla /n  "
+//("/n  ", "//bla /n") -> " //bla /n  "
+create-separation-after:
+	(separation, comments-after) -> txt-between
+	where 
+		<string-ends-with(|"\n")> comments-after;
+		(start-separation, end-separation) := <split-before>(separation, "\n");
+		txt-between := <concat-strings> [start-separation, " ", comments-after, <string-as-chars(Tl)> end-separation]
+		
+
+//("/n  ,  ", "/*bla*/") -> " /*bla*/ /n  ,  "
+//(",/n  ", "/*bla*/") -> " , /*bla*/ /n  "
+//("/n  ", "/*bla*/") -> " /*bla*/ /n  "
+create-separation-after:
+	(separation, comments-after) -> txt-between
+	where
+		<not(string-ends-with(|"\n"))> comments-after;
+		(start-separation, end-separation) := <split-before>(separation, "\n");
+		comments-after-separated := <?"" <+ <conc-strings>(" ", <id>)> comments-after;
+		txt-between := <concat-strings> [start-separation, comments-after-separated, end-separation]
+
+//("  ", "/*bla*/") -> " /*bla*/  "
+//(",  ", "/*bla*/") -> " /*bla*/,  "
+//("  ", "//bla /n") -> " //bla /n  "
+//(",  ", "//bla /n") -> " //bla /n,  "
+create-separation-after:
+	(separation, comments-after) -> txt-between
+	where 
+		<not(is-substring(!"\n"))> separation;
+		comments-after-separated := <?"" <+ <conc-strings>(" ", <id>)> comments-after;
+		txt-between := <conc-strings> (comments-after-separated, separation)
+
+rules //Applying the textual modifications
+
+/*
+ * Applies textchanges (src-offset, text) to a textfragment with a given src-offset  
+ * @type (List(((Int,Int), String)), String, Int) -> String
+ */
+apply-text-changes:
+	(text-changes, text, start-offset) -> changed-text
+	where 
+		ordered-text-changes := <make-set; filter(is-modification); sort-list(LSort(compare-text-change))> text-changes;
+		<assert-valid-textual-changes> ordered-text-changes;
+		changed-text := <foldr(!(start-offset, text), apply-textual-change); Snd> ordered-text-changes
+
+apply-textual-change:
+	(change, text-info) -> (char-pos, result-text)
+	where 
+		<?(char-pos, text-fragment)> text-info; 
+		<?(change-start, change-end, change-text)> change; 
+		pos-start := <subt>(change-start, char-pos);
+		pos-end := <subt>(change-end, char-pos); <string-length> text-fragment;
+		result-text:=<replace-in-text>
+			(text-fragment, change-text, pos-start, pos-end) 
+
+replace-in-text:
+	(old-text, text-change, pos-start, pos-end) -> result-text
+	where 
+		old-chars := <explode-string> old-text; 
+		(prefix, _) := <split-at(|pos-start)> old-chars; 
+		(_, suffix) := <split-at(|pos-end)> old-chars; 
+		result-text := <conc-strings> (<implode-string> prefix, text-change, <implode-string> suffix) 
+		
+compare-text-change = 
+		?(((start-x, end-x),x), ((start-y, end-y),y));
+		not(
+			<lt> (start-x, start-y) <+ 
+			<eq> (start-x, start-y); <lt> (end-x, end-y)
+		)
+
+is-modification =
+	not(?(t, t,""))
+
+rules //assert wellformedness of textual change list (unwellformed lists lead to unexpected text modifications)
+
+assert-valid-textual-changes =
+	assert-no-overlap;
+	assert-valid-offset
+	
+assert-no-overlap:
+	txt-changes@[(start-offset, end-offset, _), (start-offset', _, _)|_] -> txt-changes
+	with
+		<lt> (start-offset, start-offset');
+		<leq> (end-offset, start-offset');
+		<at-tail(assert-no-overlap)> txt-changes
+		
+assert-no-overlap =
+	?[(_, _, _)] <+ ?[]
+
+assert-valid-offset =
+	map(assert-valid-offset)
+
+assert-valid-offset =
+	?(s,e,_);
+	with(<leq>(s,e))
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/trans/coverage/origin-tracking.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/trans/coverage/origin-tracking.str	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,62 @@
+module origin-tracking
+
+rules //origin primitives
+
+origin-sublist-term = prim("SSL_EXT_origin_sublist_term", <id>)
+
+origin-term = 
+	prim("SSL_EXT_origin_term", <id>) <+ 
+	origin-sublist-term
+
+origin-term-desugared = prim("SSL_EXT_origin_term_desugared", <id>)
+origin-term-fuzzy = prim("SSL_EXT_origin_term_fuzzy", <id>)
+
+origin-text   = origin-support-sublist(prim("SSL_EXT_origin_text", <id>))
+origin-offset = origin-support-sublist(prim("SSL_EXT_origin_offset", <id>)) 
+origin-indent = origin-support-sublist(prim("SSL_EXT_origin_indentation", <id>))
+origin-separation = origin-support-sublist(prim("SSL_EXT_origin_separation", <id>)) //only succeeds if list >=2 elems
+origin-layout-prefix = origin-support-sublist(prim("SSL_EXT_origin_layout_prefix", <id>))
+
+origin-deletion-offset = 
+	origin-support-sublist(prim("SSL_EXT_origin_deletion_offset", <id>)); 
+	!(<Fst>, <Snd; inc>) //exclusive end
+
+origin-comments-after = origin-support-sublist(prim("SSL_EXT_origin_comments_after", <id>))
+origin-insert-before-offset = origin-support-sublist(prim("SSL_EXT_origin_insert_before_offset", <id>))
+origin-insert-at-end-offset = origin-support-sublist(prim("SSL_EXT_origin_insert_at_end_offset", <id>))
+origin-text-with-layout = origin-support-sublist(prim("SSL_EXT_origin_text_with_layout", <id>))
+
+rules //origin strategies
+
+origin-start-offset = origin-offset; Fst
+origin-end-offset = origin-offset; Snd
+origin-deletion-start-offset = origin-deletion-offset; Fst 
+origin-deletion-end-offset = origin-deletion-offset; Snd
+origin-layout-prefix-start-offset = origin-insert-before-offset
+
+is-origin-term = <equal> (<origin-term>, <id>)
+is-origin-term-desugared = <equal> (<origin-term-desugared>, <id>)
+has-origin-term = where(origin-term)
+has-origin-sublist-term = where(origin-sublist-term)
+is-origin-sublist-term = <equal> (<origin-sublist-term>, <id>)
+
+origin-support-sublist(s) =
+	(origin-sublist-term; s) <+ 
+	(?[h|[]]; <s> h) <+
+	s
+
+origin-set-relation:
+	(origin-node, new-node) -> origin-tracked-node
+	where
+		origin-tracked-node := <!Some(<id>); all(!new-node); ?Some(<id>)> origin-node
+
+origin-track-forced(s) =
+	![<id>]; all(s); ?[<id>]
+
+rules //support default values for non-origin elements
+			
+TABSIZE = !4
+DEFAULT-INDENT = !"\t" //HACK: this is used in case multiline subterm texts are pretty-printed
+
+layout-prefix = origin-layout-prefix <+ !""
+comments-after = origin-comments-after <+ !""
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/trans/random/fix-errors.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/trans/random/fix-errors.str	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,225 @@
+module fix-errors
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  libstratego-sglr
+  libstratego-sdf
+  libstratego-xtc
+  random/random_test
+  coverage/coverage
+  include/SpoofaxLang
+  include/Spoofax-Testing
+  
+rules
+	
+	match-error-and-fix(|ast):
+		[x|xs] -> ast''
+		where
+			if <match-error> x => (name,action) then
+				ast' := <fix(|ast,x)> (name,action)
+			else
+				ast' := ast
+			;	!x => (_,message)
+			;	<concat-strings;debug> ["No Error Correction found for: \"",message,"\""]
+			end
+		;	all-keys-ErrorCorrectionDone;write-to-string;debug
+		;	ast'' := <match-error-and-fix(|ast')> xs
+	
+	match-error-and-fix(|ast):
+		[]	-> ast
+
+	fix(|ast,error):
+		<	?(name,d at AddCorrection(operation,node,location))
+		<+	?(name,d at AddCorrectionFirst(operation,node,location))> -> ast'
+		with
+			if not(and(!operation => InsertOnce(), <ErrorCorrectionDone> name)) then
+				rules(ErrorCorrectionDone : name)
+			;	!node => Node(cons,params)
+			;	params' := <map(fixParams(|name))> params	
+			;	sourceNode := cons#(params')
+			;	ast' := <process-location(|d,sourceNode,ast)> location
+		 	;	<debug>"Fixed-AST: "
+		 	;	<write-to-string;debug> ast'
+		 	end
+
+ 
+		
+	process-location(|addCorrectionFunction,sourceNode,ast):
+		DestMatchWildCard() -> ast 
+		
+	process-location(|addCorrectionFunction,sourceNode,ast):
+		d at DestMatchCons(cons,destNodeBody) -> ast'
+		where
+			// constructors match
+			!ast => cons#(body)
+		;	l := <zip> (body,destNodeBody)
+		;	<map({body',destNodeBody': 
+		 		?(body',destNodeBody') 
+		 	;	<process-location(|addCorrectionFunction,sourceNode,body')>destNodeBody' 
+		 	})> l => res
+		;	ast' := cons#(res)
+			
+			
+	process-location(|addCorrectionFunction,sourceNode,ast):
+		d at DestMatchCons(cons,body) -> ast'
+		where
+			// constructors dont match
+			!ast => _#(body)
+		;	ast' := <process-location(|addCorrectionFunction,sourceNode,body)> d
+			 	
+	process-location(|addCorrectionFunction,sourceNode,ast):
+		TargetNode() -> ast'
+		where
+			if !addCorrectionFunction => AddCorrectionFirst(_,_,_) then
+			 		ast' := <conc> ([sourceNode],ast)
+			else  //!addCorrectionFunction => AddCorrection(_,_,_) then
+			 		ast' := <conc> (ast, [sourceNode])
+			end	
+		
+	fixParams(|errCorrectionName):
+		Params_Var(i) -> param
+		where 
+			param := <ErrorMatchParam> (errCorrectionName,i)
+	
+	fixParams(|errCorrectionName):
+		Params_Array(params) -> params'
+		where
+			params' := <map(fixParams)> params
+			
+	fixParams(|errCorrectionName):
+		Params_String(s) -> s'
+		where
+			s' :=<un-double-quote> s
+	
+	fixParams(|errCorrectionName):
+		Params_EmptyArray() -> []
+	
+	fixParams(|errCorrectionName):
+		d -> d
+		where
+			<write-to-string;debug> d
+	
+	check-for-amb:
+		"amb"#(body) -> t'
+		with
+			numberedCons := <numberItems> body
+		;	chosenNumber := <mod> (<next-random;abs>, <ItemCount>)
+		;	<filter(?(_,chosenNumber))> numberedCons => [(t', chosenNumber )|xs]
+ 		
+		
+	run-and-fix(|Language,strategyName)=
+		?program
+	;	<write-to-string;debug> program	
+	;	pp-program := <pp-program> program
+	; 	<write-to-string;debug> pp-program
+	;	parsed-program := <parse-pp> pp-program
+	;	program' := <try(sometd(check-for-amb))> parsed-program
+	; 	<write-to-string;debug> program'
+	
+	;	<run(|Language,strategyName)> (program', "", "" ) => result
+	;	if ( !result => (ast, errors, warnings,notes)) then
+			// <debug> errors;
+			{|ErrorCorrectionDone: 
+			<match-error-and-fix(|program')> errors  => program''
+		;  allFixedErrors:= <all-keys-ErrorCorrectionDone> |}
+		;	 <write-to-string;debug> allFixedErrors
+		;	if  not( !allFixedErrors => []) then 
+		 		<run-and-fix(|Language,strategyName)> program''
+		 	end
+	 	else
+		 	//TODO: catch the run error instead of just printing it
+			<debug> "Editor-Analyze crashed!"
+		;	<write-to-string;debug> result
+	 	end
+	 		
+	match-error-node:
+		(node,name) -> action
+		where
+			// <concat-strings;debug> ["match-error-node:", <write-to-string>(node,name)]	;	
+			pattern := <ErrorSourceNodePattern> name
+		;	<write-to-string;debug> pattern
+		; 	<process-error-node(|node,name)> pattern
+		;	<debug> "yay"
+		;	action := <ErrorCorrectingAction> name
+		 	 
+	process-errorMatchCons(|name,cons,body):
+	 	d at cons#(b) -> d
+	 	where
+	 		if not(<eq> (<length> b,<length> body)) then
+	 			fail
+	 		end
+	 	;	l := <zip> (b,body)
+		;	<map({b',body': 
+		 		?(b',body')
+		 	;	<process-error-node(|b',name)> body' 
+		 	})> l
+		// ;	<concat-strings;debug> ["ErrorMatchCons Found: ",<write-to-string> cons]
+				
+	process-error-node(|node,name):
+		d at ErrMatchCons(cons,body) -> d
+		where
+			<oncetd(process-errorMatchCons(|name,cons,body))> node
+				
+	process-error-node(|node,name):
+		d at ErrMatchParam(i) -> d
+		where
+			rules(ErrorMatchParam : (name, i) -> node)
+		// ;	<concat-strings;debug> ["Param ",i," added for correction :",name]
+		 	
+	process-error-node(|node,name):
+		d at ErrMatchString(s) -> d
+		where
+			s' := <un-double-quote>	
+		;	!node => s'
+		 	
+	process-error-node(|node,name):
+		d at ErrMatchINT(i) -> d
+		where
+			i' := <string-to-int> i
+		;	!node => i'
+	
+	process-error-node(|node,name):
+		d at ErrMatchWildCard() -> d					
+	
+	match-error:
+		(node, message) -> (name,action)
+		where
+			message' := <split-at-space> message
+		;   allErrorNames := <all-keys-ErrorMessagePattern>
+		;	<map({name': 
+			  		?name'
+			  	;	!(name',<ErrorMessagePattern> name')}) 
+		  	;	match-error-rec(|node,message')> allErrorNames => (name,action)
+		// ;	<concat-strings;debug> ["(node, message):", <write-to-string>a]
+ 
+	match-error-rec(|node,message):
+		[(name, toMatch)|xs] -> (name', action')
+		where
+		  	toMatch' := <split-at-space> toMatch
+		;	if (<match-error-rec2(|node,message,name)> toMatch') => action then
+		 		action' := action
+		 	;	name' := name
+		 	else
+				<match-error-rec(|node,message)> xs => (name',action')
+			end
+	
+	match-error-rec(|node,message):
+		[] -> <fail>
+
+		
+	match-error-rec2(|node,message,name):
+		[x|xs] -> action
+		where
+			if <filter(?x)> message => [] then
+				fail
+			else
+				if !xs => [] then
+					action := <match-error-node> (node,name)
+				else
+				 	action := <match-error-rec2(|node,message,name)> xs
+				end
+			end	
+			 
+ 

Added: spoofax-imp/branches/spoofax-testing-automation/trans/random/generate-program.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/trans/random/generate-program.str	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,264 @@
+module generate-program
+
+imports 
+	random/random_test
+	random/read-sdf
+	random/xeger
+	libstratego-lib
+	libstratego-gpp
+	libstratego-aterm
+	libstratego-sglr
+	libstratego-sdf
+	libstratego-xtc
+	include/SpoofaxLang
+
+rules
+
+	pick-a-random-terminal:
+		s -> result
+		with
+			terminals := <bagof-Terminals> s
+		;	numberedTerminals := <numberItems> terminals
+		;	terminalToChoose := <mod> (<next-random;abs>, <ItemCount>)
+		;	<filter(?(_,terminalToChoose))> numberedTerminals => [x|xs]
+		;	!x => (result,terminalToChoose)
+	
+	pre-generate-terminals(|number) =
+		terminals := <all-keys-LexSorts>
+	;	<map(lex-to-dr(|number))> terminals 
+	 	
+	lex-to-dr(|number)=
+		?s
+	;	rules(lex-to-dr-Count:= 0) 
+	;	while( not(<eq> (number,<lex-to-dr-Count>)),
+	    {x,dr,newCount: 
+	  		x := <build-xeger> sort(s)
+		;	dr := <generate-terminals> x
+		;	newCount := <addi> (<lex-to-dr-Count>,1)
+		;	rules( 	Terminals :+ s -> dr
+		 			lex-to-dr-Count:= newCount )}
+		)
+	
+    
+    pick-prod-lower-level:
+    	list -> result
+    	with
+    		lowestLevel := <map({l: ?(_,l); !l});list-min> list
+    	;	result := <filter(?(_,lowestLevel));map({p: ?(p,_);!p})> list
+    		
+	
+	generate-program(|currentNode,path,rec):
+		_ -> result	
+		with
+			allProds := <bagof-CFSorts> currentNode
+		;	if not(<filter(?currentNode)> path =>[]) then
+				rec' := <addi> (rec,1)
+			// ;	<concat-strings;debug> ["rec increased to ",<write-to-string> rec']
+			else
+				rec' := rec
+			end
+		;	if	or(<gt> (<ConsCount>,<MaxCount>),<gt> (rec', <MaxRec>)) then
+		 		// We should try to avoid productions with sorts we have seen before
+		 		// <concat-strings;debug> ["Path so far: ",<write-to-string> path];
+		 		// <concat-strings;debug> ["Current node is: ",<write-to-string> currentNode];
+		 		noRecProds := <bagof-TerminalPath;pick-prod-lower-level> currentNode
+		 	// ;	<concat-strings;debug> ["noRecProds: ", <write-to-string> noRecProds]	
+		 	;	if !noRecProds => [] then
+		 	 		unNumberedProds := allProds
+		 	 	;	newRec := rec'
+		 	 	else
+		 	 		unNumberedProds := noRecProds
+		 	 	;	newRec := 0
+		 	 	end
+		 	else
+		 		unNumberedProds := allProds
+		 	;	newRec := rec'
+		 	end
+		 ;	path':= <conc> (path,[currentNode])
+		// ;	if ,<gt> (currentRec,maximumRec)) then
+		// 		// <debug> "MaxRecReached"; <write-to-string;debug> currentNode; 
+		// 		u:= <bagof-CFSorts> currentNode
+		// 	
+		// 	// Filter out recursive productions
+		// 	;	u' := <filter({p: not(?p;!(currentNode,p);recursion)});filter(not(oncetd(?"COMPLETION")))> u
+		// 	 	
+		// 	;	if !u' => [] then
+		// 	 		unNumberedProds := <bagof-TerminalForSort> currentNode
+		// 	 	else
+		// 	 		unNumberedProds := u'
+		// 	 	end 
+		// 	// ;	<concat-strings;debug> ["A:",<write-to-string>unNumberedProds]
+		// 	;	cr := 0	
+		// 	else
+		// 		unNumberedProds:= <bagof-CFSorts;filter(not(oncetd(?"COMPLETION")))> currentNode
+		// 	;	cr := currentRec
+		// 	end
+			// Filter out ignored cons!
+		;	unNumberedProds' :=	<filter({p:  ?p ; or(not(<CFCons> (currentNode,p)),<CFCons;not(IgnoreCons)> (currentNode,p)) })> unNumberedProds
+		// ;	<concat-strings;debug> ["PR:", <write-to-string> unNumberedProds]
+		;	possibleProds := <numberItems> unNumberedProds'
+		;	if <eq> (<ItemCount>,0) then
+		 		<debug> "Filtering out of constructors yielded errors!!"
+		 	end
+		;	prodToChoose := <mod> (<next-random;abs>, <ItemCount> ())
+		;	<filter(?(_,prodToChoose))> possibleProds => [x|xs]
+		;	!x => (prodToWrite,prodToChoose)
+		
+		;	newCount := <addi>(<ConsCount>,1)
+		; 	rules( ConsCount : _ -> newCount )
+		; 	if <gt> (<ConsCount>,<MaxCount>) then
+		  		// <debug> "Too big";	
+		  		<concat-strings;debug> ["@TOO_BIG: ",<ConsCount;write-to-string>]
+		  	// ;	if <gt> (<ConsCount>,<addi> (<MaxCount>,1000)) then
+		  	// 		fail
+		  	// 	end
+		  	end
+	  	;	if <CFCons> (currentNode, prodToWrite) => cons then
+	  			result:= cons#(<filter-prods;map(write-rule(|path',newRec))> prodToWrite)
+	  		else
+	  			preResult := <filter-prods;map(write-rule(|path',newRec))> prodToWrite
+	  		;	if !preResult => [r] then
+	  				result := r
+	  			else
+	  				result := preResult
+	  			end
+	  		end
+		;	!None()
+			
+	calculate-penalty=
+		a:= <divi> (<ConsCount>,5)
+	;	!a
+
+	write-rule(|path,rec):
+		<?iter(t) <+ ?iter-sep(t,_)> -> result
+		with
+			if !t => [_] then
+				t' := <filter-prods> t
+			// ; 	<concat-strings;debug> ["X: ", <write-to-string> t]
+			else
+				t':= t
+			end
+			// Check for size and maxRec
+		;	if or(<gt> (<ConsCount>,<MaxCount>), <gt> (rec,<MaxRec>))	then
+		 		result := Cons(<write-rule(|path,rec)> t',Nil())
+		 	else
+		 		if <gt> (<mod> (<next-random;abs>,100),<addi> (10,<calculate-penalty>)) then
+					preResult := Cons(<write-rule(|path,rec)> t',<write-rule(|path,rec)> iter(t'))
+				;	if !preResult => [r] then
+			 		result := r
+			 		else
+			 			result := preResult
+			 		end  
+				else
+					result := Cons(<write-rule(|path,rec)> t',Nil())
+				end
+			end
+
+			 	 	 			 
+	write-rule(|path,rec):
+		<?iter-star(t) <+ ?iter-star-sep(t,_)> -> result
+		with
+			if !t => [_] then
+				t' :=  <filter-prods> t
+			// ; 	<concat-strings;debug> ["X: ", <write-to-string> t]
+			else
+				t':= t
+			end
+		 		// Check for size and maxRec
+		;	if or(<gt> (<ConsCount>,<MaxCount>), <gt> (rec,<MaxRec>))	then
+		 		result := []
+		 	else
+		 		if <gt> (<mod> (<next-random;abs>,100),<addi> (5,<calculate-penalty>)) then
+					result := <write-rule(|path,rec)> iter(t')
+				else
+					result := []
+				end
+			end
+	
+	write-rule(|path,rec):
+		d at sort(s) -> result
+		with
+			if not(<LexSorts> s) then //or( ,<LexEmpty> s)	
+				result := <generate-program(|s,path,rec)> ()
+			else
+				result := <pick-a-random-terminal> s
+			end
+	
+	write-rule(|path,rec):
+		cf(t) -> result
+		with
+			result:= <write-rule(|path,rec)> t
+	
+	write-rule(|path,rec):
+		alt(a,b) -> result
+		with
+			n := <mod> (<next-random;abs>,100)
+		;	if <gt> (n, 50) then
+				result := <write-rule(|path,rec)> a
+			else
+				result := <write-rule(|path,rec)> b
+			end			
+	
+	write-rule(|path,rec):
+		label(_,t) -> result
+		with
+			if !t => [_] then
+				t' :=  <filter-prods> t
+			// ; 	<concat-strings;debug> ["X: ", <write-to-string> t]
+			else
+				t':= t
+			end
+		;	result := <write-rule(|path,rec)> t'
+	
+	write-rule(|path,rec):
+		opt(t) -> result
+		with
+			n := <mod> (<next-random;abs>,100)
+					// Check for size and maxRec
+		;	if or(<gt> (<ConsCount>,<MaxCount>), <gt> (rec,<MaxRec>))	then
+		 		result := []
+		 	else
+		 		if <gt> (n,50) then
+					result := <write-rule(|path,rec)> t
+				else
+					result := []
+				end
+			end
+		
+	write-rule(|path,rec):
+		d at lex(_) -> result
+		with
+			result := <build-xeger;generate-terminals> d
+					
+	write-rule(|path,rec):
+		t -> t
+		with
+			<concat-strings;debug>  ["This rule has not been written yet: ", <write-to-string> t]
+	
+	filter-prods=
+		filter(not(filter-prod-help))
+	
+	filter-prod-help:
+		d at lit(_) -> d
+	
+	filter-prod-help:
+		d at layout() -> d
+			
+	filter-prod-help:
+		d at opt(t) -> d
+		where
+			<filter-prod-help> t
+	filter-prod-help:
+		d at cf(t) -> d
+		where
+			<filter-prod-help> t
+	
+	filter-prod-help:
+		d at label(_,t) -> d
+		where
+			<filter-prod-help> t
+					
+	filter-prod-help:
+		< ?d at iter-star(t) <+ ?d at iter-star-sep(t, _) <+ ?d at iter(t) <+ ?d at iter-sep(t, _)> -> d
+		where
+			<filter-prod-help> t

Added: spoofax-imp/branches/spoofax-testing-automation/trans/random/random_test.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/trans/random/random_test.str	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,245 @@
+module random_test
+
+imports
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  libstratego-sglr
+  libstratego-sdf
+  libstratego-xtc
+  include/SpoofaxLang
+  include/Spoofax-Testing
+  lib/editor-common.generated
+  analysis
+  check
+  generate
+  file-resolving
+  test-runner
+  spoofax_testing
+  random/xeger
+  random/read-sdf
+  random/generate-program
+  coverage/coverage
+  random/fix-errors
+  
+  
+
+rules
+	
+	external get-language-def(|language)
+	external get-compiler-def(|language,compiler)
+	
+	main = generate-random-tests
+	;	editor-analyze
+	;	inlineCoverage
+	
+	extract-settings:
+		d at AutoTest(ATSettings(settings)) -> d
+		with
+			<map(extractS)> settings
+
+	extract-settings:
+		d at AutoTest(ATSettings(settings1),COVSettings(settings2),ErrorCorrections(err*)) -> d
+		with
+			<map(extractS)> settings1
+		;	<map(extractS)> settings2
+		;	<map(extractS)> err*
+		
+	extract-settings:
+		d at AutoTest(ATSettings(settings1),COVSettings(settings2)) -> d
+		with
+			<map(extractS)> settings1
+		;	<map(extractS)> settings2
+	
+	extractS:
+		d at MaxCount(maxC) -> d
+		with
+			maxC' := <string-to-int>(maxC)
+		;	rules(MaxCount := maxC')
+	
+	extractS:
+		d at MaxRec(maxR) -> d
+		with
+			maxR' := <string-to-int> maxR
+		;	rules(MaxRec := maxR')
+	
+	extractS:
+		d at ErrorCorrection(name,messagePattern,sourceNodePattern,action) -> d
+		with
+			// <write-to-string;debug> pattern;	
+			messagePattern' := <un-double-quote> messagePattern
+		;	rules(	ErrorMessagePattern : name -> messagePattern'
+		 			ErrorCorrectingAction : name -> action
+		 			ErrorSourceNodePattern : name -> sourceNodePattern )
+	
+	extractS:
+		d at NumberOfRuns(nr) -> d
+		with
+			nr' := <string-to-int> nr	
+		;	rules(NumberOfRuns:= nr')
+	
+	extractS:
+		d at TargetLanguage(language) -> d
+		with
+			rules(Language := language)
+			
+	extractS:
+		d at TargetStrategy(strategy) -> d
+		with
+			rules(TargetStrategy := strategy)
+	
+	extractS:
+		d at CoveredFolder(folder) -> d
+		with
+			rules(CoveredFolder := folder)
+	extractS:
+		d at IgnoreCons(cons*) -> d
+		with
+			cons' := <map(un-double-quote)> cons*
+		// ;	<write-to-string;debug> cons'	
+		;	<map({c: ?c;rules(IgnoreCons: c) })> cons'
+			
+	generate-random-tests=
+		?(_,_, ast, path, project-path)
+	;	editor-init
+	;	<extract-settings> ast
+	// ;	scope-paths(
+ //        <chdir> project-path;
+ //        <record-all-sdfs> "." | path, project-path)
+	;	Language;debug
+	;  	file := $[./include/[<Language>]/[<Language>].def]
+	;	ast_sdf := <parse-sdf-definition-file;sdf-parsefix> file
+	;	<debug> "Generating random tests" 
+	;	rules(
+			ProbIter : 5
+			ConsCount : _ -> 0
+		)
+	
+	
+	  	
+	;	sdf := <?definition(<id>);map(read-sdf)> ast_sdf
+	;	<map({s: ?s;rules(SWeight : s -> 1)})> <all-keys-LexSorts>
+	// ;	<find-recursion> "Start"
+	// ;	<map(measure-rec)> <all-keys-recursion>
+	// ;	measure-sdf
+	// ;	list1  := [1,2,"a"]
+	// ;	list2 := ["b",3,2,"c"]
+	// ;	<diff2;write-to-string;debug> (list1,list2)
+	// ;	<diff;write-to-string;debug> (list1,list2)
+	// ;	<bagof-TerminalPath> "Atom" 	
+	;	find-terminal-paths(|0)
+	// ;	all-keys-TerminalPath;write-to-string;debug
+	// ;	all-keys-TerminalPath;nub;numberProductions(id)
+	// ;	ProdCount;write-to-string;debug
+	// ;	all-keys-CFSorts;nub;numberProductions(id)
+	// ;	ProdCount;write-to-string;debug
+	// ;	 <diff2;write-to-string;debug> (<all-keys-TerminalPath>,<all-keys-CFSorts>)	
+	
+	//;	<bagof-CFSorts;write-to-string;debug> "Atom"
+	 	
+	// ;	filename := "trans/analyze.str"
+	// ;	oldProjectPath := "mobl"
+	// ;	builderPath := "/.externalToolBuilders/MoBL build.main.xml.launch"
+	// ;	coverageProject := <conc-strings> (<Language>, "-CoverageTest")
+	//;	ready-project-for-coverage(|filename,<Language>,oldProjectPath,builderPath)
+ 	// ;<bagof-TerminalForSort;write-to-string;debug>"Atom"
+ 	
+ 	// ;	NumberOfRuns;write-to-string;debug
+ 	// ;if <LexSorts> "QId" then
+ 	// 	<debug> "A";
+ 	// 	<bagof-LexSorts;write-to-string;debug> "QId"
+ 	// end
+ 	// ;if	<CFSorts> "QId" then
+ 	//  	<debug> "B";
+ 	// 	<bagof-CFSorts;write-to-string;debug> "QId"
+ 	// end
+ 	
+ 	;	generate-random-test(|<NumberOfRuns>, <TargetStrategy>)
+ 	
+ 	//;	finish-coverage(|coverageProject,oldProjectPath)
+ 	
+ // 	; 	a:= ("c","b")
+ // 	;	m := MatchWildCard()
+ // 	;	if !a => (<test2> m,"b") then
+ // 	 		debug(!"okay")
+ // 	 	else
+ // 	 		debug(!"tryagain")
+ // 	 	end 	
+	// ;	!None()	 		 
+	// 
+	// test2:
+	// 	MatchWildCard() -> <?a>
+	
+	test1:
+		[x|xs] -> res
+		where
+			if !xs => [] then
+				res := "c"
+			else
+				res := <test1> xs
+			end
+	
+	test1:
+		[x] -> "b"
+	
+	 	
+	diff2:
+		(list1,list2) -> list3
+		with
+			list3a := <diff> (list1,list2)
+		;	list3b := <diff> (list2,list1)
+		;	list3 := <conc;nub> (list3a,list3b)
+	parse-str=
+		?str
+	;	tbl := <ReadFromFile> $[include/StrategoStratego.tbl]
+	;	<parse-string(|tbl)> str
+	 	
+	parse-pp=
+		?pp-program
+	;	tbl := <ReadFromFile> $[include/[<Language>]/[<Language>].tbl]
+	;	<parse-string(|tbl)> pp-program
+	
+	generate-random-test(|num, strategyName)=
+		!num => 0 <+
+	 	rules( ConsCount : _ -> 0 )
+	;	pre-generate-terminals(|10)
+	;	generate-program(|"Start",[],0)=>program 
+	; 	if <oncetd(?lit(_))> program then
+			<debug> "foook"
+		end
+	;	<run-and-fix(|<Language>, strategyName)> program
+	;	generate-random-test(|<addi> (num,-1), strategyName)
+	
+		
+	pp-program:
+		<?program> -> result
+		with
+		 	pptbl := <parse-pptable-file> $[include/[<Language>]/[<Language>].generated.pp]
+		;  	![pptbl]
+		;	   where(tbl := <new-hashtable>)
+	    ; 	map(
+	      		
+		        ?PP-Table(<id>)
+		        
+		        ; reverse
+		        ; map(pptable-desugar-entry; pptable-store-entry(|tbl))
+		      )
+		      
+		; 	pptbl2 := <parse-pptable-file>$[include/[<Language>]/[<Language>].pp]
+		;  	![pptbl2]
+		;	   where(tbl2 := <new-hashtable>)
+	    ; 	map(
+	      		
+		        ?PP-Table(<id>)
+		        
+		        ; reverse
+		        ; map(pptable-desugar-entry; pptable-store-entry(|tbl2))
+		      )
+		
+		; 	<ast2abox(|[pptbl,pptbl2]);abox2text(|200000000);all(bottomup(try(concat-strings)))> program => [toTest]
+		;	result:= toTest
+
+	
+    numberItems =
+    !(<id>, 0); thread-map(!(<id>,<Snd;inc>)); ?(<id>,numStart);rules(ItemCount : _ -> numStart)
+	
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/trans/random/read-sdf.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/trans/random/read-sdf.str	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,262 @@
+module read-sdf
+
+imports
+	random/random_test
+	random/generate-program
+	include/SpoofaxLang
+	libstratego-lib
+	libstratego-gpp
+	libstratego-aterm
+	libstratego-sglr
+	libstratego-sdf
+	libstratego-xtc
+
+rules
+	
+	// read-sdf=
+	// 	?context-free-start-symbols(startSymbol*)
+	// ;	!startSymbol*;write-to-string;debug
+	// ;	<map(?sort(symbol);rules(SDFStart :+ _ -> symbol))> startSymbol*
+
+	read-sdf:
+		d@'module#([_#([moduleName]), imports, prodRules]) -> d
+		where
+			<alltd(read-prod)> prodRules
+		
+	read-prod:
+		<?d at context-free-syntax(prod*) <+ ?d at syntax(prod*)> -> d
+		with 
+			<map(try(declare-cf))> prod*
+	
+	read-prod:
+		d at lexical-syntax(prod*) -> d
+		with
+			<map(declare-lex)> prod*
+			
+	declare-lex=
+		?d at prod(rule, s*, attrs)
+		// To assure reject conditions are not added as possible production rules
+		;	if and(!attrs => attrs(attrs*),not(<subseteq> ([reject()],attrs*))) then	 
+				if  !s* =>sort(s) then 
+		 			id
+			 	else
+			 		if <not(oncetd(?sort(_)))> s* then
+			 			<concat-strings;debug> ["Lex not beeing processed: ", <write-to-string;debug> d]
+			 		else
+			 			<oncetd(?sort(s))> s*
+			 		end
+			 	end
+		 	; if !s then
+			 		rules(LexSorts :+ s -> rule)		
+				;	if <oncetd(?cons(c))> attrs  then
+				 		cons' := <unescape> c
+				 	;	rules(	LexCons : (s,rule) -> cons'
+				 	 			ConsLex : cons' -> (s,rule))
+			 		end
+			 	end
+			 end	 
+
+	declare-cf=
+		?d at prod( rule ,s*,attrs)
+	;	if  !s* =>sort(s) then 
+	 		id
+	 	else
+	 		if <not(oncetd(?sort(_)))> s* then
+	 			<concat-strings;debug> ["Not beeing processed: ", <write-to-string;debug> d]
+	 		else
+	 			<oncetd(?sort(s))> s*
+	 		end
+	 	end
+	;	uniqueID := <new>
+	;	rules(	CFSorts :+ s -> rule
+	 			SortProd2UniqueID : (s,rule) -> uniqueID
+	 			UniqueID2SortProd : uniqueID -> (s,rule) )		
+	;	if <oncetd(?cons(c))> attrs  then
+	 		cons' := <unescape> c
+	 		;	rules(	CFCons : (s,rule) -> cons'
+	 		 			ConsCF : cons' -> (s,rule))
+	 	end
+	 ;	<count-recursion(|s)> rule
+	
+	
+	count-recursion(|s)=
+		?prod
+	;	filteredProd := <filter(?sort(s))> prod
+	
+	// Direct recursion
+	; 	rules( ItemCount: _ -> 0)
+	;	<numberItems> filteredProd
+	;	level := <ItemCount>
+
+	;	rules( LevelOfRecursion: (s,prod) -> level )
+	;	if <eq> (level,0) then
+	 		rules( TerminalForSort:+ s -> prod )
+	 	end 
+
+	
+	
+	measure-sdf=
+		allSorts := <all-keys-CFSorts>
+	;	changed* := <map(calculate-children)> allSorts
+	;	if not(<filter(?Id())> changed* => []) then
+	 		measure-sdf
+	 	end 
+	 
+	calculate-children:
+		sort -> changed
+		with
+			if <SWeight> sort then
+				changed := Fail()
+			else
+				prods := <bagof-CFSorts> sort
+			;	sortsNprods := <map({t,t': \t -> t' with t':=(sort,t)\})> prods // (sort, prod)*
+			 	// Check if the sort has been fully calculated and record 
+			;	if <map(SPWeight)> sortsNprods then
+			 		sw := <map(SPWeight);sum> sortsNprods
+				;	rules( SWeight : sort -> sw)
+				;	changed := Id()
+			 	else 
+			 		// Otherwise we need to see if we can fill in any values!
+					changed* := <map({s,p,p*,p',d,num:\ (s,p) -> d 
+				 	with
+				 		if <SPWeight> (s,p) then
+				 			d := Fail()
+				 		else
+					 		p*	:= <map(extract-sorts);concat;filter(or(oncetd(?sort(_)),is-int))> p
+					 	; 	if !p* => [] then
+					 	 		rules( 	SPWeight : (s,p) -> 1)
+					 	 	;	d := Id()	
+					 	 	else
+					 	 		p' := <filter(not(?sort(sort)));map({s':try(?sort(s');<SWeight> s')})> p*
+					 	 	;	if <map(is-int)> p' then
+					 	 	 		num := 	<sum> p'
+					 	 	 	;	rules( SPWeight :(s,p) -> num)
+					 	 	 	; 	d := Id()
+					 	 	 	else
+					 	 	 		d := Fail()
+					 	 	 	end
+					 	 	end
+					 	 end
+				 		 \}
+			 	 	)> sortsNprods
+			 	 // Check if anything changed	
+			 	 ;	if <filter(?Id())> changed* => [] then
+			 	  		changed := Fail()
+			 	  	else
+			 	  		changed := Id()
+			 	  	end
+			 	 end
+			 end
+	
+	measure-rec=
+		?(s,p)
+	;	sortsOnly := <map(extract-sorts);concat;filter(?sort(_))> p
+	;	<numberItems> sortsOnly
+	;	num := <ItemCount>
+	;	rules( SPWeight: (s,p) -> num) 
+	
+	find-recursion=
+		?Start
+	;	StartProds := <bagof-CFSorts> Start
+	;	s := <map({t,t': \t->t' with t':= (Start,t)\})> StartProds
+	;	<map(recursive-find-recursion(|[],[]))> s
+	
+	
+	recursive-find-recursion(|path,SPpath)=
+		?(s,p)
+	;	if not(<recursion> (s,p)) then
+		 	if <filter(?s)> path => [] then
+		 		// No recursion yet?
+		 		s':= <map(extract-sorts);concat;filter(oncetd(?sort(_)));{s'': map( \sort(s'') -> s''\) }> p
+		 		//TODO: Do something about iter-star constructs since these do not need be recursive
+		 		// they can actually end recursion by taking the empty set option
+		 	;	newPath := <concat> [path,[s]]
+		 	// ;	if not(<filter(?"Atom")> newPath => []) then
+		 	//  		<write-to-string;debug> newPath
+		 	//  	end
+		 	;	newSPpath := <concat> [SPpath, [<SortProd2UniqueID> (s,p)]]
+		 	;	if not(!s' => []) then
+		 			<map({s'',d,p*: ?s'' 
+					;	p*:=<bagof-CFSorts> s'' 
+		 			;	<map({p': ?p'; <recursive-find-recursion(|newPath,newSPpath)> (s'',p')} )> p*})> s'
+		 		end
+		 	else
+		 		// Recursion found
+		 		c := <zip(id)> (path,SPpath)
+		 	;	<split-fetch(?(_,<SortProd2UniqueID> (s,p) ))> c => (_,recPath)
+		 	;	<map({uniqueSPID,sp': ?(_,uniqueSPID); sp' := <UniqueID2SortProd> uniqueSPID; rules( recursion : sp') })> recPath
+		 	end
+		 	
+		 end
+	
+	find-terminal-paths(|level)=
+		allCFSorts := <all-keys-CFSorts>
+	;	if not(<map(find-terminal-path(|level));filter(?Id())> allCFSorts => []) then
+	 			!None();
+	 			newLevel := <addi> (level,1)
+	 		;	find-terminal-paths(|newLevel)
+	 	end
+	
+	find-terminal-path(|level):
+		node -> result
+		where
+			// <debug>"a";
+			u := <bagof-CFSorts> node
+		;	if <some({p:
+		 		?p
+		 		// A prod is a terminal path if all of the sorts
+		 		//	are either LexSorts, CFSorts with Terminal Paths and
+		 		//	_NOT_ the same node
+		 		//	 so If there is not one node, that is either not in LexSorts
+		 		// nor a sort with Terminal path or if it is the same node (direct recursion) 
+		 	;	if and(
+		 	 		<filter(and(not(?iter-star(_)),and(not(?iter-star-sep(_,_)),not(?opt(_)))))
+		 	 		;	not(oncetd({s:
+		 	 			?sort(s)
+		 	 		;	and(not(<LexSorts> s),and(not(<TerminalPath> s),!s;?node))}))> p,
+		 	 		or(not(<TerminalPath> node),<bagof-TerminalPath;filter(?(p,_))> node =>[])) then
+					rules(TerminalPath :+ node -> (p,level))
+				else
+					// <debug> "f";
+					fail
+	 	 		end 
+		 	})> u then
+		 		// <debug>"b";
+		 		result := Id()
+		 	else
+		 		// <debug>"c";
+		 		result := Fail()
+		 	end
+	 			
+	// ;	<{p: all(
+	//  		?p
+	//  	;	if and( not(<oncetd()> p),(<filter(?p)> <TerminalPath> node) =>[]) then
+	// 			rules(TerminalPath :+ node -> p)
+ // 	 		end
+ // 	 	// /;	else
+	//  	)}>	u	 
+		
+	extract-sorts:
+		lex(a) -> [a]
+	
+	extract-sorts:
+		alt(a,b) -> [a, b]
+		
+	extract-sorts:
+		< ?d at iter-star(a) <+ ?d at iter-star-sep(a, _) <+ ?d at iter(a) <+ ?d at iter-sep(a, _)> -> [a]
+	
+	extract-sorts:
+		label(_,a) -> [a]
+		
+	extract-sorts:
+		cf(a) -> [a]
+			
+	extract-sorts:
+		opt(a) -> [a]
+	
+	extract-sorts:
+		i -> [i]
+		where
+			<is-int> i			
+	extract-sorts:
+		a -> [a]	
\ No newline at end of file

Added: spoofax-imp/branches/spoofax-testing-automation/trans/random/xeger.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/branches/spoofax-testing-automation/trans/random/xeger.str	Fri Feb 24 14:49:09 2012	(r24399)
@@ -0,0 +1,304 @@
+module xeger
+
+imports 
+	libstratego-sdf
+	include/SpoofaxLang
+	random/random_test
+	random/read-sdf
+
+rules
+	external generate-string-from-reg(|format)
+	
+	build-xeger:
+		iter-star(rest) -> result
+		with
+			// <debug> "a";
+			// <debug> rest;
+			r := <build-xeger> rest
+		;	result := <help-xeger-iter> iter-star(r)
+			// ;<debug> "a2"
+	
+	build-xeger:
+		iter(rest) -> result
+		with
+			// <debug> "b";
+			r := <build-xeger> rest
+		;	result := <help-xeger-iter> iter(r)
+			// ;<debug> "b2"
+	
+	build-xeger:
+		d at iter-sep(rest,sep) -> result
+		with
+			result := <help-xeger-iter> iter-sep(<build-xeger> rest, sep)
+			
+	build-xeger:
+		d at iter-star-sep(rest,sep) -> result
+		with
+			result := <help-xeger-iter> iter-star-sep(<build-xeger> rest, sep)
+	
+	help-xeger-iter:
+		d at iter-star(r) -> result
+		with
+			if and(!r => cons#([xeger]), not(!cons => []))  then
+				result := cons#([<help-xeger-iter> iter-star(xeger)])
+			else
+				result := $[([r]){0,10}]
+			end	
+	help-xeger-iter:
+		d at iter(r) -> result
+		with
+			if and(!r => cons#([xeger]), not(!cons => []))  then
+				result := cons#([<help-xeger-iter> iter(xeger)])
+			else
+				result := $[([r]){1,10}]
+			end	
+	
+	help-xeger-iter:
+		d at iter-sep(r,sep) -> result
+		with
+			// <concat-strings;debug> ["HXI,IS: ",<write-to-string> d];
+			if and(!r => cons#([xeger]), not(!cons => []))  then
+				result := cons#([<help-xeger-iter> iter-sep(xeger,sep)])
+			else
+				result := $[([r][sep]){0,9}[r]]
+			end	
+
+	help-xeger-iter:
+		d at iter-star-sep(r,sep) -> result
+		with
+			// <concat-strings;debug> ["HXI,ISS: ",<write-to-string> d];
+			if and(!r => cons#([xeger]), not(!cons => []))  then
+				result := cons#([<help-xeger-iter> iter-star-sep(xeger,sep)])
+			else
+				result := $[(([r][sep]){1,9}[r])|[r]?]
+			end	
+
+
+	build-xeger:
+		conc(l,r) -> $[[r1][r2]]
+		with
+			 // <debug> "c";
+			 // <debug> l; <debug> r;
+			r1:= <map(build-xeger);concat-strings<+ build-xeger> l
+		;	r2:= <map(build-xeger);concat-strings<+ build-xeger> r
+		// ;	<debug> r1; <debug> r2
+		// 			;<debug> "c2"		 	
+		// ;	<concat-strings;debug> ["r1:",<write-to-string> r1]
+		//  	;	<concat-strings;debug> ["r2:",<write-to-string> r2]
+		 	 // ;<debug> "c2"
+
+	
+	build-xeger:
+		range(from, to) -> $((from')-(to'))
+		with
+			// <debug> "d";
+			from' := <build-xeger> from
+		;	to' := <build-xeger> to
+				// ;<debug> "d2"
+	build-xeger:
+		numeric(c) -> c'
+		with
+			c' :=  c
+	
+	build-xeger:
+		short(c) -> c'
+		with
+			c' :=  c
+		// with
+		// 	<concat-strings;debug> ["short: ", c];
+			 // <debug> "e";
+		// 	c' := <unescape> c
+		// 	;<concat-strings;debug> ["short2: ", c']
+		// ;<debug> "e2"
+			
+	build-xeger:
+		present(t) -> $((t'))
+		with 
+			 // <debug> "f";
+			t' := <build-xeger> t
+			// ;<debug> "f2"
+			// ;<debug> "f2"
+	build-xeger:
+		simple-charclass(t) -> $([(t')])
+		with
+			// <debug> "g";
+			// <concat-strings;debug> ["A: ",<write-to-string> t];
+			t' := <build-xeger> t
+			// ;<concat-strings;debug> ["B: ",<write-to-string> t']
+		// ;	<debug> "g2"
+
+	build-xeger:
+		char-class(t) -> t'
+		with
+			// <debug> "h";
+			t' := <build-xeger> t
+			// ;<debug> "h2"
+			 			// ;<debug> "h2"
+	build-xeger:
+		opt(t) -> $[([t'])?]
+		with
+			// <debug> "i";
+			t' := <build-xeger> t
+				// ;<debug> "i2"
+	build-xeger:
+		numeric(a) -> a
+		with
+			<debug> "Build-Xeger: numeric FAIL!"
+		
+	build-xeger:
+		lit(a) -> $((a'))
+		with
+			a' := <escape-lit-string> a
+			
+	escape-lit-string:
+		a -> a'
+		with
+			a':= <string-as-chars(rec x(
+					(escape-regex-operators; [id, id | x])
+					<+ [id | x]
+					<+ []))> a
+		
+	escape-regex-operators: ['|' | cs] -> ['\', '|' | cs]
+	escape-regex-operators: ['&' | cs] -> ['\', '&' | cs]
+	escape-regex-operators: ['?' | cs] -> ['\', '?' | cs]
+	escape-regex-operators: ['*' | cs] -> ['\', '*' | cs]
+	escape-regex-operators: ['+' | cs] -> ['\', '+' | cs]
+	escape-regex-operators: ['{' | cs] -> ['\', '{' | cs]
+	escape-regex-operators: ['}' | cs] -> ['\', '}' | cs]
+	escape-regex-operators: ['~' | cs] -> ['\', '~' | cs]
+	escape-regex-operators: ['<' | cs] -> ['\', '<' | cs]
+	escape-regex-operators: ['>' | cs] -> ['\', '>' | cs]
+	escape-regex-operators: ['-' | cs] -> ['\', '-' | cs]
+	escape-regex-operators: ['@' | cs] -> ['\', '@' | cs]
+	escape-regex-operators: ['#' | cs] -> ['\', '#' | cs]
+	escape-regex-operators: ['(' | cs] -> ['\', '(' | cs]
+	escape-regex-operators: [')' | cs] -> ['\', ')' | cs]
+	escape-regex-operators: ['.' | cs] -> ['\', '.' | cs]			
+	escape-regex-operators: ['[' | cs] -> ['\', '[' | cs]
+	escape-regex-operators: [']' | cs] -> ['\', ']' | cs]				
+	
+	build-xeger:
+		sort(s) -> result
+		with
+			// Get the possible lexical rules that include sorts or char-classes (possibleSorts)
+			// and the rules that only contain literals (possibleEmpties)
+			possibleSorts := <bagof-LexSorts;numberXeger(id)> s
+			// ;<concat-strings;debug> ["PossibleLexSorts: ",<write-to-string> possibleSorts]
+		;	nSorts := <XegerCount> ()
+	 	;	sortToChoose := <mod> (<next-random;abs>, nSorts)
+	 	;	<filter(?(_,sortToChoose))> possibleSorts => [x|xs]
+	 	;	!x => (xegerToGenerate, sortToChoose)
+	 	;	if not(!xegerToGenerate => []) then
+	 	 		<map(build-xeger);special-string-concat> xegerToGenerate => [r]
+	 	 	else
+	 	 		r := []
+	 	 	end
+	 	; 	if <LexCons> (s,xegerToGenerate) => cons then
+	 			// !r;debug;
+	 			result := cons#([r])
+	 			// ;!result;debug
+	 		else
+	 			result := r
+	 		end
+	 	// 	;concat-strings;generate-string-from-reg(|<id>)
+		 	// end	
+
+	// Concatenates subsequent strings(double-quoted) in lists with also non-strings		 	
+	special-string-concat:
+		list -> list'
+		where <take(|2)> list
+		with
+			!list => [first|tail]
+		;	!tail => [second|rest]
+		;	if <conc-strings> (first,second) => newTerm then
+		 		list' := <conc;special-string-concat> ( [newTerm], rest)
+		 	else
+		 		list' := <conc> ([first], <special-string-concat> tail)
+		 	end 	
+	special-string-concat:
+		t -> t		  
+		
+		
+	generate-terminals:
+		cons#(a) -> result
+		where not(<is-double-quoted> cons) 
+		// with
+		// 	<concat-strings;debug> ["GT1a: ",<write-to-string>cons];
+		// 	<concat-strings;debug> ["GT1b: ",<write-to-string>a]
+		with
+			result := <map(generate-terminals)> a
+	
+	generate-terminals:
+		""	-> ""
+		
+	generate-terminals:
+		regex -> result
+		// with
+		// 	<concat-strings;debug> ["GT3: ",regex]
+		with
+			result := <generate-string-from-reg(|regex)>
+	
+		// // ;	!possibleXegers;write-to-string;debug
+		// ;	xegerToChoose := <mod> (<next-random;abs>, <XegerCount> ())
+		// 	// ;	<concat-strings;debug> ["Chosen Production#: ", <write-to-string>prodToChoose]
+		// // ;	<filter(?(_,xegerToChoose))> possibleXegers => [x|xs]
+		// // ;	!x => (xegerToGenerate,xegerToChoose)
+		// 	// ;	result := <map(build-xeger);concat-strings> xegerToGenerate
+		// ;	result := <map(map(build-xeger);concat-strings);try(filter(not(?""));filter(not(?" "));separate-by(|"|");concat-strings)> possibleSorts
+	
+	  	
+	  	// {\ t -> t' 
+	  	// 				with <concat-strings;debug> ["A: ", <write-to-string> t]
+	  	// 				with t' := <map(build-xeger);concat-strings> t 
+	  	// 				with <concat-strings;debug> ["B: ", <write-to-string> t'] \})> allProds
+	  	// ;<write-to-string;debug> result
+		// end
+	
+	numberXeger(s) =
+    	!(<id>, 0); thread-map(!(<s>,<Snd;inc>)); ?(<id>,numXeger);rules(XegerCount : _ -> numXeger)
+
+			
+	build-xeger:
+		comp(t) -> result
+		with
+			// <debug> "i";
+			t' := <build-xeger> t
+			// This & part of the string is to prevent the generator from returning characters
+			// which are not supported (also the generator does not use the cardinality of sets
+			// thus /n and /t have higher probability than individual characters in sets
+			// thus all characters are written out (almost all)
+		;	result := <concat-strings> ["((~",t',")&[0123456789\\n\\t ~\\\"#$%&'()*+-./:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ-^_`abcdefghijklmnopqrstuvwxyz{|}~])"]
+			
+	build-xeger:
+		alt(l,r) -> result
+		with
+			// <debug> "j";
+			l' := <build-xeger> l
+		;	r' := <build-xeger> r
+		;	if !l' => "" then
+		 		if !r' => "" then
+		 			result := ""
+		 		else
+		 			result := r'
+		 		end
+		 	else
+		 		if !r' => "" then
+		 			result:= l'
+		 		else
+		 			result:=$((l')|(r'))
+		 		end
+		 	end
+		 				// ;<debug> "j2"	
+		 	
+	build-xeger:
+		label(_,rest) -> result
+		with
+			// <debug> "k";
+			result := <build-xeger> rest
+			// ;<debug> "k2"
+	build-xeger:
+		t -> t
+		with
+			// <debug> "l";
+			<concat-strings;debug> ["Z: ", <write-to-string> t ]
+			
\ No newline at end of file

Modified: spoofax-imp/branches/spoofax-testing-automation/trans/spoofax_testing.str
==============================================================================
--- spoofax-imp/branches/spoofax-testing-automation/trans/spoofax_testing.str	Fri Feb 24 14:34:14 2012	(r24398)
+++ spoofax-imp/branches/spoofax-testing-automation/trans/spoofax_testing.str	Fri Feb 24 14:49:09 2012	(r24399)
@@ -12,8 +12,15 @@
   generate
   file-resolving
   test-runner
+  random/random_test
 rules
-    
+  
+  // For the automated testing files
+  editor-analyze:
+  	(ast, path, project-path) -> (ast, [], [], [])
+  	where
+		!ast => "AutoTest"#(_)
+		     
   editor-analyze:
     (ast, path, project-path) ->
     (ast', errors', warnings', notes')

From gabrielkonat at gmail.com  Fri Feb 24 16:29:25 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Fri, 24 Feb 2012 15:29:25 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24400 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax
Message-ID: <20120224152925.F3922108C046@mx3.tudelft.nl>

Author: gkonat
Date: Fri Feb 24 15:29:25 2012
New Revision: 24400
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24400&sc=1

Log:
Created pretty print table for entity with aspects experiment.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.pp

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.pp
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.pp	Fri Feb 24 14:49:09 2012	(r24399)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.pp	Fri Feb 24 15:29:25 2012	(r24400)
@@ -1,2 +1,38 @@
 %% Pretty printing table (see also EntityWithAspects.generated.pp)
-[]
+[
+   Module                   -- V[H[KW["module"] _1] _2],
+   Module.2:iter-star       -- _1,
+   Entity                   -- V is=2[H[KW["entity"] _1 KW["{"]] _2] KW["}"],
+   Entity.2:iter-star       -- _1,
+   Import                   -- H[KW["import"] _1],
+   WildcardImport           -- H hs=0[_1 KW["."] KW["*"]],
+   EntityImport             -- H hs=0[_1 KW["."] _2],
+   Aspect                   -- V is=2[H[KW["aspect"] _1 KW["{"]] _2] KW["}"],
+   Aspect.2:iter-star       -- _1,
+   Pointcut                 -- V is=2[H[KW["pointcut"] H hs=0[_1 KW["("] _2 KW[")"] KW[":"]]] _3],
+   Pointcut.2:iter-star-sep -- H hs=0[_1 KW[", "]],
+   Pointcut.3:iter-sep      -- H hs=0[_1 KW[", "]],
+   Advice                   -- V is=2[H[KW["advice"] _1 H hs=0[_2 KW["("] _3 KW[")"] KW[": "] _4 KW["("] _5 KW[")"]]] _6],
+   Advice.3:iter-star-sep   -- H hs=0[_1 KW[", "]],
+   Advice.5:iter-star-sep   -- H hs=0[_1 KW[", "]],
+   Before                   -- KW["before"],
+   After                    -- KW["after"],
+   Assigned                 -- H[KW["assigned"] H hs=0[KW["("] _1 KW[")"]]],
+   Property                 -- H[_1 KW[":"] _2],
+   Function                 -- H hs=0[_1 KW["("] _2 KW[")"]] _3,
+   Function.2:iter-star-sep -- H hs=0[_1 KW[", "]],
+   Param                    -- H[_1 KW[":"] _2],
+   VarDecl                  -- H[KW["var"] _1 KW[":"] _2],
+   VarDeclInit              -- H[KW["var"] _1 KW[":"] _2 KW["="] _3],
+   Assign                   -- H[_1 KW["="] _2],
+   Block                    -- V is=2 [H[KW["{"]] _1] KW["}"],
+   Block.1:iter-star        -- V[_1],
+   Print                    -- H[KW["print"] _1],
+   Call                     -- H hs=0[_1 KW["("] _2 KW[")"]],
+   Call.2:iter-star-sep     -- H hs=0[_1 KW[", "]],
+   Var                      -- _1,
+   PropAccess               -- H hs=0[_1 KW["."] _2],
+   Type                     -- _1,
+   StringType               -- KW["String"],
+   IntType                  -- KW["Int"]
+]

From L.C.L.Kats at tudelft.nl  Fri Feb 24 18:19:00 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Fri, 24 Feb 2012 17:19:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24401 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax
	strategoxt-java-backend/trunk/java/pack-sdf-ext...
Message-ID: <20120224171900.4917D7F8040@mx1.tudelft.nl>

Author: LennartKats
Date: Fri Feb 24 17:18:59 2012
New Revision: 24401
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24401&sc=1

Log:
fixed naming annotations bug that caused an ambiguity

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Naming.sdf
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf
   strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/Naming.sdf
   strategoxt-java-backend/trunk/test/sdf-ext/Test.sdf
   strategoxt-java-backend/trunk/test/test-tools.sh

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Naming.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Naming.sdf	Fri Feb 24 15:29:25 2012	(r24400)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/syntax/Naming.sdf	Fri Feb 24 17:18:59 2012	(r24401)
@@ -39,7 +39,7 @@
     <Symbol-CF> <LAYOUT?-CF> "+"             -> <Symbol-CF>
     }
     >
-    <Symbol-CF> <LAYOUT?-CF> "|" <Symbol-CF> -> <Symbol-CF>
+    <Symbol-CF> <LAYOUT?-CF> "|" <LAYOUT?-CF> <Symbol-CF> -> <Symbol-CF>
     >
     {
      <Namespace-CF> <LAYOUT?-CF> "@=" <LAYOUT?-CF> <Symbol-CF> -> <Symbol-CF>

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf	Fri Feb 24 15:29:25 2012	(r24400)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/syntax/Naming.sdf	Fri Feb 24 17:18:59 2012	(r24401)
@@ -35,16 +35,16 @@
 priorities
 
     {
-    <Symbol-CF> <LAYOUT?-CF> "?"            -> <Symbol-CF>
-    <Symbol-CF> <LAYOUT?-CF> "*"             -> <Symbol-CF>
-    <Symbol-CF> <LAYOUT?-CF> "+"             -> <Symbol-CF>
+    <Symbol[[SDF]]-CF> <LAYOUT?-CF> "?"            -> <Symbol[[SDF]]-CF>
+    <Symbol[[SDF]]-CF> <LAYOUT?-CF> "*"             -> <Symbol[[SDF]]-CF>
+    <Symbol[[SDF]]-CF> <LAYOUT?-CF> "+"             -> <Symbol[[SDF]]-CF>
     }
     >
-    <Symbol-CF> <LAYOUT?-CF> "|" <Symbol-CF> -> <Symbol-CF>
+    <Symbol[[SDF]]-CF> <LAYOUT?-CF> "|" <LAYOUT?-CF> <Symbol[[SDF]]-CF> -> <Symbol[[SDF]]-CF>
     >
     {
-     <Namespace-CF> <LAYOUT?-CF> "@=" <LAYOUT?-CF> <Symbol-CF> -> <Symbol-CF>
-     <Namespace-CF>              "@"               <Symbol-CF> -> <Symbol-CF> 
+     <Namespace-CF> <LAYOUT?-CF> "@=" <LAYOUT?-CF> <Symbol[[SDF]]-CF> -> <Symbol[[SDF]]-CF>
+     <Namespace-CF>              "@"               <Symbol[[SDF]]-CF> -> <Symbol[[SDF]]-CF> 
     } 
 
 lexical restrictions

Modified: strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/Naming.sdf
==============================================================================
--- strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/Naming.sdf	Fri Feb 24 15:29:25 2012	(r24400)
+++ strategoxt-java-backend/trunk/java/pack-sdf-ext/syn/Naming.sdf	Fri Feb 24 17:18:59 2012	(r24401)
@@ -39,7 +39,7 @@
     <Symbol-CF> <LAYOUT?-CF> "+"             -> <Symbol-CF>
     }
     >
-    <Symbol-CF> <LAYOUT?-CF> "|" <Symbol-CF> -> <Symbol-CF>
+    <Symbol-CF> <LAYOUT?-CF> "|" <LAYOUT?-CF> <Symbol-CF> -> <Symbol-CF>
     >
     {
      <Namespace-CF> <LAYOUT?-CF> "@=" <LAYOUT?-CF> <Symbol-CF> -> <Symbol-CF>

Modified: strategoxt-java-backend/trunk/test/sdf-ext/Test.sdf
==============================================================================
--- strategoxt-java-backend/trunk/test/sdf-ext/Test.sdf	Fri Feb 24 15:29:25 2012	(r24400)
+++ strategoxt-java-backend/trunk/test/sdf-ext/Test.sdf	Fri Feb 24 17:18:59 2012	(r24401)
@@ -7,3 +7,8 @@
   NAM at X  -> X
   NAM@=X -> X
   @NAM   -> X
+
+lexical syntax
+
+    {ID "/"}+       -> QID
+    {ID ("/"|".")}+ -> QIDWithDots

Modified: strategoxt-java-backend/trunk/test/test-tools.sh
==============================================================================
--- strategoxt-java-backend/trunk/test/test-tools.sh	Fri Feb 24 15:29:25 2012	(r24400)
+++ strategoxt-java-backend/trunk/test/test-tools.sh	Fri Feb 24 17:18:59 2012	(r24401)
@@ -12,3 +12,5 @@
   echo Illegal output from pack-sdf
   exit 1
 fi
+
+echo 'Success!'

From gabrielkonat at gmail.com  Mon Feb 27 17:38:46 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 27 Feb 2012 16:38:46 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24402 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib
	spoofax-contrib/sepa...
Message-ID: <20120227163846.58A31108C029@mx3.tudelft.nl>

Author: gkonat
Date: Mon Feb 27 16:38:45 2012
New Revision: 24402
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24402&sc=1

Log:
Added basic test program generation code to entity-with-aspects experiment.
Added asserts for detecting cycles in index data structure.

Added:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Fri Feb 24 17:18:59 2012	(r24401)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str	Mon Feb 27 16:38:45 2012	(r24402)
@@ -72,88 +72,88 @@
     VarDecl(_, x) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Start(a_16276) -> Start(a_16276)
+    Start(m_1183) -> Start(m_1183)
 
   nam-annotate-names(|def-path):
-    Include(z_16275) -> Include(z_16275{def-path})
+    Include(l_1183) -> Include(l_1183{def-path})
 
   nam-annotate-names(|def-path):
-    Include(y_16275) -> Include(y_16275{def-path})
+    Include(k_1183) -> Include(k_1183{def-path})
 
   nam-annotate-names(|def-path):
-    FunDecl(u_16275, v_16275, w_16275, x_16275) -> FunDecl(u_16275, v_16275{def-path}, w_16275, x_16275)
+    FunDecl(g_1183, h_1183, i_1183, j_1183) -> FunDecl(g_1183, h_1183{def-path}, i_1183, j_1183)
 
   nam-annotate-names(|def-path):
-    Param(s_16275, t_16275) -> Param(s_16275, t_16275{def-path})
+    Param(e_1183, f_1183) -> Param(e_1183, f_1183{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDecl(r_16275) -> TypeDecl(r_16275)
+    TypeDecl(d_1183) -> TypeDecl(d_1183)
 
   nam-annotate-names(|def-path):
-    TypeDef(p_16275, q_16275) -> TypeDef(p_16275, q_16275{def-path})
+    TypeDef(b_1183, c_1183) -> TypeDef(b_1183, c_1183{def-path})
 
   nam-annotate-names(|def-path):
-    TypeDef(n_16275, o_16275) -> TypeDef(n_16275, o_16275{def-path})
+    TypeDef(z_1182, a_1183) -> TypeDef(z_1182, a_1183{def-path})
 
   nam-annotate-names(|def-path):
-    StructDecl(l_16275, m_16275) -> StructDecl(l_16275{def-path}, m_16275)
+    StructDecl(x_1182, y_1182) -> StructDecl(x_1182{def-path}, y_1182)
 
   nam-annotate-names(|def-path):
-    Field(j_16275, k_16275) -> Field(j_16275, k_16275{def-path})
+    Field(v_1182, w_1182) -> Field(v_1182, w_1182{def-path})
 
   nam-annotate-names(|def-path):
-    VarDecl(h_16275, i_16275) -> VarDecl(h_16275, i_16275{def-path})
+    VarDecl(t_1182, u_1182) -> VarDecl(t_1182, u_1182{def-path})
 
   nam-annotate-names(|def-path):
-    Stmt(g_16275) -> Stmt(g_16275)
+    Stmt(s_1182) -> Stmt(s_1182)
 
   nam-annotate-names(|def-path):
-    Assign(e_16275, f_16275) -> Assign(e_16275, f_16275)
+    Assign(q_1182, r_1182) -> Assign(q_1182, r_1182)
 
   nam-annotate-names(|def-path):
-    Return(d_16275) -> Return(d_16275)
+    Return(p_1182) -> Return(p_1182)
 
   nam-annotate-names(|def-path):
-    StrLit(c_16275) -> StrLit(c_16275)
+    StrLit(o_1182) -> StrLit(o_1182)
 
   nam-annotate-names(|def-path):
-    IntLit(b_16275) -> IntLit(b_16275)
+    IntLit(n_1182) -> IntLit(n_1182)
 
   nam-annotate-names(|def-path):
-    Call(z_16274, a_16275) -> Call(
-                                <nam-annotate-use(|Function())> z_16274
-                              , a_16275
-                              )
+    Call(l_1182, m_1182) -> Call(
+                              <nam-annotate-use(|Function())> l_1182
+                            , m_1182
+                            )
 
   nam-annotate-names(|def-path):
-    SizeOf(y_16274) -> SizeOf(y_16274)
+    SizeOf(k_1182) -> SizeOf(k_1182)
 
   nam-annotate-names(|def-path):
-    Access(w_16274, x_16274) -> Access(
-                                  w_16274
-                                , <nam-annotate-use(|Field())> x_16274
-                                )
+    Access(i_1182, j_1182) -> Access(
+                                i_1182
+                              , <nam-annotate-use(|Field())> j_1182
+                              )
 
   nam-annotate-names(|def-path):
-    DerefAccess(u_16274, v_16274) -> DerefAccess(
-                                       u_16274
-                                     , <nam-annotate-use(|Field())> v_16274
-                                     )
+    DerefAccess(g_1182, h_1182) -> DerefAccess(
+                                     g_1182
+                                   , <nam-annotate-use(|Field())> h_1182
+                                   )
 
   nam-annotate-names(|def-path):
-    Deref(t_16274) -> Deref(t_16274)
+    Deref(f_1182) -> Deref(f_1182)
 
   nam-annotate-names(|def-path):
-    Ref(s_16274) -> Ref(s_16274)
+    Ref(e_1182) -> Ref(e_1182)
 
   nam-annotate-names(|def-path):
-    VarRef(r_16274) -> VarRef(<nam-annotate-use(|Var())> r_16274)
+    VarRef(d_1182) -> VarRef(<nam-annotate-use(|Var())> d_1182)
 
   nam-annotate-names(|def-path):
-    Cast(p_16274, q_16274) -> Cast(p_16274, q_16274)
+    Cast(b_1182, c_1182) -> Cast(b_1182, c_1182)
 
   nam-annotate-names(|def-path):
-    Type(o_16274) -> Type(<nam-annotate-use(|Type())> o_16274)
+    Type(a_1182) -> Type(<nam-annotate-use(|Type())> a_1182)
 
   nam-annotate-names(|def-path):
     Char() -> Char()
@@ -165,7 +165,7 @@
     Void() -> Void()
 
   nam-annotate-names(|def-path):
-    Pointer(n_16274) -> Pointer(n_16274)
+    Pointer(z_1181) -> Pointer(z_1181)
 
   nam-annotate-names(|def-path):
-    StructRef(m_16274) -> StructRef(<nam-annotate-use(|Struct())> m_16274)
\ No newline at end of file
+    StructRef(y_1181) -> StructRef(<nam-annotate-use(|Struct())> y_1181)
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str	Fri Feb 24 17:18:59 2012	(r24401)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str	Mon Feb 27 16:38:45 2012	(r24402)
@@ -129,7 +129,6 @@
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)
-  origin-file      = prim("SSL_EXT_origin_file", <id>)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
 

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Fri Feb 24 17:18:59 2012	(r24401)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str	Mon Feb 27 16:38:45 2012	(r24402)
@@ -71,37 +71,37 @@
     Method(_, x, _) -> <nam-get-def(|Method())> x
 
   nam-annotate-names(|def-path):
-    Start(g_923, h_923) -> Start(g_923, h_923)
+    Start(s_1033, t_1033) -> Start(s_1033, t_1033)
 
   nam-annotate-names(|def-path):
-    Namespace(e_923, f_923) -> Namespace(e_923{def-path}, f_923)
+    Namespace(q_1033, r_1033) -> Namespace(q_1033{def-path}, r_1033)
 
   nam-annotate-names(|def-path):
-    PartialClass(c_923, d_923) -> PartialClass(c_923{def-path}, d_923)
+    PartialClass(o_1033, p_1033) -> PartialClass(o_1033{def-path}, p_1033)
 
   nam-annotate-names(|def-path):
-    Class(a_923, b_923) -> Class(a_923{def-path}, b_923)
+    Class(m_1033, n_1033) -> Class(m_1033{def-path}, n_1033)
 
   nam-annotate-names(|def-path):
-    Using(z_922) -> Using(z_922{def-path})
+    Using(l_1033) -> Using(l_1033{def-path})
 
   nam-annotate-names(|def-path):
-    UsingPart(y_922) -> UsingPart(<nam-annotate-use(|Namespace())> y_922)
+    UsingPart(k_1033) -> UsingPart(<nam-annotate-use(|Namespace())> k_1033)
 
   nam-annotate-names(|def-path):
-    UsingPart(w_922, x_922) -> UsingPart(
-                                 w_922
-                               , <nam-annotate-use(|Namespace())> x_922
-                               )
+    UsingPart(i_1033, j_1033) -> UsingPart(
+                                   i_1033
+                                 , <nam-annotate-use(|Namespace())> j_1033
+                                 )
 
   nam-annotate-names(|def-path):
-    Field(u_922, v_922) -> Field(u_922, v_922{def-path})
+    Field(g_1033, h_1033) -> Field(g_1033, h_1033{def-path})
 
   nam-annotate-names(|def-path):
-    Method(r_922, s_922, t_922) -> Method(r_922, s_922{def-path}, t_922)
+    Method(d_1033, e_1033, f_1033) -> Method(d_1033, e_1033{def-path}, f_1033)
 
   nam-annotate-names(|def-path):
-    Type(q_922) -> Type(<nam-annotate-use(|Type())> q_922)
+    Type(c_1033) -> Type(<nam-annotate-use(|Type())> c_1033)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()
@@ -113,19 +113,19 @@
     VoidType() -> VoidType()
 
   nam-annotate-names(|def-path):
-    Return(p_922) -> Return(p_922)
+    Return(b_1033) -> Return(b_1033)
 
   nam-annotate-names(|def-path):
-    FieldRef(o_922) -> FieldRef(<nam-annotate-use(|Field())> o_922)
+    FieldRef(a_1033) -> FieldRef(<nam-annotate-use(|Field())> a_1033)
 
   nam-annotate-names(|def-path):
-    FieldAccess(m_922, n_922) -> FieldAccess(
-                                   m_922
-                                 , <nam-annotate-use(|Field())> n_922
-                                 )
+    FieldAccess(y_1032, z_1032) -> FieldAccess(
+                                     y_1032
+                                   , <nam-annotate-use(|Field())> z_1032
+                                   )
 
   nam-annotate-names(|def-path):
-    MethodCall(k_922, l_922) -> MethodCall(
-                                  k_922
-                                , <nam-annotate-use(|Method())> l_922
-                                )
\ No newline at end of file
+    MethodCall(w_1032, x_1032) -> MethodCall(
+                                    w_1032
+                                  , <nam-annotate-use(|Method())> x_1032
+                                  )
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Fri Feb 24 17:18:59 2012	(r24401)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Mon Feb 27 16:38:45 2012	(r24402)
@@ -20,7 +20,8 @@
   builder  : "Show analyzed syntax" = generate-analyzed (openeditor) (realtime) (meta) (source)
   builder  : "Show index entries for current file" = index-currentfile (openeditor) (realtime) (meta) (source)   
   builder  : "Show index entries for all files" = index-allfiles (openeditor) (realtime) (meta) (source)
-  builder  : "Clear index" = index-cleanall (meta) (source)                                                                                                       
+  builder  : "Clear index" = index-cleanall (meta) (source)
+  builder  : "Generate test file" = generate-test-file (openeditor) (meta)                                                                                                    
 
 refactorings
                                                                                                                         

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Fri Feb 24 17:18:59 2012	(r24401)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str	Mon Feb 27 16:38:45 2012	(r24402)
@@ -110,38 +110,38 @@
     VarDeclInit(x, _, _) -> <nam-get-def(|Var())> x
 
   nam-annotate-names(|def-path):
-    Module(g_50407, h_50407) -> Module(g_50407{def-path}, h_50407)
+    Module(p_1126, q_1126) -> Module(p_1126{def-path}, q_1126)
 
   nam-annotate-names(|def-path):
-    Entity(e_50407, f_50407) -> Entity(e_50407{def-path}, f_50407)
+    Entity(n_1126, o_1126) -> Entity(n_1126{def-path}, o_1126)
 
   nam-annotate-names(|def-path):
-    Import(d_50407) -> Import(d_50407{def-path})
+    Import(m_1126) -> Import(m_1126{def-path})
 
   nam-annotate-names(|def-path):
-    WildcardImport(c_50407) -> WildcardImport(<nam-annotate-use(|Module())> c_50407)
+    WildcardImport(l_1126) -> WildcardImport(<nam-annotate-use(|Module())> l_1126)
 
   nam-annotate-names(|def-path):
-    EntityImport(a_50407, b_50407) -> EntityImport(
-                                        <nam-annotate-use(|Module())> a_50407
-                                      , <nam-annotate-use(|Type())> b_50407
-                                      )
+    EntityImport(j_1126, k_1126) -> EntityImport(
+                                      <nam-annotate-use(|Module())> j_1126
+                                    , <nam-annotate-use(|Type())> k_1126
+                                    )
 
   nam-annotate-names(|def-path):
-    Aspect(y_50406, z_50406) -> Aspect(y_50406{def-path}, z_50406)
+    Aspect(h_1126, i_1126) -> Aspect(h_1126{def-path}, i_1126)
 
   nam-annotate-names(|def-path):
-    Pointcut(v_50406, w_50406, x_50406) -> Pointcut(v_50406{def-path}, w_50406, x_50406)
+    Pointcut(e_1126, f_1126, g_1126) -> Pointcut(e_1126{def-path}, f_1126, g_1126)
 
   nam-annotate-names(|def-path):
-    Advice(p_50406, q_50406, r_50406, s_50406, t_50406, u_50406) -> Advice(
-                                                                      p_50406{def-path}
-                                                                    , q_50406
-                                                                    , r_50406
-                                                                    , <nam-annotate-use(|Pointcut())> s_50406
-                                                                    , t_50406
-                                                                    , u_50406
-                                                                    )
+    Advice(y_1125, z_1125, a_1126, b_1126, c_1126, d_1126) -> Advice(
+                                                                y_1125{def-path}
+                                                              , z_1125
+                                                              , a_1126
+                                                              , <nam-annotate-use(|Pointcut())> b_1126
+                                                              , c_1126
+                                                              , d_1126
+                                                              )
 
   nam-annotate-names(|def-path):
     Before() -> Before()
@@ -150,49 +150,49 @@
     After() -> After()
 
   nam-annotate-names(|def-path):
-    Assigned(o_50406) -> Assigned(o_50406)
+    Assigned(x_1125) -> Assigned(x_1125)
 
   nam-annotate-names(|def-path):
-    Property(m_50406, n_50406) -> Property(m_50406{def-path}, n_50406)
+    Property(v_1125, w_1125) -> Property(v_1125{def-path}, w_1125)
 
   nam-annotate-names(|def-path):
-    Function(j_50406, k_50406, l_50406) -> Function(j_50406{def-path}, k_50406, l_50406)
+    Function(s_1125, t_1125, u_1125) -> Function(s_1125{def-path}, t_1125, u_1125)
 
   nam-annotate-names(|def-path):
-    Param(h_50406, i_50406) -> Param(h_50406{def-path}, i_50406)
+    Param(q_1125, r_1125) -> Param(q_1125{def-path}, r_1125)
 
   nam-annotate-names(|def-path):
-    VarDecl(f_50406, g_50406) -> VarDecl(f_50406{def-path}, g_50406)
+    VarDecl(o_1125, p_1125) -> VarDecl(o_1125{def-path}, p_1125)
 
   nam-annotate-names(|def-path):
-    VarDeclInit(c_50406, d_50406, e_50406) -> VarDeclInit(c_50406{def-path}, d_50406, e_50406)
+    VarDeclInit(l_1125, m_1125, n_1125) -> VarDeclInit(l_1125{def-path}, m_1125, n_1125)
 
   nam-annotate-names(|def-path):
-    Assign(a_50406, b_50406) -> Assign(a_50406, b_50406)
+    Assign(j_1125, k_1125) -> Assign(j_1125, k_1125)
 
   nam-annotate-names(|def-path):
-    Block(z_50405) -> Block(z_50405)
+    Block(i_1125) -> Block(i_1125)
 
   nam-annotate-names(|def-path):
-    Print(y_50405) -> Print(y_50405)
+    Print(h_1125) -> Print(h_1125)
 
   nam-annotate-names(|def-path):
-    Call(w_50405, x_50405) -> Call(
-                                <nam-annotate-use(|Function())> w_50405
-                              , x_50405
-                              )
+    Call(f_1125, g_1125) -> Call(
+                              <nam-annotate-use(|Function())> f_1125
+                            , g_1125
+                            )
 
   nam-annotate-names(|def-path):
-    Var(v_50405) -> Var(<nam-annotate-use(|Var())> v_50405)
+    Var(e_1125) -> Var(<nam-annotate-use(|Var())> e_1125)
 
   nam-annotate-names(|def-path):
-    PropAccess(t_50405, u_50405) -> PropAccess(
-                                      t_50405
-                                    , <nam-annotate-use(|Property())> u_50405
-                                    )
+    PropAccess(c_1125, d_1125) -> PropAccess(
+                                    c_1125
+                                  , <nam-annotate-use(|Property())> d_1125
+                                  )
 
   nam-annotate-names(|def-path):
-    Type(s_50405) -> Type(<nam-annotate-use(|Type())> s_50405)
+    Type(b_1125) -> Type(<nam-annotate-use(|Type())> b_1125)
 
   nam-annotate-names(|def-path):
     StringType() -> StringType()

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Fri Feb 24 17:18:59 2012	(r24401)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Mon Feb 27 16:38:45 2012	(r24402)
@@ -11,6 +11,7 @@
   lib/compilation-library
   check
   generate
+  generate-test
   analysis-manual
   analysis-generated
 
@@ -40,7 +41,16 @@
     with
       editor-init;
       filename := <guarantee-extension(|"analyzed.aterm")> path;
-      result   := <analyze-top> (selected, path, project-path)   
+      result   := <analyze-top> (selected, path, project-path)
+      
+  generate-test-file:
+    (selected, position, ast, path, project-path) -> None()
+    with
+      language  := <index-origin-language> ast;
+      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-clear;
+      <testgen> (selected, position, ast, path, project-path);
+      index-clear
       
   // Prints the entries in the index of the current file.
   index-currentfile:

Added: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str	Mon Feb 27 16:38:45 2012	(r24402)
@@ -0,0 +1,125 @@
+module generate-test
+
+imports
+    
+  libstratego-lib
+  libstratego-gpp
+  libstratego-aterm
+  include/EntityWithAspects
+  lib/editor-common.generated
+  lib/index-library
+  lib/analysis-library
+  lib/compilation-library
+  analysis-generated
+  types
+  util
+  
+rules // Constants
+  
+  testgen-internal-file = !"/.internal/testgen"
+  testgen-module-name = !"TestGen"
+  
+  testgen-num-files = !10
+  
+  testgen-min-entities = !1
+  testgen-max-entities = !10
+  
+  testgen-min-properties = !1
+  testgen-max-properties = !5
+  
+  testgen-min-functions = !1
+  testgen-max-functions = !3
+  
+rules // Random primitives
+  
+  random-int(|min, max) = <int> <add> (<add> (<mul> (<subt> (max, <inc> min), <divr> (<abs> <next-random>, 1073741823)), min), 0.5)
+  random-identifier = new; string-replace(|"_", "")
+  
+rules // Random elements
+  
+  random-type:
+    _ -> type
+    with
+      primtypes := <primitive-types>;
+      usertypes := <map(\Def([_, name|_]) -> name\)> <index-get-children(|Type(), "")> Def([Module(), <testgen-module-name>]); 
+      types := <conc> (primtypes, usertypes);
+      type := <index> (<random-int(|1, <inc> <length> types)>, types)
+  
+rules // Random strategies
+  
+  testgen-apply(strat|num) = <range> num; map(strat)
+  testgen-random-apply(strat|min-rand, max-rand) = testgen-apply(strat|<random-int(|min-rand, max-rand)>)
+  
+rules // Index manipulation
+  
+  testgen-add-ast(|file):
+    ast -> ast5
+    with
+      // Add Unresolved annotations, record globals
+      (Some(ast2), defs) := <analyze-defs(|Anon(), Anon())> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
+      <index-add-all(|file)> defs;
+
+      // Find DefData
+      ast3 := <prim("SSL_EXT_clone_and_set_parents", <id>)> ast2;
+      data := <origin-track-forced(analyze-tree-data)> ast3;
+      <index-add-all(|file)> data;
+
+      // Resolve an references in DefData (using what we just stored)
+      (data', data-uses) := <analyze-uses> data;
+      <index-remove-all(|file)> data;
+      <index-add-all(|file)> data';
+  
+rules // File writing
+      
+  testgen-write-file(|file):
+  	ast -> None()
+  	with
+  		string := <pp-entitywithaspects-string> ast;
+	    try(<mkdir> <abspath> <dirname> file);
+	    <fclose> <fputs> (string, <fopen> (file, "w"));
+	    <debug(!"Writing ")> file
+  
+rules // AST generation
+  
+  testgen:
+  	(selected, position, ast, path, project-path) -> None()
+  	with
+  		files := <map(\n -> $[[project-path]/testgen/test_[n].ewa]\)> <range> <testgen-num-files>;
+  		<map(testgen-file)> files
+  
+  testgen-file:
+  	file -> None()
+  	with
+  		ast := <testgen-module>;
+  		<testgen-add-ast(|file)> ast;
+  		<testgen-write-file(|file)> ast
+  
+  testgen-module:
+    _ -> mod
+    with
+      name := <testgen-module-name>;
+      entities := <testgen-random-apply(testgen-entity|<testgen-min-entities>, <testgen-max-entities>)>;
+      mod := Module(name, <conc> (entities, []))
+    
+  testgen-entity:
+    _ -> entity
+    with
+      name := <random-identifier>;
+      properties := <testgen-random-apply(testgen-property|<testgen-min-properties>, <testgen-max-properties>)>;
+      functions := <testgen-random-apply(testgen-function|<testgen-min-functions>, <testgen-max-functions>)>;
+      entity := Entity(name, <conc> (properties, functions))
+      
+  testgen-property:
+    _ -> property
+    with
+      name := <random-identifier>;
+      type := <random-type>;
+      property := Property(name, type)
+      
+  testgen-function:
+    _ -> function
+    with
+      name := <random-identifier>;
+      params := [];
+      statement := Block([]);
+      function := Function(name, params, statement)
\ No newline at end of file

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Fri Feb 24 17:18:59 2012	(r24401)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Mon Feb 27 16:38:45 2012	(r24402)
@@ -10,6 +10,7 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.Map.Entry;
 
 import org.spoofax.interpreter.library.IOAgent;
 import org.spoofax.interpreter.terms.IStrategoAppl;
@@ -89,6 +90,20 @@
 		add(entry, getEntryParentAbove(entry.getNamespace(), entry.getId(), true));
 	}
 	
+	private SemanticIndexEntry getReferenceInChain(SemanticIndexEntry entry) {
+		if(entry == null)
+			return null;
+		
+		for(Entry<SemanticIndexEntry, SemanticIndexEntry> e : table.entrySet()) {
+			if(entry == e.getKey().getNext())
+				return e.getKey();
+			if(entry == e.getValue().getNext())
+				return e.getValue();
+		}
+		
+		return null;
+	}
+	
 	private void add(SemanticIndexEntry entry, SemanticIndexEntryParent parent) {
 		if (parent != null)
 			parent.add(entry);
@@ -99,6 +114,7 @@
 				entry.getFile().addEntry(entry);
 		} else {
 			assert !entry.isParent() && existing != entry;
+			assert getReferenceInChain(existing.getLast()) == null;
 			existing.getLast().setNext(entry);
 			if (entry.getFile() != null)
 				entry.getFile().addEntry(entry);
@@ -120,6 +136,7 @@
 			if (entry.getNext() != null)
 				table.put(entry.getNext(), entry.getNext());
 		} else {
+			assert getReferenceInChain(head) == null;
 			head.setNext(entry.getNext());
 		}
 		

From gabrielkonat at gmail.com  Mon Feb 27 17:47:55 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Mon, 27 Feb 2012 16:47:55 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24403 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
Message-ID: <20120227164755.30A947F800C@mx1.tudelft.nl>

Author: gkonat
Date: Mon Feb 27 16:47:54 2012
New Revision: 24403
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24403&sc=1

Log:
Fixed old code.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str	Mon Feb 27 16:38:45 2012	(r24402)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str	Mon Feb 27 16:47:54 2012	(r24403)
@@ -53,7 +53,7 @@
 rules // Index manipulation
   
   testgen-add-ast(|file):
-    ast -> ast5
+    ast -> ast3
     with
       // Add Unresolved annotations, record globals
       (Some(ast2), defs) := <analyze-defs(|Anon(), Anon())> Some(ast); // HACK: force origin tracking with Some()... // TODO: still needed?
@@ -67,7 +67,7 @@
       // Resolve an references in DefData (using what we just stored)
       (data', data-uses) := <analyze-uses> data;
       <index-remove-all(|file)> data;
-      <index-add-all(|file)> data';
+      <index-add-all(|file)> data'
   
 rules // File writing
       

From L.C.L.Kats at tudelft.nl  Mon Feb 27 18:02:33 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Feb 2012 17:02:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24404 -
	spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading
Message-ID: <20120227170233.538952B8027@mx2.tudelft.nl>

Author: LennartKats
Date: Mon Feb 27 17:02:33 2012
New Revision: 24404
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24404&sc=1

Log:
restored the DynamicDescriptorLoader.isSignificantChangeDeep() check to avoid needless "Loading editor descriptors" jobs

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Mon Feb 27 16:47:54 2012	(r24403)
+++ spoofax-imp/trunk/org.strategoxt.imp.metatooling/src/org/strategoxt/imp/metatooling/loading/DynamicDescriptorLoader.java	Mon Feb 27 17:02:33 2012	(r24404)
@@ -99,7 +99,7 @@
 	}
 
 	public void resourceChanged(final IResourceChangeEvent event) {
-		if (event.getType() == IResourceChangeEvent.POST_CHANGE) {
+		if (event.getType() == IResourceChangeEvent.POST_CHANGE  && isSignificantChangeDeep(event.getDelta())) {
 			synchronized (asyncEventQueue) {
 				asyncEventQueue.add(event);
 				if (!isAsyncEventHandlerActive)
@@ -156,6 +156,20 @@
 		}
 	}
 
+	private static boolean isSignificantChangeDeep(IResourceDelta delta) {
+		class IsSignificantVisitor implements IResourceDeltaVisitor {
+			boolean result;
+			public boolean visit(IResourceDelta delta) throws CoreException {
+				if (FileNotificationServer.isSignificantChange(delta) && isSignificantName(delta.getResource().getName())) {
+					result = true;
+				}
+				return true;
+			}
+		}
+		IsSignificantVisitor visitor = new IsSignificantVisitor();
+		return visitor.result;
+	}
+
 	private static boolean isSignificantName(String name) {
 		return name.endsWith(".packed.esv") || name.endsWith(".tbl");
 	}

From L.C.L.Kats at tudelft.nl  Mon Feb 27 18:02:33 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Feb 2012 17:02:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24405 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120227170233.8FD94108C025@mx3.tudelft.nl>

Author: LennartKats
Date: Mon Feb 27 17:02:33 2012
New Revision: 24405
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24405&sc=1

Log:
new assertions for cycles in SemanticIndexEntry linked list

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Mon Feb 27 17:02:33 2012	(r24404)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Mon Feb 27 17:02:33 2012	(r24405)
@@ -10,7 +10,6 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.Map.Entry;
 
 import org.spoofax.interpreter.library.IOAgent;
 import org.spoofax.interpreter.terms.IStrategoAppl;
@@ -90,20 +89,6 @@
 		add(entry, getEntryParentAbove(entry.getNamespace(), entry.getId(), true));
 	}
 	
-	private SemanticIndexEntry getReferenceInChain(SemanticIndexEntry entry) {
-		if(entry == null)
-			return null;
-		
-		for(Entry<SemanticIndexEntry, SemanticIndexEntry> e : table.entrySet()) {
-			if(entry == e.getKey().getNext())
-				return e.getKey();
-			if(entry == e.getValue().getNext())
-				return e.getValue();
-		}
-		
-		return null;
-	}
-	
 	private void add(SemanticIndexEntry entry, SemanticIndexEntryParent parent) {
 		if (parent != null)
 			parent.add(entry);
@@ -114,7 +99,7 @@
 				entry.getFile().addEntry(entry);
 		} else {
 			assert !entry.isParent() && existing != entry;
-			assert getReferenceInChain(existing.getLast()) == null;
+			assert !existing.isReferenceInTail(entry);
 			existing.getLast().setNext(entry);
 			if (entry.getFile() != null)
 				entry.getFile().addEntry(entry);
@@ -136,8 +121,8 @@
 			if (entry.getNext() != null)
 				table.put(entry.getNext(), entry.getNext());
 		} else {
-			assert getReferenceInChain(head) == null;
 			head.setNext(entry.getNext());
+			assert !head.isReferenceInTail(entry);
 		}
 		
 		// Remove from parent

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java	Mon Feb 27 17:02:33 2012	(r24404)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java	Mon Feb 27 17:02:33 2012	(r24405)
@@ -96,6 +96,13 @@
 		this.next = next;
 	}
 	
+	boolean isReferenceInTail(SemanticIndexEntry entry) {
+		for (SemanticIndexEntry tail = this; tail != null; tail = entry.getNext()) {
+			if (entry == tail) return true;
+		}
+		return false;
+	}
+	
 	/**
 	 * Reinitialize this template. Used for maintaining a reusable lookup object
 	 * in the index.

From L.C.L.Kats at tudelft.nl  Mon Feb 27 18:15:29 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Feb 2012 17:15:29 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24406 - in
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
	dynamicloading services stratego
Message-ID: <20120227171529.953412B8031@mx2.tudelft.nl>

Author: LennartKats
Date: Mon Feb 27 17:15:29 2012
New Revision: 24406
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24406&sc=1

Log:
trigger "on save" handler on file system changes

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/IOnSaveService.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/RefactoringFactory.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisPrimitive.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/IOnSaveService.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/IOnSaveService.java	Mon Feb 27 17:02:33 2012	(r24405)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/IOnSaveService.java	Mon Feb 27 17:15:29 2012	(r24406)
@@ -2,6 +2,7 @@
 
 import org.eclipse.imp.language.ILanguageService;
 import org.eclipse.jface.text.IDocumentListener;
+import org.spoofax.interpreter.terms.IStrategoTerm;
 import org.strategoxt.imp.runtime.EditorState;
 
 /**
@@ -10,4 +11,6 @@
 public interface IOnSaveService extends IDocumentListener, ILanguageService {
 	
 	 void initialize(EditorState editor);
+	 
+	 void invokeOnSave(IStrategoTerm ast);
 }

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/RefactoringFactory.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/RefactoringFactory.java	Mon Feb 27 17:02:33 2012	(r24405)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/RefactoringFactory.java	Mon Feb 27 17:15:29 2012	(r24406)
@@ -105,7 +105,7 @@
 	private static void queueAnalysisAffectedFiles(IRefactoring refactoring, EditorState editor) {		
 		IProject project = editor.getProject().getRawProject();
 		for (IPath projectRelativePath : refactoring.getRelativePathsOfAffectedFiles()) {
-			StrategoAnalysisQueueFactory.getInstance().queueAnalysis(projectRelativePath, project);			
+			StrategoAnalysisQueueFactory.getInstance().queueAnalysis(projectRelativePath, project, true);			
 		}
 	}
 

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	Mon Feb 27 17:02:33 2012	(r24405)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	Mon Feb 27 17:15:29 2012	(r24406)
@@ -53,11 +53,15 @@
 		if (function == null) return;
 		
 		//String contents = event.getDocument().get();
-		
+
+		IStrategoTerm ast = editor.getCurrentAst();
+		invokeOnSave(ast);
+	}
+
+	public void invokeOnSave(IStrategoTerm ast) {
 		try {
 			Environment.getStrategoLock().lock();
 			try {
-				IStrategoTerm ast = editor.getCurrentAst();
 				if (ast == null) return;
 				
 				IStrategoTerm result = runtime.invokeSilent(function, ast);
@@ -88,7 +92,7 @@
 						Environment.logException("Problem when handling on save event", e);
 					}
 				} else if (!"None".equals(cons(result))) {
-					if (editor.getDescriptor().isDynamicallyLoaded())
+					if (editor != null && editor.getDescriptor().isDynamicallyLoaded())
 						Environment.logWarning("Unexpected result from 'on save' strategy: should be None() or (\"filename\", \"contents\"): " + result);
 				}
 			} finally {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	Mon Feb 27 17:02:33 2012	(r24405)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoAnalysisQueue.java	Mon Feb 27 17:15:29 2012	(r24406)
@@ -203,15 +203,16 @@
 	 * Queue background analysis for a given file.
 	 * @param path the file's path
 	 * @param project the file's project
+	 * @param triggerOnSave whether to trigger an "on save" event
 	 * @return the update job
 	 */
-	public UpdateJob queueAnalysis(IPath path, IProject project) {
+	public UpdateJob queueAnalysis(IPath path, IProject project, boolean triggerOnSave) {
 		if (path == null)
 			throw new IllegalArgumentException("path cannot be null");
 		if (project == null)
 			throw new IllegalArgumentException("project cannot be null");
 
-		StrategoObserverBackgroundUpdateJob job = new StrategoObserverBackgroundUpdateJob(path, project);
+		StrategoObserverBackgroundUpdateJob job = new StrategoObserverBackgroundUpdateJob(path, project, triggerOnSave);
 		
 		// See if an update is already pending for this path
 		IPath absolutePath = project.getLocation().append(path);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Mon Feb 27 17:02:33 2012	(r24405)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoObserverBackgroundUpdateJob.java	Mon Feb 27 17:15:29 2012	(r24406)
@@ -26,6 +26,7 @@
 import org.strategoxt.imp.runtime.dynamicloading.BadDescriptorException;
 import org.strategoxt.imp.runtime.dynamicloading.Descriptor;
 import org.strategoxt.imp.runtime.dynamicloading.DynamicParseController;
+import org.strategoxt.imp.runtime.dynamicloading.IOnSaveService;
 import org.strategoxt.imp.runtime.parser.SGLRParseController;
 import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
 import org.strategoxt.imp.runtime.stratego.SourceAttachment;
@@ -34,13 +35,15 @@
 
 	private final IPath path;
 	private final IProject project;
+	private final boolean triggerOnSave;
 	private StrategoProgressMonitor progress;
 	private StrategoObserver observer;
 	private SGLRParseController parseController;
 	
-	public StrategoObserverBackgroundUpdateJob(IPath path, IProject project) {
+	public StrategoObserverBackgroundUpdateJob(IPath path, IProject project, boolean triggerOnSave) {
 		this.path = path;
 		this.project = project;
+		this.triggerOnSave = true;
 	}
 	
 	public IStatus analyze(IProgressMonitor monitor) {
@@ -62,6 +65,7 @@
 			// Get parse controller
 			parseController = asSGLRParseController(descriptor.createParseController());
 			observer = descriptor.createService(StrategoObserver.class, parseController);
+			IOnSaveService onSave = descriptor.createService(IOnSaveService.class, parseController);
 			
 			observer.getLock().lock();
 			try {
@@ -84,6 +88,8 @@
 			    }
 				
 			    observer.update(parseController, monitor);
+			    if (triggerOnSave)
+			    	onSave.invokeOnSave(ast);
 			} finally {
 				observer.getLock().unlock();
 			}

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Mon Feb 27 17:02:33 2012	(r24405)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/FileNotificationServer.java	Mon Feb 27 17:15:29 2012	(r24406)
@@ -92,7 +92,8 @@
 		if (path.segmentCount() > 1) {
 			String base = path.segment(0);
 			if (".cache".equals(base) || ".shadowdir".equals(base)
-					|| "include".equals(base) || "bin".equals(base))
+					|| "include".equals(base) || "bin".equals(base)
+					|| ".spxcache".equals(base))
 				return true;
 		}
 		return false;

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisPrimitive.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisPrimitive.java	Mon Feb 27 17:02:33 2012	(r24405)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisPrimitive.java	Mon Feb 27 17:15:29 2012	(r24406)
@@ -79,7 +79,7 @@
 		
 		// Make path project local
 		IPath projectRelativePath = filePath.removeFirstSegments(filePath.matchingFirstSegments(projectPath)); 
-		StrategoAnalysisQueueFactory.getInstance().queueAnalysis(projectRelativePath, project);
+		StrategoAnalysisQueueFactory.getInstance().queueAnalysis(projectRelativePath, project, false);
 		
 	}
 	

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java	Mon Feb 27 17:02:33 2012	(r24405)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/QueueAnalysisService.java	Mon Feb 27 17:15:29 2012	(r24406)
@@ -34,7 +34,7 @@
 			if (LanguageRegistry.findLanguage(path, null) != null) {
 				IPath relPath = path.removeFirstSegments(path.matchingFirstSegments(project.getLocation()));
 				assert !relPath.isAbsolute();
-				StrategoAnalysisQueueFactory.getInstance().queueAnalysis(relPath, project);
+				StrategoAnalysisQueueFactory.getInstance().queueAnalysis(relPath, project, true);
 			}
 		} catch (FileNotFoundException e) {
 			Environment.logException("Background language service failed", e);

From L.C.L.Kats at tudelft.nl  Mon Feb 27 19:25:58 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Feb 2012 18:25:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24407 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120227182558.C571ACC060@mx4.tudelft.nl>

Author: LennartKats
Date: Mon Feb 27 18:25:58 2012
New Revision: 24407
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24407&sc=1

Log:
fixed bug in sanity check

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java	Mon Feb 27 17:15:29 2012	(r24406)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndexEntry.java	Mon Feb 27 18:25:58 2012	(r24407)
@@ -97,12 +97,11 @@
 	}
 	
 	boolean isReferenceInTail(SemanticIndexEntry entry) {
-		for (SemanticIndexEntry tail = this; tail != null; tail = entry.getNext()) {
+		for (SemanticIndexEntry tail = this; tail != null; tail = tail.getNext()) {
 			if (entry == tail) return true;
 		}
 		return false;
 	}
-	
 	/**
 	 * Reinitialize this template. Used for maintaining a reusable lookup object
 	 * in the index.

From L.C.L.Kats at tudelft.nl  Mon Feb 27 19:49:18 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Mon, 27 Feb 2012 18:49:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24408 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language
Message-ID: <20120227184918.EECFC7F803F@mx1.tudelft.nl>

Author: LennartKats
Date: Mon Feb 27 18:49:17 2012
New Revision: 24408
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24408&sc=1

Log:
don't remove too many entries in SemanticIndexEntry.remove()

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Mon Feb 27 18:25:58 2012	(r24407)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.language/src/org/spoofax/interpreter/library/language/SemanticIndex.java	Mon Feb 27 18:49:17 2012	(r24408)
@@ -113,16 +113,22 @@
 	 */
 	public void remove(SemanticIndexEntry entry) {
 		// Remove from table
-		SemanticIndexEntry head = table.get(entry);
-		if (head == null) {
+		SemanticIndexEntry existing = table.get(entry);
+		if (existing == null) {
 		    return;
-		} else if (head == entry) {
+		} else if (existing == entry) {
 			table.remove(entry);
 			if (entry.getNext() != null)
 				table.put(entry.getNext(), entry.getNext());
 		} else {
-			head.setNext(entry.getNext());
-			assert !head.isReferenceInTail(entry);
+			while (existing != null && existing.getNext() != entry)
+				existing = existing.getNext();
+			if (existing == null) {
+				assert false;
+				return;
+			}
+			existing.setNext(entry.getNext());
+			assert !existing.isReferenceInTail(entry);
 		}
 		
 		// Remove from parent

From dgroenewegen at gmail.com  Tue Feb 28 12:09:58 2012
From: dgroenewegen at gmail.com (Danny Groenewegen)
Date: Tue, 28 Feb 2012 11:09:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24409 - hydra/webdsl
Message-ID: <20120228110958.DB096CC11C@mx4.tudelft.nl>

Author: dgroenewegen
Date: Tue Feb 28 11:09:58 2012
New Revision: 24409
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24409&sc=1

Log:
use new option for building webdsl plugin from compiler install dir

Modified:
   hydra/webdsl/editor.nix

Modified: hydra/webdsl/editor.nix
==============================================================================
--- hydra/webdsl/editor.nix	Mon Feb 27 18:49:17 2012	(r24408)
+++ hydra/webdsl/editor.nix	Tue Feb 28 11:09:58 2012	(r24409)
@@ -21,14 +21,7 @@
       updatesites = [ "http://www.lclnet.nl/update/unstable" "http://download.eclipse.org/releases/helios/"];
       installIUs = ["org.strategoxt.imp.feature.group" "org.eclipse.jst.server_adapters.ext.feature.feature.group" "org.eclipse.jst.enterprise_ui.feature.feature.group"];
       preConfigure = ''
-        cat > webdsl.editor/import.webdsl.properties <<EOF
-        webdsl.home=${webdslJava}/share
-        acoda.home=${user.home}/StructureEvolution
-
-        externaldef=${webdslJava}/share/sdf/webdsl/WebDSL.def
-        externaljar=${webdslJava}/bin/webdsl.jar
-        webdsl.projectdir=${webdsl.home}/org/webdsl/dsl/project
-        EOF
+        sed s/@@webdsl@@/${webdslJava}/ webdsl.editor/import.webdsl.from-install-dir.properties > webdsl.editor/import.webdsl.properties
       '';
     };
 

From gabrielkonat at gmail.com  Tue Feb 28 13:33:16 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 28 Feb 2012 12:33:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24410 - in
	spoofax-contrib/separate-compilation-examples/entity-with-aspects:
	editor syntax trans
Message-ID: <20120228123316.91BFB108C029@mx3.tudelft.nl>

Author: gkonat
Date: Tue Feb 28 12:33:15 2012
New Revision: 24410
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24410&sc=1

Log:
Added print statements to test generation.
Added int and string primitives to entity-with-aspects.
Improved pretty print table.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.pp
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Tue Feb 28 11:09:58 2012	(r24409)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.esv	Tue Feb 28 12:33:15 2012	(r24410)
@@ -1,4 +1,3 @@
-
 module EntityWithAspects-Builders
 
 imports EntityWithAspects-Builders.generated
@@ -21,7 +20,7 @@
   builder  : "Show index entries for current file" = index-currentfile (openeditor) (realtime) (meta) (source)   
   builder  : "Show index entries for all files" = index-allfiles (openeditor) (realtime) (meta) (source)
   builder  : "Clear index" = index-cleanall (meta) (source)
-  builder  : "Generate test file" = generate-test-file (openeditor) (meta)                                                                                                    
+  builder  : "Generate test files" = generate-test-files (meta)                                                                                                    
 
 refactorings
                                                                                                                         

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.pp
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.pp	Tue Feb 28 11:09:58 2012	(r24409)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.pp	Tue Feb 28 12:33:15 2012	(r24410)
@@ -1,8 +1,8 @@
 %% Pretty printing table (see also EntityWithAspects.generated.pp)
 [
-   Module                   -- V[H[KW["module"] _1] _2],
+   Module                   -- V vs=1[H[KW["module"] _1] _2],
    Module.2:iter-star       -- _1,
-   Entity                   -- V is=2[H[KW["entity"] _1 KW["{"]] _2] KW["}"],
+   Entity                   -- V vs=1[V is=2[H[KW["entity"] _1 KW["{"]] _2] KW["}"]],
    Entity.2:iter-star       -- _1,
    Import                   -- H[KW["import"] _1],
    WildcardImport           -- H hs=0[_1 KW["."] KW["*"]],
@@ -32,6 +32,8 @@
    Call.2:iter-star-sep     -- H hs=0[_1 KW[", "]],
    Var                      -- _1,
    PropAccess               -- H hs=0[_1 KW["."] _2],
+   StringLit                -- _1,
+   IntLit                   -- _1,
    Type                     -- _1,
    StringType               -- KW["String"],
    IntType                  -- KW["Int"]

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx	Tue Feb 28 11:09:58 2012	(r24409)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/SPX.spx	Tue Feb 28 12:33:15 2012	(r24410)
@@ -40,6 +40,8 @@
     Function at ID "(" {Exp ","}* ")"  -> Exp {"Call"}
     Var at ID                          -> Exp {"Var"}
     Exp "." Property at ID             -> Exp {"PropAccess"}
+    STRING                          -> Exp {"StringLit"}
+    INT                             -> Exp {"IntLit"}
     
     %% Types
     Type at ID   -> Type {"Type"}

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Tue Feb 28 11:09:58 2012	(r24409)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Tue Feb 28 12:33:15 2012	(r24410)
@@ -43,14 +43,12 @@
       filename := <guarantee-extension(|"analyzed.aterm")> path;
       result   := <analyze-top> (selected, path, project-path)
       
-  generate-test-file:
+  generate-test-files:
     (selected, position, ast, path, project-path) -> None()
     with
       language  := <index-origin-language> ast;
       index-setup(|language, [project-path], $[[path]/[project-path]]);
-      index-clear;
-      <testgen> (selected, position, ast, path, project-path);
-      index-clear
+      <testgen> (selected, position, ast, path, project-path)
       
   // Prints the entries in the index of the current file.
   index-currentfile:

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str	Tue Feb 28 11:09:58 2012	(r24409)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str	Tue Feb 28 12:33:15 2012	(r24410)
@@ -33,6 +33,7 @@
 rules // Random primitives
   
   random-int(|min, max) = <int> <add> (<add> (<mul> (<subt> (max, <inc> min), <divr> (<abs> <next-random>, 1073741823)), min), 0.5)
+  random-string = new; double-quote
   random-identifier = new; string-replace(|"_", "")
   
 rules // Random elements
@@ -84,8 +85,10 @@
   testgen:
   	(selected, position, ast, path, project-path) -> None()
   	with
+  	  index-clear; // Clear index so definitions from the index are not chosen for code generation.
   		files := <map(\n -> $[[project-path]/testgen/test_[n].ewa]\)> <range> <testgen-num-files>;
-  		<map(testgen-file)> files
+  		<map(testgen-file)> files;
+  		index-clear  // Clean index to avoid duplicate definitions created during code generation.
   
   testgen-file:
   	file -> None()
@@ -121,5 +124,10 @@
     with
       name := <random-identifier>;
       params := [];
-      statement := Block([]);
-      function := Function(name, params, statement)
\ No newline at end of file
+      statement := Block(<testgen-random-apply(testgen-statement|0, 5)>);
+      function := Function(name, params, statement)
+      
+  testgen-statement:
+    _ -> statement
+    with
+      statement := Print(StringLit(<random-string>))      
\ No newline at end of file

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Tue Feb 28 11:09:58 2012	(r24409)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate.str	Tue Feb 28 12:33:15 2012	(r24410)
@@ -137,8 +137,8 @@
     	ADVICE(beforeafter, params, pointcut, statement) -> (beforeafter, type, statement')
     	with 
   		  Pointcut(_, types) := <index-get> Pointcut(<index-uri> pointcut, ());
-  		  type := <get-first> types;
-        Param(paramName, _) := <get-first> params;
+  		  [type|_] := types;
+        [Param(paramName, _)|_] := params;
         var := Var(paramName);
         statement' := <try(sometd(to-java-aspect-replace-var(|var, exp)))> statement
         
@@ -170,6 +170,12 @@
       PropAccess(exp, name) -> $[[<to-java> exp].[name]]
     to-java: 
       Call(name, args) -> $[[name]([<map(to-java)> args])]
+      
+    // Literals
+    to-java:
+      StringLit(str) -> str
+    to-java:
+      IntLit(int) -> int
     
     // Types
     to-java: 

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Tue Feb 28 11:09:58 2012	(r24409)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Tue Feb 28 12:33:15 2012	(r24410)
@@ -37,6 +37,12 @@
   	
   type-of:
   	IntType() -> TYPE("Int")
+  	
+  type-of:
+    StringLit(_) -> <type-of> StringType()
+    
+  type-of:
+    IntLit(_) -> <type-of> IntType()
   
   type-of:
     Var(v) -> <type-of> <index-lookup> v

From gabrielkonat at gmail.com  Tue Feb 28 13:39:43 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 28 Feb 2012 12:39:43 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24411 - in
	spoofax-contrib/separate-compilation-examples:
	c-without-macros/syntax c-without-macros/trans
	csharp-partial-classses/syntax csharp-partial-classses/trans
	entit...
Message-ID: <20120228123943.D1DC5108C02D@mx3.tudelft.nl>

Author: gkonat
Date: Tue Feb 28 12:39:43 2012
New Revision: 24411
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24411&sc=1

Log:
Remove and ignore generated files.

Deleted:
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.generated.pp
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/C-without-macros.sdf
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.generated.pp
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/CSharpPartialClassses.sdf
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-generated.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Builders.generated.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Colorer.generated.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Completions.generated.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Folding.generated.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Outliner.generated.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-References.generated.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/EntityWithAspects-Syntax.generated.esv
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.generated.pp
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/EntityWithAspects.sdf
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-generated.str
Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/syntax/   (props changed)
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/   (props changed)
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/syntax/   (props changed)
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/   (props changed)
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/editor/   (props changed)
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/syntax/   (props changed)
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/   (props changed)

From tobivollebregt at gmail.com  Tue Feb 28 14:12:40 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 28 Feb 2012 13:12:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24413 - in
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src:
	main/java/org/spoofax/interpreter/library/xml
	main/stratego/spoofax/bindings/xml test/stratego/sp...
Message-ID: <20120228131240.6BCB9CC12F@mx4.tudelft.nl>

Author: tvo
Date: Tue Feb 28 13:12:40 2012
New Revision: 24413
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24413&sc=1

Log:
xml library: Wrap namespace names in Some() cons, fix namespace-aware test

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/main/java/org/spoofax/interpreter/library/xml/StrategoTermBuilder.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/main/stratego/spoofax/bindings/xml/sax.str
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/test/stratego/spoofax/bindings/xml/sax-tests.str

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/main/java/org/spoofax/interpreter/library/xml/StrategoTermBuilder.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/main/java/org/spoofax/interpreter/library/xml/StrategoTermBuilder.java	Tue Feb 28 12:44:06 2012	(r24412)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/main/java/org/spoofax/interpreter/library/xml/StrategoTermBuilder.java	Tue Feb 28 13:12:40 2012	(r24413)
@@ -25,7 +25,7 @@
  *  Element   : Name * List(Attribute) * List(Element) -> Element
  *  Attribute : Name * String -> Attribute
  *  Text      : String -> Element
- *  Name     : String * String
+ *  Name      : Option(String) * String
  *
  * If the parser is not namespace aware, then it has this structure:
  *
@@ -73,6 +73,8 @@
 
 	private final IStrategoConstructor noneCons;
 
+	private final IStrategoConstructor someCons;
+
 	private final ITermFactory factory;
 
 	private final Stack<Element> stack = new Stack<Element>();
@@ -95,6 +97,7 @@
 		textCons = factory.makeConstructor("Text", 1);
 		nameCons = factory.makeConstructor("Name", 2);
 		noneCons = factory.makeConstructor("None", 0);
+		someCons = factory.makeConstructor("Some", 1);
 
 		allowMixedContent = library.getAllowMixedContent();
 		allowTextContent = library.getAllowCharacterContent();
@@ -131,7 +134,7 @@
 	{
 		if (namespaceAware) {
 			boolean uriIsEmpty = uri.length() == 0;
-			IStrategoTerm uriTerm = uriIsEmpty ? factory.makeAppl(noneCons) : factory.makeString(uri);
+			IStrategoTerm uriTerm = uriIsEmpty ? factory.makeAppl(noneCons) : factory.makeAppl(someCons, factory.makeString(uri));
 			IStrategoTerm localNameTerm = factory.makeString(uriIsEmpty ? qName : localName);
 			return factory.makeAppl(nameCons, uriTerm, localNameTerm);
 		}

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/main/stratego/spoofax/bindings/xml/sax.str
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/main/stratego/spoofax/bindings/xml/sax.str	Tue Feb 28 12:44:06 2012	(r24412)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/main/stratego/spoofax/bindings/xml/sax.str	Tue Feb 28 13:12:40 2012	(r24413)
@@ -10,10 +10,10 @@
 // namespace aware
 signature
   constructors
-    Element   : QName * List(Attribute) * List(Element) -> Element
-    Attribute : QName * String -> Attribute
+    Element   : Name * List(Attribute) * List(Element) -> Element
+    Attribute : Name * String -> Attribute
     Text      : String -> Element
-    QName     : String * String -> QName
+    Name      : Option(String) * String -> Name
 
 // not namespace aware 
 signature

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/test/stratego/spoofax/bindings/xml/sax-tests.str
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/test/stratego/spoofax/bindings/xml/sax-tests.str	Tue Feb 28 12:44:06 2012	(r24412)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/src/test/stratego/spoofax/bindings/xml/sax-tests.str	Tue Feb 28 13:12:40 2012	(r24413)
@@ -147,7 +147,7 @@
       !"namespace test 1"
     , with-namespaces(xml-parse-string)
     , !"<x xmlns:edi='http://ecommerce.example.org/schema'><edi:foo/></x>"
-    , !Element(QName(None(), "x"), [], [Element(QName("http://ecommerce.example.org/schema", "foo"), [], [])])
+    , !Element(Name(None(), "x"), [], [Element(Name(Some("http://ecommerce.example.org/schema"), "foo"), [], [])])
     )
 
   parse-error-tests =

From gabrielkonat at gmail.com  Tue Feb 28 15:35:00 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 28 Feb 2012 14:35:00 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24416 -
	spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans
Message-ID: <20120228143500.313342B8020@mx2.tudelft.nl>

Author: gkonat
Date: Tue Feb 28 14:34:59 2012
New Revision: 24416
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24416&sc=1

Log:
Added expression and aspects to test file generation.

Modified:
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str	Tue Feb 28 13:26:45 2012	(r24415)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/generate-test.str	Tue Feb 28 14:34:59 2012	(r24416)
@@ -19,10 +19,10 @@
   testgen-internal-file = !"/.internal/testgen"
   testgen-module-name = !"TestGen"
   
-  testgen-num-files = !10
+  testgen-num-files = !5
   
   testgen-min-entities = !1
-  testgen-max-entities = !10
+  testgen-max-entities = !5
   
   testgen-min-properties = !1
   testgen-max-properties = !5
@@ -30,6 +30,15 @@
   testgen-min-functions = !1
   testgen-max-functions = !3
   
+  testgen-min-statements = !1
+  testgen-max-statements = !5
+  
+  testgen-min-aspects = !1
+  testgen-max-aspects = !3
+  
+  testgen-min-pointcutadvices = !1
+  testgen-max-pointcutadvices = !3
+  
 rules // Random primitives
   
   random-int(|min, max) = <int> <add> (<add> (<mul> (<subt> (max, <inc> min), <divr> (<abs> <next-random>, 1073741823)), min), 0.5)
@@ -44,12 +53,16 @@
       primtypes := <primitive-types>;
       usertypes := <map(\Def([_, name|_]) -> name\)> <index-get-children(|Type(), "")> Def([Module(), <testgen-module-name>]); 
       types := <conc> (primtypes, usertypes);
-      type := <index> (<random-int(|1, <inc> <length> types)>, types)
+      type := <random-list-item> types
   
 rules // Random strategies
   
   testgen-apply(strat|num) = <range> num; map(strat)
-  testgen-random-apply(strat|min-rand, max-rand) = testgen-apply(strat|<random-int(|min-rand, max-rand)>)
+  random-apply(strat|min-rand, max-rand) = testgen-apply(strat|<random-int(|min-rand, max-rand)>)
+  random-list-item:
+    list -> item
+    where
+      item := <index> (<random-int(|1, <inc> <length> list)>, list)
   
 rules // Index manipulation
   
@@ -101,15 +114,16 @@
     _ -> mod
     with
       name := <testgen-module-name>;
-      entities := <testgen-random-apply(testgen-entity|<testgen-min-entities>, <testgen-max-entities>)>;
-      mod := Module(name, <conc> (entities, []))
+      entities := <random-apply(testgen-entity|<testgen-min-entities>, <testgen-max-entities>)>;
+      aspects := <random-apply(testgen-aspect|<testgen-min-aspects>, <testgen-max-aspects>)>;
+      mod := Module(name, <conc> (entities, aspects))
     
   testgen-entity:
     _ -> entity
     with
       name := <random-identifier>;
-      properties := <testgen-random-apply(testgen-property|<testgen-min-properties>, <testgen-max-properties>)>;
-      functions := <testgen-random-apply(testgen-function|<testgen-min-functions>, <testgen-max-functions>)>;
+      properties := <random-apply(testgen-property|<testgen-min-properties>, <testgen-max-properties>)>;
+      functions := <random-apply(testgen-function(|properties)|<testgen-min-functions>, <testgen-max-functions>)>;
       entity := Entity(name, <conc> (properties, functions))
       
   testgen-property:
@@ -119,15 +133,43 @@
       type := <random-type>;
       property := Property(name, type)
       
-  testgen-function:
+  testgen-function(|properties):
     _ -> function
     with
       name := <random-identifier>;
       params := [];
-      statement := Block(<testgen-random-apply(testgen-statement|0, 5)>);
+      statement := Block(<random-apply(testgen-statement(|properties)|<testgen-min-statements>, <testgen-max-statements>)>);
       function := Function(name, params, statement)
       
-  testgen-statement:
+  testgen-statement(|properties):
     _ -> statement
     with
-      statement := Print(StringLit(<random-string>))      
\ No newline at end of file
+        statement := Print(<testgen-expression(|properties)>)
+      <+
+        statement := Print(StringLit(<random-string>))
+        
+  testgen-expression(|properties):
+    _ -> expression
+    where
+      Property(name, type) := <random-list-item> <filter(?Property(_, t); not(<is-primitive-type> t))> properties;
+      def                  := Def([Type(), type, <testgen-module-name>]);
+      Def([_, prop|_])     := <random-list-item> <index-get-children(|Property(), "")> def;
+      expression           := PropAccess(Var(name), prop)
+
+  testgen-aspect:
+    _ -> aspect
+    with
+      name := <random-identifier>;
+      pointcutadvices := <concat> <random-apply(testgen-pointcutadvice|<testgen-min-pointcutadvices>, <testgen-max-pointcutadvices>)>;
+      aspect := Aspect(name, pointcutadvices)
+    	
+  testgen-pointcutadvice:
+  	_ -> [pointcut, advice]
+  	with
+  		pointcutName := <random-identifier>;
+  		adviceName := <random-identifier>;
+  		adviceParamName := <random-identifier>;
+  		type := <random-type>;
+  		pointcut := Pointcut(pointcutName, [Param(<random-identifier>, type)], Assigned(type));
+  		adviceType := <random-list-item> [Before(), After()];
+  		advice := Advice(adviceName, adviceType, [Param(adviceParamName, type)], pointcutName, [Var(adviceParamName)], Print(Var(adviceParamName)))

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Tue Feb 28 13:26:45 2012	(r24415)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/types.str	Tue Feb 28 14:34:59 2012	(r24416)
@@ -70,6 +70,11 @@
       
   primitive-types = 
     ![IntType(), StringType()]
+    
+  is-primitive-type = ?IntType()
+  is-primitive-type = ?StringType()
+  is-primitive-type = ?TYPE("String")
+  is-primitive-type = ?TYPE("Int")
       
   type-to-def:
     TYPE(t) -> Def([Type(), t])

From tobivollebregt at gmail.com  Tue Feb 28 16:02:22 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Tue, 28 Feb 2012 15:02:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24417 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml
Message-ID: <20120228150222.28D84CC112@mx4.tudelft.nl>

Author: tvo
Date: Tue Feb 28 15:02:21 2012
New Revision: 24417
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24417&sc=1

Log:
xml library: add ant target 'check' to run tests

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/build.ant.xml

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/build.ant.xml
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/build.ant.xml	Tue Feb 28 14:34:59 2012	(r24416)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/build.ant.xml	Tue Feb 28 15:02:21 2012	(r24417)
@@ -57,4 +57,16 @@
 		<copy todir="share/" file="${ctree-lib.target}" />
 	</target>
 	
+	<target name="check" depends="compile-str">
+		<junit printsummary="yes" showoutput="yes">
+			<!-- FIXME: ideally the classpath is read from MANIFEST.MF -->
+			<classpath>
+				<pathelement path="../org.spoofax.interpreter.core/bin" />
+				<pathelement path="../org.spoofax.terms/bin" />
+				<pathelement path="bin" />
+			</classpath>
+			<test name="org.spoofax.interpreter.library.xml.test.XMLLibraryTest" />
+		</junit>
+	</target>
+
 </project>

From gabrielkonat at gmail.com  Tue Feb 28 16:45:58 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Tue, 28 Feb 2012 15:45:58 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24418 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib
	spoofax-contrib/sepa...
Message-ID: <20120228154558.9CE99CC0E2@mx4.tudelft.nl>

Author: gkonat
Date: Tue Feb 28 15:45:57 2012
New Revision: 24418
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24418&sc=1

Log:
Fixed wrong project paths used in index-setup.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
   spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Tue Feb 28 15:02:21 2012	(r24417)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/c_without_macros.str	Tue Feb 28 15:45:57 2012	(r24418)
@@ -58,7 +58,7 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
       
@@ -67,7 +67,7 @@
     (node, position, ast, path, project-path) -> target
     where
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       def     := <index-lookup> node;
       target  := def
 
@@ -78,7 +78,7 @@
     where
       // FIXME: this only works for definition paths
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
       def-path'  := <take-until(?Anon(_))> def-path;

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str	Tue Feb 28 15:02:21 2012	(r24417)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/lib/editor-common.generated.str	Tue Feb 28 15:45:57 2012	(r24418)
@@ -129,6 +129,7 @@
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)
+  origin-file      = prim("SSL_EXT_origin_file", <id>)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
 

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Tue Feb 28 15:02:21 2012	(r24417)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/csharppartialclassses.str	Tue Feb 28 15:45:57 2012	(r24418)
@@ -54,7 +54,7 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
   
@@ -63,7 +63,7 @@
     (node, position, ast, path, project-path) -> target
     where
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       def     := <index-lookup> node;
       target  := def
 
@@ -74,7 +74,7 @@
     where
       // FIXME: this only works for definition paths
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
       def-path'  := <take-until(?Anon(_))> def-path;

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Tue Feb 28 15:02:21 2012	(r24417)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/entitywithaspects.str	Tue Feb 28 15:45:57 2012	(r24418)
@@ -22,6 +22,8 @@
   editor-analyze:
     (ast, path, project-path) -> (ast', errors, warnings, notes)
     with
+      <debug(!"Editor analyze: ")> $[[project-path]/[path]]
+    with
       editor-init;
       ast'      := <analyze-top>;
       errors    := <collect-all(constraint-error, conc)> ast';
@@ -47,7 +49,7 @@
     (selected, position, ast, path, project-path) -> None()
     with
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       <testgen> (selected, position, ast, path, project-path)
       
   // Prints the entries in the index of the current file.
@@ -62,7 +64,7 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
       result   := <map(\filename -> (filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
       
@@ -70,7 +72,7 @@
     (selected, position, ast, path, project-path)  -> None()
     with
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       index-clear
       
   // Resolves a reference when the user control-clicks or presses F3 in the editor.
@@ -78,7 +80,7 @@
     (node, position, ast, path, project-path) -> target
     where
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       def     := <index-lookup> node;
       target  := def
 
@@ -89,7 +91,7 @@
     where
       // FIXME: this only works for definition paths
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
       def-path'  := <take-until(?Anon(_))> def-path;
@@ -115,7 +117,9 @@
     Def([namespace, name | _]) -> name  
   
   commit-and-compile:
-    input -> input 
+    (_, _, _, path, project-path) -> <id>
+    with
+      <debug(!"Commit and compile: ")> $[[project-path]/[path]]
     with
       index-commit
     with

Modified: spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Tue Feb 28 15:02:21 2012	(r24417)
+++ spoofax-imp/trunk/experimental/NamingExperiment/trans/namingexperiment.str	Tue Feb 28 15:45:57 2012	(r24418)
@@ -80,7 +80,7 @@
     (selected, position, ast, path, project-path) -> (filename, result)
     with
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       filename := <guarantee-extension(|"index.currentfile.aterm")> path;
       result   := <map(\filename -> FileEntries(filename, <index-get-all-in-file> filename)\)> <index-get-all-files>
   
@@ -89,7 +89,7 @@
     (node, position, ast, path, project-path) -> target
     where
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       def     := <index-lookup> node;
       target  := def
 
@@ -100,7 +100,7 @@
     where
       // FIXME: this only works for definition paths
       language  := <index-origin-language> ast;
-      index-setup(|language, [project-path], $[[path]/[project-path]]);
+      index-setup(|language, [project-path], $[[project-path]/[path]]);
       def-term           := <nam-get-definition-key> target;
       _{[ns | def-path]} := def-term;
       def-path'  := <take-until(?Anon(_))> def-path;

From C.M.Melman at student.tudelft.nl  Tue Feb 28 13:44:06 2012
From: C.M.Melman at student.tudelft.nl (Chris Melman)
Date: Tue, 28 Feb 2012 12:44:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24412 - hydra/webdsl
Message-ID: <20120228124406.E15B2CC03F@mx4.tudelft.nl>

Author: ChrisMelman
Date: Tue Feb 28 12:44:06 2012
New Revision: 24412
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24412&sc=1

Log:
added me as maintainer of Yellowgrass

Modified:
   hydra/webdsl/tests.nix

Modified: hydra/webdsl/tests.nix
==============================================================================
--- hydra/webdsl/tests.nix	Tue Feb 28 12:39:43 2012	(r24411)
+++ hydra/webdsl/tests.nix	Tue Feb 28 12:44:06 2012	(r24412)
@@ -55,7 +55,7 @@
 {
   researchr   = { researchrSrc ? { outPath = ../../researchr; rev = 1234; } }     : build "researchr" researchrSrc [];
   webdslorg   = { webdslorgSrc ? { outPath = ../../webdslorg; rev = 1234; } }     : build "webdslorg" webdslorgSrc [];
-  yellowgrass = { yellowgrassSrc ? { outPath = ../../yellowgrass; rev = 1234; } } : build "yellowgrass" yellowgrassSrc ["s.d.vermolen at tudelft.nl"] ;
+  yellowgrass = { yellowgrassSrc ? { outPath = ../../yellowgrass; rev = 1234; } } : build "yellowgrass" yellowgrassSrc ["chrismelman at hotmail.com""s.d.vermolen at tudelft.nl"] ;
   feedback    = { feedbackSrc ? { outPath = ../../feedback; rev = 1234; } }       : build "feedback" feedbackSrc [];
 
   webcheck =

From C.M.Melman at student.tudelft.nl  Tue Feb 28 14:19:02 2012
From: C.M.Melman at student.tudelft.nl (Chris Melman)
Date: Tue, 28 Feb 2012 13:19:02 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24414 - hydra/webdsl
Message-ID: <20120228131902.66DA37F8009@mx1.tudelft.nl>

Author: ChrisMelman
Date: Tue Feb 28 13:19:01 2012
New Revision: 24414
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24414&sc=1

Log:
ook maintainer van feedback app

Modified:
   hydra/webdsl/tests.nix

Modified: hydra/webdsl/tests.nix
==============================================================================
--- hydra/webdsl/tests.nix	Tue Feb 28 13:12:40 2012	(r24413)
+++ hydra/webdsl/tests.nix	Tue Feb 28 13:19:01 2012	(r24414)
@@ -56,8 +56,7 @@
   researchr   = { researchrSrc ? { outPath = ../../researchr; rev = 1234; } }     : build "researchr" researchrSrc [];
   webdslorg   = { webdslorgSrc ? { outPath = ../../webdslorg; rev = 1234; } }     : build "webdslorg" webdslorgSrc [];
   yellowgrass = { yellowgrassSrc ? { outPath = ../../yellowgrass; rev = 1234; } } : build "yellowgrass" yellowgrassSrc ["chrismelman at hotmail.com""s.d.vermolen at tudelft.nl"] ;
-  feedback    = { feedbackSrc ? { outPath = ../../feedback; rev = 1234; } }       : build "feedback" feedbackSrc [];
-
+  feedback    = { feedbackSrc ? { outPath = ../../feedback; rev = 1234; } }       : build "evaluaties" feedbackSrc ["chrismelman at hotmail.com"];
   webcheck =
     { webdslSrc ? {outPath = ../../webdsl; rev = 1234;}
     }:

From oskarvanrest at gmail.com  Tue Feb 28 14:26:45 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Tue, 28 Feb 2012 13:26:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24415 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax: editor
	lib lib/xml trans trans/emf
Message-ID: <20120228132645.90AEC2B8017@mx2.tudelft.nl>

Author: OskarVanRest
Date: Tue Feb 28 13:26:45 2012
New Revision: 24415
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24415&sc=1

Log:
Added builders to generate EMF out of SDF syntax. Builders 'Show Ecore term' and 'Show Ecore term (XML)' are for testing purposes. Builder 'Generate Ecore' generates an actual Ecore model.

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Box.tbl   (contents, props changed)
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/ecore-signatures.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/namespacelib.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/xml/
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/xml/xml-doc.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/xml/xml-doc2abox.meta
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/xml/xml-doc2abox.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/ecore-to-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/map.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/namespaces.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/pp-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/projections.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/spx-to-ecore.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/editor-common.generated.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv	Tue Feb 28 13:19:01 2012	(r24414)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/editor/SpoofaxLang-Builders.esv	Tue Feb 28 13:26:45 2012	(r24415)
@@ -34,6 +34,10 @@
   
   builder : "Name Analysis (for selection)" = generate-name-analysis (openeditor) (realtime) (meta) (source)
   
+  builder : "Show Ecore term" = generate-ecore-stage1 (openeditor) (realtime) (meta) (source)
+  builder : "Show Ecore term (XML)" = generate-ecore-stage2 (openeditor) (realtime) (meta) (source)
+  builder : "Generate Ecore" = generate-ecore-stage3 (openeditor) (realtime) (meta)
+ 
 	  /*
   builder : "test-resolve" =
     test-resolving-symbol (openeditor) (realtime) (meta)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/Stratego-Box.tbl
==============================================================================
Binary file. No diff available.

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/ecore-signatures.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/ecore-signatures.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1,32 @@
+module lib/ecore-signatures
+
+signature
+  constructors
+    EInt        : Type
+    EString     : Type
+    UserDefined : ID -> Type
+    Name        : ID -> Name
+    LowerBound  : INT -> Property
+    UpperBound  : INT -> Property
+    EReference  : Name * Type * List(Property) -> EReference
+    EAttribute  : Name * Type * List(Property) -> EAttribute
+                : EReference -> EClassChild
+                : EAttribute -> EClassChild
+    EClass      : Name * List(EClassChild) -> EClass
+                : EClass -> EPackageChild
+    EPackage    : Name * List(EPackageChild) -> Start
+                : String -> INT
+                : String -> ID
+
+
+signature
+  constructors
+    Some : a -> Option(a)
+    None : Option(a)
+
+
+signature
+  constructors
+    Cons : a * List(a) -> List(a)
+    Nil  : List(a)
+    Conc : List(a) * List(a) -> List(a)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/editor-common.generated.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/editor-common.generated.str	Tue Feb 28 13:19:01 2012	(r24414)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/editor-common.generated.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -129,6 +129,7 @@
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)
+  origin-file      = prim("SSL_EXT_origin_file", <id>)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
 

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/namespacelib.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/namespacelib.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1,234 @@
+module lib/namespacelib
+
+imports
+	libstratego-gpp
+	libstratego-aterm
+
+rules
+
+	pp-aterm = pp-aterm-box ; box2text-string(|100)
+
+rules // scoped renaming
+
+	/**
+	* executes the renaming strategy s in a new scope
+	*
+	* declarations inside the new scope will hide existing declarations outside the new scope
+	* multiple declarations with the same name inside the new scope will be renamed to the same name
+	*
+	* @param renaming strategy s: a -> b
+	* @type a -> b
+	*/
+	new-scope(s) :
+		x -> y
+		where
+			<debug-namespace> $[Entering scope [<pp-aterm> x].]
+		where
+			<newname> x => scope ;
+			{| Renamed, RenamedInScope, CurrentScope:
+				rules (CurrentScope: _ -> scope) ;
+				<s> x => y
+			|}
+		where
+			<debug-namespace> $[Leaving scope [<pp-aterm> x].]
+
+	/**
+	* annotates the current term with a fresh name
+	* can distinguish different namespaces
+	* remembers the renaming by storing two dynamic rules
+	*
+	* multiple calls on the same term inside the same scope will give identical results
+	* calls inside a new scope will hide the results of calls to the same term from outer scopes
+	*
+	* @param namespace
+	* @type a -> a
+	*/
+	rename-declaration(|namespace) :
+		x -> x'
+		where
+			CurrentScope => scope ;
+			(
+				<RenamedInScope> (namespace, scope, x) => x' <+
+				x' := x{<newname> x}
+				//x' := <newname> x
+			)
+		where rules(
+			RenamedInScope: (namespace, scope, x) -> x'
+			Renamed: (namespace, x) -> x'
+		)
+		where
+			<debug-namespace> $[Renamed declaration [<pp-aterm> x] to [<pp-aterm> x'] in namespace [<pp-aterm> namespace].]
+
+	/**
+	* annotates the current term with a new name
+	* succeeds only if rename-declaration was called before on the same term
+	* will use the same name as rename-declaration (by calling the dynamic rule stored by rename-declaration)
+	*
+	* @param namespace
+	* @type a -> b
+	*/
+	rename-reference(|namespace) :
+		x -> x'
+		where
+			<Renamed> (namespace, x) => x'
+		where
+			<debug-namespace> $[Renamed reference [<pp-aterm> x] to [<pp-aterm> x'] in namespace [<pp-aterm> namespace].]
+
+rules // store declarations and references
+
+	new-analysis(s) = {| Declared, Referred: s |}
+
+	/**
+	* stores a mapping from a name to a declaration
+	* can distinguish different namespaces
+	* remembers the mapping by storing a dynamic rule
+	*
+	* @param namespace
+	* @type (a, b) -> b
+	*/
+	store-declaration(|namespace) :
+		(x, d) -> d
+		where rules(
+			Declared:+ (namespace, x) -> d
+		)
+		where
+			<debug-namespace> $[Stored declaration [<pp-aterm> x] -> [<pp-aterm> d] in namespace [<pp-aterm> namespace].]
+
+	/**
+	* stores the usage of a reference
+	* can distinguish different namespaces
+	* remembers the reference by storing a dynamic rule
+	*
+	* @param namespace
+	* @type a -> a
+	*/
+	store-reference(|namespace) :
+		x -> x
+		where rules (
+			Referred:+ (namespace, x) -> x
+		)
+		where
+			<debug-namespace> $[Stored reference [<pp-aterm> x] in namespace [<pp-aterm> namespace].]
+
+strategies // access declarations
+
+	/**
+	* maps a name to its declarations
+	* can distinguish different namespaces
+	* remembers the mapping by calling a dynamic rule
+	*
+	* @param namespace
+	*
+	* @type a -> List(b)
+	*/
+	get-declarations(|namespace) = !(namespace, <id>) ; bagof-Declared
+
+	/**
+	* succeeds if the current term can be mapped to a declaration
+	* can distinguish different namespaces
+	*
+	* @param namespace
+	*
+	* @type a -> a
+	*/
+	is-declared(|namespace) = get-declarations(|namespace) ; ?[_|_]
+
+	/**
+	* maps a name to its only declaration
+	* can distinguish different namespaces
+	*
+	* @param namespace
+	*/
+	get-unique-declaration(|namespace) = get-declarations(|namespace) ; ?[<id>]
+
+	/**
+	* maps a name to its first declaration
+	* can distinguish different namespaces
+	*
+	* @param namespace
+	*/
+	get-declaration(|namespace) = project-declaration(id|namespace)
+
+	/**
+	* maps a name to its first declaration for which strategy s holds
+	* can distinguish different namespaces
+	*
+	* @param s: b -> c
+	* @param namespace
+	*
+	* @type a -> b
+	*/
+	get-declaration(s|namespace) = project-declaration(where(s)|namespace)
+
+	/**
+	* maps a name to its declarations for which strategy s holds
+	* can distinguish different namespaces
+	*
+	* @param s: b -> c
+	* @param namespace
+	*
+	* @type a -> List(b)
+	*/
+	get-declarations(s|namespace) = project-declarations(where(s)|namespace)
+
+strategies // project declarations
+
+	/**
+	* maps a name to the first projection of its declarations
+	* can distinguish different namespaces
+	*
+	* @param s: b -> c
+	* @param namespace
+	*
+	* @type a -> c
+	*/
+	project-declaration(s|namespace) = get-declarations(|namespace) ; fetch-elem(s)
+
+	/**
+	* maps a name to the projections of its declarations
+	* can distinguish different namespaces
+	*
+	* @param s: b -> c
+	* @param namespace
+	*
+	* @type a -> List(c)
+	*/
+	project-declarations(s|namespace) = get-declarations(|namespace) ; filter(s)
+
+strategies // access all declarations
+
+	get-all-declarations(|namespace) = all-keys-Declared ; filter(?(namespace, _)); mapconcat(bagof-Declared)
+
+	get-all-declarations(s|namespace) = get-all-declarations(|namespace) ; filter(where(s))
+
+	project-all-declarations(s|namespace) = get-all-declarations(|namespace) ; filter(s)
+
+strategies // access references
+
+	get-references(|namespace) = !(namespace, <id>) ; bagof-Referred
+
+	is-referred(|namespace) = get-references(|namespace) ; ?[_|_]
+
+strategies
+
+	get-proposal-candidates(|namespace) = all-keys-Renamed ; filter(?(namespace, _) ; Renamed)
+
+	store-proposal-candidates(|namespace) = get-proposal-candidates(|namespace) ; store-proposals
+
+	store-proposals = ?x ; where (rules ( Propose : () -> x ))
+
+	get-proposals = ( <Propose> () ; map(rm-annotations) ) <+ ![]
+
+	get-proposals(s|namespace) =
+		(
+			<Propose> () ;
+			filter(where( get-declaration(s|namespace) )) ;
+			map(rm-annotations)
+		) <+ ![]
+
+strategies
+
+	enable-namespace-debugging  = rules(DebugNS: x -> x)
+	disable-namespace-debugging = rules(DebugNS:- _ )
+
+	debug-namespace = not(DebugNS) <+ debug

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/xml/xml-doc.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/xml/xml-doc.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1,75 @@
+module xml-doc
+
+signature
+  constructors
+                     : CharData -> Content
+                     : PI -> Content
+    Comment          : Comment -> Content
+                     : Element -> Content
+    Element          : QName * List(Attribute) * List(Content) * QName -> Element
+    EmptyElement     : QName * List(Attribute) -> Element
+    Document         : Prologue * Element * Epilogue -> Document
+                     : String -> FooSingleQuotedText
+                     : String -> FooDoubleQuotedText
+                     : Ref -> SingleQuotedPart
+    Literal          : FooSingleQuotedText -> SingleQuotedPart
+                     : Ref -> DoubleQuotedPart
+    Literal          : FooDoubleQuotedText -> DoubleQuotedPart
+    SingleQuoted     : List(SingleQuotedPart) -> AttValue
+    DoubleQuoted     : List(DoubleQuotedPart) -> AttValue
+    Attribute        : QName * AttValue -> Attribute
+                     : EntityRef -> Ref
+                     : CharRef -> Ref
+                     : HexCharRef -> CharRef
+                     : DecCharRef -> CharRef
+    EntityRef        : String -> EntityRef
+    HexCharRef       : String -> HexCharRef
+    DecCharRef       : String -> DecCharRef
+                     : String -> FooCharDataText
+    CDATASection     : String -> CharDataPart
+                     : Ref -> CharDataPart
+    Literal          : FooCharDataText -> CharDataPart
+    Text             : List(CharDataPart) -> CharData
+    DocTypeDecl      : QName * ExternalID -> DocTypeDecl
+    DocTypePrologue  : DocTypeDecl * List(Misc) -> DocTypePrologue
+    VersionSingle    : VersionNum -> VersionValue
+    Version          : VersionNum -> VersionValue
+    EncodingSingle   : EncodingName -> EncodingValue
+    Encoding         : EncodingName -> EncodingValue
+    StandaloneSingle : YesNo -> StandaloneValue
+    Standalone       : YesNo -> StandaloneValue
+    EncodingDecl     : EncodingValue -> EncodingDecl
+    VersionDecl      : VersionValue -> VersionInfo
+    StandaloneDecl   : StandaloneValue -> StandaloneDecl
+    XMLDecl          : VersionInfo * Option(EncodingDecl) * Option(StandaloneDecl) -> XMLDecl
+                     : PI -> Misc
+    Comment          : Comment -> Misc
+    Epilogue         : List(Misc) -> Epilogue
+    Prologue         : Option(XMLDecl) * List(Misc) * Option(DocTypePrologue) -> Prologue
+    PublicExternalID : PublicLit * SystemLit -> ExternalID
+    SystemExternalID : SystemLit -> ExternalID
+    PI               : PITarget * PIChars -> PI
+                     : String -> YesNo
+                     : String -> EncodingName
+                     : String -> VersionNum
+                     : String -> PublicLit
+                     : String -> SystemLit
+                     : String -> PIChars
+                     : String -> PITarget
+    Prefix           : NCName -> Qualifier
+    QName            : Option(Qualifier) * NCName -> QName
+                     : String -> NCName
+                     : String -> Comment
+
+
+signature
+  constructors
+    Some : a -> Option(a)
+    None : Option(a)
+
+
+signature
+  constructors
+    Cons : a * List(a) -> List(a)
+    Nil  : List(a)
+    Conc : List(a) * List(a) -> List(a)

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/xml/xml-doc2abox.meta
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/xml/xml-doc2abox.meta	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1 @@
+Meta([Syntax("Stratego-Box")])

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/xml/xml-doc2abox.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/lib/xml/xml-doc2abox.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1,131 @@
+module lib/xml/xml-doc2abox
+imports lib/xml/xml-doc libstratego-lib
+
+strategies
+
+  main-xml-doc2abox =
+    io-wrap(xml-doc2abox)
+
+  xml-doc2abox = 
+      topdown(try(repeat(xml-to-box)))
+
+rules
+
+  xml-to-box :
+    Document(pro, e, epi) -> box |[ V vs=1 [ ~pro ~e ~epi ] ]|
+
+  xml-to-box :
+    Prologue(xmldec, miscs, doctype) -> box |[ V vs=0 [ ~*lines ] ]|
+      where <concat> 
+              [ <get-prolog-lines> xmldec
+              , miscs
+              , <get-prolog-lines> doctype ] => lines
+
+      get-prolog-lines: Some(xmldec at XMLDecl(_, _, _)) -> [xmldec]
+      get-prolog-lines: None() -> []
+      get-prolog-lines: Some(DocTypePrologue(doctype, miscs)) -> [doctype | miscs]
+
+// XMLDecl(VersionDecl(Version("1.0")),Some(EncodingDecl(Encoding("UTF-8"))),Some(StandaloneDecl(Standalone("no")))
+
+  xml-to-box:
+    Epilogue(miscs) ->  box |[ V vs=1 [ ~*miscs ] ]|
+
+  xml-to-box:
+    XMLDecl(version, encoding, standalone) -> box |[ H hs=1 [KW["<?xml"] ~*atts KW["?>"]] ]|
+      where <filter(?Some(<id>))> [encoding, standalone] => atts1
+          ; <map(decl-to-attribute)> [version | atts1] => atts
+
+rules
+
+  decl-to-attribute :
+    StandaloneDecl(Standalone(value)) -> SimpleAttribute("standalone", value)
+
+  decl-to-attribute :
+    VersionDecl(Version(value)) -> SimpleAttribute("version", value)
+
+  decl-to-attribute :
+    EncodingDecl(Encoding(value)) -> SimpleAttribute("encoding", value)
+
+overlays
+
+  SimpleAttribute(name, value) =  Attribute(QName(None(), name), DoubleQuoted([Literal(value)]))
+
+rules
+
+  xml-to-box:
+    DocTypePrologue(doctype, miscs) -> box |[ V vs=1 [ ~*[doctype | miscs] ] ]|
+
+  xml-to-box:
+    DocTypeDecl(n, ext) -> box |[ H hs=1 [KW["<!DOCTYPE"] ~n ~ext KW[">"]] ]|
+  
+  xml-to-box:
+    SystemExternalID(n) -> box |[ H hs=1 [KW["SYSTEM"] ~lit:<double-quote> n] ]|
+
+  xml-to-box:
+    PublicExternalID(n1, n2) -> box |[ H hs=1 [KW["PUBLIC"] ~lit:<double-quote> n1 ~lit:<double-quote> n2 ] ]|
+
+  xml-to-box:
+    PI(n, data) -> box |[ H hs=1 [KW["<?"] ~lit:n ~lit:data KW["?>"]] ]|
+
+  xml-to-box: Comment(cdata)       -> box |[ C[ ~lit:cdata ] ]|
+  xml-to-box: Text(parts)          -> box |[ H hs=0 [~*parts ] ]|
+  xml-to-box: CDATASection(cdata)  -> box |[ H hs=0 [ "<![CDATA[" ~lit:cdata "]]>"] ]|
+  xml-to-box: EntityRef(ncname)    -> box |[ H hs=0 [ "&" ~lit:ncname ";"] ]|
+  xml-to-box: Literal(cdata)       -> box |[ ~lit:cdata ]|
+
+  xml-to-box =
+    simple-element-to-box <+ element-to-box
+
+  simple-element-to-box:
+    EmptyElement(qname, []) -> box |[ H hs=0 [KW["<"] ~qname KW["/>"]] ]|
+
+  element-to-box:
+    EmptyElement(qname, atts) -> box |[ H hs=0 [KW["<"] H hs=1 [~qname ~*atts ] KW["/>"]] ]|
+
+/*
+  simple-element-to-box:
+    Element(qname, atts, [Text(cdata)], _) -> box |[ H hs=0 [ ~open-tag ~lit:cdata  KW["</"] ~qname KW[">"]] ]|
+//      where <lt> (<string-length> cdata, 60)
+          where <open-tag-to-box> (qname, atts) => open-tag
+  */
+
+
+  // element-to-box:
+  //   Element(qname, atts, children, _) ->
+  //     box |[ H hs=0 [~open-tag  ~*children KW["</"] ~qname KW[">"]] ]|
+  //       where <open-tag-to-box> (qname, atts) => open-tag
+  //   
+  
+	element-to-box:
+    Element(qname, atts, children, _) ->
+      box |[ V vs=0 [
+        V is=2 vs=0 [
+          ~open-tag
+          ~*children
+        ]
+        H hs=0 [KW["</"] ~qname KW[">"]]
+      ] ]|
+    where <open-tag-to-box> (qname, atts) => open-tag
+
+        open-tag-to-box:
+          (qname, []) -> box |[ H hs=0 [KW["<"] ~qname KW[">"]] ]|
+      
+        open-tag-to-box:
+          (qname, atts) -> box |[ H hs=0 [KW["<"] H hs=1 [ ~qname ~*atts ] KW[">"]] ]|
+            where <gt> (<length> atts, 0)
+      
+  xml-to-box :
+    Attribute(qname, value) -> box |[ H hs=0 [~qname KW["="] ~value] ]|
+
+  xml-to-box :
+    DoubleQuoted(parts) -> box |[ H hs=0 ["\"" ~*parts "\""] ]|
+
+  xml-to-box :
+    SingleQuoted(parts) -> box |[ H hs=0 ["\'" ~*parts "\'"] ]|
+
+
+  xml-to-box:
+    QName(None(), n) -> box |[ KW[ ~lit:n ] ]|
+
+  xml-to-box:
+    QName(Some(Prefix(p)), n) -> box |[ H hs=0 [~lit:p KW[":"] ~lit:n] ]|

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/ecore-to-xml.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/ecore-to-xml.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1,84 @@
+module ecore-to-xml
+	
+imports
+	lib/ecore-signatures
+	lib/xml/xml-doc
+	
+strategies
+	ecore-to-xml = topdown(try(to-xml))
+		
+rules
+	to-xml:
+		EPackage(name, children) -> Document(prologue, element, epilogue)
+		where 
+			xMLDecl := XMLDecl(VersionDecl(Version("1.0")), Some(EncodingDecl(Encoding("UTF-8"))), None());
+			prologue := Prologue(Some(xMLDecl), [], None());
+	
+			qName := QName(Some(Prefix("ecore")), "EPackage");
+			attributes := [
+				Attribute((QName(Some(Prefix("xmi")), "version")), DoubleQuoted([Literal("2.0")])),
+				Attribute((QName(Some(Prefix("xmlns")), "xmi")), DoubleQuoted([Literal("http://www.omg.org/XMI")])),
+				Attribute((QName(Some(Prefix("xmlns")), "xsi")), DoubleQuoted([Literal("http://www.w3.org/2001/XMLSchema-instance")])),
+				Attribute((QName(Some(Prefix("xmlns")), "ecore")), DoubleQuoted([Literal("http://www.eclipse.org/emf/2002/Ecore")])),
+				Attribute((QName(Some(Prefix("xmi")), "id")), DoubleQuoted([Literal(<new>)])),
+				Attribute((QName(None(), "name")), DoubleQuoted([Literal(name)])),
+				Attribute((QName(None(), "nsURI")), DoubleQuoted([Literal("")]))			
+			];
+			element := Element(qName, attributes, children, None()); 
+					
+			epilogue := Epilogue([])		
+		
+	to-xml:
+		EClass(name, children) ->  Element(qName, attributes, children, None())
+		where
+			qName := QName(None(), "eClassifiers");
+			attributes := [
+				Attribute((QName(Some(Prefix("xsi")), "type")), DoubleQuoted([Literal("ecore:EClass")])),
+				Attribute((QName(Some(Prefix("xmi")), "id")), DoubleQuoted([Literal(name)])), //TODO generate unique id
+				Attribute((QName(None(), "name")), DoubleQuoted([Literal(name)]))
+			]
+	
+	to-xml:
+		EAttribute(name, type, []) -> Element(qName, attributes, children, None())
+		where
+			qName := QName(None(), "eStructuralFeatures");
+			attributes := [
+				Attribute((QName(Some(Prefix("xsi")), "type")), DoubleQuoted([Literal("ecore:EAttribute")])),
+				Attribute((QName(Some(Prefix("xmi")), "id")), DoubleQuoted([Literal(name)])), //TODO generate unique id
+				Attribute((QName(None(), "name")), DoubleQuoted([Literal(name)])),
+				Attribute((QName(None(), "eType")), DoubleQuoted([Literal(type)]))			
+			];
+			children := []
+	
+	to-xml:
+		EString() -> "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
+	to-xml:
+		EInt() -> "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
+
+//<eStructuralFeatures xsi:type="ecore:EReference" eType="#_iyLj0GGQEeGzQ5n6uCWZNw"/>
+ 
+	
+	to-xml:
+		EReference(name, UserDefined(type), properties) -> Element(qName, attributes, children, None())
+		where
+			qName := QName(None(), "eStructuralFeatures");
+			fixedAttributes := [
+				Attribute((QName(Some(Prefix("xsi")), "type")), DoubleQuoted([Literal("ecore:EReference")])),
+				Attribute((QName(Some(Prefix("xmi")), "id")), DoubleQuoted([Literal(name)])), //TODO generate unique id
+				Attribute((QName(None(), "name")), DoubleQuoted([Literal(name)])),				
+				Attribute((QName(None(), "eType")), DoubleQuoted([Literal(type)]))			
+			];
+			optionalAttributes := properties;
+			attributes := Conc(fixedAttributes, optionalAttributes);
+			children := []
+			
+			
+	to-xml:
+		LowerBound(value) -> Attribute((QName(None(), "lowerBound")), DoubleQuoted([Literal(value')]))
+		where
+			value' := <int-to-string> value
+		
+	to-xml:
+		UpperBound(value) -> Attribute((QName(None(), "upperBound")), DoubleQuoted([Literal(value')]))
+		where
+			value' := <int-to-string> value
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/main.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/main.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1,33 @@
+module emf/main
+
+imports
+	trans/emf/spx-to-ecore
+	trans/emf/ecore-to-xml
+	trans/emf/pp-xml
+	trans/emf/map
+
+rules
+	spx-to-xml-stage1 = map-all; spx-to-ecore
+	spx-to-xml-stage2 = map-all; spx-to-ecore; ecore-to-xml
+	spx-to-xml-stage3 = map-all; spx-to-ecore; ecore-to-xml; pp-xml
+
+
+      
+	generate-ecore-stage1:
+		(selected, position, ast, path, project-path) -> (filename, result)
+		with
+	      filename := <guarantee-extension(|"ecore.aterm")> path;
+	      result   := <spx-to-xml-stage1> ast
+
+	generate-ecore-stage2:
+	    (selected, position, ast, path, project-path) -> (filename, result)
+	    with
+	      filename := <guarantee-extension(|"xml.aterm")> path;
+	      result   := <spx-to-xml-stage2> ast
+ 
+	generate-ecore-stage3:
+	    (selected, position, ast, path, project-path) -> (filename, result)
+	    with
+	      filename := <guarantee-extension(|"ecore")> path;
+	      result   := <spx-to-xml-stage3> ast
+	      
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/map.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/map.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1,16 @@
+module emf/map
+
+imports
+	include/SpoofaxLang
+	trans/emf/namespaces
+	lib/namespacelib
+
+strategies
+	map-all = enable-namespace-debugging; alltd(map)
+	
+rules
+		
+	map:
+		p at prod(lhs, sort(x), attrs(attributes)) -> p
+		where 
+			<store-declaration(|Production())> (x, p)
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/namespaces.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/namespaces.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1,5 @@
+module emf/namespaces
+
+signature constructors
+
+	Production		: NameSpace
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/pp-xml.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/pp-xml.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1,8 @@
+module emf/pp-xml
+
+	imports
+		lib/xml/xml-doc2abox
+		libstratego-gpp
+	
+	strategies
+		pp-xml = xml-doc2abox; box2text-string(|100)
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/projections.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/projections.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1,11 @@
+module emf/projections
+
+imports
+	include/SpoofaxLang
+
+rules
+	get-constr:
+		prod(lhs, sort(x), attrs(attributes)) -> name
+		where
+			constructor := <getfirst(?Constructor(consName))> attributes;
+			name := <trim-chars(?'"')> consName
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/spx-to-ecore.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/spx-to-ecore.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -0,0 +1,73 @@
+module emf/spx-to-ecore
+	
+imports
+	include/SpoofaxLang
+	lib/ecore-signatures
+	lib/namespacelib
+	emf/namespaces
+	emf/projections
+	
+strategies
+	spx-to-ecore = topdown(try(to-ecore))
+		
+rules
+	to-ecore:
+		CompilationUnit(
+		  []
+		, [ Package(
+		      qName
+		    , modules
+		    )
+		  ]
+		)	-> EPackage(packageName, productions)
+	where
+		packageName := <to-ecore> qName;
+		productions := <collect-om(?prod(_, _, _))> modules
+	
+	
+	to-ecore:
+		QName(packageName) -> <rtrim-chars(?'.')> <concat-strings> <map(add-dot)> packageName
+	add-dot:
+		string -> <conc-strings> (string, ".")
+	
+	to-ecore:
+		prod(lhs, sort, attrs(attributes)) -> EClass(name, children)
+		where 
+			constructor := <getfirst(?Constructor(consName))> attributes;
+			name := <trim-chars(?'"')> consName;
+			children := <remove-all(?lit(_))> lhs
+
+	to-ecore:
+		sort(intOrString) -> EAttribute(name, type, properties)
+		where 
+			name := "name";
+			type := <int-or-string> intOrString;
+			properties := []
+
+	int-or-string:
+		"ID" -> EString()
+	int-or-string:
+		"INT" -> EInt()
+
+	to-ecore:
+		sort(x) -> <to-reference(|properties)> x
+		where 
+			not (<int-or-string> x);
+			properties := [LowerBound(1), UpperBound(1)]
+
+	to-ecore:
+		iter(sort(x)) -> <to-reference(|properties)> x
+		where
+			properties := [LowerBound(0), UpperBound(1)]
+					
+	to-ecore:
+		iter-star(sort(x)) -> <to-reference(|properties)> x
+		where
+			properties := [LowerBound(0), UpperBound(-1)]
+
+	to-reference(|properties):
+		sort -> EReference(name, UserDefined(type), properties)
+		where
+			name := "name";
+			type := <project-declaration(get-constr|Production())> sort
+

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Tue Feb 28 13:19:01 2012	(r24414)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/spoofaxlang.str	Tue Feb 28 13:26:45 2012	(r24415)
@@ -35,6 +35,9 @@
 imports
 	 editor/main
 	 codegen/main
+imports
+	 emf/main
+	
 /*
 	unit-tests/utils/-
 	unit-tests/-
@@ -66,7 +69,7 @@
     with
       filename := <guarantee-extension(|"aterm")> path;
       result   := selected // we just return the input term
-
+       
 strategies
 
   main =
@@ -82,6 +85,7 @@
     normalize;
     generate-name-analysis;
     build-incrementally-service;
+    generate-ecore-stage1; generate-ecore-stage2; generate-ecore-stage3;
     // Completions
     editor-complete;
     // References

From L.C.L.Kats at tudelft.nl  Wed Feb 29 10:18:22 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Feb 2012 09:18:22 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24419 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20120229091822.101397F800F@mx1.tudelft.nl>

Author: LennartKats
Date: Wed Feb 29 09:18:20 2012
New Revision: 24419
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24419&sc=1

Log:
null check

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	Tue Feb 28 15:45:57 2012	(r24418)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	Wed Feb 29 09:18:20 2012	(r24419)
@@ -59,11 +59,11 @@
 	}
 
 	public void invokeOnSave(IStrategoTerm ast) {
+        if (ast == null || function == null) return;
+        
 		try {
 			Environment.getStrategoLock().lock();
 			try {
-				if (ast == null) return;
-				
 				IStrategoTerm result = runtime.invokeSilent(function, ast);
 				if (result == null) {
 					runtime.reportRewritingFailed();

From L.C.L.Kats at tudelft.nl  Wed Feb 29 10:20:44 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Feb 2012 09:20:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24420 - in
	spoofax-imp/trunk/org.strategoxt.imp.testing:
	editor/java/org/strategoxt/imp/testing/strategies trans
Message-ID: <20120229092044.A7BBD2B800E@mx2.tudelft.nl>

Author: LennartKats
Date: Wed Feb 29 09:20:44 2012
New Revision: 24420
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24420&sc=1

Log:
- fixed builder tests not working with languanges that would not return an analyzed AST
- Spoofax/502: Resolving tests work but print out error messages

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/strategies/plugin_strategy_invoke_0_2.java
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-complete.str
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str
   spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/strategies/plugin_strategy_invoke_0_2.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/strategies/plugin_strategy_invoke_0_2.java	Wed Feb 29 09:18:20 2012	(r24419)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/editor/java/org/strategoxt/imp/testing/strategies/plugin_strategy_invoke_0_2.java	Wed Feb 29 09:20:44 2012	(r24420)
@@ -15,7 +15,6 @@
 import org.strategoxt.imp.runtime.services.StrategoObserver;
 import org.strategoxt.imp.runtime.stratego.EditorIOAgent;
 import org.strategoxt.lang.Context;
-import org.strategoxt.lang.MissingStrategyException;
 import org.strategoxt.lang.Strategy;
 
 /**
@@ -49,7 +48,6 @@
 				Context foreignContext = observer.getRuntime().getCompiledContext();
 				String trace = "rewriting failed\n"
 						+ (foreignContext != null ? foreignContext.getTraceString() : "");
-				observer.getRuntime().getIOAgent().printError(trace);
 				return factory.makeAppl(factory.makeConstructor("Fail", 1), factory.makeString(trace));
 			}
 		} catch (UndefinedStrategyException e) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str	Wed Feb 29 09:18:20 2012	(r24419)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-builders.str	Wed Feb 29 09:20:44 2012	(r24420)
@@ -82,10 +82,10 @@
           error       := <check-builder-expectation(|result)> expected
         case ?Error(m): 
           if <not(is-expected-failure)> (condition, expected) then
-            error := $[Unexpected error: [m]]
+            error := $[Unexpected error: [m]]; say(!m)
           end
         case ?Fail(m): 
-          error  := $[Unexpected error: [m]]
+          error  := $[Unexpected error: [m]]; say(!m)
         otherwise: with(fail)
       end
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-complete.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-complete.str	Wed Feb 29 09:18:20 2012	(r24419)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-complete.str	Wed Feb 29 09:20:44 2012	(r24420)
@@ -37,8 +37,8 @@
         case one(is-successful-completion(|from', to')): fail
         case filter(?Some(<id>)) => t: 
                              error := $[Unexpected result: [<try(flatten-list); write-to-html-string> t]]
-        case one(?Error(m)): error := $[Unexpected error: [m]]
-        case one(?Fail(m)):  error := $[Unexpected error: [m]]
+        case one(?Error(m)): error := $[Unexpected error: [m]]; say(!m)
+        case one(?Fail(m)):  error := $[Unexpected error: [m]]; say(!m)
         otherwise: with(fail)
       end;
       // On failure, report any inline errors

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str	Wed Feb 29 09:18:20 2012	(r24419)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check-resolve.str	Wed Feb 29 09:20:44 2012	(r24420)
@@ -61,9 +61,9 @@
         case one(?Some(t)):  error := $[Unexpected result:
                                         <pre>[<write-to-html-string> t]</pre>]
         case one(?Error(m)): error := $[Unexpected error resolving:
-                                        <pre>[m]</pre>]
+                                        <pre>[m]</pre>]; say(!m)
         case one(?Fail(m)):  error := $[Unexpected error resolving:
-                                        <pre>[m]</pre>]
+                                        <pre>[m]</pre>]; say(!m)
         otherwise: with(fail)
       end
   

Modified: spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str	Wed Feb 29 09:18:20 2012	(r24419)
+++ spoofax-imp/trunk/org.strategoxt.imp.testing/trans/check.str	Wed Feb 29 09:20:44 2012	(r24420)
@@ -113,7 +113,7 @@
         plugin-strategy-invoke(|<Language>, "editor-init")
       ; input'     := (input, <InputFile>, <project-path>)
       ; messages   := <plugin-strategy-invoke(|<Language>, <spt-get-observer>) <+ !([], [], [])> input'
-      ; messages'  := <strip-and-record-analyzed-ast <+ reset-analyzed-ast> <try(?Some(<id>))> messages
+      ; messages'  := <strip-and-record-analyzed-ast <+ reset-analyzed-ast(|input)> <try(?Some(<id>))> messages
       ; messages'' := <try((flatten-list, flatten-list, flatten-list))> messages'
       else
         messages'' := ([], [], [])
@@ -126,12 +126,12 @@
     ; not([]) 
    
   strip-and-record-analyzed-ast:
-    (t, e, w, n) -> (e, w, n)
+    (ast, e, w, n) -> (e, w, n)
     where
-      rules(LastAnalyzedAst := t)
+      rules(LastAnalyzedAst := ast)
 
-  reset-analyzed-ast =
-      rules(LastAnalyzedAst := None())
+  reset-analyzed-ast(|default) =
+    rules(LastAnalyzedAst := default)
 
   external plugin-strategy-invoke(|language, name)
   
@@ -168,12 +168,14 @@
   check-expectation(|ast, selections, messages) :
     <not(Fails)> -> $[Observer fails: [details]]
     where
-      !messages => Fail(details)
+      !messages => Fail(details);
+      say(!details)
 
   check-expectation(|ast, selections, messages) :
     _ -> $[Observer error: [details]]
     where
-      !messages => Error(details)
+      !messages => Error(details);
+      say(!details)
 
   check-expectation(|ast, selections, messages) :
     FailsParsing() -> $[Parse failure expected: [<write-to-html-string> ast]]
@@ -331,7 +333,8 @@
                                           |<Language>, s')> ()
     ; try(<grab-strategy-success-result(|d, result)> expectation)
     ; if !result => Error(error) then
-        warning := error
+        warning := error;
+        say(!error)
       else
         warning := <check-expectation(|result)> expectation
       end

From L.C.L.Kats at tudelft.nl  Wed Feb 29 11:55:31 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Feb 2012 10:55:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24421 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf: editor lib
	test trans
Message-ID: <20120229105531.4C7632B802A@mx2.tudelft.nl>

Author: LennartKats
Date: Wed Feb 29 10:55:31 2012
New Revision: 24421
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24421&sc=1

Log:
added name analysis generator to SDF plugin

Added:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/index-library-core.str
Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv	Wed Feb 29 09:20:44 2012	(r24420)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/editor/SDF-Builders.esv	Wed Feb 29 10:55:31 2012	(r24421)
@@ -24,5 +24,8 @@
   builder : "Show syntax templates (for selection)" =
     generate-syntax-templates (realtime) (openeditor)
 
-  builder : "Generate name analysis (for selection)" =
+  builder : "Generate name analysis" =
     generate-name-analysis (realtime) (openeditor)
+
+  on save :
+    generate-name-analysis
\ No newline at end of file

Added: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/index-library-core.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/lib/index-library-core.str	Wed Feb 29 10:55:31 2012	(r24421)
@@ -0,0 +1,21 @@
+/**
+ * Core indexing strategies.
+ */
+module lib/index-library-core
+
+rules
+  
+  index-setup(|language, project-paths, current-file) =
+    prim("LANG_index_setup", language, project-paths, current-file)
+
+  index-add-all(|file) =
+    list-loop(with(prim("LANG_index_add", <id>, file)))
+    
+  index-clear-file = 
+    prim("LANG_index_clear_file", <id>)
+  
+  indexlib-get-all:
+    template -> <prim("LANG_index_get", template)>
+  
+  index-get-current-file =
+    prim("LANG_index_get_current_file")
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt	Wed Feb 29 09:20:44 2012	(r24420)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt	Wed Feb 29 10:55:31 2012	(r24421)
@@ -13,24 +13,35 @@
 ]]
 
 test Namespace definition annotation [[
-    StartSpace@=Start -> Start
+    StartSpace@=Start -> Start {cons("Start")}
 ]] 
 
 test Namespace reference annotation 1 [[
-  
-    StartSpace at Start -> Start
+    StartSpace at Start -> Start {cons("Start")}
 ]] 
 
-test Namespace definition annotation 2 [[
-  
+test Namespace reference annotation 2 [[
     @StartSpace -> Start {cons("Start")}
 ]] 
 
-test Namespace definition annotation 2 warning [[
+test Namespace reference annotation 2 warning [[
   
-    @StartSpace -> Start 
+    @StartSpace -> Start
+]] 1 warning /missing/ /abstract syntax/
+
+test Warning for injection [[
+    StartSpace at Start -> Start
 ]] 1 warning /missing/ /abstract syntax/
 
 test Nested namespace [[
-  Foo at Bar@Start -> Start
-]]
\ No newline at end of file
+  Foo at Bar@Start -> Start {cons("Start")}
+]]
+
+test Abstract syntax [[
+  Start -> Start
+]] parse to module(_, _, _)
+
+test Generate code [[
+  StartSpace@=Foo -> Start {cons("CTor")}
+  StartSpace at Foo -> Foo {cons("CTor")}
+]] build generate-name-analysis

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Wed Feb 29 09:20:44 2012	(r24420)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Wed Feb 29 10:55:31 2012	(r24421)
@@ -9,6 +9,7 @@
   generate-syntax-templates
   to-name-analysis
   lib/editor-common.generated
+  include/SDF
 
 rules
 
@@ -85,6 +86,8 @@
         not(<occurrences(?sort(_))> p* => 1; <occurrences(?lit(_))> p* => 0)
       <+
         <oncetd(is-iter + ?opt(_))> p*
+      <+
+        <oncetd(?namespaceref(_) + ?namespaceref2(_, _) + ?namespacedef(_, _))> p*
       );
       if !a* => attrs(a'*) then
         not(<one(term(default(appl(unquoted("cons" + "ast"), [fun(quoted(not("\"\"")))]))))> a'*);

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str	Wed Feb 29 09:20:44 2012	(r24420)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str	Wed Feb 29 10:55:31 2012	(r24421)
@@ -6,25 +6,86 @@
   sdf
   analysis
   lib/attributes
+  lib/index-library-core
 
-rules
+overlays
+  
+  ANALYSIS_GENERATED = "lib/analysis-auto.generated"
+
+signature constructors
+  
+  Signatures : List(UriPart) * List(Term) -> IndexEntry
+  Rules      : List(UriPart) * List(Term) -> IndexEntry
+  SDFNaming  : UriPart
 
+rules
+  
+  // TODO: backport changes to generate-name-analyis (imports)
+  // TODO: backport changes to fetch-annotate-names-rule
+  
+  // TODO: write str to disk first to ensure proper timestamp
   generate-name-analysis:
-    (selected, position, ast, path, project-path) -> (filename, result)
+    (selected, position, ast, path, project-path) -> (filename', result')
     with
-      filename := <guarantee-extension(|"name-analysis.str")> path;
-      result   := <generate-name-analysis; pp-stratego-string> selected
+      index-setup(|"SDF", [<project-path>], path);
+      filename  := $[[project-path]/lib/[ANALYSIS_GENERATED].rtree];
+      filename' := $[[project-path]/lib/[ANALYSIS_GENERATED].str];
+      result    := <generate-name-analysis> ast;
+      result'   := <pp-stratego-string> result
+      // <WriteToBinaryFile> (filename, result)
 
   generate-name-analysis:
     sdf ->
-    Module("analysis-generated", [
-      Signature([Constructors(namespace-sigs)])
+    Module(ANALYSIS_GENERATED, [
+      Signature([Constructors(all-sigs)])
+    , <language-imports>
     , Rules(<flatten-list> [
+        all-rules
+      , ExtSDef("nam-get-def", [], [DefaultVarDec("n")])
+      , ExtSDef("nam-annotate-use", [], [DefaultVarDec("n")])
+      ])
+    ])
+    with
+      file := <index-get-current-file>;
+      uri  := [SDFNaming()]
+    with
+      (my-sigs, my-rules) := <generate-name-analysis-entries> sdf
+    with
+      // Store generated signatures and rules in under uri
+      <index-clear-file> file;
+      <index-add-all(|file)> [Signatures(uri, my-sigs)];
+      <index-add-all(|file)> [Rules(uri, my-rules)]
+    with
+      // Load generated entries for entire project
+      all-sigs  := <flatten-stored-data> <indexlib-get-all> Signatures(uri, ());
+      all-rules := <flatten-stored-data> <indexlib-get-all> Rules(uri, ())
+  
+  language-imports =
+    if lang := <spt-get-default-language> then
+      !Imports([Import($[include/[lang]])])
+    else
+      !Imports([])
+    end
+  
+  spt-get-default-language =
+    <readdir> $[[<project-path>]/include]
+    ; fetch-elem(has-extension(|"esv")) 
+    ; esv := <ReadFromFile>$[./include/[<id>]]
+    ; collect-one(?"LanguageName"#([<id>]))
+
+  flatten-stored-data =
+    alltd(\Signatures(uri, contents) -> contents\ + \Rules(uri, contents) -> contents\);
+    flatten-list
+
+  generate-name-analysis-entries:
+    sdf ->
+    ( namespace-sigs
+    , <flatten-list> [
         scope-rules
       , get-def-rules
       , annotate-names-rules
-      ])
-    ])
+      ]
+    )
     with
       namespaces           := <collect-all(fetch-namespace); flatten-list> sdf
       ; namespace-sigs       := <map(namespace-to-signature)> namespaces
@@ -107,7 +168,10 @@
     with
 	      p'*            := <filter(is-non-terminal)> p*;
 	      vars           := <map(non-terminal-to-new-var)> p'*;
-	      annotated-vars := <zip(add-namespace-anno-1 <+ add-namespace-anno-2)> (p'*, vars)
+	      annotated-vars := <zip(add-namespace-anno-1; try(?at-least-one)
+	                             <+ add-namespace-anno-2)> (p'*, vars)
+	  where
+	    !at-least-one
 
 rules
 

From L.C.L.Kats at tudelft.nl  Wed Feb 29 13:05:44 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Feb 2012 12:05:44 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24422 - in
	strategoxt-java-backend/trunk: java/pack-sdf-ext/extension
	test test/sdf-ext
Message-ID: <20120229120544.9DAC97F8067@mx1.tudelft.nl>

Author: LennartKats
Date: Wed Feb 29 12:05:44 2012
New Revision: 24422
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24422&sc=1

Log:
another hack: automatically introduce cons() for constructors in pack-sdf

Modified:
   strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/pack-sdf-ext.str
   strategoxt-java-backend/trunk/test/sdf-ext/Test.sdf
   strategoxt-java-backend/trunk/test/test-tools.sh

Modified: strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/pack-sdf-ext.str
==============================================================================
--- strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/pack-sdf-ext.str	Wed Feb 29 10:55:31 2012	(r24421)
+++ strategoxt-java-backend/trunk/java/pack-sdf-ext/extension/pack-sdf-ext.str	Wed Feb 29 12:05:44 2012	(r24422)
@@ -1,6 +1,8 @@
 /**
  * An extension of pack-sdf to support an extended
  * version of the SDF syntax definition formalism.
+ *
+ * Yes, it's a hack.
  */
 module pack-sdf-ext
 
@@ -101,3 +103,154 @@
                )
              ]
            )
+
+  remove-sdf-ext: // "literal" attribute to cons("literal")
+    appl(
+      prod(
+        [cf(sort("ATerm"))]
+      , cf(sort("ATermAttribute"))
+      , _
+      )
+    , [ contents @ appl(
+          prod(
+            [cf(sort("AFun"))]
+          , cf(sort("ATerm"))
+          , _
+          )
+        , [ appl(
+              prod(
+                [cf(sort("StrCon"))]
+              , cf(sort("AFun"))
+              , _
+              )
+            , _
+            )
+          ]
+        )
+      ]
+    )
+  ->
+    appl(
+      prod(
+        [cf(sort("ATerm"))]
+      , cf(sort("ATermAttribute"))
+      , attrs([term(cons("term")), avoid()])
+      )
+    , [ appl(
+          prod(
+            [ cf(sort("AFun"))
+            , cf(opt(layout()))
+            , lit("(")
+            , cf(opt(layout()))
+            , cf(iter-sep(sort("ATerm"), lit(",")))
+            , cf(opt(layout()))
+            , lit(")")
+            ]
+          , cf(sort("ATerm"))
+          , attrs([term(cons("appl"))])
+          )
+        , [ appl(
+              prod(
+                [cf(sort("Literal"))]
+              , cf(sort("AFun"))
+              , no-attrs()
+              )
+            , [ appl(
+                  prod(
+                    [cf(sort("UQLiteral"))]
+                  , cf(sort("Literal"))
+                  , attrs([term(cons("uqlit"))])
+                  )
+                , [ appl(
+                      prod(
+                        [lex(sort("UQLiteral"))]
+                      , cf(sort("UQLiteral"))
+                      , no-attrs()
+                      )
+                    , [ appl(
+                          prod(
+                            [ char-class([range(97, 122)])
+                            , lex(
+                                iter-star(
+                                  char-class(
+                                    [ 45
+                                    , range(48, 57)
+                                    , range(65, 90)
+                                    , range(97, 122)
+                                    ]
+                                  )
+                                )
+                              )
+                            , char-class(
+                                [range(48, 57), range(65, 90), range(97, 122)]
+                              )
+                            ]
+                          , lex(sort("UQLiteral"))
+                          , attrs([term(cons("more-chars"))])
+                          )
+                        , [ 99
+                          , appl(
+                              list(
+                                lex(
+                                  iter-star(
+                                    char-class(
+                                      [ 45
+                                      , range(48, 57)
+                                      , range(65, 90)
+                                      , range(97, 122)
+                                      ]
+                                    )
+                                  )
+                                )
+                              )
+                            , [111, 110]
+                            )
+                          , 115
+                          ]
+                        )
+                      ]
+                    )
+                  ]
+                )
+              ]
+            )
+          , appl(
+              prod([cf(layout())], cf(opt(layout())), no-attrs())
+            , [ appl(
+                  prod([lex(iter(layout()))], cf(layout()), no-attrs())
+                , [appl(list(lex(iter(layout()))), [])]
+                )
+              ]
+            )
+          , appl(
+              prod([char-class([40])], lit("("), no-attrs())
+            , [40]
+            )
+          , appl(
+              prod([cf(layout())], cf(opt(layout())), no-attrs())
+            , [ appl(
+                  prod([lex(iter(layout()))], cf(layout()), no-attrs())
+                , [appl(list(lex(iter(layout()))), [])]
+                )
+              ]
+            )
+          , appl(
+              list(cf(iter-sep(sort("ATerm"), lit(","))))
+            , [ contents ]
+            )
+          , appl(
+              prod([cf(layout())], cf(opt(layout())), no-attrs())
+            , [ appl(
+                  prod([lex(iter(layout()))], cf(layout()), no-attrs())
+                , [appl(list(lex(iter(layout()))), [])]
+                )
+              ]
+            )
+          , appl(
+              prod([char-class([41])], lit(")"), no-attrs())
+            , [41]
+            )
+          ]
+        )
+      ]
+    )

Modified: strategoxt-java-backend/trunk/test/sdf-ext/Test.sdf
==============================================================================
--- strategoxt-java-backend/trunk/test/sdf-ext/Test.sdf	Wed Feb 29 10:55:31 2012	(r24421)
+++ strategoxt-java-backend/trunk/test/sdf-ext/Test.sdf	Wed Feb 29 12:05:44 2012	(r24422)
@@ -7,6 +7,7 @@
   NAM at X  -> X
   NAM@=X -> X
   @NAM   -> X
+  @NAM   -> X {"Cons"}
 
 lexical syntax
 

Modified: strategoxt-java-backend/trunk/test/test-tools.sh
==============================================================================
--- strategoxt-java-backend/trunk/test/test-tools.sh	Wed Feb 29 10:55:31 2012	(r24421)
+++ strategoxt-java-backend/trunk/test/test-tools.sh	Wed Feb 29 12:05:44 2012	(r24422)
@@ -13,4 +13,8 @@
   exit 1
 fi
 
+if ! grep "cons" sdf-ext/Test-filtered.sdf > /dev/null; then
+  echo Expected 'cons' constructor from pack-sdf
+  exit 1
+fi
 echo 'Success!'

From gabrielkonat at gmail.com  Wed Feb 29 13:08:53 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 29 Feb 2012 12:08:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24423 -
	spoofax-contrib/separate-compilation-examples/c-without-macros/lib
	spoofax-contrib/separate-compilation-examples/c-without-macros/trans
	spoofax-contrib/separate-co...
Message-ID: <20120229120853.CE64B108C00D@mx3.tudelft.nl>

Author: gkonat
Date: Wed Feb 29 12:08:53 2012
New Revision: 24423
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24423&sc=1

Log:
Removed duplicate file dependency code.
Don't check for Unresolved(_) constructors when looking for difference.

Modified:
   spoofax-contrib/separate-compilation-examples/c-without-macros/lib/editor-common.generated.str
   spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
   spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
   spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/lib/editor-common.generated.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/lib/editor-common.generated.str	Wed Feb 29 12:05:44 2012	(r24422)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/lib/editor-common.generated.str	Wed Feb 29 12:08:53 2012	(r24423)
@@ -129,6 +129,7 @@
   origin-location  = prim("SSL_EXT_origin_location", <id>)
   origin-line      = origin-location => (<id>, _, _, _)
   origin-column    = origin-location => (_, <id>, _, _)
+  origin-file      = prim("SSL_EXT_origin_file", <id>)
   origin-strip     = prim("SSL_EXT_origin_strip", <id>)
   origin-equal(|t) = prim("SSL_EXT_origin_equal", <id>, t)
 

Modified: spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Wed Feb 29 12:05:44 2012	(r24422)
+++ spoofax-contrib/separate-compilation-examples/c-without-macros/trans/analysis-manual.str	Wed Feb 29 12:08:53 2012	(r24423)
@@ -67,4 +67,4 @@
     (Type(u1, v1), Type(u2, v2)) -> <id>
     where
        <index-uri-eq> (u1, u2);
-       <eq> (v1, v2)
+       <index-key-eq> (v1, v2)

Modified: spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Wed Feb 29 12:05:44 2012	(r24422)
+++ spoofax-contrib/separate-compilation-examples/csharp-partial-classses/trans/analysis-manual.str	Wed Feb 29 12:08:53 2012	(r24423)
@@ -75,4 +75,4 @@
     (Type(u1, v1), Type(u2, v2)) -> <id>
     where
        <index-uri-eq> (u1, u2);
-       <eq> (v1, v2)
+       <index-key-eq> (v1, v2)

Modified: spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str
==============================================================================
--- spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Wed Feb 29 12:05:44 2012	(r24422)
+++ spoofax-contrib/separate-compilation-examples/entity-with-aspects/trans/analysis-manual.str	Wed Feb 29 12:08:53 2012	(r24423)
@@ -58,8 +58,8 @@
   
   // Type definitions are equal if their URI is equal and if their values are equal.
   index-diff-compare:
-    (Type(u1, v1), Type(u2, v2)) -> <id>
+    (Type(u1, TYPE(v1)), Type(u2, TYPE(v2))) -> <id>
     where
        <index-uri-eq> (u1, u2);
-       <eq> (v1, v2)
+       <index-key-eq> (v1, v2)
       
\ No newline at end of file

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb 29 12:05:44 2012	(r24422)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb 29 12:08:53 2012	(r24423)
@@ -159,17 +159,15 @@
       if Editor() := phase; not(<is-test-file> path) then
         newElems := <conc> (defs, <filter(index-diff-constructors)> data');
         
-	      // Find removed and added definitions
-	      (addedElems, removedElems) := <analyze-diff> (oldElems, newElems);
-	      
-	      // Make sure all elements are defs.
-	      (added, removed) := (<map(analyze-to-def)> addedElems, <map(analyze-to-def)> removedElems);
-	      
-	      // Schedule re-analysis of files that have a Use or Read of a removed def and Read of an added def
-	      reanalyze-all(|added, removed, full-path); // TODO: Change this to file (with subfile)
+	      // Find added and removed definitions
+	      (added, removed) := <analyze-diff> (oldElems, newElems);
+	      changed := <conc> (added, removed);
+
+	      // Schedule re-analysis of files that depend on added or removed elements
+	      <reanalyze-all(|full-path)> changed;
 	      
-	      // Store added and removed elements in the index.
-	      analyze-store-diff(|added, removed, file, ast)
+	      // Store added and removed elements in the index
+	      analyze-store-diff(|changed, file, ast)
 	    else
 	      (added, removed) := ([], [])
       end
@@ -179,35 +177,21 @@
     with
       added   := <diff(index-diff-compare)> (defs2, defs1);
       removed := <diff(index-diff-compare)> (defs1, defs2)
-      
-  analyze-to-def:
-    elem -> Def(<index-uri> elem)
-     
-  analyze-changed(get-all):
-    defs -> filenames
-    with
-      uses := <mapconcat(get-all)> defs;
-      filesAndSubFiles := <mapconcat(index-get-files-of)> uses;
-      filenames := <map(Fst)> filesAndSubFiles
-       
-  analyze-all-changed-files(|added, removed, full-path):
-    _ -> changed
-    with
-	    changed := <make-set> <remove-all(?full-path <+ is-test-file <+ index-is-fake-file)> <concat> [
-		    <analyze-changed(index-get-uses-all)> removed,
-		    <analyze-changed(index-get-reads-all)> removed,
-		    <analyze-changed(index-get-reads-all)> added
-	    ]
-         
-  reanalyze-all(|added, removed, full-path) =
-    analyze-all-changed-files(|added, removed, full-path);
-    map(debug(!"Re-analyzing "); prim("SSL_EXT_queue_analysis"))
+  
+  reanalyze-all(|file) =
+  	index-get-dependent-files; 
+  	filter(not(analyze-changed-filter-file(|file)); reanalyze-file)
+    
+  analyze-changed-filter-file(|file) = 
+    ?files@(<id>, _); (is-test-file <+ index-is-fake-file <+ ?file); !files
+    
+  reanalyze-file = 
+    ?(<id>, _); debug(!"Re-analyzing "); prim("SSL_EXT_queue_analysis")
     
-  analyze-store-diff(|added, removed, file, ast): 
+  analyze-store-diff(|changedEntries, file, ast): 
     _ -> <id>
     with
       // TODO: Optimize so that there are no duplicate files stored in the index, use iset?
-      changedEntries  := <conc> (added, removed);
       changedFiles    := <mapconcat(index-get-files-of)> changedEntries;
       dependentFiles  := <index-get-dependent-files> changedEntries;
       files := <conc> (changedFiles, dependentFiles);

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Wed Feb 29 12:05:44 2012	(r24422)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/index-library.str	Wed Feb 29 12:08:53 2012	(r24423)
@@ -204,11 +204,27 @@
    * Example:
    *   <index-uri-eq> ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"]) => 
    *     ([Entity(), Anon("a"), "Bar"], [Entity(), Anon("b"), "Bar"])
+   *   <index-uri-eq> ([Entity(), "Foo"], [Entity(), "Bar"]) => fail
    */
   index-uri-eq:
   	(u1, u2) -> <id>
   	where
-      (<eq> (u1, u2) <+ <eq> (<remove-all(?Anon(_))> u1, <remove-all(?Anon(_))> u2))
+  	  u1' := <index-uri-unwrap> u1;
+  	  u2' := <index-uri-unwrap> u2;
+      (<eq> (u1', u2') <+ <eq> (<remove-all(?Anon(_))> u1', <remove-all(?Anon(_))> u2'))
+
+  /**
+   * Checks if given keys (term{uri} elements) are equal. Discards unresolved URI's.
+   *
+   * Example:
+   *   <index-key-eq> ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]}) => 
+   *     ("Bar"{[Entity(), "Bar"]}, "Bar"{[Unresolved(Entity()), "Bar"]})
+   *   <index-key-eq> ("Foo"{[Entity(), "Foo"]}, "Bar"{[Entity(), "Bar"]}) => fail
+   */      
+  index-key-eq:
+    (k1, k2) -> <id>
+    where
+      <eq> (<index-key-unwrap> k1, <index-key-unwrap> k2)
   
   /**
    * Gets the value part for given term.
@@ -243,3 +259,9 @@
   
   index-namespace-unwrap =
     \Unresolved(n) -> n\ <+ id
+    
+  index-uri-unwrap =
+    \[ns|xs] -> [<index-namespace-unwrap> ns|xs]\ <+ id
+    
+  index-key-unwrap = 
+    \key{uri} -> key{<index-uri-unwrap> uri}\ <+ id

From L.C.L.Kats at tudelft.nl  Wed Feb 29 13:12:33 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Feb 2012 12:12:33 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24424 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans
Message-ID: <20120229121233.E9C587F8053@mx1.tudelft.nl>

Author: LennartKats
Date: Wed Feb 29 12:12:32 2012
New Revision: 24424
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24424&sc=1

Log:
increased compatibility with non-index projects

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str	Wed Feb 29 12:08:53 2012	(r24423)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str	Wed Feb 29 12:12:32 2012	(r24424)
@@ -20,9 +20,6 @@
 
 rules
   
-  // TODO: backport changes to generate-name-analyis (imports)
-  // TODO: backport changes to fetch-annotate-names-rule
-  
   // TODO: write str to disk first to ensure proper timestamp
   generate-name-analysis:
     (selected, position, ast, path, project-path) -> (filename', result')
@@ -41,8 +38,8 @@
     , <language-imports>
     , Rules(<flatten-list> [
         all-rules
-      , ExtSDef("nam-get-def", [], [DefaultVarDec("n")])
-      , ExtSDef("nam-annotate-use", [], [DefaultVarDec("n")])
+      , SDefT("nam-get-def", [], [DefaultVarDec("n")], Fail())
+      , SDefT("nam-annotate-use", [], [DefaultVarDec("n")], Fail())
       ])
     ])
     with

From L.C.L.Kats at tudelft.nl  Wed Feb 29 13:12:53 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Feb 2012 12:12:53 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24425 - in
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf: test trans
Message-ID: <20120229121253.D4C65CC11D@mx4.tudelft.nl>

Author: LennartKats
Date: Wed Feb 29 12:12:53 2012
New Revision: 24425
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24425&sc=1

Log:
allow {"Name"} style constructors

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt	Wed Feb 29 12:12:32 2012	(r24424)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/test/sdf-naming.spt	Wed Feb 29 12:12:53 2012	(r24425)
@@ -37,6 +37,10 @@
   Foo at Bar@Start -> Start {cons("Start")}
 ]]
 
+test Simplified constructor annotation [[
+  @Start -> Start {"Cons"}
+]]
+
 test Abstract syntax [[
   Start -> Start
 ]] parse to module(_, _, _)

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Wed Feb 29 12:12:32 2012	(r24424)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/sdf.str	Wed Feb 29 12:12:53 2012	(r24425)
@@ -91,6 +91,7 @@
       );
       if !a* => attrs(a'*) then
         not(<one(term(default(appl(unquoted("cons" + "ast"), [fun(quoted(not("\"\"")))]))))> a'*);
+        not(<one(Constructor(not("\"\"")))> a'*);
         not(<one(bracket() + reject())> a'*);
         not(!s; (sort("Keyword") + sort("\"Keyword\"")));
         target := a*

From L.C.L.Kats at tudelft.nl  Wed Feb 29 13:14:18 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Feb 2012 12:14:18 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24426 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf
Message-ID: <20120229121419.0265DCC147@mx4.tudelft.nl>

Author: LennartKats
Date: Wed Feb 29 12:14:18 2012
New Revision: 24426
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24426&sc=1

Log:
generate fewer nam-annotate-names rules

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str	Wed Feb 29 12:12:53 2012	(r24425)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/codegen/sdf/to-name-analysis.str	Wed Feb 29 12:14:18 2012	(r24426)
@@ -109,11 +109,13 @@
     )
     where
       cons := <getfirst(fetch-cons-name)> a*
-    	; with-spxverify(
-	      p'*            := <filter(is-non-terminal)> p*;
-	      vars           := <map(non-terminal-to-new-var)> p'*;
-	      annotated-vars := <zip(add-namespace-anno-1 <+ add-namespace-anno-2)> (p'*, vars)
-      )
+    with
+        p'*            := <filter(is-non-terminal)> p*;
+        vars           := <map(non-terminal-to-new-var)> p'*;
+        annotated-vars := <zip(add-namespace-anno-1; try(?at-least-one)
+                               <+ add-namespace-anno-2)> (p'*, vars)
+    where
+      !at-least-one
 
 rules
 

From tobivollebregt at gmail.com  Wed Feb 29 13:44:35 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 12:44:35 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24427 - in
	strategoxt/trunk: gpp/syn/box
	stratego-libraries/gpp/lib/stratego/gpp stratego-libraries/gpp/tests
Message-ID: <20120229124435.73526CC12E@mx4.tudelft.nl>

Author: tvo
Date: Wed Feb 29 12:44:35 2012
New Revision: 24427
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24427&sc=1

Log:
BOX: StrategoXT/868: Add I, Z and HZ boxes.

Modified:
   strategoxt/trunk/gpp/syn/box/Box-Operators.sdf
   strategoxt/trunk/gpp/syn/box/Box.pp
   strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str
   strategoxt/trunk/stratego-libraries/gpp/tests/abox2text-tests.str

Modified: strategoxt/trunk/gpp/syn/box/Box-Operators.sdf
==============================================================================
--- strategoxt/trunk/gpp/syn/box/Box-Operators.sdf	Wed Feb 29 12:14:18 2012	(r24426)
+++ strategoxt/trunk/gpp/syn/box/Box-Operators.sdf	Wed Feb 29 12:44:35 2012	(r24427)
@@ -68,10 +68,25 @@
 
    exports
       context-free syntax
-         "H" S-OPTION*  "[" BOX* "]"  -> BOX {cons("H")}
-         "V" S-OPTION*  "[" BOX* "]"  -> BOX {cons("V")}
+         "H"  S-OPTION* "[" BOX* "]" -> BOX {cons("H")}
+         "V"  S-OPTION* "[" BOX* "]" -> BOX {cons("V")}
          "HV" S-OPTION* "[" BOX* "]" -> BOX {cons("HV")}
 
+%% Contrary to the \textsf{V} and \textsf{HV} operators, the \textsf{Z}
+%% and \textsf{HZ} operators wrap back to the left margin.
+%% The left margin is the column position set by a preceding \textsf{I}
+%% operator. Apart from this side effect, the \textsf{I} operator is
+%% identical to the \textsf{H} operator with the empty string and the child
+%% box of the \textsf{I} operator as childs, and its \textsf{hs} option
+%% set to the value of the \textsf{is} option of the \textsf{I} operator.
+
+   exports
+     context-free syntax
+
+         "Z"  S-OPTION* "[" BOX* "]" -> BOX {cons("Z")}
+         "HZ" S-OPTION* "[" BOX* "]" -> BOX {cons("HZ")}
+         "I"  S-OPTION* "[" BOX  "]" -> BOX {cons("I")}
+
 %% The \textsf{ALT} operator is used to choose between two alternative BOX
 %% expressions depending on the available width. When its first argument
 %% fits on the current line, that BOX expression is used. Otherwise, the

Modified: strategoxt/trunk/gpp/syn/box/Box.pp
==============================================================================
--- strategoxt/trunk/gpp/syn/box/Box.pp	Wed Feb 29 12:14:18 2012	(r24426)
+++ strategoxt/trunk/gpp/syn/box/Box.pp	Wed Feb 29 12:44:35 2012	(r24427)
@@ -13,6 +13,14 @@
    HV                       -- V  [V vs=2 [KW["HV"] _1] V vs=2 [KW["["] _2] KW["]"]],
    HV.1:iter-star           -- _1,
    HV.2:iter-star           -- _1,
+   Z                        -- V  [V vs=2 [KW["Z"] _1] V vs=2 [KW["["] _2] KW["]"]],
+   Z.1:iter-star            -- _1,
+   Z.2:iter-star            -- _1,
+   HZ                       -- V  [V vs=2 [KW["HZ"] _1] V vs=2 [KW["["] _2] KW["]"]],
+   HZ.1:iter-star           -- _1,
+   HZ.2:iter-star           -- _1,
+   I                        -- KW["I"] _1 KW["["] _2 KW["]"],
+   I.1:iter-star            -- _1,
    ALT                      -- KW["ALT"] KW["["] _1 _2 KW["]"],
    A                        -- KW["A"] _1 _2 KW["["] _3 KW["]"],
    A.2:iter-star            -- _1,

Modified: strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str
==============================================================================
--- strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str	Wed Feb 29 12:14:18 2012	(r24426)
+++ strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str	Wed Feb 29 12:44:35 2012	(r24427)
@@ -28,21 +28,22 @@
    * @todo Dump the exit
    */
   try-abox2text(|pos, width) =
-    let local-abox2text(|pos) =
-          abox2text(local-abox2text | pos, width)
-          <+ log(|Error(), "invalid box: ", <id>)
-             ; <exit> 1
-
-     in local-abox2text(|0)
-    end
+      rules( GppIndent := 0 )
+    ; let local-abox2text(|pos) =
+            abox2text(local-abox2text | pos, width)
+            <+ log(|Error(), "invalid box: ", <id>)
+               ; <exit> 1
+       in local-abox2text(|0)
+      end
     ; Fst
 
   abox2text(| width) =
-    let local-abox2text(|pos) =
-          abox2text(local-abox2text | pos, width)
+      rules( GppIndent := 0 )
+    ; let local-abox2text(|pos) =
+            abox2text(local-abox2text | pos, width)
 
-     in local-abox2text(|0)
-    end
+       in local-abox2text(|0)
+      end
     ; Fst
 
 strategies
@@ -52,8 +53,11 @@
    */
   abox2text(rec : t * t -> t | xpos, width) =
       abox2text-HV(rec | xpos, width)
+    + abox2text-HZ(rec | xpos, width)
     + abox2text-H(rec | xpos, width)
     + abox2text-V(rec | xpos, width)
+    + abox2text-Z(rec | xpos, width)
+    + abox2text-I(rec | xpos, width)
     + abox2text-A(rec | xpos, width)
     + abox2text-R(rec | xpos, width)
     + abox2text-S(rec | xpos, width)
@@ -76,11 +80,19 @@
   abox2text-HV(rec : t * t -> t | xpos, width) =
     ?HV(sopt, bs)
 
-    ; <gpp-hs-chars> sopt => hs-chars
+    ; gpp-hv-hz-helper(rec | xpos, width, sopt, bs, xpos)
+
+  abox2text-HZ(rec : t * t -> t | xpos, width) =
+    ?HZ(sopt, bs)
+
+    ; gpp-hv-hz-helper(rec | xpos, width, sopt, bs, <GppIndent>)
+
+  gpp-hv-hz-helper(rec : t * t -> t | xpos, width, sopt, bs, left-margin-xpos) =
+      <gpp-hs-chars> sopt => hs-chars
     ; <implode-string> hs-chars => hs
     ; <gpp-vs-text> sopt => vs
     ; <length> hs-chars => hsl
-    ; <add> (xpos, <gpp-is-length> sopt) => left-xpos
+    ; <add> (left-margin-xpos, <gpp-is-length> sopt) => left-xpos
     ; <filter(gpp-is-real-vbox)> bs
     ; if ?[] then
         !([], xpos)
@@ -94,7 +106,7 @@
         ; [(id, <subt> (<id>, hsl)) | id]
         ; reverse; map((reverse, id))
         ; map((<separate-by> (hs, <id>), id))
-        ; gpp-format-vbox(|sopt, xpos)
+        ; gpp-format-vbox(|sopt, left-margin-xpos)
       end
 
   /**
@@ -153,13 +165,21 @@
   abox2text-V(rec : t * t -> t | xpos, width) =
     ?V(sopt, bs)
 
-    ; <add> (xpos, <gpp-is-length> sopt) => left-xpos
+    ; gpp-h-z-helper(rec | xpos, width, sopt, bs, xpos)
+
+  abox2text-Z(rec : t * t -> t | xpos, width) =
+    ?Z(sopt, bs)
+
+    ; gpp-h-z-helper(rec | xpos, width, sopt, bs, <GppIndent>)
+
+  gpp-h-z-helper(rec : t * t -> t | xpos, width, sopt, bs, left-margin-xpos) =
+      <add> (left-margin-xpos, <gpp-is-length> sopt) => left-xpos
     ; <filter(gpp-is-real-vbox)> bs
     ; if ?[] then
         !([], xpos)
       else
         gpp-do-vbox-children(rec | xpos, left-xpos)
-        ; gpp-format-vbox(|sopt, xpos)
+        ; gpp-format-vbox(|sopt, left-margin-xpos)
       end
 
   /**
@@ -170,6 +190,25 @@
 
 strategies
 
+  /**
+   * `I is=N b' is equivalent to `H hs=N [S(""), b]'
+   *
+   * NOTE: this I box is not context sensitive!
+   * NOTE: this I box takes a single box as argument, not a list of boxes!
+   * NOTE: is=0 is the default
+   */
+  abox2text-I(rec : t * t -> t | xpos, width) =
+    ?I(sopt, b)
+
+    ; {|GppIndent:
+          <add> (xpos, <gpp-is-length> sopt) => left-xpos
+        ; rules( GppIndent := left-xpos )
+        ; <fetch-elem(?SOpt(IS(), <id>)) <+ !"0"> sopt => value
+        ; <rec(|xpos)> H([SOpt(HS(), value)], [S(""), b])
+      |}
+
+strategies
+
   /**
    * A
    *

Modified: strategoxt/trunk/stratego-libraries/gpp/tests/abox2text-tests.str
==============================================================================
--- strategoxt/trunk/stratego-libraries/gpp/tests/abox2text-tests.str	Wed Feb 29 12:14:18 2012	(r24426)
+++ strategoxt/trunk/stratego-libraries/gpp/tests/abox2text-tests.str	Wed Feb 29 12:44:35 2012	(r24427)
@@ -1,5 +1,6 @@
 /**
  * @author Martin Bravenboer <martin.bravenboer at gmail.com>
+ * @author Tobi Vollebregt <tobivollebregt at gmail.com>
  */
 module abox2text-tests
 imports
@@ -13,6 +14,10 @@
       hbox-tests
     ; vbox-tests
     ; fbox-tests
+    ; zbox-tests
+    ; hvbox-tests
+    ; hzbox-tests
+    ; misc-tests
     )
 
 strategies
@@ -52,6 +57,20 @@
       , V is=2 ["a" "b"]
       , "a\n  b"
       )
+    ; abox2text-test(|"Simple V box in one H box"
+      , H ["pre" V ["a" "b" "c"] "post"]
+      , $[pre a
+              b
+              c post]
+      )
+    ; abox2text-test(|"Two V boxes in one H box"
+      , H hs=0 [V ["aa" "bb" "c"] V["dd" "ee" "ff"]]
+      , $[aa
+          bb
+          cdd
+           ee
+           ff]
+      )
 
   fbox-tests = id
     ; abox2text-test(|"Simple font box"
@@ -59,6 +78,120 @@
       , "0"
       )
 
+  zbox-tests = id
+    ; abox2text-test(|"Simple Z box without is"
+      , H ["pre" Z ["a" "b" "c"] "post"]
+      , $[pre a
+          b
+          c post]
+      )
+    ; abox2text-test(|"Simple Z box with is"
+      , H ["pre" Z is=2 ["a" "b" "c"] "post"]
+      , $[pre a
+            b
+            c post]
+      )
+    ; abox2text-test(|"Simple Z box with is"
+      , H ["pre" Z is=3 ["a" HV["b" "c"]] "post"]
+      , 5
+      , $[pre a
+             b
+             c post]
+      )
+    ; abox2text-test(|"Simple I box without is"
+      , I ["foo"]
+      , "foo"
+      )
+    ; abox2text-test(|"Simple I box with is"
+      , I is=2 ["foo"]
+      , "  foo"
+      )
+    ; abox2text-test(|"Simple Z box in an I box"
+      // NOTE: Using H to indent, because V is=2 does not indent the first line
+      // NOTE: Start with a dot, because string quotations eat leading whitespace
+      , H hs=0 [". " I [H ["pre" Z ["a" "b" "c"] "post"]]]
+      , $[. pre a
+            b
+            c post]
+      )
+    ; abox2text-test(|"Symmetry?"
+      , H hs=0 [V["aa" "bb" "cc"] Z is=1 ["d" "ee" "ff"]]
+      , $[aa
+          bb
+          ccd
+           ee
+           ff]
+      )
+
+  hvbox-tests = id
+    ; abox2text-test(|"Simple HV box in an H box"
+      , H ["pre" HV ["a" "b" "c"] "post"]
+      , 7
+      , $[pre a b
+              c post]
+      )
+    ; abox2text-test(|"Simple HV box with is"
+      , HV is=2 ["a" "b" "c" "d"]
+      , 3
+      , $[a b
+            c
+            d]
+      )
+    ; abox2text-test(|"Simple HV box with vs"
+      , HV vs=1 ["a" "b" "c" "d"]
+      , 3
+      , $[a b
+
+          c d]
+      )
+
+  hzbox-tests = id
+    ; abox2text-test(|"Simple HZ box in an H box"
+      , H ["pre" HZ ["a" "b" "c"] "post"]
+      , 7
+      , $[pre a b
+          c post]
+      )
+    ; abox2text-test(|"Simple HZ box with is in an H box"
+      , H ["pre" HZ is=2 ["a" "b" "c" "d"] "post"]
+      , 5
+      , $[pre a
+            b c
+            d post]
+      )
+    ; abox2text-test(|"Simple HZ box with vs in an H box"
+      , H ["pre" HZ vs=1 ["a" "b" "c" "d"] "post"]
+      , 5
+      , $[pre a
+
+          b c d post]
+      )
+
+  // Use case for Z box
+  misc-tests = id
+    ; abox2text-test(|"If else"
+      , V [
+          H hs=0 ["if (a) " Z ["{" "}"]]
+          H hs=0 ["else " Z ["{" "}"]]
+        ]
+      , $[if (a) {
+          }
+          else {
+          }]
+      )
+    ; abox2text-test(|"If else if"
+      , V [
+          H hs=0 ["if (a) " Z ["{" "}"]]
+          H hs=0 ["else " Z[
+            H hs=0 ["if (b) " Z ["{" "}"]]
+          ]]
+        ]
+      , $[if (a) {
+          }
+          else if (b) {
+          }]
+      )
+
 strategies
 
   abox2text-test(|msg, box, txt) =
@@ -67,3 +200,10 @@
     , !box
     , !txt
     )
+
+  abox2text-test(|msg, box, width, txt) =
+    apply-test(!msg
+    , box2text-string(|width)
+    , !box
+    , !txt
+    )

From tobivollebregt at gmail.com  Wed Feb 29 14:10:51 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 13:10:51 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24428 -
	strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp
Message-ID: <20120229131051.AEAE4CC159@mx4.tudelft.nl>

Author: tvo
Date: Wed Feb 29 13:10:50 2012
New Revision: 24428
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24428&sc=1

Log:
compile

Modified:
   strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str

Modified: strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str
==============================================================================
--- strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str	Wed Feb 29 12:44:35 2012	(r24427)
+++ strategoxt/trunk/stratego-libraries/gpp/lib/stratego/gpp/BoxToText.str	Wed Feb 29 13:10:50 2012	(r24428)
@@ -22,6 +22,14 @@
   libstratego-lib
   stratego/gpp/Util
 
+// NOTE: bootstrap (libraries are compiled against baseline signature?)
+
+signature
+  constructors
+    I        : List(S-OPTION) * BOX -> BOX
+    HZ       : List(S-OPTION) * List(BOX) -> BOX
+    Z        : List(S-OPTION) * List(BOX) -> BOX
+
 strategies
 
   /**

From tobivollebregt at gmail.com  Wed Feb 29 14:46:23 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 13:46:23 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24429 -
	strategoxt/trunk/stratego-libraries/gpp/tests
Message-ID: <20120229134623.3E0582B800E@mx2.tudelft.nl>

Author: tvo
Date: Wed Feb 29 13:46:23 2012
New Revision: 24429
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24429&sc=1

Log:
compile

Modified:
   strategoxt/trunk/stratego-libraries/gpp/tests/abox2text-tests.str

Modified: strategoxt/trunk/stratego-libraries/gpp/tests/abox2text-tests.str
==============================================================================
--- strategoxt/trunk/stratego-libraries/gpp/tests/abox2text-tests.str	Wed Feb 29 13:10:50 2012	(r24428)
+++ strategoxt/trunk/stratego-libraries/gpp/tests/abox2text-tests.str	Wed Feb 29 13:46:23 2012	(r24429)
@@ -14,10 +14,10 @@
       hbox-tests
     ; vbox-tests
     ; fbox-tests
-    ; zbox-tests
+    //; zbox-tests
     ; hvbox-tests
-    ; hzbox-tests
-    ; misc-tests
+    //; hzbox-tests
+    //; misc-tests
     )
 
 strategies
@@ -78,6 +78,10 @@
       , "0"
       )
 
+// NOTE: tests commented out to bootstrap library
+//       (libraries are compiled against baseline signature?)
+
+/*
   zbox-tests = id
     ; abox2text-test(|"Simple Z box without is"
       , H ["pre" Z ["a" "b" "c"] "post"]
@@ -122,6 +126,7 @@
            ee
            ff]
       )
+*/
 
   hvbox-tests = id
     ; abox2text-test(|"Simple HV box in an H box"
@@ -145,6 +150,7 @@
           c d]
       )
 
+/*
   hzbox-tests = id
     ; abox2text-test(|"Simple HZ box in an H box"
       , H ["pre" HZ ["a" "b" "c"] "post"]
@@ -166,7 +172,9 @@
 
           b c d post]
       )
+*/
 
+/*
   // Use case for Z box
   misc-tests = id
     ; abox2text-test(|"If else"
@@ -191,6 +199,7 @@
           else if (b) {
           }]
       )
+*/
 
 strategies
 

From gabrielkonat at gmail.com  Wed Feb 29 15:22:42 2012
From: gabrielkonat at gmail.com (GabriÃ«l Konat)
Date: Wed, 29 Feb 2012 14:22:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24430 -
	spoofax-imp/trunk/experimental/NamingExperiment/lib
Message-ID: <20120229142242.B45FDCC141@mx4.tudelft.nl>

Author: gkonat
Date: Wed Feb 29 14:22:42 2012
New Revision: 24430
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24430&sc=1

Log:
Improved index-file-dependent-construct.

Modified:
   spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str

Modified: spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str
==============================================================================
--- spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb 29 13:46:23 2012	(r24429)
+++ spoofax-imp/trunk/experimental/NamingExperiment/lib/analysis-library.str	Wed Feb 29 14:22:42 2012	(r24430)
@@ -808,10 +808,11 @@
   index-add-unresolved(|x, uri) = (Index-UnresolvedSet; iset-add(|(x, uri))) <+ id
   
   index-file-dependent-construct: 
-    uri@[namespace | path] -> [Read(uri), ReadWildcard([namespace | rest], firstElem), Use(uri, [])]
-    where
-      [firstElem | rest] := path
-      
+    uri -> <conc> (uses, reads)
+    with
+    	uses := <index-get-uses-all> Def(uri);
+    	reads := <index-get-reads-all> Def(uri)
+    
   index-file-dependency-filter = ?Read(_) <+ ?ReadWildcard(_, _) <+ ?Use(_, _)
  
   do-adjust-index-lookup(|namespace, path, use, prefix) =

From L.C.L.Kats at tudelft.nl  Wed Feb 29 15:32:49 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Feb 2012 14:32:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24431 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime
Message-ID: <20120229143249.ECBCC7F8070@mx1.tudelft.nl>

Author: LennartKats
Date: Wed Feb 29 14:32:48 2012
New Revision: 24431
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24431&sc=1

Log:
work around Eclipse 3.7 NPE

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Wed Feb 29 14:22:42 2012	(r24430)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/Environment.java	Wed Feb 29 14:32:48 2012	(r24431)
@@ -389,8 +389,7 @@
 		}
 		if (message == null) message = t.getLocalizedMessage() == null ? t.getMessage() : t.getLocalizedMessage();
 		Status status = new Status(IStatus.ERROR, RuntimeActivator.PLUGIN_ID, 0, message, t);
-		RuntimeActivator activator = RuntimeActivator.getInstance();
-		if (activator != null) activator.getLog().log(status);
+		RuntimeActivator.tryLog(status);
 	}
 	
 	public static void logException(String message, StackTracer tracer, Throwable t) {
@@ -401,8 +400,7 @@
 		if (message == null) message = t.getLocalizedMessage() == null ? t.getMessage() : t.getLocalizedMessage();
 		message = message + "\n" + tracer.getTraceString();
 		Status status = new Status(IStatus.ERROR, RuntimeActivator.PLUGIN_ID, 0, message, t);
-		RuntimeActivator activator = RuntimeActivator.getInstance();
-		if (activator != null) activator.getLog().log(status);
+		RuntimeActivator.tryLog(status);
 	}
 	
 	public static void logException(String message) {
@@ -420,8 +418,7 @@
 	public static void logWarning(String message, Exception e) {
 		if (Debug.ENABLED) STDERR.println("Warning: " + message);
 		Status status = new Status(IStatus.WARNING, RuntimeActivator.PLUGIN_ID, 0, message, e);
-		RuntimeActivator activator = RuntimeActivator.getInstance();
-		if (activator != null) activator.getLog().log(status);
+		RuntimeActivator.tryLog(status);
 	}
 
 	public static void asynOpenErrorDialog(final String caption, final String message, final Throwable exception) {

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java	Wed Feb 29 14:22:42 2012	(r24430)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/RuntimeActivator.java	Wed Feb 29 14:32:48 2012	(r24431)
@@ -101,4 +101,17 @@
         
         return result;
 	}
+	
+	public static void tryLog(IStatus status) {
+		RuntimeActivator instance = getInstance();
+		if (instance != null) {
+			try {
+				instance.getLog().log(status);
+			} catch (RuntimeException e) {
+				// Seems to happen as of 3.7, shouldn't
+				e.printStackTrace();
+			}
+		}
+	}
 }
+

From L.C.L.Kats at tudelft.nl  Wed Feb 29 15:33:06 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Feb 2012 14:33:06 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24432 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans
Message-ID: <20120229143306.EFC2E2B802C@mx2.tudelft.nl>

Author: LennartKats
Date: Wed Feb 29 14:33:06 2012
New Revision: 24432
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24432&sc=1

Log:
generate to lib/ not lib/lib/

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str	Wed Feb 29 14:32:48 2012	(r24431)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.sdf/trans/to-name-analysis.str	Wed Feb 29 14:33:06 2012	(r24432)
@@ -25,8 +25,8 @@
     (selected, position, ast, path, project-path) -> (filename', result')
     with
       index-setup(|"SDF", [<project-path>], path);
-      filename  := $[[project-path]/lib/[ANALYSIS_GENERATED].rtree];
-      filename' := $[[project-path]/lib/[ANALYSIS_GENERATED].str];
+      filename  := $[[project-path]/[ANALYSIS_GENERATED].rtree];
+      filename' := $[[project-path]/[ANALYSIS_GENERATED].str];
       result    := <generate-name-analysis> ast;
       result'   := <pp-stratego-string> result
       // <WriteToBinaryFile> (filename, result)

From L.C.L.Kats at tudelft.nl  Wed Feb 29 15:56:50 2012
From: L.C.L.Kats at tudelft.nl (Lennart Kats)
Date: Wed, 29 Feb 2012 14:56:50 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24433 -
	spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services
Message-ID: <20120229145651.02B21CC147@mx4.tudelft.nl>

Author: LennartKats
Date: Wed Feb 29 14:56:50 2012
New Revision: 24433
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24433&sc=1

Log:
fix possible deadlock in background "on save" job

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
   spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	Wed Feb 29 14:33:06 2012	(r24432)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/OnSaveService.java	Wed Feb 29 14:56:50 2012	(r24433)
@@ -10,7 +10,7 @@
 import static org.strategoxt.imp.runtime.dynamicloading.TermReader.cons;
 
 import java.io.File;
-import java.io.FileNotFoundException;
+import java.io.IOException;
 
 import org.eclipse.core.resources.IFile;
 import org.eclipse.core.resources.IMarker;
@@ -86,7 +86,7 @@
 					try {
 						IFile resource = EditorIOAgent.getFile(runtime.getRuntime().getContext(), file);
 						StrategoBuilder.setFileContentsDirect(resource, newContents);
-					} catch (FileNotFoundException e) {
+					} catch (IOException e) {
 						Environment.logException("Problem when handling on save event", e);
 					} catch (CoreException e) {
 						Environment.logException("Problem when handling on save event", e);

Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Wed Feb 29 14:33:06 2012	(r24432)
+++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoBuilder.java	Wed Feb 29 14:56:50 2012	(r24433)
@@ -6,8 +6,11 @@
 import static org.spoofax.interpreter.core.Tools.isTermTuple;
 import static org.spoofax.interpreter.core.Tools.termAt;
 
+import java.io.BufferedWriter;
 import java.io.ByteArrayInputStream;
 import java.io.FileNotFoundException;
+import java.io.FileWriter;
+import java.io.IOException;
 import java.io.InputStream;
 import java.io.PrintWriter;
 import java.io.UnsupportedEncodingException;
@@ -236,6 +239,9 @@
 					scheduleOpenEditorAndListener(editor, node, file);
 				}
 			}
+		} catch (IOException e) {
+			Environment.logException("Builder failed", e);
+			openError(editor, "Builder failed (" + e.getClass().getName() + "; see error log): " + e.getMessage());
 		} catch (CoreException e) {
 			Environment.logException("Builder failed", e);
 			openError(editor, "Builder failed (" + e.getClass().getName() + "; see error log): " + e.getMessage());
@@ -347,10 +353,7 @@
 		job.schedule();
 	}
 
-	private void setFileContents(final EditorState editor, IFile file, final String contents) throws CoreException {
-		assert !observer.getLock().isHeldByCurrentThread() && !Environment.getStrategoLock().isHeldByCurrentThread()
-			: "Acquiring a resource lock can cause a deadlock";
-
+	private void setFileContents(final EditorState editor, IFile file, final String contents) throws CoreException, IOException {
 		/* TODO: update editor contents instead of file?
 		if (file.exists()):
 		if (editor.getEditor().getTitleImage().isDisposed()) {
@@ -378,8 +381,24 @@
 		setFileContentsDirect(file, contents);
 	}
 
-	public static void setFileContentsDirect(IFile file, final String contents) throws CoreException {
-		assert !Environment.getStrategoLock().isHeldByCurrentThread();
+	public static void setFileContentsDirect(IFile file, final String contents) throws CoreException, IOException {
+		if (!Environment.getStrategoLock().isHeldByCurrentThread()) {
+			// Use proper Eclipse API when safe
+			setResourceContents(file, contents);
+		} else {
+			// Fall back to Java file API
+			Writer writer = new BufferedWriter(new FileWriter(file.getLocation().toFile()));
+			try {
+				writer.write(contents);
+			} finally {
+				writer.close();
+			}
+		}
+	}
+
+	private static void setResourceContents(IFile file, final String contents) throws CoreException {
+		assert !Environment.getStrategoLock().isHeldByCurrentThread()
+			: "Acquiring a resource lock can cause a deadlock";
 		InputStream resultStream;
 		try {
 			resultStream = new ByteArrayInputStream(contents.getBytes("UTF-8"));

From tobivollebregt at gmail.com  Wed Feb 29 17:46:31 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 16:46:31 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24434 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml
Message-ID: <20120229164631.DE87ECC10F@mx4.tudelft.nl>

Author: tvo
Date: Wed Feb 29 16:46:31 2012
New Revision: 24434
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24434&sc=1

Log:
xml library: Fix build.properties

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/build.properties

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/build.properties
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/build.properties	Wed Feb 29 14:56:50 2012	(r24433)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.xml/build.properties	Wed Feb 29 16:46:31 2012	(r24434)
@@ -1,5 +1,5 @@
-source.. = src/main/java,
-		   src/test/java
+source.. = src/main/java,\
+           src/test/java
 output.. = bin/
 bin.includes = META-INF/,\
                share/lib-xml.ctree,\

From tobivollebregt at gmail.com  Wed Feb 29 17:46:34 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 16:46:34 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24435 -
	spoofax/trunk/spoofax/org.spoofax.interpreter/.settings
Message-ID: <20120229164634.B00AE2B800A@mx2.tudelft.nl>

Author: tvo
Date: Wed Feb 29 16:46:34 2012
New Revision: 24435
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24435&sc=1

Log:
Add stratego editor preference file to org.spoofax.interpreter

Added:
   spoofax/trunk/spoofax/org.spoofax.interpreter/.settings/org.strategoxt.imp.editors.stratego.prefs

Added: spoofax/trunk/spoofax/org.spoofax.interpreter/.settings/org.strategoxt.imp.editors.stratego.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter/.settings/org.strategoxt.imp.editors.stratego.prefs	Wed Feb 29 16:46:34 2012	(r24435)
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+stratego.include=src/main/stratego

From tobivollebregt at gmail.com  Wed Feb 29 17:46:37 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 16:46:37 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24436 -
	spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/java/org/spoofax/interpreter
Message-ID: <20120229164637.709A72B802E@mx2.tudelft.nl>

Author: tvo
Date: Wed Feb 29 16:46:37 2012
New Revision: 24436
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24436&sc=1

Log:
Enable more standard libraries in ConcreteInterpreter

(libstratego-lib seems to be a few times more expensive to load
than all those other libs combined anyway)

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/java/org/spoofax/interpreter/ConcreteInterpreter.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/java/org/spoofax/interpreter/ConcreteInterpreter.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/java/org/spoofax/interpreter/ConcreteInterpreter.java	Wed Feb 29 16:46:34 2012	(r24435)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/java/org/spoofax/interpreter/ConcreteInterpreter.java	Wed Feb 29 16:46:37 2012	(r24436)
@@ -63,12 +63,12 @@
 			load(findLibrary("stratego-lib/libstratego-lib.ctree"));
 			load(findLibrary("libstrc.ctree"));
 			load(findLocalResource("share/frontend.ctree"));
-			// load(findLibrary("libstratego-aterm.ctree"));
-			// load(findLibrary("libstratego-gpp.ctree"));
-			// load(findLibrary("libstratego-rtg.ctree"));
-			// load(findLibrary("libstratego-sdf.ctree"));
+			load(findLibrary("libstratego-aterm.ctree"));
+			load(findLibrary("libstratego-gpp.ctree"));
+			load(findLibrary("libstratego-rtg.ctree"));
+			load(findLibrary("libstratego-sdf.ctree"));
 			load(findLibrary("libstratego-sglr.ctree"));
-			// load(findLibrary("libstratego-tool-doc.ctree"));
+			load(findLibrary("libstratego-tool-doc.ctree"));
 
 			ParseTableManager ptm = new ParseTableManager();
 			sugarTable = ptm

From tobivollebregt at gmail.com  Wed Feb 29 17:46:40 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 16:46:40 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24437 - in
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter:
	. .externalToolBuilders .settings META-INF src src/main
	src/main/java src/main/java/org src/m...
Message-ID: <20120229164640.D8EE02B800B@mx2.tudelft.nl>

Author: tvo
Date: Wed Feb 29 16:46:40 2012
New Revision: 24437
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24437&sc=1

Log:
Add interpreter library (i.e., eval)

Added:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.classpath
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.externalToolBuilders/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.externalToolBuilders/interpreter-library-interpreter.launch
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.project
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.settings/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.settings/org.eclipse.jdt.core.prefs
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.settings/org.strategoxt.imp.editors.stratego.prefs
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/META-INF/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/META-INF/MANIFEST.MF
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/build.ant.xml
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/build.properties
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/INT_create.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/INT_eval.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/INT_get_error.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/InterpreterAbstractPrimitive.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/InterpreterLibrary.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/SpoofaxInterpreterTerm.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/stratego/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/stratego/spoofax/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/stratego/spoofax/bindings/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/stratego/spoofax/bindings/interpreter/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/stratego/spoofax/bindings/interpreter/interpreter.str
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/InterpreterLibraryTest.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.classpath
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.classpath	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src/main/java"/>
+	<classpathentry kind="src" path="src/test/java"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/J2SE-1.5"/>
+	<classpathentry kind="con" path="org.eclipse.pde.core.requiredPlugins"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.externalToolBuilders/interpreter-library-interpreter.launch
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.externalToolBuilders/interpreter-library-interpreter.launch	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<launchConfiguration type="org.eclipse.ant.AntBuilderLaunchConfigurationType">
+<booleanAttribute key="org.eclipse.ant.ui.ATTR_TARGETS_UPDATED" value="true"/>
+<booleanAttribute key="org.eclipse.ant.ui.DEFAULT_VM_INSTALL" value="false"/>
+<booleanAttribute key="org.eclipse.debug.ui.ATTR_LAUNCH_IN_BACKGROUND" value="false"/>
+<stringAttribute key="org.eclipse.jdt.launching.CLASSPATH_PROVIDER" value="org.eclipse.ant.ui.AntClasspathProvider"/>
+<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="true"/>
+<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="org.spoofax.interpreter.library.interpreter"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_LOCATION" value="${workspace_loc:/org.spoofax.interpreter.library.interpreter/build.ant.xml}"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_RUN_BUILD_KINDS" value=""/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_TOOL_ARGUMENTS" value="bundle-ctree"/>
+<booleanAttribute key="org.eclipse.ui.externaltools.ATTR_TRIGGERS_CONFIGURED" value="true"/>
+<stringAttribute key="org.eclipse.ui.externaltools.ATTR_WORKING_DIRECTORY" value="${workspace_loc:/org.spoofax.interpreter.library.interpreter}"/>
+</launchConfiguration>

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.project
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.project	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>org.spoofax.interpreter.library.interpreter</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.ManifestBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.pde.SchemaBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+				<dictionary>
+					<key>LaunchConfigHandle</key>
+					<value>&lt;project&gt;/.externalToolBuilders/interpreter-library-interpreter.launch</value>
+				</dictionary>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.pde.PluginNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.settings/org.eclipse.jdt.core.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.settings/org.eclipse.jdt.core.prefs	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,8 @@
+#Thu Apr 21 17:14:07 CEST 2011
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.5
+org.eclipse.jdt.core.compiler.compliance=1.5
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.5

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.settings/org.strategoxt.imp.editors.stratego.prefs
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/.settings/org.strategoxt.imp.editors.stratego.prefs	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,2 @@
+eclipse.preferences.version=1
+stratego.include=src/main/stratego

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/META-INF/MANIFEST.MF
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/META-INF/MANIFEST.MF	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,14 @@
+Manifest-Version: 1.0
+Bundle-ManifestVersion: 2
+Bundle-Name: org.spoofax.interpreter.library.interpreter
+Bundle-SymbolicName: org.spoofax.interpreter.library.interpreter
+Bundle-Version: 1.0.0.qualifier
+Bundle-RequiredExecutionEnvironment: J2SE-1.5
+Require-Bundle: org.junit,
+ org.junit4,
+ org.spoofax.interpreter.core,
+ org.spoofax.interpreter,
+ org.spoofax.interpreter.library.jsglr,
+ org.spoofax.jsglr,
+ org.spoofax.terms
+Export-Package: org.spoofax.interpreter.library.interpreter

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/build.ant.xml
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/build.ant.xml	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,78 @@
+<project name="spoofax-interpreter-library-interpreter" default="bundle-ctree">
+
+	<property name="build.dir" value="target" />
+	<property name="strategoxt.dir" value="${user.home}/.nix-profile" />
+
+	<property file="version.properties" />
+
+
+	<target
+		name="compile-str"
+		depends="compile-lib-to-ctree, compile-tests-to-ctree"
+		description="--> compile Stratego code" />
+
+	<property name="ctree-lib.target" value="${build.dir}/resources/share/lib-interpreter.ctree" />
+
+	<uptodate property="compile-lib-to-ctree.notRequired" targetfile="${ctree-lib.target}" >
+	    <srcfiles dir= "src/main/stratego/spoofax/bindings" includes="**/*.str"/>
+	</uptodate>
+
+	<target name="compile-lib-to-ctree" unless="${compile-lib-to-ctree.notRequired}" description="--> compile Stratego code">
+		<mkdir dir="${build.dir}/resources/share" />
+		<exec executable="${strategoxt.dir}/bin/strc" failonerror="true">
+			<arg value="-i" />
+			<arg value="src/main/stratego/spoofax/bindings/interpreter/interpreter.str" />
+			<arg value="-I" />
+			<arg value="src/main/stratego" />
+			<arg value="-F" />
+			<arg value="-c" />
+			<arg value="--library" />
+			<arg value="-o" />
+			<arg value="${ctree-lib.target}" />
+		</exec>
+	</target>
+
+	<property name="ctree-tests.target" value="${build.dir}/resources/share/interpreter-tests.ctree" />
+
+	<uptodate property="compile-tests-to-ctree.notRequired" targetfile="${ctree-tests.target}">
+	    <srcfiles dir="src/test/stratego" includes="**/*.str" />
+	</uptodate>
+
+	<target name="compile-tests-to-ctree" unless="${compile-tests-to-ctree.notRequired}">
+		<exec executable="${strategoxt.dir}/bin/strc" failonerror="true">
+			<arg value="-i" />
+			<arg value="src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str" />
+			<arg value="-I" />
+			<arg value="src/main/stratego" />
+			<arg value="-I" />
+			<arg value="src/test/stratego" />
+			<arg value="-F" />
+			<arg value="-o" />
+			<arg value="${ctree-tests.target}" />
+		</exec>
+		<copy todir="${build.dir}/resources/share" file="${strategoxt.dir}/share/stratego-lib/libstratego-lib.ctree" />
+	</target>
+
+	<target name="bundle-ctree" depends="compile-str">
+		<copy todir="share/" file="${ctree-lib.target}" />
+	</target>
+
+	<target name="check" depends="compile-str">
+		<junit printsummary="yes" showoutput="yes">
+			<!-- FIXME: ideally the classpath is read from MANIFEST.MF -->
+			<!-- NOTE: project root directories added to allow ConcreteInterpreter to find resources -->
+			<classpath>
+				<pathelement path="../org.spoofax.interpreter.core/bin" />
+				<pathelement path="../org.spoofax.interpreter/bin" />
+				<pathelement path="../org.spoofax.interpreter" />
+				<pathelement path="../org.spoofax.interpreter.library.jsglr/bin" />
+				<pathelement path="../org.spoofax.interpreter.library.jsglr" />
+				<pathelement path="../org.spoofax.jsglr/bin" />
+				<pathelement path="../org.spoofax.terms/bin" />
+				<pathelement path="bin" />
+			</classpath>
+			<test name="org.spoofax.interpreter.library.interpreter.test.InterpreterLibraryTest" />
+		</junit>
+	</target>
+
+</project>

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/build.properties
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/build.properties	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,6 @@
+source.. = src/main/java,\
+           src/test/java
+output.. = bin/
+bin.includes = META-INF/,\
+               share/lib-interpreter.ctree,\
+               .

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/INT_create.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/INT_create.java	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,35 @@
+/*
+ * Copyright (c) 2012, Tobi Vollebregt
+ *
+ * Licensed under the GNU Lesser General Public License, v2.1
+ */
+package org.spoofax.interpreter.library.interpreter;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.library.IOAgent;
+import org.spoofax.interpreter.library.ssl.SSLLibrary;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+
+public class INT_create extends InterpreterAbstractPrimitive {
+
+	private static final String NAME = "INT_create";
+
+	public INT_create(InterpreterLibrary library) {
+		super(library, NAME, 0, 0);
+	}
+
+	@Override
+	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+
+		final SSLLibrary ssl = (SSLLibrary) env.getOperatorRegistry("SSL");
+		final IOAgent ioAgent = ssl.getIOAgent();
+		final ITermFactory termFactory = env.getFactory();
+
+		env.setCurrent(new SpoofaxInterpreterTerm(termFactory, ioAgent));
+
+		return true;
+	}
+
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/INT_eval.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/INT_eval.java	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,39 @@
+/*
+ * Copyright (c) 2012, Tobi Vollebregt
+ *
+ * Licensed under the GNU Lesser General Public License, v2.1
+ */
+package org.spoofax.interpreter.library.interpreter;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.core.Tools;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+
+public class INT_eval extends InterpreterAbstractPrimitive {
+
+	private final static String NAME = "INT_eval";
+
+	public INT_eval(InterpreterLibrary library) {
+		super(library, NAME, 0, 2);
+	}
+
+	@Override
+	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars) {
+
+		if (tvars.length < 2 ||
+				!(tvars[0] instanceof SpoofaxInterpreterTerm) ||
+				tvars[1].getTermType() != IStrategoTerm.STRING)
+			return false;
+
+		final SpoofaxInterpreterTerm interpreter = (SpoofaxInterpreterTerm) tvars[0];
+		final String line = Tools.asJavaString(tvars[1]);
+
+		if (!interpreter.eval(line))
+			return false;
+
+		env.setCurrent(interpreter.current());
+		return true;
+	}
+
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/INT_get_error.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/INT_get_error.java	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,38 @@
+/*
+ * Copyright (c) 2012, Tobi Vollebregt
+ *
+ * Licensed under the GNU Lesser General Public License, v2.1
+ */
+package org.spoofax.interpreter.library.interpreter;
+
+import org.spoofax.interpreter.core.IContext;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.stratego.Strategy;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+
+public class INT_get_error extends InterpreterAbstractPrimitive {
+
+	private static final String NAME = "INT_get_error";
+
+	public INT_get_error(InterpreterLibrary library) {
+		super(library, NAME, 0, 1);
+	}
+
+	@Override
+	public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars)
+			throws InterpreterException {
+
+		if (tvars.length < 1 ||
+				!(tvars[0] instanceof SpoofaxInterpreterTerm))
+			return false;
+
+		final SpoofaxInterpreterTerm interpreter = (SpoofaxInterpreterTerm) tvars[0];
+
+		if (interpreter.getLastError() == null)
+			return false;
+
+		env.setCurrent(env.getFactory().makeString(interpreter.getLastError()));
+		return true;
+	}
+
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/InterpreterAbstractPrimitive.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/InterpreterAbstractPrimitive.java	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,22 @@
+/*
+ * Copyright (c) 2012, Tobi Vollebregt
+ *
+ * Licensed under the GNU Lesser General Public License, v2.1
+ */
+package org.spoofax.interpreter.library.interpreter;
+
+import org.spoofax.interpreter.library.AbstractPrimitive;
+
+/**
+ * @author Tobi Vollebregt
+ */
+public abstract class InterpreterAbstractPrimitive extends AbstractPrimitive {
+
+	protected final InterpreterLibrary library;
+
+	public InterpreterAbstractPrimitive(InterpreterLibrary library, String name, int svars, int tvars) {
+		super(name, svars, tvars);
+		this.library = library;
+	}
+
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/InterpreterLibrary.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/InterpreterLibrary.java	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,30 @@
+/*
+ * Copyright (c) 2012, Tobi Vollebregt
+ *
+ * Licensed under the GNU Lesser General Public License, v2.1
+ */
+package org.spoofax.interpreter.library.interpreter;
+
+import org.spoofax.interpreter.library.AbstractStrategoOperatorRegistry;
+
+/**
+ * Library that adds the interpreter to the interpreter
+ * so you can interpret while you interpret.
+ *
+ * @author Tobi Vollebregt
+ */
+public class InterpreterLibrary extends AbstractStrategoOperatorRegistry {
+
+	public static final String REGISTRY_NAME = "INT";
+
+	public InterpreterLibrary() {
+		add(new INT_create(this));
+		add(new INT_eval(this));
+		add(new INT_get_error(this));
+	}
+
+	public String getOperatorRegistryName() {
+		return REGISTRY_NAME;
+	}
+
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/SpoofaxInterpreterTerm.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/SpoofaxInterpreterTerm.java	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,134 @@
+/*
+ * Copyright (c) 2012, Tobi Vollebregt
+ *
+ * Licensed under the GNU Lesser General Public License, v2.1
+ */
+package org.spoofax.interpreter.library.interpreter;
+
+import java.io.IOException;
+
+import org.spoofax.interpreter.ConcreteInterpreter;
+import org.spoofax.interpreter.core.InterpreterErrorExit;
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.core.InterpreterExit;
+import org.spoofax.interpreter.core.UndefinedStrategyException;
+import org.spoofax.interpreter.library.IOAgent;
+import org.spoofax.interpreter.terms.IStrategoTerm;
+import org.spoofax.interpreter.terms.ITermFactory;
+import org.spoofax.interpreter.terms.ITermPrinter;
+import org.spoofax.jsglr.client.ParseException;
+import org.spoofax.jsglr.shared.BadTokenException;
+import org.spoofax.jsglr.shared.SGLRException;
+import org.spoofax.jsglr.shared.TokenExpectedException;
+import org.spoofax.terms.AbstractTermFactory;
+import org.spoofax.terms.StrategoTerm;
+
+/**
+ * Interpreter instance that can be tossed around as any StrategoTerm.
+ * 
+ * @author Tobi Vollebregt
+ */
+public class SpoofaxInterpreterTerm extends StrategoTerm {
+
+	private static final long serialVersionUID = -4810841797754395882L;
+
+	private final ConcreteInterpreter interpreter;
+
+	private String lastError;
+
+	public SpoofaxInterpreterTerm(ITermFactory termFactory, IOAgent ioAgent) {
+		super(MUTABLE);
+
+		interpreter = new ConcreteInterpreter(termFactory);
+		interpreter.setIOAgent(ioAgent);
+	}
+
+	public void setLastError(String err) {
+		lastError = err;
+	}
+
+	public String getLastError() {
+		return lastError;
+	}
+
+	public IStrategoTerm current() {
+		return interpreter.current();
+	}
+
+	// Based on org.spoofax.interpreter.ui.SpoofaxInterpreter.
+	public boolean eval(String line) {
+		final IOAgent ioAgent = interpreter.getIOAgent();
+		String err = null;
+
+		setLastError(null);
+
+		try {
+			if(!interpreter.parseAndInvoke(line)) {
+				ioAgent.printError("command failed");
+			}
+			return true;
+		} catch (TokenExpectedException e) {
+			err = e.getMessage();
+		} catch (InterpreterErrorExit e) {
+			err = e.getMessage();
+		} catch (BadTokenException e) {
+			err = e.getMessage();
+		} catch (ParseException e) {
+			err = e.getMessage();
+		} catch (InterpreterExit e) {
+			err = e.getMessage();
+		} catch (UndefinedStrategyException e) {
+			err = e.getMessage();
+		} catch (SGLRException e) {
+			err = e.getMessage();
+		} catch (InterpreterException e) {
+			if(e.getCause() != null)
+				err = e.getCause().getMessage();
+			else
+				err = e.getMessage();
+		}
+
+		if (err != null) {
+			ioAgent.printError(err);
+			setLastError(err);
+		}
+
+		return false;
+	}
+
+	public int getSubtermCount() {
+		return 0;
+	}
+
+	public IStrategoTerm getSubterm(int index) {
+		throw new UnsupportedOperationException();
+	}
+
+	public IStrategoTerm[] getAllSubterms() {
+		return AbstractTermFactory.EMPTY;
+	}
+
+	public int getTermType() {
+		return BLOB;
+	}
+
+	public void prettyPrint(ITermPrinter pp) {
+		pp.print(toString());
+	}
+
+	public void writeAsString(Appendable output, int maxDepth)
+			throws IOException {
+		output.append(getClass().getName());
+	}
+
+	@Override
+	protected boolean doSlowMatch(IStrategoTerm second, int commonStorageType) {
+		return second == this;
+	}
+
+	@Override
+	protected int hashFunction() {
+		return System.identityHashCode(this);
+	}
+
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/stratego/spoofax/bindings/interpreter/interpreter.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/stratego/spoofax/bindings/interpreter/interpreter.str	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,18 @@
+/*
+ * Copyright (c) 2011-2012, Tobi Vollebregt
+ *
+ * Licensed under the GNU Lesser General Public License, v2.1
+ */
+module spoofax/bindings/interpreter/interpreter
+imports
+	libstratego-lib
+
+strategies
+
+  create-interpreter = prim("INT_create")
+
+  eval(|int, line) = prim("INT_eval", int, line)
+
+  eval(|int) = ?line; prim("INT_eval", int, line)
+
+  get-interpreter-error(|int) = prim("INT_get_error", int)

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/InterpreterLibraryTest.java
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/InterpreterLibraryTest.java	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,37 @@
+/*
+ * Copyright (c) 2012, Tobi Vollebregt
+ *
+ * Licensed under the GNU Lesser General Public License, v2.1
+ */
+package org.spoofax.interpreter.library.interpreter.test;
+
+import java.io.IOException;
+
+import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.library.interpreter.InterpreterLibrary;
+import org.spoofax.interpreter.test.AbstractInterpreterTest;
+
+/**
+ * Test harness for the InterpreterLibrary.
+ * Based on: org.spoofax.interpreter.test.library.LibraryTest
+ *
+ * @author Tobi Vollebregt
+ */
+public class InterpreterLibraryTest extends AbstractInterpreterTest {
+
+	@Override
+	protected void setUp() throws Exception {
+		super.setUp("target/resources/share");
+		itp.addOperatorRegistry(new InterpreterLibrary());
+		itp.load("target/resources/share/libstratego-lib.ctree");
+	}
+
+	public void testInterpreter() throws IOException, InterpreterException {
+		interpTest("interpreter-tests", "(12,0)");
+	}
+
+	public void interpTest(String test, String result) throws IOException, InterpreterException {
+		super.interpTest(test, "()", result);
+	}
+
+}

Added: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str
==============================================================================
--- /dev/null	00:00:00 1970	(empty, because file is newly added)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str	Wed Feb 29 16:46:40 2012	(r24437)
@@ -0,0 +1,118 @@
+/*
+ * Copyright (c) 2011-2012, Tobi Vollebregt
+ *
+ * Licensed under the GNU Lesser General Public License, v2.1
+ */
+module spoofax/bindings/interpreter/interpreter-tests
+imports
+  libstratego-lib
+  spoofax/bindings/interpreter/interpreter
+
+strategies
+
+  main =
+    test-suite(!"interpreter-test",
+      // all subsequent tests depend on this test
+      // (creating an interpreter is pretty slow)
+      apply-test(
+        !"create interpreter"
+      , create-interpreter => int
+      , !()
+      )
+      ; simple-tests(|int)
+      ; error-tests(|int)
+      ; gpp-tests(|int)
+    )
+
+strategies
+
+  simple-tests(|int) =
+    apply-test(
+      !"build a term"
+    , eval(|int)
+    , !"!42"
+    , !42
+    )
+    ; apply-test(
+      !"interpreter maintains state"
+    , eval(|int)
+    , !"inc"
+    , !43
+    )
+    ; apply-test(
+      !"strategy definition"
+    , eval(|int)
+    , !"foo = map(inc)"
+    , !43
+    )
+    ; apply-test(
+      !"strategy use"
+    , eval(|int)
+    , !"<foo> [1,2,3]"
+    , ![2,3,4]
+    )
+    ; apply-test(
+      !"module definition"
+    , eval(|int)
+      // FIXME: does not work in interpreter
+    , !$[//module example
+         //strategies
+           bar = map(dec)]
+    )
+    ; apply-test(
+      !"module use"
+    , eval(|int)
+    , !"<bar> [1,2,3]"
+    , ![0,1,2]
+    )
+
+  error-tests(|int) =
+    apply-and-fail(
+      !"syntax error"
+    , eval(|int)
+    , !"!Foo)"
+    )
+    ; apply-and-show(
+      !"syntax error message"
+    , get-interpreter-error(|int)
+    , !()
+    )
+
+  gpp-tests(|int) =
+    apply-test(
+      !"abox2text use"
+    , eval(|int)
+    , !"<abox2text(|80)> S(\"hi\")"
+    , !"hi"
+    )
+    ; apply-test(
+      !"pretty printer definition"
+    , map(eval(|int) <+ debug(!"failed : "); fail)
+    , !${
+        pp-one-V(s) = !V([], <s>)
+        pp-v-list(s)   = ?[] < id + !V([], <map(pp-one-V(s))>)
+        prettyprint-Statements: a -> [H([SOpt(HS(), "0")], [<pp-v-list(prettyprint-Statement)> a])]
+        prettyprint-Statement = ![S(<is-string>)]
+      }
+      ; string-tokenize(|['\n'])
+    )
+    ; apply-and-show(
+      !"pretty printer use"
+    , eval(|int)
+    , !${<prettyprint-Statements> ["foo", "bar"]}
+    )
+
+  // FIXME: overlays do not work in the interpreter
+
+  // overlay-tests(|int) =
+  //   apply-test(
+  //     !"overlay definition"
+  //   , eval(|int)
+  //   , !"Line(xs) = H([SOpt(HS(), \"0\")], xs)"
+  //   )
+  //   ; apply-test(
+  //     !"overlay use"
+  //   , eval(|int)
+  //   , !"!Line([1])"
+  //   , !H([SOpt(HS(), "0")], [1])
+  //   )

From tobivollebregt at gmail.com  Wed Feb 29 21:24:42 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 20:24:42 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24438 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter
Message-ID: <20120229202442.D60B5108C011@mx3.tudelft.nl>

Author: tvo
Date: Wed Feb 29 20:24:41 2012
New Revision: 24438
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24438&sc=1

Log:
interpreter library: Fix handling of `command failed' error

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/SpoofaxInterpreterTerm.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/SpoofaxInterpreterTerm.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/SpoofaxInterpreterTerm.java	Wed Feb 29 16:46:40 2012	(r24437)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/main/java/org/spoofax/interpreter/library/interpreter/SpoofaxInterpreterTerm.java	Wed Feb 29 20:24:41 2012	(r24438)
@@ -63,10 +63,11 @@
 		setLastError(null);
 
 		try {
-			if(!interpreter.parseAndInvoke(line)) {
-				ioAgent.printError("command failed");
-			}
-			return true;
+			if(interpreter.parseAndInvoke(line))
+				return true;
+
+			err = "command failed";
+			// fall through
 		} catch (TokenExpectedException e) {
 			err = e.getMessage();
 		} catch (InterpreterErrorExit e) {

From oskarvanrest at gmail.com  Wed Feb 29 22:45:16 2012
From: oskarvanrest at gmail.com (Oskar van Rest)
Date: Wed, 29 Feb 2012 21:45:16 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24439 -
	spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf
Message-ID: <20120229214516.19C13CC055@mx4.tudelft.nl>

Author: OskarVanRest
Date: Wed Feb 29 21:45:15 2012
New Revision: 24439
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24439&sc=1

Log:
Enabled annotations for naming attributes+references. Fixed class+attribute+reference identifiers.

Modified:
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/ecore-to-xml.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/main.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/map.str
   spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/spx-to-ecore.str

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/ecore-to-xml.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/ecore-to-xml.str	Wed Feb 29 20:24:41 2012	(r24438)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/ecore-to-xml.str	Wed Feb 29 21:45:15 2012	(r24439)
@@ -3,7 +3,14 @@
 imports
 	lib/ecore-signatures
 	lib/xml/xml-doc
-	
+	
+overlays 
+	
+	XMLAttribute(name, literal) = 
+		Attribute(QName(None(), name), DoubleQuoted([Literal(literal)]))
+	XMLAttribute(prefix, name, literal) = 
+		Attribute(QName(Some(Prefix(prefix)), name), DoubleQuoted([Literal(literal)]))
+		
 strategies
 	ecore-to-xml = topdown(try(to-xml))
 		
@@ -16,13 +23,13 @@
 	
 			qName := QName(Some(Prefix("ecore")), "EPackage");
 			attributes := [
-				Attribute((QName(Some(Prefix("xmi")), "version")), DoubleQuoted([Literal("2.0")])),
-				Attribute((QName(Some(Prefix("xmlns")), "xmi")), DoubleQuoted([Literal("http://www.omg.org/XMI")])),
-				Attribute((QName(Some(Prefix("xmlns")), "xsi")), DoubleQuoted([Literal("http://www.w3.org/2001/XMLSchema-instance")])),
-				Attribute((QName(Some(Prefix("xmlns")), "ecore")), DoubleQuoted([Literal("http://www.eclipse.org/emf/2002/Ecore")])),
-				Attribute((QName(Some(Prefix("xmi")), "id")), DoubleQuoted([Literal(<new>)])),
-				Attribute((QName(None(), "name")), DoubleQuoted([Literal(name)])),
-				Attribute((QName(None(), "nsURI")), DoubleQuoted([Literal("")]))			
+				XMLAttribute("xmi", "version", "2.0"),
+				XMLAttribute("xmlns", "xmi", "http://www.omg.org/XMI"),
+				XMLAttribute("xmlns", "xsi", "http://www.w3.org/2001/XMLSchema-instance"),
+				XMLAttribute("xmlns", "ecore", "http://www.eclipse.org/emf/2002/Ecore"),
+				XMLAttribute("xmi", "id", <conc-strings> ("id_", <new> name)),
+				XMLAttribute("name", name),
+				XMLAttribute("nsURI", "")		
 			];
 			element := Element(qName, attributes, children, None()); 
 					
@@ -32,10 +39,10 @@
 		EClass(name, children) ->  Element(qName, attributes, children, None())
 		where
 			qName := QName(None(), "eClassifiers");
-			attributes := [
-				Attribute((QName(Some(Prefix("xsi")), "type")), DoubleQuoted([Literal("ecore:EClass")])),
-				Attribute((QName(Some(Prefix("xmi")), "id")), DoubleQuoted([Literal(name)])), //TODO generate unique id
-				Attribute((QName(None(), "name")), DoubleQuoted([Literal(name)]))
+			attributes := [
+				XMLAttribute("xsi", "type", "ecore:EClass"),
+				XMLAttribute("xmi", "id", <conc-strings> ("id_", name)),
+				XMLAttribute("name", name)
 			]
 	
 	to-xml:
@@ -43,10 +50,10 @@
 		where
 			qName := QName(None(), "eStructuralFeatures");
 			attributes := [
-				Attribute((QName(Some(Prefix("xsi")), "type")), DoubleQuoted([Literal("ecore:EAttribute")])),
-				Attribute((QName(Some(Prefix("xmi")), "id")), DoubleQuoted([Literal(name)])), //TODO generate unique id
-				Attribute((QName(None(), "name")), DoubleQuoted([Literal(name)])),
-				Attribute((QName(None(), "eType")), DoubleQuoted([Literal(type)]))			
+				XMLAttribute("xsi", "type", "ecore:EAttribute"),
+				XMLAttribute("xmi", "id", <conc-strings> ("id_", <new> name)),
+				XMLAttribute("name", name),
+				XMLAttribute("eType", type)		
 			];
 			children := []
 	
@@ -55,18 +62,16 @@
 	to-xml:
 		EInt() -> "ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
 
-//<eStructuralFeatures xsi:type="ecore:EReference" eType="#_iyLj0GGQEeGzQ5n6uCWZNw"/>
- 
-	
 	to-xml:
 		EReference(name, UserDefined(type), properties) -> Element(qName, attributes, children, None())
 		where
 			qName := QName(None(), "eStructuralFeatures");
-			fixedAttributes := [
-				Attribute((QName(Some(Prefix("xsi")), "type")), DoubleQuoted([Literal("ecore:EReference")])),
-				Attribute((QName(Some(Prefix("xmi")), "id")), DoubleQuoted([Literal(name)])), //TODO generate unique id
-				Attribute((QName(None(), "name")), DoubleQuoted([Literal(name)])),				
-				Attribute((QName(None(), "eType")), DoubleQuoted([Literal(type)]))			
+			fixedAttributes := [
+				XMLAttribute("xsi", "type", "ecore:EReference"),
+				XMLAttribute("xmi", "id", <conc-strings> ("id_", <new> name)),
+				XMLAttribute("name", name),
+				XMLAttribute("eType", <conc-strings> ("id_", type)), 
+				XMLAttribute("containment", "true")
 			];
 			optionalAttributes := properties;
 			attributes := Conc(fixedAttributes, optionalAttributes);
@@ -74,11 +79,12 @@
 			
 			
 	to-xml:
-		LowerBound(value) -> Attribute((QName(None(), "lowerBound")), DoubleQuoted([Literal(value')]))
+		LowerBound(value) -> XMLAttribute("lowerBound", value')
 		where
 			value' := <int-to-string> value
 		
 	to-xml:
-		UpperBound(value) -> Attribute((QName(None(), "upperBound")), DoubleQuoted([Literal(value')]))
+		UpperBound(value) ->  XMLAttribute("upperBound", value')
 		where
-			value' := <int-to-string> value
\ No newline at end of file
+			value' := <int-to-string> value
+			
\ No newline at end of file

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/main.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/main.str	Wed Feb 29 20:24:41 2012	(r24438)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/main.str	Wed Feb 29 21:45:15 2012	(r24439)
@@ -22,7 +22,7 @@
 	generate-ecore-stage2:
 	    (selected, position, ast, path, project-path) -> (filename, result)
 	    with
-	      filename := <guarantee-extension(|"xml.aterm")> path;
+	      filename := <guarantee-extension(|"ecore.xml.aterm")> path;
 	      result   := <spx-to-xml-stage2> ast
  
 	generate-ecore-stage3:

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/map.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/map.str	Wed Feb 29 20:24:41 2012	(r24438)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/map.str	Wed Feb 29 21:45:15 2012	(r24439)
@@ -6,7 +6,7 @@
 	lib/namespacelib
 
 strategies
-	map-all = enable-namespace-debugging; alltd(map)
+	map-all = alltd(map)
 	
 rules
 		

Modified: spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/spx-to-ecore.str
==============================================================================
--- spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/spx-to-ecore.str	Wed Feb 29 20:24:41 2012	(r24438)
+++ spoofax-imp/trunk/org.strategoxt.imp.editors.spoofax/trans/emf/spx-to-ecore.str	Wed Feb 29 21:45:15 2012	(r24439)
@@ -21,7 +21,7 @@
 		  ]
 		)	-> EPackage(packageName, productions)
 	where
-		packageName := <to-ecore> qName;
+		packageName := qName;
 		productions := <collect-om(?prod(_, _, _))> modules
 	
 	
@@ -34,13 +34,27 @@
 		prod(lhs, sort, attrs(attributes)) -> EClass(name, children)
 		where 
 			constructor := <getfirst(?Constructor(consName))> attributes;
-			name := <trim-chars(?'"')> consName;
+			name := <un-double-quote> consName;
 			children := <remove-all(?lit(_))> lhs
 
+	// non-terminal: n at sort(_) -> n
+	// non-terminal: n at iter(_) -> n
+	// non-terminal: n at iter-star(_) -> n
+	// non-terminal: n at label(l, x) -> n
+	// 	where <non-terminal> x
+
 	to-ecore:
 		sort(intOrString) -> EAttribute(name, type, properties)
 		where 
-			name := "name";
+			name := intOrString;
+			type := <int-or-string> intOrString;
+			properties := []
+			
+	to-ecore:
+		label(l, sort(intOrString)) -> EAttribute(name, type, properties)
+		where 
+			label := <get-label> l;
+			name := label;
 			type := <int-or-string> intOrString;
 			properties := []
 
@@ -50,24 +64,59 @@
 		"INT" -> EInt()
 
 	to-ecore:
-		sort(x) -> <to-reference(|properties)> x
+		label(l, x) -> EReference(name, UserDefined(type), properties)
 		where 
-			not (<int-or-string> x);
-			properties := [LowerBound(1), UpperBound(1)]
-
+			name := <get-label> l;
+			(_, type, bounds) := <get-name-type-and-bounds> x;
+			properties := bounds
+		
 	to-ecore:
-		iter(sort(x)) -> <to-reference(|properties)> x
+		x -> EReference(name, UserDefined(type), properties)
 		where
-			properties := [LowerBound(0), UpperBound(1)]
-					
-	to-ecore:
-		iter-star(sort(x)) -> <to-reference(|properties)> x
+			(name, type, bounds) := <get-name-type-and-bounds> x;
+			properties := bounds
+
+	get-label: quoted(label) -> label
+	get-label: unquoted(label) -> label
+				
+	get-name-type-and-bounds:
+		sort(s) -> (name, type, [LowerBound(1), UpperBound(1)])
+		where
+			name := <first-char-to-lowercase> s;
+			type := <project-declaration(get-constr|Production())> s
+	get-name-type-and-bounds:
+		iter(sort(s)) -> (name, type, [LowerBound(0), UpperBound(1)])
 		where
-			properties := [LowerBound(0), UpperBound(-1)]
+			name := <first-char-to-lowercase> s;
+			type := <project-declaration(get-constr|Production())> s
+	get-name-type-and-bounds:
+		iter-star(sort(s)) -> (name, type, [LowerBound(0), UpperBound(-1)])
+		where
+			name := <make-plural> <first-char-to-lowercase> s;
+			type := <project-declaration(get-constr|Production())> s
 
-	to-reference(|properties):
-		sort -> EReference(name, UserDefined(type), properties)
+	first-char-to-lowercase:
+		string -> string'	
 		where
-			name := "name";
-			type := <project-declaration(get-constr|Production())> sort
+			(head, tail) := <split-Cons> <explode-string> string;
+			head' := <to-lower> head;
+			string' := <implode-string> <conc> ([head'], tail)
+	
+	make-plural:
+		string -> string'
+		where
+			not ( <string-ends-with(|"y")> string );
+			string' := <conc-strings> (string, "s")
+			
+	make-plural:
+		string -> string'
+		where
+			<string-ends-with(|"y")> string;
+			init := <implode-string> <init> <explode-string> string;
+			string' := <conc-strings> (init, "ies")
+			
+	
 
+signature
+  constructors
+	sort	: actualSort * annotation -> sort

From tobivollebregt at gmail.com  Wed Feb 29 23:16:45 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 22:16:45 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24440 -
	spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/main/java/org/spoofax/interpreter/library/spx
Message-ID: <20120229221645.D49C82B800A@mx2.tudelft.nl>

Author: tvo
Date: Wed Feb 29 22:16:45 2012
New Revision: 24440
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24440&sc=1

Log:
Fix SPX_interpreter_introspect_strategies

This actually breaks ConcreteInterpreter because it actually
invokes a method that throws a NotImplementedException.

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/main/java/org/spoofax/interpreter/library/spx/SPX_interpreter_introspect_strategies.java

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/main/java/org/spoofax/interpreter/library/spx/SPX_interpreter_introspect_strategies.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/main/java/org/spoofax/interpreter/library/spx/SPX_interpreter_introspect_strategies.java	Wed Feb 29 21:45:15 2012	(r24439)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.core/src/main/java/org/spoofax/interpreter/library/spx/SPX_interpreter_introspect_strategies.java	Wed Feb 29 22:16:45 2012	(r24440)
@@ -11,6 +11,7 @@
 
 import org.spoofax.interpreter.core.IContext;
 import org.spoofax.interpreter.core.InterpreterException;
+import org.spoofax.interpreter.core.VarScope;
 import org.spoofax.interpreter.library.AbstractPrimitive;
 import org.spoofax.interpreter.stratego.SDefT;
 import org.spoofax.interpreter.stratego.Strategy;
@@ -27,11 +28,19 @@
     @Override
     public boolean call(IContext env, Strategy[] svars, IStrategoTerm[] tvars)
             throws InterpreterException {
-        ITermFactory f = env.getFactory();
-        LinkedList<IStrategoAppl> as = new LinkedList<IStrategoAppl>();
-        for(SDefT sdef : env.getVarScope().getSVars()) {
+        final ITermFactory f = env.getFactory();
+        final LinkedList<IStrategoAppl> as = new LinkedList<IStrategoAppl>();
+
+        // see also Context.getStrategyNames()
+        VarScope v = env.getVarScope();
+        while(v.getParent() != null)
+            v = v.getParent();
+
+        for(SDefT sdef : v.getSVars()) {
+            // FIXME: this throws NotImplementedException
             as.addFirst(sdef.toExternalDef(f));
         }
+
         env.setCurrent(f.makeList(as));
         return true;
     }

From tobivollebregt at gmail.com  Wed Feb 29 23:16:49 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 22:16:49 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24441 -
	spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/stratego/spoofax/interpreter
Message-ID: <20120229221649.2E9B32B8007@mx2.tudelft.nl>

Author: tvo
Date: Wed Feb 29 22:16:48 2012
New Revision: 24441
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24441&sc=1

Log:
Fix ConcreteInterpreter frontend

- find .ctree imports
- get rid of duplicate c-ification (and maybe more) on .ctree import
- disable spx-inject-current-context; it calls half-implemented
    SPX_interpreter_introspect_strategies

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/stratego/spoofax/interpreter/frontend.str
   spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/stratego/spoofax/interpreter/pack.str

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/stratego/spoofax/interpreter/frontend.str
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/stratego/spoofax/interpreter/frontend.str	Wed Feb 29 22:16:45 2012	(r24440)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/stratego/spoofax/interpreter/frontend.str	Wed Feb 29 22:16:48 2012	(r24441)
@@ -35,12 +35,14 @@
     spx-shell-is-def : x at RDef(_, _, _) -> x
     spx-shell-is-def : x at RDefNoArgs(_, _) -> x
 
-    spx-inject-current-context :
-      Specification([sig, Strategies(strat*) | rest]) -> 
-      Specification([sig', Strategies(strat'*) | rest])
-    with
-        sig'    := <spx-merge-signatures> (sig, <prim("SPX_interpreter_introspect_constructors")>)
-      ; strat'* := <conc> (strat*, <prim("SPX_interpreter_introspect_strategies")>)
+    // FIXME: the SPX_interpreter_introspect_strategies is not implemented
+
+    // spx-inject-current-context :
+    //   Specification([sig, Strategies(strat*) | rest]) ->
+    //   Specification([sig', Strategies(strat'*) | rest])
+    // with
+    //     sig'    := <spx-merge-signatures> (sig, <prim("SPX_interpreter_introspect_constructors")>)
+    //   ; strat'* := <conc> (strat*, <prim("SPX_interpreter_introspect_strategies"); debug(!"strats: ")>)
 
     spx-merge-signatures :
       (Signature([]), ctor*) -> Signature([Constructors(ctor*)])
@@ -51,9 +53,12 @@
     spx-shell-frontend-for-import :
       ImportOne(Import(modName)) -> ast
     where
-        <unescape ; spx-pack-stratego(|["."])> modName
-      ; spx-inject-current-context
-      ; m-transform-no-overlays(id
+        <unescape ; spx-pack-stratego(spx-shell-frontend-for-str | ["."])> modName
+      // ; spx-inject-current-context
+      ; spx-shell-frontend => ast
+
+    spx-shell-frontend-for-str =
+        m-transform-no-overlays(id
           ; m-transform-constructors(id
             ; pre-desugar
             ; try(DeclareVarToConst)
@@ -123,7 +128,7 @@
            ; define-congruences-def
           ]
       )
-     ) => ast
+     )
 
     spx-shell-frontend-for-expr = 
         pre-desugar

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/stratego/spoofax/interpreter/pack.str
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/stratego/spoofax/interpreter/pack.str	Wed Feb 29 22:16:45 2012	(r24440)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter/src/main/stratego/spoofax/interpreter/pack.str	Wed Feb 29 22:16:48 2012	(r24441)
@@ -1,6 +1,5 @@
 module spoofax/interpreter/pack
 imports
-  Stratego-Shell
   libstratego-lib
   libstrc
   libstratego-sglr
@@ -11,32 +10,33 @@
 
 strategies
 
-  spx-pack-stratego(|includePath) = 
+  spx-pack-stratego(frontend | includePath) =
       spx-resolve-path(|includePath) 
-    ; spx-pack-stratego(|includePath, [])
+    ; spx-pack-stratego(frontend | includePath, [])
 
-  spx-pack-stratego(|includePath : List(String), seen : List(String)) :
+  spx-pack-stratego(frontend | includePath : List(String), seen : List(String)) :
     fileName -> spec
   where
      <string-ends-with(|".str")> fileName
   where
       ast := <spx-parse-stratego-file(|"Module", fileName)> fileName
-    ; file* := <collect(\ Import(x) -> x \)> ast
+    ; ast' := <frontend> ast
+    ; file* := <collect(\ Import(x) -> x \)> ast'
     ; resFile* := <map(spx-resolve-path(|includePath))>
     ; seen' := [ fileName | seen] 
     ; seen'' := <union> (resFile*, seen')
     ; imp* := <diff> (resFile*, seen') 
-    ; ast* := <map(spx-pack-stratego(|includePath, seen''))> imp*
-    ; spec := <foldl(spx-merge-specs)> (ast*, <spx-module-to-spec> ast)
+    ; ast* := <map(spx-pack-stratego(frontend | includePath, seen''))> imp*
+    ; spec := <foldl(spx-merge-specs)> (ast*, <spx-module-to-spec> ast')
 
-  spx-pack-stratego(|includePath : List(String), seen : List(String)) :
+  spx-pack-stratego(frontend | includePath : List(String), seen : List(String)) :
     fileName -> spec
   where
      <string-ends-with(|".ctree")> fileName
   where
      spec := <ReadFromFile> fileName
 
-  spx-pack-stratego(|includePath : List(String), seen : List(String)) :
+  spx-pack-stratego(frontend | includePath : List(String), seen : List(String)) :
     InternalLib(x) -> Specification([])
 
   spx-parse-stratego-file(|sort, path) =
@@ -53,7 +53,7 @@
   spx-resolve-path-with-fallback(|includePath):
     moduleName -> resolvedName
   where
-      res* := <filter(\ x -> rn where rn := <spx-resolve-one-ctree(|x)> moduleName \)> includePath
+      res* := <filter(\ x -> rn where rn := <spx-resolve-one-path(|x)> moduleName \)> includePath
     ; resolvedName := <Hd> res*
 
   spx-resolve-path-with-fallback(|includePath): x@"libstratego-lib" -> InternalLib(x)
@@ -63,13 +63,13 @@
   spx-resolve-path-with-fallback(|includePath): x@"libstratego-sdf" -> InternalLib(x)
   spx-resolve-path-with-fallback(|includePath): x@"libstrc" -> InternalLib(x)
 
-  spx-resolve-one-str(|prefixPath) :
+  spx-resolve-one-path(|prefixPath) :
     moduleName -> fileName
   where
       fileName := <concat-strings> [prefixPath, "/", moduleName, ".ctree"]
     ; file-exists
 
-  spx-resolve-one-ctree(|prefixPath) :
+  spx-resolve-one-path(|prefixPath) :
     moduleName -> fileName
   where
       fileName := <concat-strings> [prefixPath, "/", moduleName, ".str"]

From tobivollebregt at gmail.com  Wed Feb 29 23:16:52 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 22:16:52 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24442 - in
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test:
	java/org/spoofax/interpreter/library/interpreter/test
	stratego/spoofax/bindings/inte...
Message-ID: <20120229221652.866BE108C002@mx3.tudelft.nl>

Author: tvo
Date: Wed Feb 29 22:16:52 2012
New Revision: 24442
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24442&sc=1

Log:
interpreter library: Some ctree import testing..

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/InterpreterLibraryTest.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/InterpreterLibraryTest.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/InterpreterLibraryTest.java	Wed Feb 29 22:16:48 2012	(r24441)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/InterpreterLibraryTest.java	Wed Feb 29 22:16:52 2012	(r24442)
@@ -27,7 +27,7 @@
 	}
 
 	public void testInterpreter() throws IOException, InterpreterException {
-		interpTest("interpreter-tests", "(12,0)");
+		interpTest("interpreter-tests", "(17,0)");
 	}
 
 	public void interpTest(String test, String result) throws IOException, InterpreterException {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str	Wed Feb 29 22:16:48 2012	(r24441)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str	Wed Feb 29 22:16:52 2012	(r24442)
@@ -22,6 +22,7 @@
       ; simple-tests(|int)
       ; error-tests(|int)
       ; gpp-tests(|int)
+      ; ctree-tests(|int)
     )
 
 strategies
@@ -102,6 +103,42 @@
     , !${<prettyprint-Statements> ["foo", "bar"]}
     )
 
+  ctree-tests(|int) =
+      // ensure compiler does not remove foo strategy from ctree
+      not(<foo> 10)
+      // actual tests
+    ; apply-test(
+      !"strategy definition"
+    , eval(|int)
+    , !"foo : 2 -> 2"
+    )
+    ; apply-test(
+      !"load ctree"
+    , eval(|int)
+    , !"import target/resources/share/interpreter-tests"
+    )
+    ; apply-test(
+      !"run strategy 1"
+    , eval(|int)
+    , !"<foo> 1"
+    , !2
+    )
+    // NOTE: old foo strategy is overridden by the one from the ctree!
+    ; apply-and-fail(
+      !"run strategy 2"
+    , eval(|int)
+    , !"<foo> 2"
+    )
+    ; apply-test(
+      !"run strategy 3"
+    , eval(|int)
+    , !"<foo> 3"
+    , !2
+    )
+
+  foo : 1 -> 2
+  foo : 3 -> 2
+
   // FIXME: overlays do not work in the interpreter
 
   // overlay-tests(|int) =

From tobivollebregt at gmail.com  Wed Feb 29 23:26:57 2012
From: tobivollebregt at gmail.com (Tobi Vollebregt)
Date: Wed, 29 Feb 2012 22:26:57 +0000
Subject: [Stratego-commits] SVN commit: StrategoXT - r24443 - in
	spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test:
	java/org/spoofax/interpreter/library/interpreter/test
	stratego/spoofax/bindings/inte...
Message-ID: <20120229222657.DD1EB108C00D@mx3.tudelft.nl>

Author: tvo
Date: Wed Feb 29 22:26:57 2012
New Revision: 24443
URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=24443&sc=1

Log:
test

Modified:
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/InterpreterLibraryTest.java
   spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/InterpreterLibraryTest.java
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/InterpreterLibraryTest.java	Wed Feb 29 22:16:52 2012	(r24442)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/java/org/spoofax/interpreter/library/interpreter/test/InterpreterLibraryTest.java	Wed Feb 29 22:26:57 2012	(r24443)
@@ -27,7 +27,7 @@
 	}
 
 	public void testInterpreter() throws IOException, InterpreterException {
-		interpTest("interpreter-tests", "(17,0)");
+		interpTest("interpreter-tests", "(19,0)");
 	}
 
 	public void interpTest(String test, String result) throws IOException, InterpreterException {

Modified: spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str
==============================================================================
--- spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str	Wed Feb 29 22:16:52 2012	(r24442)
+++ spoofax/trunk/spoofax/org.spoofax.interpreter.library.interpreter/src/test/stratego/spoofax/bindings/interpreter/interpreter-tests.str	Wed Feb 29 22:26:57 2012	(r24443)
@@ -108,11 +108,16 @@
       not(<foo> 10)
       // actual tests
     ; apply-test(
-      !"strategy definition"
+      !"strategy definition 1"
     , eval(|int)
     , !"foo : 2 -> 2"
     )
     ; apply-test(
+      !"strategy definition 2"
+    , eval(|int)
+    , !"bar : 2 -> 2"
+    )
+    ; apply-test(
       !"load ctree"
     , eval(|int)
     , !"import target/resources/share/interpreter-tests"
@@ -135,6 +140,12 @@
     , !"<foo> 3"
     , !2
     )
+    ; apply-test(
+      !"run strategy 4"
+    , eval(|int)
+    , !"<bar> 2"
+    , !2
+    )
 
   foo : 1 -> 2
   foo : 3 -> 2

