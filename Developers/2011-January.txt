From rob.vermaas at gmail.com  Tue Jan  4 19:25:45 2011
From: rob.vermaas at gmail.com (Rob Vermaas)
Date: Tue, 4 Jan 2011 19:25:45 +0100
Subject: [Stratego Developers] [Stratego-commits] SVN commit: StrategoXT
 - r21604 - in
 spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
 dynamicloading services stratego
In-Reply-To: <201101041807.p04I7oUR010985@proliant.st.ewi.tudelft.nl>
References: <201101041807.p04I7oUR010985@proliant.st.ewi.tudelft.nl>
Message-ID: <AANLkTin5EqWykU+1bMAorRG1PvkRXuZA3-aoRVGQZRtk@mail.gmail.com>

Hi Maartje,

this breaks the build of spoofax-imp on hydra:
http://hydra.nixos.org/build/846458

gr,
Rob

On Tue, Jan 4, 2011 at 19:07, Maartje de Jonge <m.dejonge at tudelft.nl> wrote:
> Author: MaartjeDeJonge
> Date: Tue Jan ?4 18:07:48 2011
> New Revision: 21604
> URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21604&sc=1
>
> Log:
> functionality for handling source code changes (no multifile support)
>
> Added:
> ? spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoRefactoring.java ? (contents, props changed)
> Modified:
> ? spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java
> ? spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java
> ? spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
>
> Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java
> ==============================================================================
> --- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java ? ? ?Tue Jan ?4 15:12:13 2011 ? ? ? ?(r21603)
> +++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java ? ? ?Tue Jan ?4 18:07:48 2011 ? ? ? ?(r21604)
> @@ -5,6 +5,7 @@
> ?import static org.strategoxt.imp.runtime.dynamicloading.TermReader.cons;
> ?import static org.strategoxt.imp.runtime.dynamicloading.TermReader.termContents;
>
> +import java.util.ArrayList;
> ?import java.util.LinkedHashSet;
> ?import java.util.Set;
>
> @@ -13,14 +14,23 @@
> ?import org.spoofax.interpreter.terms.IStrategoList;
> ?import org.spoofax.interpreter.terms.IStrategoTerm;
> ?import org.strategoxt.imp.runtime.EditorState;
> +import org.strategoxt.imp.runtime.Environment;
> ?import org.strategoxt.imp.runtime.parser.SGLRParseController;
> +import org.strategoxt.imp.runtime.parser.ast.AstNode;
> +import org.strategoxt.imp.runtime.parser.ast.AstNodeFactory;
> +import org.strategoxt.imp.runtime.parser.ast.ListAstNode;
> +import org.strategoxt.imp.runtime.parser.ast.SubListAstNode;
> ?import org.strategoxt.imp.runtime.services.BuilderMap;
> ?import org.strategoxt.imp.runtime.services.CustomStrategyBuilder;
> ?import org.strategoxt.imp.runtime.services.IBuilder;
> ?import org.strategoxt.imp.runtime.services.IBuilderMap;
> +import org.strategoxt.imp.runtime.services.NodeMapping;
> ?import org.strategoxt.imp.runtime.services.StrategoBuilder;
> ?import org.strategoxt.imp.runtime.services.StrategoBuilderListener;
> ?import org.strategoxt.imp.runtime.services.StrategoObserver;
> +import org.strategoxt.imp.runtime.services.StrategoRefactoring;
> +import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
> +import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
>
> ?/**
> ?* @author Lennart Kats <lennart add lclnet.nl>
> @@ -42,7 +52,7 @@
>
> ? ? ? ? ? ? ? ?addBuilders(d, controller, builders, null);
> ? ? ? ? ? ? ? ?addCustomStrategyBuilder(d, controller, builders, derivedFromEditor);
> -
> + ? ? ? ? ? ? ? addRefactorings(d, controller, builders);
> ? ? ? ? ? ? ? ?return new BuilderMap(builders);
> ? ? ? ?}
>
> @@ -85,12 +95,96 @@
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?builders.add(new StrategoBuilder(feedback, caption, strategy, openEditor, realTime, cursor, source, persistent, derivedFromEditor));
> ? ? ? ? ? ? ? ?}
> ? ? ? ?}
> +
> + ? ? ? private static void addRefactorings(Descriptor d, SGLRParseController controller, Set<IBuilder> builders) throws BadDescriptorException {
> +
> + ? ? ? ? ? ? ? StrategoObserver feedback = d.createService(StrategoObserver.class, controller);
> +
> + ? ? ? ? ? ? ? IStrategoAppl ppTableTerm = TermReader.findTerm(d.getDocument(), "PPTable");
> + ? ? ? ? ? ? ? String ppTable=null;
> + ? ? ? ? ? ? ? if (ppTableTerm !=null)
> + ? ? ? ? ? ? ? ? ? ? ? ppTable=termContents(termAt(ppTableTerm, 0));
> + ? ? ? ? ? ? ? IStrategoAppl ppStrategyTerm = TermReader.findTerm(d.getDocument(), "PrettyPrint");
> + ? ? ? ? ? ? ? String ppStrategy=null;
> + ? ? ? ? ? ? ? if(ppStrategyTerm!=null)
> + ? ? ? ? ? ? ? ? ? ? ? ppStrategy=termContents(termAt(ppStrategyTerm, 0));
> +
> + ? ? ? ? ? ? ? for (IStrategoAppl builder : collectTerms(d.getDocument(), "Refactoring")) {
> +
> + ? ? ? ? ? ? ? ? ? ? ? boolean isDefined = isDefinedOnSelection(builder);
> + ? ? ? ? ? ? ? ? ? ? ? if(isDefined){
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? String caption = termContents(termAt(builder, 0));
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? String strategy = termContents(termAt(builder, 2));
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? IStrategoList options = termAt(builder, 3);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? boolean cursor = false;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? boolean source = false;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? boolean meta = false;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? for (IStrategoTerm option : options.getAllSubterms()) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? String type = cons(option);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if (type.equals("Cursor")) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? cursor = true;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? } else if (type.equals("Source")) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? source = true;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? } else if (type.equals("Meta")) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? meta = true;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? } else if (
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? type.equals("OpenEditor") ||
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? type.equals("RealTime") ||
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? type.equals("Persistent")
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ){
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? Environment.logWarning("Unused builder annotation '"+ type + "' in '" + caption +"'");
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? else {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? throw new BadDescriptorException("Unknown builder annotation: " + type);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if (!meta || d.isDynamicallyLoaded()){
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? builders.add(
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? new StrategoRefactoring(
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? feedback,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? caption,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? strategy,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? cursor,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? source,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ppTable,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ppStrategy,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? controller.getResource()
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? )
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? );
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? }
> + ? ? ? }
>
> - ? ? ? private static void addDerivedBuilders(EditorState derivedFromEditor, Set<IBuilder> builders)
> + ? ? ? private static boolean isDefinedOnSelection(IStrategoAppl builder)
> ? ? ? ? ? ? ? ? ? ? ? ?throws BadDescriptorException {
> -
> - ? ? ? ? ? ? ? if (derivedFromEditor != null)
> + ? ? ? ? ? ? ? ArrayList<NodeMapping<String>> mappings=new ArrayList<NodeMapping<String>>();
> + ? ? ? ? ? ? ? for (IStrategoTerm semanticNode : termAt(builder,1).getAllSubterms()) {
> + ? ? ? ? ? ? ? ? ? ? ? NodeMapping<String> aMapping = NodeMapping.create(semanticNode, "");
> + ? ? ? ? ? ? ? ? ? ? ? mappings.add(aMapping);
> + ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? EditorState editor = EditorState.getActiveEditor();
> + ? ? ? ? ? ? ? IStrategoAstNode node= editor.getSelectionAst(false); SubListAstNode l;
> + ? ? ? ? ? ? ? IStrategoAstNode ancestor = StrategoTermPath.getMatchingAncestor(node, false);
> + ? ? ? ? ? ? ? IStrategoAstNode selectionNode = node;
> + ? ? ? ? ? ? ? boolean isMatch=false;
> + ? ? ? ? ? ? ? do {
> + ? ? ? ? ? ? ? ? ? ? ? isMatch= NodeMapping.getFirstAttribute(mappings, selectionNode.getConstructor(), selectionNode.getSort(), 0)!=null;
> + ? ? ? ? ? ? ? ? ? ? ? selectionNode=selectionNode.getParent();
> + ? ? ? ? ? ? ? } while(!isMatch && selectionNode!=null && selectionNode!=ancestor.getParent());
> + ? ? ? ? ? ? ? //Sublist with single element
> + ? ? ? ? ? ? ? if(!isMatch && (!(ancestor instanceof ListAstNode)) && ancestor.getParent() instanceof ListAstNode){
> + ? ? ? ? ? ? ? ? ? ? ? AstNode singleElementList= new AstNodeFactory().createSublist((ListAstNode)ancestor.getParent(), ancestor, ancestor, true);
> + ? ? ? ? ? ? ? ? ? ? ? isMatch= NodeMapping.getFirstAttribute(mappings, singleElementList.getConstructor(), singleElementList.getSort(), 0)!=null;
> + ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? return isMatch;
> + ? ? ? }
> +
> + ? ? ? private static void addDerivedBuilders(EditorState derivedFromEditor, Set<IBuilder> builders)
> + ? ? ? ? ? ? ? ? ? ? ? throws BadDescriptorException {
> + ? ? ? ? ? ? ? if (derivedFromEditor != null){
> ? ? ? ? ? ? ? ? ? ? ? ?addBuilders(derivedFromEditor.getDescriptor(), derivedFromEditor.getParseController(), builders, derivedFromEditor);
> + ? ? ? ? ? ? ? }
> ? ? ? ?}
>
> ? ? ? ?private static void addCustomStrategyBuilder(Descriptor d, SGLRParseController controller,
>
> Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoRefactoring.java
> ==============================================================================
> --- /dev/null ? 00:00:00 1970 ? (empty, because file is newly added)
> +++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoRefactoring.java ? ? ? Tue Jan ?4 18:07:48 2011 ? ? ? ?(r21604)
> @@ -0,0 +1,301 @@
> +package org.strategoxt.imp.runtime.services;
> +
> +import static org.spoofax.interpreter.core.Tools.asJavaString;
> +import static org.spoofax.interpreter.core.Tools.isTermAppl;
> +import static org.spoofax.interpreter.core.Tools.isTermTuple;
> +import static org.spoofax.interpreter.core.Tools.termAt;
> +
> +import java.io.PrintWriter;
> +import java.io.Writer;
> +import java.util.Map;
> +import java.util.WeakHashMap;
> +import java.util.concurrent.CancellationException;
> +
> +import org.eclipse.core.resources.IFile;
> +import org.eclipse.core.resources.IResource;
> +import org.eclipse.core.runtime.IProgressMonitor;
> +import org.eclipse.core.runtime.IStatus;
> +import org.eclipse.core.runtime.Status;
> +import org.eclipse.core.runtime.jobs.Job;
> +import org.eclipse.jface.dialogs.ErrorDialog;
> +import org.eclipse.jface.text.BadLocationException;
> +import org.spoofax.interpreter.core.InterpreterErrorExit;
> +import org.spoofax.interpreter.core.InterpreterException;
> +import org.spoofax.interpreter.core.InterpreterExit;
> +import org.spoofax.interpreter.core.Tools;
> +import org.spoofax.interpreter.core.UndefinedStrategyException;
> +import org.spoofax.interpreter.library.IOAgent;
> +import org.spoofax.interpreter.terms.IStrategoTerm;
> +import org.strategoxt.imp.generator.construct_textual_change_1_1;
> +import org.strategoxt.imp.runtime.EditorState;
> +import org.strategoxt.imp.runtime.Environment;
> +import org.strategoxt.imp.runtime.MonitorStateWatchDog;
> +import org.strategoxt.imp.runtime.RuntimeActivator;
> +import org.strategoxt.imp.runtime.dynamicloading.TermReader;
> +import org.strategoxt.imp.runtime.stratego.StrategoConsole;
> +import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
> +import org.strategoxt.imp.runtime.stratego.TextChangePrimitive;
> +import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
> +import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
> +import org.strategoxt.lang.Context;
> +import org.strategoxt.lang.Strategy;
> +
> +/**
> + * @author Maartje
> + */
> +public class StrategoRefactoring implements IBuilder { //TODO extract "AbstractStrategoBuilder"
> +
> + ? ? ? private final String ppTable;
> +
> + ? ? ? private final String ppStrategy;
> +
> + ? ? ? private final StrategoObserver observer;
> +
> + ? ? ? private final String caption;
> +
> + ? ? ? private String builderRule;
> +
> + ? ? ? private final IResource resource;
> +
> + ? ? ? // Since StrategoRefactorings are not persistent (per constructor of BuilderFactory)
> + ? ? ? // we maintain a map with running jobs in a static field
> + ? ? ? private static Map<String, Job> activeJobs = new WeakHashMap<String, Job>();
> +
> + ? ? ? private final boolean cursor;
> +
> + ? ? ? private final boolean source;
> +
> + ? ? ? /**
> + ? ? ? ?* Creates a new Stratego refactoring.
> + ? ? ? ?*/
> + ? ? ? public StrategoRefactoring(StrategoObserver observer, String caption, String builderRule,
> + ? ? ? ? ? ? ? ? ? ? ? boolean cursor, boolean source,
> + ? ? ? ? ? ? ? ? ? ? ? String ppTable, String ppStrategy,
> + ? ? ? ? ? ? ? ? ? ? ? IResource resource) { //TODO Check if the refactoring is defined for the given Sort-Constructor
> + ? ? ? ? ? ? ? this.cursor=cursor;
> + ? ? ? ? ? ? ? this.source=source;
> + ? ? ? ? ? ? ? this.ppTable=ppTable;
> + ? ? ? ? ? ? ? this.ppStrategy=ppStrategy;
> + ? ? ? ? ? ? ? this.observer = observer;
> + ? ? ? ? ? ? ? this.caption = caption;
> + ? ? ? ? ? ? ? this.builderRule = builderRule;
> + ? ? ? ? ? ? ? this.resource=resource;
> + ? ? ? }
> +
> + ? ? ? public String getCaption() {
> + ? ? ? ? ? ? ? return caption;
> + ? ? ? }
> +
> + ? ? ? public Object getData() {
> + ? ? ? ? ? ? ? // Data not used for normal builders
> + ? ? ? ? ? ? ? return null;
> + ? ? ? }
> +
> + ? ? ? public void setData(Object data) {
> + ? ? ? ? ? ? ? // Data not used for normal builders
> + ? ? ? }
> +
> + ? ? ? public String getBuilderRule() {
> + ? ? ? ? ? ? ? return builderRule;
> + ? ? ? }
> +
> + ? ? ? protected StrategoObserver getObserver() {
> + ? ? ? ? ? ? ? return observer;
> + ? ? ? }
> +
> + ? ? ? protected void setBuilderRule(String builderRule) {
> + ? ? ? ? ? ? ? this.builderRule = builderRule;
> + ? ? ? }
> +
> + ? ? ? public Job scheduleExecute(final EditorState editor, IStrategoAstNode node,
> + ? ? ? ? ? ? ? ? ? ? ? final IFile errorReportFile, final boolean isRebuild) {
> +
> + ? ? ? ? ? ? ? String displayCaption = caption.endsWith("...")
> + ? ? ? ? ? ? ? ? ? ? ? ? caption.substring(caption.length() - 3)
> + ? ? ? ? ? ? ? ? ? ? ? : caption;
> +
> + ? ? ? ? ? ? ? Job lastJob = activeJobs.get(caption);
> + ? ? ? ? ? ? ? if (lastJob != null && lastJob.getState() != Job.NONE) {
> + ? ? ? ? ? ? ? ? ? ? ? if (!isRebuild)
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? openError(editor, "Already running: " + displayCaption);
> + ? ? ? ? ? ? ? ? ? ? ? return null;
> + ? ? ? ? ? ? ? }
> +
> + ? ? ? ? ? ? ? if (node == null) {
> + ? ? ? ? ? ? ? ? ? ? ? node = editor.getSelectionAst(!cursor);
> + ? ? ? ? ? ? ? ? ? ? ? if (node == null) node = editor.getParseController().getCurrentAst();
> + ? ? ? ? ? ? ? }
> +
> + ? ? ? ? ? ? ? final IStrategoAstNode node2 = node;
> +
> + ? ? ? ? ? ? ? Job job = new Job("Executing " + displayCaption) {
> + ? ? ? ? ? ? ? ? ? ? ? @Override
> + ? ? ? ? ? ? ? ? ? ? ? protected IStatus run(IProgressMonitor monitor) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? MonitorStateWatchDog protector = new MonitorStateWatchDog(this, monitor, observer);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? try {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? execute(editor, node2, errorReportFile, isRebuild);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return monitor.isCanceled() ? Status.CANCEL_STATUS : Status.OK_STATUS;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? } finally {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? protector.endProtect();
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? };
> + ? ? ? ? ? ? ? job.setUser(true);
> + ? ? ? ? ? ? ? job.schedule();
> + ? ? ? ? ? ? ? activeJobs.put(caption, job);
> + ? ? ? ? ? ? ? return job;
> + ? ? ? }
> +
> + ? ? ? private void execute(EditorState editor, IStrategoAstNode node, IFile errorReportFile, boolean isRebuild) {
> + ? ? ? ? ? ? ? IStrategoTerm builderResult=null;
> + ? ? ? ? ? ? ? IStrategoTerm textReplaceTerm=null;
> + ? ? ? ? ? ? ? //IFile file = null;
> +
> + ? ? ? ? ? ? ? String resultText = null;
> + ? ? ? ? ? ? ? int startLocation = -1;
> + ? ? ? ? ? ? ? int endLocation = -1;
> +
> + ? ? ? ? ? ? ? observer.getLock().lock();
> + ? ? ? ? ? ? ? try {
> + ? ? ? ? ? ? ? ? ? ? ? try {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? builderResult = getBuilderResult(editor, node);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if(builderResult!=null){
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if (isInvalidResultTerm(builderResult)) { //TODO: multifile support [(fname, oldnode, newnode), ...]
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? Environment.logException("Illegal refactoring result (must be a tuple '(original-node, newnode)')");
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? openError(editor, "Illegal refactoring result (must be a tuple '(original-node, newnode)': )" + builderResult);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? textReplaceTerm=getTextReplacement(builderResult);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if(textReplaceTerm==null){
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? observer.reportRewritingFailed();
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? Environment.logException("Text-reconstruction unexpectedly fails, did you specify a valid pp-table?: \n"+ observer.getLog());
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if (!observer.isUpdateScheduled())
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? observer.scheduleUpdate(editor.getParseController());
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? //file = ...;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? startLocation=Tools.asJavaInt(termAt(textReplaceTerm, 0));
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? endLocation=Tools.asJavaInt(termAt(textReplaceTerm, 1));
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? resultText = asJavaString(termAt(textReplaceTerm, 2));
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? try {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? TextChangePrimitive.applyTextChange(editor, startLocation, endLocation, resultText); //TODO refactor text-change handling (in files)
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? } catch (BadLocationException e) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? ? ? ? ? } catch (InterpreterErrorExit e) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
> + ? ? ? ? ? ? ? ? ? ? ? } catch (UndefinedStrategyException e) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
> + ? ? ? ? ? ? ? ? ? ? ? } catch (InterpreterExit e) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
> + ? ? ? ? ? ? ? ? ? ? ? } catch (InterpreterException e) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
> + ? ? ? ? ? ? ? ? ? ? ? } catch (CancellationException e) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return;
> + ? ? ? ? ? ? ? ? ? ? ? } catch (RuntimeException e) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
> + ? ? ? ? ? ? ? ? ? ? ? } catch (Error e) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
> + ? ? ? ? ? ? ? ? ? ? ? }
> +
> + ? ? ? ? ? ? ? } finally {
> + ? ? ? ? ? ? ? ? ? ? ? observer.getLock().unlock();
> + ? ? ? ? ? ? ? }
> + ? ? ? }
> +
> + ? ? ? private IStrategoTerm getBuilderResult(EditorState editor, IStrategoAstNode node)
> + ? ? ? ? ? ? ? ? ? ? ? throws UndefinedStrategyException, InterpreterErrorExit, InterpreterExit,
> + ? ? ? ? ? ? ? ? ? ? ? InterpreterException {
> + ? ? ? ? ? ? ? IStrategoTerm resultTerm;
> + ? ? ? ? ? ? ? if (node == null) {
> + ? ? ? ? ? ? ? ? ? ? ? openError(editor, "Editor is still analyzing");
> + ? ? ? ? ? ? ? ? ? ? ? return null;
> + ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? resultTerm = invokeObserver(node);
> + ? ? ? ? ? ? ? if (resultTerm == null) {
> + ? ? ? ? ? ? ? ? ? ? ? observer.reportRewritingFailed();
> + ? ? ? ? ? ? ? ? ? ? ? Environment.logException("Builder failed:\n" + observer.getLog());
> + ? ? ? ? ? ? ? ? ? ? ? if (!observer.isUpdateScheduled())
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? observer.scheduleUpdate(editor.getParseController());
> + ? ? ? ? ? ? ? ? ? ? ? openError(editor, "Builder failed (see error log)");
> + ? ? ? ? ? ? ? ? ? ? ? return null;
> + ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? if (isTermAppl(resultTerm) && "None".equals(TermReader.cons(resultTerm))) {
> + ? ? ? ? ? ? ? ? ? ? ? return null;
> + ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? return resultTerm;
> + ? ? ? }
> +
> + ? ? ? private boolean isInvalidResultTerm(IStrategoTerm resultTerm) {
> + ? ? ? ? ? ? ? return
> + ? ? ? ? ? ? ? ? ? ? ? !isTermTuple(resultTerm) ||
> + ? ? ? ? ? ? ? ? ? ? ? !(termAt(resultTerm, 0) instanceof IWrappedAstNode) ||
> + ? ? ? ? ? ? ? ? ? ? ? resultTerm.getSubtermCount()!=2;
> + ? ? ? }
> +
> + ? ? ? private IStrategoTerm getTextReplacement(IStrategoTerm resultTuple) {
> + ? ? ? ? ? ? ? IStrategoTerm ppTableTerm;
> + ? ? ? ? ? ? ? if (ppTable == null)
> + ? ? ? ? ? ? ? ? ? ? ? ppTableTerm=observer.getRuntime().getCompiledContext().getFactory().makeString("");
> + ? ? ? ? ? ? ? else {
> + ? ? ? ? ? ? ? ? ? ? ? ppTableTerm = observer.invokeSilent(ppTable, null, resource);
> + ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? IStrategoTerm textreplace=construct_textual_change_1_1.instance.invoke(
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? observer.getRuntime().getCompiledContext(),
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? resultTuple,
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? new Strategy() {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? @Override
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? public IStrategoTerm invoke(Context context, IStrategoTerm current) {
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if (ppStrategy!=null)
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return observer.invokeSilent(ppStrategy, current, resource);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return null;
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? },
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ppTableTerm
> + ? ? ? ? ? ? ? ? ? ? ? );
> + ? ? ? ? ? ? ? return textreplace;
> + ? ? ? }
> +
> + ? ? ? protected IStrategoTerm invokeObserver(IStrategoAstNode node) throws UndefinedStrategyException,
> + ? ? ? ? ? ? ? ? ? ? ? InterpreterErrorExit, InterpreterExit, InterpreterException {
> + ? ? ? ? ? ? ? node = StrategoTermPath.getMatchingAncestor(node, false);
> + ? ? ? ? ? ? ? IStrategoTerm inputTerm = observer.makeInputTerm(node, true, source);
> + ? ? ? ? ? ? ? IStrategoTerm result = observer.invoke(builderRule, inputTerm, node.getResource());
> + ? ? ? ? ? ? ? return result;
> + ? ? ? }
> +
> + ? ? ? private void reportGenericException(EditorState editor, Throwable e) {
> + ? ? ? ? ? ? ? boolean isDynamic = editor.getDescriptor().isDynamicallyLoaded();
> + ? ? ? ? ? ? ? Environment.logException("Builder failed for " + (isDynamic ? "" : "non-") + "dynamically loaded editor", e);
> + ? ? ? ? ? ? ? if (isDynamic) {
> + ? ? ? ? ? ? ? ? ? ? ? Writer writer = observer.getRuntime().getIOAgent().getWriter(IOAgent.CONST_STDERR);
> + ? ? ? ? ? ? ? ? ? ? ? PrintWriter printWriter = new PrintWriter(writer);
> + ? ? ? ? ? ? ? ? ? ? ? e.printStackTrace(printWriter);
> + ? ? ? ? ? ? ? ? ? ? ? printWriter.flush();
> + ? ? ? ? ? ? ? ? ? ? ? StrategoConsole.activateConsole();
> + ? ? ? ? ? ? ? }
> +
> + ? ? ? ? ? ? ? if (EditorState.isUIThread()) {
> + ? ? ? ? ? ? ? ? ? ? ? // Only show if builder runs interactively (and not from the StrategoBuilderListener background builder)
> + ? ? ? ? ? ? ? ? ? ? ? String message = e.getLocalizedMessage() == null ? e.getMessage() : e.getLocalizedMessage();
> + ? ? ? ? ? ? ? ? ? ? ? Status status = new Status(IStatus.ERROR, RuntimeActivator.PLUGIN_ID, message, e);
> + ? ? ? ? ? ? ? ? ? ? ? ErrorDialog.openError(editor.getEditor().getSite().getShell(), caption, null, status);
> + ? ? ? ? ? ? ? }
> + ? ? ? }
> +
> + ? ? ? private void openError(EditorState editor, String message) {
> + ? ? ? ? ? ? ? try {
> + ? ? ? ? ? ? ? ? ? ? ? Status status = new Status(IStatus.ERROR, RuntimeActivator.PLUGIN_ID, message);
> + ? ? ? ? ? ? ? ? ? ? ? ErrorDialog.openError(editor.getEditor().getSite().getShell(),
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? caption, null, status);
> + ? ? ? ? ? ? ? } catch (RuntimeException e) {
> + ? ? ? ? ? ? ? ? ? ? ? Environment.logException("Problem reporting error: " + message);
> + ? ? ? ? ? ? ? }
> + ? ? ? }
> +
> + ? ? ? @Override
> + ? ? ? public String toString() {
> + ? ? ? ? ? ? ? return "Refactoring: " + builderRule + " - " + caption;
> + ? ? ? }
> +}
>
> Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java
> ==============================================================================
> --- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java ? ? ? Tue Jan ?4 15:12:13 2011 ? ? ? ?(r21603)
> +++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java ? ? ? Tue Jan ?4 18:07:48 2011 ? ? ? ?(r21604)
> @@ -17,7 +17,7 @@
> ? ? ? ?@Override
> ? ? ? ?protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
> ? ? ? ? ? ? ? ?String result = node.getNode().yield();
> - ? ? ? ? ? ? ? result = AutoEditStrategy.setIndentation(result, "");
> + ? ? ? ? ? ? ? //result = AutoEditStrategy.setIndentation(result, "");
> ? ? ? ? ? ? ? ?return env.getFactory().makeString(result);
> ? ? ? ?}
>
>
> Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
> ==============================================================================
> --- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java ? ? ? Tue Jan ?4 15:12:13 2011 ? ? ? ?(r21603)
> +++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java ? ? ? Tue Jan ?4 18:07:48 2011 ? ? ? ?(r21604)
> @@ -16,6 +16,7 @@
> ?import org.spoofax.interpreter.terms.IStrategoTerm;
> ?import org.strategoxt.imp.runtime.EditorState;
> ?import org.strategoxt.imp.runtime.Environment;
> +import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
> ?import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
> ?import org.strategoxt.lang.terms.StrategoInt;
> ?import org.strategoxt.lang.terms.StrategoTuple;
> @@ -67,7 +68,17 @@
> ? ? ? ? ? ? ? ?}
> ? ? ? ?}
>
> - ? ? ? private String applyTextChange(EditorState editor, final int position_start, final int position_end,
> + ? ? ? public static String applyTextChange(EditorState editor,IStrategoAstNode node,
> + ? ? ? ? ? ? ? ? ? ? ? final String text) throws BadLocationException {
> + ? ? ? ? ? ? ? return applyTextChange(
> + ? ? ? ? ? ? ? ? ? ? ? editor,
> + ? ? ? ? ? ? ? ? ? ? ? node.getLeftIToken().getStartOffset(),
> + ? ? ? ? ? ? ? ? ? ? ? node.getRightIToken().getEndOffset(),
> + ? ? ? ? ? ? ? ? ? ? ? text
> + ? ? ? ? ? ? ? );
> + ? ? ? }
> +
> + ? ? ? public static String applyTextChange(EditorState editor, final int position_start, final int position_end,
> ? ? ? ? ? ? ? ? ? ? ? ?final String text) throws BadLocationException {
> ? ? ? ? ? ? ? ?final IDocument doc = editor.getDocument();
> ? ? ? ? ? ? ? ?Job job = new UIJob("apply textchange") {
> @@ -75,7 +86,7 @@
> ? ? ? ? ? ? ? ? ? ? ? ?@Override
> ? ? ? ? ? ? ? ? ? ? ? ?public IStatus runInUIThread(IProgressMonitor monitor) {
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?try {
> - ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? doc.replace(position_start, position_end+1-position_start, text);
> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? doc.replace(position_start, position_end-position_start, text);
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?} catch (BadLocationException e) {
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?// TODO Auto-generated catch block
> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?Environment.logException("Bad location of the replaced fragment", e);
> _______________________________________________
> Stratego-commits mailing list
> Stratego-commits at strategoxt.org
> https://mailman.st.ewi.tudelft.nl/listinfo/stratego-commits
>



-- 
Rob Vermaas

[email] rob.vermaas at gmail.com


From rob.vermaas at gmail.com  Tue Jan  4 19:31:21 2011
From: rob.vermaas at gmail.com (Rob Vermaas)
Date: Tue, 4 Jan 2011 19:31:21 +0100
Subject: [Stratego Developers] [Stratego-commits] SVN commit: StrategoXT
 - r21604 - in
 spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime:
 dynamicloading services stratego
In-Reply-To: <AANLkTin5EqWykU+1bMAorRG1PvkRXuZA3-aoRVGQZRtk@mail.gmail.com>
References: <201101041807.p04I7oUR010985@proliant.st.ewi.tudelft.nl>
	<AANLkTin5EqWykU+1bMAorRG1PvkRXuZA3-aoRVGQZRtk@mail.gmail.com>
Message-ID: <AANLkTi=4HaAw7XGCcxvL-D4vnnehJxX8W9EPqhK3OiPM@mail.gmail.com>

My mistake, it was fixed already :-)

gr,
Rob

On Tue, Jan 4, 2011 at 19:25, Rob Vermaas <rob.vermaas at gmail.com> wrote:
> Hi Maartje,
>
> this breaks the build of spoofax-imp on hydra:
> http://hydra.nixos.org/build/846458
>
> gr,
> Rob
>
> On Tue, Jan 4, 2011 at 19:07, Maartje de Jonge <m.dejonge at tudelft.nl> wrote:
>> Author: MaartjeDeJonge
>> Date: Tue Jan ?4 18:07:48 2011
>> New Revision: 21604
>> URL: https://svn.strategoxt.org/websvn/StrategoXT/?rev=21604&sc=1
>>
>> Log:
>> functionality for handling source code changes (no multifile support)
>>
>> Added:
>> ? spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoRefactoring.java ? (contents, props changed)
>> Modified:
>> ? spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java
>> ? spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java
>> ? spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
>>
>> Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java
>> ==============================================================================
>> --- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java ? ? ?Tue Jan ?4 15:12:13 2011 ? ? ? ?(r21603)
>> +++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/dynamicloading/BuilderFactory.java ? ? ?Tue Jan ?4 18:07:48 2011 ? ? ? ?(r21604)
>> @@ -5,6 +5,7 @@
>> ?import static org.strategoxt.imp.runtime.dynamicloading.TermReader.cons;
>> ?import static org.strategoxt.imp.runtime.dynamicloading.TermReader.termContents;
>>
>> +import java.util.ArrayList;
>> ?import java.util.LinkedHashSet;
>> ?import java.util.Set;
>>
>> @@ -13,14 +14,23 @@
>> ?import org.spoofax.interpreter.terms.IStrategoList;
>> ?import org.spoofax.interpreter.terms.IStrategoTerm;
>> ?import org.strategoxt.imp.runtime.EditorState;
>> +import org.strategoxt.imp.runtime.Environment;
>> ?import org.strategoxt.imp.runtime.parser.SGLRParseController;
>> +import org.strategoxt.imp.runtime.parser.ast.AstNode;
>> +import org.strategoxt.imp.runtime.parser.ast.AstNodeFactory;
>> +import org.strategoxt.imp.runtime.parser.ast.ListAstNode;
>> +import org.strategoxt.imp.runtime.parser.ast.SubListAstNode;
>> ?import org.strategoxt.imp.runtime.services.BuilderMap;
>> ?import org.strategoxt.imp.runtime.services.CustomStrategyBuilder;
>> ?import org.strategoxt.imp.runtime.services.IBuilder;
>> ?import org.strategoxt.imp.runtime.services.IBuilderMap;
>> +import org.strategoxt.imp.runtime.services.NodeMapping;
>> ?import org.strategoxt.imp.runtime.services.StrategoBuilder;
>> ?import org.strategoxt.imp.runtime.services.StrategoBuilderListener;
>> ?import org.strategoxt.imp.runtime.services.StrategoObserver;
>> +import org.strategoxt.imp.runtime.services.StrategoRefactoring;
>> +import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
>> +import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
>>
>> ?/**
>> ?* @author Lennart Kats <lennart add lclnet.nl>
>> @@ -42,7 +52,7 @@
>>
>> ? ? ? ? ? ? ? ?addBuilders(d, controller, builders, null);
>> ? ? ? ? ? ? ? ?addCustomStrategyBuilder(d, controller, builders, derivedFromEditor);
>> -
>> + ? ? ? ? ? ? ? addRefactorings(d, controller, builders);
>> ? ? ? ? ? ? ? ?return new BuilderMap(builders);
>> ? ? ? ?}
>>
>> @@ -85,12 +95,96 @@
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?builders.add(new StrategoBuilder(feedback, caption, strategy, openEditor, realTime, cursor, source, persistent, derivedFromEditor));
>> ? ? ? ? ? ? ? ?}
>> ? ? ? ?}
>> +
>> + ? ? ? private static void addRefactorings(Descriptor d, SGLRParseController controller, Set<IBuilder> builders) throws BadDescriptorException {
>> +
>> + ? ? ? ? ? ? ? StrategoObserver feedback = d.createService(StrategoObserver.class, controller);
>> +
>> + ? ? ? ? ? ? ? IStrategoAppl ppTableTerm = TermReader.findTerm(d.getDocument(), "PPTable");
>> + ? ? ? ? ? ? ? String ppTable=null;
>> + ? ? ? ? ? ? ? if (ppTableTerm !=null)
>> + ? ? ? ? ? ? ? ? ? ? ? ppTable=termContents(termAt(ppTableTerm, 0));
>> + ? ? ? ? ? ? ? IStrategoAppl ppStrategyTerm = TermReader.findTerm(d.getDocument(), "PrettyPrint");
>> + ? ? ? ? ? ? ? String ppStrategy=null;
>> + ? ? ? ? ? ? ? if(ppStrategyTerm!=null)
>> + ? ? ? ? ? ? ? ? ? ? ? ppStrategy=termContents(termAt(ppStrategyTerm, 0));
>> +
>> + ? ? ? ? ? ? ? for (IStrategoAppl builder : collectTerms(d.getDocument(), "Refactoring")) {
>> +
>> + ? ? ? ? ? ? ? ? ? ? ? boolean isDefined = isDefinedOnSelection(builder);
>> + ? ? ? ? ? ? ? ? ? ? ? if(isDefined){
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? String caption = termContents(termAt(builder, 0));
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? String strategy = termContents(termAt(builder, 2));
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? IStrategoList options = termAt(builder, 3);
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? boolean cursor = false;
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? boolean source = false;
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? boolean meta = false;
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? for (IStrategoTerm option : options.getAllSubterms()) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? String type = cons(option);
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if (type.equals("Cursor")) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? cursor = true;
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? } else if (type.equals("Source")) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? source = true;
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? } else if (type.equals("Meta")) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? meta = true;
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? } else if (
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? type.equals("OpenEditor") ||
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? type.equals("RealTime") ||
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? type.equals("Persistent")
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ){
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? Environment.logWarning("Unused builder annotation '"+ type + "' in '" + caption +"'");
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? else {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? throw new BadDescriptorException("Unknown builder annotation: " + type);
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if (!meta || d.isDynamicallyLoaded()){
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? builders.add(
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? new StrategoRefactoring(
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? feedback,
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? caption,
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? strategy,
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? cursor,
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? source,
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ppTable,
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ppStrategy,
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? controller.getResource()
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? )
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? );
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? }
>> + ? ? ? }
>>
>> - ? ? ? private static void addDerivedBuilders(EditorState derivedFromEditor, Set<IBuilder> builders)
>> + ? ? ? private static boolean isDefinedOnSelection(IStrategoAppl builder)
>> ? ? ? ? ? ? ? ? ? ? ? ?throws BadDescriptorException {
>> -
>> - ? ? ? ? ? ? ? if (derivedFromEditor != null)
>> + ? ? ? ? ? ? ? ArrayList<NodeMapping<String>> mappings=new ArrayList<NodeMapping<String>>();
>> + ? ? ? ? ? ? ? for (IStrategoTerm semanticNode : termAt(builder,1).getAllSubterms()) {
>> + ? ? ? ? ? ? ? ? ? ? ? NodeMapping<String> aMapping = NodeMapping.create(semanticNode, "");
>> + ? ? ? ? ? ? ? ? ? ? ? mappings.add(aMapping);
>> + ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? EditorState editor = EditorState.getActiveEditor();
>> + ? ? ? ? ? ? ? IStrategoAstNode node= editor.getSelectionAst(false); SubListAstNode l;
>> + ? ? ? ? ? ? ? IStrategoAstNode ancestor = StrategoTermPath.getMatchingAncestor(node, false);
>> + ? ? ? ? ? ? ? IStrategoAstNode selectionNode = node;
>> + ? ? ? ? ? ? ? boolean isMatch=false;
>> + ? ? ? ? ? ? ? do {
>> + ? ? ? ? ? ? ? ? ? ? ? isMatch= NodeMapping.getFirstAttribute(mappings, selectionNode.getConstructor(), selectionNode.getSort(), 0)!=null;
>> + ? ? ? ? ? ? ? ? ? ? ? selectionNode=selectionNode.getParent();
>> + ? ? ? ? ? ? ? } while(!isMatch && selectionNode!=null && selectionNode!=ancestor.getParent());
>> + ? ? ? ? ? ? ? //Sublist with single element
>> + ? ? ? ? ? ? ? if(!isMatch && (!(ancestor instanceof ListAstNode)) && ancestor.getParent() instanceof ListAstNode){
>> + ? ? ? ? ? ? ? ? ? ? ? AstNode singleElementList= new AstNodeFactory().createSublist((ListAstNode)ancestor.getParent(), ancestor, ancestor, true);
>> + ? ? ? ? ? ? ? ? ? ? ? isMatch= NodeMapping.getFirstAttribute(mappings, singleElementList.getConstructor(), singleElementList.getSort(), 0)!=null;
>> + ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? return isMatch;
>> + ? ? ? }
>> +
>> + ? ? ? private static void addDerivedBuilders(EditorState derivedFromEditor, Set<IBuilder> builders)
>> + ? ? ? ? ? ? ? ? ? ? ? throws BadDescriptorException {
>> + ? ? ? ? ? ? ? if (derivedFromEditor != null){
>> ? ? ? ? ? ? ? ? ? ? ? ?addBuilders(derivedFromEditor.getDescriptor(), derivedFromEditor.getParseController(), builders, derivedFromEditor);
>> + ? ? ? ? ? ? ? }
>> ? ? ? ?}
>>
>> ? ? ? ?private static void addCustomStrategyBuilder(Descriptor d, SGLRParseController controller,
>>
>> Added: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoRefactoring.java
>> ==============================================================================
>> --- /dev/null ? 00:00:00 1970 ? (empty, because file is newly added)
>> +++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/services/StrategoRefactoring.java ? ? ? Tue Jan ?4 18:07:48 2011 ? ? ? ?(r21604)
>> @@ -0,0 +1,301 @@
>> +package org.strategoxt.imp.runtime.services;
>> +
>> +import static org.spoofax.interpreter.core.Tools.asJavaString;
>> +import static org.spoofax.interpreter.core.Tools.isTermAppl;
>> +import static org.spoofax.interpreter.core.Tools.isTermTuple;
>> +import static org.spoofax.interpreter.core.Tools.termAt;
>> +
>> +import java.io.PrintWriter;
>> +import java.io.Writer;
>> +import java.util.Map;
>> +import java.util.WeakHashMap;
>> +import java.util.concurrent.CancellationException;
>> +
>> +import org.eclipse.core.resources.IFile;
>> +import org.eclipse.core.resources.IResource;
>> +import org.eclipse.core.runtime.IProgressMonitor;
>> +import org.eclipse.core.runtime.IStatus;
>> +import org.eclipse.core.runtime.Status;
>> +import org.eclipse.core.runtime.jobs.Job;
>> +import org.eclipse.jface.dialogs.ErrorDialog;
>> +import org.eclipse.jface.text.BadLocationException;
>> +import org.spoofax.interpreter.core.InterpreterErrorExit;
>> +import org.spoofax.interpreter.core.InterpreterException;
>> +import org.spoofax.interpreter.core.InterpreterExit;
>> +import org.spoofax.interpreter.core.Tools;
>> +import org.spoofax.interpreter.core.UndefinedStrategyException;
>> +import org.spoofax.interpreter.library.IOAgent;
>> +import org.spoofax.interpreter.terms.IStrategoTerm;
>> +import org.strategoxt.imp.generator.construct_textual_change_1_1;
>> +import org.strategoxt.imp.runtime.EditorState;
>> +import org.strategoxt.imp.runtime.Environment;
>> +import org.strategoxt.imp.runtime.MonitorStateWatchDog;
>> +import org.strategoxt.imp.runtime.RuntimeActivator;
>> +import org.strategoxt.imp.runtime.dynamicloading.TermReader;
>> +import org.strategoxt.imp.runtime.stratego.StrategoConsole;
>> +import org.strategoxt.imp.runtime.stratego.StrategoTermPath;
>> +import org.strategoxt.imp.runtime.stratego.TextChangePrimitive;
>> +import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
>> +import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
>> +import org.strategoxt.lang.Context;
>> +import org.strategoxt.lang.Strategy;
>> +
>> +/**
>> + * @author Maartje
>> + */
>> +public class StrategoRefactoring implements IBuilder { //TODO extract "AbstractStrategoBuilder"
>> +
>> + ? ? ? private final String ppTable;
>> +
>> + ? ? ? private final String ppStrategy;
>> +
>> + ? ? ? private final StrategoObserver observer;
>> +
>> + ? ? ? private final String caption;
>> +
>> + ? ? ? private String builderRule;
>> +
>> + ? ? ? private final IResource resource;
>> +
>> + ? ? ? // Since StrategoRefactorings are not persistent (per constructor of BuilderFactory)
>> + ? ? ? // we maintain a map with running jobs in a static field
>> + ? ? ? private static Map<String, Job> activeJobs = new WeakHashMap<String, Job>();
>> +
>> + ? ? ? private final boolean cursor;
>> +
>> + ? ? ? private final boolean source;
>> +
>> + ? ? ? /**
>> + ? ? ? ?* Creates a new Stratego refactoring.
>> + ? ? ? ?*/
>> + ? ? ? public StrategoRefactoring(StrategoObserver observer, String caption, String builderRule,
>> + ? ? ? ? ? ? ? ? ? ? ? boolean cursor, boolean source,
>> + ? ? ? ? ? ? ? ? ? ? ? String ppTable, String ppStrategy,
>> + ? ? ? ? ? ? ? ? ? ? ? IResource resource) { //TODO Check if the refactoring is defined for the given Sort-Constructor
>> + ? ? ? ? ? ? ? this.cursor=cursor;
>> + ? ? ? ? ? ? ? this.source=source;
>> + ? ? ? ? ? ? ? this.ppTable=ppTable;
>> + ? ? ? ? ? ? ? this.ppStrategy=ppStrategy;
>> + ? ? ? ? ? ? ? this.observer = observer;
>> + ? ? ? ? ? ? ? this.caption = caption;
>> + ? ? ? ? ? ? ? this.builderRule = builderRule;
>> + ? ? ? ? ? ? ? this.resource=resource;
>> + ? ? ? }
>> +
>> + ? ? ? public String getCaption() {
>> + ? ? ? ? ? ? ? return caption;
>> + ? ? ? }
>> +
>> + ? ? ? public Object getData() {
>> + ? ? ? ? ? ? ? // Data not used for normal builders
>> + ? ? ? ? ? ? ? return null;
>> + ? ? ? }
>> +
>> + ? ? ? public void setData(Object data) {
>> + ? ? ? ? ? ? ? // Data not used for normal builders
>> + ? ? ? }
>> +
>> + ? ? ? public String getBuilderRule() {
>> + ? ? ? ? ? ? ? return builderRule;
>> + ? ? ? }
>> +
>> + ? ? ? protected StrategoObserver getObserver() {
>> + ? ? ? ? ? ? ? return observer;
>> + ? ? ? }
>> +
>> + ? ? ? protected void setBuilderRule(String builderRule) {
>> + ? ? ? ? ? ? ? this.builderRule = builderRule;
>> + ? ? ? }
>> +
>> + ? ? ? public Job scheduleExecute(final EditorState editor, IStrategoAstNode node,
>> + ? ? ? ? ? ? ? ? ? ? ? final IFile errorReportFile, final boolean isRebuild) {
>> +
>> + ? ? ? ? ? ? ? String displayCaption = caption.endsWith("...")
>> + ? ? ? ? ? ? ? ? ? ? ? ? caption.substring(caption.length() - 3)
>> + ? ? ? ? ? ? ? ? ? ? ? : caption;
>> +
>> + ? ? ? ? ? ? ? Job lastJob = activeJobs.get(caption);
>> + ? ? ? ? ? ? ? if (lastJob != null && lastJob.getState() != Job.NONE) {
>> + ? ? ? ? ? ? ? ? ? ? ? if (!isRebuild)
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? openError(editor, "Already running: " + displayCaption);
>> + ? ? ? ? ? ? ? ? ? ? ? return null;
>> + ? ? ? ? ? ? ? }
>> +
>> + ? ? ? ? ? ? ? if (node == null) {
>> + ? ? ? ? ? ? ? ? ? ? ? node = editor.getSelectionAst(!cursor);
>> + ? ? ? ? ? ? ? ? ? ? ? if (node == null) node = editor.getParseController().getCurrentAst();
>> + ? ? ? ? ? ? ? }
>> +
>> + ? ? ? ? ? ? ? final IStrategoAstNode node2 = node;
>> +
>> + ? ? ? ? ? ? ? Job job = new Job("Executing " + displayCaption) {
>> + ? ? ? ? ? ? ? ? ? ? ? @Override
>> + ? ? ? ? ? ? ? ? ? ? ? protected IStatus run(IProgressMonitor monitor) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? MonitorStateWatchDog protector = new MonitorStateWatchDog(this, monitor, observer);
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? try {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? execute(editor, node2, errorReportFile, isRebuild);
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return monitor.isCanceled() ? Status.CANCEL_STATUS : Status.OK_STATUS;
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? } finally {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? protector.endProtect();
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? };
>> + ? ? ? ? ? ? ? job.setUser(true);
>> + ? ? ? ? ? ? ? job.schedule();
>> + ? ? ? ? ? ? ? activeJobs.put(caption, job);
>> + ? ? ? ? ? ? ? return job;
>> + ? ? ? }
>> +
>> + ? ? ? private void execute(EditorState editor, IStrategoAstNode node, IFile errorReportFile, boolean isRebuild) {
>> + ? ? ? ? ? ? ? IStrategoTerm builderResult=null;
>> + ? ? ? ? ? ? ? IStrategoTerm textReplaceTerm=null;
>> + ? ? ? ? ? ? ? //IFile file = null;
>> +
>> + ? ? ? ? ? ? ? String resultText = null;
>> + ? ? ? ? ? ? ? int startLocation = -1;
>> + ? ? ? ? ? ? ? int endLocation = -1;
>> +
>> + ? ? ? ? ? ? ? observer.getLock().lock();
>> + ? ? ? ? ? ? ? try {
>> + ? ? ? ? ? ? ? ? ? ? ? try {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? builderResult = getBuilderResult(editor, node);
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if(builderResult!=null){
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if (isInvalidResultTerm(builderResult)) { //TODO: multifile support [(fname, oldnode, newnode), ...]
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? Environment.logException("Illegal refactoring result (must be a tuple '(original-node, newnode)')");
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? openError(editor, "Illegal refactoring result (must be a tuple '(original-node, newnode)': )" + builderResult);
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return;
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? textReplaceTerm=getTextReplacement(builderResult);
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if(textReplaceTerm==null){
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? observer.reportRewritingFailed();
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? Environment.logException("Text-reconstruction unexpectedly fails, did you specify a valid pp-table?: \n"+ observer.getLog());
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if (!observer.isUpdateScheduled())
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? observer.scheduleUpdate(editor.getParseController());
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return;
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? //file = ...;
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? startLocation=Tools.asJavaInt(termAt(textReplaceTerm, 0));
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? endLocation=Tools.asJavaInt(termAt(textReplaceTerm, 1));
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? resultText = asJavaString(termAt(textReplaceTerm, 2));
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? try {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? TextChangePrimitive.applyTextChange(editor, startLocation, endLocation, resultText); //TODO refactor text-change handling (in files)
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? } catch (BadLocationException e) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? ? ? ? ? } catch (InterpreterErrorExit e) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
>> + ? ? ? ? ? ? ? ? ? ? ? } catch (UndefinedStrategyException e) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
>> + ? ? ? ? ? ? ? ? ? ? ? } catch (InterpreterExit e) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
>> + ? ? ? ? ? ? ? ? ? ? ? } catch (InterpreterException e) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
>> + ? ? ? ? ? ? ? ? ? ? ? } catch (CancellationException e) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return;
>> + ? ? ? ? ? ? ? ? ? ? ? } catch (RuntimeException e) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
>> + ? ? ? ? ? ? ? ? ? ? ? } catch (Error e) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? reportGenericException(editor, e);
>> + ? ? ? ? ? ? ? ? ? ? ? }
>> +
>> + ? ? ? ? ? ? ? } finally {
>> + ? ? ? ? ? ? ? ? ? ? ? observer.getLock().unlock();
>> + ? ? ? ? ? ? ? }
>> + ? ? ? }
>> +
>> + ? ? ? private IStrategoTerm getBuilderResult(EditorState editor, IStrategoAstNode node)
>> + ? ? ? ? ? ? ? ? ? ? ? throws UndefinedStrategyException, InterpreterErrorExit, InterpreterExit,
>> + ? ? ? ? ? ? ? ? ? ? ? InterpreterException {
>> + ? ? ? ? ? ? ? IStrategoTerm resultTerm;
>> + ? ? ? ? ? ? ? if (node == null) {
>> + ? ? ? ? ? ? ? ? ? ? ? openError(editor, "Editor is still analyzing");
>> + ? ? ? ? ? ? ? ? ? ? ? return null;
>> + ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? resultTerm = invokeObserver(node);
>> + ? ? ? ? ? ? ? if (resultTerm == null) {
>> + ? ? ? ? ? ? ? ? ? ? ? observer.reportRewritingFailed();
>> + ? ? ? ? ? ? ? ? ? ? ? Environment.logException("Builder failed:\n" + observer.getLog());
>> + ? ? ? ? ? ? ? ? ? ? ? if (!observer.isUpdateScheduled())
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? observer.scheduleUpdate(editor.getParseController());
>> + ? ? ? ? ? ? ? ? ? ? ? openError(editor, "Builder failed (see error log)");
>> + ? ? ? ? ? ? ? ? ? ? ? return null;
>> + ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? if (isTermAppl(resultTerm) && "None".equals(TermReader.cons(resultTerm))) {
>> + ? ? ? ? ? ? ? ? ? ? ? return null;
>> + ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? return resultTerm;
>> + ? ? ? }
>> +
>> + ? ? ? private boolean isInvalidResultTerm(IStrategoTerm resultTerm) {
>> + ? ? ? ? ? ? ? return
>> + ? ? ? ? ? ? ? ? ? ? ? !isTermTuple(resultTerm) ||
>> + ? ? ? ? ? ? ? ? ? ? ? !(termAt(resultTerm, 0) instanceof IWrappedAstNode) ||
>> + ? ? ? ? ? ? ? ? ? ? ? resultTerm.getSubtermCount()!=2;
>> + ? ? ? }
>> +
>> + ? ? ? private IStrategoTerm getTextReplacement(IStrategoTerm resultTuple) {
>> + ? ? ? ? ? ? ? IStrategoTerm ppTableTerm;
>> + ? ? ? ? ? ? ? if (ppTable == null)
>> + ? ? ? ? ? ? ? ? ? ? ? ppTableTerm=observer.getRuntime().getCompiledContext().getFactory().makeString("");
>> + ? ? ? ? ? ? ? else {
>> + ? ? ? ? ? ? ? ? ? ? ? ppTableTerm = observer.invokeSilent(ppTable, null, resource);
>> + ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? IStrategoTerm textreplace=construct_textual_change_1_1.instance.invoke(
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? observer.getRuntime().getCompiledContext(),
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? resultTuple,
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? new Strategy() {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? @Override
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? public IStrategoTerm invoke(Context context, IStrategoTerm current) {
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? if (ppStrategy!=null)
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return observer.invokeSilent(ppStrategy, current, resource);
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? return null;
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? }
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? },
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ppTableTerm
>> + ? ? ? ? ? ? ? ? ? ? ? );
>> + ? ? ? ? ? ? ? return textreplace;
>> + ? ? ? }
>> +
>> + ? ? ? protected IStrategoTerm invokeObserver(IStrategoAstNode node) throws UndefinedStrategyException,
>> + ? ? ? ? ? ? ? ? ? ? ? InterpreterErrorExit, InterpreterExit, InterpreterException {
>> + ? ? ? ? ? ? ? node = StrategoTermPath.getMatchingAncestor(node, false);
>> + ? ? ? ? ? ? ? IStrategoTerm inputTerm = observer.makeInputTerm(node, true, source);
>> + ? ? ? ? ? ? ? IStrategoTerm result = observer.invoke(builderRule, inputTerm, node.getResource());
>> + ? ? ? ? ? ? ? return result;
>> + ? ? ? }
>> +
>> + ? ? ? private void reportGenericException(EditorState editor, Throwable e) {
>> + ? ? ? ? ? ? ? boolean isDynamic = editor.getDescriptor().isDynamicallyLoaded();
>> + ? ? ? ? ? ? ? Environment.logException("Builder failed for " + (isDynamic ? "" : "non-") + "dynamically loaded editor", e);
>> + ? ? ? ? ? ? ? if (isDynamic) {
>> + ? ? ? ? ? ? ? ? ? ? ? Writer writer = observer.getRuntime().getIOAgent().getWriter(IOAgent.CONST_STDERR);
>> + ? ? ? ? ? ? ? ? ? ? ? PrintWriter printWriter = new PrintWriter(writer);
>> + ? ? ? ? ? ? ? ? ? ? ? e.printStackTrace(printWriter);
>> + ? ? ? ? ? ? ? ? ? ? ? printWriter.flush();
>> + ? ? ? ? ? ? ? ? ? ? ? StrategoConsole.activateConsole();
>> + ? ? ? ? ? ? ? }
>> +
>> + ? ? ? ? ? ? ? if (EditorState.isUIThread()) {
>> + ? ? ? ? ? ? ? ? ? ? ? // Only show if builder runs interactively (and not from the StrategoBuilderListener background builder)
>> + ? ? ? ? ? ? ? ? ? ? ? String message = e.getLocalizedMessage() == null ? e.getMessage() : e.getLocalizedMessage();
>> + ? ? ? ? ? ? ? ? ? ? ? Status status = new Status(IStatus.ERROR, RuntimeActivator.PLUGIN_ID, message, e);
>> + ? ? ? ? ? ? ? ? ? ? ? ErrorDialog.openError(editor.getEditor().getSite().getShell(), caption, null, status);
>> + ? ? ? ? ? ? ? }
>> + ? ? ? }
>> +
>> + ? ? ? private void openError(EditorState editor, String message) {
>> + ? ? ? ? ? ? ? try {
>> + ? ? ? ? ? ? ? ? ? ? ? Status status = new Status(IStatus.ERROR, RuntimeActivator.PLUGIN_ID, message);
>> + ? ? ? ? ? ? ? ? ? ? ? ErrorDialog.openError(editor.getEditor().getSite().getShell(),
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? caption, null, status);
>> + ? ? ? ? ? ? ? } catch (RuntimeException e) {
>> + ? ? ? ? ? ? ? ? ? ? ? Environment.logException("Problem reporting error: " + message);
>> + ? ? ? ? ? ? ? }
>> + ? ? ? }
>> +
>> + ? ? ? @Override
>> + ? ? ? public String toString() {
>> + ? ? ? ? ? ? ? return "Refactoring: " + builderRule + " - " + caption;
>> + ? ? ? }
>> +}
>>
>> Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java
>> ==============================================================================
>> --- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java ? ? ? Tue Jan ?4 15:12:13 2011 ? ? ? ?(r21603)
>> +++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/OriginTextPrimitive.java ? ? ? Tue Jan ?4 18:07:48 2011 ? ? ? ?(r21604)
>> @@ -17,7 +17,7 @@
>> ? ? ? ?@Override
>> ? ? ? ?protected IStrategoTerm call(IContext env, IWrappedAstNode node) {
>> ? ? ? ? ? ? ? ?String result = node.getNode().yield();
>> - ? ? ? ? ? ? ? result = AutoEditStrategy.setIndentation(result, "");
>> + ? ? ? ? ? ? ? //result = AutoEditStrategy.setIndentation(result, "");
>> ? ? ? ? ? ? ? ?return env.getFactory().makeString(result);
>> ? ? ? ?}
>>
>>
>> Modified: spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java
>> ==============================================================================
>> --- spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java ? ? ? Tue Jan ?4 15:12:13 2011 ? ? ? ?(r21603)
>> +++ spoofax-imp/trunk/org.strategoxt.imp.runtime/src/org/strategoxt/imp/runtime/stratego/TextChangePrimitive.java ? ? ? Tue Jan ?4 18:07:48 2011 ? ? ? ?(r21604)
>> @@ -16,6 +16,7 @@
>> ?import org.spoofax.interpreter.terms.IStrategoTerm;
>> ?import org.strategoxt.imp.runtime.EditorState;
>> ?import org.strategoxt.imp.runtime.Environment;
>> +import org.strategoxt.imp.runtime.stratego.adapter.IStrategoAstNode;
>> ?import org.strategoxt.imp.runtime.stratego.adapter.IWrappedAstNode;
>> ?import org.strategoxt.lang.terms.StrategoInt;
>> ?import org.strategoxt.lang.terms.StrategoTuple;
>> @@ -67,7 +68,17 @@
>> ? ? ? ? ? ? ? ?}
>> ? ? ? ?}
>>
>> - ? ? ? private String applyTextChange(EditorState editor, final int position_start, final int position_end,
>> + ? ? ? public static String applyTextChange(EditorState editor,IStrategoAstNode node,
>> + ? ? ? ? ? ? ? ? ? ? ? final String text) throws BadLocationException {
>> + ? ? ? ? ? ? ? return applyTextChange(
>> + ? ? ? ? ? ? ? ? ? ? ? editor,
>> + ? ? ? ? ? ? ? ? ? ? ? node.getLeftIToken().getStartOffset(),
>> + ? ? ? ? ? ? ? ? ? ? ? node.getRightIToken().getEndOffset(),
>> + ? ? ? ? ? ? ? ? ? ? ? text
>> + ? ? ? ? ? ? ? );
>> + ? ? ? }
>> +
>> + ? ? ? public static String applyTextChange(EditorState editor, final int position_start, final int position_end,
>> ? ? ? ? ? ? ? ? ? ? ? ?final String text) throws BadLocationException {
>> ? ? ? ? ? ? ? ?final IDocument doc = editor.getDocument();
>> ? ? ? ? ? ? ? ?Job job = new UIJob("apply textchange") {
>> @@ -75,7 +86,7 @@
>> ? ? ? ? ? ? ? ? ? ? ? ?@Override
>> ? ? ? ? ? ? ? ? ? ? ? ?public IStatus runInUIThread(IProgressMonitor monitor) {
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?try {
>> - ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? doc.replace(position_start, position_end+1-position_start, text);
>> + ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? doc.replace(position_start, position_end-position_start, text);
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?} catch (BadLocationException e) {
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?// TODO Auto-generated catch block
>> ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?Environment.logException("Bad location of the replaced fragment", e);
>> _______________________________________________
>> Stratego-commits mailing list
>> Stratego-commits at strategoxt.org
>> https://mailman.st.ewi.tudelft.nl/listinfo/stratego-commits
>>
>
>
>
> --
> Rob Vermaas
>
> [email] rob.vermaas at gmail.com
>



-- 
Rob Vermaas

[email] rob.vermaas at gmail.com


